Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Setting inferred volatile on symbol affected by address-of kbhit::ch
Setting inferred volatile on symbol affected by address-of conio_x16_init::$1 = call screensize &conio_screen_width &conio_screen_height 
Setting inferred volatile on symbol affected by address-of conio_x16_init::$1 = call screensize &conio_screen_width &conio_screen_height 
Setting inferred volatile on symbol affected by address-of: setnam::filename_len in asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
Setting inferred volatile on symbol affected by address-of: setnam::filename in asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
Setting inferred volatile on symbol affected by address-of: setlfs::device in asm { ldxdevice lda#1 ldy#0 jsr$ffba  }
Setting inferred volatile on symbol affected by address-of: load::address in asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
Setting inferred volatile on symbol affected by address-of: load::verify in asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
Setting inferred volatile on symbol affected by address-of: load::status in asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
Setting inferred volatile on symbol affected by address-of: getin::ch in asm { jsr$ffe4 stach  }
Inlined call call vera_display_set_scale_double 
Inlined call call vera_display_set_scale_none 
Inlined call call vera_vram_address0 vera_tile_area::mapbase VERA_INC_1 
Inlined call screenlayer::$2 = call vera_layer_get_width conio_screen_layer 
Inlined call screenlayer::$5 = call vera_layer_get_height conio_screen_layer 
Inlined call bitmap_init::$0 = call vera_layer_get_color_depth __bitmap_layer 
Inlined call call vera_vram_address0 bitmap_plot::plotter VERA_INC_0 
Inlined call main::$4 = call textcolor WHITE 
Inlined call main::$5 = call bgcolor BLACK 
Inlined call call vera_layer_show 0 
Inlined call main::$16 = call textcolor YELLOW 
Inlined call main::$18 = call textcolor WHITE 
Inlined call main::$19 = call bgcolor BLACK 
Inlined call main::$24 = call textcolor YELLOW 
Inlined call main::$27 = call textcolor WHITE 
Inlined call main::$28 = call bgcolor BLUE 
Inlined call call __init 
Eliminating unused variable with no statement printf_buffer
Eliminating unused variable with no statement main::$8
Eliminating unused variable with no statement main::$9
Eliminating unused variable with no statement main::$10
Eliminating unused variable with no statement main::$11
Eliminating unused variable with no statement main::$17
Eliminating unused variable with no statement main::$22
Eliminating unused variable with no statement main::$25

CONTROL FLOW GRAPH SSA

void memcpy_in_vram(byte memcpy_in_vram::dest_bank , void* memcpy_in_vram::dest , byte memcpy_in_vram::dest_increment , byte memcpy_in_vram::src_bank , void* memcpy_in_vram::src , byte memcpy_in_vram::src_increment , word memcpy_in_vram::num)
memcpy_in_vram: scope:[memcpy_in_vram]  from insertup::@2 main
  memcpy_in_vram::num#3 = phi( insertup::@2/memcpy_in_vram::num#0, main/memcpy_in_vram::num#1 )
  memcpy_in_vram::dest_bank#2 = phi( insertup::@2/memcpy_in_vram::dest_bank#0, main/memcpy_in_vram::dest_bank#1 )
  memcpy_in_vram::dest_increment#2 = phi( insertup::@2/memcpy_in_vram::dest_increment#0, main/memcpy_in_vram::dest_increment#1 )
  memcpy_in_vram::dest#2 = phi( insertup::@2/memcpy_in_vram::dest#0, main/memcpy_in_vram::dest#1 )
  memcpy_in_vram::src_bank#2 = phi( insertup::@2/memcpy_in_vram::src_bank#0, main/memcpy_in_vram::src_bank#1 )
  memcpy_in_vram::src_increment#2 = phi( insertup::@2/memcpy_in_vram::src_increment#0, main/memcpy_in_vram::src_increment#1 )
  memcpy_in_vram::src#2 = phi( insertup::@2/memcpy_in_vram::src#0, main/memcpy_in_vram::src#1 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  memcpy_in_vram::$0 = byte0  memcpy_in_vram::src#2
  *VERA_ADDRX_L = memcpy_in_vram::$0
  memcpy_in_vram::$1 = byte1  memcpy_in_vram::src#2
  *VERA_ADDRX_M = memcpy_in_vram::$1
  memcpy_in_vram::$2 = memcpy_in_vram::src_increment#2 | memcpy_in_vram::src_bank#2
  *VERA_ADDRX_H = memcpy_in_vram::$2
  *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL
  memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#2
  *VERA_ADDRX_L = memcpy_in_vram::$3
  memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#2
  *VERA_ADDRX_M = memcpy_in_vram::$4
  memcpy_in_vram::$5 = memcpy_in_vram::dest_increment#2 | memcpy_in_vram::dest_bank#2
  *VERA_ADDRX_H = memcpy_in_vram::$5
  memcpy_in_vram::i#0 = 0
  to:memcpy_in_vram::@1
memcpy_in_vram::@1: scope:[memcpy_in_vram]  from memcpy_in_vram memcpy_in_vram::@2
  memcpy_in_vram::num#2 = phi( memcpy_in_vram/memcpy_in_vram::num#3, memcpy_in_vram::@2/memcpy_in_vram::num#4 )
  memcpy_in_vram::i#2 = phi( memcpy_in_vram/memcpy_in_vram::i#0, memcpy_in_vram::@2/memcpy_in_vram::i#1 )
  memcpy_in_vram::$6 = memcpy_in_vram::i#2 < memcpy_in_vram::num#2
  if(memcpy_in_vram::$6) goto memcpy_in_vram::@2
  to:memcpy_in_vram::@return
memcpy_in_vram::@2: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  memcpy_in_vram::num#4 = phi( memcpy_in_vram::@1/memcpy_in_vram::num#2 )
  memcpy_in_vram::i#3 = phi( memcpy_in_vram::@1/memcpy_in_vram::i#2 )
  *VERA_DATA1 = *VERA_DATA0
  memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#3
  to:memcpy_in_vram::@1
memcpy_in_vram::@return: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  return 
  to:@return

void memset_vram(byte memset_vram::vbank , void* memset_vram::vdest , byte memset_vram::data , dword memset_vram::num)
memset_vram: scope:[memset_vram]  from bitmap_clear::@1
  memset_vram::data#3 = phi( bitmap_clear::@1/memset_vram::data#0 )
  memset_vram::num#2 = phi( bitmap_clear::@1/memset_vram::num#0 )
  memset_vram::vbank#1 = phi( bitmap_clear::@1/memset_vram::vbank#0 )
  memset_vram::vdest#1 = phi( bitmap_clear::@1/memset_vram::vdest#0 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  memset_vram::$0 = byte0  memset_vram::vdest#1
  *VERA_ADDRX_L = memset_vram::$0
  memset_vram::$1 = byte1  memset_vram::vdest#1
  *VERA_ADDRX_M = memset_vram::$1
  memset_vram::$2 = VERA_INC_1 | memset_vram::vbank#1
  *VERA_ADDRX_H = memset_vram::$2
  memset_vram::i#0 = 0
  to:memset_vram::@1
memset_vram::@1: scope:[memset_vram]  from memset_vram memset_vram::@2
  memset_vram::data#2 = phi( memset_vram/memset_vram::data#3, memset_vram::@2/memset_vram::data#1 )
  memset_vram::num#1 = phi( memset_vram/memset_vram::num#2, memset_vram::@2/memset_vram::num#3 )
  memset_vram::i#2 = phi( memset_vram/memset_vram::i#0, memset_vram::@2/memset_vram::i#1 )
  memset_vram::$3 = memset_vram::i#2 < memset_vram::num#1
  if(memset_vram::$3) goto memset_vram::@2
  to:memset_vram::@return
memset_vram::@2: scope:[memset_vram]  from memset_vram::@1
  memset_vram::num#3 = phi( memset_vram::@1/memset_vram::num#1 )
  memset_vram::i#3 = phi( memset_vram::@1/memset_vram::i#2 )
  memset_vram::data#1 = phi( memset_vram::@1/memset_vram::data#2 )
  *VERA_DATA0 = memset_vram::data#1
  memset_vram::i#1 = ++ memset_vram::i#3
  to:memset_vram::@1
memset_vram::@return: scope:[memset_vram]  from memset_vram::@1
  return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main::@13 main::@16 main::@9
  CONIO_SCREEN_BANK#50 = phi( main::@13/CONIO_SCREEN_BANK#60, main::@16/CONIO_SCREEN_BANK#39, main::@9/CONIO_SCREEN_BANK#61 )
  CONIO_SCREEN_TEXT#11 = phi( main::@13/CONIO_SCREEN_TEXT#24, main::@16/CONIO_SCREEN_TEXT#25, main::@9/CONIO_SCREEN_TEXT#26 )
  clrscr::line_text#0 = CONIO_SCREEN_TEXT#11
  vera_layer_get_backcolor::layer#0 = conio_screen_layer
  call vera_layer_get_backcolor 
  vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#2
  to:clrscr::@7
clrscr::@7: scope:[clrscr]  from clrscr
  CONIO_SCREEN_BANK#40 = phi( clrscr/CONIO_SCREEN_BANK#50 )
  clrscr::line_text#8 = phi( clrscr/clrscr::line_text#0 )
  vera_layer_get_backcolor::return#3 = phi( clrscr/vera_layer_get_backcolor::return#0 )
  clrscr::$0 = vera_layer_get_backcolor::return#3
  clrscr::$1 = clrscr::$0 << 4
  vera_layer_get_textcolor::layer#0 = conio_screen_layer
  call vera_layer_get_textcolor 
  vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#2
  to:clrscr::@8
clrscr::@8: scope:[clrscr]  from clrscr::@7
  CONIO_SCREEN_BANK#32 = phi( clrscr::@7/CONIO_SCREEN_BANK#40 )
  clrscr::line_text#6 = phi( clrscr::@7/clrscr::line_text#8 )
  vera_layer_get_textcolor::return#3 = phi( clrscr::@7/vera_layer_get_textcolor::return#0 )
  clrscr::$2 = vera_layer_get_textcolor::return#3
  clrscr::$3 = clrscr::$1 | clrscr::$2
  clrscr::color#0 = clrscr::$3
  clrscr::l#0 = 0
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr::@6 clrscr::@8
  clrscr::color#4 = phi( clrscr::@6/clrscr::color#5, clrscr::@8/clrscr::color#0 )
  CONIO_SCREEN_BANK#22 = phi( clrscr::@6/CONIO_SCREEN_BANK#31, clrscr::@8/CONIO_SCREEN_BANK#32 )
  clrscr::line_text#4 = phi( clrscr::@6/clrscr::line_text#1, clrscr::@8/clrscr::line_text#6 )
  clrscr::l#2 = phi( clrscr::@6/clrscr::l#1, clrscr::@8/clrscr::l#0 )
  clrscr::$4 = clrscr::l#2 < conio_height
  if(clrscr::$4) goto clrscr::@2
  to:clrscr::@3
clrscr::@2: scope:[clrscr]  from clrscr::@1
  clrscr::l#5 = phi( clrscr::@1/clrscr::l#2 )
  clrscr::color#3 = phi( clrscr::@1/clrscr::color#4 )
  CONIO_SCREEN_BANK#11 = phi( clrscr::@1/CONIO_SCREEN_BANK#22 )
  clrscr::line_text#2 = phi( clrscr::@1/clrscr::line_text#4 )
  clrscr::ch#0 = clrscr::line_text#2
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  clrscr::$5 = byte0  clrscr::ch#0
  *VERA_ADDRX_L = clrscr::$5
  clrscr::$6 = byte1  clrscr::ch#0
  *VERA_ADDRX_M = clrscr::$6
  clrscr::$7 = CONIO_SCREEN_BANK#11 | VERA_INC_1
  *VERA_ADDRX_H = clrscr::$7
  clrscr::c#0 = 0
  to:clrscr::@4
clrscr::@3: scope:[clrscr]  from clrscr::@1
  conio_cursor_x[conio_screen_layer] = 0
  conio_cursor_y[conio_screen_layer] = 0
  clrscr::$9 = conio_screen_layer * SIZEOF_WORD
  conio_line_text[clrscr::$9] = 0
  to:clrscr::@return
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  CONIO_SCREEN_BANK#41 = phi( clrscr::@2/CONIO_SCREEN_BANK#11, clrscr::@5/CONIO_SCREEN_BANK#51 )
  clrscr::l#4 = phi( clrscr::@2/clrscr::l#5, clrscr::@5/clrscr::l#6 )
  clrscr::line_text#5 = phi( clrscr::@2/clrscr::line_text#2, clrscr::@5/clrscr::line_text#7 )
  clrscr::color#2 = phi( clrscr::@2/clrscr::color#3, clrscr::@5/clrscr::color#1 )
  clrscr::c#2 = phi( clrscr::@2/clrscr::c#0, clrscr::@5/clrscr::c#1 )
  clrscr::$8 = clrscr::c#2 < conio_width
  if(clrscr::$8) goto clrscr::@5
  to:clrscr::@6
clrscr::@5: scope:[clrscr]  from clrscr::@4
  CONIO_SCREEN_BANK#51 = phi( clrscr::@4/CONIO_SCREEN_BANK#41 )
  clrscr::l#6 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_text#7 = phi( clrscr::@4/clrscr::line_text#5 )
  clrscr::c#3 = phi( clrscr::@4/clrscr::c#2 )
  clrscr::color#1 = phi( clrscr::@4/clrscr::color#2 )
  *VERA_DATA0 = ' '
  *VERA_DATA0 = clrscr::color#1
  clrscr::c#1 = ++ clrscr::c#3
  to:clrscr::@4
clrscr::@6: scope:[clrscr]  from clrscr::@4
  clrscr::color#5 = phi( clrscr::@4/clrscr::color#2 )
  CONIO_SCREEN_BANK#31 = phi( clrscr::@4/CONIO_SCREEN_BANK#41 )
  clrscr::l#3 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_text#3 = phi( clrscr::@4/clrscr::line_text#5 )
  clrscr::line_text#1 = clrscr::line_text#3 + conio_rowskip
  clrscr::l#1 = ++ clrscr::l#3
  to:clrscr::@1
clrscr::@return: scope:[clrscr]  from clrscr::@3
  return 
  to:@return

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from conio_x16_init::@1 cscroll::@5 main::@23 main::@30 main::@47 main::@49
  gotoxy::x#9 = phi( conio_x16_init::@1/gotoxy::x#1, cscroll::@5/gotoxy::x#2, main::@23/gotoxy::x#3, main::@30/gotoxy::x#4, main::@47/gotoxy::x#5, main::@49/gotoxy::x#6 )
  gotoxy::y#7 = phi( conio_x16_init::@1/gotoxy::y#1, cscroll::@5/gotoxy::y#2, main::@23/gotoxy::y#3, main::@30/gotoxy::y#4, main::@47/gotoxy::y#5, main::@49/gotoxy::y#6 )
  gotoxy::$0 = gotoxy::y#7 > conio_screen_height
  gotoxy::$1 = ! gotoxy::$0
  if(gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  gotoxy::y#9 = phi( gotoxy/gotoxy::y#7, gotoxy::@3/gotoxy::y#0 )
  gotoxy::x#7 = phi( gotoxy/gotoxy::x#9, gotoxy::@3/gotoxy::x#10 )
  gotoxy::$2 = gotoxy::x#7 >= conio_screen_width
  gotoxy::$3 = ! gotoxy::$2
  if(gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  gotoxy::x#10 = phi( gotoxy/gotoxy::x#9 )
  gotoxy::y#0 = 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  gotoxy::y#8 = phi( gotoxy::@1/gotoxy::y#9, gotoxy::@4/gotoxy::y#10 )
  gotoxy::x#8 = phi( gotoxy::@1/gotoxy::x#7, gotoxy::@4/gotoxy::x#0 )
  conio_cursor_x[conio_screen_layer] = gotoxy::x#8
  conio_cursor_y[conio_screen_layer] = gotoxy::y#8
  gotoxy::$6 = (word)gotoxy::y#8
  gotoxy::$4 = gotoxy::$6 << conio_rowshift
  gotoxy::line_offset#0 = gotoxy::$4
  gotoxy::$5 = conio_screen_layer * SIZEOF_WORD
  conio_line_text[gotoxy::$5] = gotoxy::line_offset#0
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  gotoxy::y#10 = phi( gotoxy::@1/gotoxy::y#9 )
  gotoxy::x#0 = 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

void screensize(byte* screensize::x , byte* screensize::y)
screensize: scope:[screensize]  from conio_x16_init::@3
  screensize::y#1 = phi( conio_x16_init::@3/screensize::y#0 )
  screensize::x#1 = phi( conio_x16_init::@3/screensize::x#0 )
  screensize::$0 = *VERA_DC_HSCALE >> 7
  screensize::hscale#0 = screensize::$0
  screensize::$1 = $28 << screensize::hscale#0
  *screensize::x#1 = screensize::$1
  screensize::$2 = *VERA_DC_VSCALE >> 7
  screensize::vscale#0 = screensize::$2
  screensize::$3 = $1e << screensize::vscale#0
  *screensize::y#1 = screensize::$3
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  return 
  to:@return

void cputc(byte cputc::c)
cputc: scope:[cputc]  from cputs::@2
  CONIO_SCREEN_BANK#33 = phi( cputs::@2/CONIO_SCREEN_BANK#42 )
  cputc::c#3 = phi( cputs::@2/cputc::c#0 )
  CONIO_SCREEN_TEXT#27 = phi( cputs::@2/CONIO_SCREEN_TEXT#37 )
  vera_layer_get_color::layer#0 = conio_screen_layer
  call vera_layer_get_color 
  vera_layer_get_color::return#0 = vera_layer_get_color::return#3
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc
  CONIO_SCREEN_BANK#23 = phi( cputc/CONIO_SCREEN_BANK#33 )
  cputc::c#1 = phi( cputc/cputc::c#3 )
  CONIO_SCREEN_TEXT#12 = phi( cputc/CONIO_SCREEN_TEXT#27 )
  vera_layer_get_color::return#5 = phi( cputc/vera_layer_get_color::return#0 )
  cputc::$0 = vera_layer_get_color::return#5
  cputc::color#0 = cputc::$0
  cputc::$15 = conio_screen_layer * SIZEOF_WORD
  cputc::$1 = CONIO_SCREEN_TEXT#12 + conio_line_text[cputc::$15]
  cputc::conio_addr#0 = cputc::$1
  cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
  cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2
  cputc::$3 = cputc::c#1 == '
'
  if(cputc::$3) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc::@7
  CONIO_SCREEN_TEXT#95 = phi( cputc::@7/CONIO_SCREEN_TEXT#12 )
  call cputln 
  to:cputc::@8
cputc::@8: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc::@7
  CONIO_SCREEN_TEXT#108 = phi( cputc::@7/CONIO_SCREEN_TEXT#12 )
  cputc::color#1 = phi( cputc::@7/cputc::color#0 )
  cputc::c#2 = phi( cputc::@7/cputc::c#1 )
  CONIO_SCREEN_BANK#12 = phi( cputc::@7/CONIO_SCREEN_BANK#23 )
  cputc::conio_addr#2 = phi( cputc::@7/cputc::conio_addr#1 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  cputc::$4 = byte0  cputc::conio_addr#2
  *VERA_ADDRX_L = cputc::$4
  cputc::$5 = byte1  cputc::conio_addr#2
  *VERA_ADDRX_M = cputc::$5
  cputc::$6 = CONIO_SCREEN_BANK#12 | VERA_INC_1
  *VERA_ADDRX_H = cputc::$6
  *VERA_DATA0 = cputc::c#2
  *VERA_DATA0 = cputc::color#1
  conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer]
  cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer]
  cputc::$17 = 0 != cputc::scroll_enable#0
  if(cputc::$17) goto cputc::@5
  to:cputc::@3
cputc::@5: scope:[cputc]  from cputc::@2
  CONIO_SCREEN_TEXT#103 = phi( cputc::@2/CONIO_SCREEN_TEXT#108 )
  cputc::$11 = conio_cursor_x[conio_screen_layer] == conio_screen_width
  cputc::$12 = ! cputc::$11
  if(cputc::$12) goto cputc::@return
  to:cputc::@6
cputc::@3: scope:[cputc]  from cputc::@2
  CONIO_SCREEN_TEXT#102 = phi( cputc::@2/CONIO_SCREEN_TEXT#108 )
  cputc::$16 = (word)conio_cursor_x[conio_screen_layer]
  cputc::$8 = cputc::$16 == conio_width
  cputc::$9 = ! cputc::$8
  if(cputc::$9) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  CONIO_SCREEN_TEXT#96 = phi( cputc::@3/CONIO_SCREEN_TEXT#102 )
  call cputln 
  to:cputc::@9
cputc::@9: scope:[cputc]  from cputc::@4
  to:cputc::@return
cputc::@6: scope:[cputc]  from cputc::@5
  CONIO_SCREEN_TEXT#97 = phi( cputc::@5/CONIO_SCREEN_TEXT#103 )
  call cputln 
  to:cputc::@10
cputc::@10: scope:[cputc]  from cputc::@6
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@10 cputc::@3 cputc::@5 cputc::@8 cputc::@9
  return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@4 cputc::@6
  CONIO_SCREEN_TEXT#86 = phi( cputc::@1/CONIO_SCREEN_TEXT#95, cputc::@4/CONIO_SCREEN_TEXT#96, cputc::@6/CONIO_SCREEN_TEXT#97 )
  cputln::$2 = conio_screen_layer * SIZEOF_WORD
  cputln::temp#0 = conio_line_text[cputln::$2]
  cputln::temp#1 = cputln::temp#0 + conio_rowskip
  cputln::$3 = conio_screen_layer * SIZEOF_WORD
  conio_line_text[cputln::$3] = cputln::temp#1
  conio_cursor_x[conio_screen_layer] = 0
  conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer]
  call cscroll 
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

void cputs(const byte* cputs::s)
cputs: scope:[cputs]  from main::@11 main::@14 main::@24 main::@25 main::@26 main::@27 main::@48
  CONIO_SCREEN_BANK#62 = phi( main::@11/CONIO_SCREEN_BANK#69, main::@14/CONIO_SCREEN_BANK#66, main::@24/CONIO_SCREEN_BANK#70, main::@25/CONIO_SCREEN_BANK#71, main::@26/CONIO_SCREEN_BANK#72, main::@27/CONIO_SCREEN_BANK#73, main::@48/CONIO_SCREEN_BANK#74 )
  CONIO_SCREEN_TEXT#59 = phi( main::@11/CONIO_SCREEN_TEXT#71, main::@14/CONIO_SCREEN_TEXT#72, main::@24/CONIO_SCREEN_TEXT#73, main::@25/CONIO_SCREEN_TEXT#74, main::@26/CONIO_SCREEN_TEXT#75, main::@27/CONIO_SCREEN_TEXT#76, main::@48/CONIO_SCREEN_TEXT#77 )
  cputs::s#9 = phi( main::@11/cputs::s#5, main::@14/cputs::s#7, main::@24/cputs::s#1, main::@25/cputs::s#2, main::@26/cputs::s#3, main::@27/cputs::s#4, main::@48/cputs::s#6 )
  cputs::c#0 = 0
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@3
  CONIO_SCREEN_BANK#52 = phi( cputs/CONIO_SCREEN_BANK#62, cputs::@3/CONIO_SCREEN_BANK#63 )
  CONIO_SCREEN_TEXT#48 = phi( cputs/CONIO_SCREEN_TEXT#59, cputs::@3/CONIO_SCREEN_TEXT#60 )
  cputs::s#8 = phi( cputs/cputs::s#9, cputs::@3/cputs::s#10 )
  cputs::c#1 = *cputs::s#8
  cputs::$0 = cputs::c#1
  cputs::s#0 = ++ cputs::s#8
  cputs::$2 = 0 != cputs::$0
  if(cputs::$2) goto cputs::@2
  to:cputs::@return
cputs::@2: scope:[cputs]  from cputs::@1
  CONIO_SCREEN_BANK#42 = phi( cputs::@1/CONIO_SCREEN_BANK#52 )
  cputs::s#11 = phi( cputs::@1/cputs::s#0 )
  CONIO_SCREEN_TEXT#37 = phi( cputs::@1/CONIO_SCREEN_TEXT#48 )
  cputs::c#2 = phi( cputs::@1/cputs::c#1 )
  cputc::c#0 = cputs::c#2
  call cputc 
  to:cputs::@3
cputs::@3: scope:[cputs]  from cputs::@2
  CONIO_SCREEN_BANK#63 = phi( cputs::@2/CONIO_SCREEN_BANK#42 )
  CONIO_SCREEN_TEXT#60 = phi( cputs::@2/CONIO_SCREEN_TEXT#37 )
  cputs::s#10 = phi( cputs::@2/cputs::s#11 )
  to:cputs::@1
cputs::@return: scope:[cputs]  from cputs::@1
  return 
  to:@return

byte kbhit()
kbhit: scope:[kbhit]  from main::@1 main::@4
  kbhit::ch = 0
  kickasm( uses kbhit::chptr uses kbhit::IN_DEV uses kbhit::GETIN) {{ jsr _kbhit
        bne L3

        jmp continue1

        .var via1 = $9f60                  //VIA#1
        .var d1pra = via1+1

    _kbhit:
        ldy     d1pra       // The count of keys pressed is stored in RAM bank 0.
        stz     d1pra       // Set d1pra to zero to access RAM bank 0.
        lda     $A00A       // Get number of characters from this address in the ROM of the CX16 (ROM 38).
        sty     d1pra       // Set d1pra to previous value.
        rts

    L3:
        ldy     IN_DEV          // Save current input device
        stz     IN_DEV          // Keyboard
        phy
        jsr     GETIN           // Read char, and return in .A
        ply
        sta     chptr           // Store the character read in ch
        sty     IN_DEV          // Restore input device
        ldx     #>$0000
        rts

    continue1:
        nop
      }}
  kbhit::return#0 = kbhit::ch
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  kbhit::return#4 = phi( kbhit/kbhit::return#0 )
  kbhit::return#1 = kbhit::return#4
  return 
  to:@return

byte vera_display_get_hscale()
vera_display_get_hscale: scope:[vera_display_get_hscale]  from bitmap_init::@16
  vera_display_get_hscale::scale#0 = 0
  vera_display_get_hscale::s#0 = 1
  to:vera_display_get_hscale::@1
vera_display_get_hscale::@1: scope:[vera_display_get_hscale]  from vera_display_get_hscale vera_display_get_hscale::@2
  vera_display_get_hscale::scale#4 = phi( vera_display_get_hscale/vera_display_get_hscale::scale#0, vera_display_get_hscale::@2/vera_display_get_hscale::scale#3 )
  vera_display_get_hscale::s#2 = phi( vera_display_get_hscale/vera_display_get_hscale::s#0, vera_display_get_hscale::@2/vera_display_get_hscale::s#1 )
  vera_display_get_hscale::$0 = *VERA_DC_HSCALE == vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]
  vera_display_get_hscale::$1 = ! vera_display_get_hscale::$0
  if(vera_display_get_hscale::$1) goto vera_display_get_hscale::@2
  to:vera_display_get_hscale::@4
vera_display_get_hscale::@2: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@1
  vera_display_get_hscale::scale#3 = phi( vera_display_get_hscale::@1/vera_display_get_hscale::scale#4 )
  vera_display_get_hscale::s#3 = phi( vera_display_get_hscale::@1/vera_display_get_hscale::s#2 )
  vera_display_get_hscale::s#1 = vera_display_get_hscale::s#3 + rangenext(1,3)
  vera_display_get_hscale::$2 = vera_display_get_hscale::s#1 != rangelast(1,3)
  if(vera_display_get_hscale::$2) goto vera_display_get_hscale::@1
  to:vera_display_get_hscale::@3
vera_display_get_hscale::@4: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@1
  vera_display_get_hscale::s#4 = phi( vera_display_get_hscale::@1/vera_display_get_hscale::s#2 )
  vera_display_get_hscale::scale#1 = vera_display_get_hscale::s#4
  to:vera_display_get_hscale::@3
vera_display_get_hscale::@3: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@2 vera_display_get_hscale::@4
  vera_display_get_hscale::scale#2 = phi( vera_display_get_hscale::@2/vera_display_get_hscale::scale#3, vera_display_get_hscale::@4/vera_display_get_hscale::scale#1 )
  vera_display_get_hscale::return#0 = vera_display_get_hscale::scale#2
  to:vera_display_get_hscale::@return
vera_display_get_hscale::@return: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@3
  vera_display_get_hscale::return#3 = phi( vera_display_get_hscale::@3/vera_display_get_hscale::return#0 )
  vera_display_get_hscale::return#1 = vera_display_get_hscale::return#3
  return 
  to:@return

byte vera_display_get_vscale()
vera_display_get_vscale: scope:[vera_display_get_vscale]  from bitmap_init::@17
  vera_display_get_vscale::scale#0 = 0
  vera_display_get_vscale::s#0 = 1
  to:vera_display_get_vscale::@1
vera_display_get_vscale::@1: scope:[vera_display_get_vscale]  from vera_display_get_vscale vera_display_get_vscale::@2
  vera_display_get_vscale::scale#4 = phi( vera_display_get_vscale/vera_display_get_vscale::scale#0, vera_display_get_vscale::@2/vera_display_get_vscale::scale#3 )
  vera_display_get_vscale::s#2 = phi( vera_display_get_vscale/vera_display_get_vscale::s#0, vera_display_get_vscale::@2/vera_display_get_vscale::s#1 )
  vera_display_get_vscale::$0 = *VERA_DC_VSCALE == vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]
  vera_display_get_vscale::$1 = ! vera_display_get_vscale::$0
  if(vera_display_get_vscale::$1) goto vera_display_get_vscale::@2
  to:vera_display_get_vscale::@4
vera_display_get_vscale::@2: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@1
  vera_display_get_vscale::scale#3 = phi( vera_display_get_vscale::@1/vera_display_get_vscale::scale#4 )
  vera_display_get_vscale::s#3 = phi( vera_display_get_vscale::@1/vera_display_get_vscale::s#2 )
  vera_display_get_vscale::s#1 = vera_display_get_vscale::s#3 + rangenext(1,3)
  vera_display_get_vscale::$2 = vera_display_get_vscale::s#1 != rangelast(1,3)
  if(vera_display_get_vscale::$2) goto vera_display_get_vscale::@1
  to:vera_display_get_vscale::@3
vera_display_get_vscale::@4: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@1
  vera_display_get_vscale::s#4 = phi( vera_display_get_vscale::@1/vera_display_get_vscale::s#2 )
  vera_display_get_vscale::scale#1 = vera_display_get_vscale::s#4
  to:vera_display_get_vscale::@3
vera_display_get_vscale::@3: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@2 vera_display_get_vscale::@4
  vera_display_get_vscale::scale#2 = phi( vera_display_get_vscale::@2/vera_display_get_vscale::scale#3, vera_display_get_vscale::@4/vera_display_get_vscale::scale#1 )
  vera_display_get_vscale::return#0 = vera_display_get_vscale::scale#2
  to:vera_display_get_vscale::@return
vera_display_get_vscale::@return: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@3
  vera_display_get_vscale::return#3 = phi( vera_display_get_vscale::@3/vera_display_get_vscale::return#0 )
  vera_display_get_vscale::return#1 = vera_display_get_vscale::return#3
  return 
  to:@return

void vera_layer_set_config(byte vera_layer_set_config::layer , byte vera_layer_set_config::config)
vera_layer_set_config: scope:[vera_layer_set_config]  from vera_layer_mode_bitmap::@10 vera_layer_mode_tile::@24
  vera_layer_set_config::config#2 = phi( vera_layer_mode_bitmap::@10/vera_layer_set_config::config#1, vera_layer_mode_tile::@24/vera_layer_set_config::config#0 )
  vera_layer_set_config::layer#2 = phi( vera_layer_mode_bitmap::@10/vera_layer_set_config::layer#1, vera_layer_mode_tile::@24/vera_layer_set_config::layer#0 )
  vera_layer_set_config::$0 = vera_layer_set_config::layer#2 * SIZEOF_POINTER
  vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0]
  *vera_layer_set_config::addr#0 = vera_layer_set_config::config#2
  to:vera_layer_set_config::@return
vera_layer_set_config::@return: scope:[vera_layer_set_config]  from vera_layer_set_config
  return 
  to:@return

void vera_layer_set_text_color_mode(byte vera_layer_set_text_color_mode::layer , byte vera_layer_set_text_color_mode::color_mode)
vera_layer_set_text_color_mode: scope:[vera_layer_set_text_color_mode]  from vera_layer_mode_text::@2 vera_layer_mode_text::@3
  vera_layer_set_text_color_mode::color_mode#2 = phi( vera_layer_mode_text::@2/vera_layer_set_text_color_mode::color_mode#0, vera_layer_mode_text::@3/vera_layer_set_text_color_mode::color_mode#1 )
  vera_layer_set_text_color_mode::layer#2 = phi( vera_layer_mode_text::@2/vera_layer_set_text_color_mode::layer#0, vera_layer_mode_text::@3/vera_layer_set_text_color_mode::layer#1 )
  vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#2 * SIZEOF_POINTER
  vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0]
  *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C
  *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 | vera_layer_set_text_color_mode::color_mode#2
  to:vera_layer_set_text_color_mode::@return
vera_layer_set_text_color_mode::@return: scope:[vera_layer_set_text_color_mode]  from vera_layer_set_text_color_mode
  return 
  to:@return

void vera_layer_set_mapbase(byte vera_layer_set_mapbase::layer , byte vera_layer_set_mapbase::mapbase)
vera_layer_set_mapbase: scope:[vera_layer_set_mapbase]  from conio_x16_init::@7 conio_x16_init::@8 vera_layer_mode_tile::@33
  vera_layer_set_mapbase::mapbase#3 = phi( conio_x16_init::@7/vera_layer_set_mapbase::mapbase#1, conio_x16_init::@8/vera_layer_set_mapbase::mapbase#2, vera_layer_mode_tile::@33/vera_layer_set_mapbase::mapbase#0 )
  vera_layer_set_mapbase::layer#3 = phi( conio_x16_init::@7/vera_layer_set_mapbase::layer#1, conio_x16_init::@8/vera_layer_set_mapbase::layer#2, vera_layer_mode_tile::@33/vera_layer_set_mapbase::layer#0 )
  vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 * SIZEOF_POINTER
  vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0]
  *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3
  to:vera_layer_set_mapbase::@return
vera_layer_set_mapbase::@return: scope:[vera_layer_set_mapbase]  from vera_layer_set_mapbase
  return 
  to:@return

byte vera_layer_get_mapbase_bank(byte vera_layer_get_mapbase_bank::layer)
vera_layer_get_mapbase_bank: scope:[vera_layer_get_mapbase_bank]  from screenlayer
  vera_layer_get_mapbase_bank::layer#1 = phi( screenlayer/vera_layer_get_mapbase_bank::layer#0 )
  vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#1]
  to:vera_layer_get_mapbase_bank::@return
vera_layer_get_mapbase_bank::@return: scope:[vera_layer_get_mapbase_bank]  from vera_layer_get_mapbase_bank
  vera_layer_get_mapbase_bank::return#3 = phi( vera_layer_get_mapbase_bank/vera_layer_get_mapbase_bank::return#0 )
  vera_layer_get_mapbase_bank::return#1 = vera_layer_get_mapbase_bank::return#3
  return 
  to:@return

word vera_layer_get_mapbase_offset(byte vera_layer_get_mapbase_offset::layer)
vera_layer_get_mapbase_offset: scope:[vera_layer_get_mapbase_offset]  from screenlayer::@3
  vera_layer_get_mapbase_offset::layer#1 = phi( screenlayer::@3/vera_layer_get_mapbase_offset::layer#0 )
  vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#1 * SIZEOF_WORD
  vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0]
  to:vera_layer_get_mapbase_offset::@return
vera_layer_get_mapbase_offset::@return: scope:[vera_layer_get_mapbase_offset]  from vera_layer_get_mapbase_offset
  vera_layer_get_mapbase_offset::return#3 = phi( vera_layer_get_mapbase_offset/vera_layer_get_mapbase_offset::return#0 )
  vera_layer_get_mapbase_offset::return#1 = vera_layer_get_mapbase_offset::return#3
  return 
  to:@return

void vera_layer_set_tilebase(byte vera_layer_set_tilebase::layer , byte vera_layer_set_tilebase::tilebase)
vera_layer_set_tilebase: scope:[vera_layer_set_tilebase]  from vera_layer_mode_bitmap::@13 vera_layer_mode_tile::@32
  vera_layer_set_tilebase::tilebase#2 = phi( vera_layer_mode_bitmap::@13/vera_layer_set_tilebase::tilebase#1, vera_layer_mode_tile::@32/vera_layer_set_tilebase::tilebase#0 )
  vera_layer_set_tilebase::layer#2 = phi( vera_layer_mode_bitmap::@13/vera_layer_set_tilebase::layer#1, vera_layer_mode_tile::@32/vera_layer_set_tilebase::layer#0 )
  vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 * SIZEOF_POINTER
  vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0]
  *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#2
  to:vera_layer_set_tilebase::@return
vera_layer_set_tilebase::@return: scope:[vera_layer_set_tilebase]  from vera_layer_set_tilebase
  return 
  to:@return

byte vera_layer_set_textcolor(byte vera_layer_set_textcolor::layer , byte vera_layer_set_textcolor::color)
vera_layer_set_textcolor: scope:[vera_layer_set_textcolor]  from conio_x16_init::@5 main::textcolor1 main::textcolor2 main::textcolor3 main::textcolor4 main::textcolor5
  vera_layer_set_textcolor::color#6 = phi( conio_x16_init::@5/vera_layer_set_textcolor::color#0, main::textcolor1/vera_layer_set_textcolor::color#1, main::textcolor2/vera_layer_set_textcolor::color#2, main::textcolor3/vera_layer_set_textcolor::color#3, main::textcolor4/vera_layer_set_textcolor::color#4, main::textcolor5/vera_layer_set_textcolor::color#5 )
  vera_layer_set_textcolor::layer#6 = phi( conio_x16_init::@5/vera_layer_set_textcolor::layer#0, main::textcolor1/vera_layer_set_textcolor::layer#1, main::textcolor2/vera_layer_set_textcolor::layer#2, main::textcolor3/vera_layer_set_textcolor::layer#3, main::textcolor4/vera_layer_set_textcolor::layer#4, main::textcolor5/vera_layer_set_textcolor::layer#5 )
  vera_layer_set_textcolor::old#0 = vera_layer_textcolor[vera_layer_set_textcolor::layer#6]
  vera_layer_textcolor[vera_layer_set_textcolor::layer#6] = vera_layer_set_textcolor::color#6
  vera_layer_set_textcolor::return#0 = vera_layer_set_textcolor::old#0
  to:vera_layer_set_textcolor::@return
vera_layer_set_textcolor::@return: scope:[vera_layer_set_textcolor]  from vera_layer_set_textcolor
  vera_layer_set_textcolor::return#8 = phi( vera_layer_set_textcolor/vera_layer_set_textcolor::return#0 )
  vera_layer_set_textcolor::return#1 = vera_layer_set_textcolor::return#8
  return 
  to:@return

byte vera_layer_get_textcolor(byte vera_layer_get_textcolor::layer)
vera_layer_get_textcolor: scope:[vera_layer_get_textcolor]  from clrscr::@7
  vera_layer_get_textcolor::layer#1 = phi( clrscr::@7/vera_layer_get_textcolor::layer#0 )
  vera_layer_get_textcolor::return#1 = vera_layer_textcolor[vera_layer_get_textcolor::layer#1]
  to:vera_layer_get_textcolor::@return
vera_layer_get_textcolor::@return: scope:[vera_layer_get_textcolor]  from vera_layer_get_textcolor
  vera_layer_get_textcolor::return#4 = phi( vera_layer_get_textcolor/vera_layer_get_textcolor::return#1 )
  vera_layer_get_textcolor::return#2 = vera_layer_get_textcolor::return#4
  return 
  to:@return

byte vera_layer_set_backcolor(byte vera_layer_set_backcolor::layer , byte vera_layer_set_backcolor::color)
vera_layer_set_backcolor: scope:[vera_layer_set_backcolor]  from conio_x16_init::@6 main::bgcolor1 main::bgcolor2 main::bgcolor3
  vera_layer_set_backcolor::color#4 = phi( conio_x16_init::@6/vera_layer_set_backcolor::color#0, main::bgcolor1/vera_layer_set_backcolor::color#1, main::bgcolor2/vera_layer_set_backcolor::color#2, main::bgcolor3/vera_layer_set_backcolor::color#3 )
  vera_layer_set_backcolor::layer#4 = phi( conio_x16_init::@6/vera_layer_set_backcolor::layer#0, main::bgcolor1/vera_layer_set_backcolor::layer#1, main::bgcolor2/vera_layer_set_backcolor::layer#2, main::bgcolor3/vera_layer_set_backcolor::layer#3 )
  vera_layer_set_backcolor::old#0 = vera_layer_backcolor[vera_layer_set_backcolor::layer#4]
  vera_layer_backcolor[vera_layer_set_backcolor::layer#4] = vera_layer_set_backcolor::color#4
  vera_layer_set_backcolor::return#0 = vera_layer_set_backcolor::old#0
  to:vera_layer_set_backcolor::@return
vera_layer_set_backcolor::@return: scope:[vera_layer_set_backcolor]  from vera_layer_set_backcolor
  vera_layer_set_backcolor::return#6 = phi( vera_layer_set_backcolor/vera_layer_set_backcolor::return#0 )
  vera_layer_set_backcolor::return#1 = vera_layer_set_backcolor::return#6
  return 
  to:@return

byte vera_layer_get_backcolor(byte vera_layer_get_backcolor::layer)
vera_layer_get_backcolor: scope:[vera_layer_get_backcolor]  from clrscr
  vera_layer_get_backcolor::layer#1 = phi( clrscr/vera_layer_get_backcolor::layer#0 )
  vera_layer_get_backcolor::return#1 = vera_layer_backcolor[vera_layer_get_backcolor::layer#1]
  to:vera_layer_get_backcolor::@return
vera_layer_get_backcolor::@return: scope:[vera_layer_get_backcolor]  from vera_layer_get_backcolor
  vera_layer_get_backcolor::return#4 = phi( vera_layer_get_backcolor/vera_layer_get_backcolor::return#1 )
  vera_layer_get_backcolor::return#2 = vera_layer_get_backcolor::return#4
  return 
  to:@return

byte vera_layer_get_color(byte vera_layer_get_color::layer)
vera_layer_get_color: scope:[vera_layer_get_color]  from clearline cputc
  vera_layer_get_color::layer#2 = phi( clearline/vera_layer_get_color::layer#1, cputc/vera_layer_get_color::layer#0 )
  vera_layer_get_color::$3 = vera_layer_get_color::layer#2 * SIZEOF_POINTER
  vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3]
  vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C
  vera_layer_get_color::$4 = 0 != vera_layer_get_color::$0
  if(vera_layer_get_color::$4) goto vera_layer_get_color::@1
  to:vera_layer_get_color::@2
vera_layer_get_color::@1: scope:[vera_layer_get_color]  from vera_layer_get_color
  vera_layer_get_color::layer#3 = phi( vera_layer_get_color/vera_layer_get_color::layer#2 )
  vera_layer_get_color::return#1 = vera_layer_textcolor[vera_layer_get_color::layer#3]
  to:vera_layer_get_color::@return
vera_layer_get_color::@2: scope:[vera_layer_get_color]  from vera_layer_get_color
  vera_layer_get_color::layer#4 = phi( vera_layer_get_color/vera_layer_get_color::layer#2 )
  vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#4] << 4
  vera_layer_get_color::$2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#4]
  vera_layer_get_color::return#2 = vera_layer_get_color::$2
  to:vera_layer_get_color::@return
vera_layer_get_color::@return: scope:[vera_layer_get_color]  from vera_layer_get_color::@1 vera_layer_get_color::@2
  vera_layer_get_color::return#6 = phi( vera_layer_get_color::@1/vera_layer_get_color::return#1, vera_layer_get_color::@2/vera_layer_get_color::return#2 )
  vera_layer_get_color::return#3 = vera_layer_get_color::return#6
  return 
  to:@return

byte vera_layer_get_rowshift(byte vera_layer_get_rowshift::layer)
vera_layer_get_rowshift: scope:[vera_layer_get_rowshift]  from screenlayer::@1
  vera_layer_get_rowshift::layer#1 = phi( screenlayer::@1/vera_layer_get_rowshift::layer#0 )
  vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#1]
  to:vera_layer_get_rowshift::@return
vera_layer_get_rowshift::@return: scope:[vera_layer_get_rowshift]  from vera_layer_get_rowshift
  vera_layer_get_rowshift::return#3 = phi( vera_layer_get_rowshift/vera_layer_get_rowshift::return#0 )
  vera_layer_get_rowshift::return#1 = vera_layer_get_rowshift::return#3
  return 
  to:@return

word vera_layer_get_rowskip(byte vera_layer_get_rowskip::layer)
vera_layer_get_rowskip: scope:[vera_layer_get_rowskip]  from screenlayer::@5
  vera_layer_get_rowskip::layer#1 = phi( screenlayer::@5/vera_layer_get_rowskip::layer#0 )
  vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#1 * SIZEOF_WORD
  vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0]
  to:vera_layer_get_rowskip::@return
vera_layer_get_rowskip::@return: scope:[vera_layer_get_rowskip]  from vera_layer_get_rowskip
  vera_layer_get_rowskip::return#3 = phi( vera_layer_get_rowskip/vera_layer_get_rowskip::return#0 )
  vera_layer_get_rowskip::return#1 = vera_layer_get_rowskip::return#3
  return 
  to:@return

void vera_layer_mode_tile(byte vera_layer_mode_tile::layer , dword vera_layer_mode_tile::mapbase_address , dword vera_layer_mode_tile::tilebase_address , word vera_layer_mode_tile::mapwidth , word vera_layer_mode_tile::mapheight , byte vera_layer_mode_tile::tilewidth , byte vera_layer_mode_tile::tileheight , byte vera_layer_mode_tile::color_depth)
vera_layer_mode_tile: scope:[vera_layer_mode_tile]  from main::@17 vera_layer_mode_text
  vera_layer_mode_tile::tileheight#31 = phi( main::@17/vera_layer_mode_tile::tileheight#1, vera_layer_mode_text/vera_layer_mode_tile::tileheight#0 )
  vera_layer_mode_tile::tilewidth#27 = phi( main::@17/vera_layer_mode_tile::tilewidth#1, vera_layer_mode_text/vera_layer_mode_tile::tilewidth#0 )
  vera_layer_mode_tile::tilebase_address#27 = phi( main::@17/vera_layer_mode_tile::tilebase_address#2, vera_layer_mode_text/vera_layer_mode_tile::tilebase_address#1 )
  vera_layer_mode_tile::mapbase_address#26 = phi( main::@17/vera_layer_mode_tile::mapbase_address#2, vera_layer_mode_text/vera_layer_mode_tile::mapbase_address#1 )
  vera_layer_mode_tile::mapheight#19 = phi( main::@17/vera_layer_mode_tile::mapheight#1, vera_layer_mode_text/vera_layer_mode_tile::mapheight#0 )
  vera_layer_mode_tile::layer#31 = phi( main::@17/vera_layer_mode_tile::layer#1, vera_layer_mode_text/vera_layer_mode_tile::layer#0 )
  vera_layer_mode_tile::mapwidth#11 = phi( main::@17/vera_layer_mode_tile::mapwidth#1, vera_layer_mode_text/vera_layer_mode_tile::mapwidth#0 )
  vera_layer_mode_tile::color_depth#2 = phi( main::@17/vera_layer_mode_tile::color_depth#1, vera_layer_mode_text/vera_layer_mode_tile::color_depth#0 )
  vera_layer_mode_tile::config#0 = 0
  if(vera_layer_mode_tile::color_depth#2==1) goto vera_layer_mode_tile::@4
  to:vera_layer_mode_tile::@1
vera_layer_mode_tile::@4: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  vera_layer_mode_tile::tileheight#27 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tileheight#31 )
  vera_layer_mode_tile::tilewidth#23 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilewidth#27 )
  vera_layer_mode_tile::tilebase_address#23 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilebase_address#27 )
  vera_layer_mode_tile::mapbase_address#22 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapbase_address#26 )
  vera_layer_mode_tile::mapheight#15 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapheight#19 )
  vera_layer_mode_tile::layer#23 = phi( vera_layer_mode_tile/vera_layer_mode_tile::layer#31 )
  vera_layer_mode_tile::mapwidth#7 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapwidth#11 )
  vera_layer_mode_tile::config#13 = phi( vera_layer_mode_tile/vera_layer_mode_tile::config#0 )
  vera_layer_mode_tile::config#1 = vera_layer_mode_tile::config#13 | VERA_LAYER_COLOR_DEPTH_1BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@1: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  vera_layer_mode_tile::tileheight#32 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tileheight#31 )
  vera_layer_mode_tile::tilewidth#28 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilewidth#27 )
  vera_layer_mode_tile::tilebase_address#28 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilebase_address#27 )
  vera_layer_mode_tile::mapbase_address#27 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapbase_address#26 )
  vera_layer_mode_tile::mapheight#20 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapheight#19 )
  vera_layer_mode_tile::layer#32 = phi( vera_layer_mode_tile/vera_layer_mode_tile::layer#31 )
  vera_layer_mode_tile::mapwidth#12 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapwidth#11 )
  vera_layer_mode_tile::config#26 = phi( vera_layer_mode_tile/vera_layer_mode_tile::config#0 )
  vera_layer_mode_tile::color_depth#3 = phi( vera_layer_mode_tile/vera_layer_mode_tile::color_depth#2 )
  if(vera_layer_mode_tile::color_depth#3==2) goto vera_layer_mode_tile::@5
  to:vera_layer_mode_tile::@2
vera_layer_mode_tile::@5: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  vera_layer_mode_tile::tileheight#28 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tileheight#32 )
  vera_layer_mode_tile::tilewidth#24 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilewidth#28 )
  vera_layer_mode_tile::tilebase_address#24 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilebase_address#28 )
  vera_layer_mode_tile::mapbase_address#23 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapbase_address#27 )
  vera_layer_mode_tile::mapheight#16 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapheight#20 )
  vera_layer_mode_tile::layer#24 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::layer#32 )
  vera_layer_mode_tile::mapwidth#8 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapwidth#12 )
  vera_layer_mode_tile::config#14 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::config#26 )
  vera_layer_mode_tile::config#2 = vera_layer_mode_tile::config#14 | VERA_LAYER_COLOR_DEPTH_2BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@2: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  vera_layer_mode_tile::tileheight#33 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tileheight#32 )
  vera_layer_mode_tile::tilewidth#29 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilewidth#28 )
  vera_layer_mode_tile::tilebase_address#29 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilebase_address#28 )
  vera_layer_mode_tile::mapbase_address#28 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapbase_address#27 )
  vera_layer_mode_tile::mapheight#21 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapheight#20 )
  vera_layer_mode_tile::layer#33 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::layer#32 )
  vera_layer_mode_tile::mapwidth#13 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapwidth#12 )
  vera_layer_mode_tile::config#27 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::config#26 )
  vera_layer_mode_tile::color_depth#4 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::color_depth#3 )
  if(vera_layer_mode_tile::color_depth#4==4) goto vera_layer_mode_tile::@6
  to:vera_layer_mode_tile::@3
vera_layer_mode_tile::@6: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  vera_layer_mode_tile::tileheight#29 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tileheight#33 )
  vera_layer_mode_tile::tilewidth#25 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilewidth#29 )
  vera_layer_mode_tile::tilebase_address#25 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilebase_address#29 )
  vera_layer_mode_tile::mapbase_address#24 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapbase_address#28 )
  vera_layer_mode_tile::mapheight#17 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapheight#21 )
  vera_layer_mode_tile::layer#25 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::layer#33 )
  vera_layer_mode_tile::mapwidth#9 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapwidth#13 )
  vera_layer_mode_tile::config#15 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::config#27 )
  vera_layer_mode_tile::config#3 = vera_layer_mode_tile::config#15 | VERA_LAYER_COLOR_DEPTH_4BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@3: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  vera_layer_mode_tile::tileheight#26 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tileheight#33 )
  vera_layer_mode_tile::tilewidth#22 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilewidth#29 )
  vera_layer_mode_tile::tilebase_address#22 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilebase_address#29 )
  vera_layer_mode_tile::mapbase_address#21 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapbase_address#28 )
  vera_layer_mode_tile::mapheight#14 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapheight#21 )
  vera_layer_mode_tile::layer#22 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::layer#33 )
  vera_layer_mode_tile::mapwidth#6 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapwidth#13 )
  vera_layer_mode_tile::config#28 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::config#27 )
  vera_layer_mode_tile::color_depth#5 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::color_depth#4 )
  if(vera_layer_mode_tile::color_depth#5==8) goto vera_layer_mode_tile::@7
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@7: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3
  vera_layer_mode_tile::tileheight#30 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tileheight#26 )
  vera_layer_mode_tile::tilewidth#26 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilewidth#22 )
  vera_layer_mode_tile::tilebase_address#26 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilebase_address#22 )
  vera_layer_mode_tile::mapbase_address#25 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapbase_address#21 )
  vera_layer_mode_tile::mapheight#18 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapheight#14 )
  vera_layer_mode_tile::layer#26 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::layer#22 )
  vera_layer_mode_tile::mapwidth#10 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapwidth#6 )
  vera_layer_mode_tile::config#16 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::config#28 )
  vera_layer_mode_tile::config#4 = vera_layer_mode_tile::config#16 | VERA_LAYER_COLOR_DEPTH_8BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@8: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3 vera_layer_mode_tile::@4 vera_layer_mode_tile::@5 vera_layer_mode_tile::@6 vera_layer_mode_tile::@7
  vera_layer_mode_tile::tileheight#23 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tileheight#26, vera_layer_mode_tile::@4/vera_layer_mode_tile::tileheight#27, vera_layer_mode_tile::@5/vera_layer_mode_tile::tileheight#28, vera_layer_mode_tile::@6/vera_layer_mode_tile::tileheight#29, vera_layer_mode_tile::@7/vera_layer_mode_tile::tileheight#30 )
  vera_layer_mode_tile::tilewidth#19 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilewidth#22, vera_layer_mode_tile::@4/vera_layer_mode_tile::tilewidth#23, vera_layer_mode_tile::@5/vera_layer_mode_tile::tilewidth#24, vera_layer_mode_tile::@6/vera_layer_mode_tile::tilewidth#25, vera_layer_mode_tile::@7/vera_layer_mode_tile::tilewidth#26 )
  vera_layer_mode_tile::tilebase_address#19 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilebase_address#22, vera_layer_mode_tile::@4/vera_layer_mode_tile::tilebase_address#23, vera_layer_mode_tile::@5/vera_layer_mode_tile::tilebase_address#24, vera_layer_mode_tile::@6/vera_layer_mode_tile::tilebase_address#25, vera_layer_mode_tile::@7/vera_layer_mode_tile::tilebase_address#26 )
  vera_layer_mode_tile::mapbase_address#18 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapbase_address#21, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapbase_address#22, vera_layer_mode_tile::@5/vera_layer_mode_tile::mapbase_address#23, vera_layer_mode_tile::@6/vera_layer_mode_tile::mapbase_address#24, vera_layer_mode_tile::@7/vera_layer_mode_tile::mapbase_address#25 )
  vera_layer_mode_tile::mapheight#11 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapheight#14, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapheight#15, vera_layer_mode_tile::@5/vera_layer_mode_tile::mapheight#16, vera_layer_mode_tile::@6/vera_layer_mode_tile::mapheight#17, vera_layer_mode_tile::@7/vera_layer_mode_tile::mapheight#18 )
  vera_layer_mode_tile::layer#10 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::layer#22, vera_layer_mode_tile::@4/vera_layer_mode_tile::layer#23, vera_layer_mode_tile::@5/vera_layer_mode_tile::layer#24, vera_layer_mode_tile::@6/vera_layer_mode_tile::layer#25, vera_layer_mode_tile::@7/vera_layer_mode_tile::layer#26 )
  vera_layer_mode_tile::config#29 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::config#28, vera_layer_mode_tile::@4/vera_layer_mode_tile::config#1, vera_layer_mode_tile::@5/vera_layer_mode_tile::config#2, vera_layer_mode_tile::@6/vera_layer_mode_tile::config#3, vera_layer_mode_tile::@7/vera_layer_mode_tile::config#4 )
  vera_layer_mode_tile::mapwidth#2 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapwidth#6, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapwidth#7, vera_layer_mode_tile::@5/vera_layer_mode_tile::mapwidth#8, vera_layer_mode_tile::@6/vera_layer_mode_tile::mapwidth#9, vera_layer_mode_tile::@7/vera_layer_mode_tile::mapwidth#10 )
  if(vera_layer_mode_tile::mapwidth#2==$20) goto vera_layer_mode_tile::@12
  to:vera_layer_mode_tile::@9
vera_layer_mode_tile::@12: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@8
  vera_layer_mode_tile::tileheight#19 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tileheight#23 )
  vera_layer_mode_tile::tilewidth#15 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilewidth#19 )
  vera_layer_mode_tile::tilebase_address#15 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilebase_address#19 )
  vera_layer_mode_tile::mapbase_address#14 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapbase_address#18 )
  vera_layer_mode_tile::mapheight#7 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapheight#11 )
  vera_layer_mode_tile::layer#2 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::layer#10 )
  vera_layer_mode_tile::config#17 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::config#29 )
  vera_layer_mode_tile::config#5 = vera_layer_mode_tile::config#17 | VERA_LAYER_WIDTH_32
  vera_layer_rowshift[vera_layer_mode_tile::layer#2] = 6
  vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#2 * SIZEOF_WORD
  vera_layer_rowskip[vera_layer_mode_tile::$11] = $40
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@9: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@8
  vera_layer_mode_tile::tileheight#24 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tileheight#23 )
  vera_layer_mode_tile::tilewidth#20 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilewidth#19 )
  vera_layer_mode_tile::tilebase_address#20 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilebase_address#19 )
  vera_layer_mode_tile::mapbase_address#19 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapbase_address#18 )
  vera_layer_mode_tile::mapheight#12 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapheight#11 )
  vera_layer_mode_tile::layer#11 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::layer#10 )
  vera_layer_mode_tile::config#30 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::config#29 )
  vera_layer_mode_tile::mapwidth#3 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapwidth#2 )
  if(vera_layer_mode_tile::mapwidth#3==$40) goto vera_layer_mode_tile::@13
  to:vera_layer_mode_tile::@10
vera_layer_mode_tile::@13: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@9
  vera_layer_mode_tile::tileheight#20 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tileheight#24 )
  vera_layer_mode_tile::tilewidth#16 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilewidth#20 )
  vera_layer_mode_tile::tilebase_address#16 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilebase_address#20 )
  vera_layer_mode_tile::mapbase_address#15 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapbase_address#19 )
  vera_layer_mode_tile::mapheight#8 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapheight#12 )
  vera_layer_mode_tile::layer#3 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::layer#11 )
  vera_layer_mode_tile::config#18 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::config#30 )
  vera_layer_mode_tile::config#6 = vera_layer_mode_tile::config#18 | VERA_LAYER_WIDTH_64
  vera_layer_rowshift[vera_layer_mode_tile::layer#3] = 7
  vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#3 * SIZEOF_WORD
  vera_layer_rowskip[vera_layer_mode_tile::$12] = $80
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@10: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@9
  vera_layer_mode_tile::tileheight#25 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tileheight#24 )
  vera_layer_mode_tile::tilewidth#21 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilewidth#20 )
  vera_layer_mode_tile::tilebase_address#21 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilebase_address#20 )
  vera_layer_mode_tile::mapbase_address#20 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapbase_address#19 )
  vera_layer_mode_tile::mapheight#13 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapheight#12 )
  vera_layer_mode_tile::layer#12 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::layer#11 )
  vera_layer_mode_tile::config#31 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::config#30 )
  vera_layer_mode_tile::mapwidth#4 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapwidth#3 )
  if(vera_layer_mode_tile::mapwidth#4==$80) goto vera_layer_mode_tile::@14
  to:vera_layer_mode_tile::@11
vera_layer_mode_tile::@14: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@10
  vera_layer_mode_tile::tileheight#21 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tileheight#25 )
  vera_layer_mode_tile::tilewidth#17 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilewidth#21 )
  vera_layer_mode_tile::tilebase_address#17 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilebase_address#21 )
  vera_layer_mode_tile::mapbase_address#16 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapbase_address#20 )
  vera_layer_mode_tile::mapheight#9 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapheight#13 )
  vera_layer_mode_tile::layer#4 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::layer#12 )
  vera_layer_mode_tile::config#19 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::config#31 )
  vera_layer_mode_tile::config#7 = vera_layer_mode_tile::config#19 | VERA_LAYER_WIDTH_128
  vera_layer_rowshift[vera_layer_mode_tile::layer#4] = 8
  vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#4 * SIZEOF_WORD
  vera_layer_rowskip[vera_layer_mode_tile::$13] = $100
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@11: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@10
  vera_layer_mode_tile::tileheight#18 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tileheight#25 )
  vera_layer_mode_tile::tilewidth#14 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilewidth#21 )
  vera_layer_mode_tile::tilebase_address#14 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilebase_address#21 )
  vera_layer_mode_tile::mapbase_address#13 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapbase_address#20 )
  vera_layer_mode_tile::mapheight#6 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapheight#13 )
  vera_layer_mode_tile::layer#13 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::layer#12 )
  vera_layer_mode_tile::config#32 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::config#31 )
  vera_layer_mode_tile::mapwidth#5 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapwidth#4 )
  if(vera_layer_mode_tile::mapwidth#5==$100) goto vera_layer_mode_tile::@15
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@15: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@11
  vera_layer_mode_tile::tileheight#22 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tileheight#18 )
  vera_layer_mode_tile::tilewidth#18 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilewidth#14 )
  vera_layer_mode_tile::tilebase_address#18 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilebase_address#14 )
  vera_layer_mode_tile::mapbase_address#17 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapbase_address#13 )
  vera_layer_mode_tile::mapheight#10 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapheight#6 )
  vera_layer_mode_tile::layer#5 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::layer#13 )
  vera_layer_mode_tile::config#20 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::config#32 )
  vera_layer_mode_tile::config#8 = vera_layer_mode_tile::config#20 | VERA_LAYER_WIDTH_256
  vera_layer_rowshift[vera_layer_mode_tile::layer#5] = 9
  vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#5 * SIZEOF_WORD
  vera_layer_rowskip[vera_layer_mode_tile::$14] = $200
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@16: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@11 vera_layer_mode_tile::@12 vera_layer_mode_tile::@13 vera_layer_mode_tile::@14 vera_layer_mode_tile::@15
  vera_layer_mode_tile::tileheight#15 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tileheight#18, vera_layer_mode_tile::@12/vera_layer_mode_tile::tileheight#19, vera_layer_mode_tile::@13/vera_layer_mode_tile::tileheight#20, vera_layer_mode_tile::@14/vera_layer_mode_tile::tileheight#21, vera_layer_mode_tile::@15/vera_layer_mode_tile::tileheight#22 )
  vera_layer_mode_tile::tilewidth#11 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilewidth#14, vera_layer_mode_tile::@12/vera_layer_mode_tile::tilewidth#15, vera_layer_mode_tile::@13/vera_layer_mode_tile::tilewidth#16, vera_layer_mode_tile::@14/vera_layer_mode_tile::tilewidth#17, vera_layer_mode_tile::@15/vera_layer_mode_tile::tilewidth#18 )
  vera_layer_mode_tile::tilebase_address#11 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilebase_address#14, vera_layer_mode_tile::@12/vera_layer_mode_tile::tilebase_address#15, vera_layer_mode_tile::@13/vera_layer_mode_tile::tilebase_address#16, vera_layer_mode_tile::@14/vera_layer_mode_tile::tilebase_address#17, vera_layer_mode_tile::@15/vera_layer_mode_tile::tilebase_address#18 )
  vera_layer_mode_tile::mapbase_address#10 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapbase_address#13, vera_layer_mode_tile::@12/vera_layer_mode_tile::mapbase_address#14, vera_layer_mode_tile::@13/vera_layer_mode_tile::mapbase_address#15, vera_layer_mode_tile::@14/vera_layer_mode_tile::mapbase_address#16, vera_layer_mode_tile::@15/vera_layer_mode_tile::mapbase_address#17 )
  vera_layer_mode_tile::layer#27 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::layer#13, vera_layer_mode_tile::@12/vera_layer_mode_tile::layer#2, vera_layer_mode_tile::@13/vera_layer_mode_tile::layer#3, vera_layer_mode_tile::@14/vera_layer_mode_tile::layer#4, vera_layer_mode_tile::@15/vera_layer_mode_tile::layer#5 )
  vera_layer_mode_tile::config#33 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::config#32, vera_layer_mode_tile::@12/vera_layer_mode_tile::config#5, vera_layer_mode_tile::@13/vera_layer_mode_tile::config#6, vera_layer_mode_tile::@14/vera_layer_mode_tile::config#7, vera_layer_mode_tile::@15/vera_layer_mode_tile::config#8 )
  vera_layer_mode_tile::mapheight#2 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapheight#6, vera_layer_mode_tile::@12/vera_layer_mode_tile::mapheight#7, vera_layer_mode_tile::@13/vera_layer_mode_tile::mapheight#8, vera_layer_mode_tile::@14/vera_layer_mode_tile::mapheight#9, vera_layer_mode_tile::@15/vera_layer_mode_tile::mapheight#10 )
  if(vera_layer_mode_tile::mapheight#2==$20) goto vera_layer_mode_tile::@20
  to:vera_layer_mode_tile::@17
vera_layer_mode_tile::@20: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@16
  vera_layer_mode_tile::tileheight#11 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tileheight#15 )
  vera_layer_mode_tile::tilewidth#7 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilewidth#11 )
  vera_layer_mode_tile::tilebase_address#7 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilebase_address#11 )
  vera_layer_mode_tile::mapbase_address#6 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::mapbase_address#10 )
  vera_layer_mode_tile::layer#15 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::layer#27 )
  vera_layer_mode_tile::config#21 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::config#33 )
  vera_layer_mode_tile::config#9 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_32
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@17: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@16
  vera_layer_mode_tile::tileheight#16 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tileheight#15 )
  vera_layer_mode_tile::tilewidth#12 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilewidth#11 )
  vera_layer_mode_tile::tilebase_address#12 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilebase_address#11 )
  vera_layer_mode_tile::mapbase_address#11 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::mapbase_address#10 )
  vera_layer_mode_tile::layer#28 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::layer#27 )
  vera_layer_mode_tile::config#34 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::config#33 )
  vera_layer_mode_tile::mapheight#3 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::mapheight#2 )
  if(vera_layer_mode_tile::mapheight#3==$40) goto vera_layer_mode_tile::@21
  to:vera_layer_mode_tile::@18
vera_layer_mode_tile::@21: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@17
  vera_layer_mode_tile::tileheight#12 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tileheight#16 )
  vera_layer_mode_tile::tilewidth#8 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilewidth#12 )
  vera_layer_mode_tile::tilebase_address#8 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilebase_address#12 )
  vera_layer_mode_tile::mapbase_address#7 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::mapbase_address#11 )
  vera_layer_mode_tile::layer#16 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::layer#28 )
  vera_layer_mode_tile::config#22 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::config#34 )
  vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#22 | VERA_LAYER_HEIGHT_64
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@18: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@17
  vera_layer_mode_tile::tileheight#17 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tileheight#16 )
  vera_layer_mode_tile::tilewidth#13 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilewidth#12 )
  vera_layer_mode_tile::tilebase_address#13 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilebase_address#12 )
  vera_layer_mode_tile::mapbase_address#12 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::mapbase_address#11 )
  vera_layer_mode_tile::layer#29 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::layer#28 )
  vera_layer_mode_tile::config#35 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::config#34 )
  vera_layer_mode_tile::mapheight#4 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::mapheight#3 )
  if(vera_layer_mode_tile::mapheight#4==$80) goto vera_layer_mode_tile::@22
  to:vera_layer_mode_tile::@19
vera_layer_mode_tile::@22: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@18
  vera_layer_mode_tile::tileheight#13 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tileheight#17 )
  vera_layer_mode_tile::tilewidth#9 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilewidth#13 )
  vera_layer_mode_tile::tilebase_address#9 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilebase_address#13 )
  vera_layer_mode_tile::mapbase_address#8 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::mapbase_address#12 )
  vera_layer_mode_tile::layer#17 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::layer#29 )
  vera_layer_mode_tile::config#23 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::config#35 )
  vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#23 | VERA_LAYER_HEIGHT_128
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@19: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@18
  vera_layer_mode_tile::tileheight#10 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tileheight#17 )
  vera_layer_mode_tile::tilewidth#6 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilewidth#13 )
  vera_layer_mode_tile::tilebase_address#6 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilebase_address#13 )
  vera_layer_mode_tile::mapbase_address#5 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::mapbase_address#12 )
  vera_layer_mode_tile::layer#14 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::layer#29 )
  vera_layer_mode_tile::config#36 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::config#35 )
  vera_layer_mode_tile::mapheight#5 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::mapheight#4 )
  if(vera_layer_mode_tile::mapheight#5==$100) goto vera_layer_mode_tile::@23
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@23: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@19
  vera_layer_mode_tile::tileheight#14 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tileheight#10 )
  vera_layer_mode_tile::tilewidth#10 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilewidth#6 )
  vera_layer_mode_tile::tilebase_address#10 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilebase_address#6 )
  vera_layer_mode_tile::mapbase_address#9 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::mapbase_address#5 )
  vera_layer_mode_tile::layer#18 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::layer#14 )
  vera_layer_mode_tile::config#24 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::config#36 )
  vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#24 | VERA_LAYER_HEIGHT_256
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@24: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@19 vera_layer_mode_tile::@20 vera_layer_mode_tile::@21 vera_layer_mode_tile::@22 vera_layer_mode_tile::@23
  vera_layer_mode_tile::tileheight#9 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tileheight#10, vera_layer_mode_tile::@20/vera_layer_mode_tile::tileheight#11, vera_layer_mode_tile::@21/vera_layer_mode_tile::tileheight#12, vera_layer_mode_tile::@22/vera_layer_mode_tile::tileheight#13, vera_layer_mode_tile::@23/vera_layer_mode_tile::tileheight#14 )
  vera_layer_mode_tile::tilewidth#5 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilewidth#6, vera_layer_mode_tile::@20/vera_layer_mode_tile::tilewidth#7, vera_layer_mode_tile::@21/vera_layer_mode_tile::tilewidth#8, vera_layer_mode_tile::@22/vera_layer_mode_tile::tilewidth#9, vera_layer_mode_tile::@23/vera_layer_mode_tile::tilewidth#10 )
  vera_layer_mode_tile::tilebase_address#5 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilebase_address#6, vera_layer_mode_tile::@20/vera_layer_mode_tile::tilebase_address#7, vera_layer_mode_tile::@21/vera_layer_mode_tile::tilebase_address#8, vera_layer_mode_tile::@22/vera_layer_mode_tile::tilebase_address#9, vera_layer_mode_tile::@23/vera_layer_mode_tile::tilebase_address#10 )
  vera_layer_mode_tile::mapbase_address#4 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::mapbase_address#5, vera_layer_mode_tile::@20/vera_layer_mode_tile::mapbase_address#6, vera_layer_mode_tile::@21/vera_layer_mode_tile::mapbase_address#7, vera_layer_mode_tile::@22/vera_layer_mode_tile::mapbase_address#8, vera_layer_mode_tile::@23/vera_layer_mode_tile::mapbase_address#9 )
  vera_layer_mode_tile::config#25 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::config#36, vera_layer_mode_tile::@20/vera_layer_mode_tile::config#9, vera_layer_mode_tile::@21/vera_layer_mode_tile::config#10, vera_layer_mode_tile::@22/vera_layer_mode_tile::config#11, vera_layer_mode_tile::@23/vera_layer_mode_tile::config#12 )
  vera_layer_mode_tile::layer#6 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::layer#14, vera_layer_mode_tile::@20/vera_layer_mode_tile::layer#15, vera_layer_mode_tile::@21/vera_layer_mode_tile::layer#16, vera_layer_mode_tile::@22/vera_layer_mode_tile::layer#17, vera_layer_mode_tile::@23/vera_layer_mode_tile::layer#18 )
  vera_layer_set_config::layer#0 = vera_layer_mode_tile::layer#6
  vera_layer_set_config::config#0 = vera_layer_mode_tile::config#25
  call vera_layer_set_config 
  to:vera_layer_mode_tile::@33
vera_layer_mode_tile::@33: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@24
  vera_layer_mode_tile::tileheight#8 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::tileheight#9 )
  vera_layer_mode_tile::tilewidth#4 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::tilewidth#5 )
  vera_layer_mode_tile::tilebase_address#4 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::tilebase_address#5 )
  vera_layer_mode_tile::layer#7 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::layer#6 )
  vera_layer_mode_tile::mapbase_address#3 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::mapbase_address#4 )
  vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#3
  vera_layer_mode_tile::$15 = vera_layer_mode_tile::layer#7 * SIZEOF_WORD
  vera_mapbase_offset[vera_layer_mode_tile::$15] = vera_layer_mode_tile::$1
  vera_layer_mode_tile::$2 = byte2  vera_layer_mode_tile::mapbase_address#3
  vera_mapbase_bank[vera_layer_mode_tile::layer#7] = vera_layer_mode_tile::$2
  vera_layer_mode_tile::$16 = vera_layer_mode_tile::layer#7 * SIZEOF_DWORD
  vera_mapbase_address[vera_layer_mode_tile::$16] = vera_layer_mode_tile::mapbase_address#3
  vera_layer_mode_tile::$3 = vera_layer_mode_tile::mapbase_address#3 >> 1
  vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::$3
  vera_layer_mode_tile::$4 = byte1  vera_layer_mode_tile::mapbase_address#0
  vera_layer_mode_tile::mapbase#0 = vera_layer_mode_tile::$4
  vera_layer_set_mapbase::layer#0 = vera_layer_mode_tile::layer#7
  vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
  call vera_layer_set_mapbase 
  to:vera_layer_mode_tile::@34
vera_layer_mode_tile::@34: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@33
  vera_layer_mode_tile::tileheight#7 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::tileheight#8 )
  vera_layer_mode_tile::tilewidth#2 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::tilewidth#4 )
  vera_layer_mode_tile::layer#8 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::layer#7 )
  vera_layer_mode_tile::tilebase_address#3 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::tilebase_address#4 )
  vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#3
  vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#8 * SIZEOF_WORD
  vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6
  vera_layer_mode_tile::$7 = byte2  vera_layer_mode_tile::tilebase_address#3
  vera_tilebase_bank[vera_layer_mode_tile::layer#8] = vera_layer_mode_tile::$7
  vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#8 * SIZEOF_DWORD
  vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#3
  vera_layer_mode_tile::$8 = vera_layer_mode_tile::tilebase_address#3 >> 1
  vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::$8
  vera_layer_mode_tile::$9 = byte1  vera_layer_mode_tile::tilebase_address#0
  vera_layer_mode_tile::tilebase#0 = vera_layer_mode_tile::$9
  vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK
  if(vera_layer_mode_tile::tilewidth#2==8) goto vera_layer_mode_tile::@26
  to:vera_layer_mode_tile::@25
vera_layer_mode_tile::@26: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@34
  vera_layer_mode_tile::layer#35 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::layer#8 )
  vera_layer_mode_tile::tileheight#5 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tileheight#7 )
  vera_layer_mode_tile::tilebase#6 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tilebase#1 )
  vera_layer_mode_tile::tilebase#2 = vera_layer_mode_tile::tilebase#6 | VERA_TILEBASE_WIDTH_8
  to:vera_layer_mode_tile::@28
vera_layer_mode_tile::@25: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@34
  vera_layer_mode_tile::layer#34 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::layer#8 )
  vera_layer_mode_tile::tileheight#4 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tileheight#7 )
  vera_layer_mode_tile::tilebase#11 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tilebase#1 )
  vera_layer_mode_tile::tilewidth#3 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tilewidth#2 )
  if(vera_layer_mode_tile::tilewidth#3==$10) goto vera_layer_mode_tile::@27
  to:vera_layer_mode_tile::@28
vera_layer_mode_tile::@27: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@25
  vera_layer_mode_tile::layer#36 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::layer#34 )
  vera_layer_mode_tile::tileheight#6 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tileheight#4 )
  vera_layer_mode_tile::tilebase#7 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tilebase#11 )
  vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#7 | VERA_TILEBASE_WIDTH_16
  to:vera_layer_mode_tile::@28
vera_layer_mode_tile::@28: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@25 vera_layer_mode_tile::@26 vera_layer_mode_tile::@27
  vera_layer_mode_tile::layer#30 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::layer#34, vera_layer_mode_tile::@26/vera_layer_mode_tile::layer#35, vera_layer_mode_tile::@27/vera_layer_mode_tile::layer#36 )
  vera_layer_mode_tile::tilebase#12 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tilebase#11, vera_layer_mode_tile::@26/vera_layer_mode_tile::tilebase#2, vera_layer_mode_tile::@27/vera_layer_mode_tile::tilebase#3 )
  vera_layer_mode_tile::tileheight#2 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tileheight#4, vera_layer_mode_tile::@26/vera_layer_mode_tile::tileheight#5, vera_layer_mode_tile::@27/vera_layer_mode_tile::tileheight#6 )
  if(vera_layer_mode_tile::tileheight#2==8) goto vera_layer_mode_tile::@30
  to:vera_layer_mode_tile::@29
vera_layer_mode_tile::@30: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@28
  vera_layer_mode_tile::layer#20 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::layer#30 )
  vera_layer_mode_tile::tilebase#8 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::tilebase#12 )
  vera_layer_mode_tile::tilebase#4 = vera_layer_mode_tile::tilebase#8 | VERA_TILEBASE_HEIGHT_8
  to:vera_layer_mode_tile::@32
vera_layer_mode_tile::@29: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@28
  vera_layer_mode_tile::layer#19 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::layer#30 )
  vera_layer_mode_tile::tilebase#13 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::tilebase#12 )
  vera_layer_mode_tile::tileheight#3 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::tileheight#2 )
  if(vera_layer_mode_tile::tileheight#3==$10) goto vera_layer_mode_tile::@31
  to:vera_layer_mode_tile::@32
vera_layer_mode_tile::@31: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@29
  vera_layer_mode_tile::layer#21 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::layer#19 )
  vera_layer_mode_tile::tilebase#9 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::tilebase#13 )
  vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#9 | VERA_TILEBASE_HEIGHT_16
  to:vera_layer_mode_tile::@32
vera_layer_mode_tile::@32: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@29 vera_layer_mode_tile::@30 vera_layer_mode_tile::@31
  vera_layer_mode_tile::tilebase#10 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::tilebase#13, vera_layer_mode_tile::@30/vera_layer_mode_tile::tilebase#4, vera_layer_mode_tile::@31/vera_layer_mode_tile::tilebase#5 )
  vera_layer_mode_tile::layer#9 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::layer#19, vera_layer_mode_tile::@30/vera_layer_mode_tile::layer#20, vera_layer_mode_tile::@31/vera_layer_mode_tile::layer#21 )
  vera_layer_set_tilebase::layer#0 = vera_layer_mode_tile::layer#9
  vera_layer_set_tilebase::tilebase#0 = vera_layer_mode_tile::tilebase#10
  call vera_layer_set_tilebase 
  to:vera_layer_mode_tile::@35
vera_layer_mode_tile::@35: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@32
  to:vera_layer_mode_tile::@return
vera_layer_mode_tile::@return: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@35
  return 
  to:@return

void vera_layer_mode_text(byte vera_layer_mode_text::layer , dword vera_layer_mode_text::mapbase_address , dword vera_layer_mode_text::tilebase_address , word vera_layer_mode_text::mapwidth , word vera_layer_mode_text::mapheight , byte vera_layer_mode_text::tilewidth , byte vera_layer_mode_text::tileheight , word vera_layer_mode_text::color_mode)
vera_layer_mode_text: scope:[vera_layer_mode_text]  from conio_x16_init
  vera_layer_mode_text::color_mode#3 = phi( conio_x16_init/vera_layer_mode_text::color_mode#0 )
  vera_layer_mode_text::tileheight#1 = phi( conio_x16_init/vera_layer_mode_text::tileheight#0 )
  vera_layer_mode_text::tilewidth#1 = phi( conio_x16_init/vera_layer_mode_text::tilewidth#0 )
  vera_layer_mode_text::mapheight#1 = phi( conio_x16_init/vera_layer_mode_text::mapheight#0 )
  vera_layer_mode_text::mapwidth#1 = phi( conio_x16_init/vera_layer_mode_text::mapwidth#0 )
  vera_layer_mode_text::tilebase_address#1 = phi( conio_x16_init/vera_layer_mode_text::tilebase_address#0 )
  vera_layer_mode_text::mapbase_address#1 = phi( conio_x16_init/vera_layer_mode_text::mapbase_address#0 )
  vera_layer_mode_text::layer#1 = phi( conio_x16_init/vera_layer_mode_text::layer#0 )
  vera_layer_mode_tile::layer#0 = vera_layer_mode_text::layer#1
  vera_layer_mode_tile::mapbase_address#1 = vera_layer_mode_text::mapbase_address#1
  vera_layer_mode_tile::tilebase_address#1 = vera_layer_mode_text::tilebase_address#1
  vera_layer_mode_tile::mapwidth#0 = vera_layer_mode_text::mapwidth#1
  vera_layer_mode_tile::mapheight#0 = vera_layer_mode_text::mapheight#1
  vera_layer_mode_tile::tilewidth#0 = vera_layer_mode_text::tilewidth#1
  vera_layer_mode_tile::tileheight#0 = vera_layer_mode_text::tileheight#1
  vera_layer_mode_tile::color_depth#0 = 1
  call vera_layer_mode_tile 
  to:vera_layer_mode_text::@4
vera_layer_mode_text::@4: scope:[vera_layer_mode_text]  from vera_layer_mode_text
  vera_layer_mode_text::layer#4 = phi( vera_layer_mode_text/vera_layer_mode_text::layer#1 )
  vera_layer_mode_text::color_mode#1 = phi( vera_layer_mode_text/vera_layer_mode_text::color_mode#3 )
  if(vera_layer_mode_text::color_mode#1==$10) goto vera_layer_mode_text::@2
  to:vera_layer_mode_text::@1
vera_layer_mode_text::@2: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@4
  vera_layer_mode_text::layer#2 = phi( vera_layer_mode_text::@4/vera_layer_mode_text::layer#4 )
  vera_layer_set_text_color_mode::layer#0 = vera_layer_mode_text::layer#2
  vera_layer_set_text_color_mode::color_mode#0 = VERA_LAYER_CONFIG_16C
  call vera_layer_set_text_color_mode 
  to:vera_layer_mode_text::@5
vera_layer_mode_text::@5: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@2
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@1: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@4
  vera_layer_mode_text::layer#5 = phi( vera_layer_mode_text::@4/vera_layer_mode_text::layer#4 )
  vera_layer_mode_text::color_mode#2 = phi( vera_layer_mode_text::@4/vera_layer_mode_text::color_mode#1 )
  if(vera_layer_mode_text::color_mode#2==$100) goto vera_layer_mode_text::@3
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@3: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1
  vera_layer_mode_text::layer#3 = phi( vera_layer_mode_text::@1/vera_layer_mode_text::layer#5 )
  vera_layer_set_text_color_mode::layer#1 = vera_layer_mode_text::layer#3
  vera_layer_set_text_color_mode::color_mode#1 = VERA_LAYER_CONFIG_256C
  call vera_layer_set_text_color_mode 
  to:vera_layer_mode_text::@6
vera_layer_mode_text::@6: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@3
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@return: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1 vera_layer_mode_text::@5 vera_layer_mode_text::@6
  return 
  to:@return

void vera_layer_mode_bitmap(byte vera_layer_mode_bitmap::layer , dword vera_layer_mode_bitmap::bitmap_address , word vera_layer_mode_bitmap::mapwidth , word vera_layer_mode_bitmap::color_depth)
vera_layer_mode_bitmap: scope:[vera_layer_mode_bitmap]  from main::@18
  vera_layer_mode_bitmap::mapwidth#8 = phi( main::@18/vera_layer_mode_bitmap::mapwidth#0 )
  vera_layer_mode_bitmap::layer#12 = phi( main::@18/vera_layer_mode_bitmap::layer#0 )
  vera_layer_mode_bitmap::bitmap_address#8 = phi( main::@18/vera_layer_mode_bitmap::bitmap_address#1 )
  vera_layer_mode_bitmap::color_depth#1 = phi( main::@18/vera_layer_mode_bitmap::color_depth#0 )
  vera_layer_mode_bitmap::config#0 = 0
  if(vera_layer_mode_bitmap::color_depth#1==1) goto vera_layer_mode_bitmap::@4
  to:vera_layer_mode_bitmap::@1
vera_layer_mode_bitmap::@4: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap
  vera_layer_mode_bitmap::mapwidth#4 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::mapwidth#8 )
  vera_layer_mode_bitmap::layer#5 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::layer#12 )
  vera_layer_mode_bitmap::bitmap_address#4 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::bitmap_address#8 )
  vera_layer_mode_bitmap::config#6 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::config#0 )
  vera_layer_mode_bitmap::config#1 = vera_layer_mode_bitmap::config#6 | VERA_LAYER_COLOR_DEPTH_1BPP
  to:vera_layer_mode_bitmap::@8
vera_layer_mode_bitmap::@1: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap
  vera_layer_mode_bitmap::mapwidth#9 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::mapwidth#8 )
  vera_layer_mode_bitmap::layer#13 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::layer#12 )
  vera_layer_mode_bitmap::bitmap_address#9 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::bitmap_address#8 )
  vera_layer_mode_bitmap::config#12 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::config#0 )
  vera_layer_mode_bitmap::color_depth#2 = phi( vera_layer_mode_bitmap/vera_layer_mode_bitmap::color_depth#1 )
  if(vera_layer_mode_bitmap::color_depth#2==2) goto vera_layer_mode_bitmap::@5
  to:vera_layer_mode_bitmap::@2
vera_layer_mode_bitmap::@5: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@1
  vera_layer_mode_bitmap::mapwidth#5 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::mapwidth#9 )
  vera_layer_mode_bitmap::layer#6 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::layer#13 )
  vera_layer_mode_bitmap::bitmap_address#5 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::bitmap_address#9 )
  vera_layer_mode_bitmap::config#7 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::config#12 )
  vera_layer_mode_bitmap::config#2 = vera_layer_mode_bitmap::config#7 | VERA_LAYER_COLOR_DEPTH_2BPP
  to:vera_layer_mode_bitmap::@8
vera_layer_mode_bitmap::@2: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@1
  vera_layer_mode_bitmap::mapwidth#10 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::mapwidth#9 )
  vera_layer_mode_bitmap::layer#14 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::layer#13 )
  vera_layer_mode_bitmap::bitmap_address#10 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::bitmap_address#9 )
  vera_layer_mode_bitmap::config#13 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::config#12 )
  vera_layer_mode_bitmap::color_depth#3 = phi( vera_layer_mode_bitmap::@1/vera_layer_mode_bitmap::color_depth#2 )
  if(vera_layer_mode_bitmap::color_depth#3==4) goto vera_layer_mode_bitmap::@6
  to:vera_layer_mode_bitmap::@3
vera_layer_mode_bitmap::@6: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@2
  vera_layer_mode_bitmap::mapwidth#6 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::mapwidth#10 )
  vera_layer_mode_bitmap::layer#7 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::layer#14 )
  vera_layer_mode_bitmap::bitmap_address#6 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::bitmap_address#10 )
  vera_layer_mode_bitmap::config#8 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::config#13 )
  vera_layer_mode_bitmap::config#3 = vera_layer_mode_bitmap::config#8 | VERA_LAYER_COLOR_DEPTH_4BPP
  to:vera_layer_mode_bitmap::@8
vera_layer_mode_bitmap::@3: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@2
  vera_layer_mode_bitmap::mapwidth#3 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::mapwidth#10 )
  vera_layer_mode_bitmap::layer#4 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::layer#14 )
  vera_layer_mode_bitmap::bitmap_address#3 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::bitmap_address#10 )
  vera_layer_mode_bitmap::config#14 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::config#13 )
  vera_layer_mode_bitmap::color_depth#4 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::color_depth#3 )
  if(vera_layer_mode_bitmap::color_depth#4==8) goto vera_layer_mode_bitmap::@7
  to:vera_layer_mode_bitmap::@8
vera_layer_mode_bitmap::@7: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@3
  vera_layer_mode_bitmap::mapwidth#7 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::mapwidth#3 )
  vera_layer_mode_bitmap::layer#8 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::layer#4 )
  vera_layer_mode_bitmap::bitmap_address#7 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::bitmap_address#3 )
  vera_layer_mode_bitmap::config#9 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::config#14 )
  vera_layer_mode_bitmap::config#4 = vera_layer_mode_bitmap::config#9 | VERA_LAYER_COLOR_DEPTH_8BPP
  to:vera_layer_mode_bitmap::@8
vera_layer_mode_bitmap::@8: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@3 vera_layer_mode_bitmap::@4 vera_layer_mode_bitmap::@5 vera_layer_mode_bitmap::@6 vera_layer_mode_bitmap::@7
  vera_layer_mode_bitmap::mapwidth#1 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::mapwidth#3, vera_layer_mode_bitmap::@4/vera_layer_mode_bitmap::mapwidth#4, vera_layer_mode_bitmap::@5/vera_layer_mode_bitmap::mapwidth#5, vera_layer_mode_bitmap::@6/vera_layer_mode_bitmap::mapwidth#6, vera_layer_mode_bitmap::@7/vera_layer_mode_bitmap::mapwidth#7 )
  vera_layer_mode_bitmap::layer#1 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::layer#4, vera_layer_mode_bitmap::@4/vera_layer_mode_bitmap::layer#5, vera_layer_mode_bitmap::@5/vera_layer_mode_bitmap::layer#6, vera_layer_mode_bitmap::@6/vera_layer_mode_bitmap::layer#7, vera_layer_mode_bitmap::@7/vera_layer_mode_bitmap::layer#8 )
  vera_layer_mode_bitmap::bitmap_address#2 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::bitmap_address#3, vera_layer_mode_bitmap::@4/vera_layer_mode_bitmap::bitmap_address#4, vera_layer_mode_bitmap::@5/vera_layer_mode_bitmap::bitmap_address#5, vera_layer_mode_bitmap::@6/vera_layer_mode_bitmap::bitmap_address#6, vera_layer_mode_bitmap::@7/vera_layer_mode_bitmap::bitmap_address#7 )
  vera_layer_mode_bitmap::config#10 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::config#14, vera_layer_mode_bitmap::@4/vera_layer_mode_bitmap::config#1, vera_layer_mode_bitmap::@5/vera_layer_mode_bitmap::config#2, vera_layer_mode_bitmap::@6/vera_layer_mode_bitmap::config#3, vera_layer_mode_bitmap::@7/vera_layer_mode_bitmap::config#4 )
  vera_layer_mode_bitmap::$0 = vera_layer_mode_bitmap::config#10 | VERA_LAYER_CONFIG_MODE_BITMAP
  vera_layer_mode_bitmap::config#5 = vera_layer_mode_bitmap::$0
  vera_layer_mode_bitmap::$1 = word0  vera_layer_mode_bitmap::bitmap_address#2
  vera_layer_mode_bitmap::$9 = vera_layer_mode_bitmap::layer#1 * SIZEOF_WORD
  vera_tilebase_offset[vera_layer_mode_bitmap::$9] = vera_layer_mode_bitmap::$1
  vera_layer_mode_bitmap::$2 = byte2  vera_layer_mode_bitmap::bitmap_address#2
  vera_tilebase_bank[vera_layer_mode_bitmap::layer#1] = vera_layer_mode_bitmap::$2
  vera_layer_mode_bitmap::$10 = vera_layer_mode_bitmap::layer#1 * SIZEOF_DWORD
  vera_tilebase_address[vera_layer_mode_bitmap::$10] = vera_layer_mode_bitmap::bitmap_address#2
  vera_layer_mode_bitmap::$3 = vera_layer_mode_bitmap::bitmap_address#2 >> 1
  vera_layer_mode_bitmap::bitmap_address#0 = vera_layer_mode_bitmap::$3
  vera_layer_mode_bitmap::$4 = byte1  vera_layer_mode_bitmap::bitmap_address#0
  vera_layer_mode_bitmap::tilebase#0 = vera_layer_mode_bitmap::$4
  vera_layer_mode_bitmap::tilebase#1 = vera_layer_mode_bitmap::tilebase#0 & VERA_LAYER_TILEBASE_MASK
  if(vera_layer_mode_bitmap::mapwidth#1==$140) goto vera_layer_mode_bitmap::vera_display_set_scale_double1
  to:vera_layer_mode_bitmap::@9
vera_layer_mode_bitmap::vera_display_set_scale_double1: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@8
  vera_layer_mode_bitmap::config#18 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::config#5 )
  vera_layer_mode_bitmap::layer#15 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::layer#1 )
  vera_layer_mode_bitmap::tilebase#7 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::tilebase#1 )
  *VERA_DC_HSCALE = $40
  *VERA_DC_VSCALE = $40
  to:vera_layer_mode_bitmap::@11
vera_layer_mode_bitmap::@11: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::vera_display_set_scale_double1
  vera_layer_mode_bitmap::config#15 = phi( vera_layer_mode_bitmap::vera_display_set_scale_double1/vera_layer_mode_bitmap::config#18 )
  vera_layer_mode_bitmap::layer#9 = phi( vera_layer_mode_bitmap::vera_display_set_scale_double1/vera_layer_mode_bitmap::layer#15 )
  vera_layer_mode_bitmap::tilebase#4 = phi( vera_layer_mode_bitmap::vera_display_set_scale_double1/vera_layer_mode_bitmap::tilebase#7 )
  vera_layer_mode_bitmap::tilebase#2 = vera_layer_mode_bitmap::tilebase#4 | VERA_TILEBASE_WIDTH_8
  to:vera_layer_mode_bitmap::@10
vera_layer_mode_bitmap::@9: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@8
  vera_layer_mode_bitmap::tilebase#10 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::tilebase#1 )
  vera_layer_mode_bitmap::config#17 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::config#5 )
  vera_layer_mode_bitmap::layer#11 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::layer#1 )
  vera_layer_mode_bitmap::mapwidth#2 = phi( vera_layer_mode_bitmap::@8/vera_layer_mode_bitmap::mapwidth#1 )
  if(vera_layer_mode_bitmap::mapwidth#2==$280) goto vera_layer_mode_bitmap::vera_display_set_scale_none1
  to:vera_layer_mode_bitmap::@10
vera_layer_mode_bitmap::vera_display_set_scale_none1: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@9
  vera_layer_mode_bitmap::config#19 = phi( vera_layer_mode_bitmap::@9/vera_layer_mode_bitmap::config#17 )
  vera_layer_mode_bitmap::layer#16 = phi( vera_layer_mode_bitmap::@9/vera_layer_mode_bitmap::layer#11 )
  vera_layer_mode_bitmap::tilebase#8 = phi( vera_layer_mode_bitmap::@9/vera_layer_mode_bitmap::tilebase#10 )
  *VERA_DC_HSCALE = $80
  *VERA_DC_VSCALE = $80
  to:vera_layer_mode_bitmap::@12
vera_layer_mode_bitmap::@12: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::vera_display_set_scale_none1
  vera_layer_mode_bitmap::config#16 = phi( vera_layer_mode_bitmap::vera_display_set_scale_none1/vera_layer_mode_bitmap::config#19 )
  vera_layer_mode_bitmap::layer#10 = phi( vera_layer_mode_bitmap::vera_display_set_scale_none1/vera_layer_mode_bitmap::layer#16 )
  vera_layer_mode_bitmap::tilebase#5 = phi( vera_layer_mode_bitmap::vera_display_set_scale_none1/vera_layer_mode_bitmap::tilebase#8 )
  vera_layer_mode_bitmap::tilebase#3 = vera_layer_mode_bitmap::tilebase#5 | VERA_TILEBASE_WIDTH_16
  to:vera_layer_mode_bitmap::@10
vera_layer_mode_bitmap::@10: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@11 vera_layer_mode_bitmap::@12 vera_layer_mode_bitmap::@9
  vera_layer_mode_bitmap::tilebase#9 = phi( vera_layer_mode_bitmap::@11/vera_layer_mode_bitmap::tilebase#2, vera_layer_mode_bitmap::@12/vera_layer_mode_bitmap::tilebase#3, vera_layer_mode_bitmap::@9/vera_layer_mode_bitmap::tilebase#10 )
  vera_layer_mode_bitmap::config#11 = phi( vera_layer_mode_bitmap::@11/vera_layer_mode_bitmap::config#15, vera_layer_mode_bitmap::@12/vera_layer_mode_bitmap::config#16, vera_layer_mode_bitmap::@9/vera_layer_mode_bitmap::config#17 )
  vera_layer_mode_bitmap::layer#2 = phi( vera_layer_mode_bitmap::@11/vera_layer_mode_bitmap::layer#9, vera_layer_mode_bitmap::@12/vera_layer_mode_bitmap::layer#10, vera_layer_mode_bitmap::@9/vera_layer_mode_bitmap::layer#11 )
  vera_layer_set_config::layer#1 = vera_layer_mode_bitmap::layer#2
  vera_layer_set_config::config#1 = vera_layer_mode_bitmap::config#11
  call vera_layer_set_config 
  to:vera_layer_mode_bitmap::@13
vera_layer_mode_bitmap::@13: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@10
  vera_layer_mode_bitmap::tilebase#6 = phi( vera_layer_mode_bitmap::@10/vera_layer_mode_bitmap::tilebase#9 )
  vera_layer_mode_bitmap::layer#3 = phi( vera_layer_mode_bitmap::@10/vera_layer_mode_bitmap::layer#2 )
  vera_layer_set_tilebase::layer#1 = vera_layer_mode_bitmap::layer#3
  vera_layer_set_tilebase::tilebase#1 = vera_layer_mode_bitmap::tilebase#6
  call vera_layer_set_tilebase 
  to:vera_layer_mode_bitmap::@14
vera_layer_mode_bitmap::@14: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@13
  to:vera_layer_mode_bitmap::@return
vera_layer_mode_bitmap::@return: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@14
  return 
  to:@return

void conio_x16_init()
conio_x16_init: scope:[conio_x16_init]  from __start::__init1
  CONIO_SCREEN_TEXT#49 = phi( __start::__init1/CONIO_SCREEN_TEXT#7 )
  CONIO_SCREEN_BANK#43 = phi( __start::__init1/CONIO_SCREEN_BANK#7 )
  conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE
  vera_layer_mode_text::layer#0 = 1
  vera_layer_mode_text::mapbase_address#0 = (dword)0
  vera_layer_mode_text::tilebase_address#0 = (dword)$f800
  vera_layer_mode_text::mapwidth#0 = $80
  vera_layer_mode_text::mapheight#0 = $40
  vera_layer_mode_text::tilewidth#0 = 8
  vera_layer_mode_text::tileheight#0 = 8
  vera_layer_mode_text::color_mode#0 = $10
  call vera_layer_mode_text 
  to:conio_x16_init::@3
conio_x16_init::@3: scope:[conio_x16_init]  from conio_x16_init
  conio_x16_init::line#9 = phi( conio_x16_init/conio_x16_init::line#0 )
  CONIO_SCREEN_TEXT#38 = phi( conio_x16_init/CONIO_SCREEN_TEXT#49 )
  CONIO_SCREEN_BANK#34 = phi( conio_x16_init/CONIO_SCREEN_BANK#43 )
  screensize::x#0 = &conio_screen_width
  screensize::y#0 = &conio_screen_height
  call screensize 
  to:conio_x16_init::@4
conio_x16_init::@4: scope:[conio_x16_init]  from conio_x16_init::@3
  conio_x16_init::line#8 = phi( conio_x16_init::@3/conio_x16_init::line#9 )
  CONIO_SCREEN_TEXT#28 = phi( conio_x16_init::@3/CONIO_SCREEN_TEXT#38 )
  CONIO_SCREEN_BANK#24 = phi( conio_x16_init::@3/CONIO_SCREEN_BANK#34 )
  screenlayer::layer#0 = 1
  call screenlayer 
  to:conio_x16_init::@5
conio_x16_init::@5: scope:[conio_x16_init]  from conio_x16_init::@4
  conio_x16_init::line#7 = phi( conio_x16_init::@4/conio_x16_init::line#8 )
  CONIO_SCREEN_TEXT#13 = phi( conio_x16_init::@4/CONIO_SCREEN_TEXT#3 )
  CONIO_SCREEN_BANK#13 = phi( conio_x16_init::@4/CONIO_SCREEN_BANK#3 )
  CONIO_SCREEN_BANK#0 = CONIO_SCREEN_BANK#13
  CONIO_SCREEN_TEXT#0 = CONIO_SCREEN_TEXT#13
  vera_layer_set_textcolor::layer#0 = 1
  vera_layer_set_textcolor::color#0 = WHITE
  call vera_layer_set_textcolor 
  vera_layer_set_textcolor::return#2 = vera_layer_set_textcolor::return#1
  to:conio_x16_init::@6
conio_x16_init::@6: scope:[conio_x16_init]  from conio_x16_init::@5
  CONIO_SCREEN_TEXT#85 = phi( conio_x16_init::@5/CONIO_SCREEN_TEXT#0 )
  CONIO_SCREEN_BANK#75 = phi( conio_x16_init::@5/CONIO_SCREEN_BANK#0 )
  conio_x16_init::line#6 = phi( conio_x16_init::@5/conio_x16_init::line#7 )
  vera_layer_set_backcolor::layer#0 = 1
  vera_layer_set_backcolor::color#0 = BLUE
  call vera_layer_set_backcolor 
  vera_layer_set_backcolor::return#2 = vera_layer_set_backcolor::return#1
  to:conio_x16_init::@7
conio_x16_init::@7: scope:[conio_x16_init]  from conio_x16_init::@6
  CONIO_SCREEN_TEXT#78 = phi( conio_x16_init::@6/CONIO_SCREEN_TEXT#85 )
  CONIO_SCREEN_BANK#64 = phi( conio_x16_init::@6/CONIO_SCREEN_BANK#75 )
  conio_x16_init::line#5 = phi( conio_x16_init::@6/conio_x16_init::line#6 )
  vera_layer_set_mapbase::layer#1 = 0
  vera_layer_set_mapbase::mapbase#1 = $20
  call vera_layer_set_mapbase 
  to:conio_x16_init::@8
conio_x16_init::@8: scope:[conio_x16_init]  from conio_x16_init::@7
  CONIO_SCREEN_TEXT#61 = phi( conio_x16_init::@7/CONIO_SCREEN_TEXT#78 )
  CONIO_SCREEN_BANK#53 = phi( conio_x16_init::@7/CONIO_SCREEN_BANK#64 )
  conio_x16_init::line#4 = phi( conio_x16_init::@7/conio_x16_init::line#5 )
  vera_layer_set_mapbase::layer#2 = 1
  vera_layer_set_mapbase::mapbase#2 = 0
  call vera_layer_set_mapbase 
  to:conio_x16_init::@9
conio_x16_init::@9: scope:[conio_x16_init]  from conio_x16_init::@8
  CONIO_SCREEN_TEXT#51 = phi( conio_x16_init::@8/CONIO_SCREEN_TEXT#61 )
  CONIO_SCREEN_BANK#45 = phi( conio_x16_init::@8/CONIO_SCREEN_BANK#53 )
  conio_x16_init::line#2 = phi( conio_x16_init::@8/conio_x16_init::line#4 )
  conio_x16_init::$7 = conio_x16_init::line#2 >= conio_screen_height
  conio_x16_init::$8 = ! conio_x16_init::$7
  if(conio_x16_init::$8) goto conio_x16_init::@1
  to:conio_x16_init::@2
conio_x16_init::@1: scope:[conio_x16_init]  from conio_x16_init::@2 conio_x16_init::@9
  CONIO_SCREEN_TEXT#39 = phi( conio_x16_init::@2/CONIO_SCREEN_TEXT#50, conio_x16_init::@9/CONIO_SCREEN_TEXT#51 )
  CONIO_SCREEN_BANK#35 = phi( conio_x16_init::@2/CONIO_SCREEN_BANK#44, conio_x16_init::@9/CONIO_SCREEN_BANK#45 )
  conio_x16_init::line#3 = phi( conio_x16_init::@2/conio_x16_init::line#1, conio_x16_init::@9/conio_x16_init::line#2 )
  gotoxy::x#1 = 0
  gotoxy::y#1 = conio_x16_init::line#3
  call gotoxy 
  to:conio_x16_init::@10
conio_x16_init::@10: scope:[conio_x16_init]  from conio_x16_init::@1
  CONIO_SCREEN_TEXT#29 = phi( conio_x16_init::@1/CONIO_SCREEN_TEXT#39 )
  CONIO_SCREEN_BANK#25 = phi( conio_x16_init::@1/CONIO_SCREEN_BANK#35 )
  to:conio_x16_init::@return
conio_x16_init::@2: scope:[conio_x16_init]  from conio_x16_init::@9
  CONIO_SCREEN_TEXT#50 = phi( conio_x16_init::@9/CONIO_SCREEN_TEXT#51 )
  CONIO_SCREEN_BANK#44 = phi( conio_x16_init::@9/CONIO_SCREEN_BANK#45 )
  conio_x16_init::$9 = conio_screen_height - 1
  conio_x16_init::line#1 = conio_x16_init::$9
  to:conio_x16_init::@1
conio_x16_init::@return: scope:[conio_x16_init]  from conio_x16_init::@10
  CONIO_SCREEN_TEXT#14 = phi( conio_x16_init::@10/CONIO_SCREEN_TEXT#29 )
  CONIO_SCREEN_BANK#14 = phi( conio_x16_init::@10/CONIO_SCREEN_BANK#25 )
  CONIO_SCREEN_BANK#1 = CONIO_SCREEN_BANK#14
  CONIO_SCREEN_TEXT#1 = CONIO_SCREEN_TEXT#14
  return 
  to:@return

void clearline()
clearline: scope:[clearline]  from insertup::@3
  CONIO_SCREEN_TEXT#15 = phi( insertup::@3/CONIO_SCREEN_TEXT#30 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  clearline::$5 = conio_screen_layer * SIZEOF_WORD
  clearline::$0 = CONIO_SCREEN_TEXT#15 + conio_line_text[clearline::$5]
  clearline::addr#0 = clearline::$0
  clearline::$1 = byte0  clearline::addr#0
  *VERA_ADDRX_L = clearline::$1
  clearline::$2 = byte1  clearline::addr#0
  *VERA_ADDRX_M = clearline::$2
  *VERA_ADDRX_H = VERA_INC_1
  vera_layer_get_color::layer#1 = conio_screen_layer
  call vera_layer_get_color 
  vera_layer_get_color::return#4 = vera_layer_get_color::return#3
  to:clearline::@4
clearline::@4: scope:[clearline]  from clearline
  vera_layer_get_color::return#7 = phi( clearline/vera_layer_get_color::return#4 )
  clearline::$3 = vera_layer_get_color::return#7
  clearline::color#0 = clearline::$3
  clearline::c#0 = 0
  to:clearline::@1
clearline::@1: scope:[clearline]  from clearline::@2 clearline::@4
  clearline::color#2 = phi( clearline::@2/clearline::color#1, clearline::@4/clearline::color#0 )
  clearline::c#2 = phi( clearline::@2/clearline::c#1, clearline::@4/clearline::c#0 )
  clearline::$4 = clearline::c#2 < conio_screen_width
  if(clearline::$4) goto clearline::@2
  to:clearline::@3
clearline::@2: scope:[clearline]  from clearline::@1
  clearline::c#3 = phi( clearline::@1/clearline::c#2 )
  clearline::color#1 = phi( clearline::@1/clearline::color#2 )
  *VERA_DATA0 = ' '
  *VERA_DATA0 = clearline::color#1
  clearline::c#1 = ++ clearline::c#3
  to:clearline::@1
clearline::@3: scope:[clearline]  from clearline::@1
  conio_cursor_x[conio_screen_layer] = 0
  to:clearline::@return
clearline::@return: scope:[clearline]  from clearline::@3
  return 
  to:@return

void insertup()
insertup: scope:[insertup]  from cscroll::@4
  CONIO_SCREEN_TEXT#40 = phi( cscroll::@4/CONIO_SCREEN_TEXT#52 )
  insertup::cy#0 = conio_cursor_y[conio_screen_layer]
  insertup::$0 = conio_screen_width * 2
  insertup::width#0 = insertup::$0
  insertup::i#0 = 1
  to:insertup::@1
insertup::@1: scope:[insertup]  from insertup insertup::@4
  insertup::width#2 = phi( insertup/insertup::width#0, insertup::@4/insertup::width#3 )
  CONIO_SCREEN_TEXT#31 = phi( insertup/CONIO_SCREEN_TEXT#40, insertup::@4/CONIO_SCREEN_TEXT#41 )
  insertup::cy#1 = phi( insertup/insertup::cy#0, insertup::@4/insertup::cy#2 )
  insertup::i#2 = phi( insertup/insertup::i#0, insertup::@4/insertup::i#1 )
  insertup::$2 = insertup::i#2 <= insertup::cy#1
  if(insertup::$2) goto insertup::@2
  to:insertup::@3
insertup::@2: scope:[insertup]  from insertup::@1
  insertup::cy#3 = phi( insertup::@1/insertup::cy#1 )
  insertup::width#1 = phi( insertup::@1/insertup::width#2 )
  CONIO_SCREEN_TEXT#16 = phi( insertup::@1/CONIO_SCREEN_TEXT#31 )
  insertup::i#3 = phi( insertup::@1/insertup::i#2 )
  insertup::$3 = insertup::i#3 - 1
  insertup::$4 = insertup::$3 << conio_rowshift
  insertup::line#0 = insertup::$4
  insertup::$5 = CONIO_SCREEN_TEXT#16 + insertup::line#0
  insertup::start#0 = insertup::$5
  insertup::$6 = insertup::start#0 + conio_rowskip
  memcpy_in_vram::dest_bank#0 = 0
  memcpy_in_vram::dest#0 = (void*)insertup::start#0
  memcpy_in_vram::dest_increment#0 = VERA_INC_1
  memcpy_in_vram::src_bank#0 = 0
  memcpy_in_vram::src#0 = (void*)insertup::$6
  memcpy_in_vram::src_increment#0 = VERA_INC_1
  memcpy_in_vram::num#0 = insertup::width#1
  call memcpy_in_vram 
  to:insertup::@4
insertup::@4: scope:[insertup]  from insertup::@2
  insertup::width#3 = phi( insertup::@2/insertup::width#1 )
  CONIO_SCREEN_TEXT#41 = phi( insertup::@2/CONIO_SCREEN_TEXT#16 )
  insertup::cy#2 = phi( insertup::@2/insertup::cy#3 )
  insertup::i#4 = phi( insertup::@2/insertup::i#3 )
  insertup::i#1 = ++ insertup::i#4
  to:insertup::@1
insertup::@3: scope:[insertup]  from insertup::@1
  CONIO_SCREEN_TEXT#30 = phi( insertup::@1/CONIO_SCREEN_TEXT#31 )
  call clearline 
  to:insertup::@5
insertup::@5: scope:[insertup]  from insertup::@3
  to:insertup::@return
insertup::@return: scope:[insertup]  from insertup::@5
  return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  CONIO_SCREEN_TEXT#79 = phi( cputln/CONIO_SCREEN_TEXT#86 )
  cscroll::$0 = conio_cursor_y[conio_screen_layer] >= conio_screen_height
  cscroll::$1 = ! cscroll::$0
  if(cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  CONIO_SCREEN_TEXT#62 = phi( cscroll/CONIO_SCREEN_TEXT#79 )
  cscroll::$7 = 0 != conio_scroll_enable[conio_screen_layer]
  if(cscroll::$7) goto cscroll::@4
  to:cscroll::@2
cscroll::@4: scope:[cscroll]  from cscroll::@1
  CONIO_SCREEN_TEXT#52 = phi( cscroll::@1/CONIO_SCREEN_TEXT#62 )
  call insertup 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  cscroll::$5 = conio_screen_height - 1
  gotoxy::x#2 = 0
  gotoxy::y#2 = cscroll::$5
  call gotoxy 
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  cscroll::$2 = conio_cursor_y[conio_screen_layer] >= conio_height
  cscroll::$3 = ! cscroll::$2
  if(cscroll::$3) goto cscroll::@return
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@3 cscroll::@6
  return 
  to:@return

void screenlayer(byte screenlayer::layer)
screenlayer: scope:[screenlayer]  from conio_x16_init::@4 main::@19 main::@6
  screenlayer::layer#3 = phi( conio_x16_init::@4/screenlayer::layer#0, main::@19/screenlayer::layer#1, main::@6/screenlayer::layer#2 )
  conio_screen_layer = screenlayer::layer#3
  vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer
  call vera_layer_get_mapbase_bank 
  vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#1
  to:screenlayer::@3
screenlayer::@3: scope:[screenlayer]  from screenlayer
  vera_layer_get_mapbase_bank::return#4 = phi( screenlayer/vera_layer_get_mapbase_bank::return#2 )
  screenlayer::$0 = vera_layer_get_mapbase_bank::return#4
  CONIO_SCREEN_BANK#2 = screenlayer::$0
  vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer
  call vera_layer_get_mapbase_offset 
  vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#1
  to:screenlayer::@4
screenlayer::@4: scope:[screenlayer]  from screenlayer::@3
  CONIO_SCREEN_BANK#94 = phi( screenlayer::@3/CONIO_SCREEN_BANK#2 )
  vera_layer_get_mapbase_offset::return#4 = phi( screenlayer::@3/vera_layer_get_mapbase_offset::return#2 )
  screenlayer::$1 = vera_layer_get_mapbase_offset::return#4
  CONIO_SCREEN_TEXT#2 = (byte*)screenlayer::$1
  screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_width1
screenlayer::vera_layer_get_width1: scope:[screenlayer]  from screenlayer::@4
  CONIO_SCREEN_TEXT#104 = phi( screenlayer::@4/CONIO_SCREEN_TEXT#2 )
  CONIO_SCREEN_BANK#89 = phi( screenlayer::@4/CONIO_SCREEN_BANK#94 )
  screenlayer::vera_layer_get_width1_layer#1 = phi( screenlayer::@4/screenlayer::vera_layer_get_width1_layer#0 )
  screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#1 * SIZEOF_POINTER
  screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2]
  screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK
  screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
  screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 * SIZEOF_WORD
  screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3]
  to:screenlayer::vera_layer_get_width1_@return
screenlayer::vera_layer_get_width1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_width1
  CONIO_SCREEN_TEXT#98 = phi( screenlayer::vera_layer_get_width1/CONIO_SCREEN_TEXT#104 )
  CONIO_SCREEN_BANK#81 = phi( screenlayer::vera_layer_get_width1/CONIO_SCREEN_BANK#89 )
  screenlayer::vera_layer_get_width1_return#2 = phi( screenlayer::vera_layer_get_width1/screenlayer::vera_layer_get_width1_return#0 )
  screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#2
  to:screenlayer::@1
screenlayer::@1: scope:[screenlayer]  from screenlayer::vera_layer_get_width1_@return
  CONIO_SCREEN_TEXT#87 = phi( screenlayer::vera_layer_get_width1_@return/CONIO_SCREEN_TEXT#98 )
  CONIO_SCREEN_BANK#76 = phi( screenlayer::vera_layer_get_width1_@return/CONIO_SCREEN_BANK#81 )
  screenlayer::vera_layer_get_width1_return#3 = phi( screenlayer::vera_layer_get_width1_@return/screenlayer::vera_layer_get_width1_return#1 )
  screenlayer::$2 = screenlayer::vera_layer_get_width1_return#3
  conio_width = screenlayer::$2
  vera_layer_get_rowshift::layer#0 = conio_screen_layer
  call vera_layer_get_rowshift 
  vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#1
  to:screenlayer::@5
screenlayer::@5: scope:[screenlayer]  from screenlayer::@1
  CONIO_SCREEN_TEXT#80 = phi( screenlayer::@1/CONIO_SCREEN_TEXT#87 )
  CONIO_SCREEN_BANK#65 = phi( screenlayer::@1/CONIO_SCREEN_BANK#76 )
  vera_layer_get_rowshift::return#4 = phi( screenlayer::@1/vera_layer_get_rowshift::return#2 )
  screenlayer::$3 = vera_layer_get_rowshift::return#4
  conio_rowshift = screenlayer::$3
  vera_layer_get_rowskip::layer#0 = conio_screen_layer
  call vera_layer_get_rowskip 
  vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#1
  to:screenlayer::@6
screenlayer::@6: scope:[screenlayer]  from screenlayer::@5
  CONIO_SCREEN_TEXT#63 = phi( screenlayer::@5/CONIO_SCREEN_TEXT#80 )
  CONIO_SCREEN_BANK#54 = phi( screenlayer::@5/CONIO_SCREEN_BANK#65 )
  vera_layer_get_rowskip::return#4 = phi( screenlayer::@5/vera_layer_get_rowskip::return#2 )
  screenlayer::$4 = vera_layer_get_rowskip::return#4
  conio_rowskip = screenlayer::$4
  screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_height1
screenlayer::vera_layer_get_height1: scope:[screenlayer]  from screenlayer::@6
  CONIO_SCREEN_TEXT#53 = phi( screenlayer::@6/CONIO_SCREEN_TEXT#63 )
  CONIO_SCREEN_BANK#46 = phi( screenlayer::@6/CONIO_SCREEN_BANK#54 )
  screenlayer::vera_layer_get_height1_layer#1 = phi( screenlayer::@6/screenlayer::vera_layer_get_height1_layer#0 )
  screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#1 * SIZEOF_POINTER
  screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2]
  screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK
  screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
  screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 * SIZEOF_WORD
  screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3]
  to:screenlayer::vera_layer_get_height1_@return
screenlayer::vera_layer_get_height1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_height1
  CONIO_SCREEN_TEXT#42 = phi( screenlayer::vera_layer_get_height1/CONIO_SCREEN_TEXT#53 )
  CONIO_SCREEN_BANK#36 = phi( screenlayer::vera_layer_get_height1/CONIO_SCREEN_BANK#46 )
  screenlayer::vera_layer_get_height1_return#2 = phi( screenlayer::vera_layer_get_height1/screenlayer::vera_layer_get_height1_return#0 )
  screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#2
  to:screenlayer::@2
screenlayer::@2: scope:[screenlayer]  from screenlayer::vera_layer_get_height1_@return
  CONIO_SCREEN_TEXT#32 = phi( screenlayer::vera_layer_get_height1_@return/CONIO_SCREEN_TEXT#42 )
  CONIO_SCREEN_BANK#26 = phi( screenlayer::vera_layer_get_height1_@return/CONIO_SCREEN_BANK#36 )
  screenlayer::vera_layer_get_height1_return#3 = phi( screenlayer::vera_layer_get_height1_@return/screenlayer::vera_layer_get_height1_return#1 )
  screenlayer::$5 = screenlayer::vera_layer_get_height1_return#3
  conio_height = screenlayer::$5
  to:screenlayer::@return
screenlayer::@return: scope:[screenlayer]  from screenlayer::@2
  CONIO_SCREEN_TEXT#17 = phi( screenlayer::@2/CONIO_SCREEN_TEXT#32 )
  CONIO_SCREEN_BANK#15 = phi( screenlayer::@2/CONIO_SCREEN_BANK#26 )
  CONIO_SCREEN_BANK#3 = CONIO_SCREEN_BANK#15
  CONIO_SCREEN_TEXT#3 = CONIO_SCREEN_TEXT#17
  return 
  to:@return

word rand()
rand: scope:[rand]  from main::@2 main::@36 main::@38 main::@40 main::@42
  rand_state#13 = phi( main::@2/rand_state#23, main::@36/rand_state#24, main::@38/rand_state#25, main::@40/rand_state#26, main::@42/rand_state#27 )
  rand::$0 = rand_state#13 << 7
  rand_state#0 = rand_state#13 ^ rand::$0
  rand::$1 = rand_state#0 >> 9
  rand_state#1 = rand_state#0 ^ rand::$1
  rand::$2 = rand_state#1 << 8
  rand_state#2 = rand_state#1 ^ rand::$2
  rand::return#0 = rand_state#2
  to:rand::@return
rand::@return: scope:[rand]  from rand
  rand_state#14 = phi( rand/rand_state#2 )
  rand::return#7 = phi( rand/rand::return#0 )
  rand::return#1 = rand::return#7
  rand_state#3 = rand_state#14
  return 
  to:@return

void bitmap_init(byte bitmap_init::layer , dword bitmap_init::address)
bitmap_init: scope:[bitmap_init]  from main::@10
  bitmap_init::layer#1 = phi( main::@10/bitmap_init::layer#0 )
  bitmap_init::address#1 = phi( main::@10/bitmap_init::address#0 )
  __bitmap_address = bitmap_init::address#1
  __bitmap_layer = bitmap_init::layer#1
  bitmap_init::vera_layer_get_color_depth1_layer#0 = __bitmap_layer
  to:bitmap_init::vera_layer_get_color_depth1
bitmap_init::vera_layer_get_color_depth1: scope:[bitmap_init]  from bitmap_init
  bitmap_init::vera_layer_get_color_depth1_layer#1 = phi( bitmap_init/bitmap_init::vera_layer_get_color_depth1_layer#0 )
  bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#1 * SIZEOF_POINTER
  bitmap_init::vera_layer_get_color_depth1_config#0 = vera_layer_config[bitmap_init::vera_layer_get_color_depth1_$1]
  bitmap_init::vera_layer_get_color_depth1_$0 = *bitmap_init::vera_layer_get_color_depth1_config#0 & VERA_LAYER_COLOR_DEPTH_MASK
  bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0
  to:bitmap_init::vera_layer_get_color_depth1_@return
bitmap_init::vera_layer_get_color_depth1_@return: scope:[bitmap_init]  from bitmap_init::vera_layer_get_color_depth1
  bitmap_init::vera_layer_get_color_depth1_return#2 = phi( bitmap_init::vera_layer_get_color_depth1/bitmap_init::vera_layer_get_color_depth1_return#0 )
  bitmap_init::vera_layer_get_color_depth1_return#1 = bitmap_init::vera_layer_get_color_depth1_return#2
  to:bitmap_init::@16
bitmap_init::@16: scope:[bitmap_init]  from bitmap_init::vera_layer_get_color_depth1_@return
  bitmap_init::vera_layer_get_color_depth1_return#3 = phi( bitmap_init::vera_layer_get_color_depth1_@return/bitmap_init::vera_layer_get_color_depth1_return#1 )
  bitmap_init::$0 = bitmap_init::vera_layer_get_color_depth1_return#3
  __bitmap_color_depth = bitmap_init::$0
  call vera_display_get_hscale 
  vera_display_get_hscale::return#2 = vera_display_get_hscale::return#1
  to:bitmap_init::@17
bitmap_init::@17: scope:[bitmap_init]  from bitmap_init::@16
  vera_display_get_hscale::return#4 = phi( bitmap_init::@16/vera_display_get_hscale::return#2 )
  bitmap_init::$1 = vera_display_get_hscale::return#4
  __bitmap_hscale = bitmap_init::$1
  call vera_display_get_vscale 
  vera_display_get_vscale::return#2 = vera_display_get_vscale::return#1
  to:bitmap_init::@18
bitmap_init::@18: scope:[bitmap_init]  from bitmap_init::@17
  vera_display_get_vscale::return#4 = phi( bitmap_init::@17/vera_display_get_vscale::return#2 )
  bitmap_init::$2 = vera_display_get_vscale::return#4
  __bitmap_vscale = bitmap_init::$2
  bitmap_init::bitmask#0 = bitmasks[__bitmap_color_depth]
  bitmap_init::bitshift#0 = bitshifts[__bitmap_color_depth]
  bitmap_init::x#0 = 0
  to:bitmap_init::@1
bitmap_init::@1: scope:[bitmap_init]  from bitmap_init::@18 bitmap_init::@7
  bitmap_init::bitshift#10 = phi( bitmap_init::@18/bitmap_init::bitshift#0, bitmap_init::@7/bitmap_init::bitshift#14 )
  bitmap_init::bitmask#10 = phi( bitmap_init::@18/bitmap_init::bitmask#0, bitmap_init::@7/bitmap_init::bitmask#16 )
  bitmap_init::x#7 = phi( bitmap_init::@18/bitmap_init::x#0, bitmap_init::@7/bitmap_init::x#1 )
  bitmap_init::$5 = __bitmap_color_depth == 0
  bitmap_init::$6 = ! bitmap_init::$5
  if(bitmap_init::$6) goto bitmap_init::@2
  to:bitmap_init::@8
bitmap_init::@2: scope:[bitmap_init]  from bitmap_init::@1 bitmap_init::@8
  bitmap_init::bitshift#11 = phi( bitmap_init::@1/bitmap_init::bitshift#10, bitmap_init::@8/bitmap_init::bitshift#1 )
  bitmap_init::bitmask#11 = phi( bitmap_init::@1/bitmap_init::bitmask#10, bitmap_init::@8/bitmap_init::bitmask#1 )
  bitmap_init::x#8 = phi( bitmap_init::@1/bitmap_init::x#7, bitmap_init::@8/bitmap_init::x#2 )
  bitmap_init::$8 = __bitmap_color_depth == 1
  bitmap_init::$9 = ! bitmap_init::$8
  if(bitmap_init::$9) goto bitmap_init::@3
  to:bitmap_init::@9
bitmap_init::@8: scope:[bitmap_init]  from bitmap_init::@1
  bitmap_init::bitshift#5 = phi( bitmap_init::@1/bitmap_init::bitshift#10 )
  bitmap_init::bitmask#5 = phi( bitmap_init::@1/bitmap_init::bitmask#10 )
  bitmap_init::x#2 = phi( bitmap_init::@1/bitmap_init::x#7 )
  bitmap_init::$7 = bitmap_init::x#2 >> 3
  bitmap_init::$23 = bitmap_init::x#2 * SIZEOF_WORD
  __bitmap_plot_x[bitmap_init::$23] = bitmap_init::$7
  __bitmap_plot_bitmask[bitmap_init::x#2] = bitmap_init::bitmask#5
  __bitmap_plot_bitshift[bitmap_init::x#2] = (byte)bitmap_init::bitshift#5
  bitmap_init::bitshift#1 = bitmap_init::bitshift#5 - 1
  bitmap_init::bitmask#1 = bitmap_init::bitmask#5 >> 1
  to:bitmap_init::@2
bitmap_init::@3: scope:[bitmap_init]  from bitmap_init::@2 bitmap_init::@9
  bitmap_init::bitshift#12 = phi( bitmap_init::@2/bitmap_init::bitshift#11, bitmap_init::@9/bitmap_init::bitshift#2 )
  bitmap_init::bitmask#12 = phi( bitmap_init::@2/bitmap_init::bitmask#11, bitmap_init::@9/bitmap_init::bitmask#2 )
  bitmap_init::x#9 = phi( bitmap_init::@2/bitmap_init::x#8, bitmap_init::@9/bitmap_init::x#3 )
  bitmap_init::$11 = __bitmap_color_depth == 2
  bitmap_init::$12 = ! bitmap_init::$11
  if(bitmap_init::$12) goto bitmap_init::@4
  to:bitmap_init::@10
bitmap_init::@9: scope:[bitmap_init]  from bitmap_init::@2
  bitmap_init::bitshift#6 = phi( bitmap_init::@2/bitmap_init::bitshift#11 )
  bitmap_init::bitmask#6 = phi( bitmap_init::@2/bitmap_init::bitmask#11 )
  bitmap_init::x#3 = phi( bitmap_init::@2/bitmap_init::x#8 )
  bitmap_init::$10 = bitmap_init::x#3 >> 2
  bitmap_init::$24 = bitmap_init::x#3 * SIZEOF_WORD
  __bitmap_plot_x[bitmap_init::$24] = bitmap_init::$10
  __bitmap_plot_bitmask[bitmap_init::x#3] = bitmap_init::bitmask#6
  __bitmap_plot_bitshift[bitmap_init::x#3] = (byte)bitmap_init::bitshift#6
  bitmap_init::bitshift#2 = bitmap_init::bitshift#6 - 2
  bitmap_init::bitmask#2 = bitmap_init::bitmask#6 >> 2
  to:bitmap_init::@3
bitmap_init::@4: scope:[bitmap_init]  from bitmap_init::@10 bitmap_init::@3
  bitmap_init::bitmask#13 = phi( bitmap_init::@10/bitmap_init::bitmask#3, bitmap_init::@3/bitmap_init::bitmask#12 )
  bitmap_init::x#10 = phi( bitmap_init::@10/bitmap_init::x#4, bitmap_init::@3/bitmap_init::x#9 )
  bitmap_init::bitshift#13 = phi( bitmap_init::@10/bitmap_init::bitshift#3, bitmap_init::@3/bitmap_init::bitshift#12 )
  bitmap_init::$14 = __bitmap_color_depth == 3
  bitmap_init::$15 = ! bitmap_init::$14
  if(bitmap_init::$15) goto bitmap_init::@5
  to:bitmap_init::@11
bitmap_init::@10: scope:[bitmap_init]  from bitmap_init::@3
  bitmap_init::bitshift#7 = phi( bitmap_init::@3/bitmap_init::bitshift#12 )
  bitmap_init::bitmask#7 = phi( bitmap_init::@3/bitmap_init::bitmask#12 )
  bitmap_init::x#4 = phi( bitmap_init::@3/bitmap_init::x#9 )
  bitmap_init::$13 = bitmap_init::x#4 >> 1
  bitmap_init::$25 = bitmap_init::x#4 * SIZEOF_WORD
  __bitmap_plot_x[bitmap_init::$25] = bitmap_init::$13
  __bitmap_plot_bitmask[bitmap_init::x#4] = bitmap_init::bitmask#7
  __bitmap_plot_bitshift[bitmap_init::x#4] = (byte)bitmap_init::bitshift#7
  bitmap_init::bitshift#3 = bitmap_init::bitshift#7 - 4
  bitmap_init::bitmask#3 = bitmap_init::bitmask#7 >> 4
  to:bitmap_init::@4
bitmap_init::@5: scope:[bitmap_init]  from bitmap_init::@11 bitmap_init::@4
  bitmap_init::x#14 = phi( bitmap_init::@11/bitmap_init::x#5, bitmap_init::@4/bitmap_init::x#10 )
  bitmap_init::bitmask#15 = phi( bitmap_init::@11/bitmap_init::bitmask#8, bitmap_init::@4/bitmap_init::bitmask#13 )
  bitmap_init::bitshift#8 = phi( bitmap_init::@11/bitmap_init::bitshift#9, bitmap_init::@4/bitmap_init::bitshift#13 )
  bitmap_init::$16 = bitmap_init::bitshift#8 < 0
  bitmap_init::$17 = ! bitmap_init::$16
  if(bitmap_init::$17) goto bitmap_init::@6
  to:bitmap_init::@12
bitmap_init::@11: scope:[bitmap_init]  from bitmap_init::@4
  bitmap_init::bitshift#9 = phi( bitmap_init::@4/bitmap_init::bitshift#13 )
  bitmap_init::bitmask#8 = phi( bitmap_init::@4/bitmap_init::bitmask#13 )
  bitmap_init::x#5 = phi( bitmap_init::@4/bitmap_init::x#10 )
  bitmap_init::$26 = bitmap_init::x#5 * SIZEOF_WORD
  __bitmap_plot_x[bitmap_init::$26] = bitmap_init::x#5
  __bitmap_plot_bitmask[bitmap_init::x#5] = bitmap_init::bitmask#8
  __bitmap_plot_bitshift[bitmap_init::x#5] = (byte)bitmap_init::bitshift#9
  to:bitmap_init::@5
bitmap_init::@6: scope:[bitmap_init]  from bitmap_init::@12 bitmap_init::@5
  bitmap_init::bitshift#16 = phi( bitmap_init::@12/bitmap_init::bitshift#4, bitmap_init::@5/bitmap_init::bitshift#8 )
  bitmap_init::x#12 = phi( bitmap_init::@12/bitmap_init::x#13, bitmap_init::@5/bitmap_init::x#14 )
  bitmap_init::bitmask#9 = phi( bitmap_init::@12/bitmap_init::bitmask#14, bitmap_init::@5/bitmap_init::bitmask#15 )
  bitmap_init::$18 = bitmap_init::bitmask#9 == 0
  bitmap_init::$19 = ! bitmap_init::$18
  if(bitmap_init::$19) goto bitmap_init::@7
  to:bitmap_init::@13
bitmap_init::@12: scope:[bitmap_init]  from bitmap_init::@5
  bitmap_init::x#13 = phi( bitmap_init::@5/bitmap_init::x#14 )
  bitmap_init::bitmask#14 = phi( bitmap_init::@5/bitmap_init::bitmask#15 )
  bitmap_init::bitshift#4 = bitshifts[__bitmap_color_depth]
  to:bitmap_init::@6
bitmap_init::@7: scope:[bitmap_init]  from bitmap_init::@13 bitmap_init::@6
  bitmap_init::bitshift#14 = phi( bitmap_init::@13/bitmap_init::bitshift#15, bitmap_init::@6/bitmap_init::bitshift#16 )
  bitmap_init::bitmask#16 = phi( bitmap_init::@13/bitmap_init::bitmask#4, bitmap_init::@6/bitmap_init::bitmask#9 )
  bitmap_init::x#6 = phi( bitmap_init::@13/bitmap_init::x#11, bitmap_init::@6/bitmap_init::x#12 )
  bitmap_init::x#1 = bitmap_init::x#6 + rangenext(0,$27f)
  bitmap_init::$20 = bitmap_init::x#1 != rangelast(0,$27f)
  if(bitmap_init::$20) goto bitmap_init::@1
  to:bitmap_init::@14
bitmap_init::@13: scope:[bitmap_init]  from bitmap_init::@6
  bitmap_init::bitshift#15 = phi( bitmap_init::@6/bitmap_init::bitshift#16 )
  bitmap_init::x#11 = phi( bitmap_init::@6/bitmap_init::x#12 )
  bitmap_init::bitmask#4 = bitmasks[__bitmap_color_depth]
  to:bitmap_init::@7
bitmap_init::@14: scope:[bitmap_init]  from bitmap_init::@7
  bitmap_init::$3 = __bitmap_color_depth << 2
  bitmap_init::$4 = bitmap_init::$3 + __bitmap_hscale
  bitmap_init::$27 = bitmap_init::$4 * SIZEOF_WORD
  bitmap_init::hdelta#0 = hdeltas[bitmap_init::$27]
  bitmap_init::yoffs#0 = __bitmap_address
  bitmap_init::y#0 = 0
  to:bitmap_init::@15
bitmap_init::@15: scope:[bitmap_init]  from bitmap_init::@14 bitmap_init::@15
  bitmap_init::hdelta#1 = phi( bitmap_init::@14/bitmap_init::hdelta#0, bitmap_init::@15/bitmap_init::hdelta#1 )
  bitmap_init::yoffs#2 = phi( bitmap_init::@14/bitmap_init::yoffs#0, bitmap_init::@15/bitmap_init::yoffs#1 )
  bitmap_init::y#2 = phi( bitmap_init::@14/bitmap_init::y#0, bitmap_init::@15/bitmap_init::y#1 )
  bitmap_init::$28 = bitmap_init::y#2 * SIZEOF_DWORD
  __bitmap_plot_y[bitmap_init::$28] = bitmap_init::yoffs#2
  bitmap_init::$21 = bitmap_init::yoffs#2 + bitmap_init::hdelta#1
  bitmap_init::yoffs#1 = bitmap_init::$21
  bitmap_init::y#1 = bitmap_init::y#2 + rangenext(0,$1df)
  bitmap_init::$22 = bitmap_init::y#1 != rangelast(0,$1df)
  if(bitmap_init::$22) goto bitmap_init::@15
  to:bitmap_init::@return
bitmap_init::@return: scope:[bitmap_init]  from bitmap_init::@15
  return 
  to:@return

void bitmap_clear()
bitmap_clear: scope:[bitmap_clear]  from main::@29
  bitmap_clear::$6 = __bitmap_vscale * SIZEOF_WORD
  bitmap_clear::vdelta#0 = vdeltas[bitmap_clear::$6]
  bitmap_clear::$0 = __bitmap_color_depth << 2
  bitmap_clear::$1 = bitmap_clear::$0 + __bitmap_hscale
  bitmap_clear::$7 = bitmap_clear::$1 * SIZEOF_WORD
  bitmap_clear::hdelta#0 = hdeltas[bitmap_clear::$7]
  mul16u::a#0 = bitmap_clear::hdelta#0
  mul16u::b#0 = bitmap_clear::vdelta#0
  call mul16u 
  mul16u::return#0 = mul16u::return#2
  to:bitmap_clear::@1
bitmap_clear::@1: scope:[bitmap_clear]  from bitmap_clear
  mul16u::return#3 = phi( bitmap_clear/mul16u::return#0 )
  bitmap_clear::$2 = mul16u::return#3
  bitmap_clear::count#0 = bitmap_clear::$2
  bitmap_clear::$3 = byte2  __bitmap_address
  bitmap_clear::vbank#0 = bitmap_clear::$3
  bitmap_clear::$4 = word0  __bitmap_address
  bitmap_clear::vdest#0 = (void*)bitmap_clear::$4
  memset_vram::vbank#0 = bitmap_clear::vbank#0
  memset_vram::vdest#0 = bitmap_clear::vdest#0
  memset_vram::data#0 = 0
  memset_vram::num#0 = bitmap_clear::count#0
  call memset_vram 
  to:bitmap_clear::@2
bitmap_clear::@2: scope:[bitmap_clear]  from bitmap_clear::@1
  to:bitmap_clear::@return
bitmap_clear::@return: scope:[bitmap_clear]  from bitmap_clear::@2
  return 
  to:@return

void bitmap_plot(word bitmap_plot::x , word bitmap_plot::y , byte bitmap_plot::c)
bitmap_plot: scope:[bitmap_plot]  from bitmap_line_xdyd::@1 bitmap_line_xdyi::@1 bitmap_line_ydxd::@1 bitmap_line_ydxi::@1
  bitmap_plot::c#8 = phi( bitmap_line_xdyd::@1/bitmap_plot::c#2, bitmap_line_xdyi::@1/bitmap_plot::c#1, bitmap_line_ydxd::@1/bitmap_plot::c#4, bitmap_line_ydxi::@1/bitmap_plot::c#3 )
  bitmap_plot::y#4 = phi( bitmap_line_xdyd::@1/bitmap_plot::y#1, bitmap_line_xdyi::@1/bitmap_plot::y#0, bitmap_line_ydxd::@1/bitmap_plot::y#3, bitmap_line_ydxi::@1/bitmap_plot::y#2 )
  bitmap_plot::x#4 = phi( bitmap_line_xdyd::@1/bitmap_plot::x#1, bitmap_line_xdyi::@1/bitmap_plot::x#0, bitmap_line_ydxd::@1/bitmap_plot::x#3, bitmap_line_ydxi::@1/bitmap_plot::x#2 )
  bitmap_plot::$9 = bitmap_plot::x#4 * SIZEOF_WORD
  bitmap_plot::plot_x#0 = (dword)__bitmap_plot_x[bitmap_plot::$9]
  bitmap_plot::$10 = bitmap_plot::y#4 * SIZEOF_DWORD
  bitmap_plot::plot_y#0 = __bitmap_plot_y[bitmap_plot::$10]
  bitmap_plot::$0 = bitmap_plot::plot_x#0 + bitmap_plot::plot_y#0
  bitmap_plot::plotter#0 = bitmap_plot::$0
  bitmap_plot::bitshift#0 = __bitmap_plot_bitshift[bitmap_plot::x#4]
  bitmap_plot::$11 = 0 != bitmap_plot::bitshift#0
  if(bitmap_plot::$11) goto bitmap_plot::@1
  to:bitmap_plot::@2
bitmap_plot::@1: scope:[bitmap_plot]  from bitmap_plot
  bitmap_plot::x#8 = phi( bitmap_plot/bitmap_plot::x#4 )
  bitmap_plot::plotter#2 = phi( bitmap_plot/bitmap_plot::plotter#0 )
  bitmap_plot::bitshift#1 = phi( bitmap_plot/bitmap_plot::bitshift#0 )
  bitmap_plot::c#5 = phi( bitmap_plot/bitmap_plot::c#8 )
  bitmap_plot::$2 = bitmap_plot::c#5 << bitmap_plot::bitshift#1
  bitmap_plot::$3 = bitmap_plot::$2
  to:bitmap_plot::@3
bitmap_plot::@2: scope:[bitmap_plot]  from bitmap_plot
  bitmap_plot::x#9 = phi( bitmap_plot/bitmap_plot::x#4 )
  bitmap_plot::plotter#3 = phi( bitmap_plot/bitmap_plot::plotter#0 )
  bitmap_plot::c#6 = phi( bitmap_plot/bitmap_plot::c#8 )
  bitmap_plot::$1 = bitmap_plot::c#6
  to:bitmap_plot::@3
bitmap_plot::@3: scope:[bitmap_plot]  from bitmap_plot::@1 bitmap_plot::@2
  bitmap_plot::x#7 = phi( bitmap_plot::@1/bitmap_plot::x#8, bitmap_plot::@2/bitmap_plot::x#9 )
  bitmap_plot::plotter#1 = phi( bitmap_plot::@1/bitmap_plot::plotter#2, bitmap_plot::@2/bitmap_plot::plotter#3 )
  bitmap_plot::$4 = phi( bitmap_plot::@1/bitmap_plot::$3, bitmap_plot::@2/bitmap_plot::$1 )
  bitmap_plot::c#0 = bitmap_plot::$4
  bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plotter#1
  bitmap_plot::vera_vram_address01_incr#0 = VERA_INC_0
  to:bitmap_plot::vera_vram_address01
bitmap_plot::vera_vram_address01: scope:[bitmap_plot]  from bitmap_plot::@3
  bitmap_plot::c#9 = phi( bitmap_plot::@3/bitmap_plot::c#0 )
  bitmap_plot::x#6 = phi( bitmap_plot::@3/bitmap_plot::x#7 )
  bitmap_plot::vera_vram_address01_incr#1 = phi( bitmap_plot::@3/bitmap_plot::vera_vram_address01_incr#0 )
  bitmap_plot::vera_vram_address01_bankaddr#1 = phi( bitmap_plot::@3/bitmap_plot::vera_vram_address01_bankaddr#0 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  bitmap_plot::vera_vram_address01_$0 = byte0  bitmap_plot::vera_vram_address01_bankaddr#1
  *VERA_ADDRX_L = bitmap_plot::vera_vram_address01_$0
  bitmap_plot::vera_vram_address01_$1 = byte1  bitmap_plot::vera_vram_address01_bankaddr#1
  *VERA_ADDRX_M = bitmap_plot::vera_vram_address01_$1
  bitmap_plot::vera_vram_address01_$2 = byte2  bitmap_plot::vera_vram_address01_bankaddr#1
  bitmap_plot::vera_vram_address01_$3 = bitmap_plot::vera_vram_address01_$2 | bitmap_plot::vera_vram_address01_incr#1
  *VERA_ADDRX_H = bitmap_plot::vera_vram_address01_$3
  to:bitmap_plot::@4
bitmap_plot::@4: scope:[bitmap_plot]  from bitmap_plot::vera_vram_address01
  bitmap_plot::c#7 = phi( bitmap_plot::vera_vram_address01/bitmap_plot::c#9 )
  bitmap_plot::x#5 = phi( bitmap_plot::vera_vram_address01/bitmap_plot::x#6 )
  bitmap_plot::$6 = ~ __bitmap_plot_bitmask[bitmap_plot::x#5]
  bitmap_plot::$7 = *VERA_DATA0 & bitmap_plot::$6
  bitmap_plot::$8 = bitmap_plot::$7 | bitmap_plot::c#7
  *VERA_DATA0 = bitmap_plot::$8
  to:bitmap_plot::@return
bitmap_plot::@return: scope:[bitmap_plot]  from bitmap_plot::@4
  return 
  to:@return

void bitmap_line(word bitmap_line::x0 , word bitmap_line::x1 , word bitmap_line::y0 , word bitmap_line::y1 , byte bitmap_line::c)
bitmap_line: scope:[bitmap_line]  from main::@43 main::@5
  bitmap_line::c#16 = phi( main::@43/bitmap_line::c#0, main::@5/bitmap_line::c#1 )
  bitmap_line::y1#14 = phi( main::@43/bitmap_line::y1#0, main::@5/bitmap_line::y1#1 )
  bitmap_line::y0#14 = phi( main::@43/bitmap_line::y0#0, main::@5/bitmap_line::y0#1 )
  bitmap_line::x1#2 = phi( main::@43/bitmap_line::x1#0, main::@5/bitmap_line::x1#1 )
  bitmap_line::x0#2 = phi( main::@43/bitmap_line::x0#0, main::@5/bitmap_line::x0#1 )
  bitmap_line::xd#0 = 0
  bitmap_line::yd#0 = 0
  bitmap_line::$0 = bitmap_line::x0#2 < bitmap_line::x1#2
  if(bitmap_line::$0) goto bitmap_line::@1
  to:bitmap_line::@2
bitmap_line::@1: scope:[bitmap_line]  from bitmap_line
  bitmap_line::c#15 = phi( bitmap_line/bitmap_line::c#16 )
  bitmap_line::y1#2 = phi( bitmap_line/bitmap_line::y1#14 )
  bitmap_line::y0#2 = phi( bitmap_line/bitmap_line::y0#14 )
  bitmap_line::x0#3 = phi( bitmap_line/bitmap_line::x0#2 )
  bitmap_line::x1#3 = phi( bitmap_line/bitmap_line::x1#2 )
  bitmap_line::$11 = bitmap_line::x1#3 - bitmap_line::x0#3
  bitmap_line::xd#1 = bitmap_line::$11
  bitmap_line::$12 = bitmap_line::y0#2 < bitmap_line::y1#2
  if(bitmap_line::$12) goto bitmap_line::@11
  to:bitmap_line::@5
bitmap_line::@2: scope:[bitmap_line]  from bitmap_line
  bitmap_line::c#14 = phi( bitmap_line/bitmap_line::c#16 )
  bitmap_line::y1#3 = phi( bitmap_line/bitmap_line::y1#14 )
  bitmap_line::y0#3 = phi( bitmap_line/bitmap_line::y0#14 )
  bitmap_line::x1#4 = phi( bitmap_line/bitmap_line::x1#2 )
  bitmap_line::x0#4 = phi( bitmap_line/bitmap_line::x0#2 )
  bitmap_line::$1 = bitmap_line::x0#4 - bitmap_line::x1#4
  bitmap_line::xd#2 = bitmap_line::$1
  bitmap_line::$2 = bitmap_line::y0#3 < bitmap_line::y1#3
  if(bitmap_line::$2) goto bitmap_line::@7
  to:bitmap_line::@3
bitmap_line::@7: scope:[bitmap_line]  from bitmap_line::@2
  bitmap_line::c#11 = phi( bitmap_line::@2/bitmap_line::c#14 )
  bitmap_line::x0#12 = phi( bitmap_line::@2/bitmap_line::x0#4 )
  bitmap_line::x1#12 = phi( bitmap_line::@2/bitmap_line::x1#4 )
  bitmap_line::xd#3 = phi( bitmap_line::@2/bitmap_line::xd#2 )
  bitmap_line::y0#4 = phi( bitmap_line::@2/bitmap_line::y0#3 )
  bitmap_line::y1#4 = phi( bitmap_line::@2/bitmap_line::y1#3 )
  bitmap_line::$7 = bitmap_line::y1#4 - bitmap_line::y0#4
  bitmap_line::yd#1 = bitmap_line::$7
  bitmap_line::$8 = bitmap_line::yd#1 < bitmap_line::xd#3
  if(bitmap_line::$8) goto bitmap_line::@9
  to:bitmap_line::@10
bitmap_line::@3: scope:[bitmap_line]  from bitmap_line::@2
  bitmap_line::c#10 = phi( bitmap_line::@2/bitmap_line::c#14 )
  bitmap_line::x0#11 = phi( bitmap_line::@2/bitmap_line::x0#4 )
  bitmap_line::x1#11 = phi( bitmap_line::@2/bitmap_line::x1#4 )
  bitmap_line::xd#4 = phi( bitmap_line::@2/bitmap_line::xd#2 )
  bitmap_line::y1#5 = phi( bitmap_line::@2/bitmap_line::y1#3 )
  bitmap_line::y0#5 = phi( bitmap_line::@2/bitmap_line::y0#3 )
  bitmap_line::$3 = bitmap_line::y0#5 - bitmap_line::y1#5
  bitmap_line::yd#2 = bitmap_line::$3
  bitmap_line::$4 = bitmap_line::yd#2 < bitmap_line::xd#4
  if(bitmap_line::$4) goto bitmap_line::@8
  to:bitmap_line::@4
bitmap_line::@8: scope:[bitmap_line]  from bitmap_line::@3
  bitmap_line::c#2 = phi( bitmap_line::@3/bitmap_line::c#10 )
  bitmap_line::yd#5 = phi( bitmap_line::@3/bitmap_line::yd#2 )
  bitmap_line::xd#5 = phi( bitmap_line::@3/bitmap_line::xd#4 )
  bitmap_line::x0#5 = phi( bitmap_line::@3/bitmap_line::x0#11 )
  bitmap_line::y1#6 = phi( bitmap_line::@3/bitmap_line::y1#5 )
  bitmap_line::x1#5 = phi( bitmap_line::@3/bitmap_line::x1#11 )
  bitmap_line_xdyi::x#0 = bitmap_line::x1#5
  bitmap_line_xdyi::y#0 = bitmap_line::y1#6
  bitmap_line_xdyi::x1#0 = bitmap_line::x0#5
  bitmap_line_xdyi::xd#0 = bitmap_line::xd#5
  bitmap_line_xdyi::yd#0 = bitmap_line::yd#5
  bitmap_line_xdyi::c#0 = bitmap_line::c#2
  call bitmap_line_xdyi 
  to:bitmap_line::@15
bitmap_line::@15: scope:[bitmap_line]  from bitmap_line::@8
  to:bitmap_line::@return
bitmap_line::@4: scope:[bitmap_line]  from bitmap_line::@3
  bitmap_line::c#3 = phi( bitmap_line::@3/bitmap_line::c#10 )
  bitmap_line::xd#6 = phi( bitmap_line::@3/bitmap_line::xd#4 )
  bitmap_line::yd#6 = phi( bitmap_line::@3/bitmap_line::yd#2 )
  bitmap_line::y0#6 = phi( bitmap_line::@3/bitmap_line::y0#5 )
  bitmap_line::x1#6 = phi( bitmap_line::@3/bitmap_line::x1#11 )
  bitmap_line::y1#7 = phi( bitmap_line::@3/bitmap_line::y1#5 )
  bitmap_line_ydxi::y#0 = bitmap_line::y1#7
  bitmap_line_ydxi::x#0 = bitmap_line::x1#6
  bitmap_line_ydxi::y1#0 = bitmap_line::y0#6
  bitmap_line_ydxi::yd#0 = bitmap_line::yd#6
  bitmap_line_ydxi::xd#0 = bitmap_line::xd#6
  bitmap_line_ydxi::c#0 = bitmap_line::c#3
  call bitmap_line_ydxi 
  to:bitmap_line::@16
bitmap_line::@16: scope:[bitmap_line]  from bitmap_line::@4
  to:bitmap_line::@return
bitmap_line::@9: scope:[bitmap_line]  from bitmap_line::@7
  bitmap_line::c#4 = phi( bitmap_line::@7/bitmap_line::c#11 )
  bitmap_line::yd#7 = phi( bitmap_line::@7/bitmap_line::yd#1 )
  bitmap_line::xd#7 = phi( bitmap_line::@7/bitmap_line::xd#3 )
  bitmap_line::x0#6 = phi( bitmap_line::@7/bitmap_line::x0#12 )
  bitmap_line::y1#8 = phi( bitmap_line::@7/bitmap_line::y1#4 )
  bitmap_line::x1#7 = phi( bitmap_line::@7/bitmap_line::x1#12 )
  bitmap_line_xdyd::x#0 = bitmap_line::x1#7
  bitmap_line_xdyd::y#0 = bitmap_line::y1#8
  bitmap_line_xdyd::x1#0 = bitmap_line::x0#6
  bitmap_line_xdyd::xd#0 = bitmap_line::xd#7
  bitmap_line_xdyd::yd#0 = bitmap_line::yd#7
  bitmap_line_xdyd::c#0 = bitmap_line::c#4
  call bitmap_line_xdyd 
  to:bitmap_line::@17
bitmap_line::@17: scope:[bitmap_line]  from bitmap_line::@9
  to:bitmap_line::@return
bitmap_line::@10: scope:[bitmap_line]  from bitmap_line::@7
  bitmap_line::c#5 = phi( bitmap_line::@7/bitmap_line::c#11 )
  bitmap_line::xd#8 = phi( bitmap_line::@7/bitmap_line::xd#3 )
  bitmap_line::yd#8 = phi( bitmap_line::@7/bitmap_line::yd#1 )
  bitmap_line::y1#9 = phi( bitmap_line::@7/bitmap_line::y1#4 )
  bitmap_line::x0#7 = phi( bitmap_line::@7/bitmap_line::x0#12 )
  bitmap_line::y0#7 = phi( bitmap_line::@7/bitmap_line::y0#4 )
  bitmap_line_ydxd::y#0 = bitmap_line::y0#7
  bitmap_line_ydxd::x#0 = bitmap_line::x0#7
  bitmap_line_ydxd::y1#0 = bitmap_line::y1#9
  bitmap_line_ydxd::yd#0 = bitmap_line::yd#8
  bitmap_line_ydxd::xd#0 = bitmap_line::xd#8
  bitmap_line_ydxd::c#0 = bitmap_line::c#5
  call bitmap_line_ydxd 
  to:bitmap_line::@18
bitmap_line::@18: scope:[bitmap_line]  from bitmap_line::@10
  to:bitmap_line::@return
bitmap_line::@11: scope:[bitmap_line]  from bitmap_line::@1
  bitmap_line::c#13 = phi( bitmap_line::@1/bitmap_line::c#15 )
  bitmap_line::x1#14 = phi( bitmap_line::@1/bitmap_line::x1#3 )
  bitmap_line::x0#14 = phi( bitmap_line::@1/bitmap_line::x0#3 )
  bitmap_line::xd#9 = phi( bitmap_line::@1/bitmap_line::xd#1 )
  bitmap_line::y0#8 = phi( bitmap_line::@1/bitmap_line::y0#2 )
  bitmap_line::y1#10 = phi( bitmap_line::@1/bitmap_line::y1#2 )
  bitmap_line::$17 = bitmap_line::y1#10 - bitmap_line::y0#8
  bitmap_line::yd#3 = bitmap_line::$17
  bitmap_line::$18 = bitmap_line::yd#3 < bitmap_line::xd#9
  if(bitmap_line::$18) goto bitmap_line::@13
  to:bitmap_line::@14
bitmap_line::@5: scope:[bitmap_line]  from bitmap_line::@1
  bitmap_line::c#12 = phi( bitmap_line::@1/bitmap_line::c#15 )
  bitmap_line::x1#13 = phi( bitmap_line::@1/bitmap_line::x1#3 )
  bitmap_line::x0#13 = phi( bitmap_line::@1/bitmap_line::x0#3 )
  bitmap_line::xd#10 = phi( bitmap_line::@1/bitmap_line::xd#1 )
  bitmap_line::y1#11 = phi( bitmap_line::@1/bitmap_line::y1#2 )
  bitmap_line::y0#9 = phi( bitmap_line::@1/bitmap_line::y0#2 )
  bitmap_line::$13 = bitmap_line::y0#9 - bitmap_line::y1#11
  bitmap_line::yd#4 = bitmap_line::$13
  bitmap_line::$14 = bitmap_line::yd#4 < bitmap_line::xd#10
  if(bitmap_line::$14) goto bitmap_line::@12
  to:bitmap_line::@6
bitmap_line::@12: scope:[bitmap_line]  from bitmap_line::@5
  bitmap_line::c#6 = phi( bitmap_line::@5/bitmap_line::c#12 )
  bitmap_line::yd#9 = phi( bitmap_line::@5/bitmap_line::yd#4 )
  bitmap_line::xd#11 = phi( bitmap_line::@5/bitmap_line::xd#10 )
  bitmap_line::x1#8 = phi( bitmap_line::@5/bitmap_line::x1#13 )
  bitmap_line::y0#10 = phi( bitmap_line::@5/bitmap_line::y0#9 )
  bitmap_line::x0#8 = phi( bitmap_line::@5/bitmap_line::x0#13 )
  bitmap_line_xdyd::x#1 = bitmap_line::x0#8
  bitmap_line_xdyd::y#1 = bitmap_line::y0#10
  bitmap_line_xdyd::x1#1 = bitmap_line::x1#8
  bitmap_line_xdyd::xd#1 = bitmap_line::xd#11
  bitmap_line_xdyd::yd#1 = bitmap_line::yd#9
  bitmap_line_xdyd::c#1 = bitmap_line::c#6
  call bitmap_line_xdyd 
  to:bitmap_line::@19
bitmap_line::@19: scope:[bitmap_line]  from bitmap_line::@12
  to:bitmap_line::@return
bitmap_line::@6: scope:[bitmap_line]  from bitmap_line::@5
  bitmap_line::c#7 = phi( bitmap_line::@5/bitmap_line::c#12 )
  bitmap_line::xd#12 = phi( bitmap_line::@5/bitmap_line::xd#10 )
  bitmap_line::yd#10 = phi( bitmap_line::@5/bitmap_line::yd#4 )
  bitmap_line::y0#11 = phi( bitmap_line::@5/bitmap_line::y0#9 )
  bitmap_line::x1#9 = phi( bitmap_line::@5/bitmap_line::x1#13 )
  bitmap_line::y1#12 = phi( bitmap_line::@5/bitmap_line::y1#11 )
  bitmap_line_ydxd::y#1 = bitmap_line::y1#12
  bitmap_line_ydxd::x#1 = bitmap_line::x1#9
  bitmap_line_ydxd::y1#1 = bitmap_line::y0#11
  bitmap_line_ydxd::yd#1 = bitmap_line::yd#10
  bitmap_line_ydxd::xd#1 = bitmap_line::xd#12
  bitmap_line_ydxd::c#1 = bitmap_line::c#7
  call bitmap_line_ydxd 
  to:bitmap_line::@20
bitmap_line::@20: scope:[bitmap_line]  from bitmap_line::@6
  to:bitmap_line::@return
bitmap_line::@13: scope:[bitmap_line]  from bitmap_line::@11
  bitmap_line::c#8 = phi( bitmap_line::@11/bitmap_line::c#13 )
  bitmap_line::yd#11 = phi( bitmap_line::@11/bitmap_line::yd#3 )
  bitmap_line::xd#13 = phi( bitmap_line::@11/bitmap_line::xd#9 )
  bitmap_line::x1#10 = phi( bitmap_line::@11/bitmap_line::x1#14 )
  bitmap_line::y0#12 = phi( bitmap_line::@11/bitmap_line::y0#8 )
  bitmap_line::x0#9 = phi( bitmap_line::@11/bitmap_line::x0#14 )
  bitmap_line_xdyi::x#1 = bitmap_line::x0#9
  bitmap_line_xdyi::y#1 = bitmap_line::y0#12
  bitmap_line_xdyi::x1#1 = bitmap_line::x1#10
  bitmap_line_xdyi::xd#1 = bitmap_line::xd#13
  bitmap_line_xdyi::yd#1 = bitmap_line::yd#11
  bitmap_line_xdyi::c#1 = bitmap_line::c#8
  call bitmap_line_xdyi 
  to:bitmap_line::@21
bitmap_line::@21: scope:[bitmap_line]  from bitmap_line::@13
  to:bitmap_line::@return
bitmap_line::@14: scope:[bitmap_line]  from bitmap_line::@11
  bitmap_line::c#9 = phi( bitmap_line::@11/bitmap_line::c#13 )
  bitmap_line::xd#14 = phi( bitmap_line::@11/bitmap_line::xd#9 )
  bitmap_line::yd#12 = phi( bitmap_line::@11/bitmap_line::yd#3 )
  bitmap_line::y1#13 = phi( bitmap_line::@11/bitmap_line::y1#10 )
  bitmap_line::x0#10 = phi( bitmap_line::@11/bitmap_line::x0#14 )
  bitmap_line::y0#13 = phi( bitmap_line::@11/bitmap_line::y0#8 )
  bitmap_line_ydxi::y#1 = bitmap_line::y0#13
  bitmap_line_ydxi::x#1 = bitmap_line::x0#10
  bitmap_line_ydxi::y1#1 = bitmap_line::y1#13
  bitmap_line_ydxi::yd#1 = bitmap_line::yd#12
  bitmap_line_ydxi::xd#1 = bitmap_line::xd#14
  bitmap_line_ydxi::c#1 = bitmap_line::c#9
  call bitmap_line_ydxi 
  to:bitmap_line::@22
bitmap_line::@22: scope:[bitmap_line]  from bitmap_line::@14
  to:bitmap_line::@return
bitmap_line::@return: scope:[bitmap_line]  from bitmap_line::@15 bitmap_line::@16 bitmap_line::@17 bitmap_line::@18 bitmap_line::@19 bitmap_line::@20 bitmap_line::@21 bitmap_line::@22
  return 
  to:@return

dword mul16u(word mul16u::a , word mul16u::b)
mul16u: scope:[mul16u]  from bitmap_clear
  mul16u::a#5 = phi( bitmap_clear/mul16u::a#0 )
  mul16u::b#1 = phi( bitmap_clear/mul16u::b#0 )
  mul16u::res#0 = 0
  mul16u::mb#0 = (dword)mul16u::b#1
  to:mul16u::@1
mul16u::@1: scope:[mul16u]  from mul16u mul16u::@4
  mul16u::mb#5 = phi( mul16u/mul16u::mb#0, mul16u::@4/mul16u::mb#1 )
  mul16u::res#4 = phi( mul16u/mul16u::res#0, mul16u::@4/mul16u::res#6 )
  mul16u::a#2 = phi( mul16u/mul16u::a#5, mul16u::@4/mul16u::a#1 )
  mul16u::$0 = mul16u::a#2 != 0
  if(mul16u::$0) goto mul16u::@2
  to:mul16u::@3
mul16u::@2: scope:[mul16u]  from mul16u::@1
  mul16u::res#5 = phi( mul16u::@1/mul16u::res#4 )
  mul16u::mb#4 = phi( mul16u::@1/mul16u::mb#5 )
  mul16u::a#3 = phi( mul16u::@1/mul16u::a#2 )
  mul16u::$1 = mul16u::a#3 & 1
  mul16u::$2 = mul16u::$1 != 0
  mul16u::$3 = ! mul16u::$2
  if(mul16u::$3) goto mul16u::@4
  to:mul16u::@5
mul16u::@3: scope:[mul16u]  from mul16u::@1
  mul16u::res#2 = phi( mul16u::@1/mul16u::res#4 )
  mul16u::return#1 = mul16u::res#2
  to:mul16u::@return
mul16u::@4: scope:[mul16u]  from mul16u::@2 mul16u::@5
  mul16u::res#6 = phi( mul16u::@2/mul16u::res#5, mul16u::@5/mul16u::res#1 )
  mul16u::mb#2 = phi( mul16u::@2/mul16u::mb#4, mul16u::@5/mul16u::mb#3 )
  mul16u::a#4 = phi( mul16u::@2/mul16u::a#3, mul16u::@5/mul16u::a#6 )
  mul16u::$5 = mul16u::a#4 >> 1
  mul16u::a#1 = mul16u::$5
  mul16u::$6 = mul16u::mb#2 << 1
  mul16u::mb#1 = mul16u::$6
  to:mul16u::@1
mul16u::@5: scope:[mul16u]  from mul16u::@2
  mul16u::a#6 = phi( mul16u::@2/mul16u::a#3 )
  mul16u::mb#3 = phi( mul16u::@2/mul16u::mb#4 )
  mul16u::res#3 = phi( mul16u::@2/mul16u::res#5 )
  mul16u::$4 = mul16u::res#3 + mul16u::mb#3
  mul16u::res#1 = mul16u::$4
  to:mul16u::@4
mul16u::@return: scope:[mul16u]  from mul16u::@3
  mul16u::return#4 = phi( mul16u::@3/mul16u::return#1 )
  mul16u::return#2 = mul16u::return#4
  return 
  to:@return

void bitmap_line_xdyi(word bitmap_line_xdyi::x , word bitmap_line_xdyi::y , word bitmap_line_xdyi::x1 , word bitmap_line_xdyi::xd , word bitmap_line_xdyi::yd , byte bitmap_line_xdyi::c)
bitmap_line_xdyi: scope:[bitmap_line_xdyi]  from bitmap_line::@13 bitmap_line::@8
  bitmap_line_xdyi::x1#6 = phi( bitmap_line::@13/bitmap_line_xdyi::x1#1, bitmap_line::@8/bitmap_line_xdyi::x1#0 )
  bitmap_line_xdyi::xd#5 = phi( bitmap_line::@13/bitmap_line_xdyi::xd#1, bitmap_line::@8/bitmap_line_xdyi::xd#0 )
  bitmap_line_xdyi::c#3 = phi( bitmap_line::@13/bitmap_line_xdyi::c#1, bitmap_line::@8/bitmap_line_xdyi::c#0 )
  bitmap_line_xdyi::y#5 = phi( bitmap_line::@13/bitmap_line_xdyi::y#1, bitmap_line::@8/bitmap_line_xdyi::y#0 )
  bitmap_line_xdyi::x#6 = phi( bitmap_line::@13/bitmap_line_xdyi::x#1, bitmap_line::@8/bitmap_line_xdyi::x#0 )
  bitmap_line_xdyi::yd#2 = phi( bitmap_line::@13/bitmap_line_xdyi::yd#1, bitmap_line::@8/bitmap_line_xdyi::yd#0 )
  bitmap_line_xdyi::$0 = bitmap_line_xdyi::yd#2 >> 1
  bitmap_line_xdyi::e#0 = bitmap_line_xdyi::$0
  to:bitmap_line_xdyi::@1
bitmap_line_xdyi::@1: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi bitmap_line_xdyi::@2
  bitmap_line_xdyi::x1#5 = phi( bitmap_line_xdyi/bitmap_line_xdyi::x1#6, bitmap_line_xdyi::@2/bitmap_line_xdyi::x1#2 )
  bitmap_line_xdyi::xd#4 = phi( bitmap_line_xdyi/bitmap_line_xdyi::xd#5, bitmap_line_xdyi::@2/bitmap_line_xdyi::xd#6 )
  bitmap_line_xdyi::yd#4 = phi( bitmap_line_xdyi/bitmap_line_xdyi::yd#2, bitmap_line_xdyi::@2/bitmap_line_xdyi::yd#5 )
  bitmap_line_xdyi::e#5 = phi( bitmap_line_xdyi/bitmap_line_xdyi::e#0, bitmap_line_xdyi::@2/bitmap_line_xdyi::e#6 )
  bitmap_line_xdyi::c#2 = phi( bitmap_line_xdyi/bitmap_line_xdyi::c#3, bitmap_line_xdyi::@2/bitmap_line_xdyi::c#4 )
  bitmap_line_xdyi::y#3 = phi( bitmap_line_xdyi/bitmap_line_xdyi::y#5, bitmap_line_xdyi::@2/bitmap_line_xdyi::y#6 )
  bitmap_line_xdyi::x#3 = phi( bitmap_line_xdyi/bitmap_line_xdyi::x#6, bitmap_line_xdyi::@2/bitmap_line_xdyi::x#5 )
  bitmap_plot::x#0 = bitmap_line_xdyi::x#3
  bitmap_plot::y#0 = bitmap_line_xdyi::y#3
  bitmap_plot::c#1 = bitmap_line_xdyi::c#2
  call bitmap_plot 
  to:bitmap_line_xdyi::@4
bitmap_line_xdyi::@4: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@1
  bitmap_line_xdyi::c#6 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::c#2 )
  bitmap_line_xdyi::y#7 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::y#3 )
  bitmap_line_xdyi::x1#4 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::x1#5 )
  bitmap_line_xdyi::xd#2 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::xd#4 )
  bitmap_line_xdyi::yd#3 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::yd#4 )
  bitmap_line_xdyi::e#3 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::e#5 )
  bitmap_line_xdyi::x#4 = phi( bitmap_line_xdyi::@1/bitmap_line_xdyi::x#3 )
  bitmap_line_xdyi::x#2 = ++ bitmap_line_xdyi::x#4
  bitmap_line_xdyi::$2 = bitmap_line_xdyi::e#3 + bitmap_line_xdyi::yd#3
  bitmap_line_xdyi::e#1 = bitmap_line_xdyi::$2
  bitmap_line_xdyi::$3 = bitmap_line_xdyi::xd#2 < bitmap_line_xdyi::e#1
  bitmap_line_xdyi::$4 = ! bitmap_line_xdyi::$3
  if(bitmap_line_xdyi::$4) goto bitmap_line_xdyi::@2
  to:bitmap_line_xdyi::@3
bitmap_line_xdyi::@2: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@3 bitmap_line_xdyi::@4
  bitmap_line_xdyi::xd#6 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::xd#3, bitmap_line_xdyi::@4/bitmap_line_xdyi::xd#2 )
  bitmap_line_xdyi::yd#5 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::yd#6, bitmap_line_xdyi::@4/bitmap_line_xdyi::yd#3 )
  bitmap_line_xdyi::e#6 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::e#2, bitmap_line_xdyi::@4/bitmap_line_xdyi::e#1 )
  bitmap_line_xdyi::c#4 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::c#5, bitmap_line_xdyi::@4/bitmap_line_xdyi::c#6 )
  bitmap_line_xdyi::y#6 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::y#2, bitmap_line_xdyi::@4/bitmap_line_xdyi::y#7 )
  bitmap_line_xdyi::x#5 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::x#7, bitmap_line_xdyi::@4/bitmap_line_xdyi::x#2 )
  bitmap_line_xdyi::x1#2 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::x1#3, bitmap_line_xdyi::@4/bitmap_line_xdyi::x1#4 )
  bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#2 + 1
  bitmap_line_xdyi::$7 = bitmap_line_xdyi::x#5 != bitmap_line_xdyi::$6
  if(bitmap_line_xdyi::$7) goto bitmap_line_xdyi::@1
  to:bitmap_line_xdyi::@return
bitmap_line_xdyi::@3: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@4
  bitmap_line_xdyi::yd#6 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::yd#3 )
  bitmap_line_xdyi::c#5 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::c#6 )
  bitmap_line_xdyi::x#7 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::x#2 )
  bitmap_line_xdyi::x1#3 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::x1#4 )
  bitmap_line_xdyi::xd#3 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::xd#2 )
  bitmap_line_xdyi::e#4 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::e#1 )
  bitmap_line_xdyi::y#4 = phi( bitmap_line_xdyi::@4/bitmap_line_xdyi::y#7 )
  bitmap_line_xdyi::y#2 = ++ bitmap_line_xdyi::y#4
  bitmap_line_xdyi::$5 = bitmap_line_xdyi::e#4 - bitmap_line_xdyi::xd#3
  bitmap_line_xdyi::e#2 = bitmap_line_xdyi::$5
  to:bitmap_line_xdyi::@2
bitmap_line_xdyi::@return: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@2
  return 
  to:@return

void bitmap_line_xdyd(word bitmap_line_xdyd::x , word bitmap_line_xdyd::y , word bitmap_line_xdyd::x1 , word bitmap_line_xdyd::xd , word bitmap_line_xdyd::yd , byte bitmap_line_xdyd::c)
bitmap_line_xdyd: scope:[bitmap_line_xdyd]  from bitmap_line::@12 bitmap_line::@9
  bitmap_line_xdyd::x1#6 = phi( bitmap_line::@12/bitmap_line_xdyd::x1#1, bitmap_line::@9/bitmap_line_xdyd::x1#0 )
  bitmap_line_xdyd::xd#5 = phi( bitmap_line::@12/bitmap_line_xdyd::xd#1, bitmap_line::@9/bitmap_line_xdyd::xd#0 )
  bitmap_line_xdyd::c#3 = phi( bitmap_line::@12/bitmap_line_xdyd::c#1, bitmap_line::@9/bitmap_line_xdyd::c#0 )
  bitmap_line_xdyd::y#5 = phi( bitmap_line::@12/bitmap_line_xdyd::y#1, bitmap_line::@9/bitmap_line_xdyd::y#0 )
  bitmap_line_xdyd::x#6 = phi( bitmap_line::@12/bitmap_line_xdyd::x#1, bitmap_line::@9/bitmap_line_xdyd::x#0 )
  bitmap_line_xdyd::yd#2 = phi( bitmap_line::@12/bitmap_line_xdyd::yd#1, bitmap_line::@9/bitmap_line_xdyd::yd#0 )
  bitmap_line_xdyd::$0 = bitmap_line_xdyd::yd#2 >> 1
  bitmap_line_xdyd::e#0 = bitmap_line_xdyd::$0
  to:bitmap_line_xdyd::@1
bitmap_line_xdyd::@1: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd bitmap_line_xdyd::@2
  bitmap_line_xdyd::x1#5 = phi( bitmap_line_xdyd/bitmap_line_xdyd::x1#6, bitmap_line_xdyd::@2/bitmap_line_xdyd::x1#2 )
  bitmap_line_xdyd::xd#4 = phi( bitmap_line_xdyd/bitmap_line_xdyd::xd#5, bitmap_line_xdyd::@2/bitmap_line_xdyd::xd#6 )
  bitmap_line_xdyd::yd#4 = phi( bitmap_line_xdyd/bitmap_line_xdyd::yd#2, bitmap_line_xdyd::@2/bitmap_line_xdyd::yd#5 )
  bitmap_line_xdyd::e#5 = phi( bitmap_line_xdyd/bitmap_line_xdyd::e#0, bitmap_line_xdyd::@2/bitmap_line_xdyd::e#6 )
  bitmap_line_xdyd::c#2 = phi( bitmap_line_xdyd/bitmap_line_xdyd::c#3, bitmap_line_xdyd::@2/bitmap_line_xdyd::c#4 )
  bitmap_line_xdyd::y#3 = phi( bitmap_line_xdyd/bitmap_line_xdyd::y#5, bitmap_line_xdyd::@2/bitmap_line_xdyd::y#6 )
  bitmap_line_xdyd::x#3 = phi( bitmap_line_xdyd/bitmap_line_xdyd::x#6, bitmap_line_xdyd::@2/bitmap_line_xdyd::x#5 )
  bitmap_plot::x#1 = bitmap_line_xdyd::x#3
  bitmap_plot::y#1 = bitmap_line_xdyd::y#3
  bitmap_plot::c#2 = bitmap_line_xdyd::c#2
  call bitmap_plot 
  to:bitmap_line_xdyd::@4
bitmap_line_xdyd::@4: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@1
  bitmap_line_xdyd::c#6 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::c#2 )
  bitmap_line_xdyd::y#7 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::y#3 )
  bitmap_line_xdyd::x1#4 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::x1#5 )
  bitmap_line_xdyd::xd#2 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::xd#4 )
  bitmap_line_xdyd::yd#3 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::yd#4 )
  bitmap_line_xdyd::e#3 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::e#5 )
  bitmap_line_xdyd::x#4 = phi( bitmap_line_xdyd::@1/bitmap_line_xdyd::x#3 )
  bitmap_line_xdyd::x#2 = ++ bitmap_line_xdyd::x#4
  bitmap_line_xdyd::$2 = bitmap_line_xdyd::e#3 + bitmap_line_xdyd::yd#3
  bitmap_line_xdyd::e#1 = bitmap_line_xdyd::$2
  bitmap_line_xdyd::$3 = bitmap_line_xdyd::xd#2 < bitmap_line_xdyd::e#1
  bitmap_line_xdyd::$4 = ! bitmap_line_xdyd::$3
  if(bitmap_line_xdyd::$4) goto bitmap_line_xdyd::@2
  to:bitmap_line_xdyd::@3
bitmap_line_xdyd::@2: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@3 bitmap_line_xdyd::@4
  bitmap_line_xdyd::xd#6 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::xd#3, bitmap_line_xdyd::@4/bitmap_line_xdyd::xd#2 )
  bitmap_line_xdyd::yd#5 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::yd#6, bitmap_line_xdyd::@4/bitmap_line_xdyd::yd#3 )
  bitmap_line_xdyd::e#6 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::e#2, bitmap_line_xdyd::@4/bitmap_line_xdyd::e#1 )
  bitmap_line_xdyd::c#4 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::c#5, bitmap_line_xdyd::@4/bitmap_line_xdyd::c#6 )
  bitmap_line_xdyd::y#6 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::y#2, bitmap_line_xdyd::@4/bitmap_line_xdyd::y#7 )
  bitmap_line_xdyd::x#5 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::x#7, bitmap_line_xdyd::@4/bitmap_line_xdyd::x#2 )
  bitmap_line_xdyd::x1#2 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::x1#3, bitmap_line_xdyd::@4/bitmap_line_xdyd::x1#4 )
  bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#2 + 1
  bitmap_line_xdyd::$7 = bitmap_line_xdyd::x#5 != bitmap_line_xdyd::$6
  if(bitmap_line_xdyd::$7) goto bitmap_line_xdyd::@1
  to:bitmap_line_xdyd::@return
bitmap_line_xdyd::@3: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@4
  bitmap_line_xdyd::yd#6 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::yd#3 )
  bitmap_line_xdyd::c#5 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::c#6 )
  bitmap_line_xdyd::x#7 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::x#2 )
  bitmap_line_xdyd::x1#3 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::x1#4 )
  bitmap_line_xdyd::xd#3 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::xd#2 )
  bitmap_line_xdyd::e#4 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::e#1 )
  bitmap_line_xdyd::y#4 = phi( bitmap_line_xdyd::@4/bitmap_line_xdyd::y#7 )
  bitmap_line_xdyd::y#2 = -- bitmap_line_xdyd::y#4
  bitmap_line_xdyd::$5 = bitmap_line_xdyd::e#4 - bitmap_line_xdyd::xd#3
  bitmap_line_xdyd::e#2 = bitmap_line_xdyd::$5
  to:bitmap_line_xdyd::@2
bitmap_line_xdyd::@return: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@2
  return 
  to:@return

void bitmap_line_ydxi(word bitmap_line_ydxi::y , word bitmap_line_ydxi::x , word bitmap_line_ydxi::y1 , word bitmap_line_ydxi::yd , word bitmap_line_ydxi::xd , byte bitmap_line_ydxi::c)
bitmap_line_ydxi: scope:[bitmap_line_ydxi]  from bitmap_line::@14 bitmap_line::@4
  bitmap_line_ydxi::y1#6 = phi( bitmap_line::@14/bitmap_line_ydxi::y1#1, bitmap_line::@4/bitmap_line_ydxi::y1#0 )
  bitmap_line_ydxi::yd#5 = phi( bitmap_line::@14/bitmap_line_ydxi::yd#1, bitmap_line::@4/bitmap_line_ydxi::yd#0 )
  bitmap_line_ydxi::c#3 = phi( bitmap_line::@14/bitmap_line_ydxi::c#1, bitmap_line::@4/bitmap_line_ydxi::c#0 )
  bitmap_line_ydxi::y#6 = phi( bitmap_line::@14/bitmap_line_ydxi::y#1, bitmap_line::@4/bitmap_line_ydxi::y#0 )
  bitmap_line_ydxi::x#5 = phi( bitmap_line::@14/bitmap_line_ydxi::x#1, bitmap_line::@4/bitmap_line_ydxi::x#0 )
  bitmap_line_ydxi::xd#2 = phi( bitmap_line::@14/bitmap_line_ydxi::xd#1, bitmap_line::@4/bitmap_line_ydxi::xd#0 )
  bitmap_line_ydxi::$0 = bitmap_line_ydxi::xd#2 >> 1
  bitmap_line_ydxi::e#0 = bitmap_line_ydxi::$0
  to:bitmap_line_ydxi::@1
bitmap_line_ydxi::@1: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi bitmap_line_ydxi::@2
  bitmap_line_ydxi::y1#5 = phi( bitmap_line_ydxi/bitmap_line_ydxi::y1#6, bitmap_line_ydxi::@2/bitmap_line_ydxi::y1#2 )
  bitmap_line_ydxi::yd#4 = phi( bitmap_line_ydxi/bitmap_line_ydxi::yd#5, bitmap_line_ydxi::@2/bitmap_line_ydxi::yd#6 )
  bitmap_line_ydxi::xd#4 = phi( bitmap_line_ydxi/bitmap_line_ydxi::xd#2, bitmap_line_ydxi::@2/bitmap_line_ydxi::xd#5 )
  bitmap_line_ydxi::e#5 = phi( bitmap_line_ydxi/bitmap_line_ydxi::e#0, bitmap_line_ydxi::@2/bitmap_line_ydxi::e#6 )
  bitmap_line_ydxi::c#2 = phi( bitmap_line_ydxi/bitmap_line_ydxi::c#3, bitmap_line_ydxi::@2/bitmap_line_ydxi::c#4 )
  bitmap_line_ydxi::y#3 = phi( bitmap_line_ydxi/bitmap_line_ydxi::y#6, bitmap_line_ydxi::@2/bitmap_line_ydxi::y#5 )
  bitmap_line_ydxi::x#3 = phi( bitmap_line_ydxi/bitmap_line_ydxi::x#5, bitmap_line_ydxi::@2/bitmap_line_ydxi::x#6 )
  bitmap_plot::x#2 = bitmap_line_ydxi::x#3
  bitmap_plot::y#2 = bitmap_line_ydxi::y#3
  bitmap_plot::c#3 = bitmap_line_ydxi::c#2
  call bitmap_plot 
  to:bitmap_line_ydxi::@4
bitmap_line_ydxi::@4: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@1
  bitmap_line_ydxi::c#6 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::c#2 )
  bitmap_line_ydxi::x#7 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::x#3 )
  bitmap_line_ydxi::y1#4 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::y1#5 )
  bitmap_line_ydxi::yd#2 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::yd#4 )
  bitmap_line_ydxi::xd#3 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::xd#4 )
  bitmap_line_ydxi::e#3 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::e#5 )
  bitmap_line_ydxi::y#4 = phi( bitmap_line_ydxi::@1/bitmap_line_ydxi::y#3 )
  bitmap_line_ydxi::y#2 = ++ bitmap_line_ydxi::y#4
  bitmap_line_ydxi::$2 = bitmap_line_ydxi::e#3 + bitmap_line_ydxi::xd#3
  bitmap_line_ydxi::e#1 = bitmap_line_ydxi::$2
  bitmap_line_ydxi::$3 = bitmap_line_ydxi::yd#2 < bitmap_line_ydxi::e#1
  bitmap_line_ydxi::$4 = ! bitmap_line_ydxi::$3
  if(bitmap_line_ydxi::$4) goto bitmap_line_ydxi::@2
  to:bitmap_line_ydxi::@3
bitmap_line_ydxi::@2: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@3 bitmap_line_ydxi::@4
  bitmap_line_ydxi::yd#6 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::yd#3, bitmap_line_ydxi::@4/bitmap_line_ydxi::yd#2 )
  bitmap_line_ydxi::xd#5 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::xd#6, bitmap_line_ydxi::@4/bitmap_line_ydxi::xd#3 )
  bitmap_line_ydxi::e#6 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::e#2, bitmap_line_ydxi::@4/bitmap_line_ydxi::e#1 )
  bitmap_line_ydxi::c#4 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::c#5, bitmap_line_ydxi::@4/bitmap_line_ydxi::c#6 )
  bitmap_line_ydxi::x#6 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::x#2, bitmap_line_ydxi::@4/bitmap_line_ydxi::x#7 )
  bitmap_line_ydxi::y#5 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::y#7, bitmap_line_ydxi::@4/bitmap_line_ydxi::y#2 )
  bitmap_line_ydxi::y1#2 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::y1#3, bitmap_line_ydxi::@4/bitmap_line_ydxi::y1#4 )
  bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#2 + 1
  bitmap_line_ydxi::$7 = bitmap_line_ydxi::y#5 != bitmap_line_ydxi::$6
  if(bitmap_line_ydxi::$7) goto bitmap_line_ydxi::@1
  to:bitmap_line_ydxi::@return
bitmap_line_ydxi::@3: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@4
  bitmap_line_ydxi::xd#6 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::xd#3 )
  bitmap_line_ydxi::c#5 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::c#6 )
  bitmap_line_ydxi::y#7 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::y#2 )
  bitmap_line_ydxi::y1#3 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::y1#4 )
  bitmap_line_ydxi::yd#3 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::yd#2 )
  bitmap_line_ydxi::e#4 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::e#1 )
  bitmap_line_ydxi::x#4 = phi( bitmap_line_ydxi::@4/bitmap_line_ydxi::x#7 )
  bitmap_line_ydxi::x#2 = ++ bitmap_line_ydxi::x#4
  bitmap_line_ydxi::$5 = bitmap_line_ydxi::e#4 - bitmap_line_ydxi::yd#3
  bitmap_line_ydxi::e#2 = bitmap_line_ydxi::$5
  to:bitmap_line_ydxi::@2
bitmap_line_ydxi::@return: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@2
  return 
  to:@return

void bitmap_line_ydxd(word bitmap_line_ydxd::y , word bitmap_line_ydxd::x , word bitmap_line_ydxd::y1 , word bitmap_line_ydxd::yd , word bitmap_line_ydxd::xd , byte bitmap_line_ydxd::c)
bitmap_line_ydxd: scope:[bitmap_line_ydxd]  from bitmap_line::@10 bitmap_line::@6
  bitmap_line_ydxd::y1#6 = phi( bitmap_line::@10/bitmap_line_ydxd::y1#0, bitmap_line::@6/bitmap_line_ydxd::y1#1 )
  bitmap_line_ydxd::yd#5 = phi( bitmap_line::@10/bitmap_line_ydxd::yd#0, bitmap_line::@6/bitmap_line_ydxd::yd#1 )
  bitmap_line_ydxd::c#3 = phi( bitmap_line::@10/bitmap_line_ydxd::c#0, bitmap_line::@6/bitmap_line_ydxd::c#1 )
  bitmap_line_ydxd::y#7 = phi( bitmap_line::@10/bitmap_line_ydxd::y#0, bitmap_line::@6/bitmap_line_ydxd::y#1 )
  bitmap_line_ydxd::x#5 = phi( bitmap_line::@10/bitmap_line_ydxd::x#0, bitmap_line::@6/bitmap_line_ydxd::x#1 )
  bitmap_line_ydxd::xd#2 = phi( bitmap_line::@10/bitmap_line_ydxd::xd#0, bitmap_line::@6/bitmap_line_ydxd::xd#1 )
  bitmap_line_ydxd::$0 = bitmap_line_ydxd::xd#2 >> 1
  bitmap_line_ydxd::e#0 = bitmap_line_ydxd::$0
  to:bitmap_line_ydxd::@1
bitmap_line_ydxd::@1: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd bitmap_line_ydxd::@2
  bitmap_line_ydxd::y1#5 = phi( bitmap_line_ydxd/bitmap_line_ydxd::y1#6, bitmap_line_ydxd::@2/bitmap_line_ydxd::y1#2 )
  bitmap_line_ydxd::yd#4 = phi( bitmap_line_ydxd/bitmap_line_ydxd::yd#5, bitmap_line_ydxd::@2/bitmap_line_ydxd::yd#6 )
  bitmap_line_ydxd::xd#4 = phi( bitmap_line_ydxd/bitmap_line_ydxd::xd#2, bitmap_line_ydxd::@2/bitmap_line_ydxd::xd#5 )
  bitmap_line_ydxd::e#5 = phi( bitmap_line_ydxd/bitmap_line_ydxd::e#0, bitmap_line_ydxd::@2/bitmap_line_ydxd::e#6 )
  bitmap_line_ydxd::c#2 = phi( bitmap_line_ydxd/bitmap_line_ydxd::c#3, bitmap_line_ydxd::@2/bitmap_line_ydxd::c#4 )
  bitmap_line_ydxd::y#4 = phi( bitmap_line_ydxd/bitmap_line_ydxd::y#7, bitmap_line_ydxd::@2/bitmap_line_ydxd::y#6 )
  bitmap_line_ydxd::x#3 = phi( bitmap_line_ydxd/bitmap_line_ydxd::x#5, bitmap_line_ydxd::@2/bitmap_line_ydxd::x#6 )
  bitmap_plot::x#3 = bitmap_line_ydxd::x#3
  bitmap_plot::y#3 = bitmap_line_ydxd::y#4
  bitmap_plot::c#4 = bitmap_line_ydxd::c#2
  call bitmap_plot 
  to:bitmap_line_ydxd::@4
bitmap_line_ydxd::@4: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@1
  bitmap_line_ydxd::c#6 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::c#2 )
  bitmap_line_ydxd::x#7 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::x#3 )
  bitmap_line_ydxd::y1#4 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::y1#5 )
  bitmap_line_ydxd::yd#2 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::yd#4 )
  bitmap_line_ydxd::xd#3 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::xd#4 )
  bitmap_line_ydxd::e#3 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::e#5 )
  bitmap_line_ydxd::y#5 = phi( bitmap_line_ydxd::@1/bitmap_line_ydxd::y#4 )
  bitmap_line_ydxd::y#2 = bitmap_line_ydxd::y#5
  bitmap_line_ydxd::y#3 = ++ bitmap_line_ydxd::y#2
  bitmap_line_ydxd::$2 = bitmap_line_ydxd::e#3 + bitmap_line_ydxd::xd#3
  bitmap_line_ydxd::e#1 = bitmap_line_ydxd::$2
  bitmap_line_ydxd::$3 = bitmap_line_ydxd::yd#2 < bitmap_line_ydxd::e#1
  bitmap_line_ydxd::$4 = ! bitmap_line_ydxd::$3
  if(bitmap_line_ydxd::$4) goto bitmap_line_ydxd::@2
  to:bitmap_line_ydxd::@3
bitmap_line_ydxd::@2: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@3 bitmap_line_ydxd::@4
  bitmap_line_ydxd::yd#6 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::yd#3, bitmap_line_ydxd::@4/bitmap_line_ydxd::yd#2 )
  bitmap_line_ydxd::xd#5 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::xd#6, bitmap_line_ydxd::@4/bitmap_line_ydxd::xd#3 )
  bitmap_line_ydxd::e#6 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::e#2, bitmap_line_ydxd::@4/bitmap_line_ydxd::e#1 )
  bitmap_line_ydxd::c#4 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::c#5, bitmap_line_ydxd::@4/bitmap_line_ydxd::c#6 )
  bitmap_line_ydxd::x#6 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::x#2, bitmap_line_ydxd::@4/bitmap_line_ydxd::x#7 )
  bitmap_line_ydxd::y#6 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::y#8, bitmap_line_ydxd::@4/bitmap_line_ydxd::y#3 )
  bitmap_line_ydxd::y1#2 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::y1#3, bitmap_line_ydxd::@4/bitmap_line_ydxd::y1#4 )
  bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#2 + 1
  bitmap_line_ydxd::$7 = bitmap_line_ydxd::y#6 != bitmap_line_ydxd::$6
  if(bitmap_line_ydxd::$7) goto bitmap_line_ydxd::@1
  to:bitmap_line_ydxd::@return
bitmap_line_ydxd::@3: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@4
  bitmap_line_ydxd::xd#6 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::xd#3 )
  bitmap_line_ydxd::c#5 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::c#6 )
  bitmap_line_ydxd::y#8 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::y#3 )
  bitmap_line_ydxd::y1#3 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::y1#4 )
  bitmap_line_ydxd::yd#3 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::yd#2 )
  bitmap_line_ydxd::e#4 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::e#1 )
  bitmap_line_ydxd::x#4 = phi( bitmap_line_ydxd::@4/bitmap_line_ydxd::x#7 )
  bitmap_line_ydxd::x#2 = -- bitmap_line_ydxd::x#4
  bitmap_line_ydxd::$5 = bitmap_line_ydxd::e#4 - bitmap_line_ydxd::yd#3
  bitmap_line_ydxd::e#2 = bitmap_line_ydxd::$5
  to:bitmap_line_ydxd::@2
bitmap_line_ydxd::@return: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@2
  return 
  to:@return

word divr16u(word divr16u::dividend , word divr16u::divisor , word divr16u::rem)
divr16u: scope:[divr16u]  from modr16u
  divr16u::divisor#5 = phi( modr16u/divr16u::divisor#0 )
  divr16u::dividend#4 = phi( modr16u/divr16u::dividend#1 )
  divr16u::rem#9 = phi( modr16u/divr16u::rem#3 )
  divr16u::quotient#0 = 0
  divr16u::i#0 = 0
  to:divr16u::@1
divr16u::@1: scope:[divr16u]  from divr16u divr16u::@3
  divr16u::i#5 = phi( divr16u/divr16u::i#0, divr16u::@3/divr16u::i#1 )
  divr16u::divisor#3 = phi( divr16u/divr16u::divisor#5, divr16u::@3/divr16u::divisor#6 )
  divr16u::quotient#6 = phi( divr16u/divr16u::quotient#0, divr16u::@3/divr16u::quotient#8 )
  divr16u::dividend#2 = phi( divr16u/divr16u::dividend#4, divr16u::@3/divr16u::dividend#5 )
  divr16u::rem#4 = phi( divr16u/divr16u::rem#9, divr16u::@3/divr16u::rem#10 )
  divr16u::$0 = divr16u::rem#4 << 1
  divr16u::rem#0 = divr16u::$0
  divr16u::$1 = byte1  divr16u::dividend#2
  divr16u::$2 = divr16u::$1 & $80
  divr16u::$3 = divr16u::$2 != 0
  divr16u::$4 = ! divr16u::$3
  if(divr16u::$4) goto divr16u::@2
  to:divr16u::@4
divr16u::@2: scope:[divr16u]  from divr16u::@1 divr16u::@4
  divr16u::i#3 = phi( divr16u::@1/divr16u::i#5, divr16u::@4/divr16u::i#6 )
  divr16u::divisor#1 = phi( divr16u::@1/divr16u::divisor#3, divr16u::@4/divr16u::divisor#4 )
  divr16u::rem#5 = phi( divr16u::@1/divr16u::rem#0, divr16u::@4/divr16u::rem#1 )
  divr16u::quotient#3 = phi( divr16u::@1/divr16u::quotient#6, divr16u::@4/divr16u::quotient#7 )
  divr16u::dividend#3 = phi( divr16u::@1/divr16u::dividend#2, divr16u::@4/divr16u::dividend#6 )
  divr16u::$6 = divr16u::dividend#3 << 1
  divr16u::dividend#0 = divr16u::$6
  divr16u::$7 = divr16u::quotient#3 << 1
  divr16u::quotient#1 = divr16u::$7
  divr16u::$8 = divr16u::rem#5 >= divr16u::divisor#1
  divr16u::$9 = ! divr16u::$8
  if(divr16u::$9) goto divr16u::@3
  to:divr16u::@5
divr16u::@4: scope:[divr16u]  from divr16u::@1
  divr16u::i#6 = phi( divr16u::@1/divr16u::i#5 )
  divr16u::divisor#4 = phi( divr16u::@1/divr16u::divisor#3 )
  divr16u::quotient#7 = phi( divr16u::@1/divr16u::quotient#6 )
  divr16u::dividend#6 = phi( divr16u::@1/divr16u::dividend#2 )
  divr16u::rem#6 = phi( divr16u::@1/divr16u::rem#0 )
  divr16u::$5 = divr16u::rem#6 | 1
  divr16u::rem#1 = divr16u::$5
  to:divr16u::@2
divr16u::@3: scope:[divr16u]  from divr16u::@2 divr16u::@5
  divr16u::divisor#6 = phi( divr16u::@2/divr16u::divisor#1, divr16u::@5/divr16u::divisor#2 )
  divr16u::quotient#8 = phi( divr16u::@2/divr16u::quotient#1, divr16u::@5/divr16u::quotient#2 )
  divr16u::dividend#5 = phi( divr16u::@2/divr16u::dividend#0, divr16u::@5/divr16u::dividend#7 )
  divr16u::rem#10 = phi( divr16u::@2/divr16u::rem#5, divr16u::@5/divr16u::rem#2 )
  divr16u::i#2 = phi( divr16u::@2/divr16u::i#3, divr16u::@5/divr16u::i#4 )
  divr16u::i#1 = divr16u::i#2 + rangenext(0,$f)
  divr16u::$11 = divr16u::i#1 != rangelast(0,$f)
  if(divr16u::$11) goto divr16u::@1
  to:divr16u::@6
divr16u::@5: scope:[divr16u]  from divr16u::@2
  divr16u::dividend#7 = phi( divr16u::@2/divr16u::dividend#0 )
  divr16u::i#4 = phi( divr16u::@2/divr16u::i#3 )
  divr16u::divisor#2 = phi( divr16u::@2/divr16u::divisor#1 )
  divr16u::rem#7 = phi( divr16u::@2/divr16u::rem#5 )
  divr16u::quotient#4 = phi( divr16u::@2/divr16u::quotient#1 )
  divr16u::quotient#2 = ++ divr16u::quotient#4
  divr16u::$10 = divr16u::rem#7 - divr16u::divisor#2
  divr16u::rem#2 = divr16u::$10
  to:divr16u::@3
divr16u::@6: scope:[divr16u]  from divr16u::@3
  divr16u::quotient#5 = phi( divr16u::@3/divr16u::quotient#8 )
  divr16u::rem#8 = phi( divr16u::@3/divr16u::rem#10 )
  rem16u#0 = divr16u::rem#8
  divr16u::return#0 = divr16u::quotient#5
  to:divr16u::@return
divr16u::@return: scope:[divr16u]  from divr16u::@6
  rem16u#12 = phi( divr16u::@6/rem16u#0 )
  divr16u::return#3 = phi( divr16u::@6/divr16u::return#0 )
  divr16u::return#1 = divr16u::return#3
  rem16u#1 = rem16u#12
  return 
  to:@return

word modr16u(word modr16u::dividend , word modr16u::divisor , word modr16u::rem)
modr16u: scope:[modr16u]  from main::@35 main::@37 main::@39 main::@41
  rem16u#22 = phi( main::@35/rem16u#23, main::@37/rem16u#24, main::@39/rem16u#25, main::@41/rem16u#26 )
  modr16u::rem#4 = phi( main::@35/modr16u::rem#0, main::@37/modr16u::rem#1, main::@39/modr16u::rem#2, main::@41/modr16u::rem#3 )
  modr16u::divisor#4 = phi( main::@35/modr16u::divisor#0, main::@37/modr16u::divisor#1, main::@39/modr16u::divisor#2, main::@41/modr16u::divisor#3 )
  modr16u::dividend#4 = phi( main::@35/modr16u::dividend#0, main::@37/modr16u::dividend#1, main::@39/modr16u::dividend#2, main::@41/modr16u::dividend#3 )
  divr16u::dividend#1 = modr16u::dividend#4
  divr16u::divisor#0 = modr16u::divisor#4
  divr16u::rem#3 = modr16u::rem#4
  call divr16u 
  divr16u::return#2 = divr16u::return#1
  to:modr16u::@1
modr16u::@1: scope:[modr16u]  from modr16u
  rem16u#13 = phi( modr16u/rem16u#1 )
  rem16u#2 = rem16u#13
  modr16u::return#0 = rem16u#2
  to:modr16u::@return
modr16u::@return: scope:[modr16u]  from modr16u::@1
  rem16u#14 = phi( modr16u::@1/rem16u#2 )
  modr16u::return#6 = phi( modr16u::@1/modr16u::return#0 )
  modr16u::return#1 = modr16u::return#6
  rem16u#3 = rem16u#14
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  rem16u#88 = phi( __start::@1/rem16u#28 )
  rand_state#87 = phi( __start::@1/rand_state#29 )
  CONIO_SCREEN_TEXT#64 = phi( __start::@1/CONIO_SCREEN_TEXT#36 )
  CONIO_SCREEN_BANK#55 = phi( __start::@1/CONIO_SCREEN_BANK#30 )
  memcpy_in_vram::dest_bank#1 = 1
  memcpy_in_vram::dest#1 = (void*)(byte*)$f000
  memcpy_in_vram::dest_increment#1 = VERA_INC_1
  memcpy_in_vram::src_bank#1 = 0
  memcpy_in_vram::src#1 = (void*)(byte*)$f800
  memcpy_in_vram::src_increment#1 = VERA_INC_1
  memcpy_in_vram::num#1 = $100*8
  call memcpy_in_vram 
  to:main::@17
main::@17: scope:[main]  from main
  rem16u#87 = phi( main/rem16u#88 )
  rand_state#86 = phi( main/rand_state#87 )
  CONIO_SCREEN_TEXT#54 = phi( main/CONIO_SCREEN_TEXT#64 )
  CONIO_SCREEN_BANK#47 = phi( main/CONIO_SCREEN_BANK#55 )
  vera_layer_mode_tile::layer#1 = 1
  vera_layer_mode_tile::mapbase_address#2 = $14000
  vera_layer_mode_tile::tilebase_address#2 = $1f000
  vera_layer_mode_tile::mapwidth#1 = $80
  vera_layer_mode_tile::mapheight#1 = $40
  vera_layer_mode_tile::tilewidth#1 = 8
  vera_layer_mode_tile::tileheight#1 = 8
  vera_layer_mode_tile::color_depth#1 = 1
  call vera_layer_mode_tile 
  to:main::@18
main::@18: scope:[main]  from main::@17
  rem16u#86 = phi( main::@17/rem16u#87 )
  rand_state#85 = phi( main::@17/rand_state#86 )
  CONIO_SCREEN_TEXT#43 = phi( main::@17/CONIO_SCREEN_TEXT#54 )
  CONIO_SCREEN_BANK#37 = phi( main::@17/CONIO_SCREEN_BANK#47 )
  vera_layer_mode_bitmap::layer#0 = 0
  vera_layer_mode_bitmap::bitmap_address#1 = (dword)0
  vera_layer_mode_bitmap::mapwidth#0 = $140
  vera_layer_mode_bitmap::color_depth#0 = 8
  call vera_layer_mode_bitmap 
  to:main::@19
main::@19: scope:[main]  from main::@18
  rem16u#85 = phi( main::@18/rem16u#86 )
  rand_state#83 = phi( main::@18/rand_state#85 )
  CONIO_SCREEN_TEXT#33 = phi( main::@18/CONIO_SCREEN_TEXT#43 )
  CONIO_SCREEN_BANK#27 = phi( main::@18/CONIO_SCREEN_BANK#37 )
  screenlayer::layer#1 = 1
  call screenlayer 
  to:main::@20
main::@20: scope:[main]  from main::@19
  rem16u#83 = phi( main::@19/rem16u#85 )
  rand_state#81 = phi( main::@19/rand_state#83 )
  CONIO_SCREEN_TEXT#18 = phi( main::@19/CONIO_SCREEN_TEXT#3 )
  CONIO_SCREEN_BANK#16 = phi( main::@19/CONIO_SCREEN_BANK#3 )
  CONIO_SCREEN_BANK#4 = CONIO_SCREEN_BANK#16
  CONIO_SCREEN_TEXT#4 = CONIO_SCREEN_TEXT#18
  main::textcolor1_color#0 = WHITE
  to:main::textcolor1
main::textcolor1: scope:[main]  from main::@20
  rem16u#81 = phi( main::@20/rem16u#83 )
  rand_state#79 = phi( main::@20/rand_state#81 )
  CONIO_SCREEN_BANK#99 = phi( main::@20/CONIO_SCREEN_BANK#4 )
  CONIO_SCREEN_TEXT#88 = phi( main::@20/CONIO_SCREEN_TEXT#4 )
  main::textcolor1_color#1 = phi( main::@20/main::textcolor1_color#0 )
  vera_layer_set_textcolor::layer#1 = conio_screen_layer
  vera_layer_set_textcolor::color#1 = main::textcolor1_color#1
  call vera_layer_set_textcolor 
  vera_layer_set_textcolor::return#3 = vera_layer_set_textcolor::return#1
  to:main::@21
main::@21: scope:[main]  from main::textcolor1
  rem16u#79 = phi( main::textcolor1/rem16u#81 )
  rand_state#77 = phi( main::textcolor1/rand_state#79 )
  CONIO_SCREEN_BANK#95 = phi( main::textcolor1/CONIO_SCREEN_BANK#99 )
  CONIO_SCREEN_TEXT#81 = phi( main::textcolor1/CONIO_SCREEN_TEXT#88 )
  to:main::@8
main::@8: scope:[main]  from main::@21
  rem16u#77 = phi( main::@21/rem16u#79 )
  rand_state#75 = phi( main::@21/rand_state#77 )
  CONIO_SCREEN_BANK#90 = phi( main::@21/CONIO_SCREEN_BANK#95 )
  CONIO_SCREEN_TEXT#65 = phi( main::@21/CONIO_SCREEN_TEXT#81 )
  main::bgcolor1_color#0 = BLACK
  to:main::bgcolor1
main::bgcolor1: scope:[main]  from main::@8
  rem16u#75 = phi( main::@8/rem16u#77 )
  rand_state#73 = phi( main::@8/rand_state#75 )
  CONIO_SCREEN_BANK#82 = phi( main::@8/CONIO_SCREEN_BANK#90 )
  CONIO_SCREEN_TEXT#55 = phi( main::@8/CONIO_SCREEN_TEXT#65 )
  main::bgcolor1_color#1 = phi( main::@8/main::bgcolor1_color#0 )
  vera_layer_set_backcolor::layer#1 = conio_screen_layer
  vera_layer_set_backcolor::color#1 = main::bgcolor1_color#1
  call vera_layer_set_backcolor 
  vera_layer_set_backcolor::return#3 = vera_layer_set_backcolor::return#1
  to:main::@22
main::@22: scope:[main]  from main::bgcolor1
  rem16u#73 = phi( main::bgcolor1/rem16u#75 )
  rand_state#71 = phi( main::bgcolor1/rand_state#73 )
  CONIO_SCREEN_BANK#77 = phi( main::bgcolor1/CONIO_SCREEN_BANK#82 )
  CONIO_SCREEN_TEXT#44 = phi( main::bgcolor1/CONIO_SCREEN_TEXT#55 )
  to:main::@9
main::@9: scope:[main]  from main::@22
  rem16u#71 = phi( main::@22/rem16u#73 )
  rand_state#69 = phi( main::@22/rand_state#71 )
  CONIO_SCREEN_BANK#61 = phi( main::@22/CONIO_SCREEN_BANK#77 )
  CONIO_SCREEN_TEXT#26 = phi( main::@22/CONIO_SCREEN_TEXT#44 )
  call clrscr 
  to:main::@23
main::@23: scope:[main]  from main::@9
  rem16u#69 = phi( main::@9/rem16u#71 )
  rand_state#67 = phi( main::@9/rand_state#69 )
  CONIO_SCREEN_BANK#83 = phi( main::@9/CONIO_SCREEN_BANK#61 )
  CONIO_SCREEN_TEXT#89 = phi( main::@9/CONIO_SCREEN_TEXT#26 )
  gotoxy::x#3 = 0
  gotoxy::y#3 = $19
  call gotoxy 
  to:main::@24
main::@24: scope:[main]  from main::@23
  rem16u#67 = phi( main::@23/rem16u#69 )
  rand_state#65 = phi( main::@23/rand_state#67 )
  CONIO_SCREEN_BANK#70 = phi( main::@23/CONIO_SCREEN_BANK#83 )
  CONIO_SCREEN_TEXT#73 = phi( main::@23/CONIO_SCREEN_TEXT#89 )
  cputs::s#1 = main::s
  call cputs 
  to:main::@25
main::@25: scope:[main]  from main::@24
  rem16u#65 = phi( main::@24/rem16u#67 )
  rand_state#63 = phi( main::@24/rand_state#65 )
  CONIO_SCREEN_BANK#71 = phi( main::@24/CONIO_SCREEN_BANK#70 )
  CONIO_SCREEN_TEXT#74 = phi( main::@24/CONIO_SCREEN_TEXT#73 )
  cputs::s#2 = main::s1
  call cputs 
  to:main::@26
main::@26: scope:[main]  from main::@25
  rem16u#63 = phi( main::@25/rem16u#65 )
  rand_state#61 = phi( main::@25/rand_state#63 )
  CONIO_SCREEN_BANK#72 = phi( main::@25/CONIO_SCREEN_BANK#71 )
  CONIO_SCREEN_TEXT#75 = phi( main::@25/CONIO_SCREEN_TEXT#74 )
  cputs::s#3 = main::s2
  call cputs 
  to:main::@27
main::@27: scope:[main]  from main::@26
  rem16u#61 = phi( main::@26/rem16u#63 )
  rand_state#59 = phi( main::@26/rand_state#61 )
  CONIO_SCREEN_BANK#73 = phi( main::@26/CONIO_SCREEN_BANK#72 )
  CONIO_SCREEN_TEXT#76 = phi( main::@26/CONIO_SCREEN_TEXT#75 )
  cputs::s#4 = main::s3
  call cputs 
  to:main::@28
main::@28: scope:[main]  from main::@27
  rem16u#59 = phi( main::@27/rem16u#61 )
  CONIO_SCREEN_BANK#108 = phi( main::@27/CONIO_SCREEN_BANK#73 )
  rand_state#56 = phi( main::@27/rand_state#59 )
  CONIO_SCREEN_TEXT#119 = phi( main::@27/CONIO_SCREEN_TEXT#76 )
  main::vera_layer_show1_layer#0 = 0
  to:main::vera_layer_show1
main::vera_layer_show1: scope:[main]  from main::@28
  rem16u#56 = phi( main::@28/rem16u#59 )
  CONIO_SCREEN_BANK#106 = phi( main::@28/CONIO_SCREEN_BANK#108 )
  rand_state#52 = phi( main::@28/rand_state#56 )
  CONIO_SCREEN_TEXT#117 = phi( main::@28/CONIO_SCREEN_TEXT#119 )
  main::vera_layer_show1_layer#1 = phi( main::@28/main::vera_layer_show1_layer#0 )
  *VERA_DC_VIDEO = *VERA_DC_VIDEO | vera_layer_enable[main::vera_layer_show1_layer#1]
  to:main::@10
main::@10: scope:[main]  from main::vera_layer_show1
  rem16u#52 = phi( main::vera_layer_show1/rem16u#56 )
  CONIO_SCREEN_BANK#104 = phi( main::vera_layer_show1/CONIO_SCREEN_BANK#106 )
  rand_state#50 = phi( main::vera_layer_show1/rand_state#52 )
  CONIO_SCREEN_TEXT#115 = phi( main::vera_layer_show1/CONIO_SCREEN_TEXT#117 )
  bitmap_init::layer#0 = 0
  bitmap_init::address#0 = 0
  call bitmap_init 
  to:main::@29
main::@29: scope:[main]  from main::@10
  rem16u#50 = phi( main::@10/rem16u#52 )
  CONIO_SCREEN_BANK#102 = phi( main::@10/CONIO_SCREEN_BANK#104 )
  rand_state#48 = phi( main::@10/rand_state#50 )
  CONIO_SCREEN_TEXT#112 = phi( main::@10/CONIO_SCREEN_TEXT#115 )
  call bitmap_clear 
  to:main::@30
main::@30: scope:[main]  from main::@29
  rem16u#48 = phi( main::@29/rem16u#50 )
  CONIO_SCREEN_BANK#100 = phi( main::@29/CONIO_SCREEN_BANK#102 )
  rand_state#46 = phi( main::@29/rand_state#48 )
  CONIO_SCREEN_TEXT#109 = phi( main::@29/CONIO_SCREEN_TEXT#112 )
  gotoxy::x#4 = 0
  gotoxy::y#4 = $1d
  call gotoxy 
  to:main::@31
main::@31: scope:[main]  from main::@30
  rem16u#46 = phi( main::@30/rem16u#48 )
  CONIO_SCREEN_BANK#96 = phi( main::@30/CONIO_SCREEN_BANK#100 )
  rand_state#44 = phi( main::@30/rand_state#46 )
  CONIO_SCREEN_TEXT#105 = phi( main::@30/CONIO_SCREEN_TEXT#109 )
  main::textcolor2_color#0 = YELLOW
  to:main::textcolor2
main::textcolor2: scope:[main]  from main::@31
  rem16u#44 = phi( main::@31/rem16u#46 )
  CONIO_SCREEN_BANK#91 = phi( main::@31/CONIO_SCREEN_BANK#96 )
  rand_state#42 = phi( main::@31/rand_state#44 )
  CONIO_SCREEN_TEXT#99 = phi( main::@31/CONIO_SCREEN_TEXT#105 )
  main::textcolor2_color#1 = phi( main::@31/main::textcolor2_color#0 )
  vera_layer_set_textcolor::layer#2 = conio_screen_layer
  vera_layer_set_textcolor::color#2 = main::textcolor2_color#1
  call vera_layer_set_textcolor 
  vera_layer_set_textcolor::return#4 = vera_layer_set_textcolor::return#1
  to:main::@32
main::@32: scope:[main]  from main::textcolor2
  rem16u#42 = phi( main::textcolor2/rem16u#44 )
  CONIO_SCREEN_BANK#84 = phi( main::textcolor2/CONIO_SCREEN_BANK#91 )
  rand_state#40 = phi( main::textcolor2/rand_state#42 )
  CONIO_SCREEN_TEXT#90 = phi( main::textcolor2/CONIO_SCREEN_TEXT#99 )
  to:main::@11
main::@11: scope:[main]  from main::@32
  rem16u#39 = phi( main::@32/rem16u#42 )
  CONIO_SCREEN_BANK#69 = phi( main::@32/CONIO_SCREEN_BANK#84 )
  rand_state#38 = phi( main::@32/rand_state#40 )
  CONIO_SCREEN_TEXT#71 = phi( main::@32/CONIO_SCREEN_TEXT#90 )
  cputs::s#5 = main::s4
  call cputs 
  to:main::@33
main::@33: scope:[main]  from main::@11
  CONIO_SCREEN_BANK#109 = phi( main::@11/CONIO_SCREEN_BANK#69 )
  CONIO_SCREEN_TEXT#113 = phi( main::@11/CONIO_SCREEN_TEXT#71 )
  rem16u#36 = phi( main::@11/rem16u#39 )
  rand_state#35 = phi( main::@11/rand_state#38 )
  to:main::@1
main::@1: scope:[main]  from main::@33 main::@44
  CONIO_SCREEN_BANK#107 = phi( main::@33/CONIO_SCREEN_BANK#109, main::@44/CONIO_SCREEN_BANK#110 )
  CONIO_SCREEN_TEXT#110 = phi( main::@33/CONIO_SCREEN_TEXT#113, main::@44/CONIO_SCREEN_TEXT#114 )
  rem16u#34 = phi( main::@33/rem16u#36, main::@44/rem16u#37 )
  rand_state#33 = phi( main::@33/rand_state#35, main::@44/rand_state#36 )
  call kbhit 
  kbhit::return#2 = kbhit::return#1
  to:main::@34
main::@34: scope:[main]  from main::@1
  CONIO_SCREEN_BANK#105 = phi( main::@1/CONIO_SCREEN_BANK#107 )
  CONIO_SCREEN_TEXT#106 = phi( main::@1/CONIO_SCREEN_TEXT#110 )
  rem16u#32 = phi( main::@1/rem16u#34 )
  rand_state#30 = phi( main::@1/rand_state#33 )
  kbhit::return#5 = phi( main::@1/kbhit::return#2 )
  main::$30 = kbhit::return#5
  main::$48 = 0 != main::$30
  main::$31 = ! main::$48
  if(main::$31) goto main::@2
  to:main::@3
main::@2: scope:[main]  from main::@34
  CONIO_SCREEN_BANK#120 = phi( main::@34/CONIO_SCREEN_BANK#105 )
  CONIO_SCREEN_TEXT#127 = phi( main::@34/CONIO_SCREEN_TEXT#106 )
  rem16u#29 = phi( main::@34/rem16u#32 )
  rand_state#23 = phi( main::@34/rand_state#30 )
  call rand 
  rand::return#2 = rand::return#1
  to:main::@35
main::@35: scope:[main]  from main::@2
  CONIO_SCREEN_BANK#119 = phi( main::@2/CONIO_SCREEN_BANK#120 )
  CONIO_SCREEN_TEXT#126 = phi( main::@2/CONIO_SCREEN_TEXT#127 )
  rem16u#23 = phi( main::@2/rem16u#29 )
  rand_state#15 = phi( main::@2/rand_state#3 )
  rand::return#8 = phi( main::@2/rand::return#2 )
  main::$32 = rand::return#8
  rand_state#4 = rand_state#15
  modr16u::dividend#0 = main::$32
  modr16u::divisor#0 = $140
  modr16u::rem#0 = 0
  call modr16u 
  modr16u::return#2 = modr16u::return#1
  to:main::@36
main::@36: scope:[main]  from main::@35
  CONIO_SCREEN_BANK#118 = phi( main::@35/CONIO_SCREEN_BANK#119 )
  CONIO_SCREEN_TEXT#125 = phi( main::@35/CONIO_SCREEN_TEXT#126 )
  rand_state#24 = phi( main::@35/rand_state#4 )
  rem16u#15 = phi( main::@35/rem16u#3 )
  modr16u::return#7 = phi( main::@35/modr16u::return#2 )
  main::$33 = modr16u::return#7
  rem16u#4 = rem16u#15
  call rand 
  rand::return#3 = rand::return#1
  to:main::@37
main::@37: scope:[main]  from main::@36
  CONIO_SCREEN_BANK#117 = phi( main::@36/CONIO_SCREEN_BANK#118 )
  CONIO_SCREEN_TEXT#124 = phi( main::@36/CONIO_SCREEN_TEXT#125 )
  rem16u#24 = phi( main::@36/rem16u#4 )
  rand_state#16 = phi( main::@36/rand_state#3 )
  rand::return#9 = phi( main::@36/rand::return#3 )
  main::$34 = rand::return#9
  rand_state#5 = rand_state#16
  modr16u::dividend#1 = main::$34
  modr16u::divisor#1 = $140
  modr16u::rem#1 = 0
  call modr16u 
  modr16u::return#3 = modr16u::return#1
  to:main::@38
main::@38: scope:[main]  from main::@37
  CONIO_SCREEN_BANK#116 = phi( main::@37/CONIO_SCREEN_BANK#117 )
  CONIO_SCREEN_TEXT#123 = phi( main::@37/CONIO_SCREEN_TEXT#124 )
  rand_state#25 = phi( main::@37/rand_state#5 )
  rem16u#16 = phi( main::@37/rem16u#3 )
  modr16u::return#8 = phi( main::@37/modr16u::return#3 )
  main::$35 = modr16u::return#8
  rem16u#5 = rem16u#16
  call rand 
  rand::return#4 = rand::return#1
  to:main::@39
main::@39: scope:[main]  from main::@38
  CONIO_SCREEN_BANK#115 = phi( main::@38/CONIO_SCREEN_BANK#116 )
  CONIO_SCREEN_TEXT#122 = phi( main::@38/CONIO_SCREEN_TEXT#123 )
  rem16u#25 = phi( main::@38/rem16u#5 )
  rand_state#17 = phi( main::@38/rand_state#3 )
  rand::return#10 = phi( main::@38/rand::return#4 )
  main::$36 = rand::return#10
  rand_state#6 = rand_state#17
  modr16u::dividend#2 = main::$36
  modr16u::divisor#2 = $c8
  modr16u::rem#2 = 0
  call modr16u 
  modr16u::return#4 = modr16u::return#1
  to:main::@40
main::@40: scope:[main]  from main::@39
  CONIO_SCREEN_BANK#114 = phi( main::@39/CONIO_SCREEN_BANK#115 )
  CONIO_SCREEN_TEXT#121 = phi( main::@39/CONIO_SCREEN_TEXT#122 )
  rand_state#26 = phi( main::@39/rand_state#6 )
  rem16u#17 = phi( main::@39/rem16u#3 )
  modr16u::return#9 = phi( main::@39/modr16u::return#4 )
  main::$37 = modr16u::return#9
  rem16u#6 = rem16u#17
  call rand 
  rand::return#5 = rand::return#1
  to:main::@41
main::@41: scope:[main]  from main::@40
  CONIO_SCREEN_BANK#113 = phi( main::@40/CONIO_SCREEN_BANK#114 )
  CONIO_SCREEN_TEXT#120 = phi( main::@40/CONIO_SCREEN_TEXT#121 )
  rem16u#26 = phi( main::@40/rem16u#6 )
  rand_state#18 = phi( main::@40/rand_state#3 )
  rand::return#11 = phi( main::@40/rand::return#5 )
  main::$38 = rand::return#11
  rand_state#7 = rand_state#18
  modr16u::dividend#3 = main::$38
  modr16u::divisor#3 = $c8
  modr16u::rem#3 = 0
  call modr16u 
  modr16u::return#5 = modr16u::return#1
  to:main::@42
main::@42: scope:[main]  from main::@41
  CONIO_SCREEN_BANK#112 = phi( main::@41/CONIO_SCREEN_BANK#113 )
  CONIO_SCREEN_TEXT#118 = phi( main::@41/CONIO_SCREEN_TEXT#120 )
  rand_state#27 = phi( main::@41/rand_state#7 )
  rem16u#18 = phi( main::@41/rem16u#3 )
  modr16u::return#10 = phi( main::@41/modr16u::return#5 )
  main::$39 = modr16u::return#10
  rem16u#7 = rem16u#18
  call rand 
  rand::return#6 = rand::return#1
  to:main::@43
main::@43: scope:[main]  from main::@42
  CONIO_SCREEN_BANK#111 = phi( main::@42/CONIO_SCREEN_BANK#112 )
  CONIO_SCREEN_TEXT#116 = phi( main::@42/CONIO_SCREEN_TEXT#118 )
  rem16u#40 = phi( main::@42/rem16u#7 )
  rand_state#19 = phi( main::@42/rand_state#3 )
  rand::return#12 = phi( main::@42/rand::return#6 )
  main::$40 = rand::return#12
  rand_state#8 = rand_state#19
  main::$41 = main::$40 & $ff
  bitmap_line::x0#0 = main::$33
  bitmap_line::x1#0 = main::$35
  bitmap_line::y0#0 = main::$37
  bitmap_line::y1#0 = main::$39
  bitmap_line::c#0 = main::$41
  call bitmap_line 
  to:main::@44
main::@44: scope:[main]  from main::@43
  CONIO_SCREEN_BANK#110 = phi( main::@43/CONIO_SCREEN_BANK#111 )
  CONIO_SCREEN_TEXT#114 = phi( main::@43/CONIO_SCREEN_TEXT#116 )
  rem16u#37 = phi( main::@43/rem16u#40 )
  rand_state#36 = phi( main::@43/rand_state#8 )
  to:main::@1
main::@3: scope:[main]  from main::@34
  rem16u#84 = phi( main::@34/rem16u#32 )
  rand_state#84 = phi( main::@34/rand_state#30 )
  CONIO_SCREEN_BANK#103 = phi( main::@34/CONIO_SCREEN_BANK#105 )
  CONIO_SCREEN_TEXT#100 = phi( main::@34/CONIO_SCREEN_TEXT#106 )
  main::textcolor3_color#0 = WHITE
  to:main::textcolor3
main::textcolor3: scope:[main]  from main::@3
  rem16u#82 = phi( main::@3/rem16u#84 )
  rand_state#82 = phi( main::@3/rand_state#84 )
  CONIO_SCREEN_BANK#101 = phi( main::@3/CONIO_SCREEN_BANK#103 )
  CONIO_SCREEN_TEXT#91 = phi( main::@3/CONIO_SCREEN_TEXT#100 )
  main::textcolor3_color#1 = phi( main::@3/main::textcolor3_color#0 )
  vera_layer_set_textcolor::layer#3 = conio_screen_layer
  vera_layer_set_textcolor::color#3 = main::textcolor3_color#1
  call vera_layer_set_textcolor 
  vera_layer_set_textcolor::return#5 = vera_layer_set_textcolor::return#1
  to:main::@45
main::@45: scope:[main]  from main::textcolor3
  rem16u#80 = phi( main::textcolor3/rem16u#82 )
  rand_state#80 = phi( main::textcolor3/rand_state#82 )
  CONIO_SCREEN_BANK#97 = phi( main::textcolor3/CONIO_SCREEN_BANK#101 )
  CONIO_SCREEN_TEXT#82 = phi( main::textcolor3/CONIO_SCREEN_TEXT#91 )
  to:main::@12
main::@12: scope:[main]  from main::@45
  rem16u#78 = phi( main::@45/rem16u#80 )
  rand_state#78 = phi( main::@45/rand_state#80 )
  CONIO_SCREEN_BANK#92 = phi( main::@45/CONIO_SCREEN_BANK#97 )
  CONIO_SCREEN_TEXT#66 = phi( main::@45/CONIO_SCREEN_TEXT#82 )
  main::bgcolor2_color#0 = BLACK
  to:main::bgcolor2
main::bgcolor2: scope:[main]  from main::@12
  rem16u#76 = phi( main::@12/rem16u#78 )
  rand_state#76 = phi( main::@12/rand_state#78 )
  CONIO_SCREEN_BANK#85 = phi( main::@12/CONIO_SCREEN_BANK#92 )
  CONIO_SCREEN_TEXT#56 = phi( main::@12/CONIO_SCREEN_TEXT#66 )
  main::bgcolor2_color#1 = phi( main::@12/main::bgcolor2_color#0 )
  vera_layer_set_backcolor::layer#2 = conio_screen_layer
  vera_layer_set_backcolor::color#2 = main::bgcolor2_color#1
  call vera_layer_set_backcolor 
  vera_layer_set_backcolor::return#4 = vera_layer_set_backcolor::return#1
  to:main::@46
main::@46: scope:[main]  from main::bgcolor2
  rem16u#74 = phi( main::bgcolor2/rem16u#76 )
  rand_state#74 = phi( main::bgcolor2/rand_state#76 )
  CONIO_SCREEN_BANK#78 = phi( main::bgcolor2/CONIO_SCREEN_BANK#85 )
  CONIO_SCREEN_TEXT#45 = phi( main::bgcolor2/CONIO_SCREEN_TEXT#56 )
  to:main::@13
main::@13: scope:[main]  from main::@46
  rem16u#72 = phi( main::@46/rem16u#74 )
  rand_state#72 = phi( main::@46/rand_state#74 )
  CONIO_SCREEN_BANK#60 = phi( main::@46/CONIO_SCREEN_BANK#78 )
  CONIO_SCREEN_TEXT#24 = phi( main::@46/CONIO_SCREEN_TEXT#45 )
  call clrscr 
  to:main::@47
main::@47: scope:[main]  from main::@13
  rem16u#70 = phi( main::@13/rem16u#72 )
  rand_state#70 = phi( main::@13/rand_state#72 )
  CONIO_SCREEN_BANK#86 = phi( main::@13/CONIO_SCREEN_BANK#60 )
  CONIO_SCREEN_TEXT#92 = phi( main::@13/CONIO_SCREEN_TEXT#24 )
  gotoxy::x#5 = 0
  gotoxy::y#5 = $1a
  call gotoxy 
  to:main::@48
main::@48: scope:[main]  from main::@47
  rem16u#68 = phi( main::@47/rem16u#70 )
  rand_state#68 = phi( main::@47/rand_state#70 )
  CONIO_SCREEN_BANK#74 = phi( main::@47/CONIO_SCREEN_BANK#86 )
  CONIO_SCREEN_TEXT#77 = phi( main::@47/CONIO_SCREEN_TEXT#92 )
  cputs::s#6 = main::s5
  call cputs 
  to:main::@49
main::@49: scope:[main]  from main::@48
  rem16u#66 = phi( main::@48/rem16u#68 )
  rand_state#66 = phi( main::@48/rand_state#68 )
  CONIO_SCREEN_BANK#98 = phi( main::@48/CONIO_SCREEN_BANK#74 )
  CONIO_SCREEN_TEXT#111 = phi( main::@48/CONIO_SCREEN_TEXT#77 )
  gotoxy::x#6 = 0
  gotoxy::y#6 = $1d
  call gotoxy 
  to:main::@50
main::@50: scope:[main]  from main::@49
  rem16u#64 = phi( main::@49/rem16u#66 )
  rand_state#64 = phi( main::@49/rand_state#66 )
  CONIO_SCREEN_BANK#93 = phi( main::@49/CONIO_SCREEN_BANK#98 )
  CONIO_SCREEN_TEXT#107 = phi( main::@49/CONIO_SCREEN_TEXT#111 )
  main::textcolor4_color#0 = YELLOW
  to:main::textcolor4
main::textcolor4: scope:[main]  from main::@50
  rem16u#62 = phi( main::@50/rem16u#64 )
  rand_state#62 = phi( main::@50/rand_state#64 )
  CONIO_SCREEN_BANK#87 = phi( main::@50/CONIO_SCREEN_BANK#93 )
  CONIO_SCREEN_TEXT#101 = phi( main::@50/CONIO_SCREEN_TEXT#107 )
  main::textcolor4_color#1 = phi( main::@50/main::textcolor4_color#0 )
  vera_layer_set_textcolor::layer#4 = conio_screen_layer
  vera_layer_set_textcolor::color#4 = main::textcolor4_color#1
  call vera_layer_set_textcolor 
  vera_layer_set_textcolor::return#6 = vera_layer_set_textcolor::return#1
  to:main::@51
main::@51: scope:[main]  from main::textcolor4
  rem16u#60 = phi( main::textcolor4/rem16u#62 )
  rand_state#60 = phi( main::textcolor4/rand_state#62 )
  CONIO_SCREEN_BANK#79 = phi( main::textcolor4/CONIO_SCREEN_BANK#87 )
  CONIO_SCREEN_TEXT#93 = phi( main::textcolor4/CONIO_SCREEN_TEXT#101 )
  to:main::@14
main::@14: scope:[main]  from main::@51
  rem16u#57 = phi( main::@51/rem16u#60 )
  rand_state#57 = phi( main::@51/rand_state#60 )
  CONIO_SCREEN_BANK#66 = phi( main::@51/CONIO_SCREEN_BANK#79 )
  CONIO_SCREEN_TEXT#72 = phi( main::@51/CONIO_SCREEN_TEXT#93 )
  cputs::s#7 = main::s6
  call cputs 
  to:main::@52
main::@52: scope:[main]  from main::@14
  rem16u#53 = phi( main::@14/rem16u#57 )
  rand_state#53 = phi( main::@14/rand_state#57 )
  CONIO_SCREEN_TEXT#67 = phi( main::@14/CONIO_SCREEN_TEXT#72 )
  CONIO_SCREEN_BANK#56 = phi( main::@14/CONIO_SCREEN_BANK#66 )
  main::x#0 = 0
  main::color#0 = 0
  to:main::@4
main::@4: scope:[main]  from main::@52 main::@54 main::@7
  rem16u#51 = phi( main::@52/rem16u#53, main::@54/rem16u#54, main::@7/rem16u#55 )
  rand_state#51 = phi( main::@52/rand_state#53, main::@54/rand_state#54, main::@7/rand_state#55 )
  CONIO_SCREEN_TEXT#57 = phi( main::@52/CONIO_SCREEN_TEXT#67, main::@54/CONIO_SCREEN_TEXT#68, main::@7/CONIO_SCREEN_TEXT#69 )
  CONIO_SCREEN_BANK#48 = phi( main::@52/CONIO_SCREEN_BANK#56, main::@54/CONIO_SCREEN_BANK#57, main::@7/CONIO_SCREEN_BANK#58 )
  main::color#5 = phi( main::@52/main::color#0, main::@54/main::color#1, main::@7/main::color#6 )
  main::x#6 = phi( main::@52/main::x#0, main::@54/main::x#1, main::@7/main::x#2 )
  call kbhit 
  kbhit::return#3 = kbhit::return#1
  to:main::@53
main::@53: scope:[main]  from main::@4
  rem16u#49 = phi( main::@4/rem16u#51 )
  rand_state#49 = phi( main::@4/rand_state#51 )
  CONIO_SCREEN_TEXT#46 = phi( main::@4/CONIO_SCREEN_TEXT#57 )
  CONIO_SCREEN_BANK#38 = phi( main::@4/CONIO_SCREEN_BANK#48 )
  main::color#4 = phi( main::@4/main::color#5 )
  main::x#5 = phi( main::@4/main::x#6 )
  kbhit::return#6 = phi( main::@4/kbhit::return#3 )
  main::$43 = kbhit::return#6
  main::$49 = 0 != main::$43
  main::$44 = ! main::$49
  if(main::$44) goto main::@5
  to:main::@6
main::@5: scope:[main]  from main::@53
  rem16u#58 = phi( main::@53/rem16u#49 )
  rand_state#58 = phi( main::@53/rand_state#49 )
  CONIO_SCREEN_TEXT#83 = phi( main::@53/CONIO_SCREEN_TEXT#46 )
  CONIO_SCREEN_BANK#67 = phi( main::@53/CONIO_SCREEN_BANK#38 )
  main::color#2 = phi( main::@53/main::color#4 )
  main::x#3 = phi( main::@53/main::x#5 )
  bitmap_line::x0#1 = main::x#3
  bitmap_line::x1#1 = main::x#3
  bitmap_line::y0#1 = 0
  bitmap_line::y1#1 = $c7
  bitmap_line::c#1 = main::color#2
  call bitmap_line 
  to:main::@54
main::@54: scope:[main]  from main::@5
  rem16u#54 = phi( main::@5/rem16u#58 )
  rand_state#54 = phi( main::@5/rand_state#58 )
  CONIO_SCREEN_TEXT#68 = phi( main::@5/CONIO_SCREEN_TEXT#83 )
  CONIO_SCREEN_BANK#57 = phi( main::@5/CONIO_SCREEN_BANK#67 )
  main::x#4 = phi( main::@5/main::x#3 )
  main::color#3 = phi( main::@5/main::color#2 )
  main::color#1 = ++ main::color#3
  main::x#1 = ++ main::x#4
  main::$46 = main::x#1 > $13f
  main::$47 = ! main::$46
  if(main::$47) goto main::@4
  to:main::@7
main::@6: scope:[main]  from main::@53
  rem16u#47 = phi( main::@53/rem16u#49 )
  rand_state#47 = phi( main::@53/rand_state#49 )
  CONIO_SCREEN_TEXT#34 = phi( main::@53/CONIO_SCREEN_TEXT#46 )
  CONIO_SCREEN_BANK#28 = phi( main::@53/CONIO_SCREEN_BANK#38 )
  screenlayer::layer#2 = 1
  call screenlayer 
  to:main::@55
main::@55: scope:[main]  from main::@6
  rem16u#45 = phi( main::@6/rem16u#47 )
  rand_state#45 = phi( main::@6/rand_state#47 )
  CONIO_SCREEN_TEXT#19 = phi( main::@6/CONIO_SCREEN_TEXT#3 )
  CONIO_SCREEN_BANK#17 = phi( main::@6/CONIO_SCREEN_BANK#3 )
  CONIO_SCREEN_BANK#5 = CONIO_SCREEN_BANK#17
  CONIO_SCREEN_TEXT#5 = CONIO_SCREEN_TEXT#19
  main::textcolor5_color#0 = WHITE
  to:main::textcolor5
main::textcolor5: scope:[main]  from main::@55
  rem16u#43 = phi( main::@55/rem16u#45 )
  rand_state#43 = phi( main::@55/rand_state#45 )
  CONIO_SCREEN_BANK#88 = phi( main::@55/CONIO_SCREEN_BANK#5 )
  CONIO_SCREEN_TEXT#94 = phi( main::@55/CONIO_SCREEN_TEXT#5 )
  main::textcolor5_color#1 = phi( main::@55/main::textcolor5_color#0 )
  vera_layer_set_textcolor::layer#5 = conio_screen_layer
  vera_layer_set_textcolor::color#5 = main::textcolor5_color#1
  call vera_layer_set_textcolor 
  vera_layer_set_textcolor::return#7 = vera_layer_set_textcolor::return#1
  to:main::@56
main::@56: scope:[main]  from main::textcolor5
  rem16u#41 = phi( main::textcolor5/rem16u#43 )
  rand_state#41 = phi( main::textcolor5/rand_state#43 )
  CONIO_SCREEN_BANK#80 = phi( main::textcolor5/CONIO_SCREEN_BANK#88 )
  CONIO_SCREEN_TEXT#84 = phi( main::textcolor5/CONIO_SCREEN_TEXT#94 )
  to:main::@15
main::@15: scope:[main]  from main::@56
  rem16u#38 = phi( main::@56/rem16u#41 )
  rand_state#39 = phi( main::@56/rand_state#41 )
  CONIO_SCREEN_BANK#68 = phi( main::@56/CONIO_SCREEN_BANK#80 )
  CONIO_SCREEN_TEXT#70 = phi( main::@56/CONIO_SCREEN_TEXT#84 )
  main::bgcolor3_color#0 = BLUE
  to:main::bgcolor3
main::bgcolor3: scope:[main]  from main::@15
  rem16u#35 = phi( main::@15/rem16u#38 )
  rand_state#37 = phi( main::@15/rand_state#39 )
  CONIO_SCREEN_BANK#59 = phi( main::@15/CONIO_SCREEN_BANK#68 )
  CONIO_SCREEN_TEXT#58 = phi( main::@15/CONIO_SCREEN_TEXT#70 )
  main::bgcolor3_color#1 = phi( main::@15/main::bgcolor3_color#0 )
  vera_layer_set_backcolor::layer#3 = conio_screen_layer
  vera_layer_set_backcolor::color#3 = main::bgcolor3_color#1
  call vera_layer_set_backcolor 
  vera_layer_set_backcolor::return#5 = vera_layer_set_backcolor::return#1
  to:main::@57
main::@57: scope:[main]  from main::bgcolor3
  rem16u#33 = phi( main::bgcolor3/rem16u#35 )
  rand_state#34 = phi( main::bgcolor3/rand_state#37 )
  CONIO_SCREEN_BANK#49 = phi( main::bgcolor3/CONIO_SCREEN_BANK#59 )
  CONIO_SCREEN_TEXT#47 = phi( main::bgcolor3/CONIO_SCREEN_TEXT#58 )
  to:main::@16
main::@16: scope:[main]  from main::@57
  rem16u#30 = phi( main::@57/rem16u#33 )
  rand_state#31 = phi( main::@57/rand_state#34 )
  CONIO_SCREEN_BANK#39 = phi( main::@57/CONIO_SCREEN_BANK#49 )
  CONIO_SCREEN_TEXT#25 = phi( main::@57/CONIO_SCREEN_TEXT#47 )
  call clrscr 
  to:main::@58
main::@58: scope:[main]  from main::@16
  rem16u#27 = phi( main::@16/rem16u#30 )
  rand_state#28 = phi( main::@16/rand_state#31 )
  CONIO_SCREEN_TEXT#35 = phi( main::@16/CONIO_SCREEN_TEXT#25 )
  CONIO_SCREEN_BANK#29 = phi( main::@16/CONIO_SCREEN_BANK#39 )
  to:main::@return
main::@7: scope:[main]  from main::@54
  rem16u#55 = phi( main::@54/rem16u#54 )
  rand_state#55 = phi( main::@54/rand_state#54 )
  CONIO_SCREEN_TEXT#69 = phi( main::@54/CONIO_SCREEN_TEXT#68 )
  CONIO_SCREEN_BANK#58 = phi( main::@54/CONIO_SCREEN_BANK#57 )
  main::color#6 = phi( main::@54/main::color#1 )
  main::x#2 = 0
  to:main::@4
main::@return: scope:[main]  from main::@58
  rem16u#19 = phi( main::@58/rem16u#27 )
  rand_state#20 = phi( main::@58/rand_state#28 )
  CONIO_SCREEN_TEXT#20 = phi( main::@58/CONIO_SCREEN_TEXT#35 )
  CONIO_SCREEN_BANK#18 = phi( main::@58/CONIO_SCREEN_BANK#29 )
  CONIO_SCREEN_BANK#6 = CONIO_SCREEN_BANK#18
  CONIO_SCREEN_TEXT#6 = CONIO_SCREEN_TEXT#20
  rand_state#9 = rand_state#20
  rem16u#8 = rem16u#19
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  CONIO_SCREEN_TEXT#7 = DEFAULT_SCREEN
  CONIO_SCREEN_BANK#7 = 0
  conio_screen_width = 0
  conio_screen_height = 0
  conio_screen_layer = 1
  conio_width = 0
  conio_height = 0
  conio_rowshift = 0
  conio_rowskip = 0
  rand_state#10 = 1
  __bitmap_address = 0
  __bitmap_layer = 0
  __bitmap_hscale = 0
  __bitmap_vscale = 0
  __bitmap_color_depth = 0
  rem16u#9 = 0
  call conio_x16_init 
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  rem16u#31 = phi( __start::__init1/rem16u#9 )
  rand_state#32 = phi( __start::__init1/rand_state#10 )
  CONIO_SCREEN_TEXT#21 = phi( __start::__init1/CONIO_SCREEN_TEXT#1 )
  CONIO_SCREEN_BANK#19 = phi( __start::__init1/CONIO_SCREEN_BANK#1 )
  CONIO_SCREEN_BANK#8 = CONIO_SCREEN_BANK#19
  CONIO_SCREEN_TEXT#8 = CONIO_SCREEN_TEXT#21
  to:__start::@1
__start::@1: scope:[__start]  from __start::@2
  rem16u#28 = phi( __start::@2/rem16u#31 )
  rand_state#29 = phi( __start::@2/rand_state#32 )
  CONIO_SCREEN_TEXT#36 = phi( __start::@2/CONIO_SCREEN_TEXT#8 )
  CONIO_SCREEN_BANK#30 = phi( __start::@2/CONIO_SCREEN_BANK#8 )
  call main 
  to:__start::@3
__start::@3: scope:[__start]  from __start::@1
  rem16u#20 = phi( __start::@1/rem16u#8 )
  rand_state#21 = phi( __start::@1/rand_state#9 )
  CONIO_SCREEN_TEXT#22 = phi( __start::@1/CONIO_SCREEN_TEXT#6 )
  CONIO_SCREEN_BANK#20 = phi( __start::@1/CONIO_SCREEN_BANK#6 )
  CONIO_SCREEN_BANK#9 = CONIO_SCREEN_BANK#20
  CONIO_SCREEN_TEXT#9 = CONIO_SCREEN_TEXT#22
  rand_state#11 = rand_state#21
  rem16u#10 = rem16u#20
  to:__start::@return
__start::@return: scope:[__start]  from __start::@3
  rem16u#21 = phi( __start::@3/rem16u#10 )
  rand_state#22 = phi( __start::@3/rand_state#11 )
  CONIO_SCREEN_BANK#21 = phi( __start::@3/CONIO_SCREEN_BANK#9 )
  CONIO_SCREEN_TEXT#23 = phi( __start::@3/CONIO_SCREEN_TEXT#9 )
  CONIO_SCREEN_TEXT#10 = CONIO_SCREEN_TEXT#23
  CONIO_SCREEN_BANK#10 = CONIO_SCREEN_BANK#21
  rand_state#12 = rand_state#22
  rem16u#11 = rem16u#21
  return 
  to:@return

SYMBOL TABLE SSA
constant const byte BLACK = 0
constant const byte BLUE = 6
byte CONIO_SCREEN_BANK
byte CONIO_SCREEN_BANK#0
byte CONIO_SCREEN_BANK#1
byte CONIO_SCREEN_BANK#10
byte CONIO_SCREEN_BANK#100
byte CONIO_SCREEN_BANK#101
byte CONIO_SCREEN_BANK#102
byte CONIO_SCREEN_BANK#103
byte CONIO_SCREEN_BANK#104
byte CONIO_SCREEN_BANK#105
byte CONIO_SCREEN_BANK#106
byte CONIO_SCREEN_BANK#107
byte CONIO_SCREEN_BANK#108
byte CONIO_SCREEN_BANK#109
byte CONIO_SCREEN_BANK#11
byte CONIO_SCREEN_BANK#110
byte CONIO_SCREEN_BANK#111
byte CONIO_SCREEN_BANK#112
byte CONIO_SCREEN_BANK#113
byte CONIO_SCREEN_BANK#114
byte CONIO_SCREEN_BANK#115
byte CONIO_SCREEN_BANK#116
byte CONIO_SCREEN_BANK#117
byte CONIO_SCREEN_BANK#118
byte CONIO_SCREEN_BANK#119
byte CONIO_SCREEN_BANK#12
byte CONIO_SCREEN_BANK#120
byte CONIO_SCREEN_BANK#13
byte CONIO_SCREEN_BANK#14
byte CONIO_SCREEN_BANK#15
byte CONIO_SCREEN_BANK#16
byte CONIO_SCREEN_BANK#17
byte CONIO_SCREEN_BANK#18
byte CONIO_SCREEN_BANK#19
byte CONIO_SCREEN_BANK#2
byte CONIO_SCREEN_BANK#20
byte CONIO_SCREEN_BANK#21
byte CONIO_SCREEN_BANK#22
byte CONIO_SCREEN_BANK#23
byte CONIO_SCREEN_BANK#24
byte CONIO_SCREEN_BANK#25
byte CONIO_SCREEN_BANK#26
byte CONIO_SCREEN_BANK#27
byte CONIO_SCREEN_BANK#28
byte CONIO_SCREEN_BANK#29
byte CONIO_SCREEN_BANK#3
byte CONIO_SCREEN_BANK#30
byte CONIO_SCREEN_BANK#31
byte CONIO_SCREEN_BANK#32
byte CONIO_SCREEN_BANK#33
byte CONIO_SCREEN_BANK#34
byte CONIO_SCREEN_BANK#35
byte CONIO_SCREEN_BANK#36
byte CONIO_SCREEN_BANK#37
byte CONIO_SCREEN_BANK#38
byte CONIO_SCREEN_BANK#39
byte CONIO_SCREEN_BANK#4
byte CONIO_SCREEN_BANK#40
byte CONIO_SCREEN_BANK#41
byte CONIO_SCREEN_BANK#42
byte CONIO_SCREEN_BANK#43
byte CONIO_SCREEN_BANK#44
byte CONIO_SCREEN_BANK#45
byte CONIO_SCREEN_BANK#46
byte CONIO_SCREEN_BANK#47
byte CONIO_SCREEN_BANK#48
byte CONIO_SCREEN_BANK#49
byte CONIO_SCREEN_BANK#5
byte CONIO_SCREEN_BANK#50
byte CONIO_SCREEN_BANK#51
byte CONIO_SCREEN_BANK#52
byte CONIO_SCREEN_BANK#53
byte CONIO_SCREEN_BANK#54
byte CONIO_SCREEN_BANK#55
byte CONIO_SCREEN_BANK#56
byte CONIO_SCREEN_BANK#57
byte CONIO_SCREEN_BANK#58
byte CONIO_SCREEN_BANK#59
byte CONIO_SCREEN_BANK#6
byte CONIO_SCREEN_BANK#60
byte CONIO_SCREEN_BANK#61
byte CONIO_SCREEN_BANK#62
byte CONIO_SCREEN_BANK#63
byte CONIO_SCREEN_BANK#64
byte CONIO_SCREEN_BANK#65
byte CONIO_SCREEN_BANK#66
byte CONIO_SCREEN_BANK#67
byte CONIO_SCREEN_BANK#68
byte CONIO_SCREEN_BANK#69
byte CONIO_SCREEN_BANK#7
byte CONIO_SCREEN_BANK#70
byte CONIO_SCREEN_BANK#71
byte CONIO_SCREEN_BANK#72
byte CONIO_SCREEN_BANK#73
byte CONIO_SCREEN_BANK#74
byte CONIO_SCREEN_BANK#75
byte CONIO_SCREEN_BANK#76
byte CONIO_SCREEN_BANK#77
byte CONIO_SCREEN_BANK#78
byte CONIO_SCREEN_BANK#79
byte CONIO_SCREEN_BANK#8
byte CONIO_SCREEN_BANK#80
byte CONIO_SCREEN_BANK#81
byte CONIO_SCREEN_BANK#82
byte CONIO_SCREEN_BANK#83
byte CONIO_SCREEN_BANK#84
byte CONIO_SCREEN_BANK#85
byte CONIO_SCREEN_BANK#86
byte CONIO_SCREEN_BANK#87
byte CONIO_SCREEN_BANK#88
byte CONIO_SCREEN_BANK#89
byte CONIO_SCREEN_BANK#9
byte CONIO_SCREEN_BANK#90
byte CONIO_SCREEN_BANK#91
byte CONIO_SCREEN_BANK#92
byte CONIO_SCREEN_BANK#93
byte CONIO_SCREEN_BANK#94
byte CONIO_SCREEN_BANK#95
byte CONIO_SCREEN_BANK#96
byte CONIO_SCREEN_BANK#97
byte CONIO_SCREEN_BANK#98
byte CONIO_SCREEN_BANK#99
byte* CONIO_SCREEN_TEXT
byte* CONIO_SCREEN_TEXT#0
byte* CONIO_SCREEN_TEXT#1
byte* CONIO_SCREEN_TEXT#10
byte* CONIO_SCREEN_TEXT#100
byte* CONIO_SCREEN_TEXT#101
byte* CONIO_SCREEN_TEXT#102
byte* CONIO_SCREEN_TEXT#103
byte* CONIO_SCREEN_TEXT#104
byte* CONIO_SCREEN_TEXT#105
byte* CONIO_SCREEN_TEXT#106
byte* CONIO_SCREEN_TEXT#107
byte* CONIO_SCREEN_TEXT#108
byte* CONIO_SCREEN_TEXT#109
byte* CONIO_SCREEN_TEXT#11
byte* CONIO_SCREEN_TEXT#110
byte* CONIO_SCREEN_TEXT#111
byte* CONIO_SCREEN_TEXT#112
byte* CONIO_SCREEN_TEXT#113
byte* CONIO_SCREEN_TEXT#114
byte* CONIO_SCREEN_TEXT#115
byte* CONIO_SCREEN_TEXT#116
byte* CONIO_SCREEN_TEXT#117
byte* CONIO_SCREEN_TEXT#118
byte* CONIO_SCREEN_TEXT#119
byte* CONIO_SCREEN_TEXT#12
byte* CONIO_SCREEN_TEXT#120
byte* CONIO_SCREEN_TEXT#121
byte* CONIO_SCREEN_TEXT#122
byte* CONIO_SCREEN_TEXT#123
byte* CONIO_SCREEN_TEXT#124
byte* CONIO_SCREEN_TEXT#125
byte* CONIO_SCREEN_TEXT#126
byte* CONIO_SCREEN_TEXT#127
byte* CONIO_SCREEN_TEXT#13
byte* CONIO_SCREEN_TEXT#14
byte* CONIO_SCREEN_TEXT#15
byte* CONIO_SCREEN_TEXT#16
byte* CONIO_SCREEN_TEXT#17
byte* CONIO_SCREEN_TEXT#18
byte* CONIO_SCREEN_TEXT#19
byte* CONIO_SCREEN_TEXT#2
byte* CONIO_SCREEN_TEXT#20
byte* CONIO_SCREEN_TEXT#21
byte* CONIO_SCREEN_TEXT#22
byte* CONIO_SCREEN_TEXT#23
byte* CONIO_SCREEN_TEXT#24
byte* CONIO_SCREEN_TEXT#25
byte* CONIO_SCREEN_TEXT#26
byte* CONIO_SCREEN_TEXT#27
byte* CONIO_SCREEN_TEXT#28
byte* CONIO_SCREEN_TEXT#29
byte* CONIO_SCREEN_TEXT#3
byte* CONIO_SCREEN_TEXT#30
byte* CONIO_SCREEN_TEXT#31
byte* CONIO_SCREEN_TEXT#32
byte* CONIO_SCREEN_TEXT#33
byte* CONIO_SCREEN_TEXT#34
byte* CONIO_SCREEN_TEXT#35
byte* CONIO_SCREEN_TEXT#36
byte* CONIO_SCREEN_TEXT#37
byte* CONIO_SCREEN_TEXT#38
byte* CONIO_SCREEN_TEXT#39
byte* CONIO_SCREEN_TEXT#4
byte* CONIO_SCREEN_TEXT#40
byte* CONIO_SCREEN_TEXT#41
byte* CONIO_SCREEN_TEXT#42
byte* CONIO_SCREEN_TEXT#43
byte* CONIO_SCREEN_TEXT#44
byte* CONIO_SCREEN_TEXT#45
byte* CONIO_SCREEN_TEXT#46
byte* CONIO_SCREEN_TEXT#47
byte* CONIO_SCREEN_TEXT#48
byte* CONIO_SCREEN_TEXT#49
byte* CONIO_SCREEN_TEXT#5
byte* CONIO_SCREEN_TEXT#50
byte* CONIO_SCREEN_TEXT#51
byte* CONIO_SCREEN_TEXT#52
byte* CONIO_SCREEN_TEXT#53
byte* CONIO_SCREEN_TEXT#54
byte* CONIO_SCREEN_TEXT#55
byte* CONIO_SCREEN_TEXT#56
byte* CONIO_SCREEN_TEXT#57
byte* CONIO_SCREEN_TEXT#58
byte* CONIO_SCREEN_TEXT#59
byte* CONIO_SCREEN_TEXT#6
byte* CONIO_SCREEN_TEXT#60
byte* CONIO_SCREEN_TEXT#61
byte* CONIO_SCREEN_TEXT#62
byte* CONIO_SCREEN_TEXT#63
byte* CONIO_SCREEN_TEXT#64
byte* CONIO_SCREEN_TEXT#65
byte* CONIO_SCREEN_TEXT#66
byte* CONIO_SCREEN_TEXT#67
byte* CONIO_SCREEN_TEXT#68
byte* CONIO_SCREEN_TEXT#69
byte* CONIO_SCREEN_TEXT#7
byte* CONIO_SCREEN_TEXT#70
byte* CONIO_SCREEN_TEXT#71
byte* CONIO_SCREEN_TEXT#72
byte* CONIO_SCREEN_TEXT#73
byte* CONIO_SCREEN_TEXT#74
byte* CONIO_SCREEN_TEXT#75
byte* CONIO_SCREEN_TEXT#76
byte* CONIO_SCREEN_TEXT#77
byte* CONIO_SCREEN_TEXT#78
byte* CONIO_SCREEN_TEXT#79
byte* CONIO_SCREEN_TEXT#8
byte* CONIO_SCREEN_TEXT#80
byte* CONIO_SCREEN_TEXT#81
byte* CONIO_SCREEN_TEXT#82
byte* CONIO_SCREEN_TEXT#83
byte* CONIO_SCREEN_TEXT#84
byte* CONIO_SCREEN_TEXT#85
byte* CONIO_SCREEN_TEXT#86
byte* CONIO_SCREEN_TEXT#87
byte* CONIO_SCREEN_TEXT#88
byte* CONIO_SCREEN_TEXT#89
byte* CONIO_SCREEN_TEXT#9
byte* CONIO_SCREEN_TEXT#90
byte* CONIO_SCREEN_TEXT#91
byte* CONIO_SCREEN_TEXT#92
byte* CONIO_SCREEN_TEXT#93
byte* CONIO_SCREEN_TEXT#94
byte* CONIO_SCREEN_TEXT#95
byte* CONIO_SCREEN_TEXT#96
byte* CONIO_SCREEN_TEXT#97
byte* CONIO_SCREEN_TEXT#98
byte* CONIO_SCREEN_TEXT#99
constant byte* const DEFAULT_SCREEN = (byte*)0
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant byte SIZEOF_DWORD = 4
constant byte SIZEOF_POINTER = 2
constant byte SIZEOF_WORD = 2
constant const byte VERA_ADDRSEL = 1
constant byte* const VERA_ADDRX_H = (byte*)$9f22
constant byte* const VERA_ADDRX_L = (byte*)$9f20
constant byte* const VERA_ADDRX_M = (byte*)$9f21
constant byte* const VERA_CTRL = (byte*)$9f25
constant byte* const VERA_DATA0 = (byte*)$9f23
constant byte* const VERA_DATA1 = (byte*)$9f24
constant byte* const VERA_DC_HSCALE = (byte*)$9f2a
constant byte* const VERA_DC_VIDEO = (byte*)$9f29
constant byte* const VERA_DC_VSCALE = (byte*)$9f2b
constant const byte VERA_INC_0 = 0
constant const byte VERA_INC_1 = $10
constant byte* const VERA_L0_CONFIG = (byte*)$9f2d
constant byte* const VERA_L0_MAPBASE = (byte*)$9f2e
constant byte* const VERA_L0_TILEBASE = (byte*)$9f2f
constant byte* const VERA_L1_CONFIG = (byte*)$9f34
constant byte* const VERA_L1_MAPBASE = (byte*)$9f35
constant byte* const VERA_L1_TILEBASE = (byte*)$9f36
constant const byte VERA_LAYER0_ENABLE = $10
constant const byte VERA_LAYER1_ENABLE = $20
constant const byte VERA_LAYER_COLOR_DEPTH_1BPP = 0
constant const byte VERA_LAYER_COLOR_DEPTH_2BPP = 1
constant const byte VERA_LAYER_COLOR_DEPTH_4BPP = 2
constant const byte VERA_LAYER_COLOR_DEPTH_8BPP = 3
constant const byte VERA_LAYER_COLOR_DEPTH_MASK = 3
constant const byte VERA_LAYER_CONFIG_16C = 0
constant const byte VERA_LAYER_CONFIG_256C = 8
constant const byte VERA_LAYER_CONFIG_MODE_BITMAP = 4
constant const word* VERA_LAYER_HEIGHT[4]  = { $20, $40, $80, $100 }
constant const byte VERA_LAYER_HEIGHT_128 = $80
constant const byte VERA_LAYER_HEIGHT_256 = $c0
constant const byte VERA_LAYER_HEIGHT_32 = 0
constant const byte VERA_LAYER_HEIGHT_64 = $40
constant const byte VERA_LAYER_HEIGHT_MASK = $c0
constant const byte VERA_LAYER_TILEBASE_MASK = $fc
constant const word* VERA_LAYER_WIDTH[4]  = { $20, $40, $80, $100 }
constant const byte VERA_LAYER_WIDTH_128 = $20
constant const byte VERA_LAYER_WIDTH_256 = $30
constant const byte VERA_LAYER_WIDTH_32 = 0
constant const byte VERA_LAYER_WIDTH_64 = $10
constant const byte VERA_LAYER_WIDTH_MASK = $30
constant const byte VERA_TILEBASE_HEIGHT_16 = 2
constant const byte VERA_TILEBASE_HEIGHT_8 = 0
constant const byte VERA_TILEBASE_WIDTH_16 = 1
constant const byte VERA_TILEBASE_WIDTH_8 = 0
constant const byte WHITE = 1
constant const byte YELLOW = 7
dword __bitmap_address loadstore
byte __bitmap_color_depth loadstore
byte __bitmap_hscale loadstore
byte __bitmap_layer loadstore
constant const byte* __bitmap_plot_bitmask[$280]  = { fill( $280, 0) }
constant const byte* __bitmap_plot_bitshift[$280]  = { fill( $280, 0) }
constant const word* __bitmap_plot_x[$280]  = { fill( $280, 0) }
constant const dword* __bitmap_plot_y[$1e0]  = { fill( $1e0, 0) }
byte __bitmap_vscale loadstore
void __start()
void bitmap_clear()
byte~ bitmap_clear::$0
byte~ bitmap_clear::$1
dword~ bitmap_clear::$2
byte~ bitmap_clear::$3
word~ bitmap_clear::$4
byte~ bitmap_clear::$6
byte~ bitmap_clear::$7
dword bitmap_clear::count
dword bitmap_clear::count#0
word bitmap_clear::hdelta
word bitmap_clear::hdelta#0
byte bitmap_clear::vbank
byte bitmap_clear::vbank#0
word bitmap_clear::vdelta
word bitmap_clear::vdelta#0
void* bitmap_clear::vdest
void* bitmap_clear::vdest#0
void bitmap_init(byte bitmap_init::layer , dword bitmap_init::address)
byte~ bitmap_init::$0
byte~ bitmap_init::$1
word~ bitmap_init::$10
bool~ bitmap_init::$11
bool~ bitmap_init::$12
word~ bitmap_init::$13
bool~ bitmap_init::$14
bool~ bitmap_init::$15
bool~ bitmap_init::$16
bool~ bitmap_init::$17
bool~ bitmap_init::$18
bool~ bitmap_init::$19
byte~ bitmap_init::$2
bool~ bitmap_init::$20
dword~ bitmap_init::$21
bool~ bitmap_init::$22
word~ bitmap_init::$23
word~ bitmap_init::$24
word~ bitmap_init::$25
word~ bitmap_init::$26
byte~ bitmap_init::$27
word~ bitmap_init::$28
byte~ bitmap_init::$3
byte~ bitmap_init::$4
bool~ bitmap_init::$5
bool~ bitmap_init::$6
word~ bitmap_init::$7
bool~ bitmap_init::$8
bool~ bitmap_init::$9
dword bitmap_init::address
dword bitmap_init::address#0
dword bitmap_init::address#1
byte bitmap_init::bitmask
byte bitmap_init::bitmask#0
byte bitmap_init::bitmask#1
byte bitmap_init::bitmask#10
byte bitmap_init::bitmask#11
byte bitmap_init::bitmask#12
byte bitmap_init::bitmask#13
byte bitmap_init::bitmask#14
byte bitmap_init::bitmask#15
byte bitmap_init::bitmask#16
byte bitmap_init::bitmask#2
byte bitmap_init::bitmask#3
byte bitmap_init::bitmask#4
byte bitmap_init::bitmask#5
byte bitmap_init::bitmask#6
byte bitmap_init::bitmask#7
byte bitmap_init::bitmask#8
byte bitmap_init::bitmask#9
signed byte bitmap_init::bitshift
signed byte bitmap_init::bitshift#0
signed byte bitmap_init::bitshift#1
signed byte bitmap_init::bitshift#10
signed byte bitmap_init::bitshift#11
signed byte bitmap_init::bitshift#12
signed byte bitmap_init::bitshift#13
signed byte bitmap_init::bitshift#14
signed byte bitmap_init::bitshift#15
signed byte bitmap_init::bitshift#16
signed byte bitmap_init::bitshift#2
signed byte bitmap_init::bitshift#3
signed byte bitmap_init::bitshift#4
signed byte bitmap_init::bitshift#5
signed byte bitmap_init::bitshift#6
signed byte bitmap_init::bitshift#7
signed byte bitmap_init::bitshift#8
signed byte bitmap_init::bitshift#9
word bitmap_init::hdelta
word bitmap_init::hdelta#0
word bitmap_init::hdelta#1
byte bitmap_init::layer
byte bitmap_init::layer#0
byte bitmap_init::layer#1
byte~ bitmap_init::vera_layer_get_color_depth1_$0
byte~ bitmap_init::vera_layer_get_color_depth1_$1
byte* bitmap_init::vera_layer_get_color_depth1_config
byte* bitmap_init::vera_layer_get_color_depth1_config#0
byte bitmap_init::vera_layer_get_color_depth1_layer
byte bitmap_init::vera_layer_get_color_depth1_layer#0
byte bitmap_init::vera_layer_get_color_depth1_layer#1
byte bitmap_init::vera_layer_get_color_depth1_return
byte bitmap_init::vera_layer_get_color_depth1_return#0
byte bitmap_init::vera_layer_get_color_depth1_return#1
byte bitmap_init::vera_layer_get_color_depth1_return#2
byte bitmap_init::vera_layer_get_color_depth1_return#3
word bitmap_init::x
word bitmap_init::x#0
word bitmap_init::x#1
word bitmap_init::x#10
word bitmap_init::x#11
word bitmap_init::x#12
word bitmap_init::x#13
word bitmap_init::x#14
word bitmap_init::x#2
word bitmap_init::x#3
word bitmap_init::x#4
word bitmap_init::x#5
word bitmap_init::x#6
word bitmap_init::x#7
word bitmap_init::x#8
word bitmap_init::x#9
word bitmap_init::y
word bitmap_init::y#0
word bitmap_init::y#1
word bitmap_init::y#2
dword bitmap_init::yoffs
dword bitmap_init::yoffs#0
dword bitmap_init::yoffs#1
dword bitmap_init::yoffs#2
void bitmap_line(word bitmap_line::x0 , word bitmap_line::x1 , word bitmap_line::y0 , word bitmap_line::y1 , byte bitmap_line::c)
bool~ bitmap_line::$0
word~ bitmap_line::$1
word~ bitmap_line::$11
bool~ bitmap_line::$12
word~ bitmap_line::$13
bool~ bitmap_line::$14
word~ bitmap_line::$17
bool~ bitmap_line::$18
bool~ bitmap_line::$2
word~ bitmap_line::$3
bool~ bitmap_line::$4
word~ bitmap_line::$7
bool~ bitmap_line::$8
byte bitmap_line::c
byte bitmap_line::c#0
byte bitmap_line::c#1
byte bitmap_line::c#10
byte bitmap_line::c#11
byte bitmap_line::c#12
byte bitmap_line::c#13
byte bitmap_line::c#14
byte bitmap_line::c#15
byte bitmap_line::c#16
byte bitmap_line::c#2
byte bitmap_line::c#3
byte bitmap_line::c#4
byte bitmap_line::c#5
byte bitmap_line::c#6
byte bitmap_line::c#7
byte bitmap_line::c#8
byte bitmap_line::c#9
word bitmap_line::x0
word bitmap_line::x0#0
word bitmap_line::x0#1
word bitmap_line::x0#10
word bitmap_line::x0#11
word bitmap_line::x0#12
word bitmap_line::x0#13
word bitmap_line::x0#14
word bitmap_line::x0#2
word bitmap_line::x0#3
word bitmap_line::x0#4
word bitmap_line::x0#5
word bitmap_line::x0#6
word bitmap_line::x0#7
word bitmap_line::x0#8
word bitmap_line::x0#9
word bitmap_line::x1
word bitmap_line::x1#0
word bitmap_line::x1#1
word bitmap_line::x1#10
word bitmap_line::x1#11
word bitmap_line::x1#12
word bitmap_line::x1#13
word bitmap_line::x1#14
word bitmap_line::x1#2
word bitmap_line::x1#3
word bitmap_line::x1#4
word bitmap_line::x1#5
word bitmap_line::x1#6
word bitmap_line::x1#7
word bitmap_line::x1#8
word bitmap_line::x1#9
word bitmap_line::xd
word bitmap_line::xd#0
word bitmap_line::xd#1
word bitmap_line::xd#10
word bitmap_line::xd#11
word bitmap_line::xd#12
word bitmap_line::xd#13
word bitmap_line::xd#14
word bitmap_line::xd#2
word bitmap_line::xd#3
word bitmap_line::xd#4
word bitmap_line::xd#5
word bitmap_line::xd#6
word bitmap_line::xd#7
word bitmap_line::xd#8
word bitmap_line::xd#9
word bitmap_line::y0
word bitmap_line::y0#0
word bitmap_line::y0#1
word bitmap_line::y0#10
word bitmap_line::y0#11
word bitmap_line::y0#12
word bitmap_line::y0#13
word bitmap_line::y0#14
word bitmap_line::y0#2
word bitmap_line::y0#3
word bitmap_line::y0#4
word bitmap_line::y0#5
word bitmap_line::y0#6
word bitmap_line::y0#7
word bitmap_line::y0#8
word bitmap_line::y0#9
word bitmap_line::y1
word bitmap_line::y1#0
word bitmap_line::y1#1
word bitmap_line::y1#10
word bitmap_line::y1#11
word bitmap_line::y1#12
word bitmap_line::y1#13
word bitmap_line::y1#14
word bitmap_line::y1#2
word bitmap_line::y1#3
word bitmap_line::y1#4
word bitmap_line::y1#5
word bitmap_line::y1#6
word bitmap_line::y1#7
word bitmap_line::y1#8
word bitmap_line::y1#9
word bitmap_line::yd
word bitmap_line::yd#0
word bitmap_line::yd#1
word bitmap_line::yd#10
word bitmap_line::yd#11
word bitmap_line::yd#12
word bitmap_line::yd#2
word bitmap_line::yd#3
word bitmap_line::yd#4
word bitmap_line::yd#5
word bitmap_line::yd#6
word bitmap_line::yd#7
word bitmap_line::yd#8
word bitmap_line::yd#9
void bitmap_line_xdyd(word bitmap_line_xdyd::x , word bitmap_line_xdyd::y , word bitmap_line_xdyd::x1 , word bitmap_line_xdyd::xd , word bitmap_line_xdyd::yd , byte bitmap_line_xdyd::c)
word~ bitmap_line_xdyd::$0
word~ bitmap_line_xdyd::$2
bool~ bitmap_line_xdyd::$3
bool~ bitmap_line_xdyd::$4
word~ bitmap_line_xdyd::$5
number~ bitmap_line_xdyd::$6
bool~ bitmap_line_xdyd::$7
byte bitmap_line_xdyd::c
byte bitmap_line_xdyd::c#0
byte bitmap_line_xdyd::c#1
byte bitmap_line_xdyd::c#2
byte bitmap_line_xdyd::c#3
byte bitmap_line_xdyd::c#4
byte bitmap_line_xdyd::c#5
byte bitmap_line_xdyd::c#6
word bitmap_line_xdyd::e
word bitmap_line_xdyd::e#0
word bitmap_line_xdyd::e#1
word bitmap_line_xdyd::e#2
word bitmap_line_xdyd::e#3
word bitmap_line_xdyd::e#4
word bitmap_line_xdyd::e#5
word bitmap_line_xdyd::e#6
word bitmap_line_xdyd::x
word bitmap_line_xdyd::x#0
word bitmap_line_xdyd::x#1
word bitmap_line_xdyd::x#2
word bitmap_line_xdyd::x#3
word bitmap_line_xdyd::x#4
word bitmap_line_xdyd::x#5
word bitmap_line_xdyd::x#6
word bitmap_line_xdyd::x#7
word bitmap_line_xdyd::x1
word bitmap_line_xdyd::x1#0
word bitmap_line_xdyd::x1#1
word bitmap_line_xdyd::x1#2
word bitmap_line_xdyd::x1#3
word bitmap_line_xdyd::x1#4
word bitmap_line_xdyd::x1#5
word bitmap_line_xdyd::x1#6
word bitmap_line_xdyd::xd
word bitmap_line_xdyd::xd#0
word bitmap_line_xdyd::xd#1
word bitmap_line_xdyd::xd#2
word bitmap_line_xdyd::xd#3
word bitmap_line_xdyd::xd#4
word bitmap_line_xdyd::xd#5
word bitmap_line_xdyd::xd#6
word bitmap_line_xdyd::y
word bitmap_line_xdyd::y#0
word bitmap_line_xdyd::y#1
word bitmap_line_xdyd::y#2
word bitmap_line_xdyd::y#3
word bitmap_line_xdyd::y#4
word bitmap_line_xdyd::y#5
word bitmap_line_xdyd::y#6
word bitmap_line_xdyd::y#7
word bitmap_line_xdyd::yd
word bitmap_line_xdyd::yd#0
word bitmap_line_xdyd::yd#1
word bitmap_line_xdyd::yd#2
word bitmap_line_xdyd::yd#3
word bitmap_line_xdyd::yd#4
word bitmap_line_xdyd::yd#5
word bitmap_line_xdyd::yd#6
void bitmap_line_xdyi(word bitmap_line_xdyi::x , word bitmap_line_xdyi::y , word bitmap_line_xdyi::x1 , word bitmap_line_xdyi::xd , word bitmap_line_xdyi::yd , byte bitmap_line_xdyi::c)
word~ bitmap_line_xdyi::$0
word~ bitmap_line_xdyi::$2
bool~ bitmap_line_xdyi::$3
bool~ bitmap_line_xdyi::$4
word~ bitmap_line_xdyi::$5
number~ bitmap_line_xdyi::$6
bool~ bitmap_line_xdyi::$7
byte bitmap_line_xdyi::c
byte bitmap_line_xdyi::c#0
byte bitmap_line_xdyi::c#1
byte bitmap_line_xdyi::c#2
byte bitmap_line_xdyi::c#3
byte bitmap_line_xdyi::c#4
byte bitmap_line_xdyi::c#5
byte bitmap_line_xdyi::c#6
word bitmap_line_xdyi::e
word bitmap_line_xdyi::e#0
word bitmap_line_xdyi::e#1
word bitmap_line_xdyi::e#2
word bitmap_line_xdyi::e#3
word bitmap_line_xdyi::e#4
word bitmap_line_xdyi::e#5
word bitmap_line_xdyi::e#6
word bitmap_line_xdyi::x
word bitmap_line_xdyi::x#0
word bitmap_line_xdyi::x#1
word bitmap_line_xdyi::x#2
word bitmap_line_xdyi::x#3
word bitmap_line_xdyi::x#4
word bitmap_line_xdyi::x#5
word bitmap_line_xdyi::x#6
word bitmap_line_xdyi::x#7
word bitmap_line_xdyi::x1
word bitmap_line_xdyi::x1#0
word bitmap_line_xdyi::x1#1
word bitmap_line_xdyi::x1#2
word bitmap_line_xdyi::x1#3
word bitmap_line_xdyi::x1#4
word bitmap_line_xdyi::x1#5
word bitmap_line_xdyi::x1#6
word bitmap_line_xdyi::xd
word bitmap_line_xdyi::xd#0
word bitmap_line_xdyi::xd#1
word bitmap_line_xdyi::xd#2
word bitmap_line_xdyi::xd#3
word bitmap_line_xdyi::xd#4
word bitmap_line_xdyi::xd#5
word bitmap_line_xdyi::xd#6
word bitmap_line_xdyi::y
word bitmap_line_xdyi::y#0
word bitmap_line_xdyi::y#1
word bitmap_line_xdyi::y#2
word bitmap_line_xdyi::y#3
word bitmap_line_xdyi::y#4
word bitmap_line_xdyi::y#5
word bitmap_line_xdyi::y#6
word bitmap_line_xdyi::y#7
word bitmap_line_xdyi::yd
word bitmap_line_xdyi::yd#0
word bitmap_line_xdyi::yd#1
word bitmap_line_xdyi::yd#2
word bitmap_line_xdyi::yd#3
word bitmap_line_xdyi::yd#4
word bitmap_line_xdyi::yd#5
word bitmap_line_xdyi::yd#6
void bitmap_line_ydxd(word bitmap_line_ydxd::y , word bitmap_line_ydxd::x , word bitmap_line_ydxd::y1 , word bitmap_line_ydxd::yd , word bitmap_line_ydxd::xd , byte bitmap_line_ydxd::c)
word~ bitmap_line_ydxd::$0
word~ bitmap_line_ydxd::$2
bool~ bitmap_line_ydxd::$3
bool~ bitmap_line_ydxd::$4
word~ bitmap_line_ydxd::$5
number~ bitmap_line_ydxd::$6
bool~ bitmap_line_ydxd::$7
byte bitmap_line_ydxd::c
byte bitmap_line_ydxd::c#0
byte bitmap_line_ydxd::c#1
byte bitmap_line_ydxd::c#2
byte bitmap_line_ydxd::c#3
byte bitmap_line_ydxd::c#4
byte bitmap_line_ydxd::c#5
byte bitmap_line_ydxd::c#6
word bitmap_line_ydxd::e
word bitmap_line_ydxd::e#0
word bitmap_line_ydxd::e#1
word bitmap_line_ydxd::e#2
word bitmap_line_ydxd::e#3
word bitmap_line_ydxd::e#4
word bitmap_line_ydxd::e#5
word bitmap_line_ydxd::e#6
word bitmap_line_ydxd::x
word bitmap_line_ydxd::x#0
word bitmap_line_ydxd::x#1
word bitmap_line_ydxd::x#2
word bitmap_line_ydxd::x#3
word bitmap_line_ydxd::x#4
word bitmap_line_ydxd::x#5
word bitmap_line_ydxd::x#6
word bitmap_line_ydxd::x#7
word bitmap_line_ydxd::xd
word bitmap_line_ydxd::xd#0
word bitmap_line_ydxd::xd#1
word bitmap_line_ydxd::xd#2
word bitmap_line_ydxd::xd#3
word bitmap_line_ydxd::xd#4
word bitmap_line_ydxd::xd#5
word bitmap_line_ydxd::xd#6
word bitmap_line_ydxd::y
word bitmap_line_ydxd::y#0
word bitmap_line_ydxd::y#1
word bitmap_line_ydxd::y#2
word bitmap_line_ydxd::y#3
word bitmap_line_ydxd::y#4
word bitmap_line_ydxd::y#5
word bitmap_line_ydxd::y#6
word bitmap_line_ydxd::y#7
word bitmap_line_ydxd::y#8
word bitmap_line_ydxd::y1
word bitmap_line_ydxd::y1#0
word bitmap_line_ydxd::y1#1
word bitmap_line_ydxd::y1#2
word bitmap_line_ydxd::y1#3
word bitmap_line_ydxd::y1#4
word bitmap_line_ydxd::y1#5
word bitmap_line_ydxd::y1#6
word bitmap_line_ydxd::yd
word bitmap_line_ydxd::yd#0
word bitmap_line_ydxd::yd#1
word bitmap_line_ydxd::yd#2
word bitmap_line_ydxd::yd#3
word bitmap_line_ydxd::yd#4
word bitmap_line_ydxd::yd#5
word bitmap_line_ydxd::yd#6
void bitmap_line_ydxi(word bitmap_line_ydxi::y , word bitmap_line_ydxi::x , word bitmap_line_ydxi::y1 , word bitmap_line_ydxi::yd , word bitmap_line_ydxi::xd , byte bitmap_line_ydxi::c)
word~ bitmap_line_ydxi::$0
word~ bitmap_line_ydxi::$2
bool~ bitmap_line_ydxi::$3
bool~ bitmap_line_ydxi::$4
word~ bitmap_line_ydxi::$5
number~ bitmap_line_ydxi::$6
bool~ bitmap_line_ydxi::$7
byte bitmap_line_ydxi::c
byte bitmap_line_ydxi::c#0
byte bitmap_line_ydxi::c#1
byte bitmap_line_ydxi::c#2
byte bitmap_line_ydxi::c#3
byte bitmap_line_ydxi::c#4
byte bitmap_line_ydxi::c#5
byte bitmap_line_ydxi::c#6
word bitmap_line_ydxi::e
word bitmap_line_ydxi::e#0
word bitmap_line_ydxi::e#1
word bitmap_line_ydxi::e#2
word bitmap_line_ydxi::e#3
word bitmap_line_ydxi::e#4
word bitmap_line_ydxi::e#5
word bitmap_line_ydxi::e#6
word bitmap_line_ydxi::x
word bitmap_line_ydxi::x#0
word bitmap_line_ydxi::x#1
word bitmap_line_ydxi::x#2
word bitmap_line_ydxi::x#3
word bitmap_line_ydxi::x#4
word bitmap_line_ydxi::x#5
word bitmap_line_ydxi::x#6
word bitmap_line_ydxi::x#7
word bitmap_line_ydxi::xd
word bitmap_line_ydxi::xd#0
word bitmap_line_ydxi::xd#1
word bitmap_line_ydxi::xd#2
word bitmap_line_ydxi::xd#3
word bitmap_line_ydxi::xd#4
word bitmap_line_ydxi::xd#5
word bitmap_line_ydxi::xd#6
word bitmap_line_ydxi::y
word bitmap_line_ydxi::y#0
word bitmap_line_ydxi::y#1
word bitmap_line_ydxi::y#2
word bitmap_line_ydxi::y#3
word bitmap_line_ydxi::y#4
word bitmap_line_ydxi::y#5
word bitmap_line_ydxi::y#6
word bitmap_line_ydxi::y#7
word bitmap_line_ydxi::y1
word bitmap_line_ydxi::y1#0
word bitmap_line_ydxi::y1#1
word bitmap_line_ydxi::y1#2
word bitmap_line_ydxi::y1#3
word bitmap_line_ydxi::y1#4
word bitmap_line_ydxi::y1#5
word bitmap_line_ydxi::y1#6
word bitmap_line_ydxi::yd
word bitmap_line_ydxi::yd#0
word bitmap_line_ydxi::yd#1
word bitmap_line_ydxi::yd#2
word bitmap_line_ydxi::yd#3
word bitmap_line_ydxi::yd#4
word bitmap_line_ydxi::yd#5
word bitmap_line_ydxi::yd#6
void bitmap_plot(word bitmap_plot::x , word bitmap_plot::y , byte bitmap_plot::c)
dword~ bitmap_plot::$0
byte~ bitmap_plot::$1
word~ bitmap_plot::$10
bool~ bitmap_plot::$11
byte~ bitmap_plot::$2
byte~ bitmap_plot::$3
byte~ bitmap_plot::$4
byte~ bitmap_plot::$6
byte~ bitmap_plot::$7
byte~ bitmap_plot::$8
word~ bitmap_plot::$9
byte bitmap_plot::bitshift
byte bitmap_plot::bitshift#0
byte bitmap_plot::bitshift#1
byte bitmap_plot::c
byte bitmap_plot::c#0
byte bitmap_plot::c#1
byte bitmap_plot::c#2
byte bitmap_plot::c#3
byte bitmap_plot::c#4
byte bitmap_plot::c#5
byte bitmap_plot::c#6
byte bitmap_plot::c#7
byte bitmap_plot::c#8
byte bitmap_plot::c#9
dword bitmap_plot::plot_x
dword bitmap_plot::plot_x#0
dword bitmap_plot::plot_y
dword bitmap_plot::plot_y#0
dword bitmap_plot::plotter
dword bitmap_plot::plotter#0
dword bitmap_plot::plotter#1
dword bitmap_plot::plotter#2
dword bitmap_plot::plotter#3
byte~ bitmap_plot::vera_vram_address01_$0
byte~ bitmap_plot::vera_vram_address01_$1
byte~ bitmap_plot::vera_vram_address01_$2
byte~ bitmap_plot::vera_vram_address01_$3
dword bitmap_plot::vera_vram_address01_bankaddr
dword bitmap_plot::vera_vram_address01_bankaddr#0
dword bitmap_plot::vera_vram_address01_bankaddr#1
byte bitmap_plot::vera_vram_address01_incr
byte bitmap_plot::vera_vram_address01_incr#0
byte bitmap_plot::vera_vram_address01_incr#1
word bitmap_plot::x
word bitmap_plot::x#0
word bitmap_plot::x#1
word bitmap_plot::x#2
word bitmap_plot::x#3
word bitmap_plot::x#4
word bitmap_plot::x#5
word bitmap_plot::x#6
word bitmap_plot::x#7
word bitmap_plot::x#8
word bitmap_plot::x#9
word bitmap_plot::y
word bitmap_plot::y#0
word bitmap_plot::y#1
word bitmap_plot::y#2
word bitmap_plot::y#3
word bitmap_plot::y#4
constant const byte* bitmasks[5]  = { $80, $c0, $f0, $ff }
constant const signed byte* bitshifts[5]  = { 7, 6, 4, 0 }
void clearline()
byte*~ clearline::$0
byte~ clearline::$1
byte~ clearline::$2
byte~ clearline::$3
bool~ clearline::$4
byte~ clearline::$5
byte* clearline::addr
byte* clearline::addr#0
word clearline::c
word clearline::c#0
word clearline::c#1
word clearline::c#2
word clearline::c#3
byte clearline::color
byte clearline::color#0
byte clearline::color#1
byte clearline::color#2
void clrscr()
byte~ clrscr::$0
byte~ clrscr::$1
byte~ clrscr::$2
byte~ clrscr::$3
bool~ clrscr::$4
byte~ clrscr::$5
byte~ clrscr::$6
byte~ clrscr::$7
bool~ clrscr::$8
byte~ clrscr::$9
byte clrscr::c
byte clrscr::c#0
byte clrscr::c#1
byte clrscr::c#2
byte clrscr::c#3
byte* clrscr::ch
byte* clrscr::ch#0
byte clrscr::color
byte clrscr::color#0
byte clrscr::color#1
byte clrscr::color#2
byte clrscr::color#3
byte clrscr::color#4
byte clrscr::color#5
byte clrscr::l
byte clrscr::l#0
byte clrscr::l#1
byte clrscr::l#2
byte clrscr::l#3
byte clrscr::l#4
byte clrscr::l#5
byte clrscr::l#6
byte* clrscr::line_text
byte* clrscr::line_text#0
byte* clrscr::line_text#1
byte* clrscr::line_text#2
byte* clrscr::line_text#3
byte* clrscr::line_text#4
byte* clrscr::line_text#5
byte* clrscr::line_text#6
byte* clrscr::line_text#7
byte* clrscr::line_text#8
constant byte* conio_cursor_x[2]  = { 0, 0 }
constant byte* conio_cursor_y[2]  = { 0, 0 }
word conio_height loadstore
constant word* conio_line_text[2]  = { 0, 0 }
byte conio_rowshift loadstore
word conio_rowskip loadstore
volatile byte conio_screen_height loadstore
byte conio_screen_layer loadstore
volatile byte conio_screen_width loadstore
constant byte* conio_scroll_enable[2]  = { 1, 1 }
word conio_width loadstore
void conio_x16_init()
bool~ conio_x16_init::$7
bool~ conio_x16_init::$8
number~ conio_x16_init::$9
constant byte* const conio_x16_init::BASIC_CURSOR_LINE = (byte*)$d6
byte conio_x16_init::line
byte conio_x16_init::line#0
byte conio_x16_init::line#1
byte conio_x16_init::line#2
byte conio_x16_init::line#3
byte conio_x16_init::line#4
byte conio_x16_init::line#5
byte conio_x16_init::line#6
byte conio_x16_init::line#7
byte conio_x16_init::line#8
byte conio_x16_init::line#9
void cputc(byte cputc::c)
byte~ cputc::$0
byte*~ cputc::$1
bool~ cputc::$11
bool~ cputc::$12
byte~ cputc::$15
word~ cputc::$16
bool~ cputc::$17
byte~ cputc::$2
bool~ cputc::$3
byte~ cputc::$4
byte~ cputc::$5
byte~ cputc::$6
bool~ cputc::$8
bool~ cputc::$9
byte cputc::c
byte cputc::c#0
byte cputc::c#1
byte cputc::c#2
byte cputc::c#3
byte cputc::color
byte cputc::color#0
byte cputc::color#1
byte* cputc::conio_addr
byte* cputc::conio_addr#0
byte* cputc::conio_addr#1
byte* cputc::conio_addr#2
byte cputc::scroll_enable
byte cputc::scroll_enable#0
void cputln()
byte~ cputln::$2
byte~ cputln::$3
word cputln::temp
word cputln::temp#0
word cputln::temp#1
void cputs(const byte* cputs::s)
byte~ cputs::$0
bool~ cputs::$2
byte cputs::c
byte cputs::c#0
byte cputs::c#1
byte cputs::c#2
const byte* cputs::s
const byte* cputs::s#0
const byte* cputs::s#1
const byte* cputs::s#10
const byte* cputs::s#11
const byte* cputs::s#2
const byte* cputs::s#3
const byte* cputs::s#4
const byte* cputs::s#5
const byte* cputs::s#6
const byte* cputs::s#7
const byte* cputs::s#8
const byte* cputs::s#9
void cscroll()
bool~ cscroll::$0
bool~ cscroll::$1
bool~ cscroll::$2
bool~ cscroll::$3
number~ cscroll::$5
bool~ cscroll::$7
word divr16u(word divr16u::dividend , word divr16u::divisor , word divr16u::rem)
word~ divr16u::$0
byte~ divr16u::$1
word~ divr16u::$10
bool~ divr16u::$11
number~ divr16u::$2
bool~ divr16u::$3
bool~ divr16u::$4
number~ divr16u::$5
word~ divr16u::$6
word~ divr16u::$7
bool~ divr16u::$8
bool~ divr16u::$9
word divr16u::dividend
word divr16u::dividend#0
word divr16u::dividend#1
word divr16u::dividend#2
word divr16u::dividend#3
word divr16u::dividend#4
word divr16u::dividend#5
word divr16u::dividend#6
word divr16u::dividend#7
word divr16u::divisor
word divr16u::divisor#0
word divr16u::divisor#1
word divr16u::divisor#2
word divr16u::divisor#3
word divr16u::divisor#4
word divr16u::divisor#5
word divr16u::divisor#6
byte divr16u::i
byte divr16u::i#0
byte divr16u::i#1
byte divr16u::i#2
byte divr16u::i#3
byte divr16u::i#4
byte divr16u::i#5
byte divr16u::i#6
word divr16u::quotient
word divr16u::quotient#0
word divr16u::quotient#1
word divr16u::quotient#2
word divr16u::quotient#3
word divr16u::quotient#4
word divr16u::quotient#5
word divr16u::quotient#6
word divr16u::quotient#7
word divr16u::quotient#8
word divr16u::rem
word divr16u::rem#0
word divr16u::rem#1
word divr16u::rem#10
word divr16u::rem#2
word divr16u::rem#3
word divr16u::rem#4
word divr16u::rem#5
word divr16u::rem#6
word divr16u::rem#7
word divr16u::rem#8
word divr16u::rem#9
word divr16u::return
word divr16u::return#0
word divr16u::return#1
word divr16u::return#2
word divr16u::return#3
void gotoxy(byte gotoxy::x , byte gotoxy::y)
bool~ gotoxy::$0
bool~ gotoxy::$1
bool~ gotoxy::$2
bool~ gotoxy::$3
word~ gotoxy::$4
byte~ gotoxy::$5
word~ gotoxy::$6
word gotoxy::line_offset
word gotoxy::line_offset#0
byte gotoxy::x
byte gotoxy::x#0
byte gotoxy::x#1
byte gotoxy::x#10
byte gotoxy::x#2
byte gotoxy::x#3
byte gotoxy::x#4
byte gotoxy::x#5
byte gotoxy::x#6
byte gotoxy::x#7
byte gotoxy::x#8
byte gotoxy::x#9
byte gotoxy::y
byte gotoxy::y#0
byte gotoxy::y#1
byte gotoxy::y#10
byte gotoxy::y#2
byte gotoxy::y#3
byte gotoxy::y#4
byte gotoxy::y#5
byte gotoxy::y#6
byte gotoxy::y#7
byte gotoxy::y#8
byte gotoxy::y#9
constant word* hdeltas[$10]  = { 0, $50, $28, $14, 0, $a0, $50, $28, 0, $140, $a0, $50, 0, $280, $140, $a0 }
void insertup()
number~ insertup::$0
bool~ insertup::$2
number~ insertup::$3
number~ insertup::$4
byte*~ insertup::$5
byte*~ insertup::$6
byte insertup::cy
byte insertup::cy#0
byte insertup::cy#1
byte insertup::cy#2
byte insertup::cy#3
byte insertup::i
byte insertup::i#0
byte insertup::i#1
byte insertup::i#2
byte insertup::i#3
byte insertup::i#4
word insertup::line
word insertup::line#0
byte* insertup::start
byte* insertup::start#0
byte insertup::width
byte insertup::width#0
byte insertup::width#1
byte insertup::width#2
byte insertup::width#3
byte kbhit()
constant byte* const kbhit::GETIN = (byte*)$ffe4
constant byte* const kbhit::IN_DEV = (byte*)$28a
volatile byte kbhit::ch loadstore
constant byte* const kbhit::chptr = &kbhit::ch
byte kbhit::return
byte kbhit::return#0
byte kbhit::return#1
byte kbhit::return#2
byte kbhit::return#3
byte kbhit::return#4
byte kbhit::return#5
byte kbhit::return#6
void main()
byte~ main::$30
bool~ main::$31
word~ main::$32
word~ main::$33
word~ main::$34
word~ main::$35
word~ main::$36
word~ main::$37
word~ main::$38
word~ main::$39
word~ main::$40
number~ main::$41
byte~ main::$43
bool~ main::$44
bool~ main::$46
bool~ main::$47
bool~ main::$48
bool~ main::$49
byte main::bgcolor1_color
byte main::bgcolor1_color#0
byte main::bgcolor1_color#1
byte main::bgcolor2_color
byte main::bgcolor2_color#0
byte main::bgcolor2_color#1
byte main::bgcolor3_color
byte main::bgcolor3_color#0
byte main::bgcolor3_color#1
byte main::color
byte main::color#0
byte main::color#1
byte main::color#2
byte main::color#3
byte main::color#4
byte main::color#5
byte main::color#6
constant byte* main::s[$16]  = "vera in bitmap mode,
"
constant byte* main::s1[$1f]  = "color depth 8 bits per pixel.
"
constant byte* main::s2[$29]  = "in this mode, it is possible to display
"
constant byte* main::s3[$19]  = "graphics in 256 colors.
"
constant byte* main::s4[$10]  = "press a key ..."
constant byte* main::s5[$27]  = "here you see all the colors possible.
"
constant byte* main::s6[$10]  = "press a key ..."
byte main::textcolor1_color
byte main::textcolor1_color#0
byte main::textcolor1_color#1
byte main::textcolor2_color
byte main::textcolor2_color#0
byte main::textcolor2_color#1
byte main::textcolor3_color
byte main::textcolor3_color#0
byte main::textcolor3_color#1
byte main::textcolor4_color
byte main::textcolor4_color#0
byte main::textcolor4_color#1
byte main::textcolor5_color
byte main::textcolor5_color#0
byte main::textcolor5_color#1
byte main::vera_layer_show1_layer
byte main::vera_layer_show1_layer#0
byte main::vera_layer_show1_layer#1
word main::x
word main::x#0
word main::x#1
word main::x#2
word main::x#3
word main::x#4
word main::x#5
word main::x#6
void memcpy_in_vram(byte memcpy_in_vram::dest_bank , void* memcpy_in_vram::dest , byte memcpy_in_vram::dest_increment , byte memcpy_in_vram::src_bank , void* memcpy_in_vram::src , byte memcpy_in_vram::src_increment , word memcpy_in_vram::num)
byte~ memcpy_in_vram::$0
byte~ memcpy_in_vram::$1
byte~ memcpy_in_vram::$2
byte~ memcpy_in_vram::$3
byte~ memcpy_in_vram::$4
byte~ memcpy_in_vram::$5
bool~ memcpy_in_vram::$6
void* memcpy_in_vram::dest
void* memcpy_in_vram::dest#0
void* memcpy_in_vram::dest#1
void* memcpy_in_vram::dest#2
byte memcpy_in_vram::dest_bank
byte memcpy_in_vram::dest_bank#0
byte memcpy_in_vram::dest_bank#1
byte memcpy_in_vram::dest_bank#2
byte memcpy_in_vram::dest_increment
byte memcpy_in_vram::dest_increment#0
byte memcpy_in_vram::dest_increment#1
byte memcpy_in_vram::dest_increment#2
word memcpy_in_vram::i
word memcpy_in_vram::i#0
word memcpy_in_vram::i#1
word memcpy_in_vram::i#2
word memcpy_in_vram::i#3
word memcpy_in_vram::num
word memcpy_in_vram::num#0
word memcpy_in_vram::num#1
word memcpy_in_vram::num#2
word memcpy_in_vram::num#3
word memcpy_in_vram::num#4
void* memcpy_in_vram::src
void* memcpy_in_vram::src#0
void* memcpy_in_vram::src#1
void* memcpy_in_vram::src#2
byte memcpy_in_vram::src_bank
byte memcpy_in_vram::src_bank#0
byte memcpy_in_vram::src_bank#1
byte memcpy_in_vram::src_bank#2
byte memcpy_in_vram::src_increment
byte memcpy_in_vram::src_increment#0
byte memcpy_in_vram::src_increment#1
byte memcpy_in_vram::src_increment#2
void memset_vram(byte memset_vram::vbank , void* memset_vram::vdest , byte memset_vram::data , dword memset_vram::num)
byte~ memset_vram::$0
byte~ memset_vram::$1
byte~ memset_vram::$2
bool~ memset_vram::$3
byte memset_vram::data
byte memset_vram::data#0
byte memset_vram::data#1
byte memset_vram::data#2
byte memset_vram::data#3
dword memset_vram::i
dword memset_vram::i#0
dword memset_vram::i#1
dword memset_vram::i#2
dword memset_vram::i#3
dword memset_vram::num
dword memset_vram::num#0
dword memset_vram::num#1
dword memset_vram::num#2
dword memset_vram::num#3
byte memset_vram::vbank
byte memset_vram::vbank#0
byte memset_vram::vbank#1
void* memset_vram::vdest
void* memset_vram::vdest#0
void* memset_vram::vdest#1
word modr16u(word modr16u::dividend , word modr16u::divisor , word modr16u::rem)
word modr16u::dividend
word modr16u::dividend#0
word modr16u::dividend#1
word modr16u::dividend#2
word modr16u::dividend#3
word modr16u::dividend#4
word modr16u::divisor
word modr16u::divisor#0
word modr16u::divisor#1
word modr16u::divisor#2
word modr16u::divisor#3
word modr16u::divisor#4
word modr16u::rem
word modr16u::rem#0
word modr16u::rem#1
word modr16u::rem#2
word modr16u::rem#3
word modr16u::rem#4
word modr16u::return
word modr16u::return#0
word modr16u::return#1
word modr16u::return#10
word modr16u::return#2
word modr16u::return#3
word modr16u::return#4
word modr16u::return#5
word modr16u::return#6
word modr16u::return#7
word modr16u::return#8
word modr16u::return#9
dword mul16u(word mul16u::a , word mul16u::b)
bool~ mul16u::$0
number~ mul16u::$1
bool~ mul16u::$2
bool~ mul16u::$3
dword~ mul16u::$4
word~ mul16u::$5
dword~ mul16u::$6
word mul16u::a
word mul16u::a#0
word mul16u::a#1
word mul16u::a#2
word mul16u::a#3
word mul16u::a#4
word mul16u::a#5
word mul16u::a#6
word mul16u::b
word mul16u::b#0
word mul16u::b#1
dword mul16u::mb
dword mul16u::mb#0
dword mul16u::mb#1
dword mul16u::mb#2
dword mul16u::mb#3
dword mul16u::mb#4
dword mul16u::mb#5
dword mul16u::res
dword mul16u::res#0
dword mul16u::res#1
dword mul16u::res#2
dword mul16u::res#3
dword mul16u::res#4
dword mul16u::res#5
dword mul16u::res#6
dword mul16u::return
dword mul16u::return#0
dword mul16u::return#1
dword mul16u::return#2
dword mul16u::return#3
dword mul16u::return#4
word rand()
word~ rand::$0
word~ rand::$1
word~ rand::$2
word rand::return
word rand::return#0
word rand::return#1
word rand::return#10
word rand::return#11
word rand::return#12
word rand::return#2
word rand::return#3
word rand::return#4
word rand::return#5
word rand::return#6
word rand::return#7
word rand::return#8
word rand::return#9
word rand_state
word rand_state#0
word rand_state#1
word rand_state#10
word rand_state#11
word rand_state#12
word rand_state#13
word rand_state#14
word rand_state#15
word rand_state#16
word rand_state#17
word rand_state#18
word rand_state#19
word rand_state#2
word rand_state#20
word rand_state#21
word rand_state#22
word rand_state#23
word rand_state#24
word rand_state#25
word rand_state#26
word rand_state#27
word rand_state#28
word rand_state#29
word rand_state#3
word rand_state#30
word rand_state#31
word rand_state#32
word rand_state#33
word rand_state#34
word rand_state#35
word rand_state#36
word rand_state#37
word rand_state#38
word rand_state#39
word rand_state#4
word rand_state#40
word rand_state#41
word rand_state#42
word rand_state#43
word rand_state#44
word rand_state#45
word rand_state#46
word rand_state#47
word rand_state#48
word rand_state#49
word rand_state#5
word rand_state#50
word rand_state#51
word rand_state#52
word rand_state#53
word rand_state#54
word rand_state#55
word rand_state#56
word rand_state#57
word rand_state#58
word rand_state#59
word rand_state#6
word rand_state#60
word rand_state#61
word rand_state#62
word rand_state#63
word rand_state#64
word rand_state#65
word rand_state#66
word rand_state#67
word rand_state#68
word rand_state#69
word rand_state#7
word rand_state#70
word rand_state#71
word rand_state#72
word rand_state#73
word rand_state#74
word rand_state#75
word rand_state#76
word rand_state#77
word rand_state#78
word rand_state#79
word rand_state#8
word rand_state#80
word rand_state#81
word rand_state#82
word rand_state#83
word rand_state#84
word rand_state#85
word rand_state#86
word rand_state#87
word rand_state#9
word rem16u
word rem16u#0
word rem16u#1
word rem16u#10
word rem16u#11
word rem16u#12
word rem16u#13
word rem16u#14
word rem16u#15
word rem16u#16
word rem16u#17
word rem16u#18
word rem16u#19
word rem16u#2
word rem16u#20
word rem16u#21
word rem16u#22
word rem16u#23
word rem16u#24
word rem16u#25
word rem16u#26
word rem16u#27
word rem16u#28
word rem16u#29
word rem16u#3
word rem16u#30
word rem16u#31
word rem16u#32
word rem16u#33
word rem16u#34
word rem16u#35
word rem16u#36
word rem16u#37
word rem16u#38
word rem16u#39
word rem16u#4
word rem16u#40
word rem16u#41
word rem16u#42
word rem16u#43
word rem16u#44
word rem16u#45
word rem16u#46
word rem16u#47
word rem16u#48
word rem16u#49
word rem16u#5
word rem16u#50
word rem16u#51
word rem16u#52
word rem16u#53
word rem16u#54
word rem16u#55
word rem16u#56
word rem16u#57
word rem16u#58
word rem16u#59
word rem16u#6
word rem16u#60
word rem16u#61
word rem16u#62
word rem16u#63
word rem16u#64
word rem16u#65
word rem16u#66
word rem16u#67
word rem16u#68
word rem16u#69
word rem16u#7
word rem16u#70
word rem16u#71
word rem16u#72
word rem16u#73
word rem16u#74
word rem16u#75
word rem16u#76
word rem16u#77
word rem16u#78
word rem16u#79
word rem16u#8
word rem16u#80
word rem16u#81
word rem16u#82
word rem16u#83
word rem16u#84
word rem16u#85
word rem16u#86
word rem16u#87
word rem16u#88
word rem16u#9
void screenlayer(byte screenlayer::layer)
byte~ screenlayer::$0
word~ screenlayer::$1
word~ screenlayer::$2
byte~ screenlayer::$3
word~ screenlayer::$4
word~ screenlayer::$5
byte screenlayer::layer
byte screenlayer::layer#0
byte screenlayer::layer#1
byte screenlayer::layer#2
byte screenlayer::layer#3
byte~ screenlayer::vera_layer_get_height1_$0
byte~ screenlayer::vera_layer_get_height1_$1
byte~ screenlayer::vera_layer_get_height1_$2
byte~ screenlayer::vera_layer_get_height1_$3
byte* screenlayer::vera_layer_get_height1_config
byte* screenlayer::vera_layer_get_height1_config#0
byte screenlayer::vera_layer_get_height1_layer
byte screenlayer::vera_layer_get_height1_layer#0
byte screenlayer::vera_layer_get_height1_layer#1
word screenlayer::vera_layer_get_height1_return
word screenlayer::vera_layer_get_height1_return#0
word screenlayer::vera_layer_get_height1_return#1
word screenlayer::vera_layer_get_height1_return#2
word screenlayer::vera_layer_get_height1_return#3
byte~ screenlayer::vera_layer_get_width1_$0
byte~ screenlayer::vera_layer_get_width1_$1
byte~ screenlayer::vera_layer_get_width1_$2
byte~ screenlayer::vera_layer_get_width1_$3
byte* screenlayer::vera_layer_get_width1_config
byte* screenlayer::vera_layer_get_width1_config#0
byte screenlayer::vera_layer_get_width1_layer
byte screenlayer::vera_layer_get_width1_layer#0
byte screenlayer::vera_layer_get_width1_layer#1
word screenlayer::vera_layer_get_width1_return
word screenlayer::vera_layer_get_width1_return#0
word screenlayer::vera_layer_get_width1_return#1
word screenlayer::vera_layer_get_width1_return#2
word screenlayer::vera_layer_get_width1_return#3
void screensize(byte* screensize::x , byte* screensize::y)
byte~ screensize::$0
number~ screensize::$1
byte~ screensize::$2
number~ screensize::$3
byte screensize::hscale
byte screensize::hscale#0
byte screensize::vscale
byte screensize::vscale#0
byte* screensize::x
byte* screensize::x#0
byte* screensize::x#1
byte* screensize::y
byte* screensize::y#0
byte* screensize::y#1
constant const word* vdeltas[4]  = { 0, $1e0, $f0, $a0 }
byte vera_display_get_hscale()
bool~ vera_display_get_hscale::$0
bool~ vera_display_get_hscale::$1
bool~ vera_display_get_hscale::$2
constant byte* vera_display_get_hscale::hscale[4]  = { 0, $80, $40, $20 }
byte vera_display_get_hscale::return
byte vera_display_get_hscale::return#0
byte vera_display_get_hscale::return#1
byte vera_display_get_hscale::return#2
byte vera_display_get_hscale::return#3
byte vera_display_get_hscale::return#4
byte vera_display_get_hscale::s
byte vera_display_get_hscale::s#0
byte vera_display_get_hscale::s#1
byte vera_display_get_hscale::s#2
byte vera_display_get_hscale::s#3
byte vera_display_get_hscale::s#4
byte vera_display_get_hscale::scale
byte vera_display_get_hscale::scale#0
byte vera_display_get_hscale::scale#1
byte vera_display_get_hscale::scale#2
byte vera_display_get_hscale::scale#3
byte vera_display_get_hscale::scale#4
byte vera_display_get_vscale()
bool~ vera_display_get_vscale::$0
bool~ vera_display_get_vscale::$1
bool~ vera_display_get_vscale::$2
byte vera_display_get_vscale::return
byte vera_display_get_vscale::return#0
byte vera_display_get_vscale::return#1
byte vera_display_get_vscale::return#2
byte vera_display_get_vscale::return#3
byte vera_display_get_vscale::return#4
byte vera_display_get_vscale::s
byte vera_display_get_vscale::s#0
byte vera_display_get_vscale::s#1
byte vera_display_get_vscale::s#2
byte vera_display_get_vscale::s#3
byte vera_display_get_vscale::s#4
byte vera_display_get_vscale::scale
byte vera_display_get_vscale::scale#0
byte vera_display_get_vscale::scale#1
byte vera_display_get_vscale::scale#2
byte vera_display_get_vscale::scale#3
byte vera_display_get_vscale::scale#4
constant byte* vera_display_get_vscale::vscale[4]  = { 0, $80, $40, $20 }
constant byte* vera_layer_backcolor[2]  = { BLUE, BLUE }
constant byte** vera_layer_config[2]  = { VERA_L0_CONFIG, VERA_L1_CONFIG }
constant byte* vera_layer_enable[2]  = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
byte vera_layer_get_backcolor(byte vera_layer_get_backcolor::layer)
byte vera_layer_get_backcolor::layer
byte vera_layer_get_backcolor::layer#0
byte vera_layer_get_backcolor::layer#1
byte vera_layer_get_backcolor::return
byte vera_layer_get_backcolor::return#0
byte vera_layer_get_backcolor::return#1
byte vera_layer_get_backcolor::return#2
byte vera_layer_get_backcolor::return#3
byte vera_layer_get_backcolor::return#4
byte vera_layer_get_color(byte vera_layer_get_color::layer)
byte~ vera_layer_get_color::$0
byte~ vera_layer_get_color::$1
byte~ vera_layer_get_color::$2
byte~ vera_layer_get_color::$3
bool~ vera_layer_get_color::$4
byte* vera_layer_get_color::addr
byte* vera_layer_get_color::addr#0
byte vera_layer_get_color::layer
byte vera_layer_get_color::layer#0
byte vera_layer_get_color::layer#1
byte vera_layer_get_color::layer#2
byte vera_layer_get_color::layer#3
byte vera_layer_get_color::layer#4
byte vera_layer_get_color::return
byte vera_layer_get_color::return#0
byte vera_layer_get_color::return#1
byte vera_layer_get_color::return#2
byte vera_layer_get_color::return#3
byte vera_layer_get_color::return#4
byte vera_layer_get_color::return#5
byte vera_layer_get_color::return#6
byte vera_layer_get_color::return#7
byte vera_layer_get_mapbase_bank(byte vera_layer_get_mapbase_bank::layer)
byte vera_layer_get_mapbase_bank::layer
byte vera_layer_get_mapbase_bank::layer#0
byte vera_layer_get_mapbase_bank::layer#1
byte vera_layer_get_mapbase_bank::return
byte vera_layer_get_mapbase_bank::return#0
byte vera_layer_get_mapbase_bank::return#1
byte vera_layer_get_mapbase_bank::return#2
byte vera_layer_get_mapbase_bank::return#3
byte vera_layer_get_mapbase_bank::return#4
word vera_layer_get_mapbase_offset(byte vera_layer_get_mapbase_offset::layer)
byte~ vera_layer_get_mapbase_offset::$0
byte vera_layer_get_mapbase_offset::layer
byte vera_layer_get_mapbase_offset::layer#0
byte vera_layer_get_mapbase_offset::layer#1
word vera_layer_get_mapbase_offset::return
word vera_layer_get_mapbase_offset::return#0
word vera_layer_get_mapbase_offset::return#1
word vera_layer_get_mapbase_offset::return#2
word vera_layer_get_mapbase_offset::return#3
word vera_layer_get_mapbase_offset::return#4
byte vera_layer_get_rowshift(byte vera_layer_get_rowshift::layer)
byte vera_layer_get_rowshift::layer
byte vera_layer_get_rowshift::layer#0
byte vera_layer_get_rowshift::layer#1
byte vera_layer_get_rowshift::return
byte vera_layer_get_rowshift::return#0
byte vera_layer_get_rowshift::return#1
byte vera_layer_get_rowshift::return#2
byte vera_layer_get_rowshift::return#3
byte vera_layer_get_rowshift::return#4
word vera_layer_get_rowskip(byte vera_layer_get_rowskip::layer)
byte~ vera_layer_get_rowskip::$0
byte vera_layer_get_rowskip::layer
byte vera_layer_get_rowskip::layer#0
byte vera_layer_get_rowskip::layer#1
word vera_layer_get_rowskip::return
word vera_layer_get_rowskip::return#0
word vera_layer_get_rowskip::return#1
word vera_layer_get_rowskip::return#2
word vera_layer_get_rowskip::return#3
word vera_layer_get_rowskip::return#4
byte vera_layer_get_textcolor(byte vera_layer_get_textcolor::layer)
byte vera_layer_get_textcolor::layer
byte vera_layer_get_textcolor::layer#0
byte vera_layer_get_textcolor::layer#1
byte vera_layer_get_textcolor::return
byte vera_layer_get_textcolor::return#0
byte vera_layer_get_textcolor::return#1
byte vera_layer_get_textcolor::return#2
byte vera_layer_get_textcolor::return#3
byte vera_layer_get_textcolor::return#4
constant byte** vera_layer_mapbase[2]  = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_bitmap(byte vera_layer_mode_bitmap::layer , dword vera_layer_mode_bitmap::bitmap_address , word vera_layer_mode_bitmap::mapwidth , word vera_layer_mode_bitmap::color_depth)
byte~ vera_layer_mode_bitmap::$0
word~ vera_layer_mode_bitmap::$1
byte~ vera_layer_mode_bitmap::$10
byte~ vera_layer_mode_bitmap::$2
dword~ vera_layer_mode_bitmap::$3
byte~ vera_layer_mode_bitmap::$4
byte~ vera_layer_mode_bitmap::$9
dword vera_layer_mode_bitmap::bitmap_address
dword vera_layer_mode_bitmap::bitmap_address#0
dword vera_layer_mode_bitmap::bitmap_address#1
dword vera_layer_mode_bitmap::bitmap_address#10
dword vera_layer_mode_bitmap::bitmap_address#2
dword vera_layer_mode_bitmap::bitmap_address#3
dword vera_layer_mode_bitmap::bitmap_address#4
dword vera_layer_mode_bitmap::bitmap_address#5
dword vera_layer_mode_bitmap::bitmap_address#6
dword vera_layer_mode_bitmap::bitmap_address#7
dword vera_layer_mode_bitmap::bitmap_address#8
dword vera_layer_mode_bitmap::bitmap_address#9
word vera_layer_mode_bitmap::color_depth
word vera_layer_mode_bitmap::color_depth#0
word vera_layer_mode_bitmap::color_depth#1
word vera_layer_mode_bitmap::color_depth#2
word vera_layer_mode_bitmap::color_depth#3
word vera_layer_mode_bitmap::color_depth#4
byte vera_layer_mode_bitmap::config
byte vera_layer_mode_bitmap::config#0
byte vera_layer_mode_bitmap::config#1
byte vera_layer_mode_bitmap::config#10
byte vera_layer_mode_bitmap::config#11
byte vera_layer_mode_bitmap::config#12
byte vera_layer_mode_bitmap::config#13
byte vera_layer_mode_bitmap::config#14
byte vera_layer_mode_bitmap::config#15
byte vera_layer_mode_bitmap::config#16
byte vera_layer_mode_bitmap::config#17
byte vera_layer_mode_bitmap::config#18
byte vera_layer_mode_bitmap::config#19
byte vera_layer_mode_bitmap::config#2
byte vera_layer_mode_bitmap::config#3
byte vera_layer_mode_bitmap::config#4
byte vera_layer_mode_bitmap::config#5
byte vera_layer_mode_bitmap::config#6
byte vera_layer_mode_bitmap::config#7
byte vera_layer_mode_bitmap::config#8
byte vera_layer_mode_bitmap::config#9
byte vera_layer_mode_bitmap::layer
byte vera_layer_mode_bitmap::layer#0
byte vera_layer_mode_bitmap::layer#1
byte vera_layer_mode_bitmap::layer#10
byte vera_layer_mode_bitmap::layer#11
byte vera_layer_mode_bitmap::layer#12
byte vera_layer_mode_bitmap::layer#13
byte vera_layer_mode_bitmap::layer#14
byte vera_layer_mode_bitmap::layer#15
byte vera_layer_mode_bitmap::layer#16
byte vera_layer_mode_bitmap::layer#2
byte vera_layer_mode_bitmap::layer#3
byte vera_layer_mode_bitmap::layer#4
byte vera_layer_mode_bitmap::layer#5
byte vera_layer_mode_bitmap::layer#6
byte vera_layer_mode_bitmap::layer#7
byte vera_layer_mode_bitmap::layer#8
byte vera_layer_mode_bitmap::layer#9
word vera_layer_mode_bitmap::mapwidth
word vera_layer_mode_bitmap::mapwidth#0
word vera_layer_mode_bitmap::mapwidth#1
word vera_layer_mode_bitmap::mapwidth#10
word vera_layer_mode_bitmap::mapwidth#2
word vera_layer_mode_bitmap::mapwidth#3
word vera_layer_mode_bitmap::mapwidth#4
word vera_layer_mode_bitmap::mapwidth#5
word vera_layer_mode_bitmap::mapwidth#6
word vera_layer_mode_bitmap::mapwidth#7
word vera_layer_mode_bitmap::mapwidth#8
word vera_layer_mode_bitmap::mapwidth#9
byte vera_layer_mode_bitmap::tilebase
byte vera_layer_mode_bitmap::tilebase#0
byte vera_layer_mode_bitmap::tilebase#1
byte vera_layer_mode_bitmap::tilebase#10
byte vera_layer_mode_bitmap::tilebase#2
byte vera_layer_mode_bitmap::tilebase#3
byte vera_layer_mode_bitmap::tilebase#4
byte vera_layer_mode_bitmap::tilebase#5
byte vera_layer_mode_bitmap::tilebase#6
byte vera_layer_mode_bitmap::tilebase#7
byte vera_layer_mode_bitmap::tilebase#8
byte vera_layer_mode_bitmap::tilebase#9
void vera_layer_mode_text(byte vera_layer_mode_text::layer , dword vera_layer_mode_text::mapbase_address , dword vera_layer_mode_text::tilebase_address , word vera_layer_mode_text::mapwidth , word vera_layer_mode_text::mapheight , byte vera_layer_mode_text::tilewidth , byte vera_layer_mode_text::tileheight , word vera_layer_mode_text::color_mode)
word vera_layer_mode_text::color_mode
word vera_layer_mode_text::color_mode#0
word vera_layer_mode_text::color_mode#1
word vera_layer_mode_text::color_mode#2
word vera_layer_mode_text::color_mode#3
byte vera_layer_mode_text::layer
byte vera_layer_mode_text::layer#0
byte vera_layer_mode_text::layer#1
byte vera_layer_mode_text::layer#2
byte vera_layer_mode_text::layer#3
byte vera_layer_mode_text::layer#4
byte vera_layer_mode_text::layer#5
dword vera_layer_mode_text::mapbase_address
dword vera_layer_mode_text::mapbase_address#0
dword vera_layer_mode_text::mapbase_address#1
word vera_layer_mode_text::mapheight
word vera_layer_mode_text::mapheight#0
word vera_layer_mode_text::mapheight#1
word vera_layer_mode_text::mapwidth
word vera_layer_mode_text::mapwidth#0
word vera_layer_mode_text::mapwidth#1
dword vera_layer_mode_text::tilebase_address
dword vera_layer_mode_text::tilebase_address#0
dword vera_layer_mode_text::tilebase_address#1
byte vera_layer_mode_text::tileheight
byte vera_layer_mode_text::tileheight#0
byte vera_layer_mode_text::tileheight#1
byte vera_layer_mode_text::tilewidth
byte vera_layer_mode_text::tilewidth#0
byte vera_layer_mode_text::tilewidth#1
void vera_layer_mode_tile(byte vera_layer_mode_tile::layer , dword vera_layer_mode_tile::mapbase_address , dword vera_layer_mode_tile::tilebase_address , word vera_layer_mode_tile::mapwidth , word vera_layer_mode_tile::mapheight , byte vera_layer_mode_tile::tilewidth , byte vera_layer_mode_tile::tileheight , byte vera_layer_mode_tile::color_depth)
word~ vera_layer_mode_tile::$1
byte~ vera_layer_mode_tile::$11
byte~ vera_layer_mode_tile::$12
byte~ vera_layer_mode_tile::$13
byte~ vera_layer_mode_tile::$14
byte~ vera_layer_mode_tile::$15
byte~ vera_layer_mode_tile::$16
byte~ vera_layer_mode_tile::$17
byte~ vera_layer_mode_tile::$18
byte~ vera_layer_mode_tile::$2
dword~ vera_layer_mode_tile::$3
byte~ vera_layer_mode_tile::$4
word~ vera_layer_mode_tile::$6
byte~ vera_layer_mode_tile::$7
dword~ vera_layer_mode_tile::$8
byte~ vera_layer_mode_tile::$9
byte vera_layer_mode_tile::color_depth
byte vera_layer_mode_tile::color_depth#0
byte vera_layer_mode_tile::color_depth#1
byte vera_layer_mode_tile::color_depth#2
byte vera_layer_mode_tile::color_depth#3
byte vera_layer_mode_tile::color_depth#4
byte vera_layer_mode_tile::color_depth#5
byte vera_layer_mode_tile::config
byte vera_layer_mode_tile::config#0
byte vera_layer_mode_tile::config#1
byte vera_layer_mode_tile::config#10
byte vera_layer_mode_tile::config#11
byte vera_layer_mode_tile::config#12
byte vera_layer_mode_tile::config#13
byte vera_layer_mode_tile::config#14
byte vera_layer_mode_tile::config#15
byte vera_layer_mode_tile::config#16
byte vera_layer_mode_tile::config#17
byte vera_layer_mode_tile::config#18
byte vera_layer_mode_tile::config#19
byte vera_layer_mode_tile::config#2
byte vera_layer_mode_tile::config#20
byte vera_layer_mode_tile::config#21
byte vera_layer_mode_tile::config#22
byte vera_layer_mode_tile::config#23
byte vera_layer_mode_tile::config#24
byte vera_layer_mode_tile::config#25
byte vera_layer_mode_tile::config#26
byte vera_layer_mode_tile::config#27
byte vera_layer_mode_tile::config#28
byte vera_layer_mode_tile::config#29
byte vera_layer_mode_tile::config#3
byte vera_layer_mode_tile::config#30
byte vera_layer_mode_tile::config#31
byte vera_layer_mode_tile::config#32
byte vera_layer_mode_tile::config#33
byte vera_layer_mode_tile::config#34
byte vera_layer_mode_tile::config#35
byte vera_layer_mode_tile::config#36
byte vera_layer_mode_tile::config#4
byte vera_layer_mode_tile::config#5
byte vera_layer_mode_tile::config#6
byte vera_layer_mode_tile::config#7
byte vera_layer_mode_tile::config#8
byte vera_layer_mode_tile::config#9
byte vera_layer_mode_tile::layer
byte vera_layer_mode_tile::layer#0
byte vera_layer_mode_tile::layer#1
byte vera_layer_mode_tile::layer#10
byte vera_layer_mode_tile::layer#11
byte vera_layer_mode_tile::layer#12
byte vera_layer_mode_tile::layer#13
byte vera_layer_mode_tile::layer#14
byte vera_layer_mode_tile::layer#15
byte vera_layer_mode_tile::layer#16
byte vera_layer_mode_tile::layer#17
byte vera_layer_mode_tile::layer#18
byte vera_layer_mode_tile::layer#19
byte vera_layer_mode_tile::layer#2
byte vera_layer_mode_tile::layer#20
byte vera_layer_mode_tile::layer#21
byte vera_layer_mode_tile::layer#22
byte vera_layer_mode_tile::layer#23
byte vera_layer_mode_tile::layer#24
byte vera_layer_mode_tile::layer#25
byte vera_layer_mode_tile::layer#26
byte vera_layer_mode_tile::layer#27
byte vera_layer_mode_tile::layer#28
byte vera_layer_mode_tile::layer#29
byte vera_layer_mode_tile::layer#3
byte vera_layer_mode_tile::layer#30
byte vera_layer_mode_tile::layer#31
byte vera_layer_mode_tile::layer#32
byte vera_layer_mode_tile::layer#33
byte vera_layer_mode_tile::layer#34
byte vera_layer_mode_tile::layer#35
byte vera_layer_mode_tile::layer#36
byte vera_layer_mode_tile::layer#4
byte vera_layer_mode_tile::layer#5
byte vera_layer_mode_tile::layer#6
byte vera_layer_mode_tile::layer#7
byte vera_layer_mode_tile::layer#8
byte vera_layer_mode_tile::layer#9
byte vera_layer_mode_tile::mapbase
byte vera_layer_mode_tile::mapbase#0
dword vera_layer_mode_tile::mapbase_address
dword vera_layer_mode_tile::mapbase_address#0
dword vera_layer_mode_tile::mapbase_address#1
dword vera_layer_mode_tile::mapbase_address#10
dword vera_layer_mode_tile::mapbase_address#11
dword vera_layer_mode_tile::mapbase_address#12
dword vera_layer_mode_tile::mapbase_address#13
dword vera_layer_mode_tile::mapbase_address#14
dword vera_layer_mode_tile::mapbase_address#15
dword vera_layer_mode_tile::mapbase_address#16
dword vera_layer_mode_tile::mapbase_address#17
dword vera_layer_mode_tile::mapbase_address#18
dword vera_layer_mode_tile::mapbase_address#19
dword vera_layer_mode_tile::mapbase_address#2
dword vera_layer_mode_tile::mapbase_address#20
dword vera_layer_mode_tile::mapbase_address#21
dword vera_layer_mode_tile::mapbase_address#22
dword vera_layer_mode_tile::mapbase_address#23
dword vera_layer_mode_tile::mapbase_address#24
dword vera_layer_mode_tile::mapbase_address#25
dword vera_layer_mode_tile::mapbase_address#26
dword vera_layer_mode_tile::mapbase_address#27
dword vera_layer_mode_tile::mapbase_address#28
dword vera_layer_mode_tile::mapbase_address#3
dword vera_layer_mode_tile::mapbase_address#4
dword vera_layer_mode_tile::mapbase_address#5
dword vera_layer_mode_tile::mapbase_address#6
dword vera_layer_mode_tile::mapbase_address#7
dword vera_layer_mode_tile::mapbase_address#8
dword vera_layer_mode_tile::mapbase_address#9
word vera_layer_mode_tile::mapheight
word vera_layer_mode_tile::mapheight#0
word vera_layer_mode_tile::mapheight#1
word vera_layer_mode_tile::mapheight#10
word vera_layer_mode_tile::mapheight#11
word vera_layer_mode_tile::mapheight#12
word vera_layer_mode_tile::mapheight#13
word vera_layer_mode_tile::mapheight#14
word vera_layer_mode_tile::mapheight#15
word vera_layer_mode_tile::mapheight#16
word vera_layer_mode_tile::mapheight#17
word vera_layer_mode_tile::mapheight#18
word vera_layer_mode_tile::mapheight#19
word vera_layer_mode_tile::mapheight#2
word vera_layer_mode_tile::mapheight#20
word vera_layer_mode_tile::mapheight#21
word vera_layer_mode_tile::mapheight#3
word vera_layer_mode_tile::mapheight#4
word vera_layer_mode_tile::mapheight#5
word vera_layer_mode_tile::mapheight#6
word vera_layer_mode_tile::mapheight#7
word vera_layer_mode_tile::mapheight#8
word vera_layer_mode_tile::mapheight#9
word vera_layer_mode_tile::mapwidth
word vera_layer_mode_tile::mapwidth#0
word vera_layer_mode_tile::mapwidth#1
word vera_layer_mode_tile::mapwidth#10
word vera_layer_mode_tile::mapwidth#11
word vera_layer_mode_tile::mapwidth#12
word vera_layer_mode_tile::mapwidth#13
word vera_layer_mode_tile::mapwidth#2
word vera_layer_mode_tile::mapwidth#3
word vera_layer_mode_tile::mapwidth#4
word vera_layer_mode_tile::mapwidth#5
word vera_layer_mode_tile::mapwidth#6
word vera_layer_mode_tile::mapwidth#7
word vera_layer_mode_tile::mapwidth#8
word vera_layer_mode_tile::mapwidth#9
byte vera_layer_mode_tile::tilebase
byte vera_layer_mode_tile::tilebase#0
byte vera_layer_mode_tile::tilebase#1
byte vera_layer_mode_tile::tilebase#10
byte vera_layer_mode_tile::tilebase#11
byte vera_layer_mode_tile::tilebase#12
byte vera_layer_mode_tile::tilebase#13
byte vera_layer_mode_tile::tilebase#2
byte vera_layer_mode_tile::tilebase#3
byte vera_layer_mode_tile::tilebase#4
byte vera_layer_mode_tile::tilebase#5
byte vera_layer_mode_tile::tilebase#6
byte vera_layer_mode_tile::tilebase#7
byte vera_layer_mode_tile::tilebase#8
byte vera_layer_mode_tile::tilebase#9
dword vera_layer_mode_tile::tilebase_address
dword vera_layer_mode_tile::tilebase_address#0
dword vera_layer_mode_tile::tilebase_address#1
dword vera_layer_mode_tile::tilebase_address#10
dword vera_layer_mode_tile::tilebase_address#11
dword vera_layer_mode_tile::tilebase_address#12
dword vera_layer_mode_tile::tilebase_address#13
dword vera_layer_mode_tile::tilebase_address#14
dword vera_layer_mode_tile::tilebase_address#15
dword vera_layer_mode_tile::tilebase_address#16
dword vera_layer_mode_tile::tilebase_address#17
dword vera_layer_mode_tile::tilebase_address#18
dword vera_layer_mode_tile::tilebase_address#19
dword vera_layer_mode_tile::tilebase_address#2
dword vera_layer_mode_tile::tilebase_address#20
dword vera_layer_mode_tile::tilebase_address#21
dword vera_layer_mode_tile::tilebase_address#22
dword vera_layer_mode_tile::tilebase_address#23
dword vera_layer_mode_tile::tilebase_address#24
dword vera_layer_mode_tile::tilebase_address#25
dword vera_layer_mode_tile::tilebase_address#26
dword vera_layer_mode_tile::tilebase_address#27
dword vera_layer_mode_tile::tilebase_address#28
dword vera_layer_mode_tile::tilebase_address#29
dword vera_layer_mode_tile::tilebase_address#3
dword vera_layer_mode_tile::tilebase_address#4
dword vera_layer_mode_tile::tilebase_address#5
dword vera_layer_mode_tile::tilebase_address#6
dword vera_layer_mode_tile::tilebase_address#7
dword vera_layer_mode_tile::tilebase_address#8
dword vera_layer_mode_tile::tilebase_address#9
byte vera_layer_mode_tile::tileheight
byte vera_layer_mode_tile::tileheight#0
byte vera_layer_mode_tile::tileheight#1
byte vera_layer_mode_tile::tileheight#10
byte vera_layer_mode_tile::tileheight#11
byte vera_layer_mode_tile::tileheight#12
byte vera_layer_mode_tile::tileheight#13
byte vera_layer_mode_tile::tileheight#14
byte vera_layer_mode_tile::tileheight#15
byte vera_layer_mode_tile::tileheight#16
byte vera_layer_mode_tile::tileheight#17
byte vera_layer_mode_tile::tileheight#18
byte vera_layer_mode_tile::tileheight#19
byte vera_layer_mode_tile::tileheight#2
byte vera_layer_mode_tile::tileheight#20
byte vera_layer_mode_tile::tileheight#21
byte vera_layer_mode_tile::tileheight#22
byte vera_layer_mode_tile::tileheight#23
byte vera_layer_mode_tile::tileheight#24
byte vera_layer_mode_tile::tileheight#25
byte vera_layer_mode_tile::tileheight#26
byte vera_layer_mode_tile::tileheight#27
byte vera_layer_mode_tile::tileheight#28
byte vera_layer_mode_tile::tileheight#29
byte vera_layer_mode_tile::tileheight#3
byte vera_layer_mode_tile::tileheight#30
byte vera_layer_mode_tile::tileheight#31
byte vera_layer_mode_tile::tileheight#32
byte vera_layer_mode_tile::tileheight#33
byte vera_layer_mode_tile::tileheight#4
byte vera_layer_mode_tile::tileheight#5
byte vera_layer_mode_tile::tileheight#6
byte vera_layer_mode_tile::tileheight#7
byte vera_layer_mode_tile::tileheight#8
byte vera_layer_mode_tile::tileheight#9
byte vera_layer_mode_tile::tilewidth
byte vera_layer_mode_tile::tilewidth#0
byte vera_layer_mode_tile::tilewidth#1
byte vera_layer_mode_tile::tilewidth#10
byte vera_layer_mode_tile::tilewidth#11
byte vera_layer_mode_tile::tilewidth#12
byte vera_layer_mode_tile::tilewidth#13
byte vera_layer_mode_tile::tilewidth#14
byte vera_layer_mode_tile::tilewidth#15
byte vera_layer_mode_tile::tilewidth#16
byte vera_layer_mode_tile::tilewidth#17
byte vera_layer_mode_tile::tilewidth#18
byte vera_layer_mode_tile::tilewidth#19
byte vera_layer_mode_tile::tilewidth#2
byte vera_layer_mode_tile::tilewidth#20
byte vera_layer_mode_tile::tilewidth#21
byte vera_layer_mode_tile::tilewidth#22
byte vera_layer_mode_tile::tilewidth#23
byte vera_layer_mode_tile::tilewidth#24
byte vera_layer_mode_tile::tilewidth#25
byte vera_layer_mode_tile::tilewidth#26
byte vera_layer_mode_tile::tilewidth#27
byte vera_layer_mode_tile::tilewidth#28
byte vera_layer_mode_tile::tilewidth#29
byte vera_layer_mode_tile::tilewidth#3
byte vera_layer_mode_tile::tilewidth#4
byte vera_layer_mode_tile::tilewidth#5
byte vera_layer_mode_tile::tilewidth#6
byte vera_layer_mode_tile::tilewidth#7
byte vera_layer_mode_tile::tilewidth#8
byte vera_layer_mode_tile::tilewidth#9
constant byte* vera_layer_rowshift[2]  = { 0, 0 }
constant word* vera_layer_rowskip[2]  = { 0, 0 }
byte vera_layer_set_backcolor(byte vera_layer_set_backcolor::layer , byte vera_layer_set_backcolor::color)
byte vera_layer_set_backcolor::color
byte vera_layer_set_backcolor::color#0
byte vera_layer_set_backcolor::color#1
byte vera_layer_set_backcolor::color#2
byte vera_layer_set_backcolor::color#3
byte vera_layer_set_backcolor::color#4
byte vera_layer_set_backcolor::layer
byte vera_layer_set_backcolor::layer#0
byte vera_layer_set_backcolor::layer#1
byte vera_layer_set_backcolor::layer#2
byte vera_layer_set_backcolor::layer#3
byte vera_layer_set_backcolor::layer#4
byte vera_layer_set_backcolor::old
byte vera_layer_set_backcolor::old#0
byte vera_layer_set_backcolor::return
byte vera_layer_set_backcolor::return#0
byte vera_layer_set_backcolor::return#1
byte vera_layer_set_backcolor::return#2
byte vera_layer_set_backcolor::return#3
byte vera_layer_set_backcolor::return#4
byte vera_layer_set_backcolor::return#5
byte vera_layer_set_backcolor::return#6
void vera_layer_set_config(byte vera_layer_set_config::layer , byte vera_layer_set_config::config)
byte~ vera_layer_set_config::$0
byte* vera_layer_set_config::addr
byte* vera_layer_set_config::addr#0
byte vera_layer_set_config::config
byte vera_layer_set_config::config#0
byte vera_layer_set_config::config#1
byte vera_layer_set_config::config#2
byte vera_layer_set_config::layer
byte vera_layer_set_config::layer#0
byte vera_layer_set_config::layer#1
byte vera_layer_set_config::layer#2
void vera_layer_set_mapbase(byte vera_layer_set_mapbase::layer , byte vera_layer_set_mapbase::mapbase)
byte~ vera_layer_set_mapbase::$0
byte* vera_layer_set_mapbase::addr
byte* vera_layer_set_mapbase::addr#0
byte vera_layer_set_mapbase::layer
byte vera_layer_set_mapbase::layer#0
byte vera_layer_set_mapbase::layer#1
byte vera_layer_set_mapbase::layer#2
byte vera_layer_set_mapbase::layer#3
byte vera_layer_set_mapbase::mapbase
byte vera_layer_set_mapbase::mapbase#0
byte vera_layer_set_mapbase::mapbase#1
byte vera_layer_set_mapbase::mapbase#2
byte vera_layer_set_mapbase::mapbase#3
void vera_layer_set_text_color_mode(byte vera_layer_set_text_color_mode::layer , byte vera_layer_set_text_color_mode::color_mode)
byte~ vera_layer_set_text_color_mode::$0
byte* vera_layer_set_text_color_mode::addr
byte* vera_layer_set_text_color_mode::addr#0
byte vera_layer_set_text_color_mode::color_mode
byte vera_layer_set_text_color_mode::color_mode#0
byte vera_layer_set_text_color_mode::color_mode#1
byte vera_layer_set_text_color_mode::color_mode#2
byte vera_layer_set_text_color_mode::layer
byte vera_layer_set_text_color_mode::layer#0
byte vera_layer_set_text_color_mode::layer#1
byte vera_layer_set_text_color_mode::layer#2
byte vera_layer_set_textcolor(byte vera_layer_set_textcolor::layer , byte vera_layer_set_textcolor::color)
byte vera_layer_set_textcolor::color
byte vera_layer_set_textcolor::color#0
byte vera_layer_set_textcolor::color#1
byte vera_layer_set_textcolor::color#2
byte vera_layer_set_textcolor::color#3
byte vera_layer_set_textcolor::color#4
byte vera_layer_set_textcolor::color#5
byte vera_layer_set_textcolor::color#6
byte vera_layer_set_textcolor::layer
byte vera_layer_set_textcolor::layer#0
byte vera_layer_set_textcolor::layer#1
byte vera_layer_set_textcolor::layer#2
byte vera_layer_set_textcolor::layer#3
byte vera_layer_set_textcolor::layer#4
byte vera_layer_set_textcolor::layer#5
byte vera_layer_set_textcolor::layer#6
byte vera_layer_set_textcolor::old
byte vera_layer_set_textcolor::old#0
byte vera_layer_set_textcolor::return
byte vera_layer_set_textcolor::return#0
byte vera_layer_set_textcolor::return#1
byte vera_layer_set_textcolor::return#2
byte vera_layer_set_textcolor::return#3
byte vera_layer_set_textcolor::return#4
byte vera_layer_set_textcolor::return#5
byte vera_layer_set_textcolor::return#6
byte vera_layer_set_textcolor::return#7
byte vera_layer_set_textcolor::return#8
void vera_layer_set_tilebase(byte vera_layer_set_tilebase::layer , byte vera_layer_set_tilebase::tilebase)
byte~ vera_layer_set_tilebase::$0
byte* vera_layer_set_tilebase::addr
byte* vera_layer_set_tilebase::addr#0
byte vera_layer_set_tilebase::layer
byte vera_layer_set_tilebase::layer#0
byte vera_layer_set_tilebase::layer#1
byte vera_layer_set_tilebase::layer#2
byte vera_layer_set_tilebase::tilebase
byte vera_layer_set_tilebase::tilebase#0
byte vera_layer_set_tilebase::tilebase#1
byte vera_layer_set_tilebase::tilebase#2
constant byte* vera_layer_textcolor[2]  = { WHITE, WHITE }
constant byte** vera_layer_tilebase[2]  = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
constant dword* vera_mapbase_address[2]  = { 0, 0 }
constant byte* vera_mapbase_bank[2]  = { 0, 0 }
constant word* vera_mapbase_offset[2]  = { 0, 0 }
constant dword* vera_tilebase_address[2]  = { 0, 0 }
constant byte* vera_tilebase_bank[2]  = { 0, 0 }
constant word* vera_tilebase_offset[2]  = { 0, 0 }

Adding number conversion cast (unumber) 4 in clrscr::$1 = clrscr::$0 << 4
Adding number conversion cast (unumber) 0 in conio_cursor_x[conio_screen_layer] = 0
Adding number conversion cast (unumber) 0 in conio_cursor_y[conio_screen_layer] = 0
Adding number conversion cast (unumber) 0 in conio_line_text[clrscr::$9] = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#0 = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#0 = 0
Adding number conversion cast (unumber) 7 in screensize::$0 = *VERA_DC_HSCALE >> 7
Adding number conversion cast (unumber) $28 in screensize::$1 = $28 << screensize::hscale#0
Adding number conversion cast (unumber) screensize::$1 in screensize::$1 = (unumber)$28 << screensize::hscale#0
Adding number conversion cast (unumber) 7 in screensize::$2 = *VERA_DC_VSCALE >> 7
Adding number conversion cast (unumber) $1e in screensize::$3 = $1e << screensize::vscale#0
Adding number conversion cast (unumber) screensize::$3 in screensize::$3 = (unumber)$1e << screensize::vscale#0
Adding number conversion cast (unumber) 1 in cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
Adding number conversion cast (unumber) 0 in cputc::$17 = 0 != cputc::scroll_enable#0
Adding number conversion cast (unumber) 0 in conio_cursor_x[conio_screen_layer] = 0
Adding number conversion cast (unumber) 0 in cputs::$2 = 0 != cputs::$0
Adding number conversion cast (unumber) 0 in vera_layer_get_color::$4 = 0 != vera_layer_get_color::$0
Adding number conversion cast (unumber) 4 in vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#4] << 4
Adding number conversion cast (unumber) 1 in if(vera_layer_mode_tile::color_depth#2==1) goto vera_layer_mode_tile::@4
Adding number conversion cast (unumber) 2 in if(vera_layer_mode_tile::color_depth#3==2) goto vera_layer_mode_tile::@5
Adding number conversion cast (unumber) 4 in if(vera_layer_mode_tile::color_depth#4==4) goto vera_layer_mode_tile::@6
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_tile::color_depth#5==8) goto vera_layer_mode_tile::@7
Adding number conversion cast (unumber) $20 in if(vera_layer_mode_tile::mapwidth#2==$20) goto vera_layer_mode_tile::@12
Adding number conversion cast (unumber) 6 in vera_layer_rowshift[vera_layer_mode_tile::layer#2] = 6
Adding number conversion cast (unumber) $40 in vera_layer_rowskip[vera_layer_mode_tile::$11] = $40
Adding number conversion cast (unumber) $40 in if(vera_layer_mode_tile::mapwidth#3==$40) goto vera_layer_mode_tile::@13
Adding number conversion cast (unumber) 7 in vera_layer_rowshift[vera_layer_mode_tile::layer#3] = 7
Adding number conversion cast (unumber) $80 in vera_layer_rowskip[vera_layer_mode_tile::$12] = $80
Adding number conversion cast (unumber) $80 in if(vera_layer_mode_tile::mapwidth#4==$80) goto vera_layer_mode_tile::@14
Adding number conversion cast (unumber) 8 in vera_layer_rowshift[vera_layer_mode_tile::layer#4] = 8
Adding number conversion cast (unumber) $100 in vera_layer_rowskip[vera_layer_mode_tile::$13] = $100
Adding number conversion cast (unumber) $100 in if(vera_layer_mode_tile::mapwidth#5==$100) goto vera_layer_mode_tile::@15
Adding number conversion cast (unumber) 9 in vera_layer_rowshift[vera_layer_mode_tile::layer#5] = 9
Adding number conversion cast (unumber) $200 in vera_layer_rowskip[vera_layer_mode_tile::$14] = $200
Adding number conversion cast (unumber) $20 in if(vera_layer_mode_tile::mapheight#2==$20) goto vera_layer_mode_tile::@20
Adding number conversion cast (unumber) $40 in if(vera_layer_mode_tile::mapheight#3==$40) goto vera_layer_mode_tile::@21
Adding number conversion cast (unumber) $80 in if(vera_layer_mode_tile::mapheight#4==$80) goto vera_layer_mode_tile::@22
Adding number conversion cast (unumber) $100 in if(vera_layer_mode_tile::mapheight#5==$100) goto vera_layer_mode_tile::@23
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::$3 = vera_layer_mode_tile::mapbase_address#3 >> 1
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::$8 = vera_layer_mode_tile::tilebase_address#3 >> 1
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_tile::tilewidth#2==8) goto vera_layer_mode_tile::@26
Adding number conversion cast (unumber) $10 in if(vera_layer_mode_tile::tilewidth#3==$10) goto vera_layer_mode_tile::@27
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_tile::tileheight#2==8) goto vera_layer_mode_tile::@30
Adding number conversion cast (unumber) $10 in if(vera_layer_mode_tile::tileheight#3==$10) goto vera_layer_mode_tile::@31
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::color_depth#0 = 1
Adding number conversion cast (unumber) $10 in if(vera_layer_mode_text::color_mode#1==$10) goto vera_layer_mode_text::@2
Adding number conversion cast (unumber) $100 in if(vera_layer_mode_text::color_mode#2==$100) goto vera_layer_mode_text::@3
Adding number conversion cast (unumber) 1 in if(vera_layer_mode_bitmap::color_depth#1==1) goto vera_layer_mode_bitmap::@4
Adding number conversion cast (unumber) 2 in if(vera_layer_mode_bitmap::color_depth#2==2) goto vera_layer_mode_bitmap::@5
Adding number conversion cast (unumber) 4 in if(vera_layer_mode_bitmap::color_depth#3==4) goto vera_layer_mode_bitmap::@6
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_bitmap::color_depth#4==8) goto vera_layer_mode_bitmap::@7
Adding number conversion cast (unumber) 1 in vera_layer_mode_bitmap::$3 = vera_layer_mode_bitmap::bitmap_address#2 >> 1
Adding number conversion cast (unumber) $140 in if(vera_layer_mode_bitmap::mapwidth#1==$140) goto vera_layer_mode_bitmap::vera_display_set_scale_double1
Adding number conversion cast (unumber) $40 in *VERA_DC_HSCALE = $40
Adding number conversion cast (unumber) $40 in *VERA_DC_VSCALE = $40
Adding number conversion cast (unumber) $280 in if(vera_layer_mode_bitmap::mapwidth#2==$280) goto vera_layer_mode_bitmap::vera_display_set_scale_none1
Adding number conversion cast (unumber) $80 in *VERA_DC_HSCALE = $80
Adding number conversion cast (unumber) $80 in *VERA_DC_VSCALE = $80
Adding number conversion cast (unumber) 1 in vera_layer_mode_text::layer#0 = 1
Adding number conversion cast (unumber) $80 in vera_layer_mode_text::mapwidth#0 = $80
Adding number conversion cast (unumber) $40 in vera_layer_mode_text::mapheight#0 = $40
Adding number conversion cast (unumber) 8 in vera_layer_mode_text::tilewidth#0 = 8
Adding number conversion cast (unumber) 8 in vera_layer_mode_text::tileheight#0 = 8
Adding number conversion cast (unumber) $10 in vera_layer_mode_text::color_mode#0 = $10
Adding number conversion cast (unumber) 1 in screenlayer::layer#0 = 1
Adding number conversion cast (unumber) 1 in vera_layer_set_textcolor::layer#0 = 1
Adding number conversion cast (unumber) 1 in vera_layer_set_backcolor::layer#0 = 1
Adding number conversion cast (unumber) 0 in vera_layer_set_mapbase::layer#1 = 0
Adding number conversion cast (unumber) $20 in vera_layer_set_mapbase::mapbase#1 = $20
Adding number conversion cast (unumber) 1 in vera_layer_set_mapbase::layer#2 = 1
Adding number conversion cast (unumber) 0 in vera_layer_set_mapbase::mapbase#2 = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#1 = 0
Adding number conversion cast (unumber) 1 in conio_x16_init::$9 = conio_screen_height - 1
Adding number conversion cast (unumber) conio_x16_init::$9 in conio_x16_init::$9 = conio_screen_height - (unumber)1
Adding number conversion cast (unumber) 0 in conio_cursor_x[conio_screen_layer] = 0
Adding number conversion cast (unumber) 2 in insertup::$0 = conio_screen_width * 2
Adding number conversion cast (unumber) insertup::$0 in insertup::$0 = conio_screen_width * (unumber)2
Adding number conversion cast (unumber) 1 in insertup::$3 = insertup::i#3 - 1
Adding number conversion cast (unumber) insertup::$3 in insertup::$3 = insertup::i#3 - (unumber)1
Adding number conversion cast (unumber) insertup::$4 in insertup::$4 = insertup::$3 << conio_rowshift
Adding number conversion cast (unumber) 0 in memcpy_in_vram::dest_bank#0 = 0
Adding number conversion cast (unumber) 0 in memcpy_in_vram::src_bank#0 = 0
Adding number conversion cast (unumber) 0 in cscroll::$7 = 0 != conio_scroll_enable[conio_screen_layer]
Adding number conversion cast (unumber) 1 in cscroll::$5 = conio_screen_height - 1
Adding number conversion cast (unumber) cscroll::$5 in cscroll::$5 = conio_screen_height - (unumber)1
Adding number conversion cast (unumber) 0 in gotoxy::x#2 = 0
Adding number conversion cast (unumber) 4 in screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
Adding number conversion cast (unumber) 6 in screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
Adding number conversion cast (unumber) 7 in rand::$0 = rand_state#13 << 7
Adding number conversion cast (unumber) 9 in rand::$1 = rand_state#0 >> 9
Adding number conversion cast (unumber) 8 in rand::$2 = rand_state#1 << 8
Adding number conversion cast (unumber) 0 in bitmap_init::$5 = __bitmap_color_depth == 0
Adding number conversion cast (unumber) 1 in bitmap_init::$8 = __bitmap_color_depth == 1
Adding number conversion cast (unumber) 3 in bitmap_init::$7 = bitmap_init::x#2 >> 3
Adding number conversion cast (snumber) 1 in bitmap_init::bitshift#1 = bitmap_init::bitshift#5 - 1
Adding number conversion cast (unumber) 1 in bitmap_init::bitmask#1 = bitmap_init::bitmask#5 >> 1
Adding number conversion cast (unumber) 2 in bitmap_init::$11 = __bitmap_color_depth == 2
Adding number conversion cast (unumber) 2 in bitmap_init::$10 = bitmap_init::x#3 >> 2
Adding number conversion cast (snumber) 2 in bitmap_init::bitshift#2 = bitmap_init::bitshift#6 - 2
Adding number conversion cast (unumber) 2 in bitmap_init::bitmask#2 = bitmap_init::bitmask#6 >> 2
Adding number conversion cast (unumber) 3 in bitmap_init::$14 = __bitmap_color_depth == 3
Adding number conversion cast (unumber) 1 in bitmap_init::$13 = bitmap_init::x#4 >> 1
Adding number conversion cast (snumber) 4 in bitmap_init::bitshift#3 = bitmap_init::bitshift#7 - 4
Adding number conversion cast (unumber) 4 in bitmap_init::bitmask#3 = bitmap_init::bitmask#7 >> 4
Adding number conversion cast (snumber) 0 in bitmap_init::$16 = bitmap_init::bitshift#8 < 0
Adding number conversion cast (unumber) 0 in bitmap_init::$18 = bitmap_init::bitmask#9 == 0
Adding number conversion cast (unumber) 2 in bitmap_init::$3 = __bitmap_color_depth << 2
Adding number conversion cast (unumber) 2 in bitmap_clear::$0 = __bitmap_color_depth << 2
Adding number conversion cast (unumber) 0 in memset_vram::data#0 = 0
Adding number conversion cast (unumber) 0 in bitmap_plot::$11 = 0 != bitmap_plot::bitshift#0
Adding number conversion cast (unumber) 0 in mul16u::$0 = mul16u::a#2 != 0
Adding number conversion cast (unumber) 1 in mul16u::$1 = mul16u::a#3 & 1
Adding number conversion cast (unumber) mul16u::$1 in mul16u::$1 = mul16u::a#3 & (unumber)1
Adding number conversion cast (unumber) 0 in mul16u::$2 = mul16u::$1 != 0
Adding number conversion cast (unumber) 1 in mul16u::$5 = mul16u::a#4 >> 1
Adding number conversion cast (unumber) 1 in mul16u::$6 = mul16u::mb#2 << 1
Adding number conversion cast (unumber) 1 in bitmap_line_xdyi::$0 = bitmap_line_xdyi::yd#2 >> 1
Adding number conversion cast (unumber) 1 in bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#2 + 1
Adding number conversion cast (unumber) bitmap_line_xdyi::$6 in bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#2 + (unumber)1
Adding number conversion cast (unumber) 1 in bitmap_line_xdyd::$0 = bitmap_line_xdyd::yd#2 >> 1
Adding number conversion cast (unumber) 1 in bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#2 + 1
Adding number conversion cast (unumber) bitmap_line_xdyd::$6 in bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#2 + (unumber)1
Adding number conversion cast (unumber) 1 in bitmap_line_ydxi::$0 = bitmap_line_ydxi::xd#2 >> 1
Adding number conversion cast (unumber) 1 in bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#2 + 1
Adding number conversion cast (unumber) bitmap_line_ydxi::$6 in bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#2 + (unumber)1
Adding number conversion cast (unumber) 1 in bitmap_line_ydxd::$0 = bitmap_line_ydxd::xd#2 >> 1
Adding number conversion cast (unumber) 1 in bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#2 + 1
Adding number conversion cast (unumber) bitmap_line_ydxd::$6 in bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#2 + (unumber)1
Adding number conversion cast (unumber) 1 in divr16u::$0 = divr16u::rem#4 << 1
Adding number conversion cast (unumber) $80 in divr16u::$2 = divr16u::$1 & $80
Adding number conversion cast (unumber) divr16u::$2 in divr16u::$2 = divr16u::$1 & (unumber)$80
Adding number conversion cast (unumber) 0 in divr16u::$3 = divr16u::$2 != 0
Adding number conversion cast (unumber) 1 in divr16u::$6 = divr16u::dividend#3 << 1
Adding number conversion cast (unumber) 1 in divr16u::$7 = divr16u::quotient#3 << 1
Adding number conversion cast (unumber) 1 in divr16u::$5 = divr16u::rem#6 | 1
Adding number conversion cast (unumber) divr16u::$5 in divr16u::$5 = divr16u::rem#6 | (unumber)1
Adding number conversion cast (unumber) 1 in memcpy_in_vram::dest_bank#1 = 1
Adding number conversion cast (unumber) 0 in memcpy_in_vram::src_bank#1 = 0
Adding number conversion cast (unumber) $100*8 in memcpy_in_vram::num#1 = $100*8
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::layer#1 = 1
Adding number conversion cast (unumber) $14000 in vera_layer_mode_tile::mapbase_address#2 = $14000
Adding number conversion cast (unumber) $1f000 in vera_layer_mode_tile::tilebase_address#2 = $1f000
Adding number conversion cast (unumber) $80 in vera_layer_mode_tile::mapwidth#1 = $80
Adding number conversion cast (unumber) $40 in vera_layer_mode_tile::mapheight#1 = $40
Adding number conversion cast (unumber) 8 in vera_layer_mode_tile::tilewidth#1 = 8
Adding number conversion cast (unumber) 8 in vera_layer_mode_tile::tileheight#1 = 8
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::color_depth#1 = 1
Adding number conversion cast (unumber) 0 in vera_layer_mode_bitmap::layer#0 = 0
Adding number conversion cast (unumber) $140 in vera_layer_mode_bitmap::mapwidth#0 = $140
Adding number conversion cast (unumber) 8 in vera_layer_mode_bitmap::color_depth#0 = 8
Adding number conversion cast (unumber) 1 in screenlayer::layer#1 = 1
Adding number conversion cast (unumber) 0 in gotoxy::x#3 = 0
Adding number conversion cast (unumber) $19 in gotoxy::y#3 = $19
Adding number conversion cast (unumber) 0 in main::vera_layer_show1_layer#0 = 0
Adding number conversion cast (unumber) 0 in bitmap_init::layer#0 = 0
Adding number conversion cast (unumber) 0 in bitmap_init::address#0 = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#4 = 0
Adding number conversion cast (unumber) $1d in gotoxy::y#4 = $1d
Adding number conversion cast (unumber) 0 in main::$48 = 0 != main::$30
Adding number conversion cast (unumber) $140 in modr16u::divisor#0 = $140
Adding number conversion cast (unumber) 0 in modr16u::rem#0 = 0
Adding number conversion cast (unumber) $140 in modr16u::divisor#1 = $140
Adding number conversion cast (unumber) 0 in modr16u::rem#1 = 0
Adding number conversion cast (unumber) $c8 in modr16u::divisor#2 = $c8
Adding number conversion cast (unumber) 0 in modr16u::rem#2 = 0
Adding number conversion cast (unumber) $c8 in modr16u::divisor#3 = $c8
Adding number conversion cast (unumber) 0 in modr16u::rem#3 = 0
Adding number conversion cast (unumber) $ff in main::$41 = main::$40 & $ff
Adding number conversion cast (unumber) main::$41 in main::$41 = main::$40 & (unumber)$ff
Adding number conversion cast (unumber) 0 in gotoxy::x#5 = 0
Adding number conversion cast (unumber) $1a in gotoxy::y#5 = $1a
Adding number conversion cast (unumber) 0 in gotoxy::x#6 = 0
Adding number conversion cast (unumber) $1d in gotoxy::y#6 = $1d
Adding number conversion cast (unumber) 0 in main::$49 = 0 != main::$43
Adding number conversion cast (unumber) 0 in bitmap_line::y0#1 = 0
Adding number conversion cast (unumber) $c7 in bitmap_line::y1#1 = $c7
Adding number conversion cast (unumber) $13f in main::$46 = main::x#1 > $13f
Adding number conversion cast (unumber) 1 in screenlayer::layer#2 = 1
Adding number conversion cast (unumber) 0 in main::x#2 = 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast conio_cursor_x[conio_screen_layer] = (unumber)0
Inlining cast conio_cursor_y[conio_screen_layer] = (unumber)0
Inlining cast conio_line_text[clrscr::$9] = (unumber)0
Inlining cast gotoxy::y#0 = (unumber)0
Inlining cast gotoxy::x#0 = (unumber)0
Inlining cast conio_cursor_x[conio_screen_layer] = (unumber)0
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#2] = (unumber)6
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$11] = (unumber)$40
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#3] = (unumber)7
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$12] = (unumber)$80
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#4] = (unumber)8
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$13] = (unumber)$100
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#5] = (unumber)9
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$14] = (unumber)$200
Inlining cast vera_layer_mode_tile::color_depth#0 = (unumber)1
Inlining cast *VERA_DC_HSCALE = (unumber)$40
Inlining cast *VERA_DC_VSCALE = (unumber)$40
Inlining cast *VERA_DC_HSCALE = (unumber)$80
Inlining cast *VERA_DC_VSCALE = (unumber)$80
Inlining cast vera_layer_mode_text::layer#0 = (unumber)1
Inlining cast vera_layer_mode_text::mapwidth#0 = (unumber)$80
Inlining cast vera_layer_mode_text::mapheight#0 = (unumber)$40
Inlining cast vera_layer_mode_text::tilewidth#0 = (unumber)8
Inlining cast vera_layer_mode_text::tileheight#0 = (unumber)8
Inlining cast vera_layer_mode_text::color_mode#0 = (unumber)$10
Inlining cast screenlayer::layer#0 = (unumber)1
Inlining cast vera_layer_set_textcolor::layer#0 = (unumber)1
Inlining cast vera_layer_set_backcolor::layer#0 = (unumber)1
Inlining cast vera_layer_set_mapbase::layer#1 = (unumber)0
Inlining cast vera_layer_set_mapbase::mapbase#1 = (unumber)$20
Inlining cast vera_layer_set_mapbase::layer#2 = (unumber)1
Inlining cast vera_layer_set_mapbase::mapbase#2 = (unumber)0
Inlining cast gotoxy::x#1 = (unumber)0
Inlining cast conio_cursor_x[conio_screen_layer] = (unumber)0
Inlining cast memcpy_in_vram::dest_bank#0 = (unumber)0
Inlining cast memcpy_in_vram::src_bank#0 = (unumber)0
Inlining cast gotoxy::x#2 = (unumber)0
Inlining cast memset_vram::data#0 = (unumber)0
Inlining cast memcpy_in_vram::dest_bank#1 = (unumber)1
Inlining cast memcpy_in_vram::src_bank#1 = (unumber)0
Inlining cast memcpy_in_vram::num#1 = (unumber)$100*8
Inlining cast vera_layer_mode_tile::layer#1 = (unumber)1
Inlining cast vera_layer_mode_tile::mapbase_address#2 = (unumber)$14000
Inlining cast vera_layer_mode_tile::tilebase_address#2 = (unumber)$1f000
Inlining cast vera_layer_mode_tile::mapwidth#1 = (unumber)$80
Inlining cast vera_layer_mode_tile::mapheight#1 = (unumber)$40
Inlining cast vera_layer_mode_tile::tilewidth#1 = (unumber)8
Inlining cast vera_layer_mode_tile::tileheight#1 = (unumber)8
Inlining cast vera_layer_mode_tile::color_depth#1 = (unumber)1
Inlining cast vera_layer_mode_bitmap::layer#0 = (unumber)0
Inlining cast vera_layer_mode_bitmap::mapwidth#0 = (unumber)$140
Inlining cast vera_layer_mode_bitmap::color_depth#0 = (unumber)8
Inlining cast screenlayer::layer#1 = (unumber)1
Inlining cast gotoxy::x#3 = (unumber)0
Inlining cast gotoxy::y#3 = (unumber)$19
Inlining cast main::vera_layer_show1_layer#0 = (unumber)0
Inlining cast bitmap_init::layer#0 = (unumber)0
Inlining cast bitmap_init::address#0 = (unumber)0
Inlining cast gotoxy::x#4 = (unumber)0
Inlining cast gotoxy::y#4 = (unumber)$1d
Inlining cast modr16u::divisor#0 = (unumber)$140
Inlining cast modr16u::rem#0 = (unumber)0
Inlining cast modr16u::divisor#1 = (unumber)$140
Inlining cast modr16u::rem#1 = (unumber)0
Inlining cast modr16u::divisor#2 = (unumber)$c8
Inlining cast modr16u::rem#2 = (unumber)0
Inlining cast modr16u::divisor#3 = (unumber)$c8
Inlining cast modr16u::rem#3 = (unumber)0
Inlining cast gotoxy::x#5 = (unumber)0
Inlining cast gotoxy::y#5 = (unumber)$1a
Inlining cast gotoxy::x#6 = (unumber)0
Inlining cast gotoxy::y#6 = (unumber)$1d
Inlining cast bitmap_line::y0#1 = (unumber)0
Inlining cast bitmap_line::y1#1 = (unumber)$c7
Inlining cast screenlayer::layer#2 = (unumber)1
Inlining cast main::x#2 = (unumber)0
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 40736
Simplifying constant pointer cast (byte*) 40737
Simplifying constant pointer cast (byte*) 40738
Simplifying constant pointer cast (byte*) 40739
Simplifying constant pointer cast (byte*) 40740
Simplifying constant pointer cast (byte*) 40741
Simplifying constant pointer cast (byte*) 40745
Simplifying constant pointer cast (byte*) 40746
Simplifying constant pointer cast (byte*) 40747
Simplifying constant pointer cast (byte*) 40749
Simplifying constant pointer cast (byte*) 40750
Simplifying constant pointer cast (byte*) 40751
Simplifying constant pointer cast (byte*) 40756
Simplifying constant pointer cast (byte*) 40757
Simplifying constant pointer cast (byte*) 40758
Simplifying constant pointer cast (byte*) 0
Simplifying constant pointer cast (byte*) 650
Simplifying constant pointer cast (byte*) 65508
Simplifying constant pointer cast (byte*) 214
Simplifying constant integer cast 4
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast $28
Simplifying constant integer cast 7
Simplifying constant integer cast $1e
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 4
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 4
Simplifying constant integer cast 8
Simplifying constant integer cast $20
Simplifying constant integer cast 6
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast 7
Simplifying constant integer cast $80
Simplifying constant integer cast $80
Simplifying constant integer cast 8
Simplifying constant integer cast $100
Simplifying constant integer cast $100
Simplifying constant integer cast 9
Simplifying constant integer cast $200
Simplifying constant integer cast $20
Simplifying constant integer cast $40
Simplifying constant integer cast $80
Simplifying constant integer cast $100
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast 1
Simplifying constant integer cast $10
Simplifying constant integer cast $100
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 4
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Simplifying constant integer cast $140
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast $280
Simplifying constant integer cast $80
Simplifying constant integer cast $80
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $f800
Simplifying constant integer cast $80
Simplifying constant integer cast $40
Simplifying constant integer cast 8
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $20
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast 7
Simplifying constant integer cast 9
Simplifying constant integer cast 8
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 2
Simplifying constant integer cast 2
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 4
Simplifying constant integer cast 4
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 2
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast $80
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant pointer cast (byte*) 61440
Simplifying constant integer cast 0
Simplifying constant pointer cast (byte*) 63488
Simplifying constant integer cast 1
Simplifying constant integer cast $14000
Simplifying constant integer cast $1f000
Simplifying constant integer cast $80
Simplifying constant integer cast $40
Simplifying constant integer cast 8
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $140
Simplifying constant integer cast 8
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $1d
Simplifying constant integer cast 0
Simplifying constant integer cast $140
Simplifying constant integer cast 0
Simplifying constant integer cast $140
Simplifying constant integer cast 0
Simplifying constant integer cast $c8
Simplifying constant integer cast 0
Simplifying constant integer cast $c8
Simplifying constant integer cast 0
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast $1a
Simplifying constant integer cast 0
Simplifying constant integer cast $1d
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $c7
Simplifying constant integer cast $13f
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) $1e
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $20
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) 8
Finalized unsigned number type (word) $100
Finalized unsigned number type (word) $100
Finalized unsigned number type (byte) 9
Finalized unsigned number type (word) $200
Finalized unsigned number type (byte) $20
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $80
Finalized unsigned number type (word) $100
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $10
Finalized unsigned number type (word) $100
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 1
Finalized unsigned number type (word) $140
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $40
Finalized unsigned number type (word) $280
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $20
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 9
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 3
Finalized signed number type (signed byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized signed number type (signed byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 1
Finalized signed number type (signed byte) 4
Finalized unsigned number type (byte) 4
Finalized signed number type (signed byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (dword) $14000
Finalized unsigned number type (dword) $1f000
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (word) $140
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $1d
Finalized unsigned number type (byte) 0
Finalized unsigned number type (word) $140
Finalized unsigned number type (byte) 0
Finalized unsigned number type (word) $140
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $c8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $c8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $1a
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $1d
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $c7
Finalized unsigned number type (word) $13f
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in screensize::$1 = $28 << screensize::hscale#0
Inferred type updated to byte in screensize::$3 = $1e << screensize::vscale#0
Inferred type updated to byte in conio_x16_init::$9 = conio_screen_height - 1
Inferred type updated to byte in insertup::$0 = conio_screen_width * 2
Inferred type updated to byte in insertup::$3 = insertup::i#3 - 1
Inferred type updated to byte in insertup::$4 = insertup::$3 << conio_rowshift
Inferred type updated to byte in cscroll::$5 = conio_screen_height - 1
Inferred type updated to byte in mul16u::$1 = mul16u::a#3 & 1
Inferred type updated to word in bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#2 + 1
Inferred type updated to word in bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#2 + 1
Inferred type updated to word in bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#2 + 1
Inferred type updated to word in bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#2 + 1
Inferred type updated to byte in divr16u::$2 = divr16u::$1 & $80
Inferred type updated to word in divr16u::$5 = divr16u::rem#6 | 1
Inferred type updated to byte in main::$41 = main::$40 & $ff
Inversing boolean not [85] gotoxy::$1 = gotoxy::y#7 <= conio_screen_height from [84] gotoxy::$0 = gotoxy::y#7 > conio_screen_height
Inversing boolean not [89] gotoxy::$3 = gotoxy::x#7 < conio_screen_width from [88] gotoxy::$2 = gotoxy::x#7 >= conio_screen_width
Inversing boolean not [146] cputc::$12 = conio_cursor_x[conio_screen_layer] != conio_screen_width from [145] cputc::$11 = conio_cursor_x[conio_screen_layer] == conio_screen_width
Inversing boolean not [151] cputc::$9 = cputc::$16 != conio_width from [150] cputc::$8 = cputc::$16 == conio_width
Inversing boolean not [191] vera_display_get_hscale::$1 = *VERA_DC_HSCALE != vera_display_get_hscale::hscale[vera_display_get_hscale::s#2] from [190] vera_display_get_hscale::$0 = *VERA_DC_HSCALE == vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]
Inversing boolean not [208] vera_display_get_vscale::$1 = *VERA_DC_VSCALE != vera_display_get_vscale::vscale[vera_display_get_vscale::s#2] from [207] vera_display_get_vscale::$0 = *VERA_DC_VSCALE == vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]
Inversing boolean not [533] conio_x16_init::$8 = conio_x16_init::line#2 < conio_screen_height from [532] conio_x16_init::$7 = conio_x16_init::line#2 >= conio_screen_height
Inversing boolean not [603] cscroll::$1 = conio_cursor_y[conio_screen_layer] < conio_screen_height from [602] cscroll::$0 = conio_cursor_y[conio_screen_layer] >= conio_screen_height
Inversing boolean not [615] cscroll::$3 = conio_cursor_y[conio_screen_layer] < conio_height from [614] cscroll::$2 = conio_cursor_y[conio_screen_layer] >= conio_height
Inversing boolean not [715] bitmap_init::$6 = __bitmap_color_depth != 0 from [714] bitmap_init::$5 = __bitmap_color_depth == 0
Inversing boolean not [719] bitmap_init::$9 = __bitmap_color_depth != 1 from [718] bitmap_init::$8 = __bitmap_color_depth == 1
Inversing boolean not [731] bitmap_init::$12 = __bitmap_color_depth != 2 from [730] bitmap_init::$11 = __bitmap_color_depth == 2
Inversing boolean not [743] bitmap_init::$15 = __bitmap_color_depth != 3 from [742] bitmap_init::$14 = __bitmap_color_depth == 3
Inversing boolean not [755] bitmap_init::$17 = bitmap_init::bitshift#8 >= 0 from [754] bitmap_init::$16 = bitmap_init::bitshift#8 < 0
Inversing boolean not [764] bitmap_init::$19 = bitmap_init::bitmask#9 != 0 from [763] bitmap_init::$18 = bitmap_init::bitmask#9 == 0
Inversing boolean not [955] mul16u::$3 = mul16u::$1 == 0 from [954] mul16u::$2 = mul16u::$1 != 0
Inversing boolean not [983] bitmap_line_xdyi::$4 = bitmap_line_xdyi::xd#2 >= bitmap_line_xdyi::e#1 from [982] bitmap_line_xdyi::$3 = bitmap_line_xdyi::xd#2 < bitmap_line_xdyi::e#1
Inversing boolean not [1007] bitmap_line_xdyd::$4 = bitmap_line_xdyd::xd#2 >= bitmap_line_xdyd::e#1 from [1006] bitmap_line_xdyd::$3 = bitmap_line_xdyd::xd#2 < bitmap_line_xdyd::e#1
Inversing boolean not [1031] bitmap_line_ydxi::$4 = bitmap_line_ydxi::yd#2 >= bitmap_line_ydxi::e#1 from [1030] bitmap_line_ydxi::$3 = bitmap_line_ydxi::yd#2 < bitmap_line_ydxi::e#1
Inversing boolean not [1056] bitmap_line_ydxd::$4 = bitmap_line_ydxd::yd#2 >= bitmap_line_ydxd::e#1 from [1055] bitmap_line_ydxd::$3 = bitmap_line_ydxd::yd#2 < bitmap_line_ydxd::e#1
Inversing boolean not [1076] divr16u::$4 = divr16u::$2 == 0 from [1075] divr16u::$3 = divr16u::$2 != 0
Inversing boolean not [1084] divr16u::$9 = divr16u::rem#5 < divr16u::divisor#1 from [1083] divr16u::$8 = divr16u::rem#5 >= divr16u::divisor#1
Inversing boolean not [1213] main::$31 = 0 == main::$30 from [1212] main::$48 = 0 != main::$30
Inversing boolean not [1330] main::$44 = 0 == main::$43 from [1329] main::$49 = 0 != main::$43
Inversing boolean not [1343] main::$47 = main::x#1 <= $13f from [1342] main::$46 = main::x#1 > $13f
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#4 kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#1 screenlayer::vera_layer_get_width1_return#3 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#1 screenlayer::vera_layer_get_height1_return#3 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#2 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::vera_layer_get_color_depth1_return#3 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Alias memcpy_in_vram::i#2 = memcpy_in_vram::i#3 
Alias memcpy_in_vram::num#2 = memcpy_in_vram::num#4 
Alias memset_vram::data#1 = memset_vram::data#2 
Alias memset_vram::i#2 = memset_vram::i#3 
Alias memset_vram::num#1 = memset_vram::num#3 
Alias vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#3 
Alias clrscr::line_text#0 = clrscr::line_text#8 clrscr::line_text#6 
Alias CONIO_SCREEN_BANK#32 = CONIO_SCREEN_BANK#40 CONIO_SCREEN_BANK#50 
Alias vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#3 
Alias clrscr::color#0 = clrscr::$3 
Alias clrscr::line_text#2 = clrscr::line_text#4 clrscr::ch#0 
Alias CONIO_SCREEN_BANK#11 = CONIO_SCREEN_BANK#22 
Alias clrscr::color#3 = clrscr::color#4 
Alias clrscr::l#2 = clrscr::l#5 
Alias clrscr::color#1 = clrscr::color#2 clrscr::color#5 
Alias clrscr::c#2 = clrscr::c#3 
Alias clrscr::line_text#3 = clrscr::line_text#7 clrscr::line_text#5 
Alias clrscr::l#3 = clrscr::l#6 clrscr::l#4 
Alias CONIO_SCREEN_BANK#31 = CONIO_SCREEN_BANK#51 CONIO_SCREEN_BANK#41 
Alias gotoxy::x#10 = gotoxy::x#9 
Alias gotoxy::line_offset#0 = gotoxy::$4 
Alias gotoxy::y#10 = gotoxy::y#9 
Alias screensize::hscale#0 = screensize::$0 
Alias screensize::vscale#0 = screensize::$2 
Alias vera_layer_get_color::return#0 = vera_layer_get_color::return#5 
Alias CONIO_SCREEN_TEXT#102 = CONIO_SCREEN_TEXT#12 CONIO_SCREEN_TEXT#27 CONIO_SCREEN_TEXT#95 CONIO_SCREEN_TEXT#108 CONIO_SCREEN_TEXT#103 CONIO_SCREEN_TEXT#96 CONIO_SCREEN_TEXT#97 
Alias cputc::c#1 = cputc::c#3 cputc::c#2 
Alias CONIO_SCREEN_BANK#12 = CONIO_SCREEN_BANK#23 CONIO_SCREEN_BANK#33 
Alias cputc::color#0 = cputc::$0 cputc::color#1 
Alias cputc::conio_addr#0 = cputc::$1 
Alias cputc::conio_addr#1 = cputc::conio_addr#2 
Alias cputs::c#1 = cputs::$0 cputs::c#2 
Alias CONIO_SCREEN_TEXT#37 = CONIO_SCREEN_TEXT#48 CONIO_SCREEN_TEXT#60 
Alias cputs::s#0 = cputs::s#11 cputs::s#10 
Alias CONIO_SCREEN_BANK#42 = CONIO_SCREEN_BANK#52 CONIO_SCREEN_BANK#63 
Alias vera_display_get_hscale::s#2 = vera_display_get_hscale::s#3 vera_display_get_hscale::s#4 vera_display_get_hscale::scale#1 
Alias vera_display_get_hscale::scale#3 = vera_display_get_hscale::scale#4 
Alias vera_display_get_hscale::return#0 = vera_display_get_hscale::scale#2 vera_display_get_hscale::return#3 vera_display_get_hscale::return#1 
Alias vera_display_get_vscale::s#2 = vera_display_get_vscale::s#3 vera_display_get_vscale::s#4 vera_display_get_vscale::scale#1 
Alias vera_display_get_vscale::scale#3 = vera_display_get_vscale::scale#4 
Alias vera_display_get_vscale::return#0 = vera_display_get_vscale::scale#2 vera_display_get_vscale::return#3 vera_display_get_vscale::return#1 
Alias vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#3 vera_layer_get_mapbase_bank::return#1 
Alias vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#3 vera_layer_get_mapbase_offset::return#1 
Alias vera_layer_set_textcolor::return#0 = vera_layer_set_textcolor::old#0 vera_layer_set_textcolor::return#8 vera_layer_set_textcolor::return#1 
Alias vera_layer_get_textcolor::return#1 = vera_layer_get_textcolor::return#4 vera_layer_get_textcolor::return#2 
Alias vera_layer_set_backcolor::return#0 = vera_layer_set_backcolor::old#0 vera_layer_set_backcolor::return#6 vera_layer_set_backcolor::return#1 
Alias vera_layer_get_backcolor::return#1 = vera_layer_get_backcolor::return#4 vera_layer_get_backcolor::return#2 
Alias vera_layer_get_color::layer#2 = vera_layer_get_color::layer#3 vera_layer_get_color::layer#4 
Alias vera_layer_get_color::return#2 = vera_layer_get_color::$2 
Alias vera_layer_get_color::return#3 = vera_layer_get_color::return#6 
Alias vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#3 vera_layer_get_rowshift::return#1 
Alias vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#3 vera_layer_get_rowskip::return#1 
Alias vera_layer_mode_tile::config#0 = vera_layer_mode_tile::config#13 vera_layer_mode_tile::config#26 vera_layer_mode_tile::config#14 vera_layer_mode_tile::config#27 vera_layer_mode_tile::config#15 vera_layer_mode_tile::config#28 vera_layer_mode_tile::config#16 
Alias vera_layer_mode_tile::mapwidth#10 = vera_layer_mode_tile::mapwidth#7 vera_layer_mode_tile::mapwidth#11 vera_layer_mode_tile::mapwidth#12 vera_layer_mode_tile::mapwidth#8 vera_layer_mode_tile::mapwidth#13 vera_layer_mode_tile::mapwidth#9 vera_layer_mode_tile::mapwidth#6 
Alias vera_layer_mode_tile::layer#22 = vera_layer_mode_tile::layer#23 vera_layer_mode_tile::layer#31 vera_layer_mode_tile::layer#32 vera_layer_mode_tile::layer#24 vera_layer_mode_tile::layer#33 vera_layer_mode_tile::layer#25 vera_layer_mode_tile::layer#26 
Alias vera_layer_mode_tile::mapheight#14 = vera_layer_mode_tile::mapheight#15 vera_layer_mode_tile::mapheight#19 vera_layer_mode_tile::mapheight#20 vera_layer_mode_tile::mapheight#16 vera_layer_mode_tile::mapheight#21 vera_layer_mode_tile::mapheight#17 vera_layer_mode_tile::mapheight#18 
Alias vera_layer_mode_tile::mapbase_address#21 = vera_layer_mode_tile::mapbase_address#22 vera_layer_mode_tile::mapbase_address#26 vera_layer_mode_tile::mapbase_address#27 vera_layer_mode_tile::mapbase_address#23 vera_layer_mode_tile::mapbase_address#28 vera_layer_mode_tile::mapbase_address#24 vera_layer_mode_tile::mapbase_address#25 
Alias vera_layer_mode_tile::tilebase_address#22 = vera_layer_mode_tile::tilebase_address#23 vera_layer_mode_tile::tilebase_address#27 vera_layer_mode_tile::tilebase_address#28 vera_layer_mode_tile::tilebase_address#24 vera_layer_mode_tile::tilebase_address#29 vera_layer_mode_tile::tilebase_address#25 vera_layer_mode_tile::tilebase_address#26 
Alias vera_layer_mode_tile::tilewidth#22 = vera_layer_mode_tile::tilewidth#23 vera_layer_mode_tile::tilewidth#27 vera_layer_mode_tile::tilewidth#28 vera_layer_mode_tile::tilewidth#24 vera_layer_mode_tile::tilewidth#29 vera_layer_mode_tile::tilewidth#25 vera_layer_mode_tile::tilewidth#26 
Alias vera_layer_mode_tile::tileheight#26 = vera_layer_mode_tile::tileheight#27 vera_layer_mode_tile::tileheight#31 vera_layer_mode_tile::tileheight#32 vera_layer_mode_tile::tileheight#28 vera_layer_mode_tile::tileheight#33 vera_layer_mode_tile::tileheight#29 vera_layer_mode_tile::tileheight#30 
Alias vera_layer_mode_tile::color_depth#2 = vera_layer_mode_tile::color_depth#3 vera_layer_mode_tile::color_depth#4 vera_layer_mode_tile::color_depth#5 
Alias vera_layer_mode_tile::config#17 = vera_layer_mode_tile::config#29 vera_layer_mode_tile::config#30 vera_layer_mode_tile::config#18 vera_layer_mode_tile::config#31 vera_layer_mode_tile::config#19 vera_layer_mode_tile::config#32 vera_layer_mode_tile::config#20 
Alias vera_layer_mode_tile::layer#10 = vera_layer_mode_tile::layer#2 vera_layer_mode_tile::layer#11 vera_layer_mode_tile::layer#3 vera_layer_mode_tile::layer#12 vera_layer_mode_tile::layer#4 vera_layer_mode_tile::layer#13 vera_layer_mode_tile::layer#5 
Alias vera_layer_mode_tile::mapheight#10 = vera_layer_mode_tile::mapheight#7 vera_layer_mode_tile::mapheight#11 vera_layer_mode_tile::mapheight#12 vera_layer_mode_tile::mapheight#8 vera_layer_mode_tile::mapheight#13 vera_layer_mode_tile::mapheight#9 vera_layer_mode_tile::mapheight#6 
Alias vera_layer_mode_tile::mapbase_address#13 = vera_layer_mode_tile::mapbase_address#14 vera_layer_mode_tile::mapbase_address#18 vera_layer_mode_tile::mapbase_address#19 vera_layer_mode_tile::mapbase_address#15 vera_layer_mode_tile::mapbase_address#20 vera_layer_mode_tile::mapbase_address#16 vera_layer_mode_tile::mapbase_address#17 
Alias vera_layer_mode_tile::tilebase_address#14 = vera_layer_mode_tile::tilebase_address#15 vera_layer_mode_tile::tilebase_address#19 vera_layer_mode_tile::tilebase_address#20 vera_layer_mode_tile::tilebase_address#16 vera_layer_mode_tile::tilebase_address#21 vera_layer_mode_tile::tilebase_address#17 vera_layer_mode_tile::tilebase_address#18 
Alias vera_layer_mode_tile::tilewidth#14 = vera_layer_mode_tile::tilewidth#15 vera_layer_mode_tile::tilewidth#19 vera_layer_mode_tile::tilewidth#20 vera_layer_mode_tile::tilewidth#16 vera_layer_mode_tile::tilewidth#21 vera_layer_mode_tile::tilewidth#17 vera_layer_mode_tile::tilewidth#18 
Alias vera_layer_mode_tile::tileheight#18 = vera_layer_mode_tile::tileheight#19 vera_layer_mode_tile::tileheight#23 vera_layer_mode_tile::tileheight#24 vera_layer_mode_tile::tileheight#20 vera_layer_mode_tile::tileheight#25 vera_layer_mode_tile::tileheight#21 vera_layer_mode_tile::tileheight#22 
Alias vera_layer_mode_tile::mapwidth#2 = vera_layer_mode_tile::mapwidth#3 vera_layer_mode_tile::mapwidth#4 vera_layer_mode_tile::mapwidth#5 
Alias vera_layer_mode_tile::config#21 = vera_layer_mode_tile::config#33 vera_layer_mode_tile::config#34 vera_layer_mode_tile::config#22 vera_layer_mode_tile::config#35 vera_layer_mode_tile::config#23 vera_layer_mode_tile::config#36 vera_layer_mode_tile::config#24 
Alias vera_layer_mode_tile::layer#14 = vera_layer_mode_tile::layer#15 vera_layer_mode_tile::layer#27 vera_layer_mode_tile::layer#28 vera_layer_mode_tile::layer#16 vera_layer_mode_tile::layer#29 vera_layer_mode_tile::layer#17 vera_layer_mode_tile::layer#18 
Alias vera_layer_mode_tile::mapbase_address#10 = vera_layer_mode_tile::mapbase_address#6 vera_layer_mode_tile::mapbase_address#11 vera_layer_mode_tile::mapbase_address#7 vera_layer_mode_tile::mapbase_address#12 vera_layer_mode_tile::mapbase_address#8 vera_layer_mode_tile::mapbase_address#5 vera_layer_mode_tile::mapbase_address#9 
Alias vera_layer_mode_tile::tilebase_address#10 = vera_layer_mode_tile::tilebase_address#7 vera_layer_mode_tile::tilebase_address#11 vera_layer_mode_tile::tilebase_address#12 vera_layer_mode_tile::tilebase_address#8 vera_layer_mode_tile::tilebase_address#13 vera_layer_mode_tile::tilebase_address#9 vera_layer_mode_tile::tilebase_address#6 
Alias vera_layer_mode_tile::tilewidth#10 = vera_layer_mode_tile::tilewidth#7 vera_layer_mode_tile::tilewidth#11 vera_layer_mode_tile::tilewidth#12 vera_layer_mode_tile::tilewidth#8 vera_layer_mode_tile::tilewidth#13 vera_layer_mode_tile::tilewidth#9 vera_layer_mode_tile::tilewidth#6 
Alias vera_layer_mode_tile::tileheight#10 = vera_layer_mode_tile::tileheight#11 vera_layer_mode_tile::tileheight#15 vera_layer_mode_tile::tileheight#16 vera_layer_mode_tile::tileheight#12 vera_layer_mode_tile::tileheight#17 vera_layer_mode_tile::tileheight#13 vera_layer_mode_tile::tileheight#14 
Alias vera_layer_mode_tile::mapheight#2 = vera_layer_mode_tile::mapheight#3 vera_layer_mode_tile::mapheight#4 vera_layer_mode_tile::mapheight#5 
Alias vera_layer_mode_tile::mapbase_address#3 = vera_layer_mode_tile::mapbase_address#4 
Alias vera_layer_mode_tile::layer#34 = vera_layer_mode_tile::layer#7 vera_layer_mode_tile::layer#6 vera_layer_mode_tile::layer#8 vera_layer_mode_tile::layer#35 vera_layer_mode_tile::layer#36 
Alias vera_layer_mode_tile::tilebase_address#3 = vera_layer_mode_tile::tilebase_address#4 vera_layer_mode_tile::tilebase_address#5 
Alias vera_layer_mode_tile::tilewidth#2 = vera_layer_mode_tile::tilewidth#4 vera_layer_mode_tile::tilewidth#5 vera_layer_mode_tile::tilewidth#3 
Alias vera_layer_mode_tile::tileheight#4 = vera_layer_mode_tile::tileheight#8 vera_layer_mode_tile::tileheight#9 vera_layer_mode_tile::tileheight#7 vera_layer_mode_tile::tileheight#5 vera_layer_mode_tile::tileheight#6 
Alias vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::$3 
Alias vera_layer_mode_tile::mapbase#0 = vera_layer_mode_tile::$4 
Alias vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::$8 
Alias vera_layer_mode_tile::tilebase#0 = vera_layer_mode_tile::$9 
Alias vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#6 vera_layer_mode_tile::tilebase#11 vera_layer_mode_tile::tilebase#7 
Alias vera_layer_mode_tile::tilebase#12 = vera_layer_mode_tile::tilebase#8 vera_layer_mode_tile::tilebase#13 vera_layer_mode_tile::tilebase#9 
Alias vera_layer_mode_tile::layer#19 = vera_layer_mode_tile::layer#20 vera_layer_mode_tile::layer#30 vera_layer_mode_tile::layer#21 
Alias vera_layer_mode_tile::tileheight#2 = vera_layer_mode_tile::tileheight#3 
Alias vera_layer_mode_text::color_mode#1 = vera_layer_mode_text::color_mode#3 vera_layer_mode_text::color_mode#2 
Alias vera_layer_mode_text::layer#1 = vera_layer_mode_text::layer#4 vera_layer_mode_text::layer#2 vera_layer_mode_text::layer#5 vera_layer_mode_text::layer#3 
Alias vera_layer_mode_bitmap::config#0 = vera_layer_mode_bitmap::config#6 vera_layer_mode_bitmap::config#12 vera_layer_mode_bitmap::config#7 vera_layer_mode_bitmap::config#13 vera_layer_mode_bitmap::config#8 vera_layer_mode_bitmap::config#14 vera_layer_mode_bitmap::config#9 
Alias vera_layer_mode_bitmap::bitmap_address#10 = vera_layer_mode_bitmap::bitmap_address#4 vera_layer_mode_bitmap::bitmap_address#8 vera_layer_mode_bitmap::bitmap_address#9 vera_layer_mode_bitmap::bitmap_address#5 vera_layer_mode_bitmap::bitmap_address#6 vera_layer_mode_bitmap::bitmap_address#3 vera_layer_mode_bitmap::bitmap_address#7 
Alias vera_layer_mode_bitmap::layer#12 = vera_layer_mode_bitmap::layer#5 vera_layer_mode_bitmap::layer#13 vera_layer_mode_bitmap::layer#6 vera_layer_mode_bitmap::layer#14 vera_layer_mode_bitmap::layer#7 vera_layer_mode_bitmap::layer#4 vera_layer_mode_bitmap::layer#8 
Alias vera_layer_mode_bitmap::mapwidth#10 = vera_layer_mode_bitmap::mapwidth#4 vera_layer_mode_bitmap::mapwidth#8 vera_layer_mode_bitmap::mapwidth#9 vera_layer_mode_bitmap::mapwidth#5 vera_layer_mode_bitmap::mapwidth#6 vera_layer_mode_bitmap::mapwidth#3 vera_layer_mode_bitmap::mapwidth#7 
Alias vera_layer_mode_bitmap::color_depth#1 = vera_layer_mode_bitmap::color_depth#2 vera_layer_mode_bitmap::color_depth#3 vera_layer_mode_bitmap::color_depth#4 
Alias vera_layer_mode_bitmap::config#15 = vera_layer_mode_bitmap::config#5 vera_layer_mode_bitmap::$0 vera_layer_mode_bitmap::config#18 vera_layer_mode_bitmap::config#17 vera_layer_mode_bitmap::config#19 vera_layer_mode_bitmap::config#16 
Alias vera_layer_mode_bitmap::bitmap_address#0 = vera_layer_mode_bitmap::$3 
Alias vera_layer_mode_bitmap::tilebase#0 = vera_layer_mode_bitmap::$4 
Alias vera_layer_mode_bitmap::tilebase#1 = vera_layer_mode_bitmap::tilebase#7 vera_layer_mode_bitmap::tilebase#4 vera_layer_mode_bitmap::tilebase#10 vera_layer_mode_bitmap::tilebase#8 vera_layer_mode_bitmap::tilebase#5 
Alias vera_layer_mode_bitmap::layer#1 = vera_layer_mode_bitmap::layer#15 vera_layer_mode_bitmap::layer#9 vera_layer_mode_bitmap::layer#11 vera_layer_mode_bitmap::layer#16 vera_layer_mode_bitmap::layer#10 
Alias vera_layer_mode_bitmap::mapwidth#1 = vera_layer_mode_bitmap::mapwidth#2 
Alias vera_layer_mode_bitmap::layer#2 = vera_layer_mode_bitmap::layer#3 
Alias vera_layer_mode_bitmap::tilebase#6 = vera_layer_mode_bitmap::tilebase#9 
Alias CONIO_SCREEN_BANK#24 = CONIO_SCREEN_BANK#34 CONIO_SCREEN_BANK#43 
Alias CONIO_SCREEN_TEXT#28 = CONIO_SCREEN_TEXT#38 CONIO_SCREEN_TEXT#49 
Alias conio_x16_init::line#0 = conio_x16_init::line#9 conio_x16_init::line#8 conio_x16_init::line#7 conio_x16_init::line#6 conio_x16_init::line#5 conio_x16_init::line#4 conio_x16_init::line#2 
Alias CONIO_SCREEN_BANK#0 = CONIO_SCREEN_BANK#13 CONIO_SCREEN_BANK#75 CONIO_SCREEN_BANK#64 CONIO_SCREEN_BANK#53 CONIO_SCREEN_BANK#45 CONIO_SCREEN_BANK#44 
Alias CONIO_SCREEN_TEXT#0 = CONIO_SCREEN_TEXT#13 CONIO_SCREEN_TEXT#85 CONIO_SCREEN_TEXT#78 CONIO_SCREEN_TEXT#61 CONIO_SCREEN_TEXT#51 CONIO_SCREEN_TEXT#50 
Alias CONIO_SCREEN_BANK#1 = CONIO_SCREEN_BANK#25 CONIO_SCREEN_BANK#35 CONIO_SCREEN_BANK#14 
Alias CONIO_SCREEN_TEXT#1 = CONIO_SCREEN_TEXT#29 CONIO_SCREEN_TEXT#39 CONIO_SCREEN_TEXT#14 
Alias conio_x16_init::line#1 = conio_x16_init::$9 
Alias clearline::addr#0 = clearline::$0 
Alias vera_layer_get_color::return#4 = vera_layer_get_color::return#7 
Alias clearline::color#0 = clearline::$3 
Alias clearline::color#1 = clearline::color#2 
Alias clearline::c#2 = clearline::c#3 
Alias insertup::width#0 = insertup::$0 
Alias insertup::i#2 = insertup::i#3 insertup::i#4 
Alias CONIO_SCREEN_TEXT#16 = CONIO_SCREEN_TEXT#31 CONIO_SCREEN_TEXT#41 CONIO_SCREEN_TEXT#30 
Alias insertup::width#1 = insertup::width#2 insertup::width#3 
Alias insertup::cy#1 = insertup::cy#3 insertup::cy#2 
Alias insertup::line#0 = insertup::$4 
Alias insertup::start#0 = insertup::$5 
Alias CONIO_SCREEN_TEXT#52 = CONIO_SCREEN_TEXT#62 CONIO_SCREEN_TEXT#79 
Alias gotoxy::y#2 = cscroll::$5 
Alias vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#4 
Alias CONIO_SCREEN_BANK#15 = CONIO_SCREEN_BANK#2 screenlayer::$0 CONIO_SCREEN_BANK#94 CONIO_SCREEN_BANK#89 CONIO_SCREEN_BANK#81 CONIO_SCREEN_BANK#76 CONIO_SCREEN_BANK#65 CONIO_SCREEN_BANK#54 CONIO_SCREEN_BANK#46 CONIO_SCREEN_BANK#36 CONIO_SCREEN_BANK#26 CONIO_SCREEN_BANK#3 
Alias vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#4 
Alias screenlayer::vera_layer_get_width1_layer#0 = screenlayer::vera_layer_get_width1_layer#1 
Alias CONIO_SCREEN_TEXT#104 = CONIO_SCREEN_TEXT#2 CONIO_SCREEN_TEXT#98 CONIO_SCREEN_TEXT#87 CONIO_SCREEN_TEXT#80 CONIO_SCREEN_TEXT#63 CONIO_SCREEN_TEXT#53 CONIO_SCREEN_TEXT#42 CONIO_SCREEN_TEXT#32 CONIO_SCREEN_TEXT#17 CONIO_SCREEN_TEXT#3 
Alias vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#4 
Alias vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#4 
Alias screenlayer::vera_layer_get_height1_layer#0 = screenlayer::vera_layer_get_height1_layer#1 
Alias rand::return#0 = rand::return#7 rand::return#1 
Alias rand_state#14 = rand_state#2 rand_state#3 
Alias bitmap_init::vera_layer_get_color_depth1_layer#0 = bitmap_init::vera_layer_get_color_depth1_layer#1 
Alias vera_display_get_hscale::return#2 = vera_display_get_hscale::return#4 
Alias vera_display_get_vscale::return#2 = vera_display_get_vscale::return#4 
Alias bitmap_init::x#2 = bitmap_init::x#7 
Alias bitmap_init::bitmask#10 = bitmap_init::bitmask#5 
Alias bitmap_init::bitshift#10 = bitmap_init::bitshift#5 
Alias bitmap_init::x#3 = bitmap_init::x#8 
Alias bitmap_init::bitmask#11 = bitmap_init::bitmask#6 
Alias bitmap_init::bitshift#11 = bitmap_init::bitshift#6 
Alias bitmap_init::x#4 = bitmap_init::x#9 
Alias bitmap_init::bitmask#12 = bitmap_init::bitmask#7 
Alias bitmap_init::bitshift#12 = bitmap_init::bitshift#7 
Alias bitmap_init::x#10 = bitmap_init::x#5 
Alias bitmap_init::bitmask#13 = bitmap_init::bitmask#8 
Alias bitmap_init::bitshift#13 = bitmap_init::bitshift#9 
Alias bitmap_init::bitmask#14 = bitmap_init::bitmask#15 
Alias bitmap_init::x#13 = bitmap_init::x#14 
Alias bitmap_init::x#11 = bitmap_init::x#12 
Alias bitmap_init::bitshift#15 = bitmap_init::bitshift#16 
Alias bitmap_init::yoffs#1 = bitmap_init::$21 
Alias mul16u::return#0 = mul16u::return#3 
Alias bitmap_clear::count#0 = bitmap_clear::$2 
Alias bitmap_clear::vbank#0 = bitmap_clear::$3 
Alias bitmap_plot::plotter#0 = bitmap_plot::$0 bitmap_plot::plotter#2 bitmap_plot::plotter#3 
Alias bitmap_plot::c#5 = bitmap_plot::c#8 bitmap_plot::c#6 bitmap_plot::$1 
Alias bitmap_plot::bitshift#0 = bitmap_plot::bitshift#1 
Alias bitmap_plot::x#4 = bitmap_plot::x#8 bitmap_plot::x#9 
Alias bitmap_plot::$3 = bitmap_plot::$2 
Alias bitmap_plot::c#0 = bitmap_plot::$4 bitmap_plot::c#9 bitmap_plot::c#7 
Alias bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plotter#1 bitmap_plot::vera_vram_address01_bankaddr#1 
Alias bitmap_plot::vera_vram_address01_incr#0 = bitmap_plot::vera_vram_address01_incr#1 
Alias bitmap_plot::x#5 = bitmap_plot::x#6 bitmap_plot::x#7 
Alias bitmap_line::x1#10 = bitmap_line::x1#3 bitmap_line::x1#2 bitmap_line::x1#4 bitmap_line::x1#12 bitmap_line::x1#11 bitmap_line::x1#5 bitmap_line::x1#6 bitmap_line::x1#7 bitmap_line::x1#14 bitmap_line::x1#13 bitmap_line::x1#8 bitmap_line::x1#9 
Alias bitmap_line::x0#10 = bitmap_line::x0#3 bitmap_line::x0#2 bitmap_line::x0#4 bitmap_line::x0#12 bitmap_line::x0#11 bitmap_line::x0#5 bitmap_line::x0#6 bitmap_line::x0#7 bitmap_line::x0#14 bitmap_line::x0#13 bitmap_line::x0#8 bitmap_line::x0#9 
Alias bitmap_line::y0#10 = bitmap_line::y0#2 bitmap_line::y0#14 bitmap_line::y0#3 bitmap_line::y0#4 bitmap_line::y0#5 bitmap_line::y0#6 bitmap_line::y0#7 bitmap_line::y0#8 bitmap_line::y0#9 bitmap_line::y0#11 bitmap_line::y0#12 bitmap_line::y0#13 
Alias bitmap_line::y1#10 = bitmap_line::y1#2 bitmap_line::y1#14 bitmap_line::y1#3 bitmap_line::y1#4 bitmap_line::y1#5 bitmap_line::y1#6 bitmap_line::y1#7 bitmap_line::y1#8 bitmap_line::y1#9 bitmap_line::y1#11 bitmap_line::y1#12 bitmap_line::y1#13 
Alias bitmap_line::c#10 = bitmap_line::c#15 bitmap_line::c#16 bitmap_line::c#14 bitmap_line::c#11 bitmap_line::c#2 bitmap_line::c#3 bitmap_line::c#4 bitmap_line::c#5 bitmap_line::c#13 bitmap_line::c#12 bitmap_line::c#6 bitmap_line::c#7 bitmap_line::c#8 bitmap_line::c#9 
Alias bitmap_line::xd#1 = bitmap_line::$11 bitmap_line::xd#9 bitmap_line::xd#10 bitmap_line::xd#11 bitmap_line::xd#12 bitmap_line::xd#13 bitmap_line::xd#14 
Alias bitmap_line::xd#2 = bitmap_line::$1 bitmap_line::xd#3 bitmap_line::xd#4 bitmap_line::xd#5 bitmap_line::xd#6 bitmap_line::xd#7 bitmap_line::xd#8 
Alias bitmap_line::yd#1 = bitmap_line::$7 bitmap_line::yd#7 bitmap_line::yd#8 
Alias bitmap_line::yd#2 = bitmap_line::$3 bitmap_line::yd#5 bitmap_line::yd#6 
Alias bitmap_line::yd#11 = bitmap_line::yd#3 bitmap_line::$17 bitmap_line::yd#12 
Alias bitmap_line::yd#10 = bitmap_line::yd#4 bitmap_line::$13 bitmap_line::yd#9 
Alias mul16u::a#2 = mul16u::a#3 mul16u::a#6 
Alias mul16u::mb#3 = mul16u::mb#4 mul16u::mb#5 
Alias mul16u::res#2 = mul16u::res#5 mul16u::res#4 mul16u::return#1 mul16u::res#3 mul16u::return#4 mul16u::return#2 
Alias mul16u::a#1 = mul16u::$5 
Alias mul16u::mb#1 = mul16u::$6 
Alias mul16u::res#1 = mul16u::$4 
Alias bitmap_line_xdyi::e#0 = bitmap_line_xdyi::$0 
Alias bitmap_line_xdyi::x#3 = bitmap_line_xdyi::x#4 
Alias bitmap_line_xdyi::e#3 = bitmap_line_xdyi::e#5 
Alias bitmap_line_xdyi::yd#3 = bitmap_line_xdyi::yd#4 bitmap_line_xdyi::yd#6 
Alias bitmap_line_xdyi::xd#2 = bitmap_line_xdyi::xd#4 bitmap_line_xdyi::xd#3 
Alias bitmap_line_xdyi::x1#3 = bitmap_line_xdyi::x1#4 bitmap_line_xdyi::x1#5 
Alias bitmap_line_xdyi::y#3 = bitmap_line_xdyi::y#7 bitmap_line_xdyi::y#4 
Alias bitmap_line_xdyi::c#2 = bitmap_line_xdyi::c#6 bitmap_line_xdyi::c#5 
Alias bitmap_line_xdyi::e#1 = bitmap_line_xdyi::$2 bitmap_line_xdyi::e#4 
Alias bitmap_line_xdyi::x#2 = bitmap_line_xdyi::x#7 
Alias bitmap_line_xdyi::e#2 = bitmap_line_xdyi::$5 
Alias bitmap_line_xdyd::e#0 = bitmap_line_xdyd::$0 
Alias bitmap_line_xdyd::x#3 = bitmap_line_xdyd::x#4 
Alias bitmap_line_xdyd::e#3 = bitmap_line_xdyd::e#5 
Alias bitmap_line_xdyd::yd#3 = bitmap_line_xdyd::yd#4 bitmap_line_xdyd::yd#6 
Alias bitmap_line_xdyd::xd#2 = bitmap_line_xdyd::xd#4 bitmap_line_xdyd::xd#3 
Alias bitmap_line_xdyd::x1#3 = bitmap_line_xdyd::x1#4 bitmap_line_xdyd::x1#5 
Alias bitmap_line_xdyd::y#3 = bitmap_line_xdyd::y#7 bitmap_line_xdyd::y#4 
Alias bitmap_line_xdyd::c#2 = bitmap_line_xdyd::c#6 bitmap_line_xdyd::c#5 
Alias bitmap_line_xdyd::e#1 = bitmap_line_xdyd::$2 bitmap_line_xdyd::e#4 
Alias bitmap_line_xdyd::x#2 = bitmap_line_xdyd::x#7 
Alias bitmap_line_xdyd::e#2 = bitmap_line_xdyd::$5 
Alias bitmap_line_ydxi::e#0 = bitmap_line_ydxi::$0 
Alias bitmap_line_ydxi::y#3 = bitmap_line_ydxi::y#4 
Alias bitmap_line_ydxi::e#3 = bitmap_line_ydxi::e#5 
Alias bitmap_line_ydxi::xd#3 = bitmap_line_ydxi::xd#4 bitmap_line_ydxi::xd#6 
Alias bitmap_line_ydxi::yd#2 = bitmap_line_ydxi::yd#4 bitmap_line_ydxi::yd#3 
Alias bitmap_line_ydxi::y1#3 = bitmap_line_ydxi::y1#4 bitmap_line_ydxi::y1#5 
Alias bitmap_line_ydxi::x#3 = bitmap_line_ydxi::x#7 bitmap_line_ydxi::x#4 
Alias bitmap_line_ydxi::c#2 = bitmap_line_ydxi::c#6 bitmap_line_ydxi::c#5 
Alias bitmap_line_ydxi::e#1 = bitmap_line_ydxi::$2 bitmap_line_ydxi::e#4 
Alias bitmap_line_ydxi::y#2 = bitmap_line_ydxi::y#7 
Alias bitmap_line_ydxi::e#2 = bitmap_line_ydxi::$5 
Alias bitmap_line_ydxd::e#0 = bitmap_line_ydxd::$0 
Alias bitmap_line_ydxd::y#2 = bitmap_line_ydxd::y#5 bitmap_line_ydxd::y#4 
Alias bitmap_line_ydxd::e#3 = bitmap_line_ydxd::e#5 
Alias bitmap_line_ydxd::xd#3 = bitmap_line_ydxd::xd#4 bitmap_line_ydxd::xd#6 
Alias bitmap_line_ydxd::yd#2 = bitmap_line_ydxd::yd#4 bitmap_line_ydxd::yd#3 
Alias bitmap_line_ydxd::y1#3 = bitmap_line_ydxd::y1#4 bitmap_line_ydxd::y1#5 
Alias bitmap_line_ydxd::x#3 = bitmap_line_ydxd::x#7 bitmap_line_ydxd::x#4 
Alias bitmap_line_ydxd::c#2 = bitmap_line_ydxd::c#6 bitmap_line_ydxd::c#5 
Alias bitmap_line_ydxd::e#1 = bitmap_line_ydxd::$2 bitmap_line_ydxd::e#4 
Alias bitmap_line_ydxd::y#3 = bitmap_line_ydxd::y#8 
Alias bitmap_line_ydxd::e#2 = bitmap_line_ydxd::$5 
Alias divr16u::rem#0 = divr16u::$0 divr16u::rem#6 
Alias divr16u::dividend#0 = divr16u::$6 divr16u::dividend#7 
Alias divr16u::quotient#1 = divr16u::$7 divr16u::quotient#4 
Alias divr16u::dividend#2 = divr16u::dividend#6 
Alias divr16u::quotient#6 = divr16u::quotient#7 
Alias divr16u::divisor#3 = divr16u::divisor#4 
Alias divr16u::i#5 = divr16u::i#6 
Alias divr16u::rem#1 = divr16u::$5 
Alias divr16u::rem#5 = divr16u::rem#7 
Alias divr16u::divisor#1 = divr16u::divisor#2 
Alias divr16u::i#3 = divr16u::i#4 
Alias divr16u::rem#2 = divr16u::$10 
Alias divr16u::rem#10 = divr16u::rem#8 
Alias divr16u::return#0 = divr16u::quotient#5 divr16u::quotient#8 divr16u::return#3 divr16u::return#1 
Alias rem16u#0 = rem16u#12 rem16u#1 
Alias rem16u#13 = rem16u#2 rem16u#14 rem16u#3 
Alias modr16u::return#0 = modr16u::return#6 modr16u::return#1 
Alias CONIO_SCREEN_BANK#27 = CONIO_SCREEN_BANK#47 CONIO_SCREEN_BANK#55 CONIO_SCREEN_BANK#37 
Alias CONIO_SCREEN_TEXT#33 = CONIO_SCREEN_TEXT#54 CONIO_SCREEN_TEXT#64 CONIO_SCREEN_TEXT#43 
Alias rand_state#35 = rand_state#86 rand_state#87 rand_state#85 rand_state#83 rand_state#81 rand_state#79 rand_state#77 rand_state#75 rand_state#73 rand_state#71 rand_state#69 rand_state#67 rand_state#65 rand_state#63 rand_state#61 rand_state#59 rand_state#56 rand_state#52 rand_state#50 rand_state#48 rand_state#46 rand_state#44 rand_state#42 rand_state#40 rand_state#38 
Alias rem16u#36 = rem16u#87 rem16u#88 rem16u#86 rem16u#85 rem16u#83 rem16u#81 rem16u#79 rem16u#77 rem16u#75 rem16u#73 rem16u#71 rem16u#69 rem16u#67 rem16u#65 rem16u#63 rem16u#61 rem16u#59 rem16u#56 rem16u#52 rem16u#50 rem16u#48 rem16u#46 rem16u#44 rem16u#42 rem16u#39 
Alias CONIO_SCREEN_BANK#100 = CONIO_SCREEN_BANK#4 CONIO_SCREEN_BANK#16 CONIO_SCREEN_BANK#99 CONIO_SCREEN_BANK#95 CONIO_SCREEN_BANK#90 CONIO_SCREEN_BANK#82 CONIO_SCREEN_BANK#77 CONIO_SCREEN_BANK#61 CONIO_SCREEN_BANK#83 CONIO_SCREEN_BANK#70 CONIO_SCREEN_BANK#71 CONIO_SCREEN_BANK#72 CONIO_SCREEN_BANK#73 CONIO_SCREEN_BANK#108 CONIO_SCREEN_BANK#106 CONIO_SCREEN_BANK#104 CONIO_SCREEN_BANK#102 CONIO_SCREEN_BANK#96 CONIO_SCREEN_BANK#91 CONIO_SCREEN_BANK#84 CONIO_SCREEN_BANK#69 CONIO_SCREEN_BANK#109 
Alias CONIO_SCREEN_TEXT#105 = CONIO_SCREEN_TEXT#4 CONIO_SCREEN_TEXT#18 CONIO_SCREEN_TEXT#88 CONIO_SCREEN_TEXT#81 CONIO_SCREEN_TEXT#65 CONIO_SCREEN_TEXT#55 CONIO_SCREEN_TEXT#44 CONIO_SCREEN_TEXT#26 CONIO_SCREEN_TEXT#89 CONIO_SCREEN_TEXT#73 CONIO_SCREEN_TEXT#74 CONIO_SCREEN_TEXT#75 CONIO_SCREEN_TEXT#76 CONIO_SCREEN_TEXT#119 CONIO_SCREEN_TEXT#117 CONIO_SCREEN_TEXT#115 CONIO_SCREEN_TEXT#112 CONIO_SCREEN_TEXT#109 CONIO_SCREEN_TEXT#99 CONIO_SCREEN_TEXT#90 CONIO_SCREEN_TEXT#71 CONIO_SCREEN_TEXT#113 
Alias main::textcolor1_color#0 = main::textcolor1_color#1 
Alias main::bgcolor1_color#0 = main::bgcolor1_color#1 
Alias main::vera_layer_show1_layer#0 = main::vera_layer_show1_layer#1 
Alias main::textcolor2_color#0 = main::textcolor2_color#1 
Alias kbhit::return#2 = kbhit::return#5 
Alias rand_state#23 = rand_state#30 rand_state#33 rand_state#84 rand_state#82 rand_state#80 rand_state#78 rand_state#76 rand_state#74 rand_state#72 rand_state#70 rand_state#68 rand_state#66 rand_state#64 rand_state#62 rand_state#60 rand_state#57 rand_state#53 
Alias rem16u#23 = rem16u#32 rem16u#34 rem16u#29 rem16u#84 rem16u#82 rem16u#80 rem16u#78 rem16u#76 rem16u#74 rem16u#72 rem16u#70 rem16u#68 rem16u#66 rem16u#64 rem16u#62 rem16u#60 rem16u#57 rem16u#53 
Alias CONIO_SCREEN_TEXT#100 = CONIO_SCREEN_TEXT#106 CONIO_SCREEN_TEXT#110 CONIO_SCREEN_TEXT#127 CONIO_SCREEN_TEXT#126 CONIO_SCREEN_TEXT#125 CONIO_SCREEN_TEXT#124 CONIO_SCREEN_TEXT#123 CONIO_SCREEN_TEXT#122 CONIO_SCREEN_TEXT#121 CONIO_SCREEN_TEXT#120 CONIO_SCREEN_TEXT#118 CONIO_SCREEN_TEXT#116 CONIO_SCREEN_TEXT#114 CONIO_SCREEN_TEXT#91 CONIO_SCREEN_TEXT#82 CONIO_SCREEN_TEXT#66 CONIO_SCREEN_TEXT#56 CONIO_SCREEN_TEXT#45 CONIO_SCREEN_TEXT#24 CONIO_SCREEN_TEXT#92 CONIO_SCREEN_TEXT#77 CONIO_SCREEN_TEXT#111 CONIO_SCREEN_TEXT#107 CONIO_SCREEN_TEXT#101 CONIO_SCREEN_TEXT#93 CONIO_SCREEN_TEXT#72 CONIO_SCREEN_TEXT#67 
Alias CONIO_SCREEN_BANK#101 = CONIO_SCREEN_BANK#105 CONIO_SCREEN_BANK#107 CONIO_SCREEN_BANK#120 CONIO_SCREEN_BANK#119 CONIO_SCREEN_BANK#118 CONIO_SCREEN_BANK#117 CONIO_SCREEN_BANK#116 CONIO_SCREEN_BANK#115 CONIO_SCREEN_BANK#114 CONIO_SCREEN_BANK#113 CONIO_SCREEN_BANK#112 CONIO_SCREEN_BANK#111 CONIO_SCREEN_BANK#110 CONIO_SCREEN_BANK#103 CONIO_SCREEN_BANK#97 CONIO_SCREEN_BANK#92 CONIO_SCREEN_BANK#85 CONIO_SCREEN_BANK#78 CONIO_SCREEN_BANK#60 CONIO_SCREEN_BANK#86 CONIO_SCREEN_BANK#74 CONIO_SCREEN_BANK#98 CONIO_SCREEN_BANK#93 CONIO_SCREEN_BANK#87 CONIO_SCREEN_BANK#79 CONIO_SCREEN_BANK#66 CONIO_SCREEN_BANK#56 
Alias rand::return#2 = rand::return#8 
Alias rand_state#15 = rand_state#4 rand_state#24 
Alias modr16u::dividend#0 = main::$32 
Alias modr16u::return#2 = modr16u::return#7 
Alias rem16u#15 = rem16u#4 rem16u#24 
Alias rand::return#3 = rand::return#9 
Alias rand_state#16 = rand_state#5 rand_state#25 
Alias modr16u::dividend#1 = main::$34 
Alias modr16u::return#3 = modr16u::return#8 
Alias rem16u#16 = rem16u#5 rem16u#25 
Alias rand::return#10 = rand::return#4 
Alias rand_state#17 = rand_state#6 rand_state#26 
Alias modr16u::dividend#2 = main::$36 
Alias modr16u::return#4 = modr16u::return#9 
Alias rem16u#17 = rem16u#6 rem16u#26 
Alias rand::return#11 = rand::return#5 
Alias rand_state#18 = rand_state#7 rand_state#27 
Alias modr16u::dividend#3 = main::$38 
Alias modr16u::return#10 = modr16u::return#5 
Alias rem16u#18 = rem16u#7 rem16u#40 rem16u#37 
Alias rand::return#12 = rand::return#6 
Alias rand_state#19 = rand_state#8 rand_state#36 
Alias bitmap_line::x0#0 = main::$33 
Alias bitmap_line::x1#0 = main::$35 
Alias bitmap_line::y0#0 = main::$37 
Alias bitmap_line::y1#0 = main::$39 
Alias bitmap_line::c#0 = main::$41 
Alias main::textcolor3_color#0 = main::textcolor3_color#1 
Alias main::bgcolor2_color#0 = main::bgcolor2_color#1 
Alias main::textcolor4_color#0 = main::textcolor4_color#1 
Alias kbhit::return#3 = kbhit::return#6 
Alias main::x#3 = main::x#5 main::x#6 main::x#4 
Alias main::color#2 = main::color#4 main::color#5 main::color#3 
Alias CONIO_SCREEN_BANK#28 = CONIO_SCREEN_BANK#38 CONIO_SCREEN_BANK#48 CONIO_SCREEN_BANK#67 CONIO_SCREEN_BANK#57 CONIO_SCREEN_BANK#58 
Alias CONIO_SCREEN_TEXT#34 = CONIO_SCREEN_TEXT#46 CONIO_SCREEN_TEXT#57 CONIO_SCREEN_TEXT#83 CONIO_SCREEN_TEXT#68 CONIO_SCREEN_TEXT#69 
Alias rand_state#20 = rand_state#49 rand_state#51 rand_state#58 rand_state#54 rand_state#47 rand_state#45 rand_state#43 rand_state#41 rand_state#39 rand_state#37 rand_state#34 rand_state#31 rand_state#28 rand_state#55 rand_state#9 
Alias rem16u#19 = rem16u#49 rem16u#51 rem16u#58 rem16u#54 rem16u#47 rem16u#45 rem16u#43 rem16u#41 rem16u#38 rem16u#35 rem16u#33 rem16u#30 rem16u#27 rem16u#55 rem16u#8 
Alias CONIO_SCREEN_BANK#17 = CONIO_SCREEN_BANK#5 CONIO_SCREEN_BANK#88 CONIO_SCREEN_BANK#80 CONIO_SCREEN_BANK#68 CONIO_SCREEN_BANK#59 CONIO_SCREEN_BANK#49 CONIO_SCREEN_BANK#39 CONIO_SCREEN_BANK#29 CONIO_SCREEN_BANK#18 CONIO_SCREEN_BANK#6 
Alias CONIO_SCREEN_TEXT#19 = CONIO_SCREEN_TEXT#5 CONIO_SCREEN_TEXT#94 CONIO_SCREEN_TEXT#84 CONIO_SCREEN_TEXT#70 CONIO_SCREEN_TEXT#58 CONIO_SCREEN_TEXT#47 CONIO_SCREEN_TEXT#25 CONIO_SCREEN_TEXT#35 CONIO_SCREEN_TEXT#20 CONIO_SCREEN_TEXT#6 
Alias main::textcolor5_color#0 = main::textcolor5_color#1 
Alias main::bgcolor3_color#0 = main::bgcolor3_color#1 
Alias main::color#1 = main::color#6 
Alias rand_state#10 = rand_state#32 rand_state#29 
Alias rem16u#28 = rem16u#31 rem16u#9 
Alias CONIO_SCREEN_BANK#19 = CONIO_SCREEN_BANK#8 CONIO_SCREEN_BANK#30 
Alias CONIO_SCREEN_TEXT#21 = CONIO_SCREEN_TEXT#8 CONIO_SCREEN_TEXT#36 
Alias CONIO_SCREEN_BANK#10 = CONIO_SCREEN_BANK#9 CONIO_SCREEN_BANK#20 CONIO_SCREEN_BANK#21 
Alias CONIO_SCREEN_TEXT#10 = CONIO_SCREEN_TEXT#9 CONIO_SCREEN_TEXT#22 CONIO_SCREEN_TEXT#23 
Alias rand_state#11 = rand_state#21 rand_state#22 rand_state#12 
Alias rem16u#10 = rem16u#20 rem16u#21 rem16u#11 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#4 kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#1 screenlayer::vera_layer_get_width1_return#3 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#1 screenlayer::vera_layer_get_height1_return#3 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#2 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::vera_layer_get_color_depth1_return#3 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Alias gotoxy::x#10 = gotoxy::x#7 
Alias gotoxy::y#10 = gotoxy::y#8 
Alias vera_layer_mode_tile::mapwidth#10 = vera_layer_mode_tile::mapwidth#2 
Alias vera_layer_mode_tile::layer#10 = vera_layer_mode_tile::layer#22 vera_layer_mode_tile::layer#14 vera_layer_mode_tile::layer#34 vera_layer_mode_tile::layer#19 vera_layer_mode_tile::layer#9 
Alias vera_layer_mode_tile::mapheight#10 = vera_layer_mode_tile::mapheight#14 vera_layer_mode_tile::mapheight#2 
Alias vera_layer_mode_tile::mapbase_address#10 = vera_layer_mode_tile::mapbase_address#13 vera_layer_mode_tile::mapbase_address#21 vera_layer_mode_tile::mapbase_address#3 
Alias vera_layer_mode_tile::tilebase_address#10 = vera_layer_mode_tile::tilebase_address#14 vera_layer_mode_tile::tilebase_address#22 vera_layer_mode_tile::tilebase_address#3 
Alias vera_layer_mode_tile::tilewidth#10 = vera_layer_mode_tile::tilewidth#14 vera_layer_mode_tile::tilewidth#22 vera_layer_mode_tile::tilewidth#2 
Alias vera_layer_mode_tile::tileheight#10 = vera_layer_mode_tile::tileheight#18 vera_layer_mode_tile::tileheight#26 vera_layer_mode_tile::tileheight#4 vera_layer_mode_tile::tileheight#2 
Alias vera_layer_mode_bitmap::bitmap_address#10 = vera_layer_mode_bitmap::bitmap_address#2 
Alias vera_layer_mode_bitmap::layer#1 = vera_layer_mode_bitmap::layer#12 vera_layer_mode_bitmap::layer#2 
Alias vera_layer_mode_bitmap::mapwidth#1 = vera_layer_mode_bitmap::mapwidth#10 
Alias vera_layer_mode_bitmap::config#11 = vera_layer_mode_bitmap::config#15 
Alias CONIO_SCREEN_BANK#0 = CONIO_SCREEN_BANK#1 
Alias CONIO_SCREEN_TEXT#0 = CONIO_SCREEN_TEXT#1 
Alias bitmap_init::x#10 = bitmap_init::x#3 bitmap_init::x#2 bitmap_init::x#4 bitmap_init::x#13 bitmap_init::x#11 bitmap_init::x#6 
Alias bitmap_init::bitshift#13 = bitmap_init::bitshift#8 
Alias bitmap_init::bitmask#13 = bitmap_init::bitmask#14 bitmap_init::bitmask#9 
Alias bitmap_init::bitshift#14 = bitmap_init::bitshift#15 
Alias bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plotter#0 
Alias bitmap_plot::x#4 = bitmap_plot::x#5 
Alias mul16u::a#2 = mul16u::a#4 
Alias mul16u::mb#2 = mul16u::mb#3 
Alias bitmap_line_xdyi::x1#2 = bitmap_line_xdyi::x1#3 
Alias bitmap_line_xdyi::x#2 = bitmap_line_xdyi::x#5 
Alias bitmap_line_xdyi::c#2 = bitmap_line_xdyi::c#4 
Alias bitmap_line_xdyi::yd#3 = bitmap_line_xdyi::yd#5 
Alias bitmap_line_xdyi::xd#2 = bitmap_line_xdyi::xd#6 
Alias bitmap_line_xdyd::x1#2 = bitmap_line_xdyd::x1#3 
Alias bitmap_line_xdyd::x#2 = bitmap_line_xdyd::x#5 
Alias bitmap_line_xdyd::c#2 = bitmap_line_xdyd::c#4 
Alias bitmap_line_xdyd::yd#3 = bitmap_line_xdyd::yd#5 
Alias bitmap_line_xdyd::xd#2 = bitmap_line_xdyd::xd#6 
Alias bitmap_line_ydxi::y1#2 = bitmap_line_ydxi::y1#3 
Alias bitmap_line_ydxi::y#2 = bitmap_line_ydxi::y#5 
Alias bitmap_line_ydxi::c#2 = bitmap_line_ydxi::c#4 
Alias bitmap_line_ydxi::xd#3 = bitmap_line_ydxi::xd#5 
Alias bitmap_line_ydxi::yd#2 = bitmap_line_ydxi::yd#6 
Alias bitmap_line_ydxd::y1#2 = bitmap_line_ydxd::y1#3 
Alias bitmap_line_ydxd::y#3 = bitmap_line_ydxd::y#6 
Alias bitmap_line_ydxd::c#2 = bitmap_line_ydxd::c#4 
Alias bitmap_line_ydxd::xd#3 = bitmap_line_ydxd::xd#5 
Alias bitmap_line_ydxd::yd#2 = bitmap_line_ydxd::yd#6 
Alias divr16u::dividend#2 = divr16u::dividend#3 
Alias divr16u::quotient#3 = divr16u::quotient#6 
Alias divr16u::divisor#1 = divr16u::divisor#3 divr16u::divisor#6 
Alias divr16u::i#2 = divr16u::i#3 divr16u::i#5 
Alias divr16u::dividend#0 = divr16u::dividend#5 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#4 kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#1 screenlayer::vera_layer_get_width1_return#3 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#1 screenlayer::vera_layer_get_height1_return#3 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#2 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::vera_layer_get_color_depth1_return#3 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Identical Phi Values memcpy_in_vram::num#2 memcpy_in_vram::num#3
Identical Phi Values memset_vram::vdest#1 memset_vram::vdest#0
Identical Phi Values memset_vram::vbank#1 memset_vram::vbank#0
Identical Phi Values memset_vram::num#2 memset_vram::num#0
Identical Phi Values memset_vram::data#3 memset_vram::data#0
Identical Phi Values memset_vram::num#1 memset_vram::num#2
Identical Phi Values memset_vram::data#1 memset_vram::data#3
Identical Phi Values clrscr::color#1 clrscr::color#3
Identical Phi Values clrscr::line_text#3 clrscr::line_text#2
Identical Phi Values clrscr::l#3 clrscr::l#2
Identical Phi Values CONIO_SCREEN_BANK#31 CONIO_SCREEN_BANK#11
Identical Phi Values screensize::x#1 screensize::x#0
Identical Phi Values screensize::y#1 screensize::y#0
Identical Phi Values CONIO_SCREEN_TEXT#102 CONIO_SCREEN_TEXT#37
Identical Phi Values cputc::c#1 cputc::c#0
Identical Phi Values CONIO_SCREEN_BANK#12 CONIO_SCREEN_BANK#42
Identical Phi Values CONIO_SCREEN_TEXT#86 CONIO_SCREEN_TEXT#102
Identical Phi Values CONIO_SCREEN_TEXT#37 CONIO_SCREEN_TEXT#59
Identical Phi Values CONIO_SCREEN_BANK#42 CONIO_SCREEN_BANK#62
Identical Phi Values kbhit::return#4 kbhit::return#0
Identical Phi Values vera_display_get_hscale::scale#3 vera_display_get_hscale::scale#0
Identical Phi Values vera_display_get_vscale::scale#3 vera_display_get_vscale::scale#0
Identical Phi Values vera_layer_get_mapbase_bank::layer#1 vera_layer_get_mapbase_bank::layer#0
Identical Phi Values vera_layer_get_mapbase_offset::layer#1 vera_layer_get_mapbase_offset::layer#0
Identical Phi Values vera_layer_get_textcolor::layer#1 vera_layer_get_textcolor::layer#0
Identical Phi Values vera_layer_get_backcolor::layer#1 vera_layer_get_backcolor::layer#0
Identical Phi Values vera_layer_get_rowshift::layer#1 vera_layer_get_rowshift::layer#0
Identical Phi Values vera_layer_get_rowskip::layer#1 vera_layer_get_rowskip::layer#0
Identical Phi Values vera_layer_mode_text::layer#1 vera_layer_mode_text::layer#0
Identical Phi Values vera_layer_mode_text::mapbase_address#1 vera_layer_mode_text::mapbase_address#0
Identical Phi Values vera_layer_mode_text::tilebase_address#1 vera_layer_mode_text::tilebase_address#0
Identical Phi Values vera_layer_mode_text::mapwidth#1 vera_layer_mode_text::mapwidth#0
Identical Phi Values vera_layer_mode_text::mapheight#1 vera_layer_mode_text::mapheight#0
Identical Phi Values vera_layer_mode_text::tilewidth#1 vera_layer_mode_text::tilewidth#0
Identical Phi Values vera_layer_mode_text::tileheight#1 vera_layer_mode_text::tileheight#0
Identical Phi Values vera_layer_mode_text::color_mode#1 vera_layer_mode_text::color_mode#0
Identical Phi Values vera_layer_mode_bitmap::color_depth#1 vera_layer_mode_bitmap::color_depth#0
Identical Phi Values vera_layer_mode_bitmap::bitmap_address#10 vera_layer_mode_bitmap::bitmap_address#1
Identical Phi Values vera_layer_mode_bitmap::layer#1 vera_layer_mode_bitmap::layer#0
Identical Phi Values vera_layer_mode_bitmap::mapwidth#1 vera_layer_mode_bitmap::mapwidth#0
Identical Phi Values CONIO_SCREEN_BANK#24 CONIO_SCREEN_BANK#7
Identical Phi Values CONIO_SCREEN_TEXT#28 CONIO_SCREEN_TEXT#7
Identical Phi Values CONIO_SCREEN_BANK#0 CONIO_SCREEN_BANK#15
Identical Phi Values CONIO_SCREEN_TEXT#0 CONIO_SCREEN_TEXT#104
Identical Phi Values CONIO_SCREEN_TEXT#15 CONIO_SCREEN_TEXT#16
Identical Phi Values clearline::color#1 clearline::color#0
Identical Phi Values CONIO_SCREEN_TEXT#40 CONIO_SCREEN_TEXT#52
Identical Phi Values insertup::cy#1 insertup::cy#0
Identical Phi Values CONIO_SCREEN_TEXT#16 CONIO_SCREEN_TEXT#40
Identical Phi Values insertup::width#1 insertup::width#0
Identical Phi Values CONIO_SCREEN_TEXT#52 CONIO_SCREEN_TEXT#86
Identical Phi Values screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#0
Identical Phi Values screenlayer::vera_layer_get_width1_return#3 screenlayer::vera_layer_get_width1_return#1
Identical Phi Values screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#0
Identical Phi Values screenlayer::vera_layer_get_height1_return#3 screenlayer::vera_layer_get_height1_return#1
Identical Phi Values bitmap_init::address#1 bitmap_init::address#0
Identical Phi Values bitmap_init::layer#1 bitmap_init::layer#0
Identical Phi Values bitmap_init::vera_layer_get_color_depth1_return#2 bitmap_init::vera_layer_get_color_depth1_return#0
Identical Phi Values bitmap_init::vera_layer_get_color_depth1_return#3 bitmap_init::vera_layer_get_color_depth1_return#1
Identical Phi Values bitmap_init::hdelta#1 bitmap_init::hdelta#0
Identical Phi Values mul16u::b#1 mul16u::b#0
Identical Phi Values mul16u::a#5 mul16u::a#0
Identical Phi Values bitmap_line_xdyi::c#2 bitmap_line_xdyi::c#3
Identical Phi Values bitmap_line_xdyi::yd#3 bitmap_line_xdyi::yd#2
Identical Phi Values bitmap_line_xdyi::xd#2 bitmap_line_xdyi::xd#5
Identical Phi Values bitmap_line_xdyi::x1#2 bitmap_line_xdyi::x1#6
Identical Phi Values bitmap_line_xdyd::c#2 bitmap_line_xdyd::c#3
Identical Phi Values bitmap_line_xdyd::yd#3 bitmap_line_xdyd::yd#2
Identical Phi Values bitmap_line_xdyd::xd#2 bitmap_line_xdyd::xd#5
Identical Phi Values bitmap_line_xdyd::x1#2 bitmap_line_xdyd::x1#6
Identical Phi Values bitmap_line_ydxi::c#2 bitmap_line_ydxi::c#3
Identical Phi Values bitmap_line_ydxi::xd#3 bitmap_line_ydxi::xd#2
Identical Phi Values bitmap_line_ydxi::yd#2 bitmap_line_ydxi::yd#5
Identical Phi Values bitmap_line_ydxi::y1#2 bitmap_line_ydxi::y1#6
Identical Phi Values bitmap_line_ydxd::c#2 bitmap_line_ydxd::c#3
Identical Phi Values bitmap_line_ydxd::xd#3 bitmap_line_ydxd::xd#2
Identical Phi Values bitmap_line_ydxd::yd#2 bitmap_line_ydxd::yd#5
Identical Phi Values bitmap_line_ydxd::y1#2 bitmap_line_ydxd::y1#6
Identical Phi Values divr16u::rem#9 divr16u::rem#3
Identical Phi Values divr16u::dividend#4 divr16u::dividend#1
Identical Phi Values divr16u::divisor#5 divr16u::divisor#0
Identical Phi Values divr16u::divisor#1 divr16u::divisor#5
Identical Phi Values rem16u#13 rem16u#0
Identical Phi Values CONIO_SCREEN_BANK#27 CONIO_SCREEN_BANK#19
Identical Phi Values CONIO_SCREEN_TEXT#33 CONIO_SCREEN_TEXT#21
Identical Phi Values rand_state#35 rand_state#10
Identical Phi Values rem16u#36 rem16u#28
Identical Phi Values CONIO_SCREEN_BANK#100 CONIO_SCREEN_BANK#15
Identical Phi Values CONIO_SCREEN_TEXT#105 CONIO_SCREEN_TEXT#104
Identical Phi Values CONIO_SCREEN_TEXT#100 CONIO_SCREEN_TEXT#105
Identical Phi Values CONIO_SCREEN_BANK#101 CONIO_SCREEN_BANK#100
Identical Phi Values rand_state#15 rand_state#14
Identical Phi Values rem16u#15 rem16u#13
Identical Phi Values rand_state#16 rand_state#14
Identical Phi Values rem16u#16 rem16u#13
Identical Phi Values rand_state#17 rand_state#14
Identical Phi Values rem16u#17 rem16u#13
Identical Phi Values rand_state#18 rand_state#14
Identical Phi Values rem16u#18 rem16u#13
Identical Phi Values rand_state#19 rand_state#14
Identical Phi Values CONIO_SCREEN_BANK#28 CONIO_SCREEN_BANK#101
Identical Phi Values CONIO_SCREEN_TEXT#34 CONIO_SCREEN_TEXT#100
Identical Phi Values rand_state#20 rand_state#23
Identical Phi Values rem16u#19 rem16u#23
Identical Phi Values CONIO_SCREEN_BANK#17 CONIO_SCREEN_BANK#15
Identical Phi Values CONIO_SCREEN_TEXT#19 CONIO_SCREEN_TEXT#104
Identical Phi Values CONIO_SCREEN_BANK#19 CONIO_SCREEN_BANK#0
Identical Phi Values CONIO_SCREEN_TEXT#21 CONIO_SCREEN_TEXT#0
Identical Phi Values CONIO_SCREEN_BANK#10 CONIO_SCREEN_BANK#17
Identical Phi Values CONIO_SCREEN_TEXT#10 CONIO_SCREEN_TEXT#19
Identical Phi Values rand_state#11 rand_state#20
Identical Phi Values rem16u#10 rem16u#19
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values CONIO_SCREEN_TEXT#11 CONIO_SCREEN_TEXT#104
Identical Phi Values CONIO_SCREEN_BANK#32 CONIO_SCREEN_BANK#15
Identical Phi Values CONIO_SCREEN_BANK#11 CONIO_SCREEN_BANK#32
Identical Phi Values clrscr::color#3 clrscr::color#0
Identical Phi Values CONIO_SCREEN_TEXT#59 CONIO_SCREEN_TEXT#104
Identical Phi Values CONIO_SCREEN_BANK#62 CONIO_SCREEN_BANK#15
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memcpy_in_vram::$6 [18] if(memcpy_in_vram::i#2<memcpy_in_vram::num#3) goto memcpy_in_vram::@2
Simple Condition memset_vram::$3 [33] if(memset_vram::i#2<memset_vram::num#0) goto memset_vram::@2
Simple Condition clrscr::$4 [52] if(clrscr::l#2<conio_height) goto clrscr::@2
Simple Condition clrscr::$8 [67] if(clrscr::c#2<conio_width) goto clrscr::@5
Simple Condition gotoxy::$1 [76] if(gotoxy::y#7<=conio_screen_height) goto gotoxy::@1
Simple Condition gotoxy::$3 [79] if(gotoxy::x#10<conio_screen_width) goto gotoxy::@2
Simple Condition cputc::$3 [108] if(cputc::c#0=='
') goto cputc::@1
Simple Condition cputc::$17 [122] if(0!=cputc::scroll_enable#0) goto cputc::@5
Simple Condition cputc::$12 [124] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return
Simple Condition cputc::$9 [127] if(cputc::$16!=conio_width) goto cputc::@return
Simple Condition cputs::$2 [147] if(0!=cputs::c#1) goto cputs::@2
Simple Condition vera_display_get_hscale::$1 [161] if(*VERA_DC_HSCALE!=vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]) goto vera_display_get_hscale::@2
Simple Condition vera_display_get_hscale::$2 [164] if(vera_display_get_hscale::s#1!=rangelast(1,3)) goto vera_display_get_hscale::@1
Simple Condition vera_display_get_vscale::$1 [171] if(*VERA_DC_VSCALE!=vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]) goto vera_display_get_vscale::@2
Simple Condition vera_display_get_vscale::$2 [174] if(vera_display_get_vscale::s#1!=rangelast(1,3)) goto vera_display_get_vscale::@1
Simple Condition vera_layer_get_color::$4 [224] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1
Simple Condition conio_x16_init::$8 [406] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1
Simple Condition clearline::$4 [429] if(clearline::c#2<conio_screen_width) goto clearline::@2
Simple Condition insertup::$2 [441] if(insertup::i#2<=insertup::cy#0) goto insertup::@2
Simple Condition cscroll::$1 [459] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return
Simple Condition cscroll::$7 [461] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4
Simple Condition cscroll::$3 [467] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return
Simple Condition bitmap_init::$6 [550] if(__bitmap_color_depth!=0) goto bitmap_init::@2
Simple Condition bitmap_init::$9 [553] if(__bitmap_color_depth!=1) goto bitmap_init::@3
Simple Condition bitmap_init::$12 [563] if(__bitmap_color_depth!=2) goto bitmap_init::@4
Simple Condition bitmap_init::$15 [573] if(__bitmap_color_depth!=3) goto bitmap_init::@5
Simple Condition bitmap_init::$17 [582] if(bitmap_init::bitshift#13>=0) goto bitmap_init::@6
Simple Condition bitmap_init::$19 [589] if(bitmap_init::bitmask#13!=0) goto bitmap_init::@7
Simple Condition bitmap_init::$20 [594] if(bitmap_init::x#1!=rangelast(0,$27f)) goto bitmap_init::@1
Simple Condition bitmap_init::$22 [608] if(bitmap_init::y#1!=rangelast(0,$1df)) goto bitmap_init::@15
Simple Condition bitmap_plot::$11 [638] if(0!=bitmap_plot::bitshift#0) goto bitmap_plot::@1
Simple Condition bitmap_line::$0 [659] if(bitmap_line::x0#10<bitmap_line::x1#10) goto bitmap_line::@1
Simple Condition bitmap_line::$12 [662] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@11
Simple Condition bitmap_line::$2 [665] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@7
Simple Condition bitmap_line::$8 [668] if(bitmap_line::yd#1<bitmap_line::xd#2) goto bitmap_line::@9
Simple Condition bitmap_line::$4 [671] if(bitmap_line::yd#2<bitmap_line::xd#2) goto bitmap_line::@8
Simple Condition bitmap_line::$18 [702] if(bitmap_line::yd#11<bitmap_line::xd#1) goto bitmap_line::@13
Simple Condition bitmap_line::$14 [705] if(bitmap_line::yd#10<bitmap_line::xd#1) goto bitmap_line::@12
Simple Condition mul16u::$0 [740] if(mul16u::a#2!=0) goto mul16u::@2
Simple Condition mul16u::$3 [743] if(mul16u::$1==0) goto mul16u::@4
Simple Condition bitmap_line_xdyi::$4 [759] if(bitmap_line_xdyi::xd#5>=bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2
Simple Condition bitmap_line_xdyi::$7 [763] if(bitmap_line_xdyi::x#2!=bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1
Simple Condition bitmap_line_xdyd::$4 [777] if(bitmap_line_xdyd::xd#5>=bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2
Simple Condition bitmap_line_xdyd::$7 [781] if(bitmap_line_xdyd::x#2!=bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1
Simple Condition bitmap_line_ydxi::$4 [795] if(bitmap_line_ydxi::yd#5>=bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2
Simple Condition bitmap_line_ydxi::$7 [799] if(bitmap_line_ydxi::y#2!=bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1
Simple Condition bitmap_line_ydxd::$4 [813] if(bitmap_line_ydxd::yd#5>=bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2
Simple Condition bitmap_line_ydxd::$7 [817] if(bitmap_line_ydxd::y#3!=bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1
Simple Condition divr16u::$4 [829] if(divr16u::$2==0) goto divr16u::@2
Simple Condition divr16u::$9 [834] if(divr16u::rem#5<divr16u::divisor#0) goto divr16u::@3
Simple Condition divr16u::$11 [839] if(divr16u::i#1!=rangelast(0,$f)) goto divr16u::@1
Simple Condition main::$31 [922] if(0==main::$30) goto main::@2
Simple Condition main::$44 [1002] if(0==main::$43) goto main::@5
Simple Condition main::$47 [1012] if(main::x#1<=$13f) goto main::@4
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [245] if(vera_layer_mode_tile::color_depth#2!=8) goto vera_layer_mode_tile::@8
Negating conditional jump and destination [263] if(vera_layer_mode_tile::mapwidth#10!=$100) goto vera_layer_mode_tile::@16
Negating conditional jump and destination [275] if(vera_layer_mode_tile::mapheight#10!=$100) goto vera_layer_mode_tile::@24
Negating conditional jump and destination [305] if(vera_layer_mode_tile::tilewidth#10!=$10) goto vera_layer_mode_tile::@28
Negating conditional jump and destination [310] if(vera_layer_mode_tile::tileheight#10!=$10) goto vera_layer_mode_tile::@32
Negating conditional jump and destination [344] if(vera_layer_mode_bitmap::color_depth#0!=8) goto vera_layer_mode_bitmap::@8
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [860] memcpy_in_vram::num#1 = (unumber)$100*8
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memcpy_in_vram::i#0 = 0
Constant memset_vram::i#0 = 0
Constant clrscr::l#0 = 0
Constant clrscr::c#0 = 0
Constant gotoxy::y#0 = 0
Constant gotoxy::x#0 = 0
Constant cputs::c#0 = 0
Constant vera_display_get_hscale::scale#0 = 0
Constant vera_display_get_hscale::s#0 = 1
Constant vera_display_get_vscale::scale#0 = 0
Constant vera_display_get_vscale::s#0 = 1
Constant vera_layer_mode_tile::config#0 = 0
Constant vera_layer_mode_tile::color_depth#0 = 1
Constant vera_layer_set_text_color_mode::color_mode#0 = VERA_LAYER_CONFIG_16C
Constant vera_layer_set_text_color_mode::color_mode#1 = VERA_LAYER_CONFIG_256C
Constant vera_layer_mode_bitmap::config#0 = 0
Constant vera_layer_mode_text::layer#0 = 1
Constant vera_layer_mode_text::mapbase_address#0 = 0
Constant vera_layer_mode_text::tilebase_address#0 = $f800
Constant vera_layer_mode_text::mapwidth#0 = $80
Constant vera_layer_mode_text::mapheight#0 = $40
Constant vera_layer_mode_text::tilewidth#0 = 8
Constant vera_layer_mode_text::tileheight#0 = 8
Constant vera_layer_mode_text::color_mode#0 = $10
Constant screensize::x#0 = &conio_screen_width
Constant screensize::y#0 = &conio_screen_height
Constant screenlayer::layer#0 = 1
Constant vera_layer_set_textcolor::layer#0 = 1
Constant vera_layer_set_textcolor::color#0 = WHITE
Constant vera_layer_set_backcolor::layer#0 = 1
Constant vera_layer_set_backcolor::color#0 = BLUE
Constant vera_layer_set_mapbase::layer#1 = 0
Constant vera_layer_set_mapbase::mapbase#1 = $20
Constant vera_layer_set_mapbase::layer#2 = 1
Constant vera_layer_set_mapbase::mapbase#2 = 0
Constant gotoxy::x#1 = 0
Constant clearline::c#0 = 0
Constant insertup::i#0 = 1
Constant memcpy_in_vram::dest_bank#0 = 0
Constant memcpy_in_vram::dest_increment#0 = VERA_INC_1
Constant memcpy_in_vram::src_bank#0 = 0
Constant memcpy_in_vram::src_increment#0 = VERA_INC_1
Constant gotoxy::x#2 = 0
Constant bitmap_init::x#0 = 0
Constant bitmap_init::y#0 = 0
Constant memset_vram::data#0 = 0
Constant bitmap_plot::vera_vram_address01_incr#0 = VERA_INC_0
Constant bitmap_line::xd#0 = 0
Constant bitmap_line::yd#0 = 0
Constant mul16u::res#0 = 0
Constant divr16u::quotient#0 = 0
Constant divr16u::i#0 = 0
Constant memcpy_in_vram::dest_bank#1 = 1
Constant memcpy_in_vram::dest#1 = (void*)(byte*) 61440
Constant memcpy_in_vram::dest_increment#1 = VERA_INC_1
Constant memcpy_in_vram::src_bank#1 = 0
Constant memcpy_in_vram::src#1 = (void*)(byte*) 63488
Constant memcpy_in_vram::src_increment#1 = VERA_INC_1
Constant memcpy_in_vram::num#1 = (unumber)$100*8
Constant vera_layer_mode_tile::layer#1 = 1
Constant vera_layer_mode_tile::mapbase_address#2 = $14000
Constant vera_layer_mode_tile::tilebase_address#2 = $1f000
Constant vera_layer_mode_tile::mapwidth#1 = $80
Constant vera_layer_mode_tile::mapheight#1 = $40
Constant vera_layer_mode_tile::tilewidth#1 = 8
Constant vera_layer_mode_tile::tileheight#1 = 8
Constant vera_layer_mode_tile::color_depth#1 = 1
Constant vera_layer_mode_bitmap::layer#0 = 0
Constant vera_layer_mode_bitmap::bitmap_address#1 = 0
Constant vera_layer_mode_bitmap::mapwidth#0 = $140
Constant vera_layer_mode_bitmap::color_depth#0 = 8
Constant screenlayer::layer#1 = 1
Constant main::textcolor1_color#0 = WHITE
Constant main::bgcolor1_color#0 = BLACK
Constant gotoxy::x#3 = 0
Constant gotoxy::y#3 = $19
Constant cputs::s#1 = main::s
Constant cputs::s#2 = main::s1
Constant cputs::s#3 = main::s2
Constant cputs::s#4 = main::s3
Constant main::vera_layer_show1_layer#0 = 0
Constant bitmap_init::layer#0 = 0
Constant bitmap_init::address#0 = 0
Constant gotoxy::x#4 = 0
Constant gotoxy::y#4 = $1d
Constant main::textcolor2_color#0 = YELLOW
Constant cputs::s#5 = main::s4
Constant modr16u::divisor#0 = $140
Constant modr16u::rem#0 = 0
Constant modr16u::divisor#1 = $140
Constant modr16u::rem#1 = 0
Constant modr16u::divisor#2 = $c8
Constant modr16u::rem#2 = 0
Constant modr16u::divisor#3 = $c8
Constant modr16u::rem#3 = 0
Constant main::textcolor3_color#0 = WHITE
Constant main::bgcolor2_color#0 = BLACK
Constant gotoxy::x#5 = 0
Constant gotoxy::y#5 = $1a
Constant cputs::s#6 = main::s5
Constant gotoxy::x#6 = 0
Constant gotoxy::y#6 = $1d
Constant main::textcolor4_color#0 = YELLOW
Constant cputs::s#7 = main::s6
Constant main::x#0 = 0
Constant main::color#0 = 0
Constant bitmap_line::y0#1 = 0
Constant bitmap_line::y1#1 = $c7
Constant screenlayer::layer#2 = 1
Constant main::textcolor5_color#0 = WHITE
Constant main::bgcolor3_color#0 = BLUE
Constant main::x#2 = 0
Constant CONIO_SCREEN_TEXT#7 = DEFAULT_SCREEN
Constant CONIO_SCREEN_BANK#7 = 0
Constant rand_state#10 = 1
Constant rem16u#28 = 0
Successful SSA optimization Pass2ConstantIdentification
Constant vera_layer_mode_tile::layer#0 = vera_layer_mode_text::layer#0
Constant vera_layer_mode_tile::mapbase_address#1 = vera_layer_mode_text::mapbase_address#0
Constant vera_layer_mode_tile::tilebase_address#1 = vera_layer_mode_text::tilebase_address#0
Constant vera_layer_mode_tile::mapwidth#0 = vera_layer_mode_text::mapwidth#0
Constant vera_layer_mode_tile::mapheight#0 = vera_layer_mode_text::mapheight#0
Constant vera_layer_mode_tile::tilewidth#0 = vera_layer_mode_text::tilewidth#0
Constant vera_layer_mode_tile::tileheight#0 = vera_layer_mode_text::tileheight#0
Constant vera_layer_set_text_color_mode::layer#0 = vera_layer_mode_text::layer#0
Constant vera_layer_set_text_color_mode::layer#1 = vera_layer_mode_text::layer#0
Constant vera_layer_set_config::layer#1 = vera_layer_mode_bitmap::layer#0
Constant vera_layer_set_tilebase::layer#1 = vera_layer_mode_bitmap::layer#0
Constant vera_layer_set_textcolor::color#1 = main::textcolor1_color#0
Constant vera_layer_set_backcolor::color#1 = main::bgcolor1_color#0
Constant vera_layer_set_textcolor::color#2 = main::textcolor2_color#0
Constant vera_layer_set_textcolor::color#3 = main::textcolor3_color#0
Constant vera_layer_set_backcolor::color#2 = main::bgcolor2_color#0
Constant vera_layer_set_textcolor::color#4 = main::textcolor4_color#0
Constant vera_layer_set_textcolor::color#5 = main::textcolor5_color#0
Constant vera_layer_set_backcolor::color#3 = main::bgcolor3_color#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [327] if(vera_layer_mode_text::color_mode#0==$10) goto vera_layer_mode_text::@2
if() condition always false - eliminating [331] if(vera_layer_mode_text::color_mode#0==$100) goto vera_layer_mode_text::@3
if() condition always false - eliminating [338] if(vera_layer_mode_bitmap::color_depth#0==1) goto vera_layer_mode_bitmap::@4
if() condition always false - eliminating [340] if(vera_layer_mode_bitmap::color_depth#0==2) goto vera_layer_mode_bitmap::@5
if() condition always false - eliminating [342] if(vera_layer_mode_bitmap::color_depth#0==4) goto vera_layer_mode_bitmap::@6
Removing PHI-reference to removed block (vera_layer_mode_bitmap::@3) in block vera_layer_mode_bitmap::@8
if() condition always false - eliminating [344] if(vera_layer_mode_bitmap::color_depth#0!=8) goto vera_layer_mode_bitmap::@8
if() condition always true - replacing block destination [358] if(vera_layer_mode_bitmap::mapwidth#0==$140) goto vera_layer_mode_bitmap::vera_display_set_scale_double1
if() condition always false - eliminating [362] if(vera_layer_mode_bitmap::mapwidth#0==$280) goto vera_layer_mode_bitmap::vera_display_set_scale_none1
Successful SSA optimization Pass2ConstantIfs
Consolidated constant strings into main::s4
Successful SSA optimization Pass2ConstantStringConsolidation
Resolved ranged next value [162] vera_display_get_hscale::s#1 = ++ vera_display_get_hscale::s#2 to ++
Resolved ranged comparison value [164] if(vera_display_get_hscale::s#1!=rangelast(1,3)) goto vera_display_get_hscale::@1 to 4
Resolved ranged next value [172] vera_display_get_vscale::s#1 = ++ vera_display_get_vscale::s#2 to ++
Resolved ranged comparison value [174] if(vera_display_get_vscale::s#1!=rangelast(1,3)) goto vera_display_get_vscale::@1 to 4
Resolved ranged next value [592] bitmap_init::x#1 = ++ bitmap_init::x#10 to ++
Resolved ranged comparison value [594] if(bitmap_init::x#1!=rangelast(0,$27f)) goto bitmap_init::@1 to $280
Resolved ranged next value [606] bitmap_init::y#1 = ++ bitmap_init::y#2 to ++
Resolved ranged comparison value [608] if(bitmap_init::y#1!=rangelast(0,$1df)) goto bitmap_init::@15 to $1e0
Resolved ranged next value [837] divr16u::i#1 = ++ divr16u::i#2 to ++
Resolved ranged comparison value [839] if(divr16u::i#1!=rangelast(0,$f)) goto divr16u::@1 to $10
De-inlining pointer[w] to *(pointer+w)   [556] __bitmap_plot_x[bitmap_init::$23] = bitmap_init::$7
De-inlining pointer[w] to *(pointer+w)   [557] __bitmap_plot_bitmask[bitmap_init::x#10] = bitmap_init::bitmask#10
De-inlining pointer[w] to *(pointer+w)   [558] __bitmap_plot_bitshift[bitmap_init::x#10] = (byte)bitmap_init::bitshift#10
De-inlining pointer[w] to *(pointer+w)   [566] __bitmap_plot_x[bitmap_init::$24] = bitmap_init::$10
De-inlining pointer[w] to *(pointer+w)   [567] __bitmap_plot_bitmask[bitmap_init::x#10] = bitmap_init::bitmask#11
De-inlining pointer[w] to *(pointer+w)   [568] __bitmap_plot_bitshift[bitmap_init::x#10] = (byte)bitmap_init::bitshift#11
De-inlining pointer[w] to *(pointer+w)   [576] __bitmap_plot_x[bitmap_init::$25] = bitmap_init::$13
De-inlining pointer[w] to *(pointer+w)   [577] __bitmap_plot_bitmask[bitmap_init::x#10] = bitmap_init::bitmask#12
De-inlining pointer[w] to *(pointer+w)   [578] __bitmap_plot_bitshift[bitmap_init::x#10] = (byte)bitmap_init::bitshift#12
De-inlining pointer[w] to *(pointer+w)   [584] __bitmap_plot_x[bitmap_init::$26] = bitmap_init::x#10
De-inlining pointer[w] to *(pointer+w)   [585] __bitmap_plot_bitmask[bitmap_init::x#10] = bitmap_init::bitmask#13
De-inlining pointer[w] to *(pointer+w)   [586] __bitmap_plot_bitshift[bitmap_init::x#10] = (byte)bitmap_init::bitshift#13
De-inlining pointer[w] to *(pointer+w)   [604] __bitmap_plot_y[bitmap_init::$28] = bitmap_init::yoffs#2
De-inlining pointer[w] to *(pointer+w)   [632] bitmap_plot::plot_x#0 = (dword)__bitmap_plot_x[bitmap_plot::$9]
De-inlining pointer[w] to *(pointer+w)   [634] bitmap_plot::plot_y#0 = __bitmap_plot_y[bitmap_plot::$10]
De-inlining pointer[w] to *(pointer+w)   [636] bitmap_plot::bitshift#0 = __bitmap_plot_bitshift[bitmap_plot::x#4]
De-inlining pointer[w] to *(pointer+w)   [650] bitmap_plot::$6 = ~ __bitmap_plot_bitmask[bitmap_plot::x#4]
Successful SSA optimization Pass2DeInlineWordDerefIdx
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_1BPP in [240] vera_layer_mode_tile::config#1 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_1BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_2BPP in [242] vera_layer_mode_tile::config#2 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_2BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_4BPP in [244] vera_layer_mode_tile::config#3 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_4BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_8BPP in [246] vera_layer_mode_tile::config#4 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_8BPP
Simplifying expression containing zero vera_layer_mode_tile::config#17 in [249] vera_layer_mode_tile::config#5 = vera_layer_mode_tile::config#17 | VERA_LAYER_WIDTH_32
Simplifying expression containing zero vera_layer_mode_tile::config#21 in [270] vera_layer_mode_tile::config#9 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_32
Simplifying expression containing zero vera_layer_mode_tile::tilebase#1 in [304] vera_layer_mode_tile::tilebase#2 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_8
Simplifying expression containing zero vera_layer_mode_tile::tilebase#12 in [309] vera_layer_mode_tile::tilebase#4 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_8
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_1BPP in [339] vera_layer_mode_bitmap::config#1 = vera_layer_mode_bitmap::config#0 | VERA_LAYER_COLOR_DEPTH_1BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_2BPP in [341] vera_layer_mode_bitmap::config#2 = vera_layer_mode_bitmap::config#0 | VERA_LAYER_COLOR_DEPTH_2BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_4BPP in [343] vera_layer_mode_bitmap::config#3 = vera_layer_mode_bitmap::config#0 | VERA_LAYER_COLOR_DEPTH_4BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_8BPP in [345] vera_layer_mode_bitmap::config#4 = vera_layer_mode_bitmap::config#0 | VERA_LAYER_COLOR_DEPTH_8BPP
Simplifying expression containing zero vera_tilebase_bank in [352] vera_tilebase_bank[vera_layer_mode_bitmap::layer#0] = vera_layer_mode_bitmap::$2
Simplifying expression containing zero vera_layer_mode_bitmap::tilebase#1 in [361] vera_layer_mode_bitmap::tilebase#2 = vera_layer_mode_bitmap::tilebase#1 | VERA_TILEBASE_WIDTH_8
Simplifying expression containing zero bitmap_plot::vera_vram_address01_$2 in [648] bitmap_plot::vera_vram_address01_$3 = bitmap_plot::vera_vram_address01_$2 | bitmap_plot::vera_vram_address01_incr#0
Simplifying expression containing zero vera_layer_enable in [902] *VERA_DC_VIDEO = *VERA_DC_VIDEO | vera_layer_enable[main::vera_layer_show1_layer#0]
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating variable vera_layer_mode_bitmap::config#1 from unused block vera_layer_mode_bitmap::@4
Eliminating variable vera_layer_mode_bitmap::config#2 from unused block vera_layer_mode_bitmap::@5
Eliminating variable vera_layer_mode_bitmap::config#3 from unused block vera_layer_mode_bitmap::@6
Eliminating variable vera_layer_mode_bitmap::tilebase#3 from unused block vera_layer_mode_bitmap::@12
Removing unused block vera_layer_mode_text::@1
Removing PHI-reference to removed block (vera_layer_mode_text::@3) in block vera_layer_set_text_color_mode
Removing PHI-reference to removed block (vera_layer_mode_text::@3) in block vera_layer_set_text_color_mode
Removing unused block vera_layer_mode_text::@3
Removing unused block vera_layer_mode_text::@6
Removing PHI-reference to removed block (vera_layer_mode_bitmap::@4) in block vera_layer_mode_bitmap::@8
Removing unused block vera_layer_mode_bitmap::@4
Removing PHI-reference to removed block (vera_layer_mode_bitmap::@5) in block vera_layer_mode_bitmap::@8
Removing unused block vera_layer_mode_bitmap::@5
Removing PHI-reference to removed block (vera_layer_mode_bitmap::@6) in block vera_layer_mode_bitmap::@8
Removing unused block vera_layer_mode_bitmap::@6
Removing PHI-reference to removed block (vera_layer_mode_bitmap::@9) in block vera_layer_mode_bitmap::@10
Removing unused block vera_layer_mode_bitmap::@9
Removing unused block vera_layer_mode_bitmap::vera_display_set_scale_none1
Removing PHI-reference to removed block (vera_layer_mode_bitmap::@12) in block vera_layer_mode_bitmap::@10
Removing unused block vera_layer_mode_bitmap::@12
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused variable vera_layer_set_textcolor::return#2 and assignment [307] vera_layer_set_textcolor::return#2 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_backcolor::return#2 and assignment [309] vera_layer_set_backcolor::return#2 = vera_layer_set_backcolor::return#0
Eliminating unused variable - keeping the phi block rem16u#22
Eliminating unused variable divr16u::return#2 and assignment [709] divr16u::return#2 = divr16u::return#0
Eliminating unused variable vera_layer_set_textcolor::return#3 and assignment [718] vera_layer_set_textcolor::return#3 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_backcolor::return#3 and assignment [721] vera_layer_set_backcolor::return#3 = vera_layer_set_backcolor::return#0
Eliminating unused variable vera_layer_set_textcolor::return#4 and assignment [734] vera_layer_set_textcolor::return#4 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_textcolor::return#5 and assignment [772] vera_layer_set_textcolor::return#5 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_backcolor::return#4 and assignment [775] vera_layer_set_backcolor::return#4 = vera_layer_set_backcolor::return#0
Eliminating unused variable vera_layer_set_textcolor::return#6 and assignment [782] vera_layer_set_textcolor::return#6 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_textcolor::return#7 and assignment [799] vera_layer_set_textcolor::return#7 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_backcolor::return#5 and assignment [802] vera_layer_set_backcolor::return#5 = vera_layer_set_backcolor::return#0
Eliminating unused constant VERA_LAYER_WIDTH_32
Eliminating unused constant VERA_LAYER_HEIGHT_32
Eliminating unused constant VERA_TILEBASE_WIDTH_8
Eliminating unused constant VERA_TILEBASE_HEIGHT_8
Eliminating unused constant cputs::c#0
Eliminating unused constant vera_layer_set_text_color_mode::color_mode#1
Eliminating unused constant vera_layer_set_text_color_mode::layer#1
Eliminating unused constant vera_layer_mode_text::color_mode#0
Eliminating unused constant vera_layer_mode_bitmap::config#0
Eliminating unused constant vera_layer_mode_bitmap::mapwidth#0
Eliminating unused constant vera_layer_mode_bitmap::color_depth#0
Eliminating unused constant bitmap_plot::vera_vram_address01_incr#0
Eliminating unused constant bitmap_line::xd#0
Eliminating unused constant bitmap_line::yd#0
Eliminating unused constant main::vera_layer_show1_layer#0
Eliminating unused constant CONIO_SCREEN_TEXT#7
Eliminating unused constant CONIO_SCREEN_BANK#7
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable vera_layer_set_textcolor::return#0 and assignment [172] vera_layer_set_textcolor::return#0 = vera_layer_textcolor[vera_layer_set_textcolor::layer#6]
Eliminating unused variable vera_layer_set_backcolor::return#0 and assignment [178] vera_layer_set_backcolor::return#0 = vera_layer_backcolor[vera_layer_set_backcolor::layer#4]
Eliminating unused variable - keeping the phi block rem16u#23
Eliminating unused constant VERA_INC_0
Eliminating unused constant DEFAULT_SCREEN
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant rem16u#28
Successful SSA optimization PassNEliminateUnusedVars
Adding number conversion cast (unumber) 4 in if(vera_display_get_hscale::s#1!=4) goto vera_display_get_hscale::@1
Adding number conversion cast (unumber) 4 in if(vera_display_get_vscale::s#1!=4) goto vera_display_get_vscale::@1
Adding number conversion cast (unumber) $280 in if(bitmap_init::x#1!=$280) goto bitmap_init::@1
Adding number conversion cast (unumber) $1e0 in if(bitmap_init::y#1!=$1e0) goto bitmap_init::@15
Adding number conversion cast (unumber) $10 in if(divr16u::i#1!=$10) goto divr16u::@1
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 4
Simplifying constant integer cast 4
Simplifying constant integer cast $280
Simplifying constant integer cast $1e0
Simplifying constant integer cast $10
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 4
Finalized unsigned number type (word) $280
Finalized unsigned number type (word) $1e0
Finalized unsigned number type (byte) $10
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Alias vera_layer_mode_tile::config#17 = vera_layer_mode_tile::config#5 
Alias vera_layer_mode_tile::config#21 = vera_layer_mode_tile::config#9 
Alias vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#2 
Alias vera_layer_mode_tile::tilebase#12 = vera_layer_mode_tile::tilebase#4 
Alias vera_layer_mode_bitmap::config#10 = vera_layer_mode_bitmap::config#4 
Alias vera_layer_mode_bitmap::tilebase#1 = vera_layer_mode_bitmap::tilebase#2 vera_layer_mode_bitmap::tilebase#6 
Alias bitmap_plot::vera_vram_address01_$3 = bitmap_plot::vera_vram_address01_$2 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Identical Phi Values vera_layer_set_text_color_mode::layer#2 vera_layer_set_text_color_mode::layer#0
Identical Phi Values vera_layer_set_text_color_mode::color_mode#2 vera_layer_set_text_color_mode::color_mode#0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [151] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#0 * SIZEOF_POINTER
Constant right-side identified [276] vera_layer_mode_bitmap::$1 = word0  vera_layer_mode_bitmap::bitmap_address#1
Constant right-side identified [277] vera_layer_mode_bitmap::$9 = vera_layer_mode_bitmap::layer#0 * SIZEOF_WORD
Constant right-side identified [279] vera_layer_mode_bitmap::$2 = byte2  vera_layer_mode_bitmap::bitmap_address#1
Constant right-side identified [281] vera_layer_mode_bitmap::$10 = vera_layer_mode_bitmap::layer#0 * SIZEOF_DWORD
Constant right-side identified [283] vera_layer_mode_bitmap::bitmap_address#0 = vera_layer_mode_bitmap::bitmap_address#1 >> 1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#0*SIZEOF_POINTER
Constant vera_layer_mode_tile::config#1 = VERA_LAYER_COLOR_DEPTH_1BPP
Constant vera_layer_mode_tile::config#2 = VERA_LAYER_COLOR_DEPTH_2BPP
Constant vera_layer_mode_tile::config#3 = VERA_LAYER_COLOR_DEPTH_4BPP
Constant vera_layer_mode_tile::config#4 = VERA_LAYER_COLOR_DEPTH_8BPP
Constant vera_layer_mode_bitmap::config#10 = VERA_LAYER_COLOR_DEPTH_8BPP
Constant vera_layer_mode_bitmap::$1 = word0 vera_layer_mode_bitmap::bitmap_address#1
Constant vera_layer_mode_bitmap::$9 = vera_layer_mode_bitmap::layer#0*SIZEOF_WORD
Constant vera_layer_mode_bitmap::$2 = byte2 vera_layer_mode_bitmap::bitmap_address#1
Constant vera_layer_mode_bitmap::$10 = vera_layer_mode_bitmap::layer#0*SIZEOF_DWORD
Constant vera_layer_mode_bitmap::bitmap_address#0 = vera_layer_mode_bitmap::bitmap_address#1>>1
Successful SSA optimization Pass2ConstantIdentification
Simplifying constant evaluating to zero word0 vera_layer_mode_bitmap::bitmap_address#1 in 
Simplifying constant evaluating to zero vera_layer_mode_bitmap::layer#0*SIZEOF_WORD in 
Simplifying constant evaluating to zero byte2 vera_layer_mode_bitmap::bitmap_address#1 in 
Simplifying constant evaluating to zero vera_layer_mode_bitmap::layer#0*SIZEOF_DWORD in 
Simplifying constant evaluating to zero vera_layer_mode_bitmap::bitmap_address#1>>1 in 
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero *vera_layer_set_text_color_mode::addr#0 in [154] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 | vera_layer_set_text_color_mode::color_mode#0
Simplifying expression containing zero vera_tilebase_offset in [278] vera_tilebase_offset[vera_layer_mode_bitmap::$9] = vera_layer_mode_bitmap::$1
Simplifying expression containing zero vera_tilebase_address in [282] vera_tilebase_address[vera_layer_mode_bitmap::$10] = vera_layer_mode_bitmap::bitmap_address#1
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused constant vera_layer_set_text_color_mode::color_mode#0
Eliminating unused constant vera_layer_mode_bitmap::$9
Eliminating unused constant vera_layer_mode_bitmap::$10
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant VERA_LAYER_CONFIG_16C
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Constant right-side identified [268] vera_layer_mode_bitmap::config#11 = vera_layer_mode_bitmap::config#10 | VERA_LAYER_CONFIG_MODE_BITMAP
Constant right-side identified [272] vera_layer_mode_bitmap::tilebase#0 = byte1  vera_layer_mode_bitmap::bitmap_address#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant vera_layer_mode_bitmap::config#11 = vera_layer_mode_bitmap::config#10|VERA_LAYER_CONFIG_MODE_BITMAP
Constant vera_layer_mode_bitmap::tilebase#0 = byte1 vera_layer_mode_bitmap::bitmap_address#0
Successful SSA optimization Pass2ConstantIdentification
Constant vera_layer_set_config::config#1 = vera_layer_mode_bitmap::config#11
Successful SSA optimization Pass2ConstantIdentification
Simplifying constant evaluating to zero byte1 vera_layer_mode_bitmap::bitmap_address#0 in 
Successful SSA optimization PassNSimplifyConstantZero
Eliminating unused constant vera_layer_mode_bitmap::bitmap_address#0
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Constant right-side identified [271] vera_layer_mode_bitmap::tilebase#1 = vera_layer_mode_bitmap::tilebase#0 & VERA_LAYER_TILEBASE_MASK
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant vera_layer_mode_bitmap::tilebase#1 = vera_layer_mode_bitmap::tilebase#0&VERA_LAYER_TILEBASE_MASK
Successful SSA optimization Pass2ConstantIdentification
Constant vera_layer_set_tilebase::tilebase#1 = vera_layer_mode_bitmap::tilebase#1
Successful SSA optimization Pass2ConstantIdentification
Simplifying constant evaluating to zero vera_layer_mode_bitmap::tilebase#0&VERA_LAYER_TILEBASE_MASK in 
Successful SSA optimization PassNSimplifyConstantZero
Eliminating unused constant vera_layer_mode_bitmap::tilebase#0
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Inlining Noop Cast [318] memcpy_in_vram::src#0 = (void*)insertup::$6 keeping memcpy_in_vram::src#0
Inlining Noop Cast [341] CONIO_SCREEN_TEXT#104 = (byte*)screenlayer::$1 keeping CONIO_SCREEN_TEXT#104
Inlining Noop Cast [481] bitmap_clear::vdest#0 = (void*)bitmap_clear::$4 keeping bitmap_clear::vdest#0
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [54] clrscr::$9 = conio_screen_layer * SIZEOF_WORD
Rewriting multiplication to use shift [73] gotoxy::$5 = conio_screen_layer * SIZEOF_WORD
Rewriting multiplication to use shift [87] cputc::$15 = conio_screen_layer * SIZEOF_WORD
Rewriting multiplication to use shift [111] cputln::$2 = conio_screen_layer * SIZEOF_WORD
Rewriting multiplication to use shift [114] cputln::$3 = conio_screen_layer * SIZEOF_WORD
Rewriting multiplication to use shift [146] vera_layer_set_config::$0 = vera_layer_set_config::layer#2 * SIZEOF_POINTER
Rewriting multiplication to use shift [155] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 * SIZEOF_POINTER
Rewriting multiplication to use shift [161] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 * SIZEOF_WORD
Rewriting multiplication to use shift [165] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 * SIZEOF_POINTER
Rewriting multiplication to use shift [180] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 * SIZEOF_POINTER
Rewriting multiplication to use shift [191] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 * SIZEOF_WORD
Rewriting multiplication to use shift [202] vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#10 * SIZEOF_WORD
Rewriting multiplication to use shift [207] vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#10 * SIZEOF_WORD
Rewriting multiplication to use shift [212] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#10 * SIZEOF_WORD
Rewriting multiplication to use shift [217] vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#10 * SIZEOF_WORD
Rewriting multiplication to use shift [232] vera_layer_mode_tile::$15 = vera_layer_mode_tile::layer#10 * SIZEOF_WORD
Rewriting multiplication to use shift [236] vera_layer_mode_tile::$16 = vera_layer_mode_tile::layer#10 * SIZEOF_DWORD
Rewriting multiplication to use shift [244] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 * SIZEOF_WORD
Rewriting multiplication to use shift [248] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 * SIZEOF_DWORD
Rewriting multiplication to use shift [291] clearline::$5 = conio_screen_layer * SIZEOF_WORD
Rewriting multiplication to use shift [310] insertup::width#0 = conio_screen_width * 2
Rewriting multiplication to use shift [343] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 * SIZEOF_POINTER
Rewriting multiplication to use shift [347] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 * SIZEOF_WORD
Rewriting multiplication to use shift [363] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 * SIZEOF_POINTER
Rewriting multiplication to use shift [367] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 * SIZEOF_WORD
Rewriting multiplication to use shift [385] bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#0 * SIZEOF_POINTER
Rewriting multiplication to use shift [407] bitmap_init::$23 = bitmap_init::x#10 * SIZEOF_WORD
Rewriting multiplication to use shift [419] bitmap_init::$24 = bitmap_init::x#10 * SIZEOF_WORD
Rewriting multiplication to use shift [431] bitmap_init::$25 = bitmap_init::x#10 * SIZEOF_WORD
Rewriting multiplication to use shift [441] bitmap_init::$26 = bitmap_init::x#10 * SIZEOF_WORD
Rewriting multiplication to use shift [457] bitmap_init::$27 = bitmap_init::$4 * SIZEOF_WORD
Rewriting multiplication to use shift [461] bitmap_init::$28 = bitmap_init::y#2 * SIZEOF_DWORD
Rewriting multiplication to use shift [468] bitmap_clear::$6 = __bitmap_vscale * SIZEOF_WORD
Rewriting multiplication to use shift [472] bitmap_clear::$7 = bitmap_clear::$1 * SIZEOF_WORD
Rewriting multiplication to use shift [488] bitmap_plot::$9 = bitmap_plot::x#4 * SIZEOF_WORD
Rewriting multiplication to use shift [491] bitmap_plot::$10 = bitmap_plot::y#4 * SIZEOF_DWORD
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memcpy_in_vram::i#0
Inlining constant with var siblings memcpy_in_vram::dest_bank#0
Inlining constant with var siblings memcpy_in_vram::dest_increment#0
Inlining constant with var siblings memcpy_in_vram::src_bank#0
Inlining constant with var siblings memcpy_in_vram::src_increment#0
Inlining constant with var siblings memcpy_in_vram::dest_bank#1
Inlining constant with var siblings memcpy_in_vram::dest#1
Inlining constant with var siblings memcpy_in_vram::dest_increment#1
Inlining constant with var siblings memcpy_in_vram::src_bank#1
Inlining constant with var siblings memcpy_in_vram::src#1
Inlining constant with var siblings memcpy_in_vram::src_increment#1
Inlining constant with var siblings memcpy_in_vram::num#1
Inlining constant with var siblings memset_vram::i#0
Inlining constant with var siblings clrscr::l#0
Inlining constant with var siblings clrscr::c#0
Inlining constant with var siblings gotoxy::y#0
Inlining constant with var siblings gotoxy::x#0
Inlining constant with var siblings gotoxy::x#1
Inlining constant with var siblings gotoxy::x#2
Inlining constant with var siblings gotoxy::x#3
Inlining constant with var siblings gotoxy::y#3
Inlining constant with var siblings gotoxy::x#4
Inlining constant with var siblings gotoxy::y#4
Inlining constant with var siblings gotoxy::x#5
Inlining constant with var siblings gotoxy::y#5
Inlining constant with var siblings gotoxy::x#6
Inlining constant with var siblings gotoxy::y#6
Inlining constant with var siblings cputs::s#1
Inlining constant with var siblings cputs::s#2
Inlining constant with var siblings cputs::s#3
Inlining constant with var siblings cputs::s#4
Inlining constant with var siblings cputs::s#5
Inlining constant with var siblings cputs::s#6
Inlining constant with var siblings cputs::s#7
Inlining constant with var siblings vera_display_get_hscale::s#0
Inlining constant with var siblings vera_display_get_vscale::s#0
Inlining constant with var siblings vera_layer_set_config::layer#1
Inlining constant with var siblings vera_layer_set_config::config#1
Inlining constant with var siblings vera_layer_set_mapbase::layer#1
Inlining constant with var siblings vera_layer_set_mapbase::mapbase#1
Inlining constant with var siblings vera_layer_set_mapbase::layer#2
Inlining constant with var siblings vera_layer_set_mapbase::mapbase#2
Inlining constant with var siblings vera_layer_set_tilebase::layer#1
Inlining constant with var siblings vera_layer_set_tilebase::tilebase#1
Inlining constant with var siblings vera_layer_set_textcolor::layer#0
Inlining constant with var siblings vera_layer_set_textcolor::color#0
Inlining constant with var siblings vera_layer_set_textcolor::color#1
Inlining constant with var siblings vera_layer_set_textcolor::color#2
Inlining constant with var siblings vera_layer_set_textcolor::color#3
Inlining constant with var siblings vera_layer_set_textcolor::color#4
Inlining constant with var siblings vera_layer_set_textcolor::color#5
Inlining constant with var siblings vera_layer_set_backcolor::layer#0
Inlining constant with var siblings vera_layer_set_backcolor::color#0
Inlining constant with var siblings vera_layer_set_backcolor::color#1
Inlining constant with var siblings vera_layer_set_backcolor::color#2
Inlining constant with var siblings vera_layer_set_backcolor::color#3
Inlining constant with var siblings vera_layer_mode_tile::config#0
Inlining constant with var siblings vera_layer_mode_tile::color_depth#0
Inlining constant with var siblings vera_layer_mode_tile::layer#1
Inlining constant with var siblings vera_layer_mode_tile::mapbase_address#2
Inlining constant with var siblings vera_layer_mode_tile::tilebase_address#2
Inlining constant with var siblings vera_layer_mode_tile::mapwidth#1
Inlining constant with var siblings vera_layer_mode_tile::mapheight#1
Inlining constant with var siblings vera_layer_mode_tile::tilewidth#1
Inlining constant with var siblings vera_layer_mode_tile::tileheight#1
Inlining constant with var siblings vera_layer_mode_tile::color_depth#1
Inlining constant with var siblings vera_layer_mode_tile::layer#0
Inlining constant with var siblings vera_layer_mode_tile::mapbase_address#1
Inlining constant with var siblings vera_layer_mode_tile::tilebase_address#1
Inlining constant with var siblings vera_layer_mode_tile::mapwidth#0
Inlining constant with var siblings vera_layer_mode_tile::mapheight#0
Inlining constant with var siblings vera_layer_mode_tile::tilewidth#0
Inlining constant with var siblings vera_layer_mode_tile::tileheight#0
Inlining constant with var siblings vera_layer_mode_tile::config#1
Inlining constant with var siblings vera_layer_mode_tile::config#2
Inlining constant with var siblings vera_layer_mode_tile::config#3
Inlining constant with var siblings vera_layer_mode_tile::config#4
Inlining constant with different constant siblings vera_layer_mode_bitmap::config#10
Inlining constant with var siblings clearline::c#0
Inlining constant with var siblings insertup::i#0
Inlining constant with var siblings screenlayer::layer#0
Inlining constant with var siblings screenlayer::layer#1
Inlining constant with var siblings screenlayer::layer#2
Inlining constant with var siblings bitmap_init::x#0
Inlining constant with var siblings bitmap_init::y#0
Inlining constant with var siblings bitmap_line::y0#1
Inlining constant with var siblings bitmap_line::y1#1
Inlining constant with var siblings mul16u::res#0
Inlining constant with var siblings divr16u::quotient#0
Inlining constant with var siblings divr16u::i#0
Inlining constant with var siblings modr16u::divisor#0
Inlining constant with var siblings modr16u::rem#0
Inlining constant with var siblings modr16u::divisor#1
Inlining constant with var siblings modr16u::rem#1
Inlining constant with var siblings modr16u::divisor#2
Inlining constant with var siblings modr16u::rem#2
Inlining constant with var siblings modr16u::divisor#3
Inlining constant with var siblings modr16u::rem#3
Inlining constant with var siblings main::x#0
Inlining constant with var siblings main::color#0
Inlining constant with var siblings main::x#2
Inlining constant with var siblings rand_state#10
Constant inlined cputs::s#5 = main::s4
Constant inlined cputs::s#6 = main::s5
Constant inlined vera_layer_set_config::layer#1 = vera_layer_mode_bitmap::layer#0
Constant inlined cputs::s#3 = main::s2
Constant inlined vera_layer_set_textcolor::color#1 = WHITE
Constant inlined cputs::s#4 = main::s3
Constant inlined vera_layer_set_textcolor::color#0 = WHITE
Constant inlined cputs::s#1 = main::s
Constant inlined cputs::s#2 = main::s1
Constant inlined main::textcolor5_color#0 = WHITE
Constant inlined vera_layer_set_textcolor::color#3 = WHITE
Constant inlined clrscr::l#0 = 0
Constant inlined vera_layer_set_textcolor::color#2 = YELLOW
Constant inlined vera_layer_set_textcolor::color#5 = WHITE
Constant inlined vera_layer_set_textcolor::color#4 = YELLOW
Constant inlined modr16u::divisor#0 = $140
Constant inlined modr16u::divisor#3 = $c8
Constant inlined modr16u::divisor#2 = $c8
Constant inlined modr16u::divisor#1 = $140
Constant inlined vera_layer_set_tilebase::tilebase#1 = vera_layer_mode_bitmap::tilebase#1
Constant inlined memcpy_in_vram::src_increment#1 = VERA_INC_1
Constant inlined vera_layer_mode_tile::layer#0 = vera_layer_mode_text::layer#0
Constant inlined memcpy_in_vram::src_increment#0 = VERA_INC_1
Constant inlined insertup::i#0 = 1
Constant inlined vera_layer_mode_tile::layer#1 = 1
Constant inlined vera_layer_set_config::config#1 = vera_layer_mode_bitmap::config#11
Constant inlined main::bgcolor2_color#0 = BLACK
Constant inlined bitmap_line::y0#1 = 0
Constant inlined main::textcolor1_color#0 = WHITE
Constant inlined vera_layer_mode_tile::color_depth#0 = 1
Constant inlined cputs::s#7 = main::s4
Constant inlined vera_layer_mode_tile::color_depth#1 = 1
Constant inlined main::textcolor4_color#0 = YELLOW
Constant inlined divr16u::i#0 = 0
Constant inlined vera_layer_mode_tile::tileheight#0 = vera_layer_mode_text::tileheight#0
Constant inlined vera_layer_mode_tile::tileheight#1 = 8
Constant inlined vera_layer_set_mapbase::mapbase#1 = $20
Constant inlined vera_layer_set_mapbase::mapbase#2 = 0
Constant inlined vera_layer_mode_tile::tilewidth#1 = 8
Constant inlined vera_layer_mode_tile::tilewidth#0 = vera_layer_mode_text::tilewidth#0
Constant inlined memset_vram::i#0 = 0
Constant inlined memcpy_in_vram::i#0 = 0
Constant inlined vera_layer_set_text_color_mode::$0 = vera_layer_mode_text::layer#0*SIZEOF_POINTER
Constant inlined vera_layer_mode_tile::mapbase_address#2 = $14000
Constant inlined vera_layer_mode_tile::mapbase_address#1 = vera_layer_mode_text::mapbase_address#0
Constant inlined main::x#2 = 0
Constant inlined main::x#0 = 0
Constant inlined vera_layer_set_backcolor::color#2 = BLACK
Constant inlined main::bgcolor3_color#0 = BLUE
Constant inlined vera_layer_set_backcolor::color#3 = BLUE
Constant inlined vera_layer_set_backcolor::color#0 = BLUE
Constant inlined vera_layer_set_backcolor::color#1 = BLACK
Constant inlined modr16u::rem#3 = 0
Constant inlined gotoxy::y#3 = $19
Constant inlined memcpy_in_vram::dest_bank#1 = 1
Constant inlined gotoxy::y#4 = $1d
Constant inlined bitmap_line::y1#1 = $c7
Constant inlined modr16u::rem#1 = 0
Constant inlined memcpy_in_vram::dest_bank#0 = 0
Constant inlined gotoxy::y#5 = $1a
Constant inlined modr16u::rem#2 = 0
Constant inlined vera_layer_set_text_color_mode::layer#0 = vera_layer_mode_text::layer#0
Constant inlined gotoxy::y#0 = 0
Constant inlined bitmap_init::y#0 = 0
Constant inlined gotoxy::y#6 = $1d
Constant inlined modr16u::rem#0 = 0
Constant inlined main::textcolor3_color#0 = WHITE
Constant inlined vera_layer_set_tilebase::layer#1 = vera_layer_mode_bitmap::layer#0
Constant inlined vera_layer_mode_tile::mapheight#0 = vera_layer_mode_text::mapheight#0
Constant inlined vera_layer_mode_tile::mapheight#1 = $40
Constant inlined memcpy_in_vram::dest#1 = (void*)(byte*) 61440
Constant inlined memcpy_in_vram::dest_increment#0 = VERA_INC_1
Constant inlined memcpy_in_vram::dest_increment#1 = VERA_INC_1
Constant inlined vera_layer_mode_bitmap::$1 = 0
Constant inlined vera_layer_set_textcolor::layer#0 = 1
Constant inlined vera_layer_mode_bitmap::$2 = 0
Constant inlined memcpy_in_vram::num#1 = (word)$100*8
Constant inlined vera_display_get_vscale::s#0 = 1
Constant inlined vera_layer_mode_bitmap::config#10 = VERA_LAYER_COLOR_DEPTH_8BPP
Constant inlined memcpy_in_vram::src_bank#1 = 0
Constant inlined main::color#0 = 0
Constant inlined memcpy_in_vram::src_bank#0 = 0
Constant inlined gotoxy::x#3 = 0
Constant inlined gotoxy::x#4 = 0
Constant inlined gotoxy::x#5 = 0
Constant inlined vera_layer_set_mapbase::layer#2 = 1
Constant inlined gotoxy::x#6 = 0
Constant inlined vera_layer_set_mapbase::layer#1 = 0
Constant inlined gotoxy::x#0 = 0
Constant inlined gotoxy::x#1 = 0
Constant inlined gotoxy::x#2 = 0
Constant inlined rand_state#10 = 1
Constant inlined vera_layer_mode_tile::tilebase_address#1 = vera_layer_mode_text::tilebase_address#0
Constant inlined vera_layer_mode_tile::tilebase_address#2 = $1f000
Constant inlined vera_layer_set_backcolor::layer#0 = 1
Constant inlined bitmap_init::x#0 = 0
Constant inlined main::textcolor2_color#0 = YELLOW
Constant inlined vera_layer_mode_tile::mapwidth#0 = vera_layer_mode_text::mapwidth#0
Constant inlined divr16u::quotient#0 = 0
Constant inlined vera_layer_mode_tile::mapwidth#1 = $80
Constant inlined mul16u::res#0 = 0
Constant inlined clearline::c#0 = 0
Constant inlined vera_layer_mode_tile::config#0 = 0
Constant inlined vera_layer_mode_tile::config#1 = VERA_LAYER_COLOR_DEPTH_1BPP
Constant inlined vera_layer_mode_tile::config#2 = VERA_LAYER_COLOR_DEPTH_2BPP
Constant inlined vera_layer_mode_tile::config#3 = VERA_LAYER_COLOR_DEPTH_4BPP
Constant inlined vera_layer_mode_tile::config#4 = VERA_LAYER_COLOR_DEPTH_8BPP
Constant inlined main::s6 = main::s4
Constant inlined vera_display_get_hscale::s#0 = 1
Constant inlined memcpy_in_vram::src#1 = (void*)(byte*) 63488
Constant inlined screenlayer::layer#0 = 1
Constant inlined screenlayer::layer#1 = 1
Constant inlined screenlayer::layer#2 = 1
Constant inlined main::bgcolor1_color#0 = BLACK
Constant inlined clrscr::c#0 = 0
Successful SSA optimization Pass2ConstantInlining
Consolidated array index constant in *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
Successful SSA optimization Pass2ConstantAdditionElimination
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Identical Phi Values memcpy_in_vram::src_increment#2 VERA_INC_1
Identical Phi Values memcpy_in_vram::src_bank#2 0
Identical Phi Values memcpy_in_vram::dest_increment#2 VERA_INC_1
Identical Phi Values gotoxy::x#10 0
Identical Phi Values vera_layer_mode_tile::color_depth#2 1
Identical Phi Values screenlayer::layer#3 1
Identical Phi Values modr16u::rem#4 0
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values gotoxy::x#8 0
Successful SSA optimization Pass2IdenticalPhiElimination
Identified duplicate assignment right side [244] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 << 1
Identified duplicate assignment right side [248] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 << 2
Successful SSA optimization Pass2DuplicateRValueIdentification
Constant right-side identified [6] memcpy_in_vram::$2 = VERA_INC_1 | 0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memcpy_in_vram::$2 = VERA_INC_1|0
Constant divr16u::rem#3 = 0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [195] if(1==1) goto vera_layer_mode_tile::@4
if() condition always false - eliminating [196] if(1==2) goto vera_layer_mode_tile::@5
if() condition always false - eliminating [197] if(1==4) goto vera_layer_mode_tile::@6
if() condition always true - replacing block destination [198] if(1!=8) goto vera_layer_mode_tile::@8
Successful SSA optimization Pass2ConstantIfs
Simplifying expression containing zero VERA_INC_1 in 
Successful SSA optimization PassNSimplifyExpressionWithZero
Removing unused block vera_layer_mode_tile::@1
Removing PHI-reference to removed block (vera_layer_mode_tile::@5) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@5
Removing unused block vera_layer_mode_tile::@2
Removing PHI-reference to removed block (vera_layer_mode_tile::@6) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@6
Removing PHI-reference to removed block (vera_layer_mode_tile::@3) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@3
Removing PHI-reference to removed block (vera_layer_mode_tile::@7) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@7
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant VERA_LAYER_COLOR_DEPTH_2BPP
Eliminating unused constant VERA_LAYER_COLOR_DEPTH_4BPP
Eliminating unused constant SIZEOF_WORD
Eliminating unused constant SIZEOF_DWORD
Successful SSA optimization PassNEliminateUnusedVars
Inlining constant with var siblings divr16u::rem#3
Constant inlined memcpy_in_vram::$2 = VERA_INC_1
Constant inlined divr16u::rem#3 = 0
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Alias vera_layer_mode_tile::$17 = vera_layer_mode_tile::$15 
Alias vera_layer_mode_tile::$18 = vera_layer_mode_tile::$16 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Identical Phi Values vera_layer_mode_tile::config#17 VERA_LAYER_COLOR_DEPTH_1BPP
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [199] vera_layer_mode_tile::config#6 = VERA_LAYER_COLOR_DEPTH_1BPP | VERA_LAYER_WIDTH_64
Constant right-side identified [204] vera_layer_mode_tile::config#7 = VERA_LAYER_COLOR_DEPTH_1BPP | VERA_LAYER_WIDTH_128
Constant right-side identified [209] vera_layer_mode_tile::config#8 = VERA_LAYER_COLOR_DEPTH_1BPP | VERA_LAYER_WIDTH_256
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant vera_layer_mode_tile::config#6 = VERA_LAYER_COLOR_DEPTH_1BPP|VERA_LAYER_WIDTH_64
Constant vera_layer_mode_tile::config#7 = VERA_LAYER_COLOR_DEPTH_1BPP|VERA_LAYER_WIDTH_128
Constant vera_layer_mode_tile::config#8 = VERA_LAYER_COLOR_DEPTH_1BPP|VERA_LAYER_WIDTH_256
Successful SSA optimization Pass2ConstantIdentification
Simplifying expression containing zero VERA_LAYER_WIDTH_64 in 
Simplifying expression containing zero VERA_LAYER_WIDTH_128 in 
Simplifying expression containing zero VERA_LAYER_WIDTH_256 in 
Successful SSA optimization PassNSimplifyExpressionWithZero
Inlining constant with var siblings vera_layer_mode_tile::config#6
Inlining constant with var siblings vera_layer_mode_tile::config#7
Inlining constant with var siblings vera_layer_mode_tile::config#8
Constant inlined vera_layer_mode_tile::config#6 = VERA_LAYER_WIDTH_64
Constant inlined vera_layer_mode_tile::config#7 = VERA_LAYER_WIDTH_128
Constant inlined vera_layer_mode_tile::config#8 = VERA_LAYER_WIDTH_256
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $b
Finalized unsigned number type (word) $280
Finalized unsigned number type (word) $280
Finalized unsigned number type (word) $1e0
Finalized unsigned number type (word) $1e0
Finalized unsigned number type (word) $280
Finalized unsigned number type (word) $280
Finalized unsigned number type (word) $280
Finalized unsigned number type (word) $280
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 5
Finalized unsigned number type (byte) 5
Finalized unsigned number type (word) $100
Finalized unsigned number type (byte) 8
Successful SSA optimization PassNFinalizeNumberTypeConversions
Simplifying constant integer cast $100*8
Successful SSA optimization PassNCastSimplification
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Alias candidate removed (volatile)kbhit::return#0 = kbhit::ch kbhit::return#1 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0 bitmap_init::vera_layer_get_color_depth1_return#1 bitmap_init::$0 __bitmap_color_depth 
Alias candidate removed (volatile)__bitmap_hscale = bitmap_init::$1 
Alias candidate removed (volatile)__bitmap_vscale = bitmap_init::$2 
Added new block during phi lifting gotoxy::@5(between gotoxy and gotoxy::@1)
Added new block during phi lifting vera_display_get_hscale::@5(between vera_display_get_hscale::@2 and vera_display_get_hscale::@1)
Added new block during phi lifting vera_display_get_vscale::@5(between vera_display_get_vscale::@2 and vera_display_get_vscale::@1)
Added new block during phi lifting vera_layer_mode_tile::@36(between vera_layer_mode_tile::@19 and vera_layer_mode_tile::@24)
Added new block during phi lifting vera_layer_mode_tile::@37(between vera_layer_mode_tile::@25 and vera_layer_mode_tile::@28)
Added new block during phi lifting vera_layer_mode_tile::@38(between vera_layer_mode_tile::@29 and vera_layer_mode_tile::@32)
Added new block during phi lifting conio_x16_init::@11(between conio_x16_init::@9 and conio_x16_init::@1)
Added new block during phi lifting bitmap_init::@19(between bitmap_init::@7 and bitmap_init::@1)
Added new block during phi lifting bitmap_init::@20(between bitmap_init::@1 and bitmap_init::@2)
Added new block during phi lifting bitmap_init::@21(between bitmap_init::@2 and bitmap_init::@3)
Added new block during phi lifting bitmap_init::@22(between bitmap_init::@3 and bitmap_init::@4)
Added new block during phi lifting bitmap_init::@23(between bitmap_init::@5 and bitmap_init::@6)
Added new block during phi lifting bitmap_init::@24(between bitmap_init::@6 and bitmap_init::@7)
Added new block during phi lifting bitmap_init::@25(between bitmap_init::@15 and bitmap_init::@15)
Added new block during phi lifting mul16u::@6(between mul16u::@2 and mul16u::@4)
Added new block during phi lifting bitmap_line_xdyi::@5(between bitmap_line_xdyi::@2 and bitmap_line_xdyi::@1)
Added new block during phi lifting bitmap_line_xdyi::@6(between bitmap_line_xdyi::@4 and bitmap_line_xdyi::@2)
Added new block during phi lifting bitmap_line_xdyd::@5(between bitmap_line_xdyd::@2 and bitmap_line_xdyd::@1)
Added new block during phi lifting bitmap_line_xdyd::@6(between bitmap_line_xdyd::@4 and bitmap_line_xdyd::@2)
Added new block during phi lifting bitmap_line_ydxi::@5(between bitmap_line_ydxi::@2 and bitmap_line_ydxi::@1)
Added new block during phi lifting bitmap_line_ydxi::@6(between bitmap_line_ydxi::@4 and bitmap_line_ydxi::@2)
Added new block during phi lifting bitmap_line_ydxd::@5(between bitmap_line_ydxd::@2 and bitmap_line_ydxd::@1)
Added new block during phi lifting bitmap_line_ydxd::@6(between bitmap_line_ydxd::@4 and bitmap_line_ydxd::@2)
Added new block during phi lifting divr16u::@7(between divr16u::@3 and divr16u::@1)
Added new block during phi lifting divr16u::@8(between divr16u::@1 and divr16u::@2)
Added new block during phi lifting divr16u::@9(between divr16u::@2 and divr16u::@3)
Added new block during phi lifting main::@59(between main::@54 and main::@4)
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@2
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of __start::@3
Adding NOP phi() at start of conio_x16_init::@3
Adding NOP phi() at start of conio_x16_init::@4
Adding NOP phi() at start of conio_x16_init::@5
Adding NOP phi() at start of conio_x16_init::@6
Adding NOP phi() at start of conio_x16_init::@7
Adding NOP phi() at start of conio_x16_init::@8
Adding NOP phi() at start of conio_x16_init::@10
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@21
Adding NOP phi() at start of main::@8
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@45
Adding NOP phi() at start of main::@12
Adding NOP phi() at start of main::@46
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::@47
Adding NOP phi() at start of main::@48
Adding NOP phi() at start of main::@49
Adding NOP phi() at start of main::@50
Adding NOP phi() at start of main::@51
Adding NOP phi() at start of main::@14
Adding NOP phi() at start of main::@52
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@55
Adding NOP phi() at start of main::@56
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::@57
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of main::@58
Adding NOP phi() at start of vera_layer_mode_text
Adding NOP phi() at start of vera_layer_mode_text::@4
Adding NOP phi() at start of vera_layer_mode_text::@2
Adding NOP phi() at start of vera_layer_mode_text::@5
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of gotoxy::@4
Adding NOP phi() at start of vera_layer_mode_tile::@4
Adding NOP phi() at start of vera_layer_mode_tile::@35
Adding NOP phi() at start of vera_layer_mode_bitmap
Adding NOP phi() at start of vera_layer_mode_bitmap::@1
Adding NOP phi() at start of vera_layer_mode_bitmap::@2
Adding NOP phi() at start of vera_layer_mode_bitmap::@3
Adding NOP phi() at start of vera_layer_mode_bitmap::@7
Adding NOP phi() at start of vera_layer_mode_bitmap::@11
Adding NOP phi() at start of vera_layer_mode_bitmap::@10
Adding NOP phi() at start of vera_layer_mode_bitmap::@13
Adding NOP phi() at start of vera_layer_mode_bitmap::@14
Adding NOP phi() at start of bitmap_clear::@2
Adding NOP phi() at start of bitmap_line::@16
Adding NOP phi() at start of bitmap_line::@15
Adding NOP phi() at start of bitmap_line::@18
Adding NOP phi() at start of bitmap_line::@17
Adding NOP phi() at start of bitmap_line::@20
Adding NOP phi() at start of bitmap_line::@19
Adding NOP phi() at start of bitmap_line::@22
Adding NOP phi() at start of bitmap_line::@21
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cputc::@9
Adding NOP phi() at start of cputc::@6
Adding NOP phi() at start of cputc::@10
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@8
Adding NOP phi() at start of vera_display_get_hscale
Adding NOP phi() at start of vera_display_get_vscale
Adding NOP phi() at start of mul16u::@3
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@6
Adding NOP phi() at start of insertup::@3
Adding NOP phi() at start of insertup::@5
CALL GRAPH
Calls in [__start] to conio_x16_init:13 main:16 
Calls in [conio_x16_init] to vera_layer_mode_text:20 screensize:22 screenlayer:24 vera_layer_set_textcolor:26 vera_layer_set_backcolor:28 vera_layer_set_mapbase:30 vera_layer_set_mapbase:32 gotoxy:39 
Calls in [main] to memcpy_in_vram:44 vera_layer_mode_tile:46 vera_layer_mode_bitmap:48 screenlayer:50 vera_layer_set_textcolor:54 vera_layer_set_backcolor:59 clrscr:62 gotoxy:64 cputs:66 cputs:68 cputs:70 cputs:72 bitmap_init:76 bitmap_clear:78 gotoxy:80 vera_layer_set_textcolor:84 cputs:87 kbhit:90 vera_layer_set_textcolor:97 vera_layer_set_backcolor:102 clrscr:105 gotoxy:107 cputs:109 gotoxy:111 vera_layer_set_textcolor:115 cputs:118 kbhit:121 screenlayer:126 vera_layer_set_textcolor:130 vera_layer_set_backcolor:135 clrscr:138 bitmap_line:147 rand:155 modr16u:159 rand:163 modr16u:167 rand:171 modr16u:175 rand:179 modr16u:183 rand:187 bitmap_line:196 
Calls in [vera_layer_mode_text] to vera_layer_mode_tile:199 vera_layer_set_text_color_mode:202 
Calls in [screenlayer] to vera_layer_get_mapbase_bank:214 vera_layer_get_mapbase_offset:218 vera_layer_get_rowshift:232 vera_layer_get_rowskip:237 
Calls in [vera_layer_mode_tile] to vera_layer_set_config:318 vera_layer_set_mapbase:332 vera_layer_set_tilebase:355 
Calls in [vera_layer_mode_bitmap] to vera_layer_set_config:389 vera_layer_set_tilebase:391 
Calls in [clrscr] to vera_layer_get_backcolor:396 vera_layer_get_textcolor:401 
Calls in [cputs] to cputc:438 
Calls in [bitmap_init] to vera_display_get_hscale:450 vera_display_get_vscale:454 
Calls in [bitmap_clear] to mul16u:558 memset_vram:566 
Calls in [bitmap_line] to bitmap_line_ydxi:592 bitmap_line_xdyi:607 bitmap_line_ydxd:623 bitmap_line_xdyd:637 bitmap_line_ydxd:655 bitmap_line_xdyd:669 bitmap_line_ydxi:685 bitmap_line_xdyi:699 
Calls in [modr16u] to divr16u:713 
Calls in [cputc] to vera_layer_get_color:746 cputln:769 cputln:774 cputln:777 
Calls in [bitmap_line_ydxi] to bitmap_plot:840 
Calls in [bitmap_line_xdyi] to bitmap_plot:869 
Calls in [bitmap_line_ydxd] to bitmap_plot:898 
Calls in [bitmap_line_xdyd] to bitmap_plot:927 
Calls in [cputln] to cscroll:991 
Calls in [cscroll] to insertup:1028 gotoxy:1031 
Calls in [insertup] to clearline:1038 memcpy_in_vram:1050 
Calls in [clearline] to vera_layer_get_color:1063 

Created 126 initial phi equivalence classes
Coalesced [35] conio_x16_init::line#10 = conio_x16_init::line#1
Coalesced [38] gotoxy::y#11 = gotoxy::y#1
Coalesced [42] conio_x16_init::line#11 = conio_x16_init::line#0
Coalesced [53] vera_layer_set_textcolor::layer#7 = vera_layer_set_textcolor::layer#1
Coalesced [58] vera_layer_set_backcolor::layer#5 = vera_layer_set_backcolor::layer#1
Coalesced [83] vera_layer_set_textcolor::layer#8 = vera_layer_set_textcolor::layer#2
Coalesced [96] vera_layer_set_textcolor::layer#9 = vera_layer_set_textcolor::layer#3
Coalesced [101] vera_layer_set_backcolor::layer#6 = vera_layer_set_backcolor::layer#2
Coalesced [114] vera_layer_set_textcolor::layer#10 = vera_layer_set_textcolor::layer#4
Coalesced [129] vera_layer_set_textcolor::layer#11 = vera_layer_set_textcolor::layer#5
Coalesced [134] vera_layer_set_backcolor::layer#7 = vera_layer_set_backcolor::layer#3
Coalesced [144] bitmap_line::x0#16 = bitmap_line::x0#1
Coalesced [145] bitmap_line::x1#16 = bitmap_line::x1#1
Coalesced [146] bitmap_line::c#18 = bitmap_line::c#1
Coalesced [151] main::color#8 = main::color#1
Coalesced [152] main::x#7 = main::x#1
Coalesced (already) [153] main::color#7 = main::color#1
Coalesced [154] rand_state#88 = rand_state#23
Coalesced [158] modr16u::dividend#5 = modr16u::dividend#0
Coalesced [162] rand_state#89 = rand_state#14
Coalesced [166] modr16u::dividend#6 = modr16u::dividend#1
Coalesced (already) [170] rand_state#90 = rand_state#14
Coalesced [174] modr16u::dividend#7 = modr16u::dividend#2
Coalesced (already) [178] rand_state#91 = rand_state#14
Coalesced [182] modr16u::dividend#8 = modr16u::dividend#3
Coalesced (already) [186] rand_state#92 = rand_state#14
Coalesced [191] bitmap_line::x0#15 = bitmap_line::x0#0
Coalesced [192] bitmap_line::x1#15 = bitmap_line::x1#0
Coalesced [193] bitmap_line::y0#15 = bitmap_line::y0#0
Coalesced [194] bitmap_line::y1#15 = bitmap_line::y1#0
Coalesced [195] bitmap_line::c#17 = bitmap_line::c#0
Coalesced (already) [197] rand_state#93 = rand_state#14
Coalesced [276] gotoxy::y#13 = gotoxy::y#7
Coalesced [296] memcpy_in_vram::i#4 = memcpy_in_vram::i#1
Coalesced [312] vera_layer_mode_tile::config#41 = vera_layer_mode_tile::config#12
Coalesced [316] vera_layer_set_config::layer#3 = vera_layer_set_config::layer#0
Coalesced [317] vera_layer_set_config::config#3 = vera_layer_set_config::config#0
Coalesced [330] vera_layer_set_mapbase::layer#4 = vera_layer_set_mapbase::layer#0
Coalesced [331] vera_layer_set_mapbase::mapbase#4 = vera_layer_set_mapbase::mapbase#0
Coalesced [344] vera_layer_mode_tile::tilebase#16 = vera_layer_mode_tile::tilebase#3
Coalesced [349] vera_layer_mode_tile::tilebase#19 = vera_layer_mode_tile::tilebase#5
Coalesced [353] vera_layer_set_tilebase::layer#3 = vera_layer_set_tilebase::layer#0
Coalesced [354] vera_layer_set_tilebase::tilebase#3 = vera_layer_set_tilebase::tilebase#0
Coalesced [358] vera_layer_mode_tile::tilebase#17 = vera_layer_mode_tile::tilebase#12
Coalesced (already) [359] vera_layer_mode_tile::tilebase#18 = vera_layer_mode_tile::tilebase#12
Coalesced [360] vera_layer_mode_tile::tilebase#14 = vera_layer_mode_tile::tilebase#1
Coalesced (already) [361] vera_layer_mode_tile::tilebase#15 = vera_layer_mode_tile::tilebase#1
Coalesced [362] vera_layer_mode_tile::config#37 = vera_layer_mode_tile::config#21
Coalesced [364] vera_layer_mode_tile::config#40 = vera_layer_mode_tile::config#11
Coalesced [366] vera_layer_mode_tile::config#39 = vera_layer_mode_tile::config#10
Coalesced (already) [367] vera_layer_mode_tile::config#38 = vera_layer_mode_tile::config#21
Coalesced [405] clrscr::line_text#10 = clrscr::line_text#0
Coalesced [424] clrscr::l#7 = clrscr::l#1
Coalesced [425] clrscr::line_text#9 = clrscr::line_text#1
Coalesced [429] clrscr::c#4 = clrscr::c#1
Coalesced [431] cputs::s#12 = cputs::s#9
Coalesced [439] cputs::s#13 = cputs::s#0
Coalesced [460] bitmap_init::bitmask#17 = bitmap_init::bitmask#0
Coalesced [461] bitmap_init::bitshift#17 = bitmap_init::bitshift#0
Coalesced [474] bitmap_init::bitmask#20 = bitmap_init::bitmask#1
Coalesced [475] bitmap_init::bitshift#20 = bitmap_init::bitshift#1
Coalesced [488] bitmap_init::bitmask#22 = bitmap_init::bitmask#2
Coalesced [489] bitmap_init::bitshift#22 = bitmap_init::bitshift#2
Coalesced [502] bitmap_init::bitshift#23 = bitmap_init::bitshift#3
Coalesced [503] bitmap_init::bitmask#23 = bitmap_init::bitmask#3
Coalesced [515] bitmap_init::bitshift#25 = bitmap_init::bitshift#4
Coalesced [519] bitmap_init::bitmask#25 = bitmap_init::bitmask#4
Coalesced [528] bitmap_init::yoffs#3 = bitmap_init::yoffs#0
Coalesced [537] bitmap_init::y#3 = bitmap_init::y#1
Coalesced [538] bitmap_init::yoffs#4 = bitmap_init::yoffs#1
Coalesced [539] bitmap_init::x#15 = bitmap_init::x#1
Coalesced [540] bitmap_init::bitmask#18 = bitmap_init::bitmask#16
Coalesced [541] bitmap_init::bitshift#18 = bitmap_init::bitshift#14
Coalesced [542] bitmap_init::bitmask#26 = bitmap_init::bitmask#13
Coalesced [543] bitmap_init::bitshift#26 = bitmap_init::bitshift#13
Coalesced [544] bitmap_init::bitshift#24 = bitmap_init::bitshift#12
Coalesced [545] bitmap_init::bitmask#24 = bitmap_init::bitmask#12
Coalesced [546] bitmap_init::bitmask#21 = bitmap_init::bitmask#11
Coalesced [547] bitmap_init::bitshift#21 = bitmap_init::bitshift#11
Coalesced (already) [548] bitmap_init::bitmask#19 = bitmap_init::bitmask#10
Coalesced (already) [549] bitmap_init::bitshift#19 = bitmap_init::bitshift#10
Coalesced [586] bitmap_line_ydxi::xd#8 = bitmap_line_ydxi::xd#0
Coalesced [587] bitmap_line_ydxi::x#9 = bitmap_line_ydxi::x#0
Coalesced [588] bitmap_line_ydxi::y#9 = bitmap_line_ydxi::y#0
Coalesced [589] bitmap_line_ydxi::c#8 = bitmap_line_ydxi::c#0
Coalesced [590] bitmap_line_ydxi::yd#8 = bitmap_line_ydxi::yd#0
Coalesced [591] bitmap_line_ydxi::y1#8 = bitmap_line_ydxi::y1#0
Coalesced [601] bitmap_line_xdyi::yd#8 = bitmap_line_xdyi::yd#0
Coalesced [602] bitmap_line_xdyi::x#9 = bitmap_line_xdyi::x#0
Coalesced [603] bitmap_line_xdyi::y#9 = bitmap_line_xdyi::y#0
Coalesced [604] bitmap_line_xdyi::c#8 = bitmap_line_xdyi::c#0
Coalesced [605] bitmap_line_xdyi::xd#8 = bitmap_line_xdyi::xd#0
Coalesced [606] bitmap_line_xdyi::x1#8 = bitmap_line_xdyi::x1#0
Coalesced [617] bitmap_line_ydxd::xd#7 = bitmap_line_ydxd::xd#0
Coalesced [618] bitmap_line_ydxd::x#8 = bitmap_line_ydxd::x#0
Coalesced [619] bitmap_line_ydxd::y#9 = bitmap_line_ydxd::y#0
Coalesced [620] bitmap_line_ydxd::c#7 = bitmap_line_ydxd::c#0
Coalesced [621] bitmap_line_ydxd::yd#7 = bitmap_line_ydxd::yd#0
Coalesced [622] bitmap_line_ydxd::y1#7 = bitmap_line_ydxd::y1#0
Coalesced [631] bitmap_line_xdyd::yd#8 = bitmap_line_xdyd::yd#0
Coalesced [632] bitmap_line_xdyd::x#9 = bitmap_line_xdyd::x#0
Coalesced [633] bitmap_line_xdyd::y#9 = bitmap_line_xdyd::y#0
Coalesced [634] bitmap_line_xdyd::c#8 = bitmap_line_xdyd::c#0
Coalesced [635] bitmap_line_xdyd::xd#8 = bitmap_line_xdyd::xd#0
Coalesced [636] bitmap_line_xdyd::x1#8 = bitmap_line_xdyd::x1#0
Coalesced [649] bitmap_line_ydxd::xd#8 = bitmap_line_ydxd::xd#1
Coalesced [650] bitmap_line_ydxd::x#9 = bitmap_line_ydxd::x#1
Coalesced [651] bitmap_line_ydxd::y#10 = bitmap_line_ydxd::y#1
Coalesced [652] bitmap_line_ydxd::c#8 = bitmap_line_ydxd::c#1
Coalesced [653] bitmap_line_ydxd::yd#8 = bitmap_line_ydxd::yd#1
Coalesced [654] bitmap_line_ydxd::y1#8 = bitmap_line_ydxd::y1#1
Coalesced [663] bitmap_line_xdyd::yd#7 = bitmap_line_xdyd::yd#1
Coalesced [664] bitmap_line_xdyd::x#8 = bitmap_line_xdyd::x#1
Coalesced [665] bitmap_line_xdyd::y#8 = bitmap_line_xdyd::y#1
Coalesced [666] bitmap_line_xdyd::c#7 = bitmap_line_xdyd::c#1
Coalesced [667] bitmap_line_xdyd::xd#7 = bitmap_line_xdyd::xd#1
Coalesced [668] bitmap_line_xdyd::x1#7 = bitmap_line_xdyd::x1#1
Coalesced [679] bitmap_line_ydxi::xd#7 = bitmap_line_ydxi::xd#1
Coalesced [680] bitmap_line_ydxi::x#8 = bitmap_line_ydxi::x#1
Coalesced [681] bitmap_line_ydxi::y#8 = bitmap_line_ydxi::y#1
Coalesced [682] bitmap_line_ydxi::c#7 = bitmap_line_ydxi::c#1
Coalesced [683] bitmap_line_ydxi::yd#7 = bitmap_line_ydxi::yd#1
Coalesced [684] bitmap_line_ydxi::y1#7 = bitmap_line_ydxi::y1#1
Coalesced [693] bitmap_line_xdyi::yd#7 = bitmap_line_xdyi::yd#1
Coalesced [694] bitmap_line_xdyi::x#8 = bitmap_line_xdyi::x#1
Coalesced [695] bitmap_line_xdyi::y#8 = bitmap_line_xdyi::y#1
Coalesced [696] bitmap_line_xdyi::c#7 = bitmap_line_xdyi::c#1
Coalesced [697] bitmap_line_xdyi::xd#7 = bitmap_line_xdyi::xd#1
Coalesced [698] bitmap_line_xdyi::x1#7 = bitmap_line_xdyi::x1#1
Coalesced [745] vera_layer_get_color::layer#6 = vera_layer_get_color::layer#0
Coalesced [782] vera_display_get_hscale::return#5 = vera_display_get_hscale::s#2
Coalesced [787] vera_display_get_hscale::s#5 = vera_display_get_hscale::s#1
Coalesced [791] vera_display_get_vscale::return#5 = vera_display_get_vscale::s#2
Coalesced [796] vera_display_get_vscale::s#5 = vera_display_get_vscale::s#1
Coalesced [798] mul16u::a#7 = mul16u::a#0
Coalesced [799] mul16u::mb#6 = mul16u::mb#0
Coalesced [807] mul16u::res#9 = mul16u::res#1
Coalesced [811] mul16u::a#8 = mul16u::a#1
Coalesced [812] mul16u::res#7 = mul16u::res#6
Coalesced [813] mul16u::mb#7 = mul16u::mb#1
Coalesced (already) [814] mul16u::res#8 = mul16u::res#2
Coalesced [827] memset_vram::i#4 = memset_vram::i#1
Coalesced [830] bitmap_line_ydxi::x#10 = bitmap_line_ydxi::x#5
Coalesced [831] bitmap_line_ydxi::y#10 = bitmap_line_ydxi::y#6
Coalesced [832] bitmap_line_ydxi::e#7 = bitmap_line_ydxi::e#0
Coalesced [837] bitmap_plot::x#13 = bitmap_plot::x#2
Coalesced [838] bitmap_plot::y#8 = bitmap_plot::y#2
Coalesced [839] bitmap_plot::c#13 = bitmap_plot::c#3
Coalesced [846] bitmap_line_ydxi::x#12 = bitmap_line_ydxi::x#2
Coalesced [847] bitmap_line_ydxi::e#9 = bitmap_line_ydxi::e#2
Coalesced [852] bitmap_line_ydxi::x#11 = bitmap_line_ydxi::x#6
Coalesced [853] bitmap_line_ydxi::y#11 = bitmap_line_ydxi::y#2
Coalesced [854] bitmap_line_ydxi::e#8 = bitmap_line_ydxi::e#6
Coalesced (already) [855] bitmap_line_ydxi::x#13 = bitmap_line_ydxi::x#3
Coalesced [856] bitmap_line_ydxi::e#10 = bitmap_line_ydxi::e#1
Coalesced [859] bitmap_line_xdyi::x#10 = bitmap_line_xdyi::x#6
Coalesced [860] bitmap_line_xdyi::y#10 = bitmap_line_xdyi::y#5
Coalesced [861] bitmap_line_xdyi::e#7 = bitmap_line_xdyi::e#0
Coalesced [866] bitmap_plot::x#11 = bitmap_plot::x#0
Coalesced [867] bitmap_plot::y#6 = bitmap_plot::y#0
Coalesced [868] bitmap_plot::c#11 = bitmap_plot::c#1
Coalesced [875] bitmap_line_xdyi::y#12 = bitmap_line_xdyi::y#2
Coalesced [876] bitmap_line_xdyi::e#9 = bitmap_line_xdyi::e#2
Coalesced [881] bitmap_line_xdyi::x#11 = bitmap_line_xdyi::x#2
Coalesced [882] bitmap_line_xdyi::y#11 = bitmap_line_xdyi::y#6
Coalesced [883] bitmap_line_xdyi::e#8 = bitmap_line_xdyi::e#6
Coalesced (already) [884] bitmap_line_xdyi::y#13 = bitmap_line_xdyi::y#3
Coalesced [885] bitmap_line_xdyi::e#10 = bitmap_line_xdyi::e#1
Coalesced [888] bitmap_line_ydxd::x#10 = bitmap_line_ydxd::x#5
Coalesced [889] bitmap_line_ydxd::y#11 = bitmap_line_ydxd::y#7
Coalesced [890] bitmap_line_ydxd::e#7 = bitmap_line_ydxd::e#0
Coalesced [895] bitmap_plot::x#12 = bitmap_plot::x#3
Coalesced [896] bitmap_plot::y#7 = bitmap_plot::y#3
Coalesced [897] bitmap_plot::c#12 = bitmap_plot::c#4
Coalesced [904] bitmap_line_ydxd::x#12 = bitmap_line_ydxd::x#2
Coalesced [905] bitmap_line_ydxd::e#9 = bitmap_line_ydxd::e#2
Coalesced [910] bitmap_line_ydxd::x#11 = bitmap_line_ydxd::x#6
Coalesced [911] bitmap_line_ydxd::y#12 = bitmap_line_ydxd::y#3
Coalesced [912] bitmap_line_ydxd::e#8 = bitmap_line_ydxd::e#6
Coalesced (already) [913] bitmap_line_ydxd::x#13 = bitmap_line_ydxd::x#3
Coalesced [914] bitmap_line_ydxd::e#10 = bitmap_line_ydxd::e#1
Coalesced [917] bitmap_line_xdyd::x#10 = bitmap_line_xdyd::x#6
Coalesced [918] bitmap_line_xdyd::y#10 = bitmap_line_xdyd::y#5
Coalesced [919] bitmap_line_xdyd::e#7 = bitmap_line_xdyd::e#0
Coalesced [924] bitmap_plot::x#10 = bitmap_plot::x#1
Coalesced [925] bitmap_plot::y#5 = bitmap_plot::y#1
Coalesced [926] bitmap_plot::c#10 = bitmap_plot::c#2
Coalesced [933] bitmap_line_xdyd::y#12 = bitmap_line_xdyd::y#2
Coalesced [934] bitmap_line_xdyd::e#9 = bitmap_line_xdyd::e#2
Coalesced [939] bitmap_line_xdyd::x#11 = bitmap_line_xdyd::x#2
Coalesced [940] bitmap_line_xdyd::y#11 = bitmap_line_xdyd::y#6
Coalesced [941] bitmap_line_xdyd::e#8 = bitmap_line_xdyd::e#6
Coalesced (already) [942] bitmap_line_xdyd::y#13 = bitmap_line_xdyd::y#3
Coalesced [943] bitmap_line_xdyd::e#10 = bitmap_line_xdyd::e#1
Coalesced [944] divr16u::dividend#8 = divr16u::dividend#1
Coalesced [951] divr16u::rem#13 = divr16u::rem#1
Coalesced [958] divr16u::rem#15 = divr16u::rem#2
Coalesced [959] divr16u::return#5 = divr16u::quotient#2
Coalesced [965] divr16u::rem#11 = divr16u::rem#10
Coalesced [966] divr16u::dividend#9 = divr16u::dividend#0
Coalesced [967] divr16u::quotient#9 = divr16u::return#0
Coalesced [968] divr16u::i#7 = divr16u::i#1
Coalesced [969] divr16u::rem#14 = divr16u::rem#5
Coalesced [970] divr16u::return#4 = divr16u::quotient#1
Coalesced [971] divr16u::rem#12 = divr16u::rem#0
Coalesced [979] vera_layer_get_color::return#9 = vera_layer_get_color::return#2
Coalesced [983] vera_layer_get_color::return#8 = vera_layer_get_color::return#1
Coalesced [1005] bitmap_plot::c#15 = bitmap_plot::c#5
Coalesced [1021] bitmap_plot::c#14 = bitmap_plot::$3
Coalesced [1030] gotoxy::y#12 = gotoxy::y#2
Coalesced [1048] memcpy_in_vram::dest#3 = memcpy_in_vram::dest#0
Coalesced [1049] memcpy_in_vram::num#5 = memcpy_in_vram::num#0
Coalesced [1052] insertup::i#5 = insertup::i#1
Coalesced [1062] vera_layer_get_color::layer#5 = vera_layer_get_color::layer#1
Coalesced [1073] clearline::c#4 = clearline::c#1
Coalesced down to 90 phi equivalence classes
Culled Empty Block label __start::@2
Culled Empty Block label __start::@3
Culled Empty Block label conio_x16_init::@10
Culled Empty Block label conio_x16_init::@11
Culled Empty Block label main::@20
Culled Empty Block label main::@21
Culled Empty Block label main::@8
Culled Empty Block label main::@22
Culled Empty Block label main::@28
Culled Empty Block label main::@31
Culled Empty Block label main::@32
Culled Empty Block label main::@33
Culled Empty Block label main::@3
Culled Empty Block label main::@45
Culled Empty Block label main::@12
Culled Empty Block label main::@46
Culled Empty Block label main::@50
Culled Empty Block label main::@51
Culled Empty Block label main::@52
Culled Empty Block label main::@55
Culled Empty Block label main::@56
Culled Empty Block label main::@15
Culled Empty Block label main::@57
Culled Empty Block label main::@58
Culled Empty Block label main::@7
Culled Empty Block label main::@44
Culled Empty Block label vera_layer_mode_text::@4
Culled Empty Block label vera_layer_mode_text::@5
Culled Empty Block label gotoxy::@3
Culled Empty Block label vera_layer_mode_tile::@4
Culled Empty Block label vera_layer_mode_tile::@35
Culled Empty Block label vera_layer_mode_tile::@38
Culled Empty Block label vera_layer_mode_tile::@30
Culled Empty Block label vera_layer_mode_tile::@37
Culled Empty Block label vera_layer_mode_tile::@26
Culled Empty Block label vera_layer_mode_tile::@36
Culled Empty Block label vera_layer_mode_tile::@20
Culled Empty Block label vera_layer_mode_bitmap::@1
Culled Empty Block label vera_layer_mode_bitmap::@2
Culled Empty Block label vera_layer_mode_bitmap::@3
Culled Empty Block label vera_layer_mode_bitmap::@7
Culled Empty Block label vera_layer_mode_bitmap::@11
Culled Empty Block label vera_layer_mode_bitmap::@14
Culled Empty Block label cputs::@3
Culled Empty Block label bitmap_init::@25
Culled Empty Block label bitmap_init::@19
Culled Empty Block label bitmap_init::@24
Culled Empty Block label bitmap_init::@23
Culled Empty Block label bitmap_init::@22
Culled Empty Block label bitmap_init::@21
Culled Empty Block label bitmap_init::@20
Culled Empty Block label bitmap_clear::@2
Culled Empty Block label bitmap_line::@16
Culled Empty Block label bitmap_line::@15
Culled Empty Block label bitmap_line::@18
Culled Empty Block label bitmap_line::@17
Culled Empty Block label bitmap_line::@20
Culled Empty Block label bitmap_line::@19
Culled Empty Block label bitmap_line::@22
Culled Empty Block label bitmap_line::@21
Culled Empty Block label cputc::@9
Culled Empty Block label cputc::@10
Culled Empty Block label cputc::@8
Culled Empty Block label vera_display_get_hscale::@4
Culled Empty Block label vera_display_get_hscale::@5
Culled Empty Block label vera_display_get_vscale::@4
Culled Empty Block label vera_display_get_vscale::@5
Culled Empty Block label mul16u::@3
Culled Empty Block label mul16u::@6
Culled Empty Block label bitmap_line_ydxi::@5
Culled Empty Block label bitmap_line_ydxi::@6
Culled Empty Block label bitmap_line_xdyi::@5
Culled Empty Block label bitmap_line_xdyi::@6
Culled Empty Block label bitmap_line_ydxd::@5
Culled Empty Block label bitmap_line_ydxd::@6
Culled Empty Block label bitmap_line_xdyd::@5
Culled Empty Block label bitmap_line_xdyd::@6
Culled Empty Block label divr16u::@7
Culled Empty Block label divr16u::@9
Culled Empty Block label divr16u::@8
Culled Empty Block label cputln::@1
Culled Empty Block label bitmap_plot::@2
Culled Empty Block label cscroll::@6
Culled Empty Block label insertup::@5
Renumbering block gotoxy::@4 to gotoxy::@3
Renumbering block gotoxy::@5 to gotoxy::@4
Renumbering block vera_layer_mode_tile::@8 to vera_layer_mode_tile::@1
Renumbering block vera_layer_mode_tile::@9 to vera_layer_mode_tile::@2
Renumbering block vera_layer_mode_tile::@10 to vera_layer_mode_tile::@3
Renumbering block vera_layer_mode_tile::@11 to vera_layer_mode_tile::@4
Renumbering block vera_layer_mode_tile::@12 to vera_layer_mode_tile::@5
Renumbering block vera_layer_mode_tile::@13 to vera_layer_mode_tile::@6
Renumbering block vera_layer_mode_tile::@14 to vera_layer_mode_tile::@7
Renumbering block vera_layer_mode_tile::@15 to vera_layer_mode_tile::@8
Renumbering block vera_layer_mode_tile::@16 to vera_layer_mode_tile::@9
Renumbering block vera_layer_mode_tile::@17 to vera_layer_mode_tile::@10
Renumbering block vera_layer_mode_tile::@18 to vera_layer_mode_tile::@11
Renumbering block vera_layer_mode_tile::@19 to vera_layer_mode_tile::@12
Renumbering block vera_layer_mode_tile::@21 to vera_layer_mode_tile::@13
Renumbering block vera_layer_mode_tile::@22 to vera_layer_mode_tile::@14
Renumbering block vera_layer_mode_tile::@23 to vera_layer_mode_tile::@15
Renumbering block vera_layer_mode_tile::@24 to vera_layer_mode_tile::@16
Renumbering block vera_layer_mode_tile::@25 to vera_layer_mode_tile::@17
Renumbering block vera_layer_mode_tile::@27 to vera_layer_mode_tile::@18
Renumbering block vera_layer_mode_tile::@28 to vera_layer_mode_tile::@19
Renumbering block vera_layer_mode_tile::@29 to vera_layer_mode_tile::@20
Renumbering block vera_layer_mode_tile::@31 to vera_layer_mode_tile::@21
Renumbering block vera_layer_mode_tile::@32 to vera_layer_mode_tile::@22
Renumbering block vera_layer_mode_tile::@33 to vera_layer_mode_tile::@23
Renumbering block vera_layer_mode_tile::@34 to vera_layer_mode_tile::@24
Renumbering block vera_layer_mode_text::@2 to vera_layer_mode_text::@1
Renumbering block vera_layer_mode_bitmap::@8 to vera_layer_mode_bitmap::@1
Renumbering block vera_layer_mode_bitmap::@10 to vera_layer_mode_bitmap::@2
Renumbering block vera_layer_mode_bitmap::@13 to vera_layer_mode_bitmap::@3
Renumbering block bitmap_plot::@3 to bitmap_plot::@2
Renumbering block bitmap_plot::@4 to bitmap_plot::@3
Renumbering block mul16u::@4 to mul16u::@3
Renumbering block mul16u::@5 to mul16u::@4
Renumbering block main::@4 to main::@3
Renumbering block main::@5 to main::@4
Renumbering block main::@6 to main::@5
Renumbering block main::@9 to main::@6
Renumbering block main::@10 to main::@7
Renumbering block main::@11 to main::@8
Renumbering block main::@13 to main::@9
Renumbering block main::@14 to main::@10
Renumbering block main::@16 to main::@11
Renumbering block main::@17 to main::@12
Renumbering block main::@18 to main::@13
Renumbering block main::@19 to main::@14
Renumbering block main::@23 to main::@15
Renumbering block main::@24 to main::@16
Renumbering block main::@25 to main::@17
Renumbering block main::@26 to main::@18
Renumbering block main::@27 to main::@19
Renumbering block main::@29 to main::@20
Renumbering block main::@30 to main::@21
Renumbering block main::@34 to main::@22
Renumbering block main::@35 to main::@23
Renumbering block main::@36 to main::@24
Renumbering block main::@37 to main::@25
Renumbering block main::@38 to main::@26
Renumbering block main::@39 to main::@27
Renumbering block main::@40 to main::@28
Renumbering block main::@41 to main::@29
Renumbering block main::@42 to main::@30
Renumbering block main::@43 to main::@31
Renumbering block main::@47 to main::@32
Renumbering block main::@48 to main::@33
Renumbering block main::@49 to main::@34
Renumbering block main::@53 to main::@35
Renumbering block main::@54 to main::@36
Renumbering block main::@59 to main::@37
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of conio_x16_init::@3
Adding NOP phi() at start of conio_x16_init::@4
Adding NOP phi() at start of conio_x16_init::@5
Adding NOP phi() at start of conio_x16_init::@6
Adding NOP phi() at start of conio_x16_init::@7
Adding NOP phi() at start of conio_x16_init::@8
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@12
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::@14
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@21
Adding NOP phi() at start of main::@8
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@37
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of vera_layer_mode_text
Adding NOP phi() at start of vera_layer_mode_text::@1
Adding NOP phi() at start of gotoxy::@4
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of vera_layer_mode_bitmap
Adding NOP phi() at start of vera_layer_mode_bitmap::@2
Adding NOP phi() at start of vera_layer_mode_bitmap::@3
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cputc::@6
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of vera_display_get_hscale
Adding NOP phi() at start of vera_display_get_vscale
Adding NOP phi() at start of divr16u
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of insertup::@3

FINAL CONTROL FLOW GRAPH

void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_screen_width = 0
  [2] conio_screen_height = 0
  [3] conio_screen_layer = 1
  [4] conio_width = 0
  [5] conio_height = 0
  [6] conio_rowshift = 0
  [7] conio_rowskip = 0
  [8] __bitmap_address = 0
  [9] __bitmap_layer = 0
  [10] __bitmap_hscale = 0
  [11] __bitmap_vscale = 0
  [12] __bitmap_color_depth = 0
  [13] call conio_x16_init 
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [14] phi()
  [15] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [16] return 
  to:@return

void conio_x16_init()
conio_x16_init: scope:[conio_x16_init]  from __start::__init1
  [17] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE
  [18] call vera_layer_mode_text 
  to:conio_x16_init::@3
conio_x16_init::@3: scope:[conio_x16_init]  from conio_x16_init
  [19] phi()
  [20] call screensize 
  to:conio_x16_init::@4
conio_x16_init::@4: scope:[conio_x16_init]  from conio_x16_init::@3
  [21] phi()
  [22] call screenlayer 
  to:conio_x16_init::@5
conio_x16_init::@5: scope:[conio_x16_init]  from conio_x16_init::@4
  [23] phi()
  [24] call vera_layer_set_textcolor 
  to:conio_x16_init::@6
conio_x16_init::@6: scope:[conio_x16_init]  from conio_x16_init::@5
  [25] phi()
  [26] call vera_layer_set_backcolor 
  to:conio_x16_init::@7
conio_x16_init::@7: scope:[conio_x16_init]  from conio_x16_init::@6
  [27] phi()
  [28] call vera_layer_set_mapbase 
  to:conio_x16_init::@8
conio_x16_init::@8: scope:[conio_x16_init]  from conio_x16_init::@7
  [29] phi()
  [30] call vera_layer_set_mapbase 
  to:conio_x16_init::@9
conio_x16_init::@9: scope:[conio_x16_init]  from conio_x16_init::@8
  [31] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1
  to:conio_x16_init::@2
conio_x16_init::@2: scope:[conio_x16_init]  from conio_x16_init::@9
  [32] conio_x16_init::line#1 = conio_screen_height - 1
  to:conio_x16_init::@1
conio_x16_init::@1: scope:[conio_x16_init]  from conio_x16_init::@2 conio_x16_init::@9
  [33] conio_x16_init::line#3 = phi( conio_x16_init::@2/conio_x16_init::line#1, conio_x16_init::@9/conio_x16_init::line#0 )
  [34] gotoxy::y#1 = conio_x16_init::line#3
  [35] call gotoxy 
  to:conio_x16_init::@return
conio_x16_init::@return: scope:[conio_x16_init]  from conio_x16_init::@1
  [36] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [37] phi()
  [38] call memcpy_in_vram 
  to:main::@12
main::@12: scope:[main]  from main
  [39] phi()
  [40] call vera_layer_mode_tile 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [41] phi()
  [42] call vera_layer_mode_bitmap 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [43] phi()
  [44] call screenlayer 
  to:main::textcolor1
main::textcolor1: scope:[main]  from main::@14
  [45] vera_layer_set_textcolor::layer#1 = conio_screen_layer
  [46] call vera_layer_set_textcolor 
  to:main::bgcolor1
main::bgcolor1: scope:[main]  from main::textcolor1
  [47] vera_layer_set_backcolor::layer#1 = conio_screen_layer
  [48] call vera_layer_set_backcolor 
  to:main::@6
main::@6: scope:[main]  from main::bgcolor1
  [49] phi()
  [50] call clrscr 
  to:main::@15
main::@15: scope:[main]  from main::@6
  [51] phi()
  [52] call gotoxy 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [53] phi()
  [54] call cputs 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [55] phi()
  [56] call cputs 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [57] phi()
  [58] call cputs 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [59] phi()
  [60] call cputs 
  to:main::vera_layer_show1
main::vera_layer_show1: scope:[main]  from main::@19
  [61] *VERA_DC_VIDEO = *VERA_DC_VIDEO | *vera_layer_enable
  to:main::@7
main::@7: scope:[main]  from main::vera_layer_show1
  [62] phi()
  [63] call bitmap_init 
  to:main::@20
main::@20: scope:[main]  from main::@7
  [64] phi()
  [65] call bitmap_clear 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [66] phi()
  [67] call gotoxy 
  to:main::textcolor2
main::textcolor2: scope:[main]  from main::@21
  [68] vera_layer_set_textcolor::layer#2 = conio_screen_layer
  [69] call vera_layer_set_textcolor 
  to:main::@8
main::@8: scope:[main]  from main::textcolor2
  [70] phi()
  [71] call cputs 
  to:main::@1
main::@1: scope:[main]  from main::@31 main::@8
  [72] rand_state#23 = phi( main::@8/1, main::@31/rand_state#14 )
  [73] call kbhit 
  [74] kbhit::return#2 = kbhit::return#1
  to:main::@22
main::@22: scope:[main]  from main::@1
  [75] main::$30 = kbhit::return#2
  [76] if(0==main::$30) goto main::@2
  to:main::textcolor3
main::textcolor3: scope:[main]  from main::@22
  [77] vera_layer_set_textcolor::layer#3 = conio_screen_layer
  [78] call vera_layer_set_textcolor 
  to:main::bgcolor2
main::bgcolor2: scope:[main]  from main::textcolor3
  [79] vera_layer_set_backcolor::layer#2 = conio_screen_layer
  [80] call vera_layer_set_backcolor 
  to:main::@9
main::@9: scope:[main]  from main::bgcolor2
  [81] phi()
  [82] call clrscr 
  to:main::@32
main::@32: scope:[main]  from main::@9
  [83] phi()
  [84] call gotoxy 
  to:main::@33
main::@33: scope:[main]  from main::@32
  [85] phi()
  [86] call cputs 
  to:main::@34
main::@34: scope:[main]  from main::@33
  [87] phi()
  [88] call gotoxy 
  to:main::textcolor4
main::textcolor4: scope:[main]  from main::@34
  [89] vera_layer_set_textcolor::layer#4 = conio_screen_layer
  [90] call vera_layer_set_textcolor 
  to:main::@10
main::@10: scope:[main]  from main::textcolor4
  [91] phi()
  [92] call cputs 
  to:main::@3
main::@3: scope:[main]  from main::@10 main::@36 main::@37
  [93] main::color#2 = phi( main::@10/0, main::@37/main::color#1, main::@36/main::color#1 )
  [93] main::x#3 = phi( main::@10/0, main::@37/main::x#1, main::@36/0 )
  [94] call kbhit 
  [95] kbhit::return#3 = kbhit::return#1
  to:main::@35
main::@35: scope:[main]  from main::@3
  [96] main::$43 = kbhit::return#3
  [97] if(0==main::$43) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@35
  [98] phi()
  [99] call screenlayer 
  to:main::textcolor5
main::textcolor5: scope:[main]  from main::@5
  [100] vera_layer_set_textcolor::layer#5 = conio_screen_layer
  [101] call vera_layer_set_textcolor 
  to:main::bgcolor3
main::bgcolor3: scope:[main]  from main::textcolor5
  [102] vera_layer_set_backcolor::layer#3 = conio_screen_layer
  [103] call vera_layer_set_backcolor 
  to:main::@11
main::@11: scope:[main]  from main::bgcolor3
  [104] phi()
  [105] call clrscr 
  to:main::@return
main::@return: scope:[main]  from main::@11
  [106] return 
  to:@return
main::@4: scope:[main]  from main::@35
  [107] bitmap_line::x0#1 = main::x#3
  [108] bitmap_line::x1#1 = main::x#3
  [109] bitmap_line::c#1 = main::color#2
  [110] call bitmap_line 
  to:main::@36
main::@36: scope:[main]  from main::@4
  [111] main::color#1 = ++ main::color#2
  [112] main::x#1 = ++ main::x#3
  [113] if(main::x#1<=$13f) goto main::@37
  to:main::@3
main::@37: scope:[main]  from main::@36
  [114] phi()
  to:main::@3
main::@2: scope:[main]  from main::@22
  [115] phi()
  [116] call rand 
  [117] rand::return#2 = rand::return#0
  to:main::@23
main::@23: scope:[main]  from main::@2
  [118] modr16u::dividend#0 = rand::return#2
  [119] call modr16u 
  [120] modr16u::return#2 = modr16u::return#0
  to:main::@24
main::@24: scope:[main]  from main::@23
  [121] bitmap_line::x0#0 = modr16u::return#2
  [122] call rand 
  [123] rand::return#3 = rand::return#0
  to:main::@25
main::@25: scope:[main]  from main::@24
  [124] modr16u::dividend#1 = rand::return#3
  [125] call modr16u 
  [126] modr16u::return#3 = modr16u::return#0
  to:main::@26
main::@26: scope:[main]  from main::@25
  [127] bitmap_line::x1#0 = modr16u::return#3
  [128] call rand 
  [129] rand::return#10 = rand::return#0
  to:main::@27
main::@27: scope:[main]  from main::@26
  [130] modr16u::dividend#2 = rand::return#10
  [131] call modr16u 
  [132] modr16u::return#4 = modr16u::return#0
  to:main::@28
main::@28: scope:[main]  from main::@27
  [133] bitmap_line::y0#0 = modr16u::return#4
  [134] call rand 
  [135] rand::return#11 = rand::return#0
  to:main::@29
main::@29: scope:[main]  from main::@28
  [136] modr16u::dividend#3 = rand::return#11
  [137] call modr16u 
  [138] modr16u::return#10 = modr16u::return#0
  to:main::@30
main::@30: scope:[main]  from main::@29
  [139] bitmap_line::y1#0 = modr16u::return#10
  [140] call rand 
  [141] rand::return#12 = rand::return#0
  to:main::@31
main::@31: scope:[main]  from main::@30
  [142] main::$40 = rand::return#12
  [143] bitmap_line::c#0 = main::$40 & $ff
  [144] call bitmap_line 
  to:main::@1

void vera_layer_mode_text(byte vera_layer_mode_text::layer , dword vera_layer_mode_text::mapbase_address , dword vera_layer_mode_text::tilebase_address , word vera_layer_mode_text::mapwidth , word vera_layer_mode_text::mapheight , byte vera_layer_mode_text::tilewidth , byte vera_layer_mode_text::tileheight , word vera_layer_mode_text::color_mode)
vera_layer_mode_text: scope:[vera_layer_mode_text]  from conio_x16_init
  [145] phi()
  [146] call vera_layer_mode_tile 
  to:vera_layer_mode_text::@1
vera_layer_mode_text::@1: scope:[vera_layer_mode_text]  from vera_layer_mode_text
  [147] phi()
  [148] call vera_layer_set_text_color_mode 
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@return: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1
  [149] return 
  to:@return

void screensize(byte* screensize::x , byte* screensize::y)
screensize: scope:[screensize]  from conio_x16_init::@3
  [150] screensize::hscale#0 = *VERA_DC_HSCALE >> 7
  [151] screensize::$1 = $28 << screensize::hscale#0
  [152] *screensize::x#0 = screensize::$1
  [153] screensize::vscale#0 = *VERA_DC_VSCALE >> 7
  [154] screensize::$3 = $1e << screensize::vscale#0
  [155] *screensize::y#0 = screensize::$3
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  [156] return 
  to:@return

void screenlayer(byte screenlayer::layer)
screenlayer: scope:[screenlayer]  from conio_x16_init::@4 main::@14 main::@5
  [157] conio_screen_layer = 1
  [158] vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer
  [159] call vera_layer_get_mapbase_bank 
  [160] vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#0
  to:screenlayer::@3
screenlayer::@3: scope:[screenlayer]  from screenlayer
  [161] CONIO_SCREEN_BANK#15 = vera_layer_get_mapbase_bank::return#2
  [162] vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer
  [163] call vera_layer_get_mapbase_offset 
  [164] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0
  to:screenlayer::@4
screenlayer::@4: scope:[screenlayer]  from screenlayer::@3
  [165] CONIO_SCREEN_TEXT#104 = vera_layer_get_mapbase_offset::return#2
  [166] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_width1
screenlayer::vera_layer_get_width1: scope:[screenlayer]  from screenlayer::@4
  [167] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1
  [168] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2]
  [169] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK
  [170] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
  [171] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1
  [172] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3]
  to:screenlayer::vera_layer_get_width1_@return
screenlayer::vera_layer_get_width1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_width1
  [173] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
  to:screenlayer::@1
screenlayer::@1: scope:[screenlayer]  from screenlayer::vera_layer_get_width1_@return
  [174] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
  [175] conio_width = screenlayer::$2
  [176] vera_layer_get_rowshift::layer#0 = conio_screen_layer
  [177] call vera_layer_get_rowshift 
  [178] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
  to:screenlayer::@5
screenlayer::@5: scope:[screenlayer]  from screenlayer::@1
  [179] screenlayer::$3 = vera_layer_get_rowshift::return#2
  [180] conio_rowshift = screenlayer::$3
  [181] vera_layer_get_rowskip::layer#0 = conio_screen_layer
  [182] call vera_layer_get_rowskip 
  [183] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
  to:screenlayer::@6
screenlayer::@6: scope:[screenlayer]  from screenlayer::@5
  [184] screenlayer::$4 = vera_layer_get_rowskip::return#2
  [185] conio_rowskip = screenlayer::$4
  [186] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_height1
screenlayer::vera_layer_get_height1: scope:[screenlayer]  from screenlayer::@6
  [187] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1
  [188] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2]
  [189] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK
  [190] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
  [191] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1
  [192] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3]
  to:screenlayer::vera_layer_get_height1_@return
screenlayer::vera_layer_get_height1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_height1
  [193] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
  to:screenlayer::@2
screenlayer::@2: scope:[screenlayer]  from screenlayer::vera_layer_get_height1_@return
  [194] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
  [195] conio_height = screenlayer::$5
  to:screenlayer::@return
screenlayer::@return: scope:[screenlayer]  from screenlayer::@2
  [196] return 
  to:@return

byte vera_layer_set_textcolor(byte vera_layer_set_textcolor::layer , byte vera_layer_set_textcolor::color)
vera_layer_set_textcolor: scope:[vera_layer_set_textcolor]  from conio_x16_init::@5 main::textcolor1 main::textcolor2 main::textcolor3 main::textcolor4 main::textcolor5
  [197] vera_layer_set_textcolor::color#6 = phi( conio_x16_init::@5/WHITE, main::textcolor1/WHITE, main::textcolor2/YELLOW, main::textcolor3/WHITE, main::textcolor4/YELLOW, main::textcolor5/WHITE )
  [197] vera_layer_set_textcolor::layer#6 = phi( conio_x16_init::@5/1, main::textcolor1/vera_layer_set_textcolor::layer#1, main::textcolor2/vera_layer_set_textcolor::layer#2, main::textcolor3/vera_layer_set_textcolor::layer#3, main::textcolor4/vera_layer_set_textcolor::layer#4, main::textcolor5/vera_layer_set_textcolor::layer#5 )
  [198] vera_layer_textcolor[vera_layer_set_textcolor::layer#6] = vera_layer_set_textcolor::color#6
  to:vera_layer_set_textcolor::@return
vera_layer_set_textcolor::@return: scope:[vera_layer_set_textcolor]  from vera_layer_set_textcolor
  [199] return 
  to:@return

byte vera_layer_set_backcolor(byte vera_layer_set_backcolor::layer , byte vera_layer_set_backcolor::color)
vera_layer_set_backcolor: scope:[vera_layer_set_backcolor]  from conio_x16_init::@6 main::bgcolor1 main::bgcolor2 main::bgcolor3
  [200] vera_layer_set_backcolor::color#4 = phi( conio_x16_init::@6/BLUE, main::bgcolor1/BLACK, main::bgcolor2/BLACK, main::bgcolor3/BLUE )
  [200] vera_layer_set_backcolor::layer#4 = phi( conio_x16_init::@6/1, main::bgcolor1/vera_layer_set_backcolor::layer#1, main::bgcolor2/vera_layer_set_backcolor::layer#2, main::bgcolor3/vera_layer_set_backcolor::layer#3 )
  [201] vera_layer_backcolor[vera_layer_set_backcolor::layer#4] = vera_layer_set_backcolor::color#4
  to:vera_layer_set_backcolor::@return
vera_layer_set_backcolor::@return: scope:[vera_layer_set_backcolor]  from vera_layer_set_backcolor
  [202] return 
  to:@return

void vera_layer_set_mapbase(byte vera_layer_set_mapbase::layer , byte vera_layer_set_mapbase::mapbase)
vera_layer_set_mapbase: scope:[vera_layer_set_mapbase]  from conio_x16_init::@7 conio_x16_init::@8 vera_layer_mode_tile::@23
  [203] vera_layer_set_mapbase::mapbase#3 = phi( conio_x16_init::@7/$20, conio_x16_init::@8/0, vera_layer_mode_tile::@23/vera_layer_set_mapbase::mapbase#0 )
  [203] vera_layer_set_mapbase::layer#3 = phi( conio_x16_init::@7/0, conio_x16_init::@8/1, vera_layer_mode_tile::@23/vera_layer_set_mapbase::layer#0 )
  [204] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1
  [205] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0]
  [206] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3
  to:vera_layer_set_mapbase::@return
vera_layer_set_mapbase::@return: scope:[vera_layer_set_mapbase]  from vera_layer_set_mapbase
  [207] return 
  to:@return

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from conio_x16_init::@1 cscroll::@5 main::@15 main::@21 main::@32 main::@34
  [208] gotoxy::y#7 = phi( conio_x16_init::@1/gotoxy::y#1, cscroll::@5/gotoxy::y#2, main::@15/$19, main::@21/$1d, main::@32/$1a, main::@34/$1d )
  [209] if(gotoxy::y#7<=conio_screen_height) goto gotoxy::@4
  to:gotoxy::@1
gotoxy::@4: scope:[gotoxy]  from gotoxy
  [210] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@4
  [211] gotoxy::y#10 = phi( gotoxy::@4/gotoxy::y#7, gotoxy/0 )
  [212] if(0<conio_screen_width) goto gotoxy::@2
  to:gotoxy::@3
gotoxy::@3: scope:[gotoxy]  from gotoxy::@1
  [213] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@3
  [214] conio_cursor_x[conio_screen_layer] = 0
  [215] conio_cursor_y[conio_screen_layer] = gotoxy::y#10
  [216] gotoxy::$6 = (word)gotoxy::y#10
  [217] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift
  [218] gotoxy::$5 = conio_screen_layer << 1
  [219] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [220] return 
  to:@return

void memcpy_in_vram(byte memcpy_in_vram::dest_bank , void* memcpy_in_vram::dest , byte memcpy_in_vram::dest_increment , byte memcpy_in_vram::src_bank , void* memcpy_in_vram::src , byte memcpy_in_vram::src_increment , word memcpy_in_vram::num)
memcpy_in_vram: scope:[memcpy_in_vram]  from insertup::@2 main
  [221] memcpy_in_vram::num#3 = phi( insertup::@2/memcpy_in_vram::num#0, main/$100*8 )
  [221] memcpy_in_vram::dest_bank#2 = phi( insertup::@2/0, main/1 )
  [221] memcpy_in_vram::dest#2 = phi( insertup::@2/memcpy_in_vram::dest#0, main/(void*)(byte*) 61440 )
  [221] memcpy_in_vram::src#2 = phi( insertup::@2/memcpy_in_vram::src#3, main/(void*)(byte*) 63488 )
  [222] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [223] memcpy_in_vram::$0 = byte0  memcpy_in_vram::src#2
  [224] *VERA_ADDRX_L = memcpy_in_vram::$0
  [225] memcpy_in_vram::$1 = byte1  memcpy_in_vram::src#2
  [226] *VERA_ADDRX_M = memcpy_in_vram::$1
  [227] *VERA_ADDRX_H = VERA_INC_1
  [228] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL
  [229] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#2
  [230] *VERA_ADDRX_L = memcpy_in_vram::$3
  [231] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#2
  [232] *VERA_ADDRX_M = memcpy_in_vram::$4
  [233] memcpy_in_vram::$5 = VERA_INC_1 | memcpy_in_vram::dest_bank#2
  [234] *VERA_ADDRX_H = memcpy_in_vram::$5
  to:memcpy_in_vram::@1
memcpy_in_vram::@1: scope:[memcpy_in_vram]  from memcpy_in_vram memcpy_in_vram::@2
  [235] memcpy_in_vram::i#2 = phi( memcpy_in_vram/0, memcpy_in_vram::@2/memcpy_in_vram::i#1 )
  [236] if(memcpy_in_vram::i#2<memcpy_in_vram::num#3) goto memcpy_in_vram::@2
  to:memcpy_in_vram::@return
memcpy_in_vram::@return: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  [237] return 
  to:@return
memcpy_in_vram::@2: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  [238] *VERA_DATA1 = *VERA_DATA0
  [239] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2
  to:memcpy_in_vram::@1

void vera_layer_mode_tile(byte vera_layer_mode_tile::layer , dword vera_layer_mode_tile::mapbase_address , dword vera_layer_mode_tile::tilebase_address , word vera_layer_mode_tile::mapwidth , word vera_layer_mode_tile::mapheight , byte vera_layer_mode_tile::tilewidth , byte vera_layer_mode_tile::tileheight , byte vera_layer_mode_tile::color_depth)
vera_layer_mode_tile: scope:[vera_layer_mode_tile]  from main::@12 vera_layer_mode_text
  [240] vera_layer_mode_tile::tileheight#10 = phi( main::@12/8, vera_layer_mode_text/vera_layer_mode_text::tileheight#0 )
  [240] vera_layer_mode_tile::tilewidth#10 = phi( main::@12/8, vera_layer_mode_text/vera_layer_mode_text::tilewidth#0 )
  [240] vera_layer_mode_tile::tilebase_address#10 = phi( main::@12/$1f000, vera_layer_mode_text/vera_layer_mode_text::tilebase_address#0 )
  [240] vera_layer_mode_tile::mapbase_address#10 = phi( main::@12/$14000, vera_layer_mode_text/vera_layer_mode_text::mapbase_address#0 )
  [240] vera_layer_mode_tile::mapheight#10 = phi( main::@12/$40, vera_layer_mode_text/vera_layer_mode_text::mapheight#0 )
  [240] vera_layer_mode_tile::layer#10 = phi( main::@12/1, vera_layer_mode_text/vera_layer_mode_text::layer#0 )
  [240] vera_layer_mode_tile::mapwidth#10 = phi( main::@12/$80, vera_layer_mode_text/vera_layer_mode_text::mapwidth#0 )
  to:vera_layer_mode_tile::@1
vera_layer_mode_tile::@1: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  [241] if(vera_layer_mode_tile::mapwidth#10==$20) goto vera_layer_mode_tile::@5
  to:vera_layer_mode_tile::@2
vera_layer_mode_tile::@2: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  [242] if(vera_layer_mode_tile::mapwidth#10==$40) goto vera_layer_mode_tile::@6
  to:vera_layer_mode_tile::@3
vera_layer_mode_tile::@3: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  [243] if(vera_layer_mode_tile::mapwidth#10==$80) goto vera_layer_mode_tile::@7
  to:vera_layer_mode_tile::@4
vera_layer_mode_tile::@4: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3
  [244] if(vera_layer_mode_tile::mapwidth#10!=$100) goto vera_layer_mode_tile::@9
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@8: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@4
  [245] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 9
  [246] vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#10 << 1
  [247] vera_layer_rowskip[vera_layer_mode_tile::$14] = $200
  to:vera_layer_mode_tile::@9
vera_layer_mode_tile::@9: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@4 vera_layer_mode_tile::@5 vera_layer_mode_tile::@6 vera_layer_mode_tile::@7 vera_layer_mode_tile::@8
  [248] vera_layer_mode_tile::config#21 = phi( vera_layer_mode_tile::@4/VERA_LAYER_COLOR_DEPTH_1BPP, vera_layer_mode_tile::@5/VERA_LAYER_COLOR_DEPTH_1BPP, vera_layer_mode_tile::@6/VERA_LAYER_WIDTH_64, vera_layer_mode_tile::@7/VERA_LAYER_WIDTH_128, vera_layer_mode_tile::@8/VERA_LAYER_WIDTH_256 )
  [249] if(vera_layer_mode_tile::mapheight#10==$20) goto vera_layer_mode_tile::@16
  to:vera_layer_mode_tile::@10
vera_layer_mode_tile::@10: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@9
  [250] if(vera_layer_mode_tile::mapheight#10==$40) goto vera_layer_mode_tile::@13
  to:vera_layer_mode_tile::@11
vera_layer_mode_tile::@11: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@10
  [251] if(vera_layer_mode_tile::mapheight#10==$80) goto vera_layer_mode_tile::@14
  to:vera_layer_mode_tile::@12
vera_layer_mode_tile::@12: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@11
  [252] if(vera_layer_mode_tile::mapheight#10!=$100) goto vera_layer_mode_tile::@16
  to:vera_layer_mode_tile::@15
vera_layer_mode_tile::@15: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@12
  [253] vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_256
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@16: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@12 vera_layer_mode_tile::@13 vera_layer_mode_tile::@14 vera_layer_mode_tile::@15 vera_layer_mode_tile::@9
  [254] vera_layer_mode_tile::config#25 = phi( vera_layer_mode_tile::@12/vera_layer_mode_tile::config#21, vera_layer_mode_tile::@9/vera_layer_mode_tile::config#21, vera_layer_mode_tile::@13/vera_layer_mode_tile::config#10, vera_layer_mode_tile::@14/vera_layer_mode_tile::config#11, vera_layer_mode_tile::@15/vera_layer_mode_tile::config#12 )
  [255] vera_layer_set_config::layer#0 = vera_layer_mode_tile::layer#10
  [256] vera_layer_set_config::config#0 = vera_layer_mode_tile::config#25
  [257] call vera_layer_set_config 
  to:vera_layer_mode_tile::@23
vera_layer_mode_tile::@23: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@16
  [258] vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#10
  [259] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 << 1
  [260] vera_mapbase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$1
  [261] vera_layer_mode_tile::$2 = byte2  vera_layer_mode_tile::mapbase_address#10
  [262] vera_mapbase_bank[vera_layer_mode_tile::layer#10] = vera_layer_mode_tile::$2
  [263] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 << 2
  [264] vera_mapbase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::mapbase_address#10
  [265] vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#10 >> 1
  [266] vera_layer_mode_tile::mapbase#0 = byte1  vera_layer_mode_tile::mapbase_address#0
  [267] vera_layer_set_mapbase::layer#0 = vera_layer_mode_tile::layer#10
  [268] vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
  [269] call vera_layer_set_mapbase 
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@24: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@23
  [270] vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#10
  [271] vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6
  [272] vera_layer_mode_tile::$7 = byte2  vera_layer_mode_tile::tilebase_address#10
  [273] vera_tilebase_bank[vera_layer_mode_tile::layer#10] = vera_layer_mode_tile::$7
  [274] vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#10
  [275] vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#10 >> 1
  [276] vera_layer_mode_tile::tilebase#0 = byte1  vera_layer_mode_tile::tilebase_address#0
  [277] vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK
  [278] if(vera_layer_mode_tile::tilewidth#10==8) goto vera_layer_mode_tile::@19
  to:vera_layer_mode_tile::@17
vera_layer_mode_tile::@17: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@24
  [279] if(vera_layer_mode_tile::tilewidth#10!=$10) goto vera_layer_mode_tile::@19
  to:vera_layer_mode_tile::@18
vera_layer_mode_tile::@18: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@17
  [280] vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_16
  to:vera_layer_mode_tile::@19
vera_layer_mode_tile::@19: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@17 vera_layer_mode_tile::@18 vera_layer_mode_tile::@24
  [281] vera_layer_mode_tile::tilebase#12 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilebase#1, vera_layer_mode_tile::@24/vera_layer_mode_tile::tilebase#1, vera_layer_mode_tile::@18/vera_layer_mode_tile::tilebase#3 )
  [282] if(vera_layer_mode_tile::tileheight#10==8) goto vera_layer_mode_tile::@22
  to:vera_layer_mode_tile::@20
vera_layer_mode_tile::@20: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@19
  [283] if(vera_layer_mode_tile::tileheight#10!=$10) goto vera_layer_mode_tile::@22
  to:vera_layer_mode_tile::@21
vera_layer_mode_tile::@21: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@20
  [284] vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_16
  to:vera_layer_mode_tile::@22
vera_layer_mode_tile::@22: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@19 vera_layer_mode_tile::@20 vera_layer_mode_tile::@21
  [285] vera_layer_mode_tile::tilebase#10 = phi( vera_layer_mode_tile::@20/vera_layer_mode_tile::tilebase#12, vera_layer_mode_tile::@19/vera_layer_mode_tile::tilebase#12, vera_layer_mode_tile::@21/vera_layer_mode_tile::tilebase#5 )
  [286] vera_layer_set_tilebase::layer#0 = vera_layer_mode_tile::layer#10
  [287] vera_layer_set_tilebase::tilebase#0 = vera_layer_mode_tile::tilebase#10
  [288] call vera_layer_set_tilebase 
  to:vera_layer_mode_tile::@return
vera_layer_mode_tile::@return: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@22
  [289] return 
  to:@return
vera_layer_mode_tile::@14: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@11
  [290] vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_128
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@13: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@10
  [291] vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_64
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@7: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3
  [292] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 8
  [293] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#10 << 1
  [294] vera_layer_rowskip[vera_layer_mode_tile::$13] = $100
  to:vera_layer_mode_tile::@9
vera_layer_mode_tile::@6: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  [295] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 7
  [296] vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#10 << 1
  [297] vera_layer_rowskip[vera_layer_mode_tile::$12] = $80
  to:vera_layer_mode_tile::@9
vera_layer_mode_tile::@5: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  [298] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 6
  [299] vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#10 << 1
  [300] vera_layer_rowskip[vera_layer_mode_tile::$11] = $40
  to:vera_layer_mode_tile::@9

void vera_layer_mode_bitmap(byte vera_layer_mode_bitmap::layer , dword vera_layer_mode_bitmap::bitmap_address , word vera_layer_mode_bitmap::mapwidth , word vera_layer_mode_bitmap::color_depth)
vera_layer_mode_bitmap: scope:[vera_layer_mode_bitmap]  from main::@13
  [301] phi()
  to:vera_layer_mode_bitmap::@1
vera_layer_mode_bitmap::@1: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap
  [302] *vera_tilebase_offset = 0
  [303] *vera_tilebase_bank = 0
  [304] *vera_tilebase_address = vera_layer_mode_bitmap::bitmap_address#1
  to:vera_layer_mode_bitmap::vera_display_set_scale_double1
vera_layer_mode_bitmap::vera_display_set_scale_double1: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@1
  [305] *VERA_DC_HSCALE = $40
  [306] *VERA_DC_VSCALE = $40
  to:vera_layer_mode_bitmap::@2
vera_layer_mode_bitmap::@2: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::vera_display_set_scale_double1
  [307] phi()
  [308] call vera_layer_set_config 
  to:vera_layer_mode_bitmap::@3
vera_layer_mode_bitmap::@3: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@2
  [309] phi()
  [310] call vera_layer_set_tilebase 
  to:vera_layer_mode_bitmap::@return
vera_layer_mode_bitmap::@return: scope:[vera_layer_mode_bitmap]  from vera_layer_mode_bitmap::@3
  [311] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main::@11 main::@6 main::@9
  [312] clrscr::line_text#0 = (byte*)CONIO_SCREEN_TEXT#104
  [313] vera_layer_get_backcolor::layer#0 = conio_screen_layer
  [314] call vera_layer_get_backcolor 
  [315] vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1
  to:clrscr::@7
clrscr::@7: scope:[clrscr]  from clrscr
  [316] clrscr::$0 = vera_layer_get_backcolor::return#0
  [317] clrscr::$1 = clrscr::$0 << 4
  [318] vera_layer_get_textcolor::layer#0 = conio_screen_layer
  [319] call vera_layer_get_textcolor 
  [320] vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1
  to:clrscr::@8
clrscr::@8: scope:[clrscr]  from clrscr::@7
  [321] clrscr::$2 = vera_layer_get_textcolor::return#0
  [322] clrscr::color#0 = clrscr::$1 | clrscr::$2
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr::@6 clrscr::@8
  [323] clrscr::line_text#2 = phi( clrscr::@6/clrscr::line_text#1, clrscr::@8/clrscr::line_text#0 )
  [323] clrscr::l#2 = phi( clrscr::@6/clrscr::l#1, clrscr::@8/0 )
  [324] if(clrscr::l#2<conio_height) goto clrscr::@2
  to:clrscr::@3
clrscr::@3: scope:[clrscr]  from clrscr::@1
  [325] conio_cursor_x[conio_screen_layer] = 0
  [326] conio_cursor_y[conio_screen_layer] = 0
  [327] clrscr::$9 = conio_screen_layer << 1
  [328] conio_line_text[clrscr::$9] = 0
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@3
  [329] return 
  to:@return
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [330] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [331] clrscr::$5 = byte0  clrscr::line_text#2
  [332] *VERA_ADDRX_L = clrscr::$5
  [333] clrscr::$6 = byte1  clrscr::line_text#2
  [334] *VERA_ADDRX_M = clrscr::$6
  [335] clrscr::$7 = CONIO_SCREEN_BANK#15 | VERA_INC_1
  [336] *VERA_ADDRX_H = clrscr::$7
  to:clrscr::@4
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  [337] clrscr::c#2 = phi( clrscr::@2/0, clrscr::@5/clrscr::c#1 )
  [338] if(clrscr::c#2<conio_width) goto clrscr::@5
  to:clrscr::@6
clrscr::@6: scope:[clrscr]  from clrscr::@4
  [339] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip
  [340] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@5: scope:[clrscr]  from clrscr::@4
  [341] *VERA_DATA0 = ' '
  [342] *VERA_DATA0 = clrscr::color#0
  [343] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@4

void cputs(const byte* cputs::s)
cputs: scope:[cputs]  from main::@10 main::@16 main::@17 main::@18 main::@19 main::@33 main::@8
  [344] cputs::s#9 = phi( main::@8/main::s4, main::@10/main::s4, main::@16/main::s, main::@17/main::s1, main::@18/main::s2, main::@19/main::s3, main::@33/main::s5 )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [345] cputs::s#8 = phi( cputs/cputs::s#9, cputs::@2/cputs::s#0 )
  [346] cputs::c#1 = *cputs::s#8
  [347] cputs::s#0 = ++ cputs::s#8
  [348] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [349] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [350] cputc::c#0 = cputs::c#1
  [351] call cputc 
  to:cputs::@1

void bitmap_init(byte bitmap_init::layer , dword bitmap_init::address)
bitmap_init: scope:[bitmap_init]  from main::@7
  [352] __bitmap_address = bitmap_init::address#0
  [353] __bitmap_layer = bitmap_init::layer#0
  [354] bitmap_init::vera_layer_get_color_depth1_layer#0 = __bitmap_layer
  to:bitmap_init::vera_layer_get_color_depth1
bitmap_init::vera_layer_get_color_depth1: scope:[bitmap_init]  from bitmap_init
  [355] bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#0 << 1
  [356] bitmap_init::vera_layer_get_color_depth1_config#0 = vera_layer_config[bitmap_init::vera_layer_get_color_depth1_$1]
  [357] bitmap_init::vera_layer_get_color_depth1_$0 = *bitmap_init::vera_layer_get_color_depth1_config#0 & VERA_LAYER_COLOR_DEPTH_MASK
  [358] bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0
  to:bitmap_init::vera_layer_get_color_depth1_@return
bitmap_init::vera_layer_get_color_depth1_@return: scope:[bitmap_init]  from bitmap_init::vera_layer_get_color_depth1
  [359] bitmap_init::vera_layer_get_color_depth1_return#1 = bitmap_init::vera_layer_get_color_depth1_return#0
  to:bitmap_init::@16
bitmap_init::@16: scope:[bitmap_init]  from bitmap_init::vera_layer_get_color_depth1_@return
  [360] bitmap_init::$0 = bitmap_init::vera_layer_get_color_depth1_return#1
  [361] __bitmap_color_depth = bitmap_init::$0
  [362] call vera_display_get_hscale 
  [363] vera_display_get_hscale::return#2 = vera_display_get_hscale::return#0
  to:bitmap_init::@17
bitmap_init::@17: scope:[bitmap_init]  from bitmap_init::@16
  [364] bitmap_init::$1 = vera_display_get_hscale::return#2
  [365] __bitmap_hscale = bitmap_init::$1
  [366] call vera_display_get_vscale 
  [367] vera_display_get_vscale::return#2 = vera_display_get_vscale::return#0
  to:bitmap_init::@18
bitmap_init::@18: scope:[bitmap_init]  from bitmap_init::@17
  [368] bitmap_init::$2 = vera_display_get_vscale::return#2
  [369] __bitmap_vscale = bitmap_init::$2
  [370] bitmap_init::bitmask#0 = bitmasks[__bitmap_color_depth]
  [371] bitmap_init::bitshift#0 = bitshifts[__bitmap_color_depth]
  to:bitmap_init::@1
bitmap_init::@1: scope:[bitmap_init]  from bitmap_init::@18 bitmap_init::@7
  [372] bitmap_init::bitshift#10 = phi( bitmap_init::@18/bitmap_init::bitshift#0, bitmap_init::@7/bitmap_init::bitshift#14 )
  [372] bitmap_init::bitmask#10 = phi( bitmap_init::@18/bitmap_init::bitmask#0, bitmap_init::@7/bitmap_init::bitmask#16 )
  [372] bitmap_init::x#10 = phi( bitmap_init::@18/0, bitmap_init::@7/bitmap_init::x#1 )
  [373] if(__bitmap_color_depth!=0) goto bitmap_init::@2
  to:bitmap_init::@8
bitmap_init::@8: scope:[bitmap_init]  from bitmap_init::@1
  [374] bitmap_init::$7 = bitmap_init::x#10 >> 3
  [375] bitmap_init::$23 = bitmap_init::x#10 << 1
  [376] bitmap_init::$29 = __bitmap_plot_x + bitmap_init::$23
  [377] *bitmap_init::$29 = bitmap_init::$7
  [378] bitmap_init::$30 = __bitmap_plot_bitmask + bitmap_init::x#10
  [379] *bitmap_init::$30 = bitmap_init::bitmask#10
  [380] bitmap_init::$31 = __bitmap_plot_bitshift + bitmap_init::x#10
  [381] *bitmap_init::$31 = (byte)bitmap_init::bitshift#10
  [382] bitmap_init::bitshift#1 = bitmap_init::bitshift#10 - 1
  [383] bitmap_init::bitmask#1 = bitmap_init::bitmask#10 >> 1
  to:bitmap_init::@2
bitmap_init::@2: scope:[bitmap_init]  from bitmap_init::@1 bitmap_init::@8
  [384] bitmap_init::bitshift#11 = phi( bitmap_init::@1/bitmap_init::bitshift#10, bitmap_init::@8/bitmap_init::bitshift#1 )
  [384] bitmap_init::bitmask#11 = phi( bitmap_init::@1/bitmap_init::bitmask#10, bitmap_init::@8/bitmap_init::bitmask#1 )
  [385] if(__bitmap_color_depth!=1) goto bitmap_init::@3
  to:bitmap_init::@9
bitmap_init::@9: scope:[bitmap_init]  from bitmap_init::@2
  [386] bitmap_init::$10 = bitmap_init::x#10 >> 2
  [387] bitmap_init::$24 = bitmap_init::x#10 << 1
  [388] bitmap_init::$32 = __bitmap_plot_x + bitmap_init::$24
  [389] *bitmap_init::$32 = bitmap_init::$10
  [390] bitmap_init::$33 = __bitmap_plot_bitmask + bitmap_init::x#10
  [391] *bitmap_init::$33 = bitmap_init::bitmask#11
  [392] bitmap_init::$34 = __bitmap_plot_bitshift + bitmap_init::x#10
  [393] *bitmap_init::$34 = (byte)bitmap_init::bitshift#11
  [394] bitmap_init::bitshift#2 = bitmap_init::bitshift#11 - 2
  [395] bitmap_init::bitmask#2 = bitmap_init::bitmask#11 >> 2
  to:bitmap_init::@3
bitmap_init::@3: scope:[bitmap_init]  from bitmap_init::@2 bitmap_init::@9
  [396] bitmap_init::bitshift#12 = phi( bitmap_init::@2/bitmap_init::bitshift#11, bitmap_init::@9/bitmap_init::bitshift#2 )
  [396] bitmap_init::bitmask#12 = phi( bitmap_init::@2/bitmap_init::bitmask#11, bitmap_init::@9/bitmap_init::bitmask#2 )
  [397] if(__bitmap_color_depth!=2) goto bitmap_init::@4
  to:bitmap_init::@10
bitmap_init::@10: scope:[bitmap_init]  from bitmap_init::@3
  [398] bitmap_init::$13 = bitmap_init::x#10 >> 1
  [399] bitmap_init::$25 = bitmap_init::x#10 << 1
  [400] bitmap_init::$35 = __bitmap_plot_x + bitmap_init::$25
  [401] *bitmap_init::$35 = bitmap_init::$13
  [402] bitmap_init::$36 = __bitmap_plot_bitmask + bitmap_init::x#10
  [403] *bitmap_init::$36 = bitmap_init::bitmask#12
  [404] bitmap_init::$37 = __bitmap_plot_bitshift + bitmap_init::x#10
  [405] *bitmap_init::$37 = (byte)bitmap_init::bitshift#12
  [406] bitmap_init::bitshift#3 = bitmap_init::bitshift#12 - 4
  [407] bitmap_init::bitmask#3 = bitmap_init::bitmask#12 >> 4
  to:bitmap_init::@4
bitmap_init::@4: scope:[bitmap_init]  from bitmap_init::@10 bitmap_init::@3
  [408] bitmap_init::bitmask#13 = phi( bitmap_init::@10/bitmap_init::bitmask#3, bitmap_init::@3/bitmap_init::bitmask#12 )
  [408] bitmap_init::bitshift#13 = phi( bitmap_init::@10/bitmap_init::bitshift#3, bitmap_init::@3/bitmap_init::bitshift#12 )
  [409] if(__bitmap_color_depth!=3) goto bitmap_init::@5
  to:bitmap_init::@11
bitmap_init::@11: scope:[bitmap_init]  from bitmap_init::@4
  [410] bitmap_init::$26 = bitmap_init::x#10 << 1
  [411] bitmap_init::$38 = __bitmap_plot_x + bitmap_init::$26
  [412] *bitmap_init::$38 = bitmap_init::x#10
  [413] bitmap_init::$39 = __bitmap_plot_bitmask + bitmap_init::x#10
  [414] *bitmap_init::$39 = bitmap_init::bitmask#13
  [415] bitmap_init::$40 = __bitmap_plot_bitshift + bitmap_init::x#10
  [416] *bitmap_init::$40 = (byte)bitmap_init::bitshift#13
  to:bitmap_init::@5
bitmap_init::@5: scope:[bitmap_init]  from bitmap_init::@11 bitmap_init::@4
  [417] if(bitmap_init::bitshift#13>=0) goto bitmap_init::@6
  to:bitmap_init::@12
bitmap_init::@12: scope:[bitmap_init]  from bitmap_init::@5
  [418] bitmap_init::bitshift#4 = bitshifts[__bitmap_color_depth]
  to:bitmap_init::@6
bitmap_init::@6: scope:[bitmap_init]  from bitmap_init::@12 bitmap_init::@5
  [419] bitmap_init::bitshift#14 = phi( bitmap_init::@12/bitmap_init::bitshift#4, bitmap_init::@5/bitmap_init::bitshift#13 )
  [420] if(bitmap_init::bitmask#13!=0) goto bitmap_init::@7
  to:bitmap_init::@13
bitmap_init::@13: scope:[bitmap_init]  from bitmap_init::@6
  [421] bitmap_init::bitmask#4 = bitmasks[__bitmap_color_depth]
  to:bitmap_init::@7
bitmap_init::@7: scope:[bitmap_init]  from bitmap_init::@13 bitmap_init::@6
  [422] bitmap_init::bitmask#16 = phi( bitmap_init::@13/bitmap_init::bitmask#4, bitmap_init::@6/bitmap_init::bitmask#13 )
  [423] bitmap_init::x#1 = ++ bitmap_init::x#10
  [424] if(bitmap_init::x#1!=$280) goto bitmap_init::@1
  to:bitmap_init::@14
bitmap_init::@14: scope:[bitmap_init]  from bitmap_init::@7
  [425] bitmap_init::$3 = __bitmap_color_depth << 2
  [426] bitmap_init::$4 = bitmap_init::$3 + __bitmap_hscale
  [427] bitmap_init::$27 = bitmap_init::$4 << 1
  [428] bitmap_init::hdelta#0 = hdeltas[bitmap_init::$27]
  [429] bitmap_init::yoffs#0 = __bitmap_address
  to:bitmap_init::@15
bitmap_init::@15: scope:[bitmap_init]  from bitmap_init::@14 bitmap_init::@15
  [430] bitmap_init::yoffs#2 = phi( bitmap_init::@14/bitmap_init::yoffs#0, bitmap_init::@15/bitmap_init::yoffs#1 )
  [430] bitmap_init::y#2 = phi( bitmap_init::@14/0, bitmap_init::@15/bitmap_init::y#1 )
  [431] bitmap_init::$28 = bitmap_init::y#2 << 2
  [432] bitmap_init::$41 = __bitmap_plot_y + bitmap_init::$28
  [433] *bitmap_init::$41 = bitmap_init::yoffs#2
  [434] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + bitmap_init::hdelta#0
  [435] bitmap_init::y#1 = ++ bitmap_init::y#2
  [436] if(bitmap_init::y#1!=$1e0) goto bitmap_init::@15
  to:bitmap_init::@return
bitmap_init::@return: scope:[bitmap_init]  from bitmap_init::@15
  [437] return 
  to:@return

void bitmap_clear()
bitmap_clear: scope:[bitmap_clear]  from main::@20
  [438] bitmap_clear::$6 = __bitmap_vscale << 1
  [439] bitmap_clear::vdelta#0 = vdeltas[bitmap_clear::$6]
  [440] bitmap_clear::$0 = __bitmap_color_depth << 2
  [441] bitmap_clear::$1 = bitmap_clear::$0 + __bitmap_hscale
  [442] bitmap_clear::$7 = bitmap_clear::$1 << 1
  [443] bitmap_clear::hdelta#0 = hdeltas[bitmap_clear::$7]
  [444] mul16u::a#0 = bitmap_clear::hdelta#0
  [445] mul16u::b#0 = bitmap_clear::vdelta#0
  [446] call mul16u 
  [447] mul16u::return#0 = mul16u::res#2
  to:bitmap_clear::@1
bitmap_clear::@1: scope:[bitmap_clear]  from bitmap_clear
  [448] bitmap_clear::count#0 = mul16u::return#0
  [449] bitmap_clear::vbank#0 = byte2  __bitmap_address
  [450] bitmap_clear::vdest#0 = word0  __bitmap_address
  [451] memset_vram::vbank#0 = bitmap_clear::vbank#0
  [452] memset_vram::vdest#0 = (void*)bitmap_clear::vdest#0
  [453] memset_vram::num#0 = bitmap_clear::count#0
  [454] call memset_vram 
  to:bitmap_clear::@return
bitmap_clear::@return: scope:[bitmap_clear]  from bitmap_clear::@1
  [455] return 
  to:@return

byte kbhit()
kbhit: scope:[kbhit]  from main::@1 main::@3
  [456] kbhit::ch = 0
  kickasm( uses kbhit::chptr uses kbhit::IN_DEV uses kbhit::GETIN) {{ jsr _kbhit
        bne L3

        jmp continue1

        .var via1 = $9f60                  //VIA#1
        .var d1pra = via1+1

    _kbhit:
        ldy     d1pra       // The count of keys pressed is stored in RAM bank 0.
        stz     d1pra       // Set d1pra to zero to access RAM bank 0.
        lda     $A00A       // Get number of characters from this address in the ROM of the CX16 (ROM 38).
        sty     d1pra       // Set d1pra to previous value.
        rts

    L3:
        ldy     IN_DEV          // Save current input device
        stz     IN_DEV          // Keyboard
        phy
        jsr     GETIN           // Read char, and return in .A
        ply
        sta     chptr           // Store the character read in ch
        sty     IN_DEV          // Restore input device
        ldx     #>$0000
        rts

    continue1:
        nop
      }}
  [458] kbhit::return#0 = kbhit::ch
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  [459] kbhit::return#1 = kbhit::return#0
  [460] return 
  to:@return

void bitmap_line(word bitmap_line::x0 , word bitmap_line::x1 , word bitmap_line::y0 , word bitmap_line::y1 , byte bitmap_line::c)
bitmap_line: scope:[bitmap_line]  from main::@31 main::@4
  [461] bitmap_line::c#10 = phi( main::@31/bitmap_line::c#0, main::@4/bitmap_line::c#1 )
  [461] bitmap_line::y1#10 = phi( main::@31/bitmap_line::y1#0, main::@4/$c7 )
  [461] bitmap_line::y0#10 = phi( main::@31/bitmap_line::y0#0, main::@4/0 )
  [461] bitmap_line::x1#10 = phi( main::@31/bitmap_line::x1#0, main::@4/bitmap_line::x1#1 )
  [461] bitmap_line::x0#10 = phi( main::@31/bitmap_line::x0#0, main::@4/bitmap_line::x0#1 )
  [462] if(bitmap_line::x0#10<bitmap_line::x1#10) goto bitmap_line::@1
  to:bitmap_line::@2
bitmap_line::@2: scope:[bitmap_line]  from bitmap_line
  [463] bitmap_line::xd#2 = bitmap_line::x0#10 - bitmap_line::x1#10
  [464] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@7
  to:bitmap_line::@3
bitmap_line::@3: scope:[bitmap_line]  from bitmap_line::@2
  [465] bitmap_line::yd#2 = bitmap_line::y0#10 - bitmap_line::y1#10
  [466] if(bitmap_line::yd#2<bitmap_line::xd#2) goto bitmap_line::@8
  to:bitmap_line::@4
bitmap_line::@4: scope:[bitmap_line]  from bitmap_line::@3
  [467] bitmap_line_ydxi::y#0 = bitmap_line::y1#10
  [468] bitmap_line_ydxi::x#0 = bitmap_line::x1#10
  [469] bitmap_line_ydxi::y1#0 = bitmap_line::y0#10
  [470] bitmap_line_ydxi::yd#0 = bitmap_line::yd#2
  [471] bitmap_line_ydxi::xd#0 = bitmap_line::xd#2
  [472] bitmap_line_ydxi::c#0 = bitmap_line::c#10
  [473] call bitmap_line_ydxi 
  to:bitmap_line::@return
bitmap_line::@return: scope:[bitmap_line]  from bitmap_line::@10 bitmap_line::@12 bitmap_line::@13 bitmap_line::@14 bitmap_line::@4 bitmap_line::@6 bitmap_line::@8 bitmap_line::@9
  [474] return 
  to:@return
bitmap_line::@8: scope:[bitmap_line]  from bitmap_line::@3
  [475] bitmap_line_xdyi::x#0 = bitmap_line::x1#10
  [476] bitmap_line_xdyi::y#0 = bitmap_line::y1#10
  [477] bitmap_line_xdyi::x1#0 = bitmap_line::x0#10
  [478] bitmap_line_xdyi::xd#0 = bitmap_line::xd#2
  [479] bitmap_line_xdyi::yd#0 = bitmap_line::yd#2
  [480] bitmap_line_xdyi::c#0 = bitmap_line::c#10
  [481] call bitmap_line_xdyi 
  to:bitmap_line::@return
bitmap_line::@7: scope:[bitmap_line]  from bitmap_line::@2
  [482] bitmap_line::yd#1 = bitmap_line::y1#10 - bitmap_line::y0#10
  [483] if(bitmap_line::yd#1<bitmap_line::xd#2) goto bitmap_line::@9
  to:bitmap_line::@10
bitmap_line::@10: scope:[bitmap_line]  from bitmap_line::@7
  [484] bitmap_line_ydxd::y#0 = bitmap_line::y0#10
  [485] bitmap_line_ydxd::x#0 = bitmap_line::x0#10
  [486] bitmap_line_ydxd::y1#0 = bitmap_line::y1#10
  [487] bitmap_line_ydxd::yd#0 = bitmap_line::yd#1
  [488] bitmap_line_ydxd::xd#0 = bitmap_line::xd#2
  [489] bitmap_line_ydxd::c#0 = bitmap_line::c#10
  [490] call bitmap_line_ydxd 
  to:bitmap_line::@return
bitmap_line::@9: scope:[bitmap_line]  from bitmap_line::@7
  [491] bitmap_line_xdyd::x#0 = bitmap_line::x1#10
  [492] bitmap_line_xdyd::y#0 = bitmap_line::y1#10
  [493] bitmap_line_xdyd::x1#0 = bitmap_line::x0#10
  [494] bitmap_line_xdyd::xd#0 = bitmap_line::xd#2
  [495] bitmap_line_xdyd::yd#0 = bitmap_line::yd#1
  [496] bitmap_line_xdyd::c#0 = bitmap_line::c#10
  [497] call bitmap_line_xdyd 
  to:bitmap_line::@return
bitmap_line::@1: scope:[bitmap_line]  from bitmap_line
  [498] bitmap_line::xd#1 = bitmap_line::x1#10 - bitmap_line::x0#10
  [499] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@11
  to:bitmap_line::@5
bitmap_line::@5: scope:[bitmap_line]  from bitmap_line::@1
  [500] bitmap_line::yd#10 = bitmap_line::y0#10 - bitmap_line::y1#10
  [501] if(bitmap_line::yd#10<bitmap_line::xd#1) goto bitmap_line::@12
  to:bitmap_line::@6
bitmap_line::@6: scope:[bitmap_line]  from bitmap_line::@5
  [502] bitmap_line_ydxd::y#1 = bitmap_line::y1#10
  [503] bitmap_line_ydxd::x#1 = bitmap_line::x1#10
  [504] bitmap_line_ydxd::y1#1 = bitmap_line::y0#10
  [505] bitmap_line_ydxd::yd#1 = bitmap_line::yd#10
  [506] bitmap_line_ydxd::xd#1 = bitmap_line::xd#1
  [507] bitmap_line_ydxd::c#1 = bitmap_line::c#10
  [508] call bitmap_line_ydxd 
  to:bitmap_line::@return
bitmap_line::@12: scope:[bitmap_line]  from bitmap_line::@5
  [509] bitmap_line_xdyd::x#1 = bitmap_line::x0#10
  [510] bitmap_line_xdyd::y#1 = bitmap_line::y0#10
  [511] bitmap_line_xdyd::x1#1 = bitmap_line::x1#10
  [512] bitmap_line_xdyd::xd#1 = bitmap_line::xd#1
  [513] bitmap_line_xdyd::yd#1 = bitmap_line::yd#10
  [514] bitmap_line_xdyd::c#1 = bitmap_line::c#10
  [515] call bitmap_line_xdyd 
  to:bitmap_line::@return
bitmap_line::@11: scope:[bitmap_line]  from bitmap_line::@1
  [516] bitmap_line::yd#11 = bitmap_line::y1#10 - bitmap_line::y0#10
  [517] if(bitmap_line::yd#11<bitmap_line::xd#1) goto bitmap_line::@13
  to:bitmap_line::@14
bitmap_line::@14: scope:[bitmap_line]  from bitmap_line::@11
  [518] bitmap_line_ydxi::y#1 = bitmap_line::y0#10
  [519] bitmap_line_ydxi::x#1 = bitmap_line::x0#10
  [520] bitmap_line_ydxi::y1#1 = bitmap_line::y1#10
  [521] bitmap_line_ydxi::yd#1 = bitmap_line::yd#11
  [522] bitmap_line_ydxi::xd#1 = bitmap_line::xd#1
  [523] bitmap_line_ydxi::c#1 = bitmap_line::c#10
  [524] call bitmap_line_ydxi 
  to:bitmap_line::@return
bitmap_line::@13: scope:[bitmap_line]  from bitmap_line::@11
  [525] bitmap_line_xdyi::x#1 = bitmap_line::x0#10
  [526] bitmap_line_xdyi::y#1 = bitmap_line::y0#10
  [527] bitmap_line_xdyi::x1#1 = bitmap_line::x1#10
  [528] bitmap_line_xdyi::xd#1 = bitmap_line::xd#1
  [529] bitmap_line_xdyi::yd#1 = bitmap_line::yd#11
  [530] bitmap_line_xdyi::c#1 = bitmap_line::c#10
  [531] call bitmap_line_xdyi 
  to:bitmap_line::@return

word rand()
rand: scope:[rand]  from main::@2 main::@24 main::@26 main::@28 main::@30
  [532] rand_state#13 = phi( main::@2/rand_state#23, main::@24/rand_state#14, main::@26/rand_state#14, main::@28/rand_state#14, main::@30/rand_state#14 )
  [533] rand::$0 = rand_state#13 << 7
  [534] rand_state#0 = rand_state#13 ^ rand::$0
  [535] rand::$1 = rand_state#0 >> 9
  [536] rand_state#1 = rand_state#0 ^ rand::$1
  [537] rand::$2 = rand_state#1 << 8
  [538] rand_state#14 = rand_state#1 ^ rand::$2
  [539] rand::return#0 = rand_state#14
  to:rand::@return
rand::@return: scope:[rand]  from rand
  [540] return 
  to:@return

word modr16u(word modr16u::dividend , word modr16u::divisor , word modr16u::rem)
modr16u: scope:[modr16u]  from main::@23 main::@25 main::@27 main::@29
  [541] modr16u::divisor#4 = phi( main::@23/$140, main::@25/$140, main::@27/$c8, main::@29/$c8 )
  [541] modr16u::dividend#4 = phi( main::@23/modr16u::dividend#0, main::@25/modr16u::dividend#1, main::@27/modr16u::dividend#2, main::@29/modr16u::dividend#3 )
  [542] divr16u::dividend#1 = modr16u::dividend#4
  [543] divr16u::divisor#0 = modr16u::divisor#4
  [544] call divr16u 
  to:modr16u::@1
modr16u::@1: scope:[modr16u]  from modr16u
  [545] modr16u::return#0 = rem16u#0
  to:modr16u::@return
modr16u::@return: scope:[modr16u]  from modr16u::@1
  [546] return 
  to:@return

void vera_layer_set_text_color_mode(byte vera_layer_set_text_color_mode::layer , byte vera_layer_set_text_color_mode::color_mode)
vera_layer_set_text_color_mode: scope:[vera_layer_set_text_color_mode]  from vera_layer_mode_text::@1
  [547] vera_layer_set_text_color_mode::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
  [548] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C
  [549] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0
  to:vera_layer_set_text_color_mode::@return
vera_layer_set_text_color_mode::@return: scope:[vera_layer_set_text_color_mode]  from vera_layer_set_text_color_mode
  [550] return 
  to:@return

byte vera_layer_get_mapbase_bank(byte vera_layer_get_mapbase_bank::layer)
vera_layer_get_mapbase_bank: scope:[vera_layer_get_mapbase_bank]  from screenlayer
  [551] vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#0]
  to:vera_layer_get_mapbase_bank::@return
vera_layer_get_mapbase_bank::@return: scope:[vera_layer_get_mapbase_bank]  from vera_layer_get_mapbase_bank
  [552] return 
  to:@return

word vera_layer_get_mapbase_offset(byte vera_layer_get_mapbase_offset::layer)
vera_layer_get_mapbase_offset: scope:[vera_layer_get_mapbase_offset]  from screenlayer::@3
  [553] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1
  [554] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0]
  to:vera_layer_get_mapbase_offset::@return
vera_layer_get_mapbase_offset::@return: scope:[vera_layer_get_mapbase_offset]  from vera_layer_get_mapbase_offset
  [555] return 
  to:@return

byte vera_layer_get_rowshift(byte vera_layer_get_rowshift::layer)
vera_layer_get_rowshift: scope:[vera_layer_get_rowshift]  from screenlayer::@1
  [556] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0]
  to:vera_layer_get_rowshift::@return
vera_layer_get_rowshift::@return: scope:[vera_layer_get_rowshift]  from vera_layer_get_rowshift
  [557] return 
  to:@return

word vera_layer_get_rowskip(byte vera_layer_get_rowskip::layer)
vera_layer_get_rowskip: scope:[vera_layer_get_rowskip]  from screenlayer::@5
  [558] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1
  [559] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0]
  to:vera_layer_get_rowskip::@return
vera_layer_get_rowskip::@return: scope:[vera_layer_get_rowskip]  from vera_layer_get_rowskip
  [560] return 
  to:@return

void vera_layer_set_config(byte vera_layer_set_config::layer , byte vera_layer_set_config::config)
vera_layer_set_config: scope:[vera_layer_set_config]  from vera_layer_mode_bitmap::@2 vera_layer_mode_tile::@16
  [561] vera_layer_set_config::config#2 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::config#11, vera_layer_mode_tile::@16/vera_layer_set_config::config#0 )
  [561] vera_layer_set_config::layer#2 = phi( vera_layer_mode_bitmap::@2/vera_layer_mode_bitmap::layer#0, vera_layer_mode_tile::@16/vera_layer_set_config::layer#0 )
  [562] vera_layer_set_config::$0 = vera_layer_set_config::layer#2 << 1
  [563] vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0]
  [564] *vera_layer_set_config::addr#0 = vera_layer_set_config::config#2
  to:vera_layer_set_config::@return
vera_layer_set_config::@return: scope:[vera_layer_set_config]  from vera_layer_set_config
  [565] return 
  to:@return

void vera_layer_set_tilebase(byte vera_layer_set_tilebase::layer , byte vera_layer_set_tilebase::tilebase)
vera_layer_set_tilebase: scope:[vera_layer_set_tilebase]  from vera_layer_mode_bitmap::@3 vera_layer_mode_tile::@22
  [566] vera_layer_set_tilebase::tilebase#2 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::tilebase#1, vera_layer_mode_tile::@22/vera_layer_set_tilebase::tilebase#0 )
  [566] vera_layer_set_tilebase::layer#2 = phi( vera_layer_mode_bitmap::@3/vera_layer_mode_bitmap::layer#0, vera_layer_mode_tile::@22/vera_layer_set_tilebase::layer#0 )
  [567] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 << 1
  [568] vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0]
  [569] *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#2
  to:vera_layer_set_tilebase::@return
vera_layer_set_tilebase::@return: scope:[vera_layer_set_tilebase]  from vera_layer_set_tilebase
  [570] return 
  to:@return

byte vera_layer_get_backcolor(byte vera_layer_get_backcolor::layer)
vera_layer_get_backcolor: scope:[vera_layer_get_backcolor]  from clrscr
  [571] vera_layer_get_backcolor::return#1 = vera_layer_backcolor[vera_layer_get_backcolor::layer#0]
  to:vera_layer_get_backcolor::@return
vera_layer_get_backcolor::@return: scope:[vera_layer_get_backcolor]  from vera_layer_get_backcolor
  [572] return 
  to:@return

byte vera_layer_get_textcolor(byte vera_layer_get_textcolor::layer)
vera_layer_get_textcolor: scope:[vera_layer_get_textcolor]  from clrscr::@7
  [573] vera_layer_get_textcolor::return#1 = vera_layer_textcolor[vera_layer_get_textcolor::layer#0]
  to:vera_layer_get_textcolor::@return
vera_layer_get_textcolor::@return: scope:[vera_layer_get_textcolor]  from vera_layer_get_textcolor
  [574] return 
  to:@return

void cputc(byte cputc::c)
cputc: scope:[cputc]  from cputs::@2
  [575] vera_layer_get_color::layer#0 = conio_screen_layer
  [576] call vera_layer_get_color 
  [577] vera_layer_get_color::return#0 = vera_layer_get_color::return#3
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc
  [578] cputc::color#0 = vera_layer_get_color::return#0
  [579] cputc::$15 = conio_screen_layer << 1
  [580] cputc::conio_addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[cputc::$15]
  [581] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
  [582] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2
  [583] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc::@7
  [584] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [585] cputc::$4 = byte0  cputc::conio_addr#1
  [586] *VERA_ADDRX_L = cputc::$4
  [587] cputc::$5 = byte1  cputc::conio_addr#1
  [588] *VERA_ADDRX_M = cputc::$5
  [589] cputc::$6 = CONIO_SCREEN_BANK#15 | VERA_INC_1
  [590] *VERA_ADDRX_H = cputc::$6
  [591] *VERA_DATA0 = cputc::c#0
  [592] *VERA_DATA0 = cputc::color#0
  [593] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer]
  [594] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer]
  [595] if(0!=cputc::scroll_enable#0) goto cputc::@5
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [596] cputc::$16 = (word)conio_cursor_x[conio_screen_layer]
  [597] if(cputc::$16!=conio_width) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  [598] phi()
  [599] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@3 cputc::@4 cputc::@5 cputc::@6
  [600] return 
  to:@return
cputc::@5: scope:[cputc]  from cputc::@2
  [601] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return
  to:cputc::@6
cputc::@6: scope:[cputc]  from cputc::@5
  [602] phi()
  [603] call cputln 
  to:cputc::@return
cputc::@1: scope:[cputc]  from cputc::@7
  [604] phi()
  [605] call cputln 
  to:cputc::@return

byte vera_display_get_hscale()
vera_display_get_hscale: scope:[vera_display_get_hscale]  from bitmap_init::@16
  [606] phi()
  to:vera_display_get_hscale::@1
vera_display_get_hscale::@1: scope:[vera_display_get_hscale]  from vera_display_get_hscale vera_display_get_hscale::@2
  [607] vera_display_get_hscale::s#2 = phi( vera_display_get_hscale/1, vera_display_get_hscale::@2/vera_display_get_hscale::s#1 )
  [608] if(*VERA_DC_HSCALE!=vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]) goto vera_display_get_hscale::@2
  to:vera_display_get_hscale::@3
vera_display_get_hscale::@2: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@1
  [609] vera_display_get_hscale::s#1 = ++ vera_display_get_hscale::s#2
  [610] if(vera_display_get_hscale::s#1!=4) goto vera_display_get_hscale::@1
  to:vera_display_get_hscale::@3
vera_display_get_hscale::@3: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@1 vera_display_get_hscale::@2
  [611] vera_display_get_hscale::return#0 = phi( vera_display_get_hscale::@2/vera_display_get_hscale::scale#0, vera_display_get_hscale::@1/vera_display_get_hscale::s#2 )
  to:vera_display_get_hscale::@return
vera_display_get_hscale::@return: scope:[vera_display_get_hscale]  from vera_display_get_hscale::@3
  [612] return 
  to:@return

byte vera_display_get_vscale()
vera_display_get_vscale: scope:[vera_display_get_vscale]  from bitmap_init::@17
  [613] phi()
  to:vera_display_get_vscale::@1
vera_display_get_vscale::@1: scope:[vera_display_get_vscale]  from vera_display_get_vscale vera_display_get_vscale::@2
  [614] vera_display_get_vscale::s#2 = phi( vera_display_get_vscale/1, vera_display_get_vscale::@2/vera_display_get_vscale::s#1 )
  [615] if(*VERA_DC_VSCALE!=vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]) goto vera_display_get_vscale::@2
  to:vera_display_get_vscale::@3
vera_display_get_vscale::@2: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@1
  [616] vera_display_get_vscale::s#1 = ++ vera_display_get_vscale::s#2
  [617] if(vera_display_get_vscale::s#1!=4) goto vera_display_get_vscale::@1
  to:vera_display_get_vscale::@3
vera_display_get_vscale::@3: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@1 vera_display_get_vscale::@2
  [618] vera_display_get_vscale::return#0 = phi( vera_display_get_vscale::@2/vera_display_get_vscale::scale#0, vera_display_get_vscale::@1/vera_display_get_vscale::s#2 )
  to:vera_display_get_vscale::@return
vera_display_get_vscale::@return: scope:[vera_display_get_vscale]  from vera_display_get_vscale::@3
  [619] return 
  to:@return

dword mul16u(word mul16u::a , word mul16u::b)
mul16u: scope:[mul16u]  from bitmap_clear
  [620] mul16u::mb#0 = (dword)mul16u::b#0
  to:mul16u::@1
mul16u::@1: scope:[mul16u]  from mul16u mul16u::@3
  [621] mul16u::mb#2 = phi( mul16u/mul16u::mb#0, mul16u::@3/mul16u::mb#1 )
  [621] mul16u::res#2 = phi( mul16u/0, mul16u::@3/mul16u::res#6 )
  [621] mul16u::a#2 = phi( mul16u/mul16u::a#0, mul16u::@3/mul16u::a#1 )
  [622] if(mul16u::a#2!=0) goto mul16u::@2
  to:mul16u::@return
mul16u::@return: scope:[mul16u]  from mul16u::@1
  [623] return 
  to:@return
mul16u::@2: scope:[mul16u]  from mul16u::@1
  [624] mul16u::$1 = mul16u::a#2 & 1
  [625] if(mul16u::$1==0) goto mul16u::@3
  to:mul16u::@4
mul16u::@4: scope:[mul16u]  from mul16u::@2
  [626] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2
  to:mul16u::@3
mul16u::@3: scope:[mul16u]  from mul16u::@2 mul16u::@4
  [627] mul16u::res#6 = phi( mul16u::@2/mul16u::res#2, mul16u::@4/mul16u::res#1 )
  [628] mul16u::a#1 = mul16u::a#2 >> 1
  [629] mul16u::mb#1 = mul16u::mb#2 << 1
  to:mul16u::@1

void memset_vram(byte memset_vram::vbank , void* memset_vram::vdest , byte memset_vram::data , dword memset_vram::num)
memset_vram: scope:[memset_vram]  from bitmap_clear::@1
  [630] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [631] memset_vram::$0 = byte0  memset_vram::vdest#0
  [632] *VERA_ADDRX_L = memset_vram::$0
  [633] memset_vram::$1 = byte1  memset_vram::vdest#0
  [634] *VERA_ADDRX_M = memset_vram::$1
  [635] memset_vram::$2 = VERA_INC_1 | memset_vram::vbank#0
  [636] *VERA_ADDRX_H = memset_vram::$2
  to:memset_vram::@1
memset_vram::@1: scope:[memset_vram]  from memset_vram memset_vram::@2
  [637] memset_vram::i#2 = phi( memset_vram/0, memset_vram::@2/memset_vram::i#1 )
  [638] if(memset_vram::i#2<memset_vram::num#0) goto memset_vram::@2
  to:memset_vram::@return
memset_vram::@return: scope:[memset_vram]  from memset_vram::@1
  [639] return 
  to:@return
memset_vram::@2: scope:[memset_vram]  from memset_vram::@1
  [640] *VERA_DATA0 = memset_vram::data#0
  [641] memset_vram::i#1 = ++ memset_vram::i#2
  to:memset_vram::@1

void bitmap_line_ydxi(word bitmap_line_ydxi::y , word bitmap_line_ydxi::x , word bitmap_line_ydxi::y1 , word bitmap_line_ydxi::yd , word bitmap_line_ydxi::xd , byte bitmap_line_ydxi::c)
bitmap_line_ydxi: scope:[bitmap_line_ydxi]  from bitmap_line::@14 bitmap_line::@4
  [642] bitmap_line_ydxi::y1#6 = phi( bitmap_line::@14/bitmap_line_ydxi::y1#1, bitmap_line::@4/bitmap_line_ydxi::y1#0 )
  [642] bitmap_line_ydxi::yd#5 = phi( bitmap_line::@14/bitmap_line_ydxi::yd#1, bitmap_line::@4/bitmap_line_ydxi::yd#0 )
  [642] bitmap_line_ydxi::c#3 = phi( bitmap_line::@14/bitmap_line_ydxi::c#1, bitmap_line::@4/bitmap_line_ydxi::c#0 )
  [642] bitmap_line_ydxi::y#6 = phi( bitmap_line::@14/bitmap_line_ydxi::y#1, bitmap_line::@4/bitmap_line_ydxi::y#0 )
  [642] bitmap_line_ydxi::x#5 = phi( bitmap_line::@14/bitmap_line_ydxi::x#1, bitmap_line::@4/bitmap_line_ydxi::x#0 )
  [642] bitmap_line_ydxi::xd#2 = phi( bitmap_line::@14/bitmap_line_ydxi::xd#1, bitmap_line::@4/bitmap_line_ydxi::xd#0 )
  [643] bitmap_line_ydxi::e#0 = bitmap_line_ydxi::xd#2 >> 1
  to:bitmap_line_ydxi::@1
bitmap_line_ydxi::@1: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi bitmap_line_ydxi::@2
  [644] bitmap_line_ydxi::e#3 = phi( bitmap_line_ydxi/bitmap_line_ydxi::e#0, bitmap_line_ydxi::@2/bitmap_line_ydxi::e#6 )
  [644] bitmap_line_ydxi::y#3 = phi( bitmap_line_ydxi/bitmap_line_ydxi::y#6, bitmap_line_ydxi::@2/bitmap_line_ydxi::y#2 )
  [644] bitmap_line_ydxi::x#3 = phi( bitmap_line_ydxi/bitmap_line_ydxi::x#5, bitmap_line_ydxi::@2/bitmap_line_ydxi::x#6 )
  [645] bitmap_plot::x#2 = bitmap_line_ydxi::x#3
  [646] bitmap_plot::y#2 = bitmap_line_ydxi::y#3
  [647] bitmap_plot::c#3 = bitmap_line_ydxi::c#3
  [648] call bitmap_plot 
  to:bitmap_line_ydxi::@4
bitmap_line_ydxi::@4: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@1
  [649] bitmap_line_ydxi::y#2 = ++ bitmap_line_ydxi::y#3
  [650] bitmap_line_ydxi::e#1 = bitmap_line_ydxi::e#3 + bitmap_line_ydxi::xd#2
  [651] if(bitmap_line_ydxi::yd#5>=bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2
  to:bitmap_line_ydxi::@3
bitmap_line_ydxi::@3: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@4
  [652] bitmap_line_ydxi::x#2 = ++ bitmap_line_ydxi::x#3
  [653] bitmap_line_ydxi::e#2 = bitmap_line_ydxi::e#1 - bitmap_line_ydxi::yd#5
  to:bitmap_line_ydxi::@2
bitmap_line_ydxi::@2: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@3 bitmap_line_ydxi::@4
  [654] bitmap_line_ydxi::e#6 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::e#2, bitmap_line_ydxi::@4/bitmap_line_ydxi::e#1 )
  [654] bitmap_line_ydxi::x#6 = phi( bitmap_line_ydxi::@3/bitmap_line_ydxi::x#2, bitmap_line_ydxi::@4/bitmap_line_ydxi::x#3 )
  [655] bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#6 + 1
  [656] if(bitmap_line_ydxi::y#2!=bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1
  to:bitmap_line_ydxi::@return
bitmap_line_ydxi::@return: scope:[bitmap_line_ydxi]  from bitmap_line_ydxi::@2
  [657] return 
  to:@return

void bitmap_line_xdyi(word bitmap_line_xdyi::x , word bitmap_line_xdyi::y , word bitmap_line_xdyi::x1 , word bitmap_line_xdyi::xd , word bitmap_line_xdyi::yd , byte bitmap_line_xdyi::c)
bitmap_line_xdyi: scope:[bitmap_line_xdyi]  from bitmap_line::@13 bitmap_line::@8
  [658] bitmap_line_xdyi::x1#6 = phi( bitmap_line::@13/bitmap_line_xdyi::x1#1, bitmap_line::@8/bitmap_line_xdyi::x1#0 )
  [658] bitmap_line_xdyi::xd#5 = phi( bitmap_line::@13/bitmap_line_xdyi::xd#1, bitmap_line::@8/bitmap_line_xdyi::xd#0 )
  [658] bitmap_line_xdyi::c#3 = phi( bitmap_line::@13/bitmap_line_xdyi::c#1, bitmap_line::@8/bitmap_line_xdyi::c#0 )
  [658] bitmap_line_xdyi::y#5 = phi( bitmap_line::@13/bitmap_line_xdyi::y#1, bitmap_line::@8/bitmap_line_xdyi::y#0 )
  [658] bitmap_line_xdyi::x#6 = phi( bitmap_line::@13/bitmap_line_xdyi::x#1, bitmap_line::@8/bitmap_line_xdyi::x#0 )
  [658] bitmap_line_xdyi::yd#2 = phi( bitmap_line::@13/bitmap_line_xdyi::yd#1, bitmap_line::@8/bitmap_line_xdyi::yd#0 )
  [659] bitmap_line_xdyi::e#0 = bitmap_line_xdyi::yd#2 >> 1
  to:bitmap_line_xdyi::@1
bitmap_line_xdyi::@1: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi bitmap_line_xdyi::@2
  [660] bitmap_line_xdyi::e#3 = phi( bitmap_line_xdyi/bitmap_line_xdyi::e#0, bitmap_line_xdyi::@2/bitmap_line_xdyi::e#6 )
  [660] bitmap_line_xdyi::y#3 = phi( bitmap_line_xdyi/bitmap_line_xdyi::y#5, bitmap_line_xdyi::@2/bitmap_line_xdyi::y#6 )
  [660] bitmap_line_xdyi::x#3 = phi( bitmap_line_xdyi/bitmap_line_xdyi::x#6, bitmap_line_xdyi::@2/bitmap_line_xdyi::x#2 )
  [661] bitmap_plot::x#0 = bitmap_line_xdyi::x#3
  [662] bitmap_plot::y#0 = bitmap_line_xdyi::y#3
  [663] bitmap_plot::c#1 = bitmap_line_xdyi::c#3
  [664] call bitmap_plot 
  to:bitmap_line_xdyi::@4
bitmap_line_xdyi::@4: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@1
  [665] bitmap_line_xdyi::x#2 = ++ bitmap_line_xdyi::x#3
  [666] bitmap_line_xdyi::e#1 = bitmap_line_xdyi::e#3 + bitmap_line_xdyi::yd#2
  [667] if(bitmap_line_xdyi::xd#5>=bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2
  to:bitmap_line_xdyi::@3
bitmap_line_xdyi::@3: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@4
  [668] bitmap_line_xdyi::y#2 = ++ bitmap_line_xdyi::y#3
  [669] bitmap_line_xdyi::e#2 = bitmap_line_xdyi::e#1 - bitmap_line_xdyi::xd#5
  to:bitmap_line_xdyi::@2
bitmap_line_xdyi::@2: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@3 bitmap_line_xdyi::@4
  [670] bitmap_line_xdyi::e#6 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::e#2, bitmap_line_xdyi::@4/bitmap_line_xdyi::e#1 )
  [670] bitmap_line_xdyi::y#6 = phi( bitmap_line_xdyi::@3/bitmap_line_xdyi::y#2, bitmap_line_xdyi::@4/bitmap_line_xdyi::y#3 )
  [671] bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#6 + 1
  [672] if(bitmap_line_xdyi::x#2!=bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1
  to:bitmap_line_xdyi::@return
bitmap_line_xdyi::@return: scope:[bitmap_line_xdyi]  from bitmap_line_xdyi::@2
  [673] return 
  to:@return

void bitmap_line_ydxd(word bitmap_line_ydxd::y , word bitmap_line_ydxd::x , word bitmap_line_ydxd::y1 , word bitmap_line_ydxd::yd , word bitmap_line_ydxd::xd , byte bitmap_line_ydxd::c)
bitmap_line_ydxd: scope:[bitmap_line_ydxd]  from bitmap_line::@10 bitmap_line::@6
  [674] bitmap_line_ydxd::y1#6 = phi( bitmap_line::@10/bitmap_line_ydxd::y1#0, bitmap_line::@6/bitmap_line_ydxd::y1#1 )
  [674] bitmap_line_ydxd::yd#5 = phi( bitmap_line::@10/bitmap_line_ydxd::yd#0, bitmap_line::@6/bitmap_line_ydxd::yd#1 )
  [674] bitmap_line_ydxd::c#3 = phi( bitmap_line::@10/bitmap_line_ydxd::c#0, bitmap_line::@6/bitmap_line_ydxd::c#1 )
  [674] bitmap_line_ydxd::y#7 = phi( bitmap_line::@10/bitmap_line_ydxd::y#0, bitmap_line::@6/bitmap_line_ydxd::y#1 )
  [674] bitmap_line_ydxd::x#5 = phi( bitmap_line::@10/bitmap_line_ydxd::x#0, bitmap_line::@6/bitmap_line_ydxd::x#1 )
  [674] bitmap_line_ydxd::xd#2 = phi( bitmap_line::@10/bitmap_line_ydxd::xd#0, bitmap_line::@6/bitmap_line_ydxd::xd#1 )
  [675] bitmap_line_ydxd::e#0 = bitmap_line_ydxd::xd#2 >> 1
  to:bitmap_line_ydxd::@1
bitmap_line_ydxd::@1: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd bitmap_line_ydxd::@2
  [676] bitmap_line_ydxd::e#3 = phi( bitmap_line_ydxd/bitmap_line_ydxd::e#0, bitmap_line_ydxd::@2/bitmap_line_ydxd::e#6 )
  [676] bitmap_line_ydxd::y#2 = phi( bitmap_line_ydxd/bitmap_line_ydxd::y#7, bitmap_line_ydxd::@2/bitmap_line_ydxd::y#3 )
  [676] bitmap_line_ydxd::x#3 = phi( bitmap_line_ydxd/bitmap_line_ydxd::x#5, bitmap_line_ydxd::@2/bitmap_line_ydxd::x#6 )
  [677] bitmap_plot::x#3 = bitmap_line_ydxd::x#3
  [678] bitmap_plot::y#3 = bitmap_line_ydxd::y#2
  [679] bitmap_plot::c#4 = bitmap_line_ydxd::c#3
  [680] call bitmap_plot 
  to:bitmap_line_ydxd::@4
bitmap_line_ydxd::@4: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@1
  [681] bitmap_line_ydxd::y#3 = ++ bitmap_line_ydxd::y#2
  [682] bitmap_line_ydxd::e#1 = bitmap_line_ydxd::e#3 + bitmap_line_ydxd::xd#2
  [683] if(bitmap_line_ydxd::yd#5>=bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2
  to:bitmap_line_ydxd::@3
bitmap_line_ydxd::@3: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@4
  [684] bitmap_line_ydxd::x#2 = -- bitmap_line_ydxd::x#3
  [685] bitmap_line_ydxd::e#2 = bitmap_line_ydxd::e#1 - bitmap_line_ydxd::yd#5
  to:bitmap_line_ydxd::@2
bitmap_line_ydxd::@2: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@3 bitmap_line_ydxd::@4
  [686] bitmap_line_ydxd::e#6 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::e#2, bitmap_line_ydxd::@4/bitmap_line_ydxd::e#1 )
  [686] bitmap_line_ydxd::x#6 = phi( bitmap_line_ydxd::@3/bitmap_line_ydxd::x#2, bitmap_line_ydxd::@4/bitmap_line_ydxd::x#3 )
  [687] bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#6 + 1
  [688] if(bitmap_line_ydxd::y#3!=bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1
  to:bitmap_line_ydxd::@return
bitmap_line_ydxd::@return: scope:[bitmap_line_ydxd]  from bitmap_line_ydxd::@2
  [689] return 
  to:@return

void bitmap_line_xdyd(word bitmap_line_xdyd::x , word bitmap_line_xdyd::y , word bitmap_line_xdyd::x1 , word bitmap_line_xdyd::xd , word bitmap_line_xdyd::yd , byte bitmap_line_xdyd::c)
bitmap_line_xdyd: scope:[bitmap_line_xdyd]  from bitmap_line::@12 bitmap_line::@9
  [690] bitmap_line_xdyd::x1#6 = phi( bitmap_line::@12/bitmap_line_xdyd::x1#1, bitmap_line::@9/bitmap_line_xdyd::x1#0 )
  [690] bitmap_line_xdyd::xd#5 = phi( bitmap_line::@12/bitmap_line_xdyd::xd#1, bitmap_line::@9/bitmap_line_xdyd::xd#0 )
  [690] bitmap_line_xdyd::c#3 = phi( bitmap_line::@12/bitmap_line_xdyd::c#1, bitmap_line::@9/bitmap_line_xdyd::c#0 )
  [690] bitmap_line_xdyd::y#5 = phi( bitmap_line::@12/bitmap_line_xdyd::y#1, bitmap_line::@9/bitmap_line_xdyd::y#0 )
  [690] bitmap_line_xdyd::x#6 = phi( bitmap_line::@12/bitmap_line_xdyd::x#1, bitmap_line::@9/bitmap_line_xdyd::x#0 )
  [690] bitmap_line_xdyd::yd#2 = phi( bitmap_line::@12/bitmap_line_xdyd::yd#1, bitmap_line::@9/bitmap_line_xdyd::yd#0 )
  [691] bitmap_line_xdyd::e#0 = bitmap_line_xdyd::yd#2 >> 1
  to:bitmap_line_xdyd::@1
bitmap_line_xdyd::@1: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd bitmap_line_xdyd::@2
  [692] bitmap_line_xdyd::e#3 = phi( bitmap_line_xdyd/bitmap_line_xdyd::e#0, bitmap_line_xdyd::@2/bitmap_line_xdyd::e#6 )
  [692] bitmap_line_xdyd::y#3 = phi( bitmap_line_xdyd/bitmap_line_xdyd::y#5, bitmap_line_xdyd::@2/bitmap_line_xdyd::y#6 )
  [692] bitmap_line_xdyd::x#3 = phi( bitmap_line_xdyd/bitmap_line_xdyd::x#6, bitmap_line_xdyd::@2/bitmap_line_xdyd::x#2 )
  [693] bitmap_plot::x#1 = bitmap_line_xdyd::x#3
  [694] bitmap_plot::y#1 = bitmap_line_xdyd::y#3
  [695] bitmap_plot::c#2 = bitmap_line_xdyd::c#3
  [696] call bitmap_plot 
  to:bitmap_line_xdyd::@4
bitmap_line_xdyd::@4: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@1
  [697] bitmap_line_xdyd::x#2 = ++ bitmap_line_xdyd::x#3
  [698] bitmap_line_xdyd::e#1 = bitmap_line_xdyd::e#3 + bitmap_line_xdyd::yd#2
  [699] if(bitmap_line_xdyd::xd#5>=bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2
  to:bitmap_line_xdyd::@3
bitmap_line_xdyd::@3: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@4
  [700] bitmap_line_xdyd::y#2 = -- bitmap_line_xdyd::y#3
  [701] bitmap_line_xdyd::e#2 = bitmap_line_xdyd::e#1 - bitmap_line_xdyd::xd#5
  to:bitmap_line_xdyd::@2
bitmap_line_xdyd::@2: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@3 bitmap_line_xdyd::@4
  [702] bitmap_line_xdyd::e#6 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::e#2, bitmap_line_xdyd::@4/bitmap_line_xdyd::e#1 )
  [702] bitmap_line_xdyd::y#6 = phi( bitmap_line_xdyd::@3/bitmap_line_xdyd::y#2, bitmap_line_xdyd::@4/bitmap_line_xdyd::y#3 )
  [703] bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#6 + 1
  [704] if(bitmap_line_xdyd::x#2!=bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1
  to:bitmap_line_xdyd::@return
bitmap_line_xdyd::@return: scope:[bitmap_line_xdyd]  from bitmap_line_xdyd::@2
  [705] return 
  to:@return

word divr16u(word divr16u::dividend , word divr16u::divisor , word divr16u::rem)
divr16u: scope:[divr16u]  from modr16u
  [706] phi()
  to:divr16u::@1
divr16u::@1: scope:[divr16u]  from divr16u divr16u::@3
  [707] divr16u::i#2 = phi( divr16u/0, divr16u::@3/divr16u::i#1 )
  [707] divr16u::quotient#3 = phi( divr16u/0, divr16u::@3/divr16u::return#0 )
  [707] divr16u::dividend#2 = phi( divr16u/divr16u::dividend#1, divr16u::@3/divr16u::dividend#0 )
  [707] divr16u::rem#4 = phi( divr16u/0, divr16u::@3/divr16u::rem#10 )
  [708] divr16u::rem#0 = divr16u::rem#4 << 1
  [709] divr16u::$1 = byte1  divr16u::dividend#2
  [710] divr16u::$2 = divr16u::$1 & $80
  [711] if(divr16u::$2==0) goto divr16u::@2
  to:divr16u::@4
divr16u::@4: scope:[divr16u]  from divr16u::@1
  [712] divr16u::rem#1 = divr16u::rem#0 | 1
  to:divr16u::@2
divr16u::@2: scope:[divr16u]  from divr16u::@1 divr16u::@4
  [713] divr16u::rem#5 = phi( divr16u::@1/divr16u::rem#0, divr16u::@4/divr16u::rem#1 )
  [714] divr16u::dividend#0 = divr16u::dividend#2 << 1
  [715] divr16u::quotient#1 = divr16u::quotient#3 << 1
  [716] if(divr16u::rem#5<divr16u::divisor#0) goto divr16u::@3
  to:divr16u::@5
divr16u::@5: scope:[divr16u]  from divr16u::@2
  [717] divr16u::quotient#2 = ++ divr16u::quotient#1
  [718] divr16u::rem#2 = divr16u::rem#5 - divr16u::divisor#0
  to:divr16u::@3
divr16u::@3: scope:[divr16u]  from divr16u::@2 divr16u::@5
  [719] divr16u::return#0 = phi( divr16u::@2/divr16u::quotient#1, divr16u::@5/divr16u::quotient#2 )
  [719] divr16u::rem#10 = phi( divr16u::@2/divr16u::rem#5, divr16u::@5/divr16u::rem#2 )
  [720] divr16u::i#1 = ++ divr16u::i#2
  [721] if(divr16u::i#1!=$10) goto divr16u::@1
  to:divr16u::@6
divr16u::@6: scope:[divr16u]  from divr16u::@3
  [722] rem16u#0 = divr16u::rem#10
  to:divr16u::@return
divr16u::@return: scope:[divr16u]  from divr16u::@6
  [723] return 
  to:@return

byte vera_layer_get_color(byte vera_layer_get_color::layer)
vera_layer_get_color: scope:[vera_layer_get_color]  from clearline cputc
  [724] vera_layer_get_color::layer#2 = phi( clearline/vera_layer_get_color::layer#1, cputc/vera_layer_get_color::layer#0 )
  [725] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1
  [726] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3]
  [727] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C
  [728] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1
  to:vera_layer_get_color::@2
vera_layer_get_color::@2: scope:[vera_layer_get_color]  from vera_layer_get_color
  [729] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4
  [730] vera_layer_get_color::return#2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2]
  to:vera_layer_get_color::@return
vera_layer_get_color::@return: scope:[vera_layer_get_color]  from vera_layer_get_color::@1 vera_layer_get_color::@2
  [731] vera_layer_get_color::return#3 = phi( vera_layer_get_color::@1/vera_layer_get_color::return#1, vera_layer_get_color::@2/vera_layer_get_color::return#2 )
  [732] return 
  to:@return
vera_layer_get_color::@1: scope:[vera_layer_get_color]  from vera_layer_get_color
  [733] vera_layer_get_color::return#1 = vera_layer_textcolor[vera_layer_get_color::layer#2]
  to:vera_layer_get_color::@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@4 cputc::@6
  [734] cputln::$2 = conio_screen_layer << 1
  [735] cputln::temp#0 = conio_line_text[cputln::$2]
  [736] cputln::temp#1 = cputln::temp#0 + conio_rowskip
  [737] cputln::$3 = conio_screen_layer << 1
  [738] conio_line_text[cputln::$3] = cputln::temp#1
  [739] conio_cursor_x[conio_screen_layer] = 0
  [740] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer]
  [741] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [742] return 
  to:@return

void bitmap_plot(word bitmap_plot::x , word bitmap_plot::y , byte bitmap_plot::c)
bitmap_plot: scope:[bitmap_plot]  from bitmap_line_xdyd::@1 bitmap_line_xdyi::@1 bitmap_line_ydxd::@1 bitmap_line_ydxi::@1
  [743] bitmap_plot::c#5 = phi( bitmap_line_xdyd::@1/bitmap_plot::c#2, bitmap_line_xdyi::@1/bitmap_plot::c#1, bitmap_line_ydxd::@1/bitmap_plot::c#4, bitmap_line_ydxi::@1/bitmap_plot::c#3 )
  [743] bitmap_plot::y#4 = phi( bitmap_line_xdyd::@1/bitmap_plot::y#1, bitmap_line_xdyi::@1/bitmap_plot::y#0, bitmap_line_ydxd::@1/bitmap_plot::y#3, bitmap_line_ydxi::@1/bitmap_plot::y#2 )
  [743] bitmap_plot::x#4 = phi( bitmap_line_xdyd::@1/bitmap_plot::x#1, bitmap_line_xdyi::@1/bitmap_plot::x#0, bitmap_line_ydxd::@1/bitmap_plot::x#3, bitmap_line_ydxi::@1/bitmap_plot::x#2 )
  [744] bitmap_plot::$9 = bitmap_plot::x#4 << 1
  [745] bitmap_plot::$12 = __bitmap_plot_x + bitmap_plot::$9
  [746] bitmap_plot::plot_x#0 = (dword)*bitmap_plot::$12
  [747] bitmap_plot::$10 = bitmap_plot::y#4 << 2
  [748] bitmap_plot::$13 = __bitmap_plot_y + bitmap_plot::$10
  [749] bitmap_plot::plot_y#0 = *bitmap_plot::$13
  [750] bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plot_x#0 + bitmap_plot::plot_y#0
  [751] bitmap_plot::$14 = __bitmap_plot_bitshift + bitmap_plot::x#4
  [752] bitmap_plot::bitshift#0 = *bitmap_plot::$14
  [753] if(0!=bitmap_plot::bitshift#0) goto bitmap_plot::@1
  to:bitmap_plot::@2
bitmap_plot::@1: scope:[bitmap_plot]  from bitmap_plot
  [754] bitmap_plot::$3 = bitmap_plot::c#5 << bitmap_plot::bitshift#0
  to:bitmap_plot::@2
bitmap_plot::@2: scope:[bitmap_plot]  from bitmap_plot bitmap_plot::@1
  [755] bitmap_plot::c#0 = phi( bitmap_plot::@1/bitmap_plot::$3, bitmap_plot/bitmap_plot::c#5 )
  to:bitmap_plot::vera_vram_address01
bitmap_plot::vera_vram_address01: scope:[bitmap_plot]  from bitmap_plot::@2
  [756] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [757] bitmap_plot::vera_vram_address01_$0 = byte0  bitmap_plot::vera_vram_address01_bankaddr#0
  [758] *VERA_ADDRX_L = bitmap_plot::vera_vram_address01_$0
  [759] bitmap_plot::vera_vram_address01_$1 = byte1  bitmap_plot::vera_vram_address01_bankaddr#0
  [760] *VERA_ADDRX_M = bitmap_plot::vera_vram_address01_$1
  [761] bitmap_plot::vera_vram_address01_$3 = byte2  bitmap_plot::vera_vram_address01_bankaddr#0
  [762] *VERA_ADDRX_H = bitmap_plot::vera_vram_address01_$3
  to:bitmap_plot::@3
bitmap_plot::@3: scope:[bitmap_plot]  from bitmap_plot::vera_vram_address01
  [763] bitmap_plot::$15 = __bitmap_plot_bitmask + bitmap_plot::x#4
  [764] bitmap_plot::$6 = ~ *bitmap_plot::$15
  [765] bitmap_plot::$7 = *VERA_DATA0 & bitmap_plot::$6
  [766] bitmap_plot::$8 = bitmap_plot::$7 | bitmap_plot::c#0
  [767] *VERA_DATA0 = bitmap_plot::$8
  to:bitmap_plot::@return
bitmap_plot::@return: scope:[bitmap_plot]  from bitmap_plot::@3
  [768] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [769] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [770] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [771] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [772] phi()
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@3 cscroll::@5
  [773] return 
  to:@return
cscroll::@4: scope:[cscroll]  from cscroll::@1
  [774] phi()
  [775] call insertup 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [776] gotoxy::y#2 = conio_screen_height - 1
  [777] call gotoxy 
  to:cscroll::@return

void insertup()
insertup: scope:[insertup]  from cscroll::@4
  [778] insertup::cy#0 = conio_cursor_y[conio_screen_layer]
  [779] insertup::width#0 = conio_screen_width << 1
  to:insertup::@1
insertup::@1: scope:[insertup]  from insertup insertup::@4
  [780] insertup::i#2 = phi( insertup/1, insertup::@4/insertup::i#1 )
  [781] if(insertup::i#2<=insertup::cy#0) goto insertup::@2
  to:insertup::@3
insertup::@3: scope:[insertup]  from insertup::@1
  [782] phi()
  [783] call clearline 
  to:insertup::@return
insertup::@return: scope:[insertup]  from insertup::@3
  [784] return 
  to:@return
insertup::@2: scope:[insertup]  from insertup::@1
  [785] insertup::$3 = insertup::i#2 - 1
  [786] insertup::line#0 = insertup::$3 << conio_rowshift
  [787] insertup::start#0 = (byte*)CONIO_SCREEN_TEXT#104 + insertup::line#0
  [788] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip
  [789] memcpy_in_vram::dest#0 = (void*)insertup::start#0
  [790] memcpy_in_vram::num#0 = insertup::width#0
  [791] memcpy_in_vram::src#3 = (void*)memcpy_in_vram::src#0
  [792] call memcpy_in_vram 
  to:insertup::@4
insertup::@4: scope:[insertup]  from insertup::@2
  [793] insertup::i#1 = ++ insertup::i#2
  to:insertup::@1

void clearline()
clearline: scope:[clearline]  from insertup::@3
  [794] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [795] clearline::$5 = conio_screen_layer << 1
  [796] clearline::addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[clearline::$5]
  [797] clearline::$1 = byte0  clearline::addr#0
  [798] *VERA_ADDRX_L = clearline::$1
  [799] clearline::$2 = byte1  clearline::addr#0
  [800] *VERA_ADDRX_M = clearline::$2
  [801] *VERA_ADDRX_H = VERA_INC_1
  [802] vera_layer_get_color::layer#1 = conio_screen_layer
  [803] call vera_layer_get_color 
  [804] vera_layer_get_color::return#4 = vera_layer_get_color::return#3
  to:clearline::@4
clearline::@4: scope:[clearline]  from clearline
  [805] clearline::color#0 = vera_layer_get_color::return#4
  to:clearline::@1
clearline::@1: scope:[clearline]  from clearline::@2 clearline::@4
  [806] clearline::c#2 = phi( clearline::@2/clearline::c#1, clearline::@4/0 )
  [807] if(clearline::c#2<conio_screen_width) goto clearline::@2
  to:clearline::@3
clearline::@3: scope:[clearline]  from clearline::@1
  [808] conio_cursor_x[conio_screen_layer] = 0
  to:clearline::@return
clearline::@return: scope:[clearline]  from clearline::@3
  [809] return 
  to:@return
clearline::@2: scope:[clearline]  from clearline::@1
  [810] *VERA_DATA0 = ' '
  [811] *VERA_DATA0 = clearline::color#0
  [812] clearline::c#1 = ++ clearline::c#2
  to:clearline::@1

null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: insertup::@1 tails: insertup::@4 blocks: insertup::@4 insertup::@2 insertup::@1  in scope memcpy_in_vram
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc

VARIABLE REGISTER WEIGHTS
byte CONIO_SCREEN_BANK
byte CONIO_SCREEN_BANK#15 58.13089005235602
byte* CONIO_SCREEN_TEXT
word CONIO_SCREEN_TEXT#104 0.42083333333333334
dword __bitmap_address loadstore 4.06
byte __bitmap_color_depth loadstore 80.4074074074074
byte __bitmap_hscale loadstore 3.9102564102564106
byte __bitmap_layer loadstore 204.0
byte __bitmap_vscale loadstore 2.8732394366197185
void __start()
void bitmap_clear()
byte~ bitmap_clear::$0 202.0
byte~ bitmap_clear::$1 202.0
byte~ bitmap_clear::$6 202.0
byte~ bitmap_clear::$7 202.0
dword bitmap_clear::count
dword bitmap_clear::count#0 40.4
word bitmap_clear::hdelta
word bitmap_clear::hdelta#0 202.0
byte bitmap_clear::vbank
byte bitmap_clear::vbank#0 101.0
word bitmap_clear::vdelta
word bitmap_clear::vdelta#0 33.666666666666664
void* bitmap_clear::vdest
word bitmap_clear::vdest#0 50.5
void bitmap_init(byte bitmap_init::layer , dword bitmap_init::address)
byte~ bitmap_init::$0 202.0
byte~ bitmap_init::$1 202.0
word~ bitmap_init::$10 667.3333333333334
word~ bitmap_init::$13 667.3333333333334
byte~ bitmap_init::$2 202.0
word~ bitmap_init::$23 2002.0
word~ bitmap_init::$24 2002.0
word~ bitmap_init::$25 2002.0
word~ bitmap_init::$26 2002.0
byte~ bitmap_init::$27 202.0
word~ bitmap_init::$28 2002.0
const word*~ bitmap_init::$29 2002.0
byte~ bitmap_init::$3 202.0
const byte*~ bitmap_init::$30 2002.0
const byte*~ bitmap_init::$31 2002.0
const word*~ bitmap_init::$32 2002.0
const byte*~ bitmap_init::$33 2002.0
const byte*~ bitmap_init::$34 2002.0
const word*~ bitmap_init::$35 2002.0
const byte*~ bitmap_init::$36 2002.0
const byte*~ bitmap_init::$37 2002.0
const word*~ bitmap_init::$38 2002.0
const byte*~ bitmap_init::$39 2002.0
byte~ bitmap_init::$4 202.0
const byte*~ bitmap_init::$40 2002.0
const dword*~ bitmap_init::$41 2002.0
word~ bitmap_init::$7 667.3333333333334
dword bitmap_init::address
byte bitmap_init::bitmask
byte bitmap_init::bitmask#0 101.0
byte bitmap_init::bitmask#1 2002.0
byte bitmap_init::bitmask#10 373.1818181818182
byte bitmap_init::bitmask#11 455.0
byte bitmap_init::bitmask#12 455.0
byte bitmap_init::bitmask#13 385.0
byte bitmap_init::bitmask#16 1001.0
byte bitmap_init::bitmask#2 2002.0
byte bitmap_init::bitmask#3 2002.0
byte bitmap_init::bitmask#4 2002.0
signed byte bitmap_init::bitshift
signed byte bitmap_init::bitshift#0 202.0
signed byte bitmap_init::bitshift#1 1001.0
signed byte bitmap_init::bitshift#10 310.4
signed byte bitmap_init::bitshift#11 400.4
signed byte bitmap_init::bitshift#12 400.4
signed byte bitmap_init::bitshift#13 400.4
signed byte bitmap_init::bitshift#14 500.5
signed byte bitmap_init::bitshift#2 1001.0
signed byte bitmap_init::bitshift#3 1001.0
signed byte bitmap_init::bitshift#4 2002.0
word bitmap_init::hdelta
word bitmap_init::hdelta#0 122.44444444444446
byte bitmap_init::layer
byte~ bitmap_init::vera_layer_get_color_depth1_$0 202.0
byte~ bitmap_init::vera_layer_get_color_depth1_$1 202.0
byte* bitmap_init::vera_layer_get_color_depth1_config
byte* bitmap_init::vera_layer_get_color_depth1_config#0 202.0
byte bitmap_init::vera_layer_get_color_depth1_layer
byte bitmap_init::vera_layer_get_color_depth1_layer#0 202.0
byte bitmap_init::vera_layer_get_color_depth1_return
byte bitmap_init::vera_layer_get_color_depth1_return#0 202.0
byte bitmap_init::vera_layer_get_color_depth1_return#1 202.0
word bitmap_init::x
word bitmap_init::x#1 1501.5
word bitmap_init::x#10 353.29411764705884
word bitmap_init::y
word bitmap_init::y#1 1501.5
word bitmap_init::y#2 600.5999999999999
dword bitmap_init::yoffs
dword bitmap_init::yoffs#0 202.0
dword bitmap_init::yoffs#1 667.3333333333334
dword bitmap_init::yoffs#2 776.0
void bitmap_line(word bitmap_line::x0 , word bitmap_line::x1 , word bitmap_line::y0 , word bitmap_line::y1 , byte bitmap_line::c)
byte bitmap_line::c
byte bitmap_line::c#0 202.0
byte bitmap_line::c#1 2002.0
byte bitmap_line::c#10 1502.037037037037
word bitmap_line::x0
word bitmap_line::x0#0 8.782608695652174
word bitmap_line::x0#1 667.3333333333334
word bitmap_line::x0#10 4555.550000000001
word bitmap_line::x1
word bitmap_line::x1#0 11.882352941176471
word bitmap_line::x1#1 1001.0
word bitmap_line::x1#10 4555.550000000001
word bitmap_line::xd
word bitmap_line::xd#1 3500.3500000000004
word bitmap_line::xd#2 3500.3500000000004
word bitmap_line::y0
word bitmap_line::y0#0 18.363636363636363
word bitmap_line::y0#10 6005.6500000000015
word bitmap_line::y1
word bitmap_line::y1#0 40.4
word bitmap_line::y1#10 6005.6500000000015
word bitmap_line::yd
word bitmap_line::yd#1 4444.888888888889
word bitmap_line::yd#10 4444.888888888889
word bitmap_line::yd#11 4444.888888888889
word bitmap_line::yd#2 4444.888888888889
void bitmap_line_xdyd(word bitmap_line_xdyd::x , word bitmap_line_xdyd::y , word bitmap_line_xdyd::x1 , word bitmap_line_xdyd::xd , word bitmap_line_xdyd::yd , byte bitmap_line_xdyd::c)
word~ bitmap_line_xdyd::$6 2.00000002E8
byte bitmap_line_xdyd::c
byte bitmap_line_xdyd::c#0 20002.0
byte bitmap_line_xdyd::c#1 20002.0
byte bitmap_line_xdyd::c#3 6668000.2
word bitmap_line_xdyd::e
word bitmap_line_xdyd::e#0 200002.0
word bitmap_line_xdyd::e#1 1.3333333466666667E8
word bitmap_line_xdyd::e#2 2.00000002E8
word bitmap_line_xdyd::e#3 3.33500005E7
word bitmap_line_xdyd::e#6 1.00000001E8
word bitmap_line_xdyd::x
word bitmap_line_xdyd::x#0 3333.6666666666665
word bitmap_line_xdyd::x#1 3333.6666666666665
word bitmap_line_xdyd::x#2 3.7500000375E7
word bitmap_line_xdyd::x#3 6.00200008E7
word bitmap_line_xdyd::x#6 60001.5
word bitmap_line_xdyd::x1
word bitmap_line_xdyd::x1#0 5000.5
word bitmap_line_xdyd::x1#1 5000.5
word bitmap_line_xdyd::x1#6 6668000.2
word bitmap_line_xdyd::xd
word bitmap_line_xdyd::xd#0 6667.333333333333
word bitmap_line_xdyd::xd#1 6667.333333333333
word bitmap_line_xdyd::xd#5 1.3334666933333334E7
word bitmap_line_xdyd::y
word bitmap_line_xdyd::y#0 4000.4
word bitmap_line_xdyd::y#1 4000.4
word bitmap_line_xdyd::y#2 1.00000001E8
word bitmap_line_xdyd::y#3 5.0012500625E7
word bitmap_line_xdyd::y#5 60001.5
word bitmap_line_xdyd::y#6 1.00000001E8
word bitmap_line_xdyd::yd
word bitmap_line_xdyd::yd#0 10001.0
word bitmap_line_xdyd::yd#1 10001.0
word bitmap_line_xdyd::yd#2 6674666.933333334
void bitmap_line_xdyi(word bitmap_line_xdyi::x , word bitmap_line_xdyi::y , word bitmap_line_xdyi::x1 , word bitmap_line_xdyi::xd , word bitmap_line_xdyi::yd , byte bitmap_line_xdyi::c)
word~ bitmap_line_xdyi::$6 2.00000002E8
byte bitmap_line_xdyi::c
byte bitmap_line_xdyi::c#0 20002.0
byte bitmap_line_xdyi::c#1 20002.0
byte bitmap_line_xdyi::c#3 6668000.2
word bitmap_line_xdyi::e
word bitmap_line_xdyi::e#0 200002.0
word bitmap_line_xdyi::e#1 1.3333333466666667E8
word bitmap_line_xdyi::e#2 2.00000002E8
word bitmap_line_xdyi::e#3 3.33500005E7
word bitmap_line_xdyi::e#6 1.00000001E8
word bitmap_line_xdyi::x
word bitmap_line_xdyi::x#0 3333.6666666666665
word bitmap_line_xdyi::x#1 3333.6666666666665
word bitmap_line_xdyi::x#2 3.7500000375E7
word bitmap_line_xdyi::x#3 6.00200008E7
word bitmap_line_xdyi::x#6 60001.5
word bitmap_line_xdyi::x1
word bitmap_line_xdyi::x1#0 5000.5
word bitmap_line_xdyi::x1#1 5000.5
word bitmap_line_xdyi::x1#6 6668000.2
word bitmap_line_xdyi::xd
word bitmap_line_xdyi::xd#0 6667.333333333333
word bitmap_line_xdyi::xd#1 6667.333333333333
word bitmap_line_xdyi::xd#5 1.3334666933333334E7
word bitmap_line_xdyi::y
word bitmap_line_xdyi::y#0 4000.4
word bitmap_line_xdyi::y#1 4000.4
word bitmap_line_xdyi::y#2 1.00000001E8
word bitmap_line_xdyi::y#3 5.0012500625E7
word bitmap_line_xdyi::y#5 60001.5
word bitmap_line_xdyi::y#6 1.00000001E8
word bitmap_line_xdyi::yd
word bitmap_line_xdyi::yd#0 10001.0
word bitmap_line_xdyi::yd#1 10001.0
word bitmap_line_xdyi::yd#2 6674666.933333334
void bitmap_line_ydxd(word bitmap_line_ydxd::y , word bitmap_line_ydxd::x , word bitmap_line_ydxd::y1 , word bitmap_line_ydxd::yd , word bitmap_line_ydxd::xd , byte bitmap_line_ydxd::c)
word~ bitmap_line_ydxd::$6 2.00000002E8
byte bitmap_line_ydxd::c
byte bitmap_line_ydxd::c#0 20002.0
byte bitmap_line_ydxd::c#1 20002.0
byte bitmap_line_ydxd::c#3 6668000.2
word bitmap_line_ydxd::e
word bitmap_line_ydxd::e#0 200002.0
word bitmap_line_ydxd::e#1 1.3333333466666667E8
word bitmap_line_ydxd::e#2 2.00000002E8
word bitmap_line_ydxd::e#3 3.33500005E7
word bitmap_line_ydxd::e#6 1.00000001E8
word bitmap_line_ydxd::x
word bitmap_line_ydxd::x#0 4000.4
word bitmap_line_ydxd::x#1 4000.4
word bitmap_line_ydxd::x#2 1.00000001E8
word bitmap_line_ydxd::x#3 5.0012500625E7
word bitmap_line_ydxd::x#5 60001.5
word bitmap_line_ydxd::x#6 1.00000001E8
word bitmap_line_ydxd::xd
word bitmap_line_ydxd::xd#0 10001.0
word bitmap_line_ydxd::xd#1 10001.0
word bitmap_line_ydxd::xd#2 6674666.933333334
word bitmap_line_ydxd::y
word bitmap_line_ydxd::y#0 3333.6666666666665
word bitmap_line_ydxd::y#1 3333.6666666666665
word bitmap_line_ydxd::y#2 6.00200008E7
word bitmap_line_ydxd::y#3 3.7500000375E7
word bitmap_line_ydxd::y#7 60001.5
word bitmap_line_ydxd::y1
word bitmap_line_ydxd::y1#0 5000.5
word bitmap_line_ydxd::y1#1 5000.5
word bitmap_line_ydxd::y1#6 6668000.2
word bitmap_line_ydxd::yd
word bitmap_line_ydxd::yd#0 6667.333333333333
word bitmap_line_ydxd::yd#1 6667.333333333333
word bitmap_line_ydxd::yd#5 1.3334666933333334E7
void bitmap_line_ydxi(word bitmap_line_ydxi::y , word bitmap_line_ydxi::x , word bitmap_line_ydxi::y1 , word bitmap_line_ydxi::yd , word bitmap_line_ydxi::xd , byte bitmap_line_ydxi::c)
word~ bitmap_line_ydxi::$6 2.00000002E8
byte bitmap_line_ydxi::c
byte bitmap_line_ydxi::c#0 20002.0
byte bitmap_line_ydxi::c#1 20002.0
byte bitmap_line_ydxi::c#3 6668000.2
word bitmap_line_ydxi::e
word bitmap_line_ydxi::e#0 200002.0
word bitmap_line_ydxi::e#1 1.3333333466666667E8
word bitmap_line_ydxi::e#2 2.00000002E8
word bitmap_line_ydxi::e#3 3.33500005E7
word bitmap_line_ydxi::e#6 1.00000001E8
word bitmap_line_ydxi::x
word bitmap_line_ydxi::x#0 4000.4
word bitmap_line_ydxi::x#1 4000.4
word bitmap_line_ydxi::x#2 1.00000001E8
word bitmap_line_ydxi::x#3 5.0012500625E7
word bitmap_line_ydxi::x#5 60001.5
word bitmap_line_ydxi::x#6 1.00000001E8
word bitmap_line_ydxi::xd
word bitmap_line_ydxi::xd#0 10001.0
word bitmap_line_ydxi::xd#1 10001.0
word bitmap_line_ydxi::xd#2 6674666.933333334
word bitmap_line_ydxi::y
word bitmap_line_ydxi::y#0 3333.6666666666665
word bitmap_line_ydxi::y#1 3333.6666666666665
word bitmap_line_ydxi::y#2 3.7500000375E7
word bitmap_line_ydxi::y#3 6.00200008E7
word bitmap_line_ydxi::y#6 60001.5
word bitmap_line_ydxi::y1
word bitmap_line_ydxi::y1#0 5000.5
word bitmap_line_ydxi::y1#1 5000.5
word bitmap_line_ydxi::y1#6 6668000.2
word bitmap_line_ydxi::yd
word bitmap_line_ydxi::yd#0 6667.333333333333
word bitmap_line_ydxi::yd#1 6667.333333333333
word bitmap_line_ydxi::yd#5 1.3334666933333334E7
void bitmap_plot(word bitmap_plot::x , word bitmap_plot::y , byte bitmap_plot::c)
word~ bitmap_plot::$10 2.000000002E9
const word*~ bitmap_plot::$12 1.000000001E9
const dword*~ bitmap_plot::$13 2.000000002E9
const byte*~ bitmap_plot::$14 2.000000002E9
const byte*~ bitmap_plot::$15 2.000000002E9
byte~ bitmap_plot::$3 2.000000002E9
byte~ bitmap_plot::$6 2.000000002E9
byte~ bitmap_plot::$7 2.000000002E9
byte~ bitmap_plot::$8 2.000000002E9
word~ bitmap_plot::$9 2.000000002E9
byte bitmap_plot::bitshift
byte bitmap_plot::bitshift#0 1.5000000015E9
byte bitmap_plot::c
byte bitmap_plot::c#0 2.72727273E8
byte bitmap_plot::c#1 2.00000002E8
byte bitmap_plot::c#2 2.00000002E8
byte bitmap_plot::c#3 2.00000002E8
byte bitmap_plot::c#4 2.00000002E8
byte bitmap_plot::c#5 2.1818181872727272E8
dword bitmap_plot::plot_x
dword bitmap_plot::plot_x#0 5.000000005E8
dword bitmap_plot::plot_y
dword bitmap_plot::plot_y#0 2.000000002E9
dword bitmap_plot::plotter
byte~ bitmap_plot::vera_vram_address01_$0 2.000000002E9
byte~ bitmap_plot::vera_vram_address01_$1 2.000000002E9
byte~ bitmap_plot::vera_vram_address01_$3 2.000000002E9
dword bitmap_plot::vera_vram_address01_bankaddr
dword bitmap_plot::vera_vram_address01_bankaddr#0 3.63636364E8
byte bitmap_plot::vera_vram_address01_incr
word bitmap_plot::x
word bitmap_plot::x#0 6.6666667333333336E7
word bitmap_plot::x#1 6.6666667333333336E7
word bitmap_plot::x#2 6.6666667333333336E7
word bitmap_plot::x#3 6.6666667333333336E7
word bitmap_plot::x#4 1.7000000035E8
word bitmap_plot::y
word bitmap_plot::y#0 1.00000001E8
word bitmap_plot::y#1 1.00000001E8
word bitmap_plot::y#2 1.00000001E8
word bitmap_plot::y#3 1.00000001E8
word bitmap_plot::y#4 3.5000000125E8
void clearline()
byte~ clearline::$1 2.00000002E8
byte~ clearline::$2 2.00000002E8
byte~ clearline::$5 2.00000002E8
byte* clearline::addr
byte* clearline::addr#0 1.00000001E8
word clearline::c
word clearline::c#1 2.0000000002E10
word clearline::c#2 7.50000000075E9
byte clearline::color
byte clearline::color#0 1.6833333336666665E9
void clrscr()
byte~ clrscr::$0 202.0
byte~ clrscr::$1 40.4
byte~ clrscr::$2 202.0
byte~ clrscr::$5 2002.0
byte~ clrscr::$6 2002.0
byte~ clrscr::$7 2002.0
byte~ clrscr::$9 202.0
byte clrscr::c
byte clrscr::c#1 20002.0
byte clrscr::c#2 7500.75
byte* clrscr::ch
byte clrscr::color
byte clrscr::color#0 594.2352941176471
byte clrscr::l
byte clrscr::l#1 2002.0
byte clrscr::l#2 200.2
byte* clrscr::line_text
byte* clrscr::line_text#0 18.363636363636363
byte* clrscr::line_text#1 1001.0
byte* clrscr::line_text#2 293.2142857142857
word conio_height loadstore 5720.6
byte conio_rowshift loadstore 5206186.108247423
word conio_rowskip loadstore 4975627.393034826
volatile byte conio_screen_height loadstore 63829.93085106383
byte conio_screen_layer loadstore 1253909.9416058394
volatile byte conio_screen_width loadstore 4.473218752678571E7
word conio_width loadstore 113.58757062146893
void conio_x16_init()
byte conio_x16_init::line
byte conio_x16_init::line#0 2.1999999999999997
byte conio_x16_init::line#1 22.0
byte conio_x16_init::line#3 33.0
void cputc(byte cputc::c)
byte~ cputc::$15 20002.0
word~ cputc::$16 20002.0
byte~ cputc::$2 20002.0
byte~ cputc::$4 20002.0
byte~ cputc::$5 20002.0
byte~ cputc::$6 20002.0
byte cputc::c
byte cputc::c#0 1235.4705882352941
byte cputc::color
byte cputc::color#0 1428.7142857142858
byte* cputc::conio_addr
byte* cputc::conio_addr#0 10001.0
byte* cputc::conio_addr#1 6000.6
byte cputc::scroll_enable
byte cputc::scroll_enable#0 20002.0
void cputln()
byte~ cputln::$2 200002.0
byte~ cputln::$3 200002.0
word cputln::temp
word cputln::temp#0 200002.0
word cputln::temp#1 100001.0
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 1001.0
const byte* cputs::s
const byte* cputs::s#0 500.5
const byte* cputs::s#8 1552.0
const byte* cputs::s#9 101.0
void cscroll()
word divr16u(word divr16u::dividend , word divr16u::divisor , word divr16u::rem)
byte~ divr16u::$1 2000002.0
byte~ divr16u::$2 2000002.0
word divr16u::dividend
word divr16u::dividend#0 250000.25
word divr16u::dividend#1 3667.333333333333
word divr16u::dividend#2 430000.57142857136
word divr16u::divisor
word divr16u::divisor#0 117706.05882352941
byte divr16u::i
byte divr16u::i#1 1500001.5
byte divr16u::i#2 153846.3076923077
word divr16u::quotient
word divr16u::quotient#1 1500001.5
word divr16u::quotient#2 1000001.0
word divr16u::quotient#3 250000.25
word divr16u::rem
word divr16u::rem#0 750000.75
word divr16u::rem#1 2000002.0
word divr16u::rem#10 1003334.6666666666
word divr16u::rem#2 2000002.0
word divr16u::rem#4 2000002.0
word divr16u::rem#5 1000001.0
word divr16u::return
word divr16u::return#0 1000001.0
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte~ gotoxy::$5 2.0000002E7
word~ gotoxy::$6 2.0000002E7
word gotoxy::line_offset
word gotoxy::line_offset#0 1.0000001E7
byte gotoxy::x
byte gotoxy::y
byte gotoxy::y#1 22.0
byte gotoxy::y#10 4000000.4
byte gotoxy::y#2 2000002.0
byte gotoxy::y#7 7000004.666666666
void insertup()
byte~ insertup::$3 2.000000002E9
byte insertup::cy
byte insertup::cy#0 7.769230784615384E7
byte insertup::i
byte insertup::i#1 2.000000002E9
byte insertup::i#2 4.000000004E8
word insertup::line
word insertup::line#0 2.000000002E9
byte* insertup::start
byte* insertup::start#0 1.000000001E9
byte insertup::width
byte insertup::width#0 8.416666683333334E7
byte kbhit()
volatile byte kbhit::ch loadstore 10001.0
byte kbhit::return
byte kbhit::return#0 20002.0
byte kbhit::return#1 2775.75
byte kbhit::return#2 202.0
byte kbhit::return#3 2002.0
void main()
byte~ main::$30 202.0
word~ main::$40 202.0
byte~ main::$43 2002.0
byte main::bgcolor1_color
byte main::bgcolor2_color
byte main::bgcolor3_color
byte main::color
byte main::color#1 525.75
byte main::color#2 344.8888888888889
byte main::textcolor1_color
byte main::textcolor2_color
byte main::textcolor3_color
byte main::textcolor4_color
byte main::textcolor5_color
byte main::vera_layer_show1_layer
word main::x
word main::x#1 701.0
word main::x#3 310.4
void memcpy_in_vram(byte memcpy_in_vram::dest_bank , void* memcpy_in_vram::dest , byte memcpy_in_vram::dest_increment , byte memcpy_in_vram::src_bank , void* memcpy_in_vram::src , byte memcpy_in_vram::src_increment , word memcpy_in_vram::num)
byte~ memcpy_in_vram::$0 2.0000000002E10
byte~ memcpy_in_vram::$1 2.0000000002E10
byte~ memcpy_in_vram::$3 2.0000000002E10
byte~ memcpy_in_vram::$4 2.0000000002E10
byte~ memcpy_in_vram::$5 2.0000000002E10
void* memcpy_in_vram::dest
void* memcpy_in_vram::dest#0 6.666666673333334E8
void* memcpy_in_vram::dest#2 2.1000000003000002E9
byte memcpy_in_vram::dest_bank
byte memcpy_in_vram::dest_bank#2 8.333333334166666E8
byte memcpy_in_vram::dest_increment
word memcpy_in_vram::i
word memcpy_in_vram::i#1 2.00000000002E11
word memcpy_in_vram::i#2 1.00000000001E11
word memcpy_in_vram::num
word memcpy_in_vram::num#0 1.000000001E9
word memcpy_in_vram::num#3 5.611111111222221E9
void* memcpy_in_vram::src
byte* memcpy_in_vram::src#0 3.333333336666667E8
void* memcpy_in_vram::src#2 5.25000000075E9
void* memcpy_in_vram::src#3 2.000000002E9
byte memcpy_in_vram::src_bank
byte memcpy_in_vram::src_increment
void memset_vram(byte memset_vram::vbank , void* memset_vram::vdest , byte memset_vram::data , dword memset_vram::num)
byte~ memset_vram::$0 2002.0
byte~ memset_vram::$1 2002.0
byte~ memset_vram::$2 2002.0
byte memset_vram::data
dword memset_vram::i
dword memset_vram::i#1 20002.0
dword memset_vram::i#2 10001.0
dword memset_vram::num
dword memset_vram::num#0 841.8333333333333
byte memset_vram::vbank
byte memset_vram::vbank#0 137.75
void* memset_vram::vdest
void* memset_vram::vdest#0 420.59999999999997
word modr16u(word modr16u::dividend , word modr16u::divisor , word modr16u::rem)
word modr16u::dividend
word modr16u::dividend#0 202.0
word modr16u::dividend#1 202.0
word modr16u::dividend#2 202.0
word modr16u::dividend#3 202.0
word modr16u::dividend#4 1405.0
word modr16u::divisor
word modr16u::divisor#4 500.5
word modr16u::rem
word modr16u::return
word modr16u::return#0 234.16666666666669
word modr16u::return#10 202.0
word modr16u::return#2 202.0
word modr16u::return#3 202.0
word modr16u::return#4 202.0
dword mul16u(word mul16u::a , word mul16u::b)
byte~ mul16u::$1 20002.0
word mul16u::a
word mul16u::a#0 367.33333333333337
word mul16u::a#1 10001.0
word mul16u::a#2 6834.166666666666
word mul16u::b
word mul16u::b#0 101.0
dword mul16u::mb
dword mul16u::mb#0 2002.0
dword mul16u::mb#1 20002.0
dword mul16u::mb#2 4429.142857142857
dword mul16u::res
dword mul16u::res#1 20002.0
dword mul16u::res#2 5017.333333333333
dword mul16u::res#6 10001.0
dword mul16u::return
dword mul16u::return#0 202.0
word rand()
word~ rand::$0 2002.0
word~ rand::$1 2002.0
word~ rand::$2 2002.0
word rand::return
word rand::return#0 215.14285714285714
word rand::return#10 202.0
word rand::return#11 202.0
word rand::return#12 202.0
word rand::return#2 202.0
word rand::return#3 202.0
word rand_state
word rand_state#0 1501.5
word rand_state#1 1501.5
word rand_state#13 1253.5
word rand_state#14 78.34375
word rand_state#23 33.666666666666664
word rem16u
word rem16u#0 3667.333333333333
void screenlayer(byte screenlayer::layer)
word~ screenlayer::$2 202.0
byte~ screenlayer::$3 202.0
word~ screenlayer::$4 202.0
word~ screenlayer::$5 202.0
byte screenlayer::layer
byte~ screenlayer::vera_layer_get_height1_$0 202.0
byte~ screenlayer::vera_layer_get_height1_$1 202.0
byte~ screenlayer::vera_layer_get_height1_$2 202.0
byte~ screenlayer::vera_layer_get_height1_$3 202.0
byte* screenlayer::vera_layer_get_height1_config
byte* screenlayer::vera_layer_get_height1_config#0 202.0
byte screenlayer::vera_layer_get_height1_layer
byte screenlayer::vera_layer_get_height1_layer#0 202.0
word screenlayer::vera_layer_get_height1_return
word screenlayer::vera_layer_get_height1_return#0 202.0
word screenlayer::vera_layer_get_height1_return#1 202.0
byte~ screenlayer::vera_layer_get_width1_$0 202.0
byte~ screenlayer::vera_layer_get_width1_$1 202.0
byte~ screenlayer::vera_layer_get_width1_$2 202.0
byte~ screenlayer::vera_layer_get_width1_$3 202.0
byte* screenlayer::vera_layer_get_width1_config
byte* screenlayer::vera_layer_get_width1_config#0 202.0
byte screenlayer::vera_layer_get_width1_layer
byte screenlayer::vera_layer_get_width1_layer#0 202.0
word screenlayer::vera_layer_get_width1_return
word screenlayer::vera_layer_get_width1_return#0 202.0
word screenlayer::vera_layer_get_width1_return#1 202.0
void screensize(byte* screensize::x , byte* screensize::y)
byte~ screensize::$1 202.0
byte~ screensize::$3 202.0
byte screensize::hscale
byte screensize::hscale#0 202.0
byte screensize::vscale
byte screensize::vscale#0 202.0
byte* screensize::x
byte* screensize::y
byte vera_display_get_hscale()
byte vera_display_get_hscale::return
byte vera_display_get_hscale::return#0 3367.333333333333
byte vera_display_get_hscale::return#2 202.0
byte vera_display_get_hscale::s
byte vera_display_get_hscale::s#1 15001.5
byte vera_display_get_hscale::s#2 20002.0
byte vera_display_get_hscale::scale
byte vera_display_get_vscale()
byte vera_display_get_vscale::return
byte vera_display_get_vscale::return#0 3367.333333333333
byte vera_display_get_vscale::return#2 202.0
byte vera_display_get_vscale::s
byte vera_display_get_vscale::s#1 15001.5
byte vera_display_get_vscale::s#2 20002.0
byte vera_display_get_vscale::scale
byte vera_layer_get_backcolor(byte vera_layer_get_backcolor::layer)
byte vera_layer_get_backcolor::layer
byte vera_layer_get_backcolor::layer#0 1102.0
byte vera_layer_get_backcolor::return
byte vera_layer_get_backcolor::return#0 202.0
byte vera_layer_get_backcolor::return#1 367.33333333333337
byte vera_layer_get_color(byte vera_layer_get_color::layer)
byte~ vera_layer_get_color::$0 2.000000002E9
byte~ vera_layer_get_color::$1 2.000000002E9
byte~ vera_layer_get_color::$3 2.000000002E9
byte* vera_layer_get_color::addr
byte* vera_layer_get_color::addr#0 2.000000002E9
byte vera_layer_get_color::layer
byte vera_layer_get_color::layer#0 20002.0
byte vera_layer_get_color::layer#1 2.00000002E8
byte vera_layer_get_color::layer#2 6.833350010000001E8
byte vera_layer_get_color::return
byte vera_layer_get_color::return#0 20002.0
byte vera_layer_get_color::return#1 2.000000002E9
byte vera_layer_get_color::return#2 2.000000002E9
byte vera_layer_get_color::return#3 5.25002501E8
byte vera_layer_get_color::return#4 2.00000002E8
byte vera_layer_get_mapbase_bank(byte vera_layer_get_mapbase_bank::layer)
byte vera_layer_get_mapbase_bank::layer
byte vera_layer_get_mapbase_bank::layer#0 1102.0
byte vera_layer_get_mapbase_bank::return
byte vera_layer_get_mapbase_bank::return#0 367.33333333333337
byte vera_layer_get_mapbase_bank::return#2 202.0
word vera_layer_get_mapbase_offset(byte vera_layer_get_mapbase_offset::layer)
byte~ vera_layer_get_mapbase_offset::$0 2002.0
byte vera_layer_get_mapbase_offset::layer
byte vera_layer_get_mapbase_offset::layer#0 1102.0
word vera_layer_get_mapbase_offset::return
word vera_layer_get_mapbase_offset::return#0 367.33333333333337
word vera_layer_get_mapbase_offset::return#2 202.0
byte vera_layer_get_rowshift(byte vera_layer_get_rowshift::layer)
byte vera_layer_get_rowshift::layer
byte vera_layer_get_rowshift::layer#0 1102.0
byte vera_layer_get_rowshift::return
byte vera_layer_get_rowshift::return#0 367.33333333333337
byte vera_layer_get_rowshift::return#2 202.0
word vera_layer_get_rowskip(byte vera_layer_get_rowskip::layer)
byte~ vera_layer_get_rowskip::$0 2002.0
byte vera_layer_get_rowskip::layer
byte vera_layer_get_rowskip::layer#0 1102.0
word vera_layer_get_rowskip::return
word vera_layer_get_rowskip::return#0 367.33333333333337
word vera_layer_get_rowskip::return#2 202.0
byte vera_layer_get_textcolor(byte vera_layer_get_textcolor::layer)
byte vera_layer_get_textcolor::layer
byte vera_layer_get_textcolor::layer#0 1102.0
byte vera_layer_get_textcolor::return
byte vera_layer_get_textcolor::return#0 202.0
byte vera_layer_get_textcolor::return#1 367.33333333333337
void vera_layer_mode_bitmap(byte vera_layer_mode_bitmap::layer , dword vera_layer_mode_bitmap::bitmap_address , word vera_layer_mode_bitmap::mapwidth , word vera_layer_mode_bitmap::color_depth)
dword vera_layer_mode_bitmap::bitmap_address
word vera_layer_mode_bitmap::color_depth
byte vera_layer_mode_bitmap::config
byte vera_layer_mode_bitmap::layer
word vera_layer_mode_bitmap::mapwidth
byte vera_layer_mode_bitmap::tilebase
void vera_layer_mode_text(byte vera_layer_mode_text::layer , dword vera_layer_mode_text::mapbase_address , dword vera_layer_mode_text::tilebase_address , word vera_layer_mode_text::mapwidth , word vera_layer_mode_text::mapheight , byte vera_layer_mode_text::tilewidth , byte vera_layer_mode_text::tileheight , word vera_layer_mode_text::color_mode)
word vera_layer_mode_text::color_mode
byte vera_layer_mode_text::layer
dword vera_layer_mode_text::mapbase_address
word vera_layer_mode_text::mapheight
word vera_layer_mode_text::mapwidth
dword vera_layer_mode_text::tilebase_address
byte vera_layer_mode_text::tileheight
byte vera_layer_mode_text::tilewidth
void vera_layer_mode_tile(byte vera_layer_mode_tile::layer , dword vera_layer_mode_tile::mapbase_address , dword vera_layer_mode_tile::tilebase_address , word vera_layer_mode_tile::mapwidth , word vera_layer_mode_tile::mapheight , byte vera_layer_mode_tile::tilewidth , byte vera_layer_mode_tile::tileheight , byte vera_layer_mode_tile::color_depth)
word~ vera_layer_mode_tile::$1 1001.0
byte~ vera_layer_mode_tile::$11 2002.0
byte~ vera_layer_mode_tile::$12 2002.0
byte~ vera_layer_mode_tile::$13 2002.0
byte~ vera_layer_mode_tile::$14 2002.0
byte~ vera_layer_mode_tile::$17 250.25
byte~ vera_layer_mode_tile::$18 273.0
byte~ vera_layer_mode_tile::$2 2002.0
word~ vera_layer_mode_tile::$6 2002.0
byte~ vera_layer_mode_tile::$7 2002.0
byte vera_layer_mode_tile::color_depth
byte vera_layer_mode_tile::config
byte vera_layer_mode_tile::config#10 2002.0
byte vera_layer_mode_tile::config#11 2002.0
byte vera_layer_mode_tile::config#12 2002.0
byte vera_layer_mode_tile::config#21 1001.0
byte vera_layer_mode_tile::config#25 3003.0
byte vera_layer_mode_tile::layer
byte vera_layer_mode_tile::layer#10 263.4210526315791
byte vera_layer_mode_tile::mapbase
byte vera_layer_mode_tile::mapbase#0 1001.0
dword vera_layer_mode_tile::mapbase_address
dword vera_layer_mode_tile::mapbase_address#0 2002.0
dword vera_layer_mode_tile::mapbase_address#10 111.22222222222223
word vera_layer_mode_tile::mapheight
word vera_layer_mode_tile::mapheight#10 190.66666666666666
word vera_layer_mode_tile::mapwidth
word vera_layer_mode_tile::mapwidth#10 1001.0
byte vera_layer_mode_tile::tilebase
byte vera_layer_mode_tile::tilebase#0 2002.0
byte vera_layer_mode_tile::tilebase#1 1334.6666666666667
byte vera_layer_mode_tile::tilebase#10 2002.0
byte vera_layer_mode_tile::tilebase#12 2002.0000000000002
byte vera_layer_mode_tile::tilebase#3 2002.0
byte vera_layer_mode_tile::tilebase#5 2002.0
dword vera_layer_mode_tile::tilebase_address
dword vera_layer_mode_tile::tilebase_address#0 2002.0
dword vera_layer_mode_tile::tilebase_address#10 87.04347826086956
byte vera_layer_mode_tile::tileheight
byte vera_layer_mode_tile::tileheight#10 37.074074074074076
byte vera_layer_mode_tile::tilewidth
byte vera_layer_mode_tile::tilewidth#10 40.04
byte vera_layer_set_backcolor(byte vera_layer_set_backcolor::layer , byte vera_layer_set_backcolor::color)
byte vera_layer_set_backcolor::color
byte vera_layer_set_backcolor::color#4 101.0
byte vera_layer_set_backcolor::layer
byte vera_layer_set_backcolor::layer#1 22.0
byte vera_layer_set_backcolor::layer#2 22.0
byte vera_layer_set_backcolor::layer#3 22.0
byte vera_layer_set_backcolor::layer#4 134.0
byte vera_layer_set_backcolor::old
byte vera_layer_set_backcolor::return
void vera_layer_set_config(byte vera_layer_set_config::layer , byte vera_layer_set_config::config)
byte~ vera_layer_set_config::$0 20002.0
byte* vera_layer_set_config::addr
byte* vera_layer_set_config::addr#0 20002.0
byte vera_layer_set_config::config
byte vera_layer_set_config::config#0 2002.0
byte vera_layer_set_config::config#2 3667.333333333333
byte vera_layer_set_config::layer
byte vera_layer_set_config::layer#0 1001.0
byte vera_layer_set_config::layer#2 11002.0
void vera_layer_set_mapbase(byte vera_layer_set_mapbase::layer , byte vera_layer_set_mapbase::mapbase)
byte~ vera_layer_set_mapbase::$0 20002.0
byte* vera_layer_set_mapbase::addr
byte* vera_layer_set_mapbase::addr#0 20002.0
byte vera_layer_set_mapbase::layer
byte vera_layer_set_mapbase::layer#0 1001.0
byte vera_layer_set_mapbase::layer#3 11002.0
byte vera_layer_set_mapbase::mapbase
byte vera_layer_set_mapbase::mapbase#0 2002.0
byte vera_layer_set_mapbase::mapbase#3 3667.333333333333
void vera_layer_set_text_color_mode(byte vera_layer_set_text_color_mode::layer , byte vera_layer_set_text_color_mode::color_mode)
byte* vera_layer_set_text_color_mode::addr
byte* vera_layer_set_text_color_mode::addr#0 2502.5
byte vera_layer_set_text_color_mode::color_mode
byte vera_layer_set_text_color_mode::layer
byte vera_layer_set_textcolor(byte vera_layer_set_textcolor::layer , byte vera_layer_set_textcolor::color)
byte vera_layer_set_textcolor::color
byte vera_layer_set_textcolor::color#6 101.0
byte vera_layer_set_textcolor::layer
byte vera_layer_set_textcolor::layer#1 22.0
byte vera_layer_set_textcolor::layer#2 22.0
byte vera_layer_set_textcolor::layer#3 22.0
byte vera_layer_set_textcolor::layer#4 22.0
byte vera_layer_set_textcolor::layer#5 22.0
byte vera_layer_set_textcolor::layer#6 156.0
byte vera_layer_set_textcolor::old
byte vera_layer_set_textcolor::return
void vera_layer_set_tilebase(byte vera_layer_set_tilebase::layer , byte vera_layer_set_tilebase::tilebase)
byte~ vera_layer_set_tilebase::$0 20002.0
byte* vera_layer_set_tilebase::addr
byte* vera_layer_set_tilebase::addr#0 20002.0
byte vera_layer_set_tilebase::layer
byte vera_layer_set_tilebase::layer#0 1001.0
byte vera_layer_set_tilebase::layer#2 11002.0
byte vera_layer_set_tilebase::tilebase
byte vera_layer_set_tilebase::tilebase#0 2002.0
byte vera_layer_set_tilebase::tilebase#2 3667.333333333333

Initial phi equivalence classes
[ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
[ main::x#3 main::x#1 ]
[ main::color#2 main::color#1 ]
[ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ]
[ vera_layer_set_textcolor::color#6 ]
[ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ]
[ vera_layer_set_backcolor::color#4 ]
[ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
[ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
[ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
[ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ]
[ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ]
[ memcpy_in_vram::dest_bank#2 ]
[ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ]
[ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
[ vera_layer_mode_tile::mapwidth#10 ]
[ vera_layer_mode_tile::layer#10 ]
[ vera_layer_mode_tile::mapheight#10 ]
[ vera_layer_mode_tile::mapbase_address#10 ]
[ vera_layer_mode_tile::tilebase_address#10 ]
[ vera_layer_mode_tile::tilewidth#10 ]
[ vera_layer_mode_tile::tileheight#10 ]
[ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
[ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
[ clrscr::c#2 clrscr::c#1 ]
[ cputs::s#8 cputs::s#9 cputs::s#0 ]
[ bitmap_init::x#10 bitmap_init::x#1 ]
[ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
[ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
[ bitmap_init::y#2 bitmap_init::y#1 ]
[ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ]
[ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ]
[ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ]
[ bitmap_line::y0#10 bitmap_line::y0#0 ]
[ bitmap_line::y1#10 bitmap_line::y1#0 ]
[ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ]
[ rand_state#13 rand_state#23 rand_state#14 ]
[ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ]
[ modr16u::divisor#4 ]
[ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ]
[ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ]
[ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ]
[ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ]
[ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ]
[ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ]
[ mul16u::a#2 mul16u::a#0 mul16u::a#1 ]
[ mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
[ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
[ memset_vram::i#2 memset_vram::i#1 ]
[ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ]
[ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ]
[ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ]
[ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ]
[ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ]
[ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ]
[ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ]
[ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ]
[ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ]
[ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ]
[ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ]
[ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ]
[ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ]
[ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ]
[ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ]
[ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ]
[ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ]
[ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ]
[ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ]
[ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
[ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ]
[ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ]
[ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ]
[ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ]
[ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ]
[ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ]
[ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ]
[ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ]
[ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ]
[ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ]
[ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ]
[ divr16u::i#2 divr16u::i#1 ]
[ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
[ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
[ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ]
[ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ]
[ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
[ insertup::i#2 insertup::i#1 ]
[ clearline::c#2 clearline::c#1 ]
Added variable conio_screen_width to live range equivalence class [ conio_screen_width ]
Added variable conio_screen_height to live range equivalence class [ conio_screen_height ]
Added variable conio_screen_layer to live range equivalence class [ conio_screen_layer ]
Added variable conio_width to live range equivalence class [ conio_width ]
Added variable conio_height to live range equivalence class [ conio_height ]
Added variable conio_rowshift to live range equivalence class [ conio_rowshift ]
Added variable conio_rowskip to live range equivalence class [ conio_rowskip ]
Added variable __bitmap_address to live range equivalence class [ __bitmap_address ]
Added variable __bitmap_layer to live range equivalence class [ __bitmap_layer ]
Added variable __bitmap_hscale to live range equivalence class [ __bitmap_hscale ]
Added variable __bitmap_vscale to live range equivalence class [ __bitmap_vscale ]
Added variable __bitmap_color_depth to live range equivalence class [ __bitmap_color_depth ]
Added variable kbhit::return#2 to live range equivalence class [ kbhit::return#2 ]
Added variable main::$30 to live range equivalence class [ main::$30 ]
Added variable kbhit::return#3 to live range equivalence class [ kbhit::return#3 ]
Added variable main::$43 to live range equivalence class [ main::$43 ]
Added variable rand::return#2 to live range equivalence class [ rand::return#2 ]
Added variable modr16u::return#2 to live range equivalence class [ modr16u::return#2 ]
Added variable rand::return#3 to live range equivalence class [ rand::return#3 ]
Added variable modr16u::return#3 to live range equivalence class [ modr16u::return#3 ]
Added variable rand::return#10 to live range equivalence class [ rand::return#10 ]
Added variable modr16u::return#4 to live range equivalence class [ modr16u::return#4 ]
Added variable rand::return#11 to live range equivalence class [ rand::return#11 ]
Added variable modr16u::return#10 to live range equivalence class [ modr16u::return#10 ]
Added variable rand::return#12 to live range equivalence class [ rand::return#12 ]
Added variable main::$40 to live range equivalence class [ main::$40 ]
Added variable screensize::hscale#0 to live range equivalence class [ screensize::hscale#0 ]
Added variable screensize::$1 to live range equivalence class [ screensize::$1 ]
Added variable screensize::vscale#0 to live range equivalence class [ screensize::vscale#0 ]
Added variable screensize::$3 to live range equivalence class [ screensize::$3 ]
Added variable vera_layer_get_mapbase_bank::layer#0 to live range equivalence class [ vera_layer_get_mapbase_bank::layer#0 ]
Added variable vera_layer_get_mapbase_bank::return#2 to live range equivalence class [ vera_layer_get_mapbase_bank::return#2 ]
Added variable CONIO_SCREEN_BANK#15 to live range equivalence class [ CONIO_SCREEN_BANK#15 ]
Added variable vera_layer_get_mapbase_offset::layer#0 to live range equivalence class [ vera_layer_get_mapbase_offset::layer#0 ]
Added variable vera_layer_get_mapbase_offset::return#2 to live range equivalence class [ vera_layer_get_mapbase_offset::return#2 ]
Added variable CONIO_SCREEN_TEXT#104 to live range equivalence class [ CONIO_SCREEN_TEXT#104 ]
Added variable screenlayer::vera_layer_get_width1_layer#0 to live range equivalence class [ screenlayer::vera_layer_get_width1_layer#0 ]
Added variable screenlayer::vera_layer_get_width1_$2 to live range equivalence class [ screenlayer::vera_layer_get_width1_$2 ]
Added variable screenlayer::vera_layer_get_width1_config#0 to live range equivalence class [ screenlayer::vera_layer_get_width1_config#0 ]
Added variable screenlayer::vera_layer_get_width1_$0 to live range equivalence class [ screenlayer::vera_layer_get_width1_$0 ]
Added variable screenlayer::vera_layer_get_width1_$1 to live range equivalence class [ screenlayer::vera_layer_get_width1_$1 ]
Added variable screenlayer::vera_layer_get_width1_$3 to live range equivalence class [ screenlayer::vera_layer_get_width1_$3 ]
Added variable screenlayer::vera_layer_get_width1_return#0 to live range equivalence class [ screenlayer::vera_layer_get_width1_return#0 ]
Added variable screenlayer::vera_layer_get_width1_return#1 to live range equivalence class [ screenlayer::vera_layer_get_width1_return#1 ]
Added variable screenlayer::$2 to live range equivalence class [ screenlayer::$2 ]
Added variable vera_layer_get_rowshift::layer#0 to live range equivalence class [ vera_layer_get_rowshift::layer#0 ]
Added variable vera_layer_get_rowshift::return#2 to live range equivalence class [ vera_layer_get_rowshift::return#2 ]
Added variable screenlayer::$3 to live range equivalence class [ screenlayer::$3 ]
Added variable vera_layer_get_rowskip::layer#0 to live range equivalence class [ vera_layer_get_rowskip::layer#0 ]
Added variable vera_layer_get_rowskip::return#2 to live range equivalence class [ vera_layer_get_rowskip::return#2 ]
Added variable screenlayer::$4 to live range equivalence class [ screenlayer::$4 ]
Added variable screenlayer::vera_layer_get_height1_layer#0 to live range equivalence class [ screenlayer::vera_layer_get_height1_layer#0 ]
Added variable screenlayer::vera_layer_get_height1_$2 to live range equivalence class [ screenlayer::vera_layer_get_height1_$2 ]
Added variable screenlayer::vera_layer_get_height1_config#0 to live range equivalence class [ screenlayer::vera_layer_get_height1_config#0 ]
Added variable screenlayer::vera_layer_get_height1_$0 to live range equivalence class [ screenlayer::vera_layer_get_height1_$0 ]
Added variable screenlayer::vera_layer_get_height1_$1 to live range equivalence class [ screenlayer::vera_layer_get_height1_$1 ]
Added variable screenlayer::vera_layer_get_height1_$3 to live range equivalence class [ screenlayer::vera_layer_get_height1_$3 ]
Added variable screenlayer::vera_layer_get_height1_return#0 to live range equivalence class [ screenlayer::vera_layer_get_height1_return#0 ]
Added variable screenlayer::vera_layer_get_height1_return#1 to live range equivalence class [ screenlayer::vera_layer_get_height1_return#1 ]
Added variable screenlayer::$5 to live range equivalence class [ screenlayer::$5 ]
Added variable vera_layer_set_mapbase::$0 to live range equivalence class [ vera_layer_set_mapbase::$0 ]
Added variable vera_layer_set_mapbase::addr#0 to live range equivalence class [ vera_layer_set_mapbase::addr#0 ]
Added variable gotoxy::$6 to live range equivalence class [ gotoxy::$6 ]
Added variable gotoxy::line_offset#0 to live range equivalence class [ gotoxy::line_offset#0 ]
Added variable gotoxy::$5 to live range equivalence class [ gotoxy::$5 ]
Added variable memcpy_in_vram::$0 to live range equivalence class [ memcpy_in_vram::$0 ]
Added variable memcpy_in_vram::$1 to live range equivalence class [ memcpy_in_vram::$1 ]
Added variable memcpy_in_vram::$3 to live range equivalence class [ memcpy_in_vram::$3 ]
Added variable memcpy_in_vram::$4 to live range equivalence class [ memcpy_in_vram::$4 ]
Added variable memcpy_in_vram::$5 to live range equivalence class [ memcpy_in_vram::$5 ]
Added variable vera_layer_mode_tile::$14 to live range equivalence class [ vera_layer_mode_tile::$14 ]
Added variable vera_layer_mode_tile::$1 to live range equivalence class [ vera_layer_mode_tile::$1 ]
Added variable vera_layer_mode_tile::$17 to live range equivalence class [ vera_layer_mode_tile::$17 ]
Added variable vera_layer_mode_tile::$2 to live range equivalence class [ vera_layer_mode_tile::$2 ]
Added variable vera_layer_mode_tile::$18 to live range equivalence class [ vera_layer_mode_tile::$18 ]
Added variable vera_layer_mode_tile::mapbase_address#0 to live range equivalence class [ vera_layer_mode_tile::mapbase_address#0 ]
Added variable vera_layer_mode_tile::mapbase#0 to live range equivalence class [ vera_layer_mode_tile::mapbase#0 ]
Added variable vera_layer_mode_tile::$6 to live range equivalence class [ vera_layer_mode_tile::$6 ]
Added variable vera_layer_mode_tile::$7 to live range equivalence class [ vera_layer_mode_tile::$7 ]
Added variable vera_layer_mode_tile::tilebase_address#0 to live range equivalence class [ vera_layer_mode_tile::tilebase_address#0 ]
Added variable vera_layer_mode_tile::tilebase#0 to live range equivalence class [ vera_layer_mode_tile::tilebase#0 ]
Added variable vera_layer_mode_tile::$13 to live range equivalence class [ vera_layer_mode_tile::$13 ]
Added variable vera_layer_mode_tile::$12 to live range equivalence class [ vera_layer_mode_tile::$12 ]
Added variable vera_layer_mode_tile::$11 to live range equivalence class [ vera_layer_mode_tile::$11 ]
Added variable vera_layer_get_backcolor::layer#0 to live range equivalence class [ vera_layer_get_backcolor::layer#0 ]
Added variable vera_layer_get_backcolor::return#0 to live range equivalence class [ vera_layer_get_backcolor::return#0 ]
Added variable clrscr::$0 to live range equivalence class [ clrscr::$0 ]
Added variable clrscr::$1 to live range equivalence class [ clrscr::$1 ]
Added variable vera_layer_get_textcolor::layer#0 to live range equivalence class [ vera_layer_get_textcolor::layer#0 ]
Added variable vera_layer_get_textcolor::return#0 to live range equivalence class [ vera_layer_get_textcolor::return#0 ]
Added variable clrscr::$2 to live range equivalence class [ clrscr::$2 ]
Added variable clrscr::color#0 to live range equivalence class [ clrscr::color#0 ]
Added variable clrscr::$9 to live range equivalence class [ clrscr::$9 ]
Added variable clrscr::$5 to live range equivalence class [ clrscr::$5 ]
Added variable clrscr::$6 to live range equivalence class [ clrscr::$6 ]
Added variable clrscr::$7 to live range equivalence class [ clrscr::$7 ]
Added variable cputs::c#1 to live range equivalence class [ cputs::c#1 ]
Added variable cputc::c#0 to live range equivalence class [ cputc::c#0 ]
Added variable bitmap_init::vera_layer_get_color_depth1_layer#0 to live range equivalence class [ bitmap_init::vera_layer_get_color_depth1_layer#0 ]
Added variable bitmap_init::vera_layer_get_color_depth1_$1 to live range equivalence class [ bitmap_init::vera_layer_get_color_depth1_$1 ]
Added variable bitmap_init::vera_layer_get_color_depth1_config#0 to live range equivalence class [ bitmap_init::vera_layer_get_color_depth1_config#0 ]
Added variable bitmap_init::vera_layer_get_color_depth1_$0 to live range equivalence class [ bitmap_init::vera_layer_get_color_depth1_$0 ]
Added variable bitmap_init::vera_layer_get_color_depth1_return#0 to live range equivalence class [ bitmap_init::vera_layer_get_color_depth1_return#0 ]
Added variable bitmap_init::vera_layer_get_color_depth1_return#1 to live range equivalence class [ bitmap_init::vera_layer_get_color_depth1_return#1 ]
Added variable bitmap_init::$0 to live range equivalence class [ bitmap_init::$0 ]
Added variable vera_display_get_hscale::return#2 to live range equivalence class [ vera_display_get_hscale::return#2 ]
Added variable bitmap_init::$1 to live range equivalence class [ bitmap_init::$1 ]
Added variable vera_display_get_vscale::return#2 to live range equivalence class [ vera_display_get_vscale::return#2 ]
Added variable bitmap_init::$2 to live range equivalence class [ bitmap_init::$2 ]
Added variable bitmap_init::$7 to live range equivalence class [ bitmap_init::$7 ]
Added variable bitmap_init::$23 to live range equivalence class [ bitmap_init::$23 ]
Added variable bitmap_init::$29 to live range equivalence class [ bitmap_init::$29 ]
Added variable bitmap_init::$30 to live range equivalence class [ bitmap_init::$30 ]
Added variable bitmap_init::$31 to live range equivalence class [ bitmap_init::$31 ]
Added variable bitmap_init::$10 to live range equivalence class [ bitmap_init::$10 ]
Added variable bitmap_init::$24 to live range equivalence class [ bitmap_init::$24 ]
Added variable bitmap_init::$32 to live range equivalence class [ bitmap_init::$32 ]
Added variable bitmap_init::$33 to live range equivalence class [ bitmap_init::$33 ]
Added variable bitmap_init::$34 to live range equivalence class [ bitmap_init::$34 ]
Added variable bitmap_init::$13 to live range equivalence class [ bitmap_init::$13 ]
Added variable bitmap_init::$25 to live range equivalence class [ bitmap_init::$25 ]
Added variable bitmap_init::$35 to live range equivalence class [ bitmap_init::$35 ]
Added variable bitmap_init::$36 to live range equivalence class [ bitmap_init::$36 ]
Added variable bitmap_init::$37 to live range equivalence class [ bitmap_init::$37 ]
Added variable bitmap_init::$26 to live range equivalence class [ bitmap_init::$26 ]
Added variable bitmap_init::$38 to live range equivalence class [ bitmap_init::$38 ]
Added variable bitmap_init::$39 to live range equivalence class [ bitmap_init::$39 ]
Added variable bitmap_init::$40 to live range equivalence class [ bitmap_init::$40 ]
Added variable bitmap_init::$3 to live range equivalence class [ bitmap_init::$3 ]
Added variable bitmap_init::$4 to live range equivalence class [ bitmap_init::$4 ]
Added variable bitmap_init::$27 to live range equivalence class [ bitmap_init::$27 ]
Added variable bitmap_init::hdelta#0 to live range equivalence class [ bitmap_init::hdelta#0 ]
Added variable bitmap_init::$28 to live range equivalence class [ bitmap_init::$28 ]
Added variable bitmap_init::$41 to live range equivalence class [ bitmap_init::$41 ]
Added variable bitmap_clear::$6 to live range equivalence class [ bitmap_clear::$6 ]
Added variable bitmap_clear::vdelta#0 to live range equivalence class [ bitmap_clear::vdelta#0 ]
Added variable bitmap_clear::$0 to live range equivalence class [ bitmap_clear::$0 ]
Added variable bitmap_clear::$1 to live range equivalence class [ bitmap_clear::$1 ]
Added variable bitmap_clear::$7 to live range equivalence class [ bitmap_clear::$7 ]
Added variable bitmap_clear::hdelta#0 to live range equivalence class [ bitmap_clear::hdelta#0 ]
Added variable mul16u::b#0 to live range equivalence class [ mul16u::b#0 ]
Added variable mul16u::return#0 to live range equivalence class [ mul16u::return#0 ]
Added variable bitmap_clear::count#0 to live range equivalence class [ bitmap_clear::count#0 ]
Added variable bitmap_clear::vbank#0 to live range equivalence class [ bitmap_clear::vbank#0 ]
Added variable bitmap_clear::vdest#0 to live range equivalence class [ bitmap_clear::vdest#0 ]
Added variable memset_vram::vbank#0 to live range equivalence class [ memset_vram::vbank#0 ]
Added variable memset_vram::vdest#0 to live range equivalence class [ memset_vram::vdest#0 ]
Added variable memset_vram::num#0 to live range equivalence class [ memset_vram::num#0 ]
Added variable kbhit::ch to live range equivalence class [ kbhit::ch ]
Added variable kbhit::return#0 to live range equivalence class [ kbhit::return#0 ]
Added variable kbhit::return#1 to live range equivalence class [ kbhit::return#1 ]
Added variable bitmap_line::xd#2 to live range equivalence class [ bitmap_line::xd#2 ]
Added variable bitmap_line::yd#2 to live range equivalence class [ bitmap_line::yd#2 ]
Added variable bitmap_line::yd#1 to live range equivalence class [ bitmap_line::yd#1 ]
Added variable bitmap_line::xd#1 to live range equivalence class [ bitmap_line::xd#1 ]
Added variable bitmap_line::yd#10 to live range equivalence class [ bitmap_line::yd#10 ]
Added variable bitmap_line::yd#11 to live range equivalence class [ bitmap_line::yd#11 ]
Added variable rand::$0 to live range equivalence class [ rand::$0 ]
Added variable rand_state#0 to live range equivalence class [ rand_state#0 ]
Added variable rand::$1 to live range equivalence class [ rand::$1 ]
Added variable rand_state#1 to live range equivalence class [ rand_state#1 ]
Added variable rand::$2 to live range equivalence class [ rand::$2 ]
Added variable rand::return#0 to live range equivalence class [ rand::return#0 ]
Added variable divr16u::divisor#0 to live range equivalence class [ divr16u::divisor#0 ]
Added variable modr16u::return#0 to live range equivalence class [ modr16u::return#0 ]
Added variable vera_layer_set_text_color_mode::addr#0 to live range equivalence class [ vera_layer_set_text_color_mode::addr#0 ]
Added variable vera_layer_get_mapbase_bank::return#0 to live range equivalence class [ vera_layer_get_mapbase_bank::return#0 ]
Added variable vera_layer_get_mapbase_offset::$0 to live range equivalence class [ vera_layer_get_mapbase_offset::$0 ]
Added variable vera_layer_get_mapbase_offset::return#0 to live range equivalence class [ vera_layer_get_mapbase_offset::return#0 ]
Added variable vera_layer_get_rowshift::return#0 to live range equivalence class [ vera_layer_get_rowshift::return#0 ]
Added variable vera_layer_get_rowskip::$0 to live range equivalence class [ vera_layer_get_rowskip::$0 ]
Added variable vera_layer_get_rowskip::return#0 to live range equivalence class [ vera_layer_get_rowskip::return#0 ]
Added variable vera_layer_set_config::$0 to live range equivalence class [ vera_layer_set_config::$0 ]
Added variable vera_layer_set_config::addr#0 to live range equivalence class [ vera_layer_set_config::addr#0 ]
Added variable vera_layer_set_tilebase::$0 to live range equivalence class [ vera_layer_set_tilebase::$0 ]
Added variable vera_layer_set_tilebase::addr#0 to live range equivalence class [ vera_layer_set_tilebase::addr#0 ]
Added variable vera_layer_get_backcolor::return#1 to live range equivalence class [ vera_layer_get_backcolor::return#1 ]
Added variable vera_layer_get_textcolor::return#1 to live range equivalence class [ vera_layer_get_textcolor::return#1 ]
Added variable vera_layer_get_color::return#0 to live range equivalence class [ vera_layer_get_color::return#0 ]
Added variable cputc::color#0 to live range equivalence class [ cputc::color#0 ]
Added variable cputc::$15 to live range equivalence class [ cputc::$15 ]
Added variable cputc::conio_addr#0 to live range equivalence class [ cputc::conio_addr#0 ]
Added variable cputc::$2 to live range equivalence class [ cputc::$2 ]
Added variable cputc::conio_addr#1 to live range equivalence class [ cputc::conio_addr#1 ]
Added variable cputc::$4 to live range equivalence class [ cputc::$4 ]
Added variable cputc::$5 to live range equivalence class [ cputc::$5 ]
Added variable cputc::$6 to live range equivalence class [ cputc::$6 ]
Added variable cputc::scroll_enable#0 to live range equivalence class [ cputc::scroll_enable#0 ]
Added variable cputc::$16 to live range equivalence class [ cputc::$16 ]
Added variable mul16u::$1 to live range equivalence class [ mul16u::$1 ]
Added variable memset_vram::$0 to live range equivalence class [ memset_vram::$0 ]
Added variable memset_vram::$1 to live range equivalence class [ memset_vram::$1 ]
Added variable memset_vram::$2 to live range equivalence class [ memset_vram::$2 ]
Added variable bitmap_line_ydxi::$6 to live range equivalence class [ bitmap_line_ydxi::$6 ]
Added variable bitmap_line_xdyi::$6 to live range equivalence class [ bitmap_line_xdyi::$6 ]
Added variable bitmap_line_ydxd::$6 to live range equivalence class [ bitmap_line_ydxd::$6 ]
Added variable bitmap_line_xdyd::$6 to live range equivalence class [ bitmap_line_xdyd::$6 ]
Added variable divr16u::$1 to live range equivalence class [ divr16u::$1 ]
Added variable divr16u::$2 to live range equivalence class [ divr16u::$2 ]
Added variable rem16u#0 to live range equivalence class [ rem16u#0 ]
Added variable vera_layer_get_color::$3 to live range equivalence class [ vera_layer_get_color::$3 ]
Added variable vera_layer_get_color::addr#0 to live range equivalence class [ vera_layer_get_color::addr#0 ]
Added variable vera_layer_get_color::$0 to live range equivalence class [ vera_layer_get_color::$0 ]
Added variable vera_layer_get_color::$1 to live range equivalence class [ vera_layer_get_color::$1 ]
Added variable cputln::$2 to live range equivalence class [ cputln::$2 ]
Added variable cputln::temp#0 to live range equivalence class [ cputln::temp#0 ]
Added variable cputln::temp#1 to live range equivalence class [ cputln::temp#1 ]
Added variable cputln::$3 to live range equivalence class [ cputln::$3 ]
Added variable bitmap_plot::$9 to live range equivalence class [ bitmap_plot::$9 ]
Added variable bitmap_plot::$12 to live range equivalence class [ bitmap_plot::$12 ]
Added variable bitmap_plot::plot_x#0 to live range equivalence class [ bitmap_plot::plot_x#0 ]
Added variable bitmap_plot::$10 to live range equivalence class [ bitmap_plot::$10 ]
Added variable bitmap_plot::$13 to live range equivalence class [ bitmap_plot::$13 ]
Added variable bitmap_plot::plot_y#0 to live range equivalence class [ bitmap_plot::plot_y#0 ]
Added variable bitmap_plot::vera_vram_address01_bankaddr#0 to live range equivalence class [ bitmap_plot::vera_vram_address01_bankaddr#0 ]
Added variable bitmap_plot::$14 to live range equivalence class [ bitmap_plot::$14 ]
Added variable bitmap_plot::bitshift#0 to live range equivalence class [ bitmap_plot::bitshift#0 ]
Added variable bitmap_plot::vera_vram_address01_$0 to live range equivalence class [ bitmap_plot::vera_vram_address01_$0 ]
Added variable bitmap_plot::vera_vram_address01_$1 to live range equivalence class [ bitmap_plot::vera_vram_address01_$1 ]
Added variable bitmap_plot::vera_vram_address01_$3 to live range equivalence class [ bitmap_plot::vera_vram_address01_$3 ]
Added variable bitmap_plot::$15 to live range equivalence class [ bitmap_plot::$15 ]
Added variable bitmap_plot::$6 to live range equivalence class [ bitmap_plot::$6 ]
Added variable bitmap_plot::$7 to live range equivalence class [ bitmap_plot::$7 ]
Added variable bitmap_plot::$8 to live range equivalence class [ bitmap_plot::$8 ]
Added variable insertup::cy#0 to live range equivalence class [ insertup::cy#0 ]
Added variable insertup::width#0 to live range equivalence class [ insertup::width#0 ]
Added variable insertup::$3 to live range equivalence class [ insertup::$3 ]
Added variable insertup::line#0 to live range equivalence class [ insertup::line#0 ]
Added variable insertup::start#0 to live range equivalence class [ insertup::start#0 ]
Added variable memcpy_in_vram::src#0 to live range equivalence class [ memcpy_in_vram::src#0 ]
Added variable clearline::$5 to live range equivalence class [ clearline::$5 ]
Added variable clearline::addr#0 to live range equivalence class [ clearline::addr#0 ]
Added variable clearline::$1 to live range equivalence class [ clearline::$1 ]
Added variable clearline::$2 to live range equivalence class [ clearline::$2 ]
Added variable vera_layer_get_color::return#4 to live range equivalence class [ vera_layer_get_color::return#4 ]
Added variable clearline::color#0 to live range equivalence class [ clearline::color#0 ]
Complete equivalence classes
[ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
[ main::x#3 main::x#1 ]
[ main::color#2 main::color#1 ]
[ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ]
[ vera_layer_set_textcolor::color#6 ]
[ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ]
[ vera_layer_set_backcolor::color#4 ]
[ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
[ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
[ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
[ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ]
[ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ]
[ memcpy_in_vram::dest_bank#2 ]
[ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ]
[ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
[ vera_layer_mode_tile::mapwidth#10 ]
[ vera_layer_mode_tile::layer#10 ]
[ vera_layer_mode_tile::mapheight#10 ]
[ vera_layer_mode_tile::mapbase_address#10 ]
[ vera_layer_mode_tile::tilebase_address#10 ]
[ vera_layer_mode_tile::tilewidth#10 ]
[ vera_layer_mode_tile::tileheight#10 ]
[ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
[ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
[ clrscr::c#2 clrscr::c#1 ]
[ cputs::s#8 cputs::s#9 cputs::s#0 ]
[ bitmap_init::x#10 bitmap_init::x#1 ]
[ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
[ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
[ bitmap_init::y#2 bitmap_init::y#1 ]
[ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ]
[ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ]
[ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ]
[ bitmap_line::y0#10 bitmap_line::y0#0 ]
[ bitmap_line::y1#10 bitmap_line::y1#0 ]
[ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ]
[ rand_state#13 rand_state#23 rand_state#14 ]
[ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ]
[ modr16u::divisor#4 ]
[ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ]
[ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ]
[ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ]
[ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ]
[ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ]
[ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ]
[ mul16u::a#2 mul16u::a#0 mul16u::a#1 ]
[ mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
[ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
[ memset_vram::i#2 memset_vram::i#1 ]
[ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ]
[ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ]
[ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ]
[ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ]
[ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ]
[ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ]
[ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ]
[ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ]
[ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ]
[ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ]
[ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ]
[ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ]
[ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ]
[ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ]
[ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ]
[ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ]
[ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ]
[ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ]
[ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ]
[ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
[ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ]
[ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ]
[ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ]
[ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ]
[ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ]
[ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ]
[ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ]
[ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ]
[ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ]
[ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ]
[ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ]
[ divr16u::i#2 divr16u::i#1 ]
[ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
[ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
[ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ]
[ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ]
[ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
[ insertup::i#2 insertup::i#1 ]
[ clearline::c#2 clearline::c#1 ]
[ conio_screen_width ]
[ conio_screen_height ]
[ conio_screen_layer ]
[ conio_width ]
[ conio_height ]
[ conio_rowshift ]
[ conio_rowskip ]
[ __bitmap_address ]
[ __bitmap_layer ]
[ __bitmap_hscale ]
[ __bitmap_vscale ]
[ __bitmap_color_depth ]
[ kbhit::return#2 ]
[ main::$30 ]
[ kbhit::return#3 ]
[ main::$43 ]
[ rand::return#2 ]
[ modr16u::return#2 ]
[ rand::return#3 ]
[ modr16u::return#3 ]
[ rand::return#10 ]
[ modr16u::return#4 ]
[ rand::return#11 ]
[ modr16u::return#10 ]
[ rand::return#12 ]
[ main::$40 ]
[ screensize::hscale#0 ]
[ screensize::$1 ]
[ screensize::vscale#0 ]
[ screensize::$3 ]
[ vera_layer_get_mapbase_bank::layer#0 ]
[ vera_layer_get_mapbase_bank::return#2 ]
[ CONIO_SCREEN_BANK#15 ]
[ vera_layer_get_mapbase_offset::layer#0 ]
[ vera_layer_get_mapbase_offset::return#2 ]
[ CONIO_SCREEN_TEXT#104 ]
[ screenlayer::vera_layer_get_width1_layer#0 ]
[ screenlayer::vera_layer_get_width1_$2 ]
[ screenlayer::vera_layer_get_width1_config#0 ]
[ screenlayer::vera_layer_get_width1_$0 ]
[ screenlayer::vera_layer_get_width1_$1 ]
[ screenlayer::vera_layer_get_width1_$3 ]
[ screenlayer::vera_layer_get_width1_return#0 ]
[ screenlayer::vera_layer_get_width1_return#1 ]
[ screenlayer::$2 ]
[ vera_layer_get_rowshift::layer#0 ]
[ vera_layer_get_rowshift::return#2 ]
[ screenlayer::$3 ]
[ vera_layer_get_rowskip::layer#0 ]
[ vera_layer_get_rowskip::return#2 ]
[ screenlayer::$4 ]
[ screenlayer::vera_layer_get_height1_layer#0 ]
[ screenlayer::vera_layer_get_height1_$2 ]
[ screenlayer::vera_layer_get_height1_config#0 ]
[ screenlayer::vera_layer_get_height1_$0 ]
[ screenlayer::vera_layer_get_height1_$1 ]
[ screenlayer::vera_layer_get_height1_$3 ]
[ screenlayer::vera_layer_get_height1_return#0 ]
[ screenlayer::vera_layer_get_height1_return#1 ]
[ screenlayer::$5 ]
[ vera_layer_set_mapbase::$0 ]
[ vera_layer_set_mapbase::addr#0 ]
[ gotoxy::$6 ]
[ gotoxy::line_offset#0 ]
[ gotoxy::$5 ]
[ memcpy_in_vram::$0 ]
[ memcpy_in_vram::$1 ]
[ memcpy_in_vram::$3 ]
[ memcpy_in_vram::$4 ]
[ memcpy_in_vram::$5 ]
[ vera_layer_mode_tile::$14 ]
[ vera_layer_mode_tile::$1 ]
[ vera_layer_mode_tile::$17 ]
[ vera_layer_mode_tile::$2 ]
[ vera_layer_mode_tile::$18 ]
[ vera_layer_mode_tile::mapbase_address#0 ]
[ vera_layer_mode_tile::mapbase#0 ]
[ vera_layer_mode_tile::$6 ]
[ vera_layer_mode_tile::$7 ]
[ vera_layer_mode_tile::tilebase_address#0 ]
[ vera_layer_mode_tile::tilebase#0 ]
[ vera_layer_mode_tile::$13 ]
[ vera_layer_mode_tile::$12 ]
[ vera_layer_mode_tile::$11 ]
[ vera_layer_get_backcolor::layer#0 ]
[ vera_layer_get_backcolor::return#0 ]
[ clrscr::$0 ]
[ clrscr::$1 ]
[ vera_layer_get_textcolor::layer#0 ]
[ vera_layer_get_textcolor::return#0 ]
[ clrscr::$2 ]
[ clrscr::color#0 ]
[ clrscr::$9 ]
[ clrscr::$5 ]
[ clrscr::$6 ]
[ clrscr::$7 ]
[ cputs::c#1 ]
[ cputc::c#0 ]
[ bitmap_init::vera_layer_get_color_depth1_layer#0 ]
[ bitmap_init::vera_layer_get_color_depth1_$1 ]
[ bitmap_init::vera_layer_get_color_depth1_config#0 ]
[ bitmap_init::vera_layer_get_color_depth1_$0 ]
[ bitmap_init::vera_layer_get_color_depth1_return#0 ]
[ bitmap_init::vera_layer_get_color_depth1_return#1 ]
[ bitmap_init::$0 ]
[ vera_display_get_hscale::return#2 ]
[ bitmap_init::$1 ]
[ vera_display_get_vscale::return#2 ]
[ bitmap_init::$2 ]
[ bitmap_init::$7 ]
[ bitmap_init::$23 ]
[ bitmap_init::$29 ]
[ bitmap_init::$30 ]
[ bitmap_init::$31 ]
[ bitmap_init::$10 ]
[ bitmap_init::$24 ]
[ bitmap_init::$32 ]
[ bitmap_init::$33 ]
[ bitmap_init::$34 ]
[ bitmap_init::$13 ]
[ bitmap_init::$25 ]
[ bitmap_init::$35 ]
[ bitmap_init::$36 ]
[ bitmap_init::$37 ]
[ bitmap_init::$26 ]
[ bitmap_init::$38 ]
[ bitmap_init::$39 ]
[ bitmap_init::$40 ]
[ bitmap_init::$3 ]
[ bitmap_init::$4 ]
[ bitmap_init::$27 ]
[ bitmap_init::hdelta#0 ]
[ bitmap_init::$28 ]
[ bitmap_init::$41 ]
[ bitmap_clear::$6 ]
[ bitmap_clear::vdelta#0 ]
[ bitmap_clear::$0 ]
[ bitmap_clear::$1 ]
[ bitmap_clear::$7 ]
[ bitmap_clear::hdelta#0 ]
[ mul16u::b#0 ]
[ mul16u::return#0 ]
[ bitmap_clear::count#0 ]
[ bitmap_clear::vbank#0 ]
[ bitmap_clear::vdest#0 ]
[ memset_vram::vbank#0 ]
[ memset_vram::vdest#0 ]
[ memset_vram::num#0 ]
[ kbhit::ch ]
[ kbhit::return#0 ]
[ kbhit::return#1 ]
[ bitmap_line::xd#2 ]
[ bitmap_line::yd#2 ]
[ bitmap_line::yd#1 ]
[ bitmap_line::xd#1 ]
[ bitmap_line::yd#10 ]
[ bitmap_line::yd#11 ]
[ rand::$0 ]
[ rand_state#0 ]
[ rand::$1 ]
[ rand_state#1 ]
[ rand::$2 ]
[ rand::return#0 ]
[ divr16u::divisor#0 ]
[ modr16u::return#0 ]
[ vera_layer_set_text_color_mode::addr#0 ]
[ vera_layer_get_mapbase_bank::return#0 ]
[ vera_layer_get_mapbase_offset::$0 ]
[ vera_layer_get_mapbase_offset::return#0 ]
[ vera_layer_get_rowshift::return#0 ]
[ vera_layer_get_rowskip::$0 ]
[ vera_layer_get_rowskip::return#0 ]
[ vera_layer_set_config::$0 ]
[ vera_layer_set_config::addr#0 ]
[ vera_layer_set_tilebase::$0 ]
[ vera_layer_set_tilebase::addr#0 ]
[ vera_layer_get_backcolor::return#1 ]
[ vera_layer_get_textcolor::return#1 ]
[ vera_layer_get_color::return#0 ]
[ cputc::color#0 ]
[ cputc::$15 ]
[ cputc::conio_addr#0 ]
[ cputc::$2 ]
[ cputc::conio_addr#1 ]
[ cputc::$4 ]
[ cputc::$5 ]
[ cputc::$6 ]
[ cputc::scroll_enable#0 ]
[ cputc::$16 ]
[ mul16u::$1 ]
[ memset_vram::$0 ]
[ memset_vram::$1 ]
[ memset_vram::$2 ]
[ bitmap_line_ydxi::$6 ]
[ bitmap_line_xdyi::$6 ]
[ bitmap_line_ydxd::$6 ]
[ bitmap_line_xdyd::$6 ]
[ divr16u::$1 ]
[ divr16u::$2 ]
[ rem16u#0 ]
[ vera_layer_get_color::$3 ]
[ vera_layer_get_color::addr#0 ]
[ vera_layer_get_color::$0 ]
[ vera_layer_get_color::$1 ]
[ cputln::$2 ]
[ cputln::temp#0 ]
[ cputln::temp#1 ]
[ cputln::$3 ]
[ bitmap_plot::$9 ]
[ bitmap_plot::$12 ]
[ bitmap_plot::plot_x#0 ]
[ bitmap_plot::$10 ]
[ bitmap_plot::$13 ]
[ bitmap_plot::plot_y#0 ]
[ bitmap_plot::vera_vram_address01_bankaddr#0 ]
[ bitmap_plot::$14 ]
[ bitmap_plot::bitshift#0 ]
[ bitmap_plot::vera_vram_address01_$0 ]
[ bitmap_plot::vera_vram_address01_$1 ]
[ bitmap_plot::vera_vram_address01_$3 ]
[ bitmap_plot::$15 ]
[ bitmap_plot::$6 ]
[ bitmap_plot::$7 ]
[ bitmap_plot::$8 ]
[ insertup::cy#0 ]
[ insertup::width#0 ]
[ insertup::$3 ]
[ insertup::line#0 ]
[ insertup::start#0 ]
[ memcpy_in_vram::src#0 ]
[ clearline::$5 ]
[ clearline::addr#0 ]
[ clearline::$1 ]
[ clearline::$2 ]
[ vera_layer_get_color::return#4 ]
[ clearline::color#0 ]
Allocated zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Allocated zp[2]:3 [ main::x#3 main::x#1 ]
Allocated zp[1]:5 [ main::color#2 main::color#1 ]
Allocated zp[1]:6 [ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ]
Allocated zp[1]:7 [ vera_layer_set_textcolor::color#6 ]
Allocated zp[1]:8 [ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ]
Allocated zp[1]:9 [ vera_layer_set_backcolor::color#4 ]
Allocated zp[1]:10 [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
Allocated zp[1]:11 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
Allocated zp[1]:12 [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
Allocated zp[2]:13 [ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ]
Allocated zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ]
Allocated zp[1]:17 [ memcpy_in_vram::dest_bank#2 ]
Allocated zp[2]:18 [ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ]
Allocated zp[2]:20 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
Allocated zp[2]:22 [ vera_layer_mode_tile::mapwidth#10 ]
Allocated zp[1]:24 [ vera_layer_mode_tile::layer#10 ]
Allocated zp[2]:25 [ vera_layer_mode_tile::mapheight#10 ]
Allocated zp[4]:27 [ vera_layer_mode_tile::mapbase_address#10 ]
Allocated zp[4]:31 [ vera_layer_mode_tile::tilebase_address#10 ]
Allocated zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ]
Allocated zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ]
Allocated zp[1]:37 [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
Allocated zp[1]:38 [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
Allocated zp[1]:39 [ clrscr::l#2 clrscr::l#1 ]
Allocated zp[2]:40 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
Allocated zp[1]:42 [ clrscr::c#2 clrscr::c#1 ]
Allocated zp[2]:43 [ cputs::s#8 cputs::s#9 cputs::s#0 ]
Allocated zp[2]:45 [ bitmap_init::x#10 bitmap_init::x#1 ]
Allocated zp[1]:47 [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
Allocated zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
Allocated zp[2]:49 [ bitmap_init::y#2 bitmap_init::y#1 ]
Allocated zp[4]:51 [ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ]
Allocated zp[2]:55 [ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ]
Allocated zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ]
Allocated zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 ]
Allocated zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 ]
Allocated zp[1]:63 [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ]
Allocated zp[2]:64 [ rand_state#13 rand_state#23 rand_state#14 ]
Allocated zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ]
Allocated zp[2]:68 [ modr16u::divisor#4 ]
Allocated zp[1]:70 [ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ]
Allocated zp[1]:71 [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ]
Allocated zp[1]:72 [ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ]
Allocated zp[1]:73 [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ]
Allocated zp[1]:74 [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ]
Allocated zp[1]:75 [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ]
Allocated zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 ]
Allocated zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ]
Allocated zp[4]:82 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
Allocated zp[4]:86 [ memset_vram::i#2 memset_vram::i#1 ]
Allocated zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ]
Allocated zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ]
Allocated zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ]
Allocated zp[2]:95 [ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ]
Allocated zp[2]:97 [ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ]
Allocated zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ]
Allocated zp[2]:101 [ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ]
Allocated zp[2]:103 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ]
Allocated zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ]
Allocated zp[2]:106 [ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ]
Allocated zp[2]:108 [ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ]
Allocated zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ]
Allocated zp[2]:112 [ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ]
Allocated zp[2]:114 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ]
Allocated zp[2]:116 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ]
Allocated zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ]
Allocated zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ]
Allocated zp[2]:121 [ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ]
Allocated zp[2]:123 [ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ]
Allocated zp[2]:125 [ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
Allocated zp[2]:127 [ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ]
Allocated zp[2]:129 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ]
Allocated zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ]
Allocated zp[2]:132 [ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ]
Allocated zp[2]:134 [ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ]
Allocated zp[2]:136 [ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ]
Allocated zp[2]:138 [ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ]
Allocated zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ]
Allocated zp[2]:142 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ]
Allocated zp[2]:144 [ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ]
Allocated zp[2]:146 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ]
Allocated zp[1]:148 [ divr16u::i#2 divr16u::i#1 ]
Allocated zp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Allocated zp[1]:150 [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
Allocated zp[2]:151 [ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ]
Allocated zp[2]:153 [ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ]
Allocated zp[1]:155 [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
Allocated zp[1]:156 [ insertup::i#2 insertup::i#1 ]
Allocated zp[2]:157 [ clearline::c#2 clearline::c#1 ]
Allocated zp[1]:159 [ conio_screen_width ]
Allocated zp[1]:160 [ conio_screen_height ]
Allocated zp[1]:161 [ conio_screen_layer ]
Allocated zp[2]:162 [ conio_width ]
Allocated zp[2]:164 [ conio_height ]
Allocated zp[1]:166 [ conio_rowshift ]
Allocated zp[2]:167 [ conio_rowskip ]
Allocated zp[4]:169 [ __bitmap_address ]
Allocated zp[1]:173 [ __bitmap_layer ]
Allocated zp[1]:174 [ __bitmap_hscale ]
Allocated zp[1]:175 [ __bitmap_vscale ]
Allocated zp[1]:176 [ __bitmap_color_depth ]
Allocated zp[1]:177 [ kbhit::return#2 ]
Allocated zp[1]:178 [ main::$30 ]
Allocated zp[1]:179 [ kbhit::return#3 ]
Allocated zp[1]:180 [ main::$43 ]
Allocated zp[2]:181 [ rand::return#2 ]
Allocated zp[2]:183 [ modr16u::return#2 ]
Allocated zp[2]:185 [ rand::return#3 ]
Allocated zp[2]:187 [ modr16u::return#3 ]
Allocated zp[2]:189 [ rand::return#10 ]
Allocated zp[2]:191 [ modr16u::return#4 ]
Allocated zp[2]:193 [ rand::return#11 ]
Allocated zp[2]:195 [ modr16u::return#10 ]
Allocated zp[2]:197 [ rand::return#12 ]
Allocated zp[2]:199 [ main::$40 ]
Allocated zp[1]:201 [ screensize::hscale#0 ]
Allocated zp[1]:202 [ screensize::$1 ]
Allocated zp[1]:203 [ screensize::vscale#0 ]
Allocated zp[1]:204 [ screensize::$3 ]
Allocated zp[1]:205 [ vera_layer_get_mapbase_bank::layer#0 ]
Allocated zp[1]:206 [ vera_layer_get_mapbase_bank::return#2 ]
Allocated zp[1]:207 [ CONIO_SCREEN_BANK#15 ]
Allocated zp[1]:208 [ vera_layer_get_mapbase_offset::layer#0 ]
Allocated zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 ]
Allocated zp[2]:211 [ CONIO_SCREEN_TEXT#104 ]
Allocated zp[1]:213 [ screenlayer::vera_layer_get_width1_layer#0 ]
Allocated zp[1]:214 [ screenlayer::vera_layer_get_width1_$2 ]
Allocated zp[2]:215 [ screenlayer::vera_layer_get_width1_config#0 ]
Allocated zp[1]:217 [ screenlayer::vera_layer_get_width1_$0 ]
Allocated zp[1]:218 [ screenlayer::vera_layer_get_width1_$1 ]
Allocated zp[1]:219 [ screenlayer::vera_layer_get_width1_$3 ]
Allocated zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 ]
Allocated zp[2]:222 [ screenlayer::vera_layer_get_width1_return#1 ]
Allocated zp[2]:224 [ screenlayer::$2 ]
Allocated zp[1]:226 [ vera_layer_get_rowshift::layer#0 ]
Allocated zp[1]:227 [ vera_layer_get_rowshift::return#2 ]
Allocated zp[1]:228 [ screenlayer::$3 ]
Allocated zp[1]:229 [ vera_layer_get_rowskip::layer#0 ]
Allocated zp[2]:230 [ vera_layer_get_rowskip::return#2 ]
Allocated zp[2]:232 [ screenlayer::$4 ]
Allocated zp[1]:234 [ screenlayer::vera_layer_get_height1_layer#0 ]
Allocated zp[1]:235 [ screenlayer::vera_layer_get_height1_$2 ]
Allocated zp[2]:236 [ screenlayer::vera_layer_get_height1_config#0 ]
Allocated zp[1]:238 [ screenlayer::vera_layer_get_height1_$0 ]
Allocated zp[1]:239 [ screenlayer::vera_layer_get_height1_$1 ]
Allocated zp[1]:240 [ screenlayer::vera_layer_get_height1_$3 ]
Allocated zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 ]
Allocated zp[2]:243 [ screenlayer::vera_layer_get_height1_return#1 ]
Allocated zp[2]:245 [ screenlayer::$5 ]
Allocated zp[1]:247 [ vera_layer_set_mapbase::$0 ]
Allocated zp[2]:248 [ vera_layer_set_mapbase::addr#0 ]
Allocated zp[2]:250 [ gotoxy::$6 ]
Allocated zp[2]:252 [ gotoxy::line_offset#0 ]
Allocated zp[1]:254 [ gotoxy::$5 ]
Allocated zp[1]:255 [ memcpy_in_vram::$0 ]
Allocated zp[1]:256 [ memcpy_in_vram::$1 ]
Allocated zp[1]:257 [ memcpy_in_vram::$3 ]
Allocated zp[1]:258 [ memcpy_in_vram::$4 ]
Allocated zp[1]:259 [ memcpy_in_vram::$5 ]
Allocated zp[1]:260 [ vera_layer_mode_tile::$14 ]
Allocated zp[2]:261 [ vera_layer_mode_tile::$1 ]
Allocated zp[1]:263 [ vera_layer_mode_tile::$17 ]
Allocated zp[1]:264 [ vera_layer_mode_tile::$2 ]
Allocated zp[1]:265 [ vera_layer_mode_tile::$18 ]
Allocated zp[4]:266 [ vera_layer_mode_tile::mapbase_address#0 ]
Allocated zp[1]:270 [ vera_layer_mode_tile::mapbase#0 ]
Allocated zp[2]:271 [ vera_layer_mode_tile::$6 ]
Allocated zp[1]:273 [ vera_layer_mode_tile::$7 ]
Allocated zp[4]:274 [ vera_layer_mode_tile::tilebase_address#0 ]
Allocated zp[1]:278 [ vera_layer_mode_tile::tilebase#0 ]
Allocated zp[1]:279 [ vera_layer_mode_tile::$13 ]
Allocated zp[1]:280 [ vera_layer_mode_tile::$12 ]
Allocated zp[1]:281 [ vera_layer_mode_tile::$11 ]
Allocated zp[1]:282 [ vera_layer_get_backcolor::layer#0 ]
Allocated zp[1]:283 [ vera_layer_get_backcolor::return#0 ]
Allocated zp[1]:284 [ clrscr::$0 ]
Allocated zp[1]:285 [ clrscr::$1 ]
Allocated zp[1]:286 [ vera_layer_get_textcolor::layer#0 ]
Allocated zp[1]:287 [ vera_layer_get_textcolor::return#0 ]
Allocated zp[1]:288 [ clrscr::$2 ]
Allocated zp[1]:289 [ clrscr::color#0 ]
Allocated zp[1]:290 [ clrscr::$9 ]
Allocated zp[1]:291 [ clrscr::$5 ]
Allocated zp[1]:292 [ clrscr::$6 ]
Allocated zp[1]:293 [ clrscr::$7 ]
Allocated zp[1]:294 [ cputs::c#1 ]
Allocated zp[1]:295 [ cputc::c#0 ]
Allocated zp[1]:296 [ bitmap_init::vera_layer_get_color_depth1_layer#0 ]
Allocated zp[1]:297 [ bitmap_init::vera_layer_get_color_depth1_$1 ]
Allocated zp[2]:298 [ bitmap_init::vera_layer_get_color_depth1_config#0 ]
Allocated zp[1]:300 [ bitmap_init::vera_layer_get_color_depth1_$0 ]
Allocated zp[1]:301 [ bitmap_init::vera_layer_get_color_depth1_return#0 ]
Allocated zp[1]:302 [ bitmap_init::vera_layer_get_color_depth1_return#1 ]
Allocated zp[1]:303 [ bitmap_init::$0 ]
Allocated zp[1]:304 [ vera_display_get_hscale::return#2 ]
Allocated zp[1]:305 [ bitmap_init::$1 ]
Allocated zp[1]:306 [ vera_display_get_vscale::return#2 ]
Allocated zp[1]:307 [ bitmap_init::$2 ]
Allocated zp[2]:308 [ bitmap_init::$7 ]
Allocated zp[2]:310 [ bitmap_init::$23 ]
Allocated zp[2]:312 [ bitmap_init::$29 ]
Allocated zp[2]:314 [ bitmap_init::$30 ]
Allocated zp[2]:316 [ bitmap_init::$31 ]
Allocated zp[2]:318 [ bitmap_init::$10 ]
Allocated zp[2]:320 [ bitmap_init::$24 ]
Allocated zp[2]:322 [ bitmap_init::$32 ]
Allocated zp[2]:324 [ bitmap_init::$33 ]
Allocated zp[2]:326 [ bitmap_init::$34 ]
Allocated zp[2]:328 [ bitmap_init::$13 ]
Allocated zp[2]:330 [ bitmap_init::$25 ]
Allocated zp[2]:332 [ bitmap_init::$35 ]
Allocated zp[2]:334 [ bitmap_init::$36 ]
Allocated zp[2]:336 [ bitmap_init::$37 ]
Allocated zp[2]:338 [ bitmap_init::$26 ]
Allocated zp[2]:340 [ bitmap_init::$38 ]
Allocated zp[2]:342 [ bitmap_init::$39 ]
Allocated zp[2]:344 [ bitmap_init::$40 ]
Allocated zp[1]:346 [ bitmap_init::$3 ]
Allocated zp[1]:347 [ bitmap_init::$4 ]
Allocated zp[1]:348 [ bitmap_init::$27 ]
Allocated zp[2]:349 [ bitmap_init::hdelta#0 ]
Allocated zp[2]:351 [ bitmap_init::$28 ]
Allocated zp[2]:353 [ bitmap_init::$41 ]
Allocated zp[1]:355 [ bitmap_clear::$6 ]
Allocated zp[2]:356 [ bitmap_clear::vdelta#0 ]
Allocated zp[1]:358 [ bitmap_clear::$0 ]
Allocated zp[1]:359 [ bitmap_clear::$1 ]
Allocated zp[1]:360 [ bitmap_clear::$7 ]
Allocated zp[2]:361 [ bitmap_clear::hdelta#0 ]
Allocated zp[2]:363 [ mul16u::b#0 ]
Allocated zp[4]:365 [ mul16u::return#0 ]
Allocated zp[4]:369 [ bitmap_clear::count#0 ]
Allocated zp[1]:373 [ bitmap_clear::vbank#0 ]
Allocated zp[2]:374 [ bitmap_clear::vdest#0 ]
Allocated zp[1]:376 [ memset_vram::vbank#0 ]
Allocated zp[2]:377 [ memset_vram::vdest#0 ]
Allocated zp[4]:379 [ memset_vram::num#0 ]
Allocated zp[1]:383 [ kbhit::ch ]
Allocated zp[1]:384 [ kbhit::return#0 ]
Allocated zp[1]:385 [ kbhit::return#1 ]
Allocated zp[2]:386 [ bitmap_line::xd#2 ]
Allocated zp[2]:388 [ bitmap_line::yd#2 ]
Allocated zp[2]:390 [ bitmap_line::yd#1 ]
Allocated zp[2]:392 [ bitmap_line::xd#1 ]
Allocated zp[2]:394 [ bitmap_line::yd#10 ]
Allocated zp[2]:396 [ bitmap_line::yd#11 ]
Allocated zp[2]:398 [ rand::$0 ]
Allocated zp[2]:400 [ rand_state#0 ]
Allocated zp[2]:402 [ rand::$1 ]
Allocated zp[2]:404 [ rand_state#1 ]
Allocated zp[2]:406 [ rand::$2 ]
Allocated zp[2]:408 [ rand::return#0 ]
Allocated zp[2]:410 [ divr16u::divisor#0 ]
Allocated zp[2]:412 [ modr16u::return#0 ]
Allocated zp[2]:414 [ vera_layer_set_text_color_mode::addr#0 ]
Allocated zp[1]:416 [ vera_layer_get_mapbase_bank::return#0 ]
Allocated zp[1]:417 [ vera_layer_get_mapbase_offset::$0 ]
Allocated zp[2]:418 [ vera_layer_get_mapbase_offset::return#0 ]
Allocated zp[1]:420 [ vera_layer_get_rowshift::return#0 ]
Allocated zp[1]:421 [ vera_layer_get_rowskip::$0 ]
Allocated zp[2]:422 [ vera_layer_get_rowskip::return#0 ]
Allocated zp[1]:424 [ vera_layer_set_config::$0 ]
Allocated zp[2]:425 [ vera_layer_set_config::addr#0 ]
Allocated zp[1]:427 [ vera_layer_set_tilebase::$0 ]
Allocated zp[2]:428 [ vera_layer_set_tilebase::addr#0 ]
Allocated zp[1]:430 [ vera_layer_get_backcolor::return#1 ]
Allocated zp[1]:431 [ vera_layer_get_textcolor::return#1 ]
Allocated zp[1]:432 [ vera_layer_get_color::return#0 ]
Allocated zp[1]:433 [ cputc::color#0 ]
Allocated zp[1]:434 [ cputc::$15 ]
Allocated zp[2]:435 [ cputc::conio_addr#0 ]
Allocated zp[1]:437 [ cputc::$2 ]
Allocated zp[2]:438 [ cputc::conio_addr#1 ]
Allocated zp[1]:440 [ cputc::$4 ]
Allocated zp[1]:441 [ cputc::$5 ]
Allocated zp[1]:442 [ cputc::$6 ]
Allocated zp[1]:443 [ cputc::scroll_enable#0 ]
Allocated zp[2]:444 [ cputc::$16 ]
Allocated zp[1]:446 [ mul16u::$1 ]
Allocated zp[1]:447 [ memset_vram::$0 ]
Allocated zp[1]:448 [ memset_vram::$1 ]
Allocated zp[1]:449 [ memset_vram::$2 ]
Allocated zp[2]:450 [ bitmap_line_ydxi::$6 ]
Allocated zp[2]:452 [ bitmap_line_xdyi::$6 ]
Allocated zp[2]:454 [ bitmap_line_ydxd::$6 ]
Allocated zp[2]:456 [ bitmap_line_xdyd::$6 ]
Allocated zp[1]:458 [ divr16u::$1 ]
Allocated zp[1]:459 [ divr16u::$2 ]
Allocated zp[2]:460 [ rem16u#0 ]
Allocated zp[1]:462 [ vera_layer_get_color::$3 ]
Allocated zp[2]:463 [ vera_layer_get_color::addr#0 ]
Allocated zp[1]:465 [ vera_layer_get_color::$0 ]
Allocated zp[1]:466 [ vera_layer_get_color::$1 ]
Allocated zp[1]:467 [ cputln::$2 ]
Allocated zp[2]:468 [ cputln::temp#0 ]
Allocated zp[2]:470 [ cputln::temp#1 ]
Allocated zp[1]:472 [ cputln::$3 ]
Allocated zp[2]:473 [ bitmap_plot::$9 ]
Allocated zp[2]:475 [ bitmap_plot::$12 ]
Allocated zp[4]:477 [ bitmap_plot::plot_x#0 ]
Allocated zp[2]:481 [ bitmap_plot::$10 ]
Allocated zp[2]:483 [ bitmap_plot::$13 ]
Allocated zp[4]:485 [ bitmap_plot::plot_y#0 ]
Allocated zp[4]:489 [ bitmap_plot::vera_vram_address01_bankaddr#0 ]
Allocated zp[2]:493 [ bitmap_plot::$14 ]
Allocated zp[1]:495 [ bitmap_plot::bitshift#0 ]
Allocated zp[1]:496 [ bitmap_plot::vera_vram_address01_$0 ]
Allocated zp[1]:497 [ bitmap_plot::vera_vram_address01_$1 ]
Allocated zp[1]:498 [ bitmap_plot::vera_vram_address01_$3 ]
Allocated zp[2]:499 [ bitmap_plot::$15 ]
Allocated zp[1]:501 [ bitmap_plot::$6 ]
Allocated zp[1]:502 [ bitmap_plot::$7 ]
Allocated zp[1]:503 [ bitmap_plot::$8 ]
Allocated zp[1]:504 [ insertup::cy#0 ]
Allocated zp[1]:505 [ insertup::width#0 ]
Allocated zp[1]:506 [ insertup::$3 ]
Allocated zp[2]:507 [ insertup::line#0 ]
Allocated zp[2]:509 [ insertup::start#0 ]
Allocated zp[2]:511 [ memcpy_in_vram::src#0 ]
Allocated zp[1]:513 [ clearline::$5 ]
Allocated zp[2]:514 [ clearline::addr#0 ]
Allocated zp[1]:516 [ clearline::$1 ]
Allocated zp[1]:517 [ clearline::$2 ]
Allocated zp[1]:518 [ vera_layer_get_color::return#4 ]
Allocated zp[1]:519 [ clearline::color#0 ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] conio_screen_width = 0 [ conio_screen_width ] (  [ conio_screen_width ] { }  ) always clobbers reg byte a 
Statement [2] conio_screen_height = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [3] conio_screen_layer = 1 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [4] conio_width = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [5] conio_height = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [6] conio_rowshift = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [7] conio_rowskip = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [8] __bitmap_address = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [9] __bitmap_layer = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [10] __bitmap_hscale = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [11] __bitmap_vscale = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [12] __bitmap_color_depth = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [61] *VERA_DC_VIDEO = *VERA_DC_VIDEO | *vera_layer_enable [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:207 [ CONIO_SCREEN_BANK#15 ]
Statement [107] bitmap_line::x0#1 = main::x#3 [ main::x#3 main::color#2 bitmap_line::x0#1 ] ( main:15 [ main::x#3 main::color#2 bitmap_line::x0#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:5 [ main::color#2 main::color#1 ]
Statement [108] bitmap_line::x1#1 = main::x#3 [ main::x#3 main::color#2 bitmap_line::x0#1 bitmap_line::x1#1 ] ( main:15 [ main::x#3 main::color#2 bitmap_line::x0#1 bitmap_line::x1#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  ) always clobbers reg byte a 
Statement [113] if(main::x#1<=$13f) goto main::@37 [ main::color#1 main::x#1 ] ( main:15 [ main::color#1 main::x#1 ] { }  ) always clobbers reg byte a 
Statement [117] rand::return#2 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 rand::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 rand::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  ) always clobbers reg byte a 
Statement [118] modr16u::dividend#0 = rand::return#2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::dividend#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::dividend#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 } { modr16u::return#0 = modr16u::return#2 } }  ) always clobbers reg byte a 
Statement [120] modr16u::return#2 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 } { modr16u::return#0 = modr16u::return#2 } }  ) always clobbers reg byte a 
Statement [121] bitmap_line::x0#0 = modr16u::return#2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  ) always clobbers reg byte a 
Statement [123] rand::return#3 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 rand::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 rand::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  ) always clobbers reg byte a 
Statement [124] modr16u::dividend#1 = rand::return#3 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::dividend#1 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::dividend#1 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 } { modr16u::return#0 = modr16u::return#3 } }  ) always clobbers reg byte a 
Statement [126] modr16u::return#3 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 } { modr16u::return#0 = modr16u::return#3 } }  ) always clobbers reg byte a 
Statement [127] bitmap_line::x1#0 = modr16u::return#3 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  ) always clobbers reg byte a 
Statement [129] rand::return#10 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 rand::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 rand::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  ) always clobbers reg byte a 
Statement [130] modr16u::dividend#2 = rand::return#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::dividend#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::dividend#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 } { modr16u::return#0 = modr16u::return#4 } }  ) always clobbers reg byte a 
Statement [132] modr16u::return#4 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::return#4 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::return#4 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 } { modr16u::return#0 = modr16u::return#4 } }  ) always clobbers reg byte a 
Statement [133] bitmap_line::y0#0 = modr16u::return#4 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  ) always clobbers reg byte a 
Statement [135] rand::return#11 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 rand::return#11 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 rand::return#11 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  ) always clobbers reg byte a 
Statement [136] modr16u::dividend#3 = rand::return#11 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::dividend#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::dividend#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 } { modr16u::return#0 = modr16u::return#10 } }  ) always clobbers reg byte a 
Statement [138] modr16u::return#10 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 } { modr16u::return#0 = modr16u::return#10 } }  ) always clobbers reg byte a 
Statement [139] bitmap_line::y1#0 = modr16u::return#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [141] rand::return#12 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 rand::return#12 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 rand::return#12 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [142] main::$40 = rand::return#12 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 main::$40 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 main::$40 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [143] bitmap_line::c#0 = main::$40 & $ff [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 bitmap_line::c#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 bitmap_line::c#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [150] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 [ screensize::hscale#0 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Statement [151] screensize::$1 = $28 << screensize::hscale#0 [ screensize::$1 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  ) always clobbers reg byte a 
Statement [153] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 [ screensize::vscale#0 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  ) always clobbers reg byte a 
Statement [154] screensize::$3 = $1e << screensize::vscale#0 [ screensize::$3 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  ) always clobbers reg byte a 
Statement [157] conio_screen_layer = 1 [ conio_screen_layer ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  ) always clobbers reg byte a 
Statement [164] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [165] CONIO_SCREEN_TEXT#104 = vera_layer_get_mapbase_offset::return#2 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [167] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  ) always clobbers reg byte a 
Statement [168] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  ) always clobbers reg byte a 
Statement [169] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:207 [ CONIO_SCREEN_BANK#15 ]
Statement [170] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  ) always clobbers reg byte a 
Statement [171] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  ) always clobbers reg byte a 
Statement [172] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  ) always clobbers reg byte a 
Statement [173] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  ) always clobbers reg byte a 
Statement [174] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [175] conio_width = screenlayer::$2 [ conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [183] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [184] screenlayer::$4 = vera_layer_get_rowskip::return#2 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  ) always clobbers reg byte a 
Statement [185] conio_rowskip = screenlayer::$4 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [187] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  ) always clobbers reg byte a 
Statement [188] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  ) always clobbers reg byte a 
Statement [189] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [190] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  ) always clobbers reg byte a 
Statement [191] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  ) always clobbers reg byte a 
Statement [192] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  ) always clobbers reg byte a 
Statement [193] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  ) always clobbers reg byte a 
Statement [194] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  ) always clobbers reg byte a 
Statement [195] conio_height = screenlayer::$5 [ conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [204] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] ( vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  main:15::vera_layer_mode_tile:40::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:11 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:24 [ vera_layer_mode_tile::layer#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:263 [ vera_layer_mode_tile::$17 ]
Removing always clobbered register reg byte a as potential for zp[1]:265 [ vera_layer_mode_tile::$18 ]
Statement [205] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] ( vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  main:15::vera_layer_mode_tile:40::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [206] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 [ ] ( vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  main:15::vera_layer_mode_tile:40::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:24 [ vera_layer_mode_tile::layer#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:263 [ vera_layer_mode_tile::$17 ]
Removing always clobbered register reg byte y as potential for zp[1]:265 [ vera_layer_mode_tile::$18 ]
Statement [212] if(0<conio_screen_width) goto gotoxy::@2 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:12 [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
Statement [214] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:12 [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
Statement [215] conio_cursor_y[conio_screen_layer] = gotoxy::y#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a reg byte y 
Statement [216] gotoxy::$6 = (word)gotoxy::y#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [217] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a reg byte y 
Statement [218] gotoxy::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [219] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [222] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:17 [ memcpy_in_vram::dest_bank#2 ]
Removing always clobbered register reg byte a as potential for zp[1]:504 [ insertup::cy#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:505 [ insertup::width#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:156 [ insertup::i#2 insertup::i#1 ]
Statement [227] *VERA_ADDRX_H = VERA_INC_1 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [228] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL [ memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [233] memcpy_in_vram::$5 = VERA_INC_1 | memcpy_in_vram::dest_bank#2 [ memcpy_in_vram::num#3 memcpy_in_vram::$5 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [236] if(memcpy_in_vram::i#2<memcpy_in_vram::num#3) goto memcpy_in_vram::@2 [ memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [238] *VERA_DATA1 = *VERA_DATA0 [ memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [241] if(vera_layer_mode_tile::mapwidth#10==$20) goto vera_layer_mode_tile::@5 [ vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [242] if(vera_layer_mode_tile::mapwidth#10==$40) goto vera_layer_mode_tile::@6 [ vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [243] if(vera_layer_mode_tile::mapwidth#10==$80) goto vera_layer_mode_tile::@7 [ vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [244] if(vera_layer_mode_tile::mapwidth#10!=$100) goto vera_layer_mode_tile::@9 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [245] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 9 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [246] vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] { }  ) always clobbers reg byte a 
Statement [247] vera_layer_rowskip[vera_layer_mode_tile::$14] = $200 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [249] if(vera_layer_mode_tile::mapheight#10==$20) goto vera_layer_mode_tile::@16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:37 [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
Statement [250] if(vera_layer_mode_tile::mapheight#10==$40) goto vera_layer_mode_tile::@13 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [251] if(vera_layer_mode_tile::mapheight#10==$80) goto vera_layer_mode_tile::@14 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [252] if(vera_layer_mode_tile::mapheight#10!=$100) goto vera_layer_mode_tile::@16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [253] vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_256 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] { }  ) always clobbers reg byte a 
Statement [258] vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [259] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [260] vera_mapbase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [263] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 << 2 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [264] vera_mapbase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::mapbase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [265] vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#10 >> 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [270] vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] { }  ) always clobbers reg byte a 
Statement [271] vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] { }  ) always clobbers reg byte a 
Statement [274] vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [275] vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#10 >> 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] { }  ) always clobbers reg byte a 
Statement [277] vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] { }  ) always clobbers reg byte a 
Statement [280] vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] { }  ) always clobbers reg byte a 
Statement [284] vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] { }  ) always clobbers reg byte a 
Statement [290] vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_128 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] { }  ) always clobbers reg byte a 
Statement [291] vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_64 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] { }  ) always clobbers reg byte a 
Statement [292] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 8 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [293] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] { }  ) always clobbers reg byte a 
Statement [294] vera_layer_rowskip[vera_layer_mode_tile::$13] = $100 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [295] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 7 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [296] vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] { }  ) always clobbers reg byte a 
Statement [297] vera_layer_rowskip[vera_layer_mode_tile::$12] = $80 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [298] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 6 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [299] vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] { }  ) always clobbers reg byte a 
Statement [300] vera_layer_rowskip[vera_layer_mode_tile::$11] = $40 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [302] *vera_tilebase_offset = 0 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [303] *vera_tilebase_bank = 0 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [304] *vera_tilebase_address = vera_layer_mode_bitmap::bitmap_address#1 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [305] *VERA_DC_HSCALE = $40 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [306] *VERA_DC_VSCALE = $40 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [312] clrscr::line_text#0 = (byte*)CONIO_SCREEN_TEXT#104 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1 } }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1 } }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1 } }  ) always clobbers reg byte a 
Statement [317] clrscr::$1 = clrscr::$0 << 4 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1 } }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1 } }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1 } }  ) always clobbers reg byte a 
Statement [325] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a reg byte y 
Statement [326] conio_cursor_y[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a reg byte y 
Statement [327] clrscr::$9 = conio_screen_layer << 1 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] { }  ) always clobbers reg byte a 
Statement [328] conio_line_text[clrscr::$9] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [330] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:289 [ clrscr::color#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:39 [ clrscr::l#2 clrscr::l#1 ]
Statement [335] clrscr::$7 = CONIO_SCREEN_BANK#15 | VERA_INC_1 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  ) always clobbers reg byte a 
Statement [339] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [341] *VERA_DATA0 = ' ' [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:42 [ clrscr::c#2 clrscr::c#1 ]
Statement [346] cputs::c#1 = *cputs::s#8 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] ( main:15::cputs:54 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:56 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:58 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:60 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:71 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:86 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:92 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement [352] __bitmap_address = bitmap_init::address#0 [ __bitmap_address ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address ] { }  ) always clobbers reg byte a 
Statement [353] __bitmap_layer = bitmap_init::layer#0 [ __bitmap_address __bitmap_layer ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_layer ] { }  ) always clobbers reg byte a 
Statement [355] bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#0 << 1 [ __bitmap_address bitmap_init::vera_layer_get_color_depth1_$1 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_init::vera_layer_get_color_depth1_$1 ] { }  ) always clobbers reg byte a 
Statement [356] bitmap_init::vera_layer_get_color_depth1_config#0 = vera_layer_config[bitmap_init::vera_layer_get_color_depth1_$1] [ __bitmap_address bitmap_init::vera_layer_get_color_depth1_config#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_init::vera_layer_get_color_depth1_config#0 ] { }  ) always clobbers reg byte a 
Statement [357] bitmap_init::vera_layer_get_color_depth1_$0 = *bitmap_init::vera_layer_get_color_depth1_config#0 & VERA_LAYER_COLOR_DEPTH_MASK [ __bitmap_address bitmap_init::vera_layer_get_color_depth1_$0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_init::vera_layer_get_color_depth1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [370] bitmap_init::bitmask#0 = bitmasks[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 ] { }  ) always clobbers reg byte y 
Statement [371] bitmap_init::bitshift#0 = bitshifts[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 bitmap_init::bitshift#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 bitmap_init::bitshift#0 ] { }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
Statement [373] if(__bitmap_color_depth!=0) goto bitmap_init::@2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
Removing always clobbered register reg byte a as potential for zp[1]:47 [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
Statement [374] bitmap_init::$7 = bitmap_init::x#10 >> 3 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 ] { }  ) always clobbers reg byte a 
Statement [375] bitmap_init::$23 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$23 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$23 ] { }  ) always clobbers reg byte a 
Statement [376] bitmap_init::$29 = __bitmap_plot_x + bitmap_init::$23 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$29 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$29 ] { }  ) always clobbers reg byte a 
Statement [377] *bitmap_init::$29 = bitmap_init::$7 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:47 [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
Statement [378] bitmap_init::$30 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$30 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$30 ] { }  ) always clobbers reg byte a 
Statement [379] *bitmap_init::$30 = bitmap_init::bitmask#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a reg byte y 
Statement [380] bitmap_init::$31 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$31 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$31 ] { }  ) always clobbers reg byte a 
Statement [381] *bitmap_init::$31 = (byte)bitmap_init::bitshift#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a reg byte y 
Statement [385] if(__bitmap_color_depth!=1) goto bitmap_init::@3 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a 
Statement [386] bitmap_init::$10 = bitmap_init::x#10 >> 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 ] { }  ) always clobbers reg byte a 
Statement [387] bitmap_init::$24 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$24 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$24 ] { }  ) always clobbers reg byte a 
Statement [388] bitmap_init::$32 = __bitmap_plot_x + bitmap_init::$24 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$32 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$32 ] { }  ) always clobbers reg byte a 
Statement [389] *bitmap_init::$32 = bitmap_init::$10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [390] bitmap_init::$33 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$33 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$33 ] { }  ) always clobbers reg byte a 
Statement [391] *bitmap_init::$33 = bitmap_init::bitmask#11 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [392] bitmap_init::$34 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$34 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$34 ] { }  ) always clobbers reg byte a 
Statement [393] *bitmap_init::$34 = (byte)bitmap_init::bitshift#11 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [395] bitmap_init::bitmask#2 = bitmap_init::bitmask#11 >> 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#2 bitmap_init::bitmask#2 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#2 bitmap_init::bitmask#2 ] { }  ) always clobbers reg byte a 
Statement [397] if(__bitmap_color_depth!=2) goto bitmap_init::@4 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a 
Statement [398] bitmap_init::$13 = bitmap_init::x#10 >> 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 ] { }  ) always clobbers reg byte a 
Statement [399] bitmap_init::$25 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$25 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$25 ] { }  ) always clobbers reg byte a 
Statement [400] bitmap_init::$35 = __bitmap_plot_x + bitmap_init::$25 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$35 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$35 ] { }  ) always clobbers reg byte a 
Statement [401] *bitmap_init::$35 = bitmap_init::$13 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a reg byte y 
Statement [402] bitmap_init::$36 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$36 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$36 ] { }  ) always clobbers reg byte a 
Statement [403] *bitmap_init::$36 = bitmap_init::bitmask#12 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a reg byte y 
Statement [404] bitmap_init::$37 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$37 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$37 ] { }  ) always clobbers reg byte a 
Statement [405] *bitmap_init::$37 = (byte)bitmap_init::bitshift#12 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a reg byte y 
Statement [406] bitmap_init::bitshift#3 = bitmap_init::bitshift#12 - 4 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#3 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#3 ] { }  ) always clobbers reg byte a 
Statement [407] bitmap_init::bitmask#3 = bitmap_init::bitmask#12 >> 4 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#3 bitmap_init::bitmask#3 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#3 bitmap_init::bitmask#3 ] { }  ) always clobbers reg byte a 
Statement [409] if(__bitmap_color_depth!=3) goto bitmap_init::@5 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a 
Statement [410] bitmap_init::$26 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$26 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$26 ] { }  ) always clobbers reg byte a 
Statement [411] bitmap_init::$38 = __bitmap_plot_x + bitmap_init::$26 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$38 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$38 ] { }  ) always clobbers reg byte a 
Statement [412] *bitmap_init::$38 = bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a reg byte y 
Statement [413] bitmap_init::$39 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$39 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$39 ] { }  ) always clobbers reg byte a 
Statement [414] *bitmap_init::$39 = bitmap_init::bitmask#13 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a reg byte y 
Statement [415] bitmap_init::$40 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$40 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$40 ] { }  ) always clobbers reg byte a 
Statement [416] *bitmap_init::$40 = (byte)bitmap_init::bitshift#13 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a reg byte y 
Statement [418] bitmap_init::bitshift#4 = bitshifts[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#13 bitmap_init::bitshift#4 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#13 bitmap_init::bitshift#4 ] { }  ) always clobbers reg byte y 
Statement [421] bitmap_init::bitmask#4 = bitmasks[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#14 bitmap_init::bitmask#4 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#14 bitmap_init::bitmask#4 ] { }  ) always clobbers reg byte y 
Statement [424] if(bitmap_init::x#1!=$280) goto bitmap_init::@1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#1 bitmap_init::bitmask#16 bitmap_init::bitshift#14 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#1 bitmap_init::bitmask#16 bitmap_init::bitshift#14 ] { }  ) always clobbers reg byte a 
Statement [425] bitmap_init::$3 = __bitmap_color_depth << 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$3 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$3 ] { }  ) always clobbers reg byte a 
Statement [426] bitmap_init::$4 = bitmap_init::$3 + __bitmap_hscale [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$4 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$4 ] { }  ) always clobbers reg byte a 
Statement [427] bitmap_init::$27 = bitmap_init::$4 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$27 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$27 ] { }  ) always clobbers reg byte a 
Statement [428] bitmap_init::hdelta#0 = hdeltas[bitmap_init::$27] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 ] { }  ) always clobbers reg byte a 
Statement [429] bitmap_init::yoffs#0 = __bitmap_address [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::yoffs#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::yoffs#0 ] { }  ) always clobbers reg byte a 
Statement [431] bitmap_init::$28 = bitmap_init::y#2 << 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$28 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$28 ] { }  ) always clobbers reg byte a 
Statement [432] bitmap_init::$41 = __bitmap_plot_y + bitmap_init::$28 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$41 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$41 ] { }  ) always clobbers reg byte a 
Statement [433] *bitmap_init::$41 = bitmap_init::yoffs#2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [434] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + bitmap_init::hdelta#0 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#1 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#1 ] { }  ) always clobbers reg byte a 
Statement [436] if(bitmap_init::y#1!=$1e0) goto bitmap_init::@15 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#1 bitmap_init::yoffs#1 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#1 bitmap_init::yoffs#1 ] { }  ) always clobbers reg byte a 
Statement [438] bitmap_clear::$6 = __bitmap_vscale << 1 [ __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::$6 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::$6 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [439] bitmap_clear::vdelta#0 = vdeltas[bitmap_clear::$6] [ __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::vdelta#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::vdelta#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [440] bitmap_clear::$0 = __bitmap_color_depth << 2 [ __bitmap_address __bitmap_hscale bitmap_clear::vdelta#0 bitmap_clear::$0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale bitmap_clear::vdelta#0 bitmap_clear::$0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [441] bitmap_clear::$1 = bitmap_clear::$0 + __bitmap_hscale [ __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$1 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$1 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [442] bitmap_clear::$7 = bitmap_clear::$1 << 1 [ __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$7 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$7 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [443] bitmap_clear::hdelta#0 = hdeltas[bitmap_clear::$7] [ __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::hdelta#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::hdelta#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [444] mul16u::a#0 = bitmap_clear::hdelta#0 [ __bitmap_address bitmap_clear::vdelta#0 mul16u::a#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 mul16u::a#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [445] mul16u::b#0 = bitmap_clear::vdelta#0 [ __bitmap_address mul16u::a#0 mul16u::b#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::a#0 mul16u::b#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [447] mul16u::return#0 = mul16u::res#2 [ __bitmap_address mul16u::return#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::return#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [448] bitmap_clear::count#0 = mul16u::return#0 [ __bitmap_address bitmap_clear::count#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::count#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [450] bitmap_clear::vdest#0 = word0  __bitmap_address [ bitmap_clear::count#0 bitmap_clear::vbank#0 bitmap_clear::vdest#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_clear::count#0 bitmap_clear::vbank#0 bitmap_clear::vdest#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:373 [ bitmap_clear::vbank#0 ]
Statement [452] memset_vram::vdest#0 = (void*)bitmap_clear::vdest#0 [ bitmap_clear::count#0 memset_vram::vbank#0 memset_vram::vdest#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_clear::count#0 memset_vram::vbank#0 memset_vram::vdest#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:376 [ memset_vram::vbank#0 ]
Statement [453] memset_vram::num#0 = bitmap_clear::count#0 [ memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [456] kbhit::ch = 0 [ kbhit::ch ] ( main:15::kbhit:73 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#23 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 kbhit::ch ] { { kbhit::return#1 = kbhit::return#2 } }  main:15::kbhit:94 [ main::x#3 main::color#2 kbhit::ch ] { { kbhit::return#1 = kbhit::return#3 } }  ) always clobbers reg byte a 
Statement [462] if(bitmap_line::x0#10<bitmap_line::x1#10) goto bitmap_line::@1 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:63 [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ]
Statement [463] bitmap_line::xd#2 = bitmap_line::x0#10 - bitmap_line::x1#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [464] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@7 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [465] bitmap_line::yd#2 = bitmap_line::y0#10 - bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [466] if(bitmap_line::yd#2<bitmap_line::xd#2) goto bitmap_line::@8 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [467] bitmap_line_ydxi::y#0 = bitmap_line::y1#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [468] bitmap_line_ydxi::x#0 = bitmap_line::x1#10 [ bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [469] bitmap_line_ydxi::y1#0 = bitmap_line::y0#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [470] bitmap_line_ydxi::yd#0 = bitmap_line::yd#2 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [471] bitmap_line_ydxi::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 bitmap_line_ydxi::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 bitmap_line_ydxi::xd#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 bitmap_line_ydxi::xd#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [475] bitmap_line_xdyi::x#0 = bitmap_line::x1#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [476] bitmap_line_xdyi::y#0 = bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [477] bitmap_line_xdyi::x1#0 = bitmap_line::x0#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [478] bitmap_line_xdyi::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [479] bitmap_line_xdyi::yd#0 = bitmap_line::yd#2 [ bitmap_line::c#10 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::yd#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::yd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [482] bitmap_line::yd#1 = bitmap_line::y1#10 - bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [483] if(bitmap_line::yd#1<bitmap_line::xd#2) goto bitmap_line::@9 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [484] bitmap_line_ydxd::y#0 = bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [485] bitmap_line_ydxd::x#0 = bitmap_line::x0#10 [ bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [486] bitmap_line_ydxd::y1#0 = bitmap_line::y1#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [487] bitmap_line_ydxd::yd#0 = bitmap_line::yd#1 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [488] bitmap_line_ydxd::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::xd#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::xd#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [491] bitmap_line_xdyd::x#0 = bitmap_line::x1#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [492] bitmap_line_xdyd::y#0 = bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [493] bitmap_line_xdyd::x1#0 = bitmap_line::x0#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [494] bitmap_line_xdyd::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [495] bitmap_line_xdyd::yd#0 = bitmap_line::yd#1 [ bitmap_line::c#10 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::yd#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::yd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [498] bitmap_line::xd#1 = bitmap_line::x1#10 - bitmap_line::x0#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [499] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@11 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [500] bitmap_line::yd#10 = bitmap_line::y0#10 - bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [501] if(bitmap_line::yd#10<bitmap_line::xd#1) goto bitmap_line::@12 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [502] bitmap_line_ydxd::y#1 = bitmap_line::y1#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [503] bitmap_line_ydxd::x#1 = bitmap_line::x1#10 [ bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [504] bitmap_line_ydxd::y1#1 = bitmap_line::y0#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [505] bitmap_line_ydxd::yd#1 = bitmap_line::yd#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [506] bitmap_line_ydxd::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 bitmap_line_ydxd::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 bitmap_line_ydxd::xd#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 bitmap_line_ydxd::xd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [509] bitmap_line_xdyd::x#1 = bitmap_line::x0#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [510] bitmap_line_xdyd::y#1 = bitmap_line::y0#10 [ bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [511] bitmap_line_xdyd::x1#1 = bitmap_line::x1#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [512] bitmap_line_xdyd::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [513] bitmap_line_xdyd::yd#1 = bitmap_line::yd#10 [ bitmap_line::c#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::yd#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::yd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [516] bitmap_line::yd#11 = bitmap_line::y1#10 - bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [517] if(bitmap_line::yd#11<bitmap_line::xd#1) goto bitmap_line::@13 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [518] bitmap_line_ydxi::y#1 = bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [519] bitmap_line_ydxi::x#1 = bitmap_line::x0#10 [ bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [520] bitmap_line_ydxi::y1#1 = bitmap_line::y1#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [521] bitmap_line_ydxi::yd#1 = bitmap_line::yd#11 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [522] bitmap_line_ydxi::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::xd#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::xd#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [525] bitmap_line_xdyi::x#1 = bitmap_line::x0#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [526] bitmap_line_xdyi::y#1 = bitmap_line::y0#10 [ bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [527] bitmap_line_xdyi::x1#1 = bitmap_line::x1#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [528] bitmap_line_xdyi::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [529] bitmap_line_xdyi::yd#1 = bitmap_line::yd#11 [ bitmap_line::c#10 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::yd#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::yd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [533] rand::$0 = rand_state#13 << 7 [ rand_state#13 rand::$0 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [534] rand_state#0 = rand_state#13 ^ rand::$0 [ rand_state#0 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [535] rand::$1 = rand_state#0 >> 9 [ rand_state#0 rand::$1 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [536] rand_state#1 = rand_state#0 ^ rand::$1 [ rand_state#1 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [537] rand::$2 = rand_state#1 << 8 [ rand_state#1 rand::$2 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [538] rand_state#14 = rand_state#1 ^ rand::$2 [ rand_state#14 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [539] rand::return#0 = rand_state#14 [ rand_state#14 rand::return#0 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [542] divr16u::dividend#1 = modr16u::dividend#4 [ modr16u::divisor#4 divr16u::dividend#1 ] ( main:15::modr16u:119 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [543] divr16u::divisor#0 = modr16u::divisor#4 [ divr16u::dividend#1 divr16u::divisor#0 ] ( main:15::modr16u:119 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [545] modr16u::return#0 = rem16u#0 [ modr16u::return#0 ] ( main:15::modr16u:119 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 } { modr16u::return#0 = modr16u::return#2 } }  main:15::modr16u:125 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 } { modr16u::return#0 = modr16u::return#3 } }  main:15::modr16u:131 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 } { modr16u::return#0 = modr16u::return#4 } }  main:15::modr16u:137 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 } { modr16u::return#0 = modr16u::return#10 } }  ) always clobbers reg byte a 
Statement [547] vera_layer_set_text_color_mode::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) [ vera_layer_set_text_color_mode::addr#0 ] ( vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a 
Statement [548] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C [ vera_layer_set_text_color_mode::addr#0 ] ( vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [549] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 [ ] ( vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [553] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 [ vera_layer_get_mapbase_offset::$0 ] ( screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:44::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:99::vera_layer_get_mapbase_offset:163 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [554] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] [ vera_layer_get_mapbase_offset::return#0 ] ( screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:44::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:99::vera_layer_get_mapbase_offset:163 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [558] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 [ vera_layer_get_rowskip::$0 ] ( screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:44::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:99::vera_layer_get_rowskip:182 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [559] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] [ vera_layer_get_rowskip::return#0 ] ( screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:44::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:99::vera_layer_get_rowskip:182 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [562] vera_layer_set_config::$0 = vera_layer_set_config::layer#2 << 1 [ vera_layer_set_config::config#2 vera_layer_set_config::$0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_config:257 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_config:308 [ conio_screen_width conio_screen_height vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:71 [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ]
Statement [563] vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0] [ vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_config:257 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_config:308 [ conio_screen_width conio_screen_height vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { }  ) always clobbers reg byte a 
Statement [564] *vera_layer_set_config::addr#0 = vera_layer_set_config::config#2 [ ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_config:257 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_config:308 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a reg byte y 
Statement [567] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 << 1 [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_tilebase:310 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:73 [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ]
Statement [568] vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0] [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_tilebase:310 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { }  ) always clobbers reg byte a 
Statement [569] *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#2 [ ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_tilebase:310 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a reg byte y 
Statement [579] cputc::$15 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:295 [ cputc::c#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:433 [ cputc::color#0 ]
Statement [580] cputc::conio_addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[cputc::$15] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [581] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [582] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [584] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [589] cputc::$6 = CONIO_SCREEN_BANK#15 | VERA_INC_1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [593] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte x 
Removing always clobbered register reg byte x as potential for zp[1]:207 [ CONIO_SCREEN_BANK#15 ]
Statement [594] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte y 
Statement [596] cputc::$16 = (word)conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [597] if(cputc::$16!=conio_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [601] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [608] if(*VERA_DC_HSCALE!=vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]) goto vera_display_get_hscale::@2 [ vera_display_get_hscale::s#2 ] ( main:15::bitmap_init:63::vera_display_get_hscale:362 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_color_depth vera_display_get_hscale::s#2 ] { { vera_display_get_hscale::return#0 = vera_display_get_hscale::return#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:74 [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ]
Statement [615] if(*VERA_DC_VSCALE!=vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]) goto vera_display_get_vscale::@2 [ vera_display_get_vscale::s#2 ] ( main:15::bitmap_init:63::vera_display_get_vscale:366 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_color_depth vera_display_get_vscale::s#2 ] { { vera_display_get_vscale::return#0 = vera_display_get_vscale::return#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:75 [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ]
Statement [620] mul16u::mb#0 = (dword)mul16u::b#0 [ mul16u::a#0 mul16u::mb#0 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::a#0 mul16u::mb#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [622] if(mul16u::a#2!=0) goto mul16u::@2 [ mul16u::res#2 mul16u::a#2 mul16u::mb#2 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::res#2 mul16u::a#2 mul16u::mb#2 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [624] mul16u::$1 = mul16u::a#2 & 1 [ mul16u::res#2 mul16u::a#2 mul16u::mb#2 mul16u::$1 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::res#2 mul16u::a#2 mul16u::mb#2 mul16u::$1 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [626] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 [ mul16u::a#2 mul16u::mb#2 mul16u::res#1 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::a#2 mul16u::mb#2 mul16u::res#1 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [630] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [635] memset_vram::$2 = VERA_INC_1 | memset_vram::vbank#0 [ memset_vram::num#0 memset_vram::$2 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::num#0 memset_vram::$2 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [638] if(memset_vram::i#2<memset_vram::num#0) goto memset_vram::@2 [ memset_vram::num#0 memset_vram::i#2 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::num#0 memset_vram::i#2 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [640] *VERA_DATA0 = memset_vram::data#0 [ memset_vram::num#0 memset_vram::i#2 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::num#0 memset_vram::i#2 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [643] bitmap_line_ydxi::e#0 = bitmap_line_ydxi::xd#2 >> 1 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ]
Statement [645] bitmap_plot::x#2 = bitmap_line_ydxi::x#3 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [646] bitmap_plot::y#2 = bitmap_line_ydxi::y#3 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [650] bitmap_line_ydxi::e#1 = bitmap_line_ydxi::e#3 + bitmap_line_ydxi::xd#2 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [651] if(bitmap_line_ydxi::yd#5>=bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [653] bitmap_line_ydxi::e#2 = bitmap_line_ydxi::e#1 - bitmap_line_ydxi::yd#5 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [655] bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#6 + 1 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [656] if(bitmap_line_ydxi::y#2!=bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [659] bitmap_line_xdyi::e#0 = bitmap_line_xdyi::yd#2 >> 1 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ]
Statement [661] bitmap_plot::x#0 = bitmap_line_xdyi::x#3 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [662] bitmap_plot::y#0 = bitmap_line_xdyi::y#3 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [666] bitmap_line_xdyi::e#1 = bitmap_line_xdyi::e#3 + bitmap_line_xdyi::yd#2 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [667] if(bitmap_line_xdyi::xd#5>=bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [669] bitmap_line_xdyi::e#2 = bitmap_line_xdyi::e#1 - bitmap_line_xdyi::xd#5 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [671] bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#6 + 1 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [672] if(bitmap_line_xdyi::x#2!=bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [675] bitmap_line_ydxd::e#0 = bitmap_line_ydxd::xd#2 >> 1 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ]
Statement [677] bitmap_plot::x#3 = bitmap_line_ydxd::x#3 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [678] bitmap_plot::y#3 = bitmap_line_ydxd::y#2 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [682] bitmap_line_ydxd::e#1 = bitmap_line_ydxd::e#3 + bitmap_line_ydxd::xd#2 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [683] if(bitmap_line_ydxd::yd#5>=bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [684] bitmap_line_ydxd::x#2 = -- bitmap_line_ydxd::x#3 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [685] bitmap_line_ydxd::e#2 = bitmap_line_ydxd::e#1 - bitmap_line_ydxd::yd#5 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [687] bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#6 + 1 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [688] if(bitmap_line_ydxd::y#3!=bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [691] bitmap_line_xdyd::e#0 = bitmap_line_xdyd::yd#2 >> 1 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ]
Statement [693] bitmap_plot::x#1 = bitmap_line_xdyd::x#3 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [694] bitmap_plot::y#1 = bitmap_line_xdyd::y#3 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [698] bitmap_line_xdyd::e#1 = bitmap_line_xdyd::e#3 + bitmap_line_xdyd::yd#2 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [699] if(bitmap_line_xdyd::xd#5>=bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [700] bitmap_line_xdyd::y#2 = -- bitmap_line_xdyd::y#3 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [701] bitmap_line_xdyd::e#2 = bitmap_line_xdyd::e#1 - bitmap_line_xdyd::xd#5 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [703] bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#6 + 1 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [704] if(bitmap_line_xdyd::x#2!=bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [710] divr16u::$2 = divr16u::$1 & $80 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:148 [ divr16u::i#2 divr16u::i#1 ]
Statement [712] divr16u::rem#1 = divr16u::rem#0 | 1 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [716] if(divr16u::rem#5<divr16u::divisor#0) goto divr16u::@3 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [718] divr16u::rem#2 = divr16u::rem#5 - divr16u::divisor#0 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [722] rem16u#0 = divr16u::rem#10 [ rem16u#0 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [725] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 [ vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Statement [726] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] [ vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [727] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C [ vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:295 [ cputc::c#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Statement [729] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 [ vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [730] vera_layer_get_color::return#2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] [ vera_layer_get_color::return#2 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [734] cputln::$2 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [735] cputln::temp#0 = conio_line_text[cputln::$2] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [736] cputln::temp#1 = cputln::temp#0 + conio_rowskip [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [737] cputln::$3 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [738] conio_line_text[cputln::$3] = cputln::temp#1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [739] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [740] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte x 
Statement [744] bitmap_plot::$9 = bitmap_plot::x#4 << 1 [ bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:155 [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
Statement [745] bitmap_plot::$12 = __bitmap_plot_x + bitmap_plot::$9 [ bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [746] bitmap_plot::plot_x#0 = (dword)*bitmap_plot::$12 [ bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:5 [ main::color#2 main::color#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:155 [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
Removing always clobbered register reg byte y as potential for zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ]
Statement [747] bitmap_plot::$10 = bitmap_plot::y#4 << 2 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [748] bitmap_plot::$13 = __bitmap_plot_y + bitmap_plot::$10 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [749] bitmap_plot::plot_y#0 = *bitmap_plot::$13 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [750] bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plot_x#0 + bitmap_plot::plot_y#0 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [751] bitmap_plot::$14 = __bitmap_plot_bitshift + bitmap_plot::x#4 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [752] bitmap_plot::bitshift#0 = *bitmap_plot::$14 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [754] bitmap_plot::$3 = bitmap_plot::c#5 << bitmap_plot::bitshift#0 [ bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [756] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [763] bitmap_plot::$15 = __bitmap_plot_bitmask + bitmap_plot::x#4 [ bitmap_plot::c#0 bitmap_plot::$15 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [764] bitmap_plot::$6 = ~ *bitmap_plot::$15 [ bitmap_plot::c#0 bitmap_plot::$6 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [765] bitmap_plot::$7 = *VERA_DATA0 & bitmap_plot::$6 [ bitmap_plot::c#0 bitmap_plot::$7 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [769] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [770] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [771] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [776] gotoxy::y#2 = conio_screen_height - 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte x 
Statement [778] insertup::cy#0 = conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte y 
Statement [779] insertup::width#0 = conio_screen_width << 1 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [786] insertup::line#0 = insertup::$3 << conio_rowshift [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:504 [ insertup::cy#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:505 [ insertup::width#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:156 [ insertup::i#2 insertup::i#1 ]
Statement [787] insertup::start#0 = (byte*)CONIO_SCREEN_TEXT#104 + insertup::line#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [788] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [789] memcpy_in_vram::dest#0 = (void*)insertup::start#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [790] memcpy_in_vram::num#0 = insertup::width#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [791] memcpy_in_vram::src#3 = (void*)memcpy_in_vram::src#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [794] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [795] clearline::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [796] clearline::addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[clearline::$5] [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [801] *VERA_ADDRX_H = VERA_INC_1 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [807] if(clearline::c#2<conio_screen_width) goto clearline::@2 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:519 [ clearline::color#0 ]
Statement [808] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [810] *VERA_DATA0 = ' ' [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [1] conio_screen_width = 0 [ conio_screen_width ] (  [ conio_screen_width ] { }  ) always clobbers reg byte a 
Statement [2] conio_screen_height = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [3] conio_screen_layer = 1 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [4] conio_width = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [5] conio_height = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [6] conio_rowshift = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [7] conio_rowskip = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [8] __bitmap_address = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [9] __bitmap_layer = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [10] __bitmap_hscale = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [11] __bitmap_vscale = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [12] __bitmap_color_depth = 0 [ conio_screen_width conio_screen_height ] (  [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [32] conio_x16_init::line#1 = conio_screen_height - 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#1 ] (  [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#1 ] { }  conio_x16_init:13 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#1 ] { }  ) always clobbers reg byte x 
Statement [61] *VERA_DC_VIDEO = *VERA_DC_VIDEO | *vera_layer_enable [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [107] bitmap_line::x0#1 = main::x#3 [ main::x#3 main::color#2 bitmap_line::x0#1 ] ( main:15 [ main::x#3 main::color#2 bitmap_line::x0#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  ) always clobbers reg byte a 
Statement [108] bitmap_line::x1#1 = main::x#3 [ main::x#3 main::color#2 bitmap_line::x0#1 bitmap_line::x1#1 ] ( main:15 [ main::x#3 main::color#2 bitmap_line::x0#1 bitmap_line::x1#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  ) always clobbers reg byte a 
Statement [113] if(main::x#1<=$13f) goto main::@37 [ main::color#1 main::x#1 ] ( main:15 [ main::color#1 main::x#1 ] { }  ) always clobbers reg byte a 
Statement [117] rand::return#2 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 rand::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 rand::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  ) always clobbers reg byte a 
Statement [118] modr16u::dividend#0 = rand::return#2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::dividend#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::dividend#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 } { modr16u::return#0 = modr16u::return#2 } }  ) always clobbers reg byte a 
Statement [120] modr16u::return#2 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 modr16u::return#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 } { modr16u::return#0 = modr16u::return#2 } }  ) always clobbers reg byte a 
Statement [121] bitmap_line::x0#0 = modr16u::return#2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  ) always clobbers reg byte a 
Statement [123] rand::return#3 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 rand::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 rand::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  ) always clobbers reg byte a 
Statement [124] modr16u::dividend#1 = rand::return#3 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::dividend#1 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::dividend#1 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 } { modr16u::return#0 = modr16u::return#3 } }  ) always clobbers reg byte a 
Statement [126] modr16u::return#3 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 modr16u::return#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 } { modr16u::return#0 = modr16u::return#3 } }  ) always clobbers reg byte a 
Statement [127] bitmap_line::x1#0 = modr16u::return#3 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  ) always clobbers reg byte a 
Statement [129] rand::return#10 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 rand::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 rand::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  ) always clobbers reg byte a 
Statement [130] modr16u::dividend#2 = rand::return#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::dividend#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::dividend#2 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 } { modr16u::return#0 = modr16u::return#4 } }  ) always clobbers reg byte a 
Statement [132] modr16u::return#4 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::return#4 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 modr16u::return#4 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 } { modr16u::return#0 = modr16u::return#4 } }  ) always clobbers reg byte a 
Statement [133] bitmap_line::y0#0 = modr16u::return#4 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  ) always clobbers reg byte a 
Statement [135] rand::return#11 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 rand::return#11 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 rand::return#11 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  ) always clobbers reg byte a 
Statement [136] modr16u::dividend#3 = rand::return#11 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::dividend#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::dividend#3 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 } { modr16u::return#0 = modr16u::return#10 } }  ) always clobbers reg byte a 
Statement [138] modr16u::return#10 = modr16u::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 modr16u::return#10 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 } { modr16u::return#0 = modr16u::return#10 } }  ) always clobbers reg byte a 
Statement [139] bitmap_line::y1#0 = modr16u::return#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [141] rand::return#12 = rand::return#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 rand::return#12 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 rand::return#12 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [142] main::$40 = rand::return#12 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 main::$40 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 main::$40 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [143] bitmap_line::c#0 = main::$40 & $ff [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 bitmap_line::c#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 bitmap_line::c#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [150] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 [ screensize::hscale#0 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  ) always clobbers reg byte a 
Statement [151] screensize::$1 = $28 << screensize::hscale#0 [ screensize::$1 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  ) always clobbers reg byte a 
Statement [153] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 [ screensize::vscale#0 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  ) always clobbers reg byte a 
Statement [154] screensize::$3 = $1e << screensize::vscale#0 [ screensize::$3 ] ( screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  conio_x16_init:13::screensize:20 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  ) always clobbers reg byte a 
Statement [157] conio_screen_layer = 1 [ conio_screen_layer ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  ) always clobbers reg byte a 
Statement [164] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [165] CONIO_SCREEN_TEXT#104 = vera_layer_get_mapbase_offset::return#2 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [167] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$2 ] { }  ) always clobbers reg byte a 
Statement [168] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_config#0 ] { }  ) always clobbers reg byte a 
Statement [169] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [170] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$1 ] { }  ) always clobbers reg byte a 
Statement [171] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_$3 ] { }  ) always clobbers reg byte a 
Statement [172] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#0 ] { }  ) always clobbers reg byte a 
Statement [173] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_width1_return#1 ] { }  ) always clobbers reg byte a 
Statement [174] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [175] conio_width = screenlayer::$2 [ conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer conio_width CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [183] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [184] screenlayer::$4 = vera_layer_get_rowskip::return#2 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$4 ] { }  ) always clobbers reg byte a 
Statement [185] conio_rowskip = screenlayer::$4 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [187] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$2 ] { }  ) always clobbers reg byte a 
Statement [188] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_config#0 ] { }  ) always clobbers reg byte a 
Statement [189] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [190] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$1 ] { }  ) always clobbers reg byte a 
Statement [191] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_$3 ] { }  ) always clobbers reg byte a 
Statement [192] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#0 ] { }  ) always clobbers reg byte a 
Statement [193] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::vera_layer_get_height1_return#1 ] { }  ) always clobbers reg byte a 
Statement [194] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 screenlayer::$5 ] { }  ) always clobbers reg byte a 
Statement [195] conio_height = screenlayer::$5 [ conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  conio_x16_init:13::screenlayer:22 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:44 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::screenlayer:99 [ conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [204] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] ( vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  main:15::vera_layer_mode_tile:40::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [205] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] ( vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  main:15::vera_layer_mode_tile:40::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [206] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 [ ] ( vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:28 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:13::vera_layer_set_mapbase:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  main:15::vera_layer_mode_tile:40::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_mapbase:269 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a reg byte y 
Statement [209] if(gotoxy::y#7<=conio_screen_height) goto gotoxy::@4 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#7 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [212] if(0<conio_screen_width) goto gotoxy::@2 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [214] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a reg byte y 
Statement [215] conio_cursor_y[conio_screen_layer] = gotoxy::y#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a reg byte y 
Statement [216] gotoxy::$6 = (word)gotoxy::y#10 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [217] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a reg byte y 
Statement [218] gotoxy::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [219] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] ( gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  conio_x16_init:13::gotoxy:35 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#7 conio_x16_init::line#3 } }  main:15::gotoxy:52 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::gotoxy:67 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::gotoxy:84 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::gotoxy:88 [ conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::gotoxy:777 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_height conio_rowskip CONIO_SCREEN_TEXT#104 conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte a 
Statement [222] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [227] *VERA_ADDRX_H = VERA_INC_1 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [228] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL [ memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#2 memcpy_in_vram::dest_bank#2 memcpy_in_vram::num#3 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [233] memcpy_in_vram::$5 = VERA_INC_1 | memcpy_in_vram::dest_bank#2 [ memcpy_in_vram::num#3 memcpy_in_vram::$5 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::$5 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [236] if(memcpy_in_vram::i#2<memcpy_in_vram::num#3) goto memcpy_in_vram::@2 [ memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [238] *VERA_DATA1 = *VERA_DATA0 [ memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] ( main:15::memcpy_in_vram:38 [ conio_screen_width conio_screen_height memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::memcpy_in_vram:792 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#3 memcpy_in_vram::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [241] if(vera_layer_mode_tile::mapwidth#10==$20) goto vera_layer_mode_tile::@5 [ vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [242] if(vera_layer_mode_tile::mapwidth#10==$40) goto vera_layer_mode_tile::@6 [ vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [243] if(vera_layer_mode_tile::mapwidth#10==$80) goto vera_layer_mode_tile::@7 [ vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::mapwidth#10 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [244] if(vera_layer_mode_tile::mapwidth#10!=$100) goto vera_layer_mode_tile::@9 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [245] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 9 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [246] vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$14 ] { }  ) always clobbers reg byte a 
Statement [247] vera_layer_rowskip[vera_layer_mode_tile::$14] = $200 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [249] if(vera_layer_mode_tile::mapheight#10==$20) goto vera_layer_mode_tile::@16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [250] if(vera_layer_mode_tile::mapheight#10==$40) goto vera_layer_mode_tile::@13 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [251] if(vera_layer_mode_tile::mapheight#10==$80) goto vera_layer_mode_tile::@14 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [252] if(vera_layer_mode_tile::mapheight#10!=$100) goto vera_layer_mode_tile::@16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#21 ] { }  ) always clobbers reg byte a 
Statement [253] vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_256 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#12 ] { }  ) always clobbers reg byte a 
Statement [258] vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [259] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$1 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [260] vera_mapbase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [263] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 << 2 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [264] vera_mapbase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::mapbase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [265] vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#10 >> 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::mapbase_address#0 ] { { vera_layer_set_mapbase::layer#0 = vera_layer_set_mapbase::layer#3 vera_layer_mode_tile::layer#10 } { vera_layer_set_mapbase::mapbase#0 = vera_layer_set_mapbase::mapbase#3 vera_layer_mode_tile::mapbase#0 } }  ) always clobbers reg byte a 
Statement [270] vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$17 vera_layer_mode_tile::$18 vera_layer_mode_tile::$6 ] { }  ) always clobbers reg byte a 
Statement [271] vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$18 ] { }  ) always clobbers reg byte a 
Statement [274] vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#10 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [275] vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#10 >> 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase_address#0 ] { }  ) always clobbers reg byte a 
Statement [277] vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#1 ] { }  ) always clobbers reg byte a 
Statement [280] vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tilebase#3 ] { }  ) always clobbers reg byte a 
Statement [284] vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_16 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::tilebase#5 ] { }  ) always clobbers reg byte a 
Statement [290] vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_128 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#11 ] { }  ) always clobbers reg byte a 
Statement [291] vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_64 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::config#10 ] { }  ) always clobbers reg byte a 
Statement [292] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 8 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [293] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$13 ] { }  ) always clobbers reg byte a 
Statement [294] vera_layer_rowskip[vera_layer_mode_tile::$13] = $100 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [295] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 7 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [296] vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$12 ] { }  ) always clobbers reg byte a 
Statement [297] vera_layer_rowskip[vera_layer_mode_tile::$12] = $80 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [298] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 6 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [299] vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#10 << 1 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::$11 ] { }  ) always clobbers reg byte a 
Statement [300] vera_layer_rowskip[vera_layer_mode_tile::$11] = $40 [ vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] ( main:15::vera_layer_mode_tile:40 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { }  ) always clobbers reg byte a 
Statement [302] *vera_tilebase_offset = 0 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [303] *vera_tilebase_bank = 0 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [304] *vera_tilebase_address = vera_layer_mode_bitmap::bitmap_address#1 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [305] *VERA_DC_HSCALE = $40 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [306] *VERA_DC_VSCALE = $40 [ ] ( main:15::vera_layer_mode_bitmap:42 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a 
Statement [312] clrscr::line_text#0 = (byte*)CONIO_SCREEN_TEXT#104 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1 } }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1 } }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1 } }  ) always clobbers reg byte a 
Statement [317] clrscr::$1 = clrscr::$0 << 4 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1 } }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1 } }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1 } }  ) always clobbers reg byte a 
Statement [324] if(clrscr::l#2<conio_height) goto clrscr::@2 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  ) always clobbers reg byte a 
Statement [325] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a reg byte y 
Statement [326] conio_cursor_y[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a reg byte y 
Statement [327] clrscr::$9 = conio_screen_layer << 1 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::$9 ] { }  ) always clobbers reg byte a 
Statement [328] conio_line_text[clrscr::$9] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { }  ) always clobbers reg byte a 
Statement [330] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  ) always clobbers reg byte a 
Statement [335] clrscr::$7 = CONIO_SCREEN_BANK#15 | VERA_INC_1 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  ) always clobbers reg byte a 
Statement [338] if(clrscr::c#2<conio_width) goto clrscr::@5 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [339] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [341] *VERA_DATA0 = ' ' [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] ( main:15::clrscr:50 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  main:15::clrscr:82 [ conio_screen_width conio_screen_height conio_rowshift conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  main:15::clrscr:105 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [346] cputs::c#1 = *cputs::s#8 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] ( main:15::cputs:54 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:56 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:58 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:60 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:71 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:86 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  main:15::cputs:92 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputs::s#8 cputs::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement [352] __bitmap_address = bitmap_init::address#0 [ __bitmap_address ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address ] { }  ) always clobbers reg byte a 
Statement [353] __bitmap_layer = bitmap_init::layer#0 [ __bitmap_address __bitmap_layer ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_layer ] { }  ) always clobbers reg byte a 
Statement [355] bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#0 << 1 [ __bitmap_address bitmap_init::vera_layer_get_color_depth1_$1 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_init::vera_layer_get_color_depth1_$1 ] { }  ) always clobbers reg byte a 
Statement [356] bitmap_init::vera_layer_get_color_depth1_config#0 = vera_layer_config[bitmap_init::vera_layer_get_color_depth1_$1] [ __bitmap_address bitmap_init::vera_layer_get_color_depth1_config#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_init::vera_layer_get_color_depth1_config#0 ] { }  ) always clobbers reg byte a 
Statement [357] bitmap_init::vera_layer_get_color_depth1_$0 = *bitmap_init::vera_layer_get_color_depth1_config#0 & VERA_LAYER_COLOR_DEPTH_MASK [ __bitmap_address bitmap_init::vera_layer_get_color_depth1_$0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_init::vera_layer_get_color_depth1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [370] bitmap_init::bitmask#0 = bitmasks[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 ] { }  ) always clobbers reg byte y 
Statement [371] bitmap_init::bitshift#0 = bitshifts[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 bitmap_init::bitshift#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::bitmask#0 bitmap_init::bitshift#0 ] { }  ) always clobbers reg byte y 
Statement [373] if(__bitmap_color_depth!=0) goto bitmap_init::@2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a 
Statement [374] bitmap_init::$7 = bitmap_init::x#10 >> 3 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 ] { }  ) always clobbers reg byte a 
Statement [375] bitmap_init::$23 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$23 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$23 ] { }  ) always clobbers reg byte a 
Statement [376] bitmap_init::$29 = __bitmap_plot_x + bitmap_init::$23 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$29 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$7 bitmap_init::$29 ] { }  ) always clobbers reg byte a 
Statement [377] *bitmap_init::$29 = bitmap_init::$7 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a reg byte y 
Statement [378] bitmap_init::$30 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$30 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$30 ] { }  ) always clobbers reg byte a 
Statement [379] *bitmap_init::$30 = bitmap_init::bitmask#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a reg byte y 
Statement [380] bitmap_init::$31 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$31 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 bitmap_init::$31 ] { }  ) always clobbers reg byte a 
Statement [381] *bitmap_init::$31 = (byte)bitmap_init::bitshift#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#10 bitmap_init::bitshift#10 ] { }  ) always clobbers reg byte a reg byte y 
Statement [385] if(__bitmap_color_depth!=1) goto bitmap_init::@3 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a 
Statement [386] bitmap_init::$10 = bitmap_init::x#10 >> 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 ] { }  ) always clobbers reg byte a 
Statement [387] bitmap_init::$24 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$24 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$24 ] { }  ) always clobbers reg byte a 
Statement [388] bitmap_init::$32 = __bitmap_plot_x + bitmap_init::$24 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$32 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$10 bitmap_init::$32 ] { }  ) always clobbers reg byte a 
Statement [389] *bitmap_init::$32 = bitmap_init::$10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [390] bitmap_init::$33 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$33 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$33 ] { }  ) always clobbers reg byte a 
Statement [391] *bitmap_init::$33 = bitmap_init::bitmask#11 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [392] bitmap_init::$34 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$34 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 bitmap_init::$34 ] { }  ) always clobbers reg byte a 
Statement [393] *bitmap_init::$34 = (byte)bitmap_init::bitshift#11 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#11 bitmap_init::bitshift#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [395] bitmap_init::bitmask#2 = bitmap_init::bitmask#11 >> 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#2 bitmap_init::bitmask#2 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#2 bitmap_init::bitmask#2 ] { }  ) always clobbers reg byte a 
Statement [397] if(__bitmap_color_depth!=2) goto bitmap_init::@4 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a 
Statement [398] bitmap_init::$13 = bitmap_init::x#10 >> 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 ] { }  ) always clobbers reg byte a 
Statement [399] bitmap_init::$25 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$25 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$25 ] { }  ) always clobbers reg byte a 
Statement [400] bitmap_init::$35 = __bitmap_plot_x + bitmap_init::$25 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$35 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$13 bitmap_init::$35 ] { }  ) always clobbers reg byte a 
Statement [401] *bitmap_init::$35 = bitmap_init::$13 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a reg byte y 
Statement [402] bitmap_init::$36 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$36 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$36 ] { }  ) always clobbers reg byte a 
Statement [403] *bitmap_init::$36 = bitmap_init::bitmask#12 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a reg byte y 
Statement [404] bitmap_init::$37 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$37 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 bitmap_init::$37 ] { }  ) always clobbers reg byte a 
Statement [405] *bitmap_init::$37 = (byte)bitmap_init::bitshift#12 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#12 ] { }  ) always clobbers reg byte a reg byte y 
Statement [406] bitmap_init::bitshift#3 = bitmap_init::bitshift#12 - 4 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#3 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#12 bitmap_init::bitshift#3 ] { }  ) always clobbers reg byte a 
Statement [407] bitmap_init::bitmask#3 = bitmap_init::bitmask#12 >> 4 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#3 bitmap_init::bitmask#3 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#3 bitmap_init::bitmask#3 ] { }  ) always clobbers reg byte a 
Statement [409] if(__bitmap_color_depth!=3) goto bitmap_init::@5 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a 
Statement [410] bitmap_init::$26 = bitmap_init::x#10 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$26 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$26 ] { }  ) always clobbers reg byte a 
Statement [411] bitmap_init::$38 = __bitmap_plot_x + bitmap_init::$26 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$38 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$38 ] { }  ) always clobbers reg byte a 
Statement [412] *bitmap_init::$38 = bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a reg byte y 
Statement [413] bitmap_init::$39 = __bitmap_plot_bitmask + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$39 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$39 ] { }  ) always clobbers reg byte a 
Statement [414] *bitmap_init::$39 = bitmap_init::bitmask#13 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a reg byte y 
Statement [415] bitmap_init::$40 = __bitmap_plot_bitshift + bitmap_init::x#10 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$40 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 bitmap_init::$40 ] { }  ) always clobbers reg byte a 
Statement [416] *bitmap_init::$40 = (byte)bitmap_init::bitshift#13 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#13 bitmap_init::bitmask#13 ] { }  ) always clobbers reg byte a reg byte y 
Statement [418] bitmap_init::bitshift#4 = bitshifts[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#13 bitmap_init::bitshift#4 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitmask#13 bitmap_init::bitshift#4 ] { }  ) always clobbers reg byte y 
Statement [421] bitmap_init::bitmask#4 = bitmasks[__bitmap_color_depth] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#14 bitmap_init::bitmask#4 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#10 bitmap_init::bitshift#14 bitmap_init::bitmask#4 ] { }  ) always clobbers reg byte y 
Statement [424] if(bitmap_init::x#1!=$280) goto bitmap_init::@1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#1 bitmap_init::bitmask#16 bitmap_init::bitshift#14 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::x#1 bitmap_init::bitmask#16 bitmap_init::bitshift#14 ] { }  ) always clobbers reg byte a 
Statement [425] bitmap_init::$3 = __bitmap_color_depth << 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$3 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$3 ] { }  ) always clobbers reg byte a 
Statement [426] bitmap_init::$4 = bitmap_init::$3 + __bitmap_hscale [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$4 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$4 ] { }  ) always clobbers reg byte a 
Statement [427] bitmap_init::$27 = bitmap_init::$4 << 1 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$27 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::$27 ] { }  ) always clobbers reg byte a 
Statement [428] bitmap_init::hdelta#0 = hdeltas[bitmap_init::$27] [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 ] { }  ) always clobbers reg byte a 
Statement [429] bitmap_init::yoffs#0 = __bitmap_address [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::yoffs#0 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::yoffs#0 ] { }  ) always clobbers reg byte a 
Statement [431] bitmap_init::$28 = bitmap_init::y#2 << 2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$28 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$28 ] { }  ) always clobbers reg byte a 
Statement [432] bitmap_init::$41 = __bitmap_plot_y + bitmap_init::$28 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$41 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 bitmap_init::$41 ] { }  ) always clobbers reg byte a 
Statement [433] *bitmap_init::$41 = bitmap_init::yoffs#2 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [434] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + bitmap_init::hdelta#0 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#1 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#2 bitmap_init::yoffs#1 ] { }  ) always clobbers reg byte a 
Statement [436] if(bitmap_init::y#1!=$1e0) goto bitmap_init::@15 [ __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#1 bitmap_init::yoffs#1 ] ( main:15::bitmap_init:63 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_vscale __bitmap_color_depth bitmap_init::hdelta#0 bitmap_init::y#1 bitmap_init::yoffs#1 ] { }  ) always clobbers reg byte a 
Statement [438] bitmap_clear::$6 = __bitmap_vscale << 1 [ __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::$6 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::$6 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [439] bitmap_clear::vdelta#0 = vdeltas[bitmap_clear::$6] [ __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::vdelta#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_color_depth bitmap_clear::vdelta#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [440] bitmap_clear::$0 = __bitmap_color_depth << 2 [ __bitmap_address __bitmap_hscale bitmap_clear::vdelta#0 bitmap_clear::$0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale bitmap_clear::vdelta#0 bitmap_clear::$0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [441] bitmap_clear::$1 = bitmap_clear::$0 + __bitmap_hscale [ __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$1 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$1 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [442] bitmap_clear::$7 = bitmap_clear::$1 << 1 [ __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$7 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::$7 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [443] bitmap_clear::hdelta#0 = hdeltas[bitmap_clear::$7] [ __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::hdelta#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 bitmap_clear::hdelta#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [444] mul16u::a#0 = bitmap_clear::hdelta#0 [ __bitmap_address bitmap_clear::vdelta#0 mul16u::a#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::vdelta#0 mul16u::a#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [445] mul16u::b#0 = bitmap_clear::vdelta#0 [ __bitmap_address mul16u::a#0 mul16u::b#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::a#0 mul16u::b#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [447] mul16u::return#0 = mul16u::res#2 [ __bitmap_address mul16u::return#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::return#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [448] bitmap_clear::count#0 = mul16u::return#0 [ __bitmap_address bitmap_clear::count#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address bitmap_clear::count#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [450] bitmap_clear::vdest#0 = word0  __bitmap_address [ bitmap_clear::count#0 bitmap_clear::vbank#0 bitmap_clear::vdest#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_clear::count#0 bitmap_clear::vbank#0 bitmap_clear::vdest#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [452] memset_vram::vdest#0 = (void*)bitmap_clear::vdest#0 [ bitmap_clear::count#0 memset_vram::vbank#0 memset_vram::vdest#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_clear::count#0 memset_vram::vbank#0 memset_vram::vdest#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [453] memset_vram::num#0 = bitmap_clear::count#0 [ memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] ( main:15::bitmap_clear:65 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [456] kbhit::ch = 0 [ kbhit::ch ] ( main:15::kbhit:73 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#23 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 kbhit::ch ] { { kbhit::return#1 = kbhit::return#2 } }  main:15::kbhit:94 [ main::x#3 main::color#2 kbhit::ch ] { { kbhit::return#1 = kbhit::return#3 } }  ) always clobbers reg byte a 
Statement [462] if(bitmap_line::x0#10<bitmap_line::x1#10) goto bitmap_line::@1 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [463] bitmap_line::xd#2 = bitmap_line::x0#10 - bitmap_line::x1#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [464] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@7 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [465] bitmap_line::yd#2 = bitmap_line::y0#10 - bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [466] if(bitmap_line::yd#2<bitmap_line::xd#2) goto bitmap_line::@8 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [467] bitmap_line_ydxi::y#0 = bitmap_line::y1#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [468] bitmap_line_ydxi::x#0 = bitmap_line::x1#10 [ bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [469] bitmap_line_ydxi::y1#0 = bitmap_line::y0#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [470] bitmap_line_ydxi::yd#0 = bitmap_line::yd#2 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [471] bitmap_line_ydxi::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 bitmap_line_ydxi::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 bitmap_line_ydxi::xd#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxi::y#0 bitmap_line_ydxi::x#0 bitmap_line_ydxi::y1#0 bitmap_line_ydxi::yd#0 bitmap_line_ydxi::xd#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [475] bitmap_line_xdyi::x#0 = bitmap_line::x1#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [476] bitmap_line_xdyi::y#0 = bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [477] bitmap_line_xdyi::x1#0 = bitmap_line::x0#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [478] bitmap_line_xdyi::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#2 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [479] bitmap_line_xdyi::yd#0 = bitmap_line::yd#2 [ bitmap_line::c#10 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::yd#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyi::x#0 bitmap_line_xdyi::y#0 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::yd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [482] bitmap_line::yd#1 = bitmap_line::y1#10 - bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [483] if(bitmap_line::yd#1<bitmap_line::xd#2) goto bitmap_line::@9 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [484] bitmap_line_ydxd::y#0 = bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [485] bitmap_line_ydxd::x#0 = bitmap_line::x0#10 [ bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [486] bitmap_line_ydxd::y1#0 = bitmap_line::y1#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [487] bitmap_line_ydxd::yd#0 = bitmap_line::yd#1 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [488] bitmap_line_ydxd::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::xd#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxd::y#0 bitmap_line_ydxd::x#0 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::xd#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [491] bitmap_line_xdyd::x#0 = bitmap_line::x1#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [492] bitmap_line_xdyd::y#0 = bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [493] bitmap_line_xdyd::x1#0 = bitmap_line::x0#10 [ bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#2 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [494] bitmap_line_xdyd::xd#0 = bitmap_line::xd#2 [ bitmap_line::c#10 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [495] bitmap_line_xdyd::yd#0 = bitmap_line::yd#1 [ bitmap_line::c#10 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::yd#0 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::yd#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyd::x#0 bitmap_line_xdyd::y#0 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::yd#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  ) always clobbers reg byte a 
Statement [498] bitmap_line::xd#1 = bitmap_line::x1#10 - bitmap_line::x0#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [499] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@11 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [500] bitmap_line::yd#10 = bitmap_line::y0#10 - bitmap_line::y1#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [501] if(bitmap_line::yd#10<bitmap_line::xd#1) goto bitmap_line::@12 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [502] bitmap_line_ydxd::y#1 = bitmap_line::y1#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [503] bitmap_line_ydxd::x#1 = bitmap_line::x1#10 [ bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [504] bitmap_line_ydxd::y1#1 = bitmap_line::y0#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [505] bitmap_line_ydxd::yd#1 = bitmap_line::yd#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [506] bitmap_line_ydxd::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 bitmap_line_ydxd::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 bitmap_line_ydxd::xd#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxd::y#1 bitmap_line_ydxd::x#1 bitmap_line_ydxd::y1#1 bitmap_line_ydxd::yd#1 bitmap_line_ydxd::xd#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [509] bitmap_line_xdyd::x#1 = bitmap_line::x0#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [510] bitmap_line_xdyd::y#1 = bitmap_line::y0#10 [ bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [511] bitmap_line_xdyd::x1#1 = bitmap_line::x1#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [512] bitmap_line_xdyd::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [513] bitmap_line_xdyd::yd#1 = bitmap_line::yd#10 [ bitmap_line::c#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::yd#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyd::x#1 bitmap_line_xdyd::y#1 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::yd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [516] bitmap_line::yd#11 = bitmap_line::y1#10 - bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [517] if(bitmap_line::yd#11<bitmap_line::xd#1) goto bitmap_line::@13 [ bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x1#1 = bitmap_line::x1#10 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line::c#1 = bitmap_line::c#10 main::color#2 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line::c#0 = bitmap_line::c#10 } }  ) always clobbers reg byte a 
Statement [518] bitmap_line_ydxi::y#1 = bitmap_line::y0#10 [ bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x0#10 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [519] bitmap_line_ydxi::x#1 = bitmap_line::x0#10 [ bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::y1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [520] bitmap_line_ydxi::y1#1 = bitmap_line::y1#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [521] bitmap_line_ydxi::yd#1 = bitmap_line::yd#11 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [522] bitmap_line_ydxi::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::xd#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_ydxi::y#1 bitmap_line_ydxi::x#1 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::xd#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [525] bitmap_line_xdyi::x#1 = bitmap_line::x0#10 [ bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::y0#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [526] bitmap_line_xdyi::y#1 = bitmap_line::y0#10 [ bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::x1#10 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [527] bitmap_line_xdyi::x1#1 = bitmap_line::x1#10 [ bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::xd#1 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [528] bitmap_line_xdyi::xd#1 = bitmap_line::xd#1 [ bitmap_line::c#10 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line::yd#11 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [529] bitmap_line_xdyi::yd#1 = bitmap_line::yd#11 [ bitmap_line::c#10 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::yd#1 ] ( main:15::bitmap_line:110 [ main::x#3 main::color#2 bitmap_line::c#10 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::yd#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line::c#10 bitmap_line_xdyi::x#1 bitmap_line_xdyi::y#1 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::yd#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [533] rand::$0 = rand_state#13 << 7 [ rand_state#13 rand::$0 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#13 rand::$0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [534] rand_state#0 = rand_state#13 ^ rand::$0 [ rand_state#0 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [535] rand::$1 = rand_state#0 >> 9 [ rand_state#0 rand::$1 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#0 rand::$1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [536] rand_state#1 = rand_state#0 ^ rand::$1 [ rand_state#1 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [537] rand::$2 = rand_state#1 << 8 [ rand_state#1 rand::$2 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#1 rand::$2 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [538] rand_state#14 = rand_state#1 ^ rand::$2 [ rand_state#14 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [539] rand::return#0 = rand_state#14 [ rand_state#14 rand::return#0 ] ( main:15::rand:116 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#23 } { rand::return#0 = rand::return#2 } }  main:15::rand:122 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#3 } }  main:15::rand:128 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#10 } }  main:15::rand:134 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#11 } }  main:15::rand:140 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 bitmap_line::y1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rand_state#14 rand::return#0 ] { { rand_state#13 = rand_state#14 } { rand::return#0 = rand::return#12 } }  ) always clobbers reg byte a 
Statement [542] divr16u::dividend#1 = modr16u::dividend#4 [ modr16u::divisor#4 divr16u::dividend#1 ] ( main:15::modr16u:119 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::divisor#4 divr16u::dividend#1 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [543] divr16u::divisor#0 = modr16u::divisor#4 [ divr16u::dividend#1 divr16u::divisor#0 ] ( main:15::modr16u:119 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::dividend#1 divr16u::divisor#0 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [545] modr16u::return#0 = rem16u#0 [ modr16u::return#0 ] ( main:15::modr16u:119 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 } { modr16u::return#0 = modr16u::return#2 } }  main:15::modr16u:125 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 } { modr16u::return#0 = modr16u::return#3 } }  main:15::modr16u:131 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 } { modr16u::return#0 = modr16u::return#4 } }  main:15::modr16u:137 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 modr16u::return#0 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 } { modr16u::return#0 = modr16u::return#10 } }  ) always clobbers reg byte a 
Statement [547] vera_layer_set_text_color_mode::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) [ vera_layer_set_text_color_mode::addr#0 ] ( vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a 
Statement [548] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C [ vera_layer_set_text_color_mode::addr#0 ] ( vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [549] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 [ ] ( vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_set_text_color_mode:148 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [553] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 [ vera_layer_get_mapbase_offset::$0 ] ( screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:44::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:99::vera_layer_get_mapbase_offset:163 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [554] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] [ vera_layer_get_mapbase_offset::return#0 ] ( screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:44::vera_layer_get_mapbase_offset:163 [ conio_screen_width conio_screen_height conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:15::screenlayer:99::vera_layer_get_mapbase_offset:163 [ conio_screen_layer CONIO_SCREEN_BANK#15 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [558] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 [ vera_layer_get_rowskip::$0 ] ( screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:44::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:99::vera_layer_get_rowskip:182 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [559] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] [ vera_layer_get_rowskip::return#0 ] ( screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:13::screenlayer:22::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:44::vera_layer_get_rowskip:182 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:15::screenlayer:99::vera_layer_get_rowskip:182 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [562] vera_layer_set_config::$0 = vera_layer_set_config::layer#2 << 1 [ vera_layer_set_config::config#2 vera_layer_set_config::$0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_config:257 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_config:308 [ conio_screen_width conio_screen_height vera_layer_set_config::config#2 vera_layer_set_config::$0 ] { }  ) always clobbers reg byte a 
Statement [563] vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0] [ vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_config:257 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_config:308 [ conio_screen_width conio_screen_height vera_layer_set_config::config#2 vera_layer_set_config::addr#0 ] { }  ) always clobbers reg byte a 
Statement [564] *vera_layer_set_config::addr#0 = vera_layer_set_config::config#2 [ ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_config:257 [ conio_screen_width conio_screen_height vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_config:257 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilewidth#10 vera_layer_mode_tile::tileheight#10 ] { { vera_layer_set_config::layer#0 = vera_layer_set_config::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_config::config#0 = vera_layer_set_config::config#2 vera_layer_mode_tile::config#25 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_config:308 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a reg byte y 
Statement [567] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 << 1 [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_tilebase:310 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::$0 ] { }  ) always clobbers reg byte a 
Statement [568] vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0] [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_tilebase:310 [ conio_screen_width conio_screen_height vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::addr#0 ] { }  ) always clobbers reg byte a 
Statement [569] *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#2 [ ] ( main:15::vera_layer_mode_tile:40::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  conio_x16_init:13::vera_layer_mode_text:18::vera_layer_mode_tile:146::vera_layer_set_tilebase:288 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { { vera_layer_set_tilebase::layer#0 = vera_layer_set_tilebase::layer#2 vera_layer_mode_tile::layer#10 } { vera_layer_set_tilebase::tilebase#0 = vera_layer_set_tilebase::tilebase#2 vera_layer_mode_tile::tilebase#10 } }  main:15::vera_layer_mode_bitmap:42::vera_layer_set_tilebase:310 [ conio_screen_width conio_screen_height ] { }  ) always clobbers reg byte a reg byte y 
Statement [579] cputc::$15 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$15 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [580] cputc::conio_addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[cputc::$15] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [581] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [582] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [584] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [589] cputc::$6 = CONIO_SCREEN_BANK#15 | VERA_INC_1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 cputc::color#0 cputc::$6 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [593] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte x 
Statement [594] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::scroll_enable#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte y 
Statement [596] cputc::$16 = (word)conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::$16 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [597] if(cputc::$16!=conio_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [601] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [608] if(*VERA_DC_HSCALE!=vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]) goto vera_display_get_hscale::@2 [ vera_display_get_hscale::s#2 ] ( main:15::bitmap_init:63::vera_display_get_hscale:362 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_color_depth vera_display_get_hscale::s#2 ] { { vera_display_get_hscale::return#0 = vera_display_get_hscale::return#2 } }  ) always clobbers reg byte a 
Statement [615] if(*VERA_DC_VSCALE!=vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]) goto vera_display_get_vscale::@2 [ vera_display_get_vscale::s#2 ] ( main:15::bitmap_init:63::vera_display_get_vscale:366 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address __bitmap_hscale __bitmap_color_depth vera_display_get_vscale::s#2 ] { { vera_display_get_vscale::return#0 = vera_display_get_vscale::return#2 } }  ) always clobbers reg byte a 
Statement [620] mul16u::mb#0 = (dword)mul16u::b#0 [ mul16u::a#0 mul16u::mb#0 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::a#0 mul16u::mb#0 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [622] if(mul16u::a#2!=0) goto mul16u::@2 [ mul16u::res#2 mul16u::a#2 mul16u::mb#2 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::res#2 mul16u::a#2 mul16u::mb#2 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [624] mul16u::$1 = mul16u::a#2 & 1 [ mul16u::res#2 mul16u::a#2 mul16u::mb#2 mul16u::$1 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::res#2 mul16u::a#2 mul16u::mb#2 mul16u::$1 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [626] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 [ mul16u::a#2 mul16u::mb#2 mul16u::res#1 ] ( main:15::bitmap_clear:65::mul16u:446 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 __bitmap_address mul16u::a#2 mul16u::mb#2 mul16u::res#1 ] { { mul16u::a#0 = bitmap_clear::hdelta#0 } { mul16u::b#0 = bitmap_clear::vdelta#0 } { mul16u::return#0 = mul16u::res#2 } }  ) always clobbers reg byte a 
Statement [630] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::vbank#0 memset_vram::vdest#0 memset_vram::num#0 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [635] memset_vram::$2 = VERA_INC_1 | memset_vram::vbank#0 [ memset_vram::num#0 memset_vram::$2 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::num#0 memset_vram::$2 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [638] if(memset_vram::i#2<memset_vram::num#0) goto memset_vram::@2 [ memset_vram::num#0 memset_vram::i#2 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::num#0 memset_vram::i#2 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [640] *VERA_DATA0 = memset_vram::data#0 [ memset_vram::num#0 memset_vram::i#2 ] ( main:15::bitmap_clear:65::memset_vram:454 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 memset_vram::num#0 memset_vram::i#2 ] { { memset_vram::vbank#0 = bitmap_clear::vbank#0 } { memset_vram::num#0 = bitmap_clear::count#0 } }  ) always clobbers reg byte a 
Statement [643] bitmap_line_ydxi::e#0 = bitmap_line_ydxi::xd#2 >> 1 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::x#5 bitmap_line_ydxi::y#6 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::e#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [645] bitmap_plot::x#2 = bitmap_line_ydxi::x#3 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [646] bitmap_plot::y#2 = bitmap_line_ydxi::y#3 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#2 bitmap_plot::y#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [650] bitmap_line_ydxi::e#1 = bitmap_line_ydxi::e#3 + bitmap_line_ydxi::xd#2 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [651] if(bitmap_line_ydxi::yd#5>=bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [653] bitmap_line_ydxi::e#2 = bitmap_line_ydxi::e#1 - bitmap_line_ydxi::yd#5 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::x#2 bitmap_line_ydxi::e#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [655] bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#6 + 1 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 bitmap_line_ydxi::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [656] if(bitmap_line_ydxi::y#2!=bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::c#0 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#6 bitmap_line_ydxi::y#2 bitmap_line_ydxi::e#6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::c#1 = bitmap_line_ydxi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  ) always clobbers reg byte a 
Statement [659] bitmap_line_xdyi::e#0 = bitmap_line_xdyi::yd#2 >> 1 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::x#6 bitmap_line_xdyi::y#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::e#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [661] bitmap_plot::x#0 = bitmap_line_xdyi::x#3 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [662] bitmap_plot::y#0 = bitmap_line_xdyi::y#3 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#0 bitmap_plot::y#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [666] bitmap_line_xdyi::e#1 = bitmap_line_xdyi::e#3 + bitmap_line_xdyi::yd#2 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [667] if(bitmap_line_xdyi::xd#5>=bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::y#3 bitmap_line_xdyi::x#2 bitmap_line_xdyi::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [669] bitmap_line_xdyi::e#2 = bitmap_line_xdyi::e#1 - bitmap_line_xdyi::xd#5 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#2 bitmap_line_xdyi::e#2 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [671] bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#6 + 1 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 bitmap_line_xdyi::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [672] if(bitmap_line_xdyi::x#2!=bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] ( main:15::bitmap_line:110::bitmap_line_xdyi:481 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::c#0 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#2 bitmap_line_xdyi::y#6 bitmap_line_xdyi::e#6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::c#1 = bitmap_line_xdyi::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [675] bitmap_line_ydxd::e#0 = bitmap_line_ydxd::xd#2 >> 1 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::x#5 bitmap_line_ydxd::y#7 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::e#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [677] bitmap_plot::x#3 = bitmap_line_ydxd::x#3 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [678] bitmap_plot::y#3 = bitmap_line_ydxd::y#2 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#3 bitmap_plot::y#3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [682] bitmap_line_ydxd::e#1 = bitmap_line_ydxd::e#3 + bitmap_line_ydxd::xd#2 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [683] if(bitmap_line_ydxd::yd#5>=bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [684] bitmap_line_ydxd::x#2 = -- bitmap_line_ydxd::x#3 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#1 bitmap_line_ydxd::x#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [685] bitmap_line_ydxd::e#2 = bitmap_line_ydxd::e#1 - bitmap_line_ydxd::yd#5 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::x#2 bitmap_line_ydxd::e#2 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [687] bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#6 + 1 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 bitmap_line_ydxd::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [688] if(bitmap_line_ydxd::y#3!=bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] ( main:15::bitmap_line:110::bitmap_line_ydxd:490 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::c#0 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#6 bitmap_line_ydxd::y#3 bitmap_line_ydxd::e#6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::c#1 = bitmap_line_ydxd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } }  ) always clobbers reg byte a 
Statement [691] bitmap_line_xdyd::e#0 = bitmap_line_xdyd::yd#2 >> 1 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::x#6 bitmap_line_xdyd::y#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::e#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [693] bitmap_plot::x#1 = bitmap_line_xdyd::x#3 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [694] bitmap_plot::y#1 = bitmap_line_xdyd::y#3 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#1 bitmap_plot::y#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [698] bitmap_line_xdyd::e#1 = bitmap_line_xdyd::e#3 + bitmap_line_xdyd::yd#2 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [699] if(bitmap_line_xdyd::xd#5>=bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::y#3 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [700] bitmap_line_xdyd::y#2 = -- bitmap_line_xdyd::y#3 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::e#1 bitmap_line_xdyd::y#2 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [701] bitmap_line_xdyd::e#2 = bitmap_line_xdyd::e#1 - bitmap_line_xdyd::xd#5 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#2 bitmap_line_xdyd::e#2 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [703] bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#6 + 1 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 bitmap_line_xdyd::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [704] if(bitmap_line_xdyd::x#2!=bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] ( main:15::bitmap_line:110::bitmap_line_xdyd:497 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::c#0 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#2 bitmap_line_xdyd::y#6 bitmap_line_xdyd::e#6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::c#1 = bitmap_line_xdyd::c#3 bitmap_line::c#10 bitmap_line::c#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } }  ) always clobbers reg byte a 
Statement [710] divr16u::$2 = divr16u::$1 & $80 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#0 divr16u::$2 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [712] divr16u::rem#1 = divr16u::rem#0 | 1 [ divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::dividend#2 divr16u::quotient#3 divr16u::i#2 divr16u::rem#1 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [716] if(divr16u::rem#5<divr16u::divisor#0) goto divr16u::@3 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::rem#5 divr16u::quotient#1 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [718] divr16u::rem#2 = divr16u::rem#5 - divr16u::divisor#0 [ divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 divr16u::divisor#0 divr16u::i#2 divr16u::dividend#0 divr16u::quotient#2 divr16u::rem#2 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [722] rem16u#0 = divr16u::rem#10 [ rem16u#0 ] ( main:15::modr16u:119::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#0 = modr16u::dividend#4 rand::return#2 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#2 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:125::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#1 = modr16u::dividend#4 rand::return#3 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#3 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:131::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#2 = modr16u::dividend#4 rand::return#10 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#4 } { divr16u::divisor#0 = modr16u::divisor#4 } }  main:15::modr16u:137::divr16u:544 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 bitmap_line::x0#0 bitmap_line::x1#0 bitmap_line::y0#0 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 rem16u#0 ] { { modr16u::dividend#3 = modr16u::dividend#4 rand::return#11 divr16u::dividend#1 } { modr16u::return#0 = modr16u::return#10 } { divr16u::divisor#0 = modr16u::divisor#4 } }  ) always clobbers reg byte a 
Statement [725] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 [ vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [726] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] [ vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [727] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C [ vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a reg byte y 
Statement [729] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 [ vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [730] vera_layer_get_color::return#2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] [ vera_layer_get_color::return#2 ] ( main:15::cputs:54::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:56::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:58::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:60::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:71::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:86::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:92::cputc:351::vera_layer_get_color:576 [ cputs::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 cputc::c#0 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#0 = vera_layer_get_color::return#3 } }  main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783::vera_layer_get_color:803 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 vera_layer_get_color::return#2 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [734] cputln::$2 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::$2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [735] cputln::temp#0 = conio_line_text[cputln::$2] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [736] cputln::temp#1 = cputln::temp#0 + conio_rowskip [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [737] cputln::$3 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 cputln::temp#1 cputln::$3 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [738] conio_line_text[cputln::$3] = cputln::temp#1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [739] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [740] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte x 
Statement [744] bitmap_plot::$9 = bitmap_plot::x#4 << 1 [ bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$9 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [745] bitmap_plot::$12 = __bitmap_plot_x + bitmap_plot::$9 [ bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::$12 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [746] bitmap_plot::plot_x#0 = (dword)*bitmap_plot::$12 [ bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::y#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [747] bitmap_plot::$10 = bitmap_plot::y#4 << 2 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$10 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [748] bitmap_plot::$13 = __bitmap_plot_y + bitmap_plot::$10 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::$13 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [749] bitmap_plot::plot_y#0 = *bitmap_plot::$13 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::plot_x#0 bitmap_plot::plot_y#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [750] bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plot_x#0 + bitmap_plot::plot_y#0 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [751] bitmap_plot::$14 = __bitmap_plot_bitshift + bitmap_plot::x#4 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$14 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [752] bitmap_plot::bitshift#0 = *bitmap_plot::$14 [ bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::c#5 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::bitshift#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [754] bitmap_plot::$3 = bitmap_plot::c#5 << bitmap_plot::bitshift#0 [ bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::$3 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [756] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::x#4 bitmap_plot::vera_vram_address01_bankaddr#0 bitmap_plot::c#0 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [763] bitmap_plot::$15 = __bitmap_plot_bitmask + bitmap_plot::x#4 [ bitmap_plot::c#0 bitmap_plot::$15 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$15 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [764] bitmap_plot::$6 = ~ *bitmap_plot::$15 [ bitmap_plot::c#0 bitmap_plot::$6 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$6 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a reg byte y 
Statement [765] bitmap_plot::$7 = *VERA_DATA0 & bitmap_plot::$6 [ bitmap_plot::c#0 bitmap_plot::$7 ] ( main:15::bitmap_line:110::bitmap_line_ydxi:473::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:473::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxi::xd#0 = bitmap_line_ydxi::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxi::x#0 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxi::y#0 = bitmap_line_ydxi::y#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxi::yd#0 = bitmap_line_ydxi::yd#5 bitmap_line::yd#2 } { bitmap_line_ydxi::y1#0 = bitmap_line_ydxi::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxi:524::bitmap_plot:648 [ main::x#3 main::color#2 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxi:524::bitmap_plot:648 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::c#3 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::x#3 bitmap_line_ydxi::y#3 bitmap_line_ydxi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxi::xd#1 = bitmap_line_ydxi::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxi::x#1 = bitmap_line_ydxi::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxi::y#1 = bitmap_line_ydxi::y#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxi::yd#1 = bitmap_line_ydxi::yd#5 bitmap_line::yd#11 } { bitmap_line_ydxi::y1#1 = bitmap_line_ydxi::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#2 = bitmap_plot::x#4 bitmap_line_ydxi::x#3 } { bitmap_plot::y#2 = bitmap_plot::y#4 bitmap_line_ydxi::y#3 } { bitmap_plot::c#3 = bitmap_plot::c#5 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:481::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:481::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyi::yd#0 = bitmap_line_xdyi::yd#2 bitmap_line::yd#2 } { bitmap_line_xdyi::x#0 = bitmap_line_xdyi::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyi::y#0 = bitmap_line_xdyi::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyi::xd#0 = bitmap_line_xdyi::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyi::x1#0 = bitmap_line_xdyi::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyi:531::bitmap_plot:664 [ main::x#3 main::color#2 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyi:531::bitmap_plot:664 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::c#3 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x#3 bitmap_line_xdyi::y#3 bitmap_line_xdyi::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyi::yd#1 = bitmap_line_xdyi::yd#2 bitmap_line::yd#11 } { bitmap_line_xdyi::x#1 = bitmap_line_xdyi::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyi::y#1 = bitmap_line_xdyi::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyi::xd#1 = bitmap_line_xdyi::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyi::x1#1 = bitmap_line_xdyi::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#0 = bitmap_plot::x#4 bitmap_line_xdyi::x#3 } { bitmap_plot::y#0 = bitmap_plot::y#4 bitmap_line_xdyi::y#3 } { bitmap_plot::c#1 = bitmap_plot::c#5 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:490::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:490::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x1#0 = bitmap_line::x1#10 } { bitmap_line_ydxd::xd#0 = bitmap_line_ydxd::xd#2 bitmap_line::xd#2 } { bitmap_line_ydxd::x#0 = bitmap_line_ydxd::x#5 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_ydxd::y#0 = bitmap_line_ydxd::y#7 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_ydxd::yd#0 = bitmap_line_ydxd::yd#5 bitmap_line::yd#1 } { bitmap_line_ydxd::y1#0 = bitmap_line_ydxd::y1#6 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_ydxd:508::bitmap_plot:680 [ main::x#3 main::color#2 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_ydxd:508::bitmap_plot:680 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::c#3 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::x#3 bitmap_line_ydxd::y#2 bitmap_line_ydxd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::x0#0 = bitmap_line::x0#10 } { bitmap_line_ydxd::xd#1 = bitmap_line_ydxd::xd#2 bitmap_line::xd#1 } { bitmap_line_ydxd::x#1 = bitmap_line_ydxd::x#5 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_ydxd::y#1 = bitmap_line_ydxd::y#7 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_ydxd::yd#1 = bitmap_line_ydxd::yd#5 bitmap_line::yd#10 } { bitmap_line_ydxd::y1#1 = bitmap_line_ydxd::y1#6 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_plot::x#3 = bitmap_plot::x#4 bitmap_line_ydxd::x#3 } { bitmap_plot::y#3 = bitmap_plot::y#4 bitmap_line_ydxd::y#2 } { bitmap_plot::c#4 = bitmap_plot::c#5 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:497::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:497::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y0#0 = bitmap_line::y0#10 } { bitmap_line_xdyd::yd#0 = bitmap_line_xdyd::yd#2 bitmap_line::yd#1 } { bitmap_line_xdyd::x#0 = bitmap_line_xdyd::x#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_line_xdyd::y#0 = bitmap_line_xdyd::y#5 bitmap_line::y1#10 bitmap_line::y1#0 } { bitmap_line_xdyd::xd#0 = bitmap_line_xdyd::xd#5 bitmap_line::xd#2 } { bitmap_line_xdyd::x1#0 = bitmap_line_xdyd::x1#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#0 bitmap_line::c#10 bitmap_line::c#0 } }  main:15::bitmap_line:110::bitmap_line_xdyd:515::bitmap_plot:696 [ main::x#3 main::color#2 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line::x1#10 bitmap_line::x1#1 bitmap_line::x0#10 bitmap_line::x0#1 main::x#3 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#1 main::color#2 } }  main:15::bitmap_line:144::bitmap_line_xdyd:515::bitmap_plot:696 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip rand_state#14 CONIO_SCREEN_BANK#15 CONIO_SCREEN_TEXT#104 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::c#3 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x#3 bitmap_line_xdyd::y#3 bitmap_line_xdyd::e#3 bitmap_plot::c#0 bitmap_plot::$7 ] { { bitmap_line::y1#0 = bitmap_line::y1#10 } { bitmap_line_xdyd::yd#1 = bitmap_line_xdyd::yd#2 bitmap_line::yd#10 } { bitmap_line_xdyd::x#1 = bitmap_line_xdyd::x#6 bitmap_line::x0#10 bitmap_line::x0#0 } { bitmap_line_xdyd::y#1 = bitmap_line_xdyd::y#5 bitmap_line::y0#10 bitmap_line::y0#0 } { bitmap_line_xdyd::xd#1 = bitmap_line_xdyd::xd#5 bitmap_line::xd#1 } { bitmap_line_xdyd::x1#1 = bitmap_line_xdyd::x1#6 bitmap_line::x1#10 bitmap_line::x1#0 } { bitmap_plot::x#1 = bitmap_plot::x#4 bitmap_line_xdyd::x#3 } { bitmap_plot::y#1 = bitmap_plot::y#4 bitmap_line_xdyd::y#3 } { bitmap_plot::c#2 = bitmap_plot::c#5 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line::c#10 bitmap_line::c#0 } }  ) always clobbers reg byte a 
Statement [769] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [770] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [771] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [776] gotoxy::y#2 = conio_screen_height - 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 gotoxy::y#2 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#2 = gotoxy::y#7 } }  ) always clobbers reg byte x 
Statement [778] insertup::cy#0 = conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte y 
Statement [779] insertup::width#0 = conio_screen_width << 1 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [786] insertup::line#0 = insertup::$3 << conio_rowshift [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a reg byte y 
Statement [787] insertup::start#0 = (byte*)CONIO_SCREEN_TEXT#104 + insertup::line#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [788] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [789] memcpy_in_vram::dest#0 = (void*)insertup::start#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [790] memcpy_in_vram::num#0 = insertup::width#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [791] memcpy_in_vram::src#3 = (void*)memcpy_in_vram::src#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#104 memcpy_in_vram::src#3 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 insertup::cy#0 insertup::width#0 insertup::i#2 ] { { cputc::c#0 = cputs::c#1 } { memcpy_in_vram::src#2 = memcpy_in_vram::src#3 } { memcpy_in_vram::dest#0 = memcpy_in_vram::dest#2 } { memcpy_in_vram::num#0 = memcpy_in_vram::num#3 insertup::width#0 } }  ) always clobbers reg byte a 
Statement [794] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [795] clearline::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::$5 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [796] clearline::addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[clearline::$5] [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::addr#0 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [801] *VERA_ADDRX_H = VERA_INC_1 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#3 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [807] if(clearline::c#2<conio_screen_width) goto clearline::@2 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Statement [808] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [810] *VERA_DATA0 = ' ' [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] ( main:15::cputs:54::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:599::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:603::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:54::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:56::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:58::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:60::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:71::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:86::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  main:15::cputs:92::cputc:351::cputln:605::cscroll:741::insertup:775::clearline:783 [ cputs::s#0 conio_width CONIO_SCREEN_BANK#15 conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#104 clearline::color#0 clearline::c#2 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a 
Potential registers zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] : zp[1]:2 , reg byte x , 
Potential registers zp[2]:3 [ main::x#3 main::x#1 ] : zp[2]:3 , 
Potential registers zp[1]:5 [ main::color#2 main::color#1 ] : zp[1]:5 , reg byte x , 
Potential registers zp[1]:6 [ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ] : zp[1]:6 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:7 [ vera_layer_set_textcolor::color#6 ] : zp[1]:7 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:8 [ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ] : zp[1]:8 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:9 [ vera_layer_set_backcolor::color#4 ] : zp[1]:9 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:10 [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ] : zp[1]:10 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:11 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ] : zp[1]:11 , reg byte x , reg byte y , 
Potential registers zp[1]:12 [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ] : zp[1]:12 , reg byte x , 
Potential registers zp[2]:13 [ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ] : zp[2]:13 , 
Potential registers zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ] : zp[2]:15 , 
Potential registers zp[1]:17 [ memcpy_in_vram::dest_bank#2 ] : zp[1]:17 , reg byte x , reg byte y , 
Potential registers zp[2]:18 [ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ] : zp[2]:18 , 
Potential registers zp[2]:20 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] : zp[2]:20 , 
Potential registers zp[2]:22 [ vera_layer_mode_tile::mapwidth#10 ] : zp[2]:22 , 
Potential registers zp[1]:24 [ vera_layer_mode_tile::layer#10 ] : zp[1]:24 , reg byte x , 
Potential registers zp[2]:25 [ vera_layer_mode_tile::mapheight#10 ] : zp[2]:25 , 
Potential registers zp[4]:27 [ vera_layer_mode_tile::mapbase_address#10 ] : zp[4]:27 , 
Potential registers zp[4]:31 [ vera_layer_mode_tile::tilebase_address#10 ] : zp[4]:31 , 
Potential registers zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ] : zp[1]:35 , reg byte x , 
Potential registers zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ] : zp[1]:36 , reg byte x , 
Potential registers zp[1]:37 [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ] : zp[1]:37 , reg byte x , reg byte y , 
Potential registers zp[1]:38 [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ] : zp[1]:38 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:39 [ clrscr::l#2 clrscr::l#1 ] : zp[1]:39 , reg byte x , reg byte y , 
Potential registers zp[2]:40 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] : zp[2]:40 , 
Potential registers zp[1]:42 [ clrscr::c#2 clrscr::c#1 ] : zp[1]:42 , reg byte x , reg byte y , 
Potential registers zp[2]:43 [ cputs::s#8 cputs::s#9 cputs::s#0 ] : zp[2]:43 , 
Potential registers zp[2]:45 [ bitmap_init::x#10 bitmap_init::x#1 ] : zp[2]:45 , 
Potential registers zp[1]:47 [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ] : zp[1]:47 , reg byte x , 
Potential registers zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] : zp[1]:48 , reg byte x , 
Potential registers zp[2]:49 [ bitmap_init::y#2 bitmap_init::y#1 ] : zp[2]:49 , 
Potential registers zp[4]:51 [ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ] : zp[4]:51 , 
Potential registers zp[2]:55 [ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ] : zp[2]:55 , 
Potential registers zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ] : zp[2]:57 , 
Potential registers zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 ] : zp[2]:59 , 
Potential registers zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 ] : zp[2]:61 , 
Potential registers zp[1]:63 [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ] : zp[1]:63 , reg byte x , reg byte y , 
Potential registers zp[2]:64 [ rand_state#13 rand_state#23 rand_state#14 ] : zp[2]:64 , 
Potential registers zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ] : zp[2]:66 , 
Potential registers zp[2]:68 [ modr16u::divisor#4 ] : zp[2]:68 , 
Potential registers zp[1]:70 [ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ] : zp[1]:70 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:71 [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ] : zp[1]:71 , reg byte x , reg byte y , 
Potential registers zp[1]:72 [ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ] : zp[1]:72 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:73 [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ] : zp[1]:73 , reg byte x , reg byte y , 
Potential registers zp[1]:74 [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ] : zp[1]:74 , reg byte x , reg byte y , 
Potential registers zp[1]:75 [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ] : zp[1]:75 , reg byte x , reg byte y , 
Potential registers zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 ] : zp[2]:76 , 
Potential registers zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] : zp[4]:78 , 
Potential registers zp[4]:82 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] : zp[4]:82 , 
Potential registers zp[4]:86 [ memset_vram::i#2 memset_vram::i#1 ] : zp[4]:86 , 
Potential registers zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ] : zp[2]:90 , 
Potential registers zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ] : zp[1]:92 , reg byte x , 
Potential registers zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ] : zp[2]:93 , 
Potential registers zp[2]:95 [ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ] : zp[2]:95 , 
Potential registers zp[2]:97 [ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ] : zp[2]:97 , 
Potential registers zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ] : zp[2]:99 , 
Potential registers zp[2]:101 [ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ] : zp[2]:101 , 
Potential registers zp[2]:103 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ] : zp[2]:103 , 
Potential registers zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ] : zp[1]:105 , reg byte x , 
Potential registers zp[2]:106 [ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ] : zp[2]:106 , 
Potential registers zp[2]:108 [ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ] : zp[2]:108 , 
Potential registers zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ] : zp[2]:110 , 
Potential registers zp[2]:112 [ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ] : zp[2]:112 , 
Potential registers zp[2]:114 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ] : zp[2]:114 , 
Potential registers zp[2]:116 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ] : zp[2]:116 , 
Potential registers zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ] : zp[1]:118 , reg byte x , 
Potential registers zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ] : zp[2]:119 , 
Potential registers zp[2]:121 [ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ] : zp[2]:121 , 
Potential registers zp[2]:123 [ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ] : zp[2]:123 , 
Potential registers zp[2]:125 [ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ] : zp[2]:125 , 
Potential registers zp[2]:127 [ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ] : zp[2]:127 , 
Potential registers zp[2]:129 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ] : zp[2]:129 , 
Potential registers zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] : zp[1]:131 , reg byte x , 
Potential registers zp[2]:132 [ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ] : zp[2]:132 , 
Potential registers zp[2]:134 [ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ] : zp[2]:134 , 
Potential registers zp[2]:136 [ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ] : zp[2]:136 , 
Potential registers zp[2]:138 [ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ] : zp[2]:138 , 
Potential registers zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ] : zp[2]:140 , 
Potential registers zp[2]:142 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ] : zp[2]:142 , 
Potential registers zp[2]:144 [ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ] : zp[2]:144 , 
Potential registers zp[2]:146 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ] : zp[2]:146 , 
Potential registers zp[1]:148 [ divr16u::i#2 divr16u::i#1 ] : zp[1]:148 , reg byte x , reg byte y , 
Potential registers zp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] : zp[1]:149 , reg byte x , 
Potential registers zp[1]:150 [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ] : zp[1]:150 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:151 [ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ] : zp[2]:151 , 
Potential registers zp[2]:153 [ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ] : zp[2]:153 , 
Potential registers zp[1]:155 [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ] : zp[1]:155 , reg byte x , 
Potential registers zp[1]:156 [ insertup::i#2 insertup::i#1 ] : zp[1]:156 , reg byte x , 
Potential registers zp[2]:157 [ clearline::c#2 clearline::c#1 ] : zp[2]:157 , 
Potential registers zp[1]:159 [ conio_screen_width ] : zp[1]:159 , 
Potential registers zp[1]:160 [ conio_screen_height ] : zp[1]:160 , 
Potential registers zp[1]:161 [ conio_screen_layer ] : zp[1]:161 , 
Potential registers zp[2]:162 [ conio_width ] : zp[2]:162 , 
Potential registers zp[2]:164 [ conio_height ] : zp[2]:164 , 
Potential registers zp[1]:166 [ conio_rowshift ] : zp[1]:166 , 
Potential registers zp[2]:167 [ conio_rowskip ] : zp[2]:167 , 
Potential registers zp[4]:169 [ __bitmap_address ] : zp[4]:169 , 
Potential registers zp[1]:173 [ __bitmap_layer ] : zp[1]:173 , 
Potential registers zp[1]:174 [ __bitmap_hscale ] : zp[1]:174 , 
Potential registers zp[1]:175 [ __bitmap_vscale ] : zp[1]:175 , 
Potential registers zp[1]:176 [ __bitmap_color_depth ] : zp[1]:176 , 
Potential registers zp[1]:177 [ kbhit::return#2 ] : zp[1]:177 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:178 [ main::$30 ] : zp[1]:178 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:179 [ kbhit::return#3 ] : zp[1]:179 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:180 [ main::$43 ] : zp[1]:180 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:181 [ rand::return#2 ] : zp[2]:181 , 
Potential registers zp[2]:183 [ modr16u::return#2 ] : zp[2]:183 , 
Potential registers zp[2]:185 [ rand::return#3 ] : zp[2]:185 , 
Potential registers zp[2]:187 [ modr16u::return#3 ] : zp[2]:187 , 
Potential registers zp[2]:189 [ rand::return#10 ] : zp[2]:189 , 
Potential registers zp[2]:191 [ modr16u::return#4 ] : zp[2]:191 , 
Potential registers zp[2]:193 [ rand::return#11 ] : zp[2]:193 , 
Potential registers zp[2]:195 [ modr16u::return#10 ] : zp[2]:195 , 
Potential registers zp[2]:197 [ rand::return#12 ] : zp[2]:197 , 
Potential registers zp[2]:199 [ main::$40 ] : zp[2]:199 , 
Potential registers zp[1]:201 [ screensize::hscale#0 ] : zp[1]:201 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:202 [ screensize::$1 ] : zp[1]:202 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:203 [ screensize::vscale#0 ] : zp[1]:203 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:204 [ screensize::$3 ] : zp[1]:204 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:205 [ vera_layer_get_mapbase_bank::layer#0 ] : zp[1]:205 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:206 [ vera_layer_get_mapbase_bank::return#2 ] : zp[1]:206 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:207 [ CONIO_SCREEN_BANK#15 ] : zp[1]:207 , 
Potential registers zp[1]:208 [ vera_layer_get_mapbase_offset::layer#0 ] : zp[1]:208 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 ] : zp[2]:209 , 
Potential registers zp[2]:211 [ CONIO_SCREEN_TEXT#104 ] : zp[2]:211 , 
Potential registers zp[1]:213 [ screenlayer::vera_layer_get_width1_layer#0 ] : zp[1]:213 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:214 [ screenlayer::vera_layer_get_width1_$2 ] : zp[1]:214 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:215 [ screenlayer::vera_layer_get_width1_config#0 ] : zp[2]:215 , 
Potential registers zp[1]:217 [ screenlayer::vera_layer_get_width1_$0 ] : zp[1]:217 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:218 [ screenlayer::vera_layer_get_width1_$1 ] : zp[1]:218 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:219 [ screenlayer::vera_layer_get_width1_$3 ] : zp[1]:219 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 ] : zp[2]:220 , 
Potential registers zp[2]:222 [ screenlayer::vera_layer_get_width1_return#1 ] : zp[2]:222 , 
Potential registers zp[2]:224 [ screenlayer::$2 ] : zp[2]:224 , 
Potential registers zp[1]:226 [ vera_layer_get_rowshift::layer#0 ] : zp[1]:226 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:227 [ vera_layer_get_rowshift::return#2 ] : zp[1]:227 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:228 [ screenlayer::$3 ] : zp[1]:228 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:229 [ vera_layer_get_rowskip::layer#0 ] : zp[1]:229 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:230 [ vera_layer_get_rowskip::return#2 ] : zp[2]:230 , 
Potential registers zp[2]:232 [ screenlayer::$4 ] : zp[2]:232 , 
Potential registers zp[1]:234 [ screenlayer::vera_layer_get_height1_layer#0 ] : zp[1]:234 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:235 [ screenlayer::vera_layer_get_height1_$2 ] : zp[1]:235 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:236 [ screenlayer::vera_layer_get_height1_config#0 ] : zp[2]:236 , 
Potential registers zp[1]:238 [ screenlayer::vera_layer_get_height1_$0 ] : zp[1]:238 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:239 [ screenlayer::vera_layer_get_height1_$1 ] : zp[1]:239 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:240 [ screenlayer::vera_layer_get_height1_$3 ] : zp[1]:240 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 ] : zp[2]:241 , 
Potential registers zp[2]:243 [ screenlayer::vera_layer_get_height1_return#1 ] : zp[2]:243 , 
Potential registers zp[2]:245 [ screenlayer::$5 ] : zp[2]:245 , 
Potential registers zp[1]:247 [ vera_layer_set_mapbase::$0 ] : zp[1]:247 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:248 [ vera_layer_set_mapbase::addr#0 ] : zp[2]:248 , 
Potential registers zp[2]:250 [ gotoxy::$6 ] : zp[2]:250 , 
Potential registers zp[2]:252 [ gotoxy::line_offset#0 ] : zp[2]:252 , 
Potential registers zp[1]:254 [ gotoxy::$5 ] : zp[1]:254 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:255 [ memcpy_in_vram::$0 ] : zp[1]:255 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:256 [ memcpy_in_vram::$1 ] : zp[1]:256 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:257 [ memcpy_in_vram::$3 ] : zp[1]:257 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:258 [ memcpy_in_vram::$4 ] : zp[1]:258 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:259 [ memcpy_in_vram::$5 ] : zp[1]:259 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:260 [ vera_layer_mode_tile::$14 ] : zp[1]:260 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:261 [ vera_layer_mode_tile::$1 ] : zp[2]:261 , 
Potential registers zp[1]:263 [ vera_layer_mode_tile::$17 ] : zp[1]:263 , reg byte x , 
Potential registers zp[1]:264 [ vera_layer_mode_tile::$2 ] : zp[1]:264 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:265 [ vera_layer_mode_tile::$18 ] : zp[1]:265 , reg byte x , 
Potential registers zp[4]:266 [ vera_layer_mode_tile::mapbase_address#0 ] : zp[4]:266 , 
Potential registers zp[1]:270 [ vera_layer_mode_tile::mapbase#0 ] : zp[1]:270 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:271 [ vera_layer_mode_tile::$6 ] : zp[2]:271 , 
Potential registers zp[1]:273 [ vera_layer_mode_tile::$7 ] : zp[1]:273 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[4]:274 [ vera_layer_mode_tile::tilebase_address#0 ] : zp[4]:274 , 
Potential registers zp[1]:278 [ vera_layer_mode_tile::tilebase#0 ] : zp[1]:278 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:279 [ vera_layer_mode_tile::$13 ] : zp[1]:279 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:280 [ vera_layer_mode_tile::$12 ] : zp[1]:280 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:281 [ vera_layer_mode_tile::$11 ] : zp[1]:281 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:282 [ vera_layer_get_backcolor::layer#0 ] : zp[1]:282 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:283 [ vera_layer_get_backcolor::return#0 ] : zp[1]:283 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:284 [ clrscr::$0 ] : zp[1]:284 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:285 [ clrscr::$1 ] : zp[1]:285 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:286 [ vera_layer_get_textcolor::layer#0 ] : zp[1]:286 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:287 [ vera_layer_get_textcolor::return#0 ] : zp[1]:287 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:288 [ clrscr::$2 ] : zp[1]:288 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:289 [ clrscr::color#0 ] : zp[1]:289 , reg byte x , reg byte y , 
Potential registers zp[1]:290 [ clrscr::$9 ] : zp[1]:290 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:291 [ clrscr::$5 ] : zp[1]:291 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:292 [ clrscr::$6 ] : zp[1]:292 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:293 [ clrscr::$7 ] : zp[1]:293 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:294 [ cputs::c#1 ] : zp[1]:294 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:295 [ cputc::c#0 ] : zp[1]:295 , reg byte x , 
Potential registers zp[1]:296 [ bitmap_init::vera_layer_get_color_depth1_layer#0 ] : zp[1]:296 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:297 [ bitmap_init::vera_layer_get_color_depth1_$1 ] : zp[1]:297 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:298 [ bitmap_init::vera_layer_get_color_depth1_config#0 ] : zp[2]:298 , 
Potential registers zp[1]:300 [ bitmap_init::vera_layer_get_color_depth1_$0 ] : zp[1]:300 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:301 [ bitmap_init::vera_layer_get_color_depth1_return#0 ] : zp[1]:301 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:302 [ bitmap_init::vera_layer_get_color_depth1_return#1 ] : zp[1]:302 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:303 [ bitmap_init::$0 ] : zp[1]:303 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:304 [ vera_display_get_hscale::return#2 ] : zp[1]:304 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:305 [ bitmap_init::$1 ] : zp[1]:305 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:306 [ vera_display_get_vscale::return#2 ] : zp[1]:306 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:307 [ bitmap_init::$2 ] : zp[1]:307 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:308 [ bitmap_init::$7 ] : zp[2]:308 , 
Potential registers zp[2]:310 [ bitmap_init::$23 ] : zp[2]:310 , 
Potential registers zp[2]:312 [ bitmap_init::$29 ] : zp[2]:312 , 
Potential registers zp[2]:314 [ bitmap_init::$30 ] : zp[2]:314 , 
Potential registers zp[2]:316 [ bitmap_init::$31 ] : zp[2]:316 , 
Potential registers zp[2]:318 [ bitmap_init::$10 ] : zp[2]:318 , 
Potential registers zp[2]:320 [ bitmap_init::$24 ] : zp[2]:320 , 
Potential registers zp[2]:322 [ bitmap_init::$32 ] : zp[2]:322 , 
Potential registers zp[2]:324 [ bitmap_init::$33 ] : zp[2]:324 , 
Potential registers zp[2]:326 [ bitmap_init::$34 ] : zp[2]:326 , 
Potential registers zp[2]:328 [ bitmap_init::$13 ] : zp[2]:328 , 
Potential registers zp[2]:330 [ bitmap_init::$25 ] : zp[2]:330 , 
Potential registers zp[2]:332 [ bitmap_init::$35 ] : zp[2]:332 , 
Potential registers zp[2]:334 [ bitmap_init::$36 ] : zp[2]:334 , 
Potential registers zp[2]:336 [ bitmap_init::$37 ] : zp[2]:336 , 
Potential registers zp[2]:338 [ bitmap_init::$26 ] : zp[2]:338 , 
Potential registers zp[2]:340 [ bitmap_init::$38 ] : zp[2]:340 , 
Potential registers zp[2]:342 [ bitmap_init::$39 ] : zp[2]:342 , 
Potential registers zp[2]:344 [ bitmap_init::$40 ] : zp[2]:344 , 
Potential registers zp[1]:346 [ bitmap_init::$3 ] : zp[1]:346 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:347 [ bitmap_init::$4 ] : zp[1]:347 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:348 [ bitmap_init::$27 ] : zp[1]:348 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:349 [ bitmap_init::hdelta#0 ] : zp[2]:349 , 
Potential registers zp[2]:351 [ bitmap_init::$28 ] : zp[2]:351 , 
Potential registers zp[2]:353 [ bitmap_init::$41 ] : zp[2]:353 , 
Potential registers zp[1]:355 [ bitmap_clear::$6 ] : zp[1]:355 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:356 [ bitmap_clear::vdelta#0 ] : zp[2]:356 , 
Potential registers zp[1]:358 [ bitmap_clear::$0 ] : zp[1]:358 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:359 [ bitmap_clear::$1 ] : zp[1]:359 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:360 [ bitmap_clear::$7 ] : zp[1]:360 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:361 [ bitmap_clear::hdelta#0 ] : zp[2]:361 , 
Potential registers zp[2]:363 [ mul16u::b#0 ] : zp[2]:363 , 
Potential registers zp[4]:365 [ mul16u::return#0 ] : zp[4]:365 , 
Potential registers zp[4]:369 [ bitmap_clear::count#0 ] : zp[4]:369 , 
Potential registers zp[1]:373 [ bitmap_clear::vbank#0 ] : zp[1]:373 , reg byte x , reg byte y , 
Potential registers zp[2]:374 [ bitmap_clear::vdest#0 ] : zp[2]:374 , 
Potential registers zp[1]:376 [ memset_vram::vbank#0 ] : zp[1]:376 , reg byte x , reg byte y , 
Potential registers zp[2]:377 [ memset_vram::vdest#0 ] : zp[2]:377 , 
Potential registers zp[4]:379 [ memset_vram::num#0 ] : zp[4]:379 , 
Potential registers zp[1]:383 [ kbhit::ch ] : zp[1]:383 , 
Potential registers zp[1]:384 [ kbhit::return#0 ] : zp[1]:384 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:385 [ kbhit::return#1 ] : zp[1]:385 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:386 [ bitmap_line::xd#2 ] : zp[2]:386 , 
Potential registers zp[2]:388 [ bitmap_line::yd#2 ] : zp[2]:388 , 
Potential registers zp[2]:390 [ bitmap_line::yd#1 ] : zp[2]:390 , 
Potential registers zp[2]:392 [ bitmap_line::xd#1 ] : zp[2]:392 , 
Potential registers zp[2]:394 [ bitmap_line::yd#10 ] : zp[2]:394 , 
Potential registers zp[2]:396 [ bitmap_line::yd#11 ] : zp[2]:396 , 
Potential registers zp[2]:398 [ rand::$0 ] : zp[2]:398 , 
Potential registers zp[2]:400 [ rand_state#0 ] : zp[2]:400 , 
Potential registers zp[2]:402 [ rand::$1 ] : zp[2]:402 , 
Potential registers zp[2]:404 [ rand_state#1 ] : zp[2]:404 , 
Potential registers zp[2]:406 [ rand::$2 ] : zp[2]:406 , 
Potential registers zp[2]:408 [ rand::return#0 ] : zp[2]:408 , 
Potential registers zp[2]:410 [ divr16u::divisor#0 ] : zp[2]:410 , 
Potential registers zp[2]:412 [ modr16u::return#0 ] : zp[2]:412 , 
Potential registers zp[2]:414 [ vera_layer_set_text_color_mode::addr#0 ] : zp[2]:414 , 
Potential registers zp[1]:416 [ vera_layer_get_mapbase_bank::return#0 ] : zp[1]:416 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:417 [ vera_layer_get_mapbase_offset::$0 ] : zp[1]:417 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:418 [ vera_layer_get_mapbase_offset::return#0 ] : zp[2]:418 , 
Potential registers zp[1]:420 [ vera_layer_get_rowshift::return#0 ] : zp[1]:420 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:421 [ vera_layer_get_rowskip::$0 ] : zp[1]:421 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:422 [ vera_layer_get_rowskip::return#0 ] : zp[2]:422 , 
Potential registers zp[1]:424 [ vera_layer_set_config::$0 ] : zp[1]:424 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:425 [ vera_layer_set_config::addr#0 ] : zp[2]:425 , 
Potential registers zp[1]:427 [ vera_layer_set_tilebase::$0 ] : zp[1]:427 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:428 [ vera_layer_set_tilebase::addr#0 ] : zp[2]:428 , 
Potential registers zp[1]:430 [ vera_layer_get_backcolor::return#1 ] : zp[1]:430 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:431 [ vera_layer_get_textcolor::return#1 ] : zp[1]:431 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:432 [ vera_layer_get_color::return#0 ] : zp[1]:432 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:433 [ cputc::color#0 ] : zp[1]:433 , reg byte x , reg byte y , 
Potential registers zp[1]:434 [ cputc::$15 ] : zp[1]:434 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:435 [ cputc::conio_addr#0 ] : zp[2]:435 , 
Potential registers zp[1]:437 [ cputc::$2 ] : zp[1]:437 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:438 [ cputc::conio_addr#1 ] : zp[2]:438 , 
Potential registers zp[1]:440 [ cputc::$4 ] : zp[1]:440 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:441 [ cputc::$5 ] : zp[1]:441 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:442 [ cputc::$6 ] : zp[1]:442 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:443 [ cputc::scroll_enable#0 ] : zp[1]:443 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:444 [ cputc::$16 ] : zp[2]:444 , 
Potential registers zp[1]:446 [ mul16u::$1 ] : zp[1]:446 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:447 [ memset_vram::$0 ] : zp[1]:447 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:448 [ memset_vram::$1 ] : zp[1]:448 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:449 [ memset_vram::$2 ] : zp[1]:449 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:450 [ bitmap_line_ydxi::$6 ] : zp[2]:450 , 
Potential registers zp[2]:452 [ bitmap_line_xdyi::$6 ] : zp[2]:452 , 
Potential registers zp[2]:454 [ bitmap_line_ydxd::$6 ] : zp[2]:454 , 
Potential registers zp[2]:456 [ bitmap_line_xdyd::$6 ] : zp[2]:456 , 
Potential registers zp[1]:458 [ divr16u::$1 ] : zp[1]:458 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:459 [ divr16u::$2 ] : zp[1]:459 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:460 [ rem16u#0 ] : zp[2]:460 , 
Potential registers zp[1]:462 [ vera_layer_get_color::$3 ] : zp[1]:462 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:463 [ vera_layer_get_color::addr#0 ] : zp[2]:463 , 
Potential registers zp[1]:465 [ vera_layer_get_color::$0 ] : zp[1]:465 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:466 [ vera_layer_get_color::$1 ] : zp[1]:466 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:467 [ cputln::$2 ] : zp[1]:467 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:468 [ cputln::temp#0 ] : zp[2]:468 , 
Potential registers zp[2]:470 [ cputln::temp#1 ] : zp[2]:470 , 
Potential registers zp[1]:472 [ cputln::$3 ] : zp[1]:472 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:473 [ bitmap_plot::$9 ] : zp[2]:473 , 
Potential registers zp[2]:475 [ bitmap_plot::$12 ] : zp[2]:475 , 
Potential registers zp[4]:477 [ bitmap_plot::plot_x#0 ] : zp[4]:477 , 
Potential registers zp[2]:481 [ bitmap_plot::$10 ] : zp[2]:481 , 
Potential registers zp[2]:483 [ bitmap_plot::$13 ] : zp[2]:483 , 
Potential registers zp[4]:485 [ bitmap_plot::plot_y#0 ] : zp[4]:485 , 
Potential registers zp[4]:489 [ bitmap_plot::vera_vram_address01_bankaddr#0 ] : zp[4]:489 , 
Potential registers zp[2]:493 [ bitmap_plot::$14 ] : zp[2]:493 , 
Potential registers zp[1]:495 [ bitmap_plot::bitshift#0 ] : zp[1]:495 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:496 [ bitmap_plot::vera_vram_address01_$0 ] : zp[1]:496 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:497 [ bitmap_plot::vera_vram_address01_$1 ] : zp[1]:497 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:498 [ bitmap_plot::vera_vram_address01_$3 ] : zp[1]:498 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:499 [ bitmap_plot::$15 ] : zp[2]:499 , 
Potential registers zp[1]:501 [ bitmap_plot::$6 ] : zp[1]:501 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:502 [ bitmap_plot::$7 ] : zp[1]:502 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:503 [ bitmap_plot::$8 ] : zp[1]:503 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:504 [ insertup::cy#0 ] : zp[1]:504 , reg byte x , 
Potential registers zp[1]:505 [ insertup::width#0 ] : zp[1]:505 , reg byte x , 
Potential registers zp[1]:506 [ insertup::$3 ] : zp[1]:506 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:507 [ insertup::line#0 ] : zp[2]:507 , 
Potential registers zp[2]:509 [ insertup::start#0 ] : zp[2]:509 , 
Potential registers zp[2]:511 [ memcpy_in_vram::src#0 ] : zp[2]:511 , 
Potential registers zp[1]:513 [ clearline::$5 ] : zp[1]:513 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:514 [ clearline::addr#0 ] : zp[2]:514 , 
Potential registers zp[1]:516 [ clearline::$1 ] : zp[1]:516 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:517 [ clearline::$2 ] : zp[1]:517 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:518 [ vera_layer_get_color::return#4 ] : zp[1]:518 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:519 [ clearline::color#0 ] : zp[1]:519 , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy_in_vram] 300,000,000,003: zp[2]:20 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] 20,000,000,002: zp[1]:255 [ memcpy_in_vram::$0 ] 20,000,000,002: zp[1]:256 [ memcpy_in_vram::$1 ] 20,000,000,002: zp[1]:257 [ memcpy_in_vram::$3 ] 20,000,000,002: zp[1]:258 [ memcpy_in_vram::$4 ] 20,000,000,002: zp[1]:259 [ memcpy_in_vram::$5 ] 7,250,000,002.75: zp[2]:13 [ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ] 6,611,111,112.22: zp[2]:18 [ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ] 2,766,666,667.63: zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ] 833,333,333.42: zp[1]:17 [ memcpy_in_vram::dest_bank#2 ] 333,333,333.67: zp[2]:511 [ memcpy_in_vram::src#0 ] 
Uplift Scope [bitmap_plot] 3,290,909,101.73: zp[1]:155 [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ] 2,000,000,002: zp[2]:473 [ bitmap_plot::$9 ] 2,000,000,002: zp[2]:481 [ bitmap_plot::$10 ] 2,000,000,002: zp[2]:483 [ bitmap_plot::$13 ] 2,000,000,002: zp[4]:485 [ bitmap_plot::plot_y#0 ] 2,000,000,002: zp[2]:493 [ bitmap_plot::$14 ] 2,000,000,002: zp[1]:496 [ bitmap_plot::vera_vram_address01_$0 ] 2,000,000,002: zp[1]:497 [ bitmap_plot::vera_vram_address01_$1 ] 2,000,000,002: zp[1]:498 [ bitmap_plot::vera_vram_address01_$3 ] 2,000,000,002: zp[2]:499 [ bitmap_plot::$15 ] 2,000,000,002: zp[1]:501 [ bitmap_plot::$6 ] 2,000,000,002: zp[1]:502 [ bitmap_plot::$7 ] 2,000,000,002: zp[1]:503 [ bitmap_plot::$8 ] 1,500,000,001.5: zp[1]:495 [ bitmap_plot::bitshift#0 ] 1,000,000,001: zp[2]:475 [ bitmap_plot::$12 ] 750,000,005.25: zp[2]:153 [ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ] 500,000,000.5: zp[4]:477 [ bitmap_plot::plot_x#0 ] 436,666,669.68: zp[2]:151 [ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ] 363,636,364: zp[4]:489 [ bitmap_plot::vera_vram_address01_bankaddr#0 ] 
Uplift Scope [clearline] 27,500,000,002.75: zp[2]:157 [ clearline::c#2 clearline::c#1 ] 1,683,333,333.67: zp[1]:519 [ clearline::color#0 ] 200,000,002: zp[1]:513 [ clearline::$5 ] 200,000,002: zp[1]:516 [ clearline::$1 ] 200,000,002: zp[1]:517 [ clearline::$2 ] 100,000,001: zp[2]:514 [ clearline::addr#0 ] 
Uplift Scope [vera_layer_get_color] 4,525,002,505: zp[1]:150 [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ] 2,000,000,002: zp[1]:462 [ vera_layer_get_color::$3 ] 2,000,000,002: zp[2]:463 [ vera_layer_get_color::addr#0 ] 2,000,000,002: zp[1]:465 [ vera_layer_get_color::$0 ] 2,000,000,002: zp[1]:466 [ vera_layer_get_color::$1 ] 883,355,005: zp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] 200,000,002: zp[1]:518 [ vera_layer_get_color::return#4 ] 20,002: zp[1]:432 [ vera_layer_get_color::return#0 ] 
Uplift Scope [insertup] 2,400,000,002.4: zp[1]:156 [ insertup::i#2 insertup::i#1 ] 2,000,000,002: zp[1]:506 [ insertup::$3 ] 2,000,000,002: zp[2]:507 [ insertup::line#0 ] 1,000,000,001: zp[2]:509 [ insertup::start#0 ] 84,166,666.83: zp[1]:505 [ insertup::width#0 ] 77,692,307.85: zp[1]:504 [ insertup::cy#0 ] 
Uplift Scope [bitmap_line_xdyi] 466,883,340.17: zp[2]:114 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ] 250,080,504.93: zp[2]:112 [ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ] 200,000,002: zp[2]:452 [ bitmap_line_xdyi::$6 ] 97,586,670.01: zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ] 13,348,001.6: zp[2]:106 [ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ] 6,708,004.2: zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ] 6,694,668.93: zp[2]:103 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ] 6,678,001.2: zp[2]:108 [ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ] 
Uplift Scope [bitmap_line_xdyd] 466,883,340.17: zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ] 250,080,504.93: zp[2]:138 [ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ] 200,000,002: zp[2]:456 [ bitmap_line_xdyd::$6 ] 97,586,670.01: zp[2]:136 [ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ] 13,348,001.6: zp[2]:132 [ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ] 6,708,004.2: zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] 6,694,668.93: zp[2]:129 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ] 6,678,001.2: zp[2]:134 [ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ] 
Uplift Scope [bitmap_line_ydxi] 466,883,340.17: zp[2]:101 [ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ] 250,080,504.93: zp[2]:97 [ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ] 200,000,002: zp[2]:450 [ bitmap_line_ydxi::$6 ] 97,586,670.01: zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ] 13,348,001.6: zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ] 6,708,004.2: zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ] 6,694,668.93: zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ] 6,678,001.2: zp[2]:95 [ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ] 
Uplift Scope [bitmap_line_ydxd] 466,883,340.17: zp[2]:127 [ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ] 250,080,504.93: zp[2]:123 [ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ] 200,000,002: zp[2]:454 [ bitmap_line_ydxd::$6 ] 97,586,670.01: zp[2]:125 [ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ] 13,348,001.6: zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ] 6,708,004.2: zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ] 6,694,668.93: zp[2]:116 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ] 6,678,001.2: zp[2]:121 [ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ] 
Uplift Scope [gotoxy] 20,000,002: zp[2]:250 [ gotoxy::$6 ] 20,000,002: zp[1]:254 [ gotoxy::$5 ] 13,000,029.07: zp[1]:12 [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ] 10,000,001: zp[2]:252 [ gotoxy::line_offset#0 ] 
Uplift Scope [] 44,732,187.53: zp[1]:159 [ conio_screen_width ] 5,206,186.11: zp[1]:166 [ conio_rowshift ] 4,975,627.39: zp[2]:167 [ conio_rowskip ] 1,253,909.94: zp[1]:161 [ conio_screen_layer ] 63,829.93: zp[1]:160 [ conio_screen_height ] 5,720.6: zp[2]:164 [ conio_height ] 3,667.33: zp[2]:460 [ rem16u#0 ] 1,501.5: zp[2]:400 [ rand_state#0 ] 1,501.5: zp[2]:404 [ rand_state#1 ] 1,365.51: zp[2]:64 [ rand_state#13 rand_state#23 rand_state#14 ] 204: zp[1]:173 [ __bitmap_layer ] 113.59: zp[2]:162 [ conio_width ] 80.41: zp[1]:176 [ __bitmap_color_depth ] 58.13: zp[1]:207 [ CONIO_SCREEN_BANK#15 ] 4.06: zp[4]:169 [ __bitmap_address ] 3.91: zp[1]:174 [ __bitmap_hscale ] 2.87: zp[1]:175 [ __bitmap_vscale ] 0.42: zp[2]:211 [ CONIO_SCREEN_TEXT#104 ] 
Uplift Scope [divr16u] 8,753,342.42: zp[2]:142 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ] 3,750,003.75: zp[2]:146 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ] 2,000,002: zp[1]:458 [ divr16u::$1 ] 2,000,002: zp[1]:459 [ divr16u::$2 ] 1,653,847.81: zp[1]:148 [ divr16u::i#2 divr16u::i#1 ] 683,668.15: zp[2]:144 [ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ] 117,706.06: zp[2]:410 [ divr16u::divisor#0 ] 
Uplift Scope [cputln] 200,002: zp[1]:467 [ cputln::$2 ] 200,002: zp[2]:468 [ cputln::temp#0 ] 200,002: zp[1]:472 [ cputln::$3 ] 100,001: zp[2]:470 [ cputln::temp#1 ] 
Uplift Scope [cputc] 20,002: zp[1]:434 [ cputc::$15 ] 20,002: zp[1]:437 [ cputc::$2 ] 20,002: zp[1]:440 [ cputc::$4 ] 20,002: zp[1]:441 [ cputc::$5 ] 20,002: zp[1]:442 [ cputc::$6 ] 20,002: zp[1]:443 [ cputc::scroll_enable#0 ] 20,002: zp[2]:444 [ cputc::$16 ] 10,001: zp[2]:435 [ cputc::conio_addr#0 ] 6,000.6: zp[2]:438 [ cputc::conio_addr#1 ] 1,428.71: zp[1]:433 [ cputc::color#0 ] 1,235.47: zp[1]:295 [ cputc::c#0 ] 
Uplift Scope [mul16u] 35,020.33: zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] 26,433.14: zp[4]:82 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] 20,002: zp[1]:446 [ mul16u::$1 ] 17,202.5: zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 ] 202: zp[4]:365 [ mul16u::return#0 ] 101: zp[2]:363 [ mul16u::b#0 ] 
Uplift Scope [bitmap_init] 10,778.18: zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] 7,219.1: zp[1]:47 [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ] 2,102.1: zp[2]:49 [ bitmap_init::y#2 bitmap_init::y#1 ] 2,002: zp[2]:310 [ bitmap_init::$23 ] 2,002: zp[2]:312 [ bitmap_init::$29 ] 2,002: zp[2]:314 [ bitmap_init::$30 ] 2,002: zp[2]:316 [ bitmap_init::$31 ] 2,002: zp[2]:320 [ bitmap_init::$24 ] 2,002: zp[2]:322 [ bitmap_init::$32 ] 2,002: zp[2]:324 [ bitmap_init::$33 ] 2,002: zp[2]:326 [ bitmap_init::$34 ] 2,002: zp[2]:330 [ bitmap_init::$25 ] 2,002: zp[2]:332 [ bitmap_init::$35 ] 2,002: zp[2]:334 [ bitmap_init::$36 ] 2,002: zp[2]:336 [ bitmap_init::$37 ] 2,002: zp[2]:338 [ bitmap_init::$26 ] 2,002: zp[2]:340 [ bitmap_init::$38 ] 2,002: zp[2]:342 [ bitmap_init::$39 ] 2,002: zp[2]:344 [ bitmap_init::$40 ] 2,002: zp[2]:351 [ bitmap_init::$28 ] 2,002: zp[2]:353 [ bitmap_init::$41 ] 1,854.79: zp[2]:45 [ bitmap_init::x#10 bitmap_init::x#1 ] 1,645.33: zp[4]:51 [ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ] 667.33: zp[2]:308 [ bitmap_init::$7 ] 667.33: zp[2]:318 [ bitmap_init::$10 ] 667.33: zp[2]:328 [ bitmap_init::$13 ] 202: zp[1]:296 [ bitmap_init::vera_layer_get_color_depth1_layer#0 ] 202: zp[1]:297 [ bitmap_init::vera_layer_get_color_depth1_$1 ] 202: zp[2]:298 [ bitmap_init::vera_layer_get_color_depth1_config#0 ] 202: zp[1]:300 [ bitmap_init::vera_layer_get_color_depth1_$0 ] 202: zp[1]:301 [ bitmap_init::vera_layer_get_color_depth1_return#0 ] 202: zp[1]:302 [ bitmap_init::vera_layer_get_color_depth1_return#1 ] 202: zp[1]:303 [ bitmap_init::$0 ] 202: zp[1]:305 [ bitmap_init::$1 ] 202: zp[1]:307 [ bitmap_init::$2 ] 202: zp[1]:346 [ bitmap_init::$3 ] 202: zp[1]:347 [ bitmap_init::$4 ] 202: zp[1]:348 [ bitmap_init::$27 ] 122.44: zp[2]:349 [ bitmap_init::hdelta#0 ] 
Uplift Scope [vera_layer_set_config] 20,002: zp[1]:424 [ vera_layer_set_config::$0 ] 20,002: zp[2]:425 [ vera_layer_set_config::addr#0 ] 12,003: zp[1]:70 [ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ] 5,669.33: zp[1]:71 [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ] 
Uplift Scope [vera_layer_set_mapbase] 20,002: zp[1]:247 [ vera_layer_set_mapbase::$0 ] 20,002: zp[2]:248 [ vera_layer_set_mapbase::addr#0 ] 12,003: zp[1]:10 [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ] 5,669.33: zp[1]:11 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ] 
Uplift Scope [vera_layer_set_tilebase] 20,002: zp[1]:427 [ vera_layer_set_tilebase::$0 ] 20,002: zp[2]:428 [ vera_layer_set_tilebase::addr#0 ] 12,003: zp[1]:72 [ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ] 5,669.33: zp[1]:73 [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ] 
Uplift Scope [bitmap_line] 6,046.05: zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 ] 6,024.01: zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 ] 5,568.43: zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ] 5,231.67: zp[2]:55 [ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ] 4,444.89: zp[2]:388 [ bitmap_line::yd#2 ] 4,444.89: zp[2]:390 [ bitmap_line::yd#1 ] 4,444.89: zp[2]:394 [ bitmap_line::yd#10 ] 4,444.89: zp[2]:396 [ bitmap_line::yd#11 ] 3,706.04: zp[1]:63 [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ] 3,500.35: zp[2]:386 [ bitmap_line::xd#2 ] 3,500.35: zp[2]:392 [ bitmap_line::xd#1 ] 
Uplift Scope [vera_layer_mode_tile] 10,010: zp[1]:37 [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ] 9,342.67: zp[1]:38 [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ] 2,002: zp[1]:260 [ vera_layer_mode_tile::$14 ] 2,002: zp[1]:264 [ vera_layer_mode_tile::$2 ] 2,002: zp[4]:266 [ vera_layer_mode_tile::mapbase_address#0 ] 2,002: zp[2]:271 [ vera_layer_mode_tile::$6 ] 2,002: zp[1]:273 [ vera_layer_mode_tile::$7 ] 2,002: zp[4]:274 [ vera_layer_mode_tile::tilebase_address#0 ] 2,002: zp[1]:278 [ vera_layer_mode_tile::tilebase#0 ] 2,002: zp[1]:279 [ vera_layer_mode_tile::$13 ] 2,002: zp[1]:280 [ vera_layer_mode_tile::$12 ] 2,002: zp[1]:281 [ vera_layer_mode_tile::$11 ] 1,001: zp[2]:22 [ vera_layer_mode_tile::mapwidth#10 ] 1,001: zp[2]:261 [ vera_layer_mode_tile::$1 ] 1,001: zp[1]:270 [ vera_layer_mode_tile::mapbase#0 ] 273: zp[1]:265 [ vera_layer_mode_tile::$18 ] 263.42: zp[1]:24 [ vera_layer_mode_tile::layer#10 ] 250.25: zp[1]:263 [ vera_layer_mode_tile::$17 ] 190.67: zp[2]:25 [ vera_layer_mode_tile::mapheight#10 ] 111.22: zp[4]:27 [ vera_layer_mode_tile::mapbase_address#10 ] 87.04: zp[4]:31 [ vera_layer_mode_tile::tilebase_address#10 ] 40.04: zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ] 37.07: zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ] 
Uplift Scope [vera_display_get_hscale] 38,370.83: zp[1]:74 [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ] 202: zp[1]:304 [ vera_display_get_hscale::return#2 ] 
Uplift Scope [vera_display_get_vscale] 38,370.83: zp[1]:75 [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ] 202: zp[1]:306 [ vera_display_get_vscale::return#2 ] 
Uplift Scope [clrscr] 27,502.75: zp[1]:42 [ clrscr::c#2 clrscr::c#1 ] 2,202.2: zp[1]:39 [ clrscr::l#2 clrscr::l#1 ] 2,002: zp[1]:291 [ clrscr::$5 ] 2,002: zp[1]:292 [ clrscr::$6 ] 2,002: zp[1]:293 [ clrscr::$7 ] 1,312.58: zp[2]:40 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] 594.24: zp[1]:289 [ clrscr::color#0 ] 202: zp[1]:284 [ clrscr::$0 ] 202: zp[1]:288 [ clrscr::$2 ] 202: zp[1]:290 [ clrscr::$9 ] 40.4: zp[1]:285 [ clrscr::$1 ] 
Uplift Scope [memset_vram] 30,003: zp[4]:86 [ memset_vram::i#2 memset_vram::i#1 ] 2,002: zp[1]:447 [ memset_vram::$0 ] 2,002: zp[1]:448 [ memset_vram::$1 ] 2,002: zp[1]:449 [ memset_vram::$2 ] 841.83: zp[4]:379 [ memset_vram::num#0 ] 420.6: zp[2]:377 [ memset_vram::vdest#0 ] 137.75: zp[1]:376 [ memset_vram::vbank#0 ] 
Uplift Scope [kbhit] 20,002: zp[1]:384 [ kbhit::return#0 ] 10,001: zp[1]:383 [ kbhit::ch ] 2,775.75: zp[1]:385 [ kbhit::return#1 ] 2,002: zp[1]:179 [ kbhit::return#3 ] 202: zp[1]:177 [ kbhit::return#2 ] 
Uplift Scope [rand] 2,002: zp[2]:398 [ rand::$0 ] 2,002: zp[2]:402 [ rand::$1 ] 2,002: zp[2]:406 [ rand::$2 ] 215.14: zp[2]:408 [ rand::return#0 ] 202: zp[2]:181 [ rand::return#2 ] 202: zp[2]:185 [ rand::return#3 ] 202: zp[2]:189 [ rand::return#10 ] 202: zp[2]:193 [ rand::return#11 ] 202: zp[2]:197 [ rand::return#12 ] 
Uplift Scope [main] 2,002: zp[1]:180 [ main::$43 ] 1,011.4: zp[2]:3 [ main::x#3 main::x#1 ] 870.64: zp[1]:5 [ main::color#2 main::color#1 ] 202: zp[1]:178 [ main::$30 ] 202: zp[2]:199 [ main::$40 ] 
Uplift Scope [screenlayer] 202: zp[1]:213 [ screenlayer::vera_layer_get_width1_layer#0 ] 202: zp[1]:214 [ screenlayer::vera_layer_get_width1_$2 ] 202: zp[2]:215 [ screenlayer::vera_layer_get_width1_config#0 ] 202: zp[1]:217 [ screenlayer::vera_layer_get_width1_$0 ] 202: zp[1]:218 [ screenlayer::vera_layer_get_width1_$1 ] 202: zp[1]:219 [ screenlayer::vera_layer_get_width1_$3 ] 202: zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 ] 202: zp[2]:222 [ screenlayer::vera_layer_get_width1_return#1 ] 202: zp[2]:224 [ screenlayer::$2 ] 202: zp[1]:228 [ screenlayer::$3 ] 202: zp[2]:232 [ screenlayer::$4 ] 202: zp[1]:234 [ screenlayer::vera_layer_get_height1_layer#0 ] 202: zp[1]:235 [ screenlayer::vera_layer_get_height1_$2 ] 202: zp[2]:236 [ screenlayer::vera_layer_get_height1_config#0 ] 202: zp[1]:238 [ screenlayer::vera_layer_get_height1_$0 ] 202: zp[1]:239 [ screenlayer::vera_layer_get_height1_$1 ] 202: zp[1]:240 [ screenlayer::vera_layer_get_height1_$3 ] 202: zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 ] 202: zp[2]:243 [ screenlayer::vera_layer_get_height1_return#1 ] 202: zp[2]:245 [ screenlayer::$5 ] 
Uplift Scope [modr16u] 2,213: zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ] 500.5: zp[2]:68 [ modr16u::divisor#4 ] 234.17: zp[2]:412 [ modr16u::return#0 ] 202: zp[2]:183 [ modr16u::return#2 ] 202: zp[2]:187 [ modr16u::return#3 ] 202: zp[2]:191 [ modr16u::return#4 ] 202: zp[2]:195 [ modr16u::return#10 ] 
Uplift Scope [vera_layer_get_mapbase_offset] 2,002: zp[1]:417 [ vera_layer_get_mapbase_offset::$0 ] 1,102: zp[1]:208 [ vera_layer_get_mapbase_offset::layer#0 ] 367.33: zp[2]:418 [ vera_layer_get_mapbase_offset::return#0 ] 202: zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 ] 
Uplift Scope [vera_layer_get_rowskip] 2,002: zp[1]:421 [ vera_layer_get_rowskip::$0 ] 1,102: zp[1]:229 [ vera_layer_get_rowskip::layer#0 ] 367.33: zp[2]:422 [ vera_layer_get_rowskip::return#0 ] 202: zp[2]:230 [ vera_layer_get_rowskip::return#2 ] 
Uplift Scope [cputs] 2,153.5: zp[2]:43 [ cputs::s#8 cputs::s#9 cputs::s#0 ] 1,001: zp[1]:294 [ cputs::c#1 ] 
Uplift Scope [vera_layer_set_text_color_mode] 2,502.5: zp[2]:414 [ vera_layer_set_text_color_mode::addr#0 ] 
Uplift Scope [vera_layer_get_mapbase_bank] 1,102: zp[1]:205 [ vera_layer_get_mapbase_bank::layer#0 ] 367.33: zp[1]:416 [ vera_layer_get_mapbase_bank::return#0 ] 202: zp[1]:206 [ vera_layer_get_mapbase_bank::return#2 ] 
Uplift Scope [vera_layer_get_textcolor] 1,102: zp[1]:286 [ vera_layer_get_textcolor::layer#0 ] 367.33: zp[1]:431 [ vera_layer_get_textcolor::return#1 ] 202: zp[1]:287 [ vera_layer_get_textcolor::return#0 ] 
Uplift Scope [vera_layer_get_backcolor] 1,102: zp[1]:282 [ vera_layer_get_backcolor::layer#0 ] 367.33: zp[1]:430 [ vera_layer_get_backcolor::return#1 ] 202: zp[1]:283 [ vera_layer_get_backcolor::return#0 ] 
Uplift Scope [vera_layer_get_rowshift] 1,102: zp[1]:226 [ vera_layer_get_rowshift::layer#0 ] 367.33: zp[1]:420 [ vera_layer_get_rowshift::return#0 ] 202: zp[1]:227 [ vera_layer_get_rowshift::return#2 ] 
Uplift Scope [bitmap_clear] 202: zp[1]:355 [ bitmap_clear::$6 ] 202: zp[1]:358 [ bitmap_clear::$0 ] 202: zp[1]:359 [ bitmap_clear::$1 ] 202: zp[1]:360 [ bitmap_clear::$7 ] 202: zp[2]:361 [ bitmap_clear::hdelta#0 ] 101: zp[1]:373 [ bitmap_clear::vbank#0 ] 50.5: zp[2]:374 [ bitmap_clear::vdest#0 ] 40.4: zp[4]:369 [ bitmap_clear::count#0 ] 33.67: zp[2]:356 [ bitmap_clear::vdelta#0 ] 
Uplift Scope [screensize] 202: zp[1]:201 [ screensize::hscale#0 ] 202: zp[1]:202 [ screensize::$1 ] 202: zp[1]:203 [ screensize::vscale#0 ] 202: zp[1]:204 [ screensize::$3 ] 
Uplift Scope [vera_layer_set_textcolor] 266: zp[1]:6 [ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ] 101: zp[1]:7 [ vera_layer_set_textcolor::color#6 ] 
Uplift Scope [vera_layer_set_backcolor] 200: zp[1]:8 [ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ] 101: zp[1]:9 [ vera_layer_set_backcolor::color#4 ] 
Uplift Scope [conio_x16_init] 57.2: zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] 
Uplift Scope [VERA_SPRITE] 
Uplift Scope [MOS6522_VIA] 
Uplift Scope [vera_layer_mode_text] 
Uplift Scope [vera_layer_mode_bitmap] 
Uplift Scope [cscroll] 
Uplift Scope [RADIX] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_format_string] 
Uplift Scope [__start] 

Uplifting [memcpy_in_vram] best 729661 combination zp[2]:20 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] reg byte a [ memcpy_in_vram::$0 ] reg byte a [ memcpy_in_vram::$1 ] reg byte a [ memcpy_in_vram::$3 ] reg byte a [ memcpy_in_vram::$4 ] zp[1]:259 [ memcpy_in_vram::$5 ] zp[2]:13 [ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ] zp[2]:18 [ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ] zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ] zp[1]:17 [ memcpy_in_vram::dest_bank#2 ] zp[2]:511 [ memcpy_in_vram::src#0 ] 
Limited combination testing to 100 combinations of 3072 possible.
Uplifting [bitmap_plot] best 717640 combination reg byte x [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ] zp[2]:473 [ bitmap_plot::$9 ] zp[2]:481 [ bitmap_plot::$10 ] zp[2]:483 [ bitmap_plot::$13 ] zp[4]:485 [ bitmap_plot::plot_y#0 ] zp[2]:493 [ bitmap_plot::$14 ] reg byte a [ bitmap_plot::vera_vram_address01_$0 ] reg byte a [ bitmap_plot::vera_vram_address01_$1 ] reg byte a [ bitmap_plot::vera_vram_address01_$3 ] zp[2]:499 [ bitmap_plot::$15 ] zp[1]:501 [ bitmap_plot::$6 ] zp[1]:502 [ bitmap_plot::$7 ] zp[1]:503 [ bitmap_plot::$8 ] zp[1]:495 [ bitmap_plot::bitshift#0 ] zp[2]:475 [ bitmap_plot::$12 ] zp[2]:153 [ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ] zp[4]:477 [ bitmap_plot::plot_x#0 ] zp[2]:151 [ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ] zp[4]:489 [ bitmap_plot::vera_vram_address01_bankaddr#0 ] 
Limited combination testing to 100 combinations of 32768 possible.
Uplifting [clearline] best 717321 combination zp[2]:157 [ clearline::c#2 clearline::c#1 ] reg byte x [ clearline::color#0 ] reg byte a [ clearline::$5 ] reg byte a [ clearline::$1 ] reg byte a [ clearline::$2 ] zp[2]:514 [ clearline::addr#0 ] 
Limited combination testing to 100 combinations of 192 possible.
Uplifting [vera_layer_get_color] best 717295 combination reg byte a [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ] reg byte a [ vera_layer_get_color::$3 ] zp[2]:463 [ vera_layer_get_color::addr#0 ] reg byte a [ vera_layer_get_color::$0 ] reg byte a [ vera_layer_get_color::$1 ] zp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] zp[1]:518 [ vera_layer_get_color::return#4 ] zp[1]:432 [ vera_layer_get_color::return#0 ] 
Limited combination testing to 100 combinations of 8192 possible.
Uplifting [insertup] best 716495 combination reg byte x [ insertup::i#2 insertup::i#1 ] reg byte a [ insertup::$3 ] zp[2]:507 [ insertup::line#0 ] zp[2]:509 [ insertup::start#0 ] zp[1]:505 [ insertup::width#0 ] zp[1]:504 [ insertup::cy#0 ] 
Uplifting [bitmap_line_xdyi] best 716495 combination zp[2]:114 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ] zp[2]:112 [ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ] zp[2]:452 [ bitmap_line_xdyi::$6 ] zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ] zp[2]:106 [ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ] zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ] zp[2]:103 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ] zp[2]:108 [ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ] 
Uplifting [bitmap_line_xdyd] best 716495 combination zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ] zp[2]:138 [ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ] zp[2]:456 [ bitmap_line_xdyd::$6 ] zp[2]:136 [ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ] zp[2]:132 [ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ] zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] zp[2]:129 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ] zp[2]:134 [ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ] 
Uplifting [bitmap_line_ydxi] best 716495 combination zp[2]:101 [ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ] zp[2]:97 [ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ] zp[2]:450 [ bitmap_line_ydxi::$6 ] zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ] zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ] zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ] zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ] zp[2]:95 [ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ] 
Uplifting [bitmap_line_ydxd] best 716495 combination zp[2]:127 [ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ] zp[2]:123 [ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ] zp[2]:454 [ bitmap_line_ydxd::$6 ] zp[2]:125 [ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ] zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ] zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ] zp[2]:116 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ] zp[2]:121 [ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ] 
Uplifting [gotoxy] best 716471 combination zp[2]:250 [ gotoxy::$6 ] reg byte a [ gotoxy::$5 ] reg byte x [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ] zp[2]:252 [ gotoxy::line_offset#0 ] 
Uplifting [] best 716471 combination zp[1]:159 [ conio_screen_width ] zp[1]:166 [ conio_rowshift ] zp[2]:167 [ conio_rowskip ] zp[1]:161 [ conio_screen_layer ] zp[1]:160 [ conio_screen_height ] zp[2]:164 [ conio_height ] zp[2]:460 [ rem16u#0 ] zp[2]:400 [ rand_state#0 ] zp[2]:404 [ rand_state#1 ] zp[2]:64 [ rand_state#13 rand_state#23 rand_state#14 ] zp[1]:173 [ __bitmap_layer ] zp[2]:162 [ conio_width ] zp[1]:176 [ __bitmap_color_depth ] zp[1]:207 [ CONIO_SCREEN_BANK#15 ] zp[4]:169 [ __bitmap_address ] zp[1]:174 [ __bitmap_hscale ] zp[1]:175 [ __bitmap_vscale ] zp[2]:211 [ CONIO_SCREEN_TEXT#104 ] 
Uplifting [divr16u] best 714571 combination zp[2]:142 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ] zp[2]:146 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ] reg byte a [ divr16u::$1 ] reg byte a [ divr16u::$2 ] reg byte x [ divr16u::i#2 divr16u::i#1 ] zp[2]:144 [ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ] zp[2]:410 [ divr16u::divisor#0 ] 
Uplifting [cputln] best 714563 combination reg byte a [ cputln::$2 ] zp[2]:468 [ cputln::temp#0 ] reg byte a [ cputln::$3 ] zp[2]:470 [ cputln::temp#1 ] 
Uplifting [cputc] best 714541 combination reg byte a [ cputc::$15 ] reg byte a [ cputc::$2 ] reg byte a [ cputc::$4 ] reg byte a [ cputc::$5 ] zp[1]:442 [ cputc::$6 ] zp[1]:443 [ cputc::scroll_enable#0 ] zp[2]:444 [ cputc::$16 ] zp[2]:435 [ cputc::conio_addr#0 ] zp[2]:438 [ cputc::conio_addr#1 ] zp[1]:433 [ cputc::color#0 ] zp[1]:295 [ cputc::c#0 ] 
Limited combination testing to 100 combinations of 24576 possible.
Uplifting [mul16u] best 714501 combination zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] zp[4]:82 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] reg byte a [ mul16u::$1 ] zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 ] zp[4]:365 [ mul16u::return#0 ] zp[2]:363 [ mul16u::b#0 ] 
Uplifting [bitmap_init] best 714272 combination zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] reg byte x [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ] zp[2]:49 [ bitmap_init::y#2 bitmap_init::y#1 ] zp[2]:310 [ bitmap_init::$23 ] zp[2]:312 [ bitmap_init::$29 ] zp[2]:314 [ bitmap_init::$30 ] zp[2]:316 [ bitmap_init::$31 ] zp[2]:320 [ bitmap_init::$24 ] zp[2]:322 [ bitmap_init::$32 ] zp[2]:324 [ bitmap_init::$33 ] zp[2]:326 [ bitmap_init::$34 ] zp[2]:330 [ bitmap_init::$25 ] zp[2]:332 [ bitmap_init::$35 ] zp[2]:334 [ bitmap_init::$36 ] zp[2]:336 [ bitmap_init::$37 ] zp[2]:338 [ bitmap_init::$26 ] zp[2]:340 [ bitmap_init::$38 ] zp[2]:342 [ bitmap_init::$39 ] zp[2]:344 [ bitmap_init::$40 ] zp[2]:351 [ bitmap_init::$28 ] zp[2]:353 [ bitmap_init::$41 ] zp[2]:45 [ bitmap_init::x#10 bitmap_init::x#1 ] zp[4]:51 [ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ] zp[2]:308 [ bitmap_init::$7 ] zp[2]:318 [ bitmap_init::$10 ] zp[2]:328 [ bitmap_init::$13 ] reg byte a [ bitmap_init::vera_layer_get_color_depth1_layer#0 ] reg byte a [ bitmap_init::vera_layer_get_color_depth1_$1 ] zp[2]:298 [ bitmap_init::vera_layer_get_color_depth1_config#0 ] reg byte a [ bitmap_init::vera_layer_get_color_depth1_$0 ] zp[1]:301 [ bitmap_init::vera_layer_get_color_depth1_return#0 ] zp[1]:302 [ bitmap_init::vera_layer_get_color_depth1_return#1 ] zp[1]:303 [ bitmap_init::$0 ] zp[1]:305 [ bitmap_init::$1 ] zp[1]:307 [ bitmap_init::$2 ] zp[1]:346 [ bitmap_init::$3 ] zp[1]:347 [ bitmap_init::$4 ] zp[1]:348 [ bitmap_init::$27 ] zp[2]:349 [ bitmap_init::hdelta#0 ] 
Limited combination testing to 100 combinations of 16777216 possible.
Uplifting [vera_layer_set_config] best 714252 combination reg byte a [ vera_layer_set_config::$0 ] zp[2]:425 [ vera_layer_set_config::addr#0 ] reg byte a [ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ] reg byte x [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ] 
Uplifting [vera_layer_set_mapbase] best 714226 combination reg byte a [ vera_layer_set_mapbase::$0 ] zp[2]:248 [ vera_layer_set_mapbase::addr#0 ] reg byte a [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ] reg byte x [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ] 
Uplifting [vera_layer_set_tilebase] best 714206 combination reg byte a [ vera_layer_set_tilebase::$0 ] zp[2]:428 [ vera_layer_set_tilebase::addr#0 ] reg byte a [ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ] reg byte x [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ] 
Uplifting [bitmap_line] best 713872 combination zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 ] zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 ] zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ] zp[2]:55 [ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ] zp[2]:388 [ bitmap_line::yd#2 ] zp[2]:390 [ bitmap_line::yd#1 ] zp[2]:394 [ bitmap_line::yd#10 ] zp[2]:396 [ bitmap_line::yd#11 ] reg byte x [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ] zp[2]:386 [ bitmap_line::xd#2 ] zp[2]:392 [ bitmap_line::xd#1 ] 
Uplifting [vera_layer_mode_tile] best 713833 combination reg byte x [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ] reg byte x [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ] reg byte a [ vera_layer_mode_tile::$14 ] reg byte a [ vera_layer_mode_tile::$2 ] zp[4]:266 [ vera_layer_mode_tile::mapbase_address#0 ] zp[2]:271 [ vera_layer_mode_tile::$6 ] zp[1]:273 [ vera_layer_mode_tile::$7 ] zp[4]:274 [ vera_layer_mode_tile::tilebase_address#0 ] zp[1]:278 [ vera_layer_mode_tile::tilebase#0 ] zp[1]:279 [ vera_layer_mode_tile::$13 ] zp[1]:280 [ vera_layer_mode_tile::$12 ] zp[1]:281 [ vera_layer_mode_tile::$11 ] zp[2]:22 [ vera_layer_mode_tile::mapwidth#10 ] zp[2]:261 [ vera_layer_mode_tile::$1 ] zp[1]:270 [ vera_layer_mode_tile::mapbase#0 ] zp[1]:265 [ vera_layer_mode_tile::$18 ] zp[1]:24 [ vera_layer_mode_tile::layer#10 ] zp[1]:263 [ vera_layer_mode_tile::$17 ] zp[2]:25 [ vera_layer_mode_tile::mapheight#10 ] zp[4]:27 [ vera_layer_mode_tile::mapbase_address#10 ] zp[4]:31 [ vera_layer_mode_tile::tilebase_address#10 ] zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ] zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ] 
Limited combination testing to 100 combinations of 25165824 possible.
Uplifting [vera_display_get_hscale] best 713701 combination reg byte x [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ] reg byte x [ vera_display_get_hscale::return#2 ] 
Uplifting [vera_display_get_vscale] best 713569 combination reg byte x [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ] reg byte x [ vera_display_get_vscale::return#2 ] 
Uplifting [clrscr] best 712459 combination reg byte y [ clrscr::c#2 clrscr::c#1 ] reg byte x [ clrscr::l#2 clrscr::l#1 ] reg byte a [ clrscr::$5 ] reg byte a [ clrscr::$6 ] zp[1]:293 [ clrscr::$7 ] zp[2]:40 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] zp[1]:289 [ clrscr::color#0 ] zp[1]:284 [ clrscr::$0 ] zp[1]:288 [ clrscr::$2 ] zp[1]:290 [ clrscr::$9 ] zp[1]:285 [ clrscr::$1 ] 
Limited combination testing to 100 combinations of 442368 possible.
Uplifting [memset_vram] best 712437 combination zp[4]:86 [ memset_vram::i#2 memset_vram::i#1 ] reg byte a [ memset_vram::$0 ] reg byte a [ memset_vram::$1 ] reg byte a [ memset_vram::$2 ] zp[4]:379 [ memset_vram::num#0 ] zp[2]:377 [ memset_vram::vdest#0 ] reg byte x [ memset_vram::vbank#0 ] 
Limited combination testing to 100 combinations of 192 possible.
Uplifting [kbhit] best 711438 combination reg byte a [ kbhit::return#0 ] zp[1]:383 [ kbhit::ch ] reg byte a [ kbhit::return#1 ] reg byte a [ kbhit::return#3 ] reg byte a [ kbhit::return#2 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [rand] best 711438 combination zp[2]:398 [ rand::$0 ] zp[2]:402 [ rand::$1 ] zp[2]:406 [ rand::$2 ] zp[2]:408 [ rand::return#0 ] zp[2]:181 [ rand::return#2 ] zp[2]:185 [ rand::return#3 ] zp[2]:189 [ rand::return#10 ] zp[2]:193 [ rand::return#11 ] zp[2]:197 [ rand::return#12 ] 
Uplifting [main] best 710998 combination reg byte a [ main::$43 ] zp[2]:3 [ main::x#3 main::x#1 ] zp[1]:5 [ main::color#2 main::color#1 ] reg byte a [ main::$30 ] zp[2]:199 [ main::$40 ] 
Uplifting [screenlayer] best 710976 combination reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ] reg byte a [ screenlayer::vera_layer_get_width1_$2 ] zp[2]:215 [ screenlayer::vera_layer_get_width1_config#0 ] reg byte a [ screenlayer::vera_layer_get_width1_$0 ] reg byte a [ screenlayer::vera_layer_get_width1_$1 ] zp[1]:219 [ screenlayer::vera_layer_get_width1_$3 ] zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 ] zp[2]:222 [ screenlayer::vera_layer_get_width1_return#1 ] zp[2]:224 [ screenlayer::$2 ] zp[1]:228 [ screenlayer::$3 ] zp[2]:232 [ screenlayer::$4 ] zp[1]:234 [ screenlayer::vera_layer_get_height1_layer#0 ] zp[1]:235 [ screenlayer::vera_layer_get_height1_$2 ] zp[2]:236 [ screenlayer::vera_layer_get_height1_config#0 ] zp[1]:238 [ screenlayer::vera_layer_get_height1_$0 ] zp[1]:239 [ screenlayer::vera_layer_get_height1_$1 ] zp[1]:240 [ screenlayer::vera_layer_get_height1_$3 ] zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 ] zp[2]:243 [ screenlayer::vera_layer_get_height1_return#1 ] zp[2]:245 [ screenlayer::$5 ] 
Limited combination testing to 100 combinations of 4194304 possible.
Uplifting [modr16u] best 710976 combination zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ] zp[2]:68 [ modr16u::divisor#4 ] zp[2]:412 [ modr16u::return#0 ] zp[2]:183 [ modr16u::return#2 ] zp[2]:187 [ modr16u::return#3 ] zp[2]:191 [ modr16u::return#4 ] zp[2]:195 [ modr16u::return#10 ] 
Uplifting [vera_layer_get_mapbase_offset] best 710966 combination reg byte a [ vera_layer_get_mapbase_offset::$0 ] reg byte a [ vera_layer_get_mapbase_offset::layer#0 ] zp[2]:418 [ vera_layer_get_mapbase_offset::return#0 ] zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 ] 
Uplifting [vera_layer_get_rowskip] best 710956 combination reg byte a [ vera_layer_get_rowskip::$0 ] reg byte a [ vera_layer_get_rowskip::layer#0 ] zp[2]:422 [ vera_layer_get_rowskip::return#0 ] zp[2]:230 [ vera_layer_get_rowskip::return#2 ] 
Uplifting [cputs] best 710886 combination zp[2]:43 [ cputs::s#8 cputs::s#9 cputs::s#0 ] reg byte a [ cputs::c#1 ] 
Uplifting [vera_layer_set_text_color_mode] best 710886 combination zp[2]:414 [ vera_layer_set_text_color_mode::addr#0 ] 
Uplifting [vera_layer_get_mapbase_bank] best 710868 combination reg byte x [ vera_layer_get_mapbase_bank::layer#0 ] reg byte a [ vera_layer_get_mapbase_bank::return#0 ] reg byte a [ vera_layer_get_mapbase_bank::return#2 ] 
Uplifting [vera_layer_get_textcolor] best 710850 combination reg byte x [ vera_layer_get_textcolor::layer#0 ] reg byte a [ vera_layer_get_textcolor::return#1 ] reg byte a [ vera_layer_get_textcolor::return#0 ] 
Uplifting [vera_layer_get_backcolor] best 710832 combination reg byte x [ vera_layer_get_backcolor::layer#0 ] reg byte a [ vera_layer_get_backcolor::return#1 ] reg byte a [ vera_layer_get_backcolor::return#0 ] 
Uplifting [vera_layer_get_rowshift] best 710814 combination reg byte x [ vera_layer_get_rowshift::layer#0 ] reg byte a [ vera_layer_get_rowshift::return#0 ] reg byte a [ vera_layer_get_rowshift::return#2 ] 
Uplifting [bitmap_clear] best 710794 combination reg byte a [ bitmap_clear::$6 ] reg byte a [ bitmap_clear::$0 ] reg byte a [ bitmap_clear::$1 ] reg byte a [ bitmap_clear::$7 ] zp[2]:361 [ bitmap_clear::hdelta#0 ] zp[1]:373 [ bitmap_clear::vbank#0 ] zp[2]:374 [ bitmap_clear::vdest#0 ] zp[4]:369 [ bitmap_clear::count#0 ] zp[2]:356 [ bitmap_clear::vdelta#0 ] 
Limited combination testing to 100 combinations of 768 possible.
Uplifting [screensize] best 710774 combination reg byte a [ screensize::hscale#0 ] reg byte a [ screensize::$1 ] reg byte a [ screensize::vscale#0 ] reg byte a [ screensize::$3 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [vera_layer_set_textcolor] best 710732 combination reg byte x [ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ] reg byte a [ vera_layer_set_textcolor::color#6 ] 
Uplifting [vera_layer_set_backcolor] best 710702 combination reg byte x [ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ] reg byte a [ vera_layer_set_backcolor::color#4 ] 
Uplifting [conio_x16_init] best 710702 combination zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] 
Uplifting [VERA_SPRITE] best 710702 combination 
Uplifting [MOS6522_VIA] best 710702 combination 
Uplifting [vera_layer_mode_text] best 710702 combination 
Uplifting [vera_layer_mode_bitmap] best 710702 combination 
Uplifting [cscroll] best 710702 combination 
Uplifting [RADIX] best 710702 combination 
Uplifting [printf_format_number] best 710702 combination 
Uplifting [printf_buffer_number] best 710702 combination 
Uplifting [printf_format_string] best 710702 combination 
Uplifting [__start] best 710702 combination 
Attempting to uplift remaining variables inzp[1]:259 [ memcpy_in_vram::$5 ]
Uplifting [memcpy_in_vram] best 710696 combination reg byte a [ memcpy_in_vram::$5 ] 
Attempting to uplift remaining variables inzp[1]:501 [ bitmap_plot::$6 ]
Uplifting [bitmap_plot] best 710690 combination reg byte a [ bitmap_plot::$6 ] 
Attempting to uplift remaining variables inzp[1]:502 [ bitmap_plot::$7 ]
Uplifting [bitmap_plot] best 710688 combination reg byte a [ bitmap_plot::$7 ] 
Attempting to uplift remaining variables inzp[1]:503 [ bitmap_plot::$8 ]
Uplifting [bitmap_plot] best 710682 combination reg byte a [ bitmap_plot::$8 ] 
Attempting to uplift remaining variables inzp[1]:495 [ bitmap_plot::bitshift#0 ]
Uplifting [bitmap_plot] best 710677 combination reg byte a [ bitmap_plot::bitshift#0 ] 
Attempting to uplift remaining variables inzp[1]:149 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Uplifting [vera_layer_get_color] best 710661 combination reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] 
Attempting to uplift remaining variables inzp[1]:17 [ memcpy_in_vram::dest_bank#2 ]
Uplifting [memcpy_in_vram] best 710654 combination reg byte y [ memcpy_in_vram::dest_bank#2 ] 
Attempting to uplift remaining variables inzp[1]:518 [ vera_layer_get_color::return#4 ]
Uplifting [vera_layer_get_color] best 710650 combination reg byte a [ vera_layer_get_color::return#4 ] 
Attempting to uplift remaining variables inzp[1]:505 [ insertup::width#0 ]
Uplifting [insertup] best 710650 combination zp[1]:505 [ insertup::width#0 ] 
Attempting to uplift remaining variables inzp[1]:504 [ insertup::cy#0 ]
Uplifting [insertup] best 710650 combination zp[1]:504 [ insertup::cy#0 ] 
Attempting to uplift remaining variables inzp[1]:159 [ conio_screen_width ]
Uplifting [] best 710650 combination zp[1]:159 [ conio_screen_width ] 
Attempting to uplift remaining variables inzp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ]
Uplifting [bitmap_line_ydxi] best 710650 combination zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ] 
Attempting to uplift remaining variables inzp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ]
Uplifting [bitmap_line_xdyi] best 710650 combination zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ] 
Attempting to uplift remaining variables inzp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ]
Uplifting [bitmap_line_ydxd] best 710650 combination zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ] 
Attempting to uplift remaining variables inzp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ]
Uplifting [bitmap_line_xdyd] best 710650 combination zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] 
Attempting to uplift remaining variables inzp[1]:166 [ conio_rowshift ]
Uplifting [] best 710650 combination zp[1]:166 [ conio_rowshift ] 
Attempting to uplift remaining variables inzp[1]:161 [ conio_screen_layer ]
Uplifting [] best 710650 combination zp[1]:161 [ conio_screen_layer ] 
Attempting to uplift remaining variables inzp[1]:160 [ conio_screen_height ]
Uplifting [] best 710650 combination zp[1]:160 [ conio_screen_height ] 
Attempting to uplift remaining variables inzp[1]:432 [ vera_layer_get_color::return#0 ]
Uplifting [vera_layer_get_color] best 710644 combination reg byte a [ vera_layer_get_color::return#0 ] 
Attempting to uplift remaining variables inzp[1]:442 [ cputc::$6 ]
Uplifting [cputc] best 710638 combination reg byte a [ cputc::$6 ] 
Attempting to uplift remaining variables inzp[1]:443 [ cputc::scroll_enable#0 ]
Uplifting [cputc] best 710634 combination reg byte a [ cputc::scroll_enable#0 ] 
Attempting to uplift remaining variables inzp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
Uplifting [bitmap_init] best 710634 combination zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] 
Attempting to uplift remaining variables inzp[1]:383 [ kbhit::ch ]
Uplifting [kbhit] best 710634 combination zp[1]:383 [ kbhit::ch ] 
Attempting to uplift remaining variables inzp[1]:273 [ vera_layer_mode_tile::$7 ]
Uplifting [vera_layer_mode_tile] best 710628 combination reg byte a [ vera_layer_mode_tile::$7 ] 
Attempting to uplift remaining variables inzp[1]:278 [ vera_layer_mode_tile::tilebase#0 ]
Uplifting [vera_layer_mode_tile] best 710622 combination reg byte a [ vera_layer_mode_tile::tilebase#0 ] 
Attempting to uplift remaining variables inzp[1]:279 [ vera_layer_mode_tile::$13 ]
Uplifting [vera_layer_mode_tile] best 710618 combination reg byte a [ vera_layer_mode_tile::$13 ] 
Attempting to uplift remaining variables inzp[1]:280 [ vera_layer_mode_tile::$12 ]
Uplifting [vera_layer_mode_tile] best 710614 combination reg byte a [ vera_layer_mode_tile::$12 ] 
Attempting to uplift remaining variables inzp[1]:281 [ vera_layer_mode_tile::$11 ]
Uplifting [vera_layer_mode_tile] best 710610 combination reg byte a [ vera_layer_mode_tile::$11 ] 
Attempting to uplift remaining variables inzp[1]:293 [ clrscr::$7 ]
Uplifting [clrscr] best 710550 combination reg byte a [ clrscr::$7 ] 
Attempting to uplift remaining variables inzp[1]:433 [ cputc::color#0 ]
Uplifting [cputc] best 710546 combination reg byte x [ cputc::color#0 ] 
Attempting to uplift remaining variables inzp[1]:295 [ cputc::c#0 ]
Uplifting [cputc] best 710546 combination zp[1]:295 [ cputc::c#0 ] 
Attempting to uplift remaining variables inzp[1]:270 [ vera_layer_mode_tile::mapbase#0 ]
Uplifting [vera_layer_mode_tile] best 710540 combination reg byte x [ vera_layer_mode_tile::mapbase#0 ] 
Attempting to uplift remaining variables inzp[1]:5 [ main::color#2 main::color#1 ]
Uplifting [main] best 710540 combination zp[1]:5 [ main::color#2 main::color#1 ] 
Attempting to uplift remaining variables inzp[1]:289 [ clrscr::color#0 ]
Uplifting [clrscr] best 710540 combination zp[1]:289 [ clrscr::color#0 ] 
Attempting to uplift remaining variables inzp[1]:265 [ vera_layer_mode_tile::$18 ]
Uplifting [vera_layer_mode_tile] best 710540 combination zp[1]:265 [ vera_layer_mode_tile::$18 ] 
Attempting to uplift remaining variables inzp[1]:24 [ vera_layer_mode_tile::layer#10 ]
Uplifting [vera_layer_mode_tile] best 710540 combination zp[1]:24 [ vera_layer_mode_tile::layer#10 ] 
Attempting to uplift remaining variables inzp[1]:263 [ vera_layer_mode_tile::$17 ]
Uplifting [vera_layer_mode_tile] best 710540 combination zp[1]:263 [ vera_layer_mode_tile::$17 ] 
Attempting to uplift remaining variables inzp[1]:173 [ __bitmap_layer ]
Uplifting [] best 710540 combination zp[1]:173 [ __bitmap_layer ] 
Attempting to uplift remaining variables inzp[1]:219 [ screenlayer::vera_layer_get_width1_$3 ]
Uplifting [screenlayer] best 710536 combination reg byte a [ screenlayer::vera_layer_get_width1_$3 ] 
Attempting to uplift remaining variables inzp[1]:228 [ screenlayer::$3 ]
Uplifting [screenlayer] best 710530 combination reg byte a [ screenlayer::$3 ] 
Attempting to uplift remaining variables inzp[1]:234 [ screenlayer::vera_layer_get_height1_layer#0 ]
Uplifting [screenlayer] best 710524 combination reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ] 
Attempting to uplift remaining variables inzp[1]:235 [ screenlayer::vera_layer_get_height1_$2 ]
Uplifting [screenlayer] best 710520 combination reg byte a [ screenlayer::vera_layer_get_height1_$2 ] 
Attempting to uplift remaining variables inzp[1]:238 [ screenlayer::vera_layer_get_height1_$0 ]
Uplifting [screenlayer] best 710514 combination reg byte a [ screenlayer::vera_layer_get_height1_$0 ] 
Attempting to uplift remaining variables inzp[1]:239 [ screenlayer::vera_layer_get_height1_$1 ]
Uplifting [screenlayer] best 710508 combination reg byte a [ screenlayer::vera_layer_get_height1_$1 ] 
Attempting to uplift remaining variables inzp[1]:240 [ screenlayer::vera_layer_get_height1_$3 ]
Uplifting [screenlayer] best 710504 combination reg byte a [ screenlayer::vera_layer_get_height1_$3 ] 
Attempting to uplift remaining variables inzp[1]:284 [ clrscr::$0 ]
Uplifting [clrscr] best 710498 combination reg byte a [ clrscr::$0 ] 
Attempting to uplift remaining variables inzp[1]:288 [ clrscr::$2 ]
Uplifting [clrscr] best 710492 combination reg byte a [ clrscr::$2 ] 
Attempting to uplift remaining variables inzp[1]:290 [ clrscr::$9 ]
Uplifting [clrscr] best 710488 combination reg byte a [ clrscr::$9 ] 
Attempting to uplift remaining variables inzp[1]:301 [ bitmap_init::vera_layer_get_color_depth1_return#0 ]
Uplifting [bitmap_init] best 710482 combination reg byte a [ bitmap_init::vera_layer_get_color_depth1_return#0 ] 
Attempting to uplift remaining variables inzp[1]:302 [ bitmap_init::vera_layer_get_color_depth1_return#1 ]
Uplifting [bitmap_init] best 710476 combination reg byte a [ bitmap_init::vera_layer_get_color_depth1_return#1 ] 
Attempting to uplift remaining variables inzp[1]:303 [ bitmap_init::$0 ]
Uplifting [bitmap_init] best 710470 combination reg byte a [ bitmap_init::$0 ] 
Attempting to uplift remaining variables inzp[1]:305 [ bitmap_init::$1 ]
Uplifting [bitmap_init] best 710464 combination reg byte x [ bitmap_init::$1 ] 
Attempting to uplift remaining variables inzp[1]:307 [ bitmap_init::$2 ]
Uplifting [bitmap_init] best 710458 combination reg byte x [ bitmap_init::$2 ] 
Attempting to uplift remaining variables inzp[1]:346 [ bitmap_init::$3 ]
Uplifting [bitmap_init] best 710452 combination reg byte a [ bitmap_init::$3 ] 
Attempting to uplift remaining variables inzp[1]:347 [ bitmap_init::$4 ]
Uplifting [bitmap_init] best 710446 combination reg byte a [ bitmap_init::$4 ] 
Attempting to uplift remaining variables inzp[1]:348 [ bitmap_init::$27 ]
Uplifting [bitmap_init] best 710442 combination reg byte a [ bitmap_init::$27 ] 
Attempting to uplift remaining variables inzp[1]:373 [ bitmap_clear::vbank#0 ]
Uplifting [bitmap_clear] best 710436 combination reg byte x [ bitmap_clear::vbank#0 ] 
Attempting to uplift remaining variables inzp[1]:176 [ __bitmap_color_depth ]
Uplifting [] best 710436 combination zp[1]:176 [ __bitmap_color_depth ] 
Attempting to uplift remaining variables inzp[1]:207 [ CONIO_SCREEN_BANK#15 ]
Uplifting [] best 710436 combination zp[1]:207 [ CONIO_SCREEN_BANK#15 ] 
Attempting to uplift remaining variables inzp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Uplifting [conio_x16_init] best 710436 combination zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] 
Attempting to uplift remaining variables inzp[1]:285 [ clrscr::$1 ]
Uplifting [clrscr] best 710436 combination zp[1]:285 [ clrscr::$1 ] 
Attempting to uplift remaining variables inzp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ]
Uplifting [vera_layer_mode_tile] best 710436 combination zp[1]:35 [ vera_layer_mode_tile::tilewidth#10 ] 
Attempting to uplift remaining variables inzp[1]:36 [ vera_layer_mode_tile::tileheight#10 ]
Uplifting [vera_layer_mode_tile] best 710436 combination zp[1]:36 [ vera_layer_mode_tile::tileheight#10 ] 
Attempting to uplift remaining variables inzp[1]:174 [ __bitmap_hscale ]
Uplifting [] best 710436 combination zp[1]:174 [ __bitmap_hscale ] 
Attempting to uplift remaining variables inzp[1]:175 [ __bitmap_vscale ]
Uplifting [] best 710436 combination zp[1]:175 [ __bitmap_vscale ] 
Coalescing zero page register [ zp[2]:3 [ main::x#3 main::x#1 ] ] with [ zp[2]:55 [ bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:13 [ memcpy_in_vram::src#2 memcpy_in_vram::src#3 ] ] with [ zp[2]:511 [ memcpy_in_vram::src#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 ] ] with [ zp[2]:509 [ insertup::start#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:27 [ vera_layer_mode_tile::mapbase_address#10 ] ] with [ zp[4]:266 [ vera_layer_mode_tile::mapbase_address#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:31 [ vera_layer_mode_tile::tilebase_address#10 ] ] with [ zp[4]:274 [ vera_layer_mode_tile::tilebase_address#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 ] ] with [ zp[2]:97 [ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ] ] with [ zp[2]:108 [ bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 ] ] with [ zp[2]:123 [ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ] ] with [ zp[2]:134 [ bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 ] ] with [ zp[2]:187 [ modr16u::return#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 ] ] with [ zp[2]:95 [ bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 ] ] with [ zp[2]:112 [ bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 ] ] with [ zp[2]:121 [ bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ] ] with [ zp[2]:138 [ bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 ] ] with [ zp[2]:191 [ modr16u::return#4 ] ] - score: 1
Coalescing zero page register [ zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 ] ] with [ zp[2]:195 [ modr16u::return#10 ] ] - score: 1
Coalescing zero page register [ zp[2]:64 [ rand_state#13 rand_state#23 rand_state#14 ] ] with [ zp[2]:400 [ rand_state#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:64 [ rand_state#13 rand_state#23 rand_state#14 rand_state#0 ] ] with [ zp[2]:404 [ rand_state#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 ] ] with [ zp[2]:144 [ divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 ] ] with [ zp[2]:181 [ rand::return#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 ] ] with [ zp[2]:185 [ rand::return#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 rand::return#3 ] ] with [ zp[2]:189 [ rand::return#10 ] ] - score: 1
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 rand::return#3 rand::return#10 ] ] with [ zp[2]:193 [ rand::return#11 ] ] - score: 1
Coalescing zero page register [ zp[2]:68 [ modr16u::divisor#4 ] ] with [ zp[2]:410 [ divr16u::divisor#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 ] ] with [ zp[2]:361 [ bitmap_clear::hdelta#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 ] ] with [ zp[4]:365 [ mul16u::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 ] ] with [ zp[2]:386 [ bitmap_line::xd#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 ] ] with [ zp[2]:392 [ bitmap_line::xd#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 ] ] with [ zp[2]:388 [ bitmap_line::yd#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 ] ] with [ zp[2]:396 [ bitmap_line::yd#11 ] ] - score: 1
Coalescing zero page register [ zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 ] ] with [ zp[2]:153 [ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 ] ] with [ zp[2]:151 [ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 ] ] with [ zp[2]:390 [ bitmap_line::yd#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 ] ] with [ zp[2]:394 [ bitmap_line::yd#10 ] ] - score: 1
Coalescing zero page register [ zp[2]:183 [ modr16u::return#2 ] ] with [ zp[2]:412 [ modr16u::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:197 [ rand::return#12 ] ] with [ zp[2]:199 [ main::$40 ] ] - score: 1
Coalescing zero page register [ zp[2]:197 [ rand::return#12 main::$40 ] ] with [ zp[2]:408 [ rand::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 ] ] with [ zp[2]:418 [ vera_layer_get_mapbase_offset::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 ] ] with [ zp[2]:222 [ screenlayer::vera_layer_get_width1_return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:230 [ vera_layer_get_rowskip::return#2 ] ] with [ zp[2]:232 [ screenlayer::$4 ] ] - score: 1
Coalescing zero page register [ zp[2]:230 [ vera_layer_get_rowskip::return#2 screenlayer::$4 ] ] with [ zp[2]:422 [ vera_layer_get_rowskip::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 ] ] with [ zp[2]:243 [ screenlayer::vera_layer_get_height1_return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:250 [ gotoxy::$6 ] ] with [ zp[2]:252 [ gotoxy::line_offset#0 ] ] - score: 1
Coalescing zero page register [ zp[1]:285 [ clrscr::$1 ] ] with [ zp[1]:289 [ clrscr::color#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:310 [ bitmap_init::$23 ] ] with [ zp[2]:312 [ bitmap_init::$29 ] ] - score: 1
Coalescing zero page register [ zp[2]:320 [ bitmap_init::$24 ] ] with [ zp[2]:322 [ bitmap_init::$32 ] ] - score: 1
Coalescing zero page register [ zp[2]:330 [ bitmap_init::$25 ] ] with [ zp[2]:332 [ bitmap_init::$35 ] ] - score: 1
Coalescing zero page register [ zp[2]:338 [ bitmap_init::$26 ] ] with [ zp[2]:340 [ bitmap_init::$38 ] ] - score: 1
Coalescing zero page register [ zp[2]:351 [ bitmap_init::$28 ] ] with [ zp[2]:353 [ bitmap_init::$41 ] ] - score: 1
Coalescing zero page register [ zp[2]:356 [ bitmap_clear::vdelta#0 ] ] with [ zp[2]:363 [ mul16u::b#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:369 [ bitmap_clear::count#0 ] ] with [ zp[4]:379 [ memset_vram::num#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:374 [ bitmap_clear::vdest#0 ] ] with [ zp[2]:377 [ memset_vram::vdest#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:435 [ cputc::conio_addr#0 ] ] with [ zp[2]:438 [ cputc::conio_addr#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:468 [ cputln::temp#0 ] ] with [ zp[2]:470 [ cputln::temp#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:473 [ bitmap_plot::$9 ] ] with [ zp[2]:475 [ bitmap_plot::$12 ] ] - score: 1
Coalescing zero page register [ zp[4]:477 [ bitmap_plot::plot_x#0 ] ] with [ zp[4]:489 [ bitmap_plot::vera_vram_address01_bankaddr#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:481 [ bitmap_plot::$10 ] ] with [ zp[2]:483 [ bitmap_plot::$13 ] ] - score: 1
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 rand::return#3 rand::return#10 rand::return#11 ] ] with [ zp[2]:197 [ rand::return#12 main::$40 rand::return#0 ] ] - score: 4
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 ] ] with [ zp[2]:106 [ bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ] ] - score: 2
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 ] ] with [ zp[2]:116 [ bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ] ] - score: 2
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ] ] with [ zp[2]:132 [ bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ] ] - score: 2
Coalescing zero page register [ zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 bitmap_line::yd#11 ] ] with [ zp[2]:103 [ bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ] ] - score: 2
Coalescing zero page register [ zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 bitmap_line::yd#10 ] ] with [ zp[2]:129 [ bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ] ] - score: 2
Coalescing zero page register [ zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 insertup::start#0 ] ] with [ zp[2]:507 [ insertup::line#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 modr16u::return#10 ] ] with [ zp[2]:183 [ modr16u::return#2 modr16u::return#0 ] ] - score: 1
Coalescing zero page register [ zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#0 ] ] with [ zp[4]:369 [ bitmap_clear::count#0 memset_vram::num#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ] ] with [ zp[2]:125 [ bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ] ] with [ zp[2]:136 [ bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 ] ] with [ zp[2]:224 [ screenlayer::$2 ] ] - score: 1
Coalescing zero page register [ zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 ] ] with [ zp[2]:245 [ screenlayer::$5 ] ] - score: 1
Coalescing zero page register [ zp[2]:40 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] ] with [ zp[2]:13 [ memcpy_in_vram::src#2 memcpy_in_vram::src#3 memcpy_in_vram::src#0 ] ]
Coalescing zero page register [ zp[2]:45 [ bitmap_init::x#10 bitmap_init::x#1 ] ] with [ zp[2]:15 [ memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 insertup::start#0 insertup::line#0 ] ]
Coalescing zero page register [ zp[2]:49 [ bitmap_init::y#2 bitmap_init::y#1 ] ] with [ zp[2]:18 [ memcpy_in_vram::num#3 memcpy_in_vram::num#0 ] ]
Coalescing zero page register [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 modr16u::return#3 ] ] with [ zp[2]:20 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] ]
Coalescing zero page register [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 modr16u::return#4 ] ] with [ zp[2]:43 [ cputs::s#8 cputs::s#9 cputs::s#0 ] ]
Coalescing zero page register [ zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 bitmap_clear::hdelta#0 ] ] with [ zp[2]:61 [ bitmap_line::y1#10 bitmap_line::y1#0 modr16u::return#10 modr16u::return#2 modr16u::return#0 ] ]
Coalescing zero page register [ zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#0 bitmap_clear::count#0 memset_vram::num#0 ] ] with [ zp[4]:51 [ bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ] ]
Coalescing zero page register [ zp[4]:86 [ memset_vram::i#2 memset_vram::i#1 ] ] with [ zp[4]:82 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] ]
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 ] ] with [ zp[2]:68 [ modr16u::divisor#4 divr16u::divisor#0 ] ]
Coalescing zero page register [ zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 ] ] with [ zp[1]:48 [ bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] ]
Coalescing zero page register [ zp[2]:114 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 ] ] with [ zp[2]:101 [ bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ] ]
Coalescing zero page register [ zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 ] ] with [ zp[1]:105 [ bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ] ]
Coalescing zero page register [ zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 ] ] with [ zp[2]:127 [ bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ] ]
Coalescing zero page register [ zp[2]:142 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ] ] with [ zp[2]:93 [ bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 bitmap_line::yd#11 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ] ]
Coalescing zero page register [ zp[2]:146 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ] ] with [ zp[2]:99 [ bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ] ]
Coalescing zero page register [ zp[2]:157 [ clearline::c#2 clearline::c#1 ] ] with [ zp[2]:110 [ bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ] ]
Coalescing zero page register [ zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ] ] with [ zp[2]:22 [ vera_layer_mode_tile::mapwidth#10 ] ]
Coalescing zero page register [ zp[2]:215 [ screenlayer::vera_layer_get_width1_config#0 ] ] with [ zp[2]:25 [ vera_layer_mode_tile::mapheight#10 ] ]
Coalescing zero page register [ zp[2]:248 [ vera_layer_set_mapbase::addr#0 ] ] with [ zp[2]:220 [ screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ] ]
Coalescing zero page register [ zp[2]:250 [ gotoxy::$6 gotoxy::line_offset#0 ] ] with [ zp[2]:230 [ vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ] ]
Coalescing zero page register [ zp[2]:261 [ vera_layer_mode_tile::$1 ] ] with [ zp[2]:236 [ screenlayer::vera_layer_get_height1_config#0 ] ]
Coalescing zero page register [ zp[2]:271 [ vera_layer_mode_tile::$6 ] ] with [ zp[2]:241 [ screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ] ]
Coalescing zero page register [ zp[1]:285 [ clrscr::$1 clrscr::color#0 ] ] with [ zp[1]:131 [ bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] ]
Coalescing zero page register [ zp[2]:298 [ bitmap_init::vera_layer_get_color_depth1_config#0 ] ] with [ zp[2]:119 [ bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 bitmap_line::yd#10 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ] ]
Coalescing zero page register [ zp[2]:356 [ bitmap_clear::vdelta#0 mul16u::b#0 ] ] with [ zp[2]:308 [ bitmap_init::$7 ] ]
Coalescing zero page register [ zp[2]:374 [ bitmap_clear::vdest#0 memset_vram::vdest#0 ] ] with [ zp[2]:310 [ bitmap_init::$23 bitmap_init::$29 ] ]
Coalescing zero page register [ zp[2]:398 [ rand::$0 ] ] with [ zp[2]:314 [ bitmap_init::$30 ] ]
Coalescing zero page register [ zp[2]:402 [ rand::$1 ] ] with [ zp[2]:316 [ bitmap_init::$31 ] ]
Coalescing zero page register [ zp[2]:406 [ rand::$2 ] ] with [ zp[2]:318 [ bitmap_init::$10 ] ]
Coalescing zero page register [ zp[2]:425 [ vera_layer_set_config::addr#0 ] ] with [ zp[2]:414 [ vera_layer_set_text_color_mode::addr#0 ] ]
Coalescing zero page register [ zp[2]:435 [ cputc::conio_addr#0 cputc::conio_addr#1 ] ] with [ zp[2]:320 [ bitmap_init::$24 bitmap_init::$32 ] ]
Coalescing zero page register [ zp[2]:444 [ cputc::$16 ] ] with [ zp[2]:324 [ bitmap_init::$33 ] ]
Coalescing zero page register [ zp[2]:450 [ bitmap_line_ydxi::$6 ] ] with [ zp[2]:326 [ bitmap_init::$34 ] ]
Coalescing zero page register [ zp[2]:452 [ bitmap_line_xdyi::$6 ] ] with [ zp[2]:328 [ bitmap_init::$13 ] ]
Coalescing zero page register [ zp[2]:454 [ bitmap_line_ydxd::$6 ] ] with [ zp[2]:330 [ bitmap_init::$25 bitmap_init::$35 ] ]
Coalescing zero page register [ zp[2]:456 [ bitmap_line_xdyd::$6 ] ] with [ zp[2]:334 [ bitmap_init::$36 ] ]
Coalescing zero page register [ zp[2]:463 [ vera_layer_get_color::addr#0 ] ] with [ zp[2]:336 [ bitmap_init::$37 ] ]
Coalescing zero page register [ zp[2]:468 [ cputln::temp#0 cputln::temp#1 ] ] with [ zp[2]:338 [ bitmap_init::$26 bitmap_init::$38 ] ]
Coalescing zero page register [ zp[2]:473 [ bitmap_plot::$9 bitmap_plot::$12 ] ] with [ zp[2]:342 [ bitmap_init::$39 ] ]
Coalescing zero page register [ zp[2]:481 [ bitmap_plot::$10 bitmap_plot::$13 ] ] with [ zp[2]:344 [ bitmap_init::$40 ] ]
Coalescing zero page register [ zp[2]:493 [ bitmap_plot::$14 ] ] with [ zp[2]:349 [ bitmap_init::hdelta#0 ] ]
Coalescing zero page register [ zp[2]:499 [ bitmap_plot::$15 ] ] with [ zp[2]:351 [ bitmap_init::$28 bitmap_init::$41 ] ]
Coalescing zero page register [ zp[2]:66 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 rand::return#3 rand::return#10 rand::return#11 rand::return#12 main::$40 rand::return#0 ] ] with [ zp[2]:40 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 memcpy_in_vram::src#2 memcpy_in_vram::src#3 memcpy_in_vram::src#0 ] ]
Coalescing zero page register [ zp[2]:76 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 bitmap_clear::hdelta#0 bitmap_line::y1#10 bitmap_line::y1#0 modr16u::return#10 modr16u::return#2 modr16u::return#0 ] ] with [ zp[2]:45 [ bitmap_init::x#10 bitmap_init::x#1 memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 insertup::start#0 insertup::line#0 ] ]
Coalescing zero page register [ zp[2]:90 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 modr16u::divisor#4 divr16u::divisor#0 ] ] with [ zp[2]:49 [ bitmap_init::y#2 bitmap_init::y#1 memcpy_in_vram::num#3 memcpy_in_vram::num#0 ] ]
Coalescing zero page register [ zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 ] ] with [ zp[1]:92 [ bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] ]
Coalescing zero page register [ zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ] ] with [ zp[2]:114 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ] ]
Coalescing zero page register [ zp[2]:250 [ gotoxy::$6 gotoxy::line_offset#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ] ] with [ zp[2]:209 [ vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 vera_layer_mode_tile::mapwidth#10 ] ]
Coalescing zero page register [ zp[1]:295 [ cputc::c#0 ] ] with [ zp[1]:285 [ clrscr::$1 clrscr::color#0 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] ]
Coalescing zero page register [ zp[2]:356 [ bitmap_clear::vdelta#0 mul16u::b#0 bitmap_init::$7 ] ] with [ zp[2]:57 [ bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 modr16u::return#3 memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] ]
Coalescing zero page register [ zp[2]:374 [ bitmap_clear::vdest#0 memset_vram::vdest#0 bitmap_init::$23 bitmap_init::$29 ] ] with [ zp[2]:59 [ bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 modr16u::return#4 cputs::s#8 cputs::s#9 cputs::s#0 ] ]
Coalescing zero page register [ zp[2]:398 [ rand::$0 bitmap_init::$30 ] ] with [ zp[2]:142 [ divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 bitmap_line::yd#11 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ] ]
Coalescing zero page register [ zp[2]:402 [ rand::$1 bitmap_init::$31 ] ] with [ zp[2]:146 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ] ]
Coalescing zero page register [ zp[2]:406 [ rand::$2 bitmap_init::$10 ] ] with [ zp[2]:157 [ clearline::c#2 clearline::c#1 bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ] ]
Coalescing zero page register [ zp[2]:425 [ vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 ] ] with [ zp[2]:248 [ vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ] ]
Coalescing zero page register [ zp[4]:477 [ bitmap_plot::plot_x#0 bitmap_plot::vera_vram_address01_bankaddr#0 ] ] with [ zp[4]:78 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#0 bitmap_clear::count#0 memset_vram::num#0 bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ] ]
Coalescing zero page register [ zp[4]:485 [ bitmap_plot::plot_y#0 ] ] with [ zp[4]:86 [ memset_vram::i#2 memset_vram::i#1 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ] ]
Coalescing zero page register [ zp[2]:514 [ clearline::addr#0 ] ] with [ zp[2]:298 [ bitmap_init::vera_layer_get_color_depth1_config#0 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 bitmap_line::yd#10 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ] ]
Coalescing zero page register [ zp[1]:295 [ cputc::c#0 clrscr::$1 clrscr::color#0 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 ] ] with [ zp[1]:118 [ bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ] ]
Coalescing zero page register [ zp[2]:428 [ vera_layer_set_tilebase::addr#0 ] ] with [ zp[2]:425 [ vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ] ]
Coalescing zero page register [ zp[2]:435 [ cputc::conio_addr#0 cputc::conio_addr#1 bitmap_init::$24 bitmap_init::$32 ] ] with [ zp[2]:140 [ bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ] ]
Allocated (was zp[1]:24) zp[1]:6 [ vera_layer_mode_tile::layer#10 ]
Allocated (was zp[4]:27) zp[4]:7 [ vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::mapbase_address#0 ]
Allocated (was zp[4]:31) zp[4]:11 [ vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilebase_address#0 ]
Allocated (was zp[1]:35) zp[1]:15 [ vera_layer_mode_tile::tilewidth#10 ]
Allocated (was zp[1]:36) zp[1]:16 [ vera_layer_mode_tile::tileheight#10 ]
Allocated (was zp[2]:64) zp[2]:17 [ rand_state#13 rand_state#23 rand_state#14 rand_state#0 rand_state#1 ]
Allocated (was zp[2]:66) zp[2]:19 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 rand::return#3 rand::return#10 rand::return#11 rand::return#12 main::$40 rand::return#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 memcpy_in_vram::src#2 memcpy_in_vram::src#3 memcpy_in_vram::src#0 ]
Allocated (was zp[2]:76) zp[2]:21 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 bitmap_clear::hdelta#0 bitmap_line::y1#10 bitmap_line::y1#0 modr16u::return#10 modr16u::return#2 modr16u::return#0 bitmap_init::x#10 bitmap_init::x#1 memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 insertup::start#0 insertup::line#0 ]
Allocated (was zp[2]:90) zp[2]:23 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 modr16u::divisor#4 divr16u::divisor#0 bitmap_init::y#2 bitmap_init::y#1 memcpy_in_vram::num#3 memcpy_in_vram::num#0 ]
Allocated (was zp[1]:159) zp[1]:25 [ conio_screen_width ]
Allocated (was zp[1]:160) zp[1]:26 [ conio_screen_height ]
Allocated (was zp[1]:161) zp[1]:27 [ conio_screen_layer ]
Allocated (was zp[2]:162) zp[2]:28 [ conio_width ]
Allocated (was zp[2]:164) zp[2]:30 [ conio_height ]
Allocated (was zp[1]:166) zp[1]:32 [ conio_rowshift ]
Allocated (was zp[2]:167) zp[2]:33 [ conio_rowskip ]
Allocated (was zp[4]:169) zp[4]:35 [ __bitmap_address ]
Allocated (was zp[1]:173) zp[1]:39 [ __bitmap_layer ]
Allocated (was zp[1]:174) zp[1]:40 [ __bitmap_hscale ]
Allocated (was zp[1]:175) zp[1]:41 [ __bitmap_vscale ]
Allocated (was zp[1]:176) zp[1]:42 [ __bitmap_color_depth ]
Allocated (was zp[1]:207) zp[1]:43 [ CONIO_SCREEN_BANK#15 ]
Allocated (was zp[2]:211) zp[2]:44 [ CONIO_SCREEN_TEXT#104 ]
Allocated (was zp[2]:215) zp[2]:46 [ screenlayer::vera_layer_get_width1_config#0 vera_layer_mode_tile::mapheight#10 ]
Allocated (was zp[2]:250) zp[2]:48 [ gotoxy::$6 gotoxy::line_offset#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 vera_layer_mode_tile::mapwidth#10 ]
Allocated (was zp[2]:261) zp[2]:50 [ vera_layer_mode_tile::$1 screenlayer::vera_layer_get_height1_config#0 ]
Allocated (was zp[1]:263) zp[1]:52 [ vera_layer_mode_tile::$17 ]
Allocated (was zp[1]:265) zp[1]:53 [ vera_layer_mode_tile::$18 ]
Allocated (was zp[2]:271) zp[2]:54 [ vera_layer_mode_tile::$6 screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
Allocated (was zp[1]:295) zp[1]:56 [ cputc::c#0 clrscr::$1 clrscr::color#0 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
Allocated (was zp[2]:356) zp[2]:57 [ bitmap_clear::vdelta#0 mul16u::b#0 bitmap_init::$7 bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 modr16u::return#3 memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
Allocated (was zp[2]:374) zp[2]:59 [ bitmap_clear::vdest#0 memset_vram::vdest#0 bitmap_init::$23 bitmap_init::$29 bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 modr16u::return#4 cputs::s#8 cputs::s#9 cputs::s#0 ]
Allocated (was zp[1]:383) zp[1]:61 [ kbhit::ch ]
Allocated (was zp[2]:398) zp[2]:62 [ rand::$0 bitmap_init::$30 divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 bitmap_line::yd#11 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ]
Allocated (was zp[2]:402) zp[2]:64 [ rand::$1 bitmap_init::$31 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
Allocated (was zp[2]:406) zp[2]:66 [ rand::$2 bitmap_init::$10 clearline::c#2 clearline::c#1 bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ]
Allocated (was zp[2]:428) zp[2]:68 [ vera_layer_set_tilebase::addr#0 vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
Allocated (was zp[2]:435) zp[2]:70 [ cputc::conio_addr#0 cputc::conio_addr#1 bitmap_init::$24 bitmap_init::$32 bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ]
Allocated (was zp[2]:444) zp[2]:72 [ cputc::$16 bitmap_init::$33 ]
Allocated (was zp[2]:450) zp[2]:74 [ bitmap_line_ydxi::$6 bitmap_init::$34 ]
Allocated (was zp[2]:452) zp[2]:76 [ bitmap_line_xdyi::$6 bitmap_init::$13 ]
Allocated (was zp[2]:454) zp[2]:78 [ bitmap_line_ydxd::$6 bitmap_init::$25 bitmap_init::$35 ]
Allocated (was zp[2]:456) zp[2]:80 [ bitmap_line_xdyd::$6 bitmap_init::$36 ]
Allocated (was zp[2]:460) zp[2]:82 [ rem16u#0 ]
Allocated (was zp[2]:463) zp[2]:84 [ vera_layer_get_color::addr#0 bitmap_init::$37 ]
Allocated (was zp[2]:468) zp[2]:86 [ cputln::temp#0 cputln::temp#1 bitmap_init::$26 bitmap_init::$38 ]
Allocated (was zp[2]:473) zp[2]:88 [ bitmap_plot::$9 bitmap_plot::$12 bitmap_init::$39 ]
Allocated (was zp[4]:477) zp[4]:90 [ bitmap_plot::plot_x#0 bitmap_plot::vera_vram_address01_bankaddr#0 mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#0 bitmap_clear::count#0 memset_vram::num#0 bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ]
Allocated (was zp[2]:481) zp[2]:94 [ bitmap_plot::$10 bitmap_plot::$13 bitmap_init::$40 ]
Allocated (was zp[4]:485) zp[4]:96 [ bitmap_plot::plot_y#0 memset_vram::i#2 memset_vram::i#1 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
Allocated (was zp[2]:493) zp[2]:100 [ bitmap_plot::$14 bitmap_init::hdelta#0 ]
Allocated (was zp[2]:499) zp[2]:102 [ bitmap_plot::$15 bitmap_init::$28 bitmap_init::$41 ]
Allocated (was zp[1]:504) zp[1]:104 [ insertup::cy#0 ]
Allocated (was zp[1]:505) zp[1]:105 [ insertup::width#0 ]
Allocated (was zp[2]:514) zp[2]:106 [ clearline::addr#0 bitmap_init::vera_layer_get_color_depth1_config#0 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 bitmap_line::yd#10 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Example program for the Commander X16.
// Demonstrates the usage of the VERA tile map modes and layering.
  // Upstart
.cpu _65c02
  // Commodore 64 PRG executable file
.file [name="bitmap_8bpp_320_x_240.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  /// The colors of the CX16
  .const BLACK = 0
  .const WHITE = 1
  .const BLUE = 6
  .const YELLOW = 7
  .const VERA_INC_1 = $10
  .const VERA_ADDRSEL = 1
  .const VERA_LAYER1_ENABLE = $20
  .const VERA_LAYER0_ENABLE = $10
  .const VERA_LAYER_WIDTH_64 = $10
  .const VERA_LAYER_WIDTH_128 = $20
  .const VERA_LAYER_WIDTH_256 = $30
  .const VERA_LAYER_WIDTH_MASK = $30
  .const VERA_LAYER_HEIGHT_64 = $40
  .const VERA_LAYER_HEIGHT_128 = $80
  .const VERA_LAYER_HEIGHT_256 = $c0
  .const VERA_LAYER_HEIGHT_MASK = $c0
  /// Bit 0-1: Color Depth (0: 1 bpp, 1: 2 bpp, 2: 4 bpp, 3: 8 bpp)
  .const VERA_LAYER_COLOR_DEPTH_1BPP = 0
  .const VERA_LAYER_COLOR_DEPTH_8BPP = 3
  .const VERA_LAYER_COLOR_DEPTH_MASK = 3
  .const VERA_LAYER_CONFIG_MODE_BITMAP = 4
  .const VERA_LAYER_CONFIG_256C = 8
  .const VERA_TILEBASE_WIDTH_16 = 1
  .const VERA_TILEBASE_HEIGHT_16 = 2
  .const VERA_LAYER_TILEBASE_MASK = $fc
  .const SIZEOF_POINTER = 2
  /// $9F20 VRAM Address (7:0)
  .label VERA_ADDRX_L = $9f20
  /// $9F21 VRAM Address (15:8)
  .label VERA_ADDRX_M = $9f21
  /// $9F22 VRAM Address (7:0)
  /// Bit 4-7: Address Increment  The following is the amount incremented per value value:increment
  ///                             0:0, 1:1, 2:2, 3:4, 4:8, 5:16, 6:32, 7:64, 8:128, 9:256, 10:512, 11:40, 12:80, 13:160, 14:320, 15:640
  /// Bit 3: DECR Setting the DECR bit, will decrement instead of increment by the value set by the 'Address Increment' field.
  /// Bit 0: VRAM Address (16)
  .label VERA_ADDRX_H = $9f22
  /// $9F23	DATA0	VRAM Data port 0
  .label VERA_DATA0 = $9f23
  /// $9F24	DATA1	VRAM Data port 1
  .label VERA_DATA1 = $9f24
  /// $9F25	CTRL Control
  /// Bit 7: Reset
  /// Bit 1: DCSEL
  /// Bit 2: ADDRSEL
  .label VERA_CTRL = $9f25
  /// $9F29	DC_VIDEO (DCSEL=0)
  /// Bit 7: Current Field     Read-only bit which reflects the active interlaced field in composite and RGB modes. (0: even, 1: odd)
  /// Bit 6: Sprites Enable	Enable output from the Sprites renderer
  /// Bit 5: Layer1 Enable	    Enable output from the Layer1 renderer
  /// Bit 4: Layer0 Enable	    Enable output from the Layer0 renderer
  /// Bit 2: Chroma Disable    Setting 'Chroma Disable' disables output of chroma in NTSC composite mode and will give a better picture on a monochrome display. (Setting this bit will also disable the chroma output on the S-video output.)
  /// Bit 0-1: Output Mode     0: Video disabled, 1: VGA output, 2: NTSC composite, 3: RGB interlaced, composite sync (via VGA connector)
  .label VERA_DC_VIDEO = $9f29
  /// $9F2A	DC_HSCALE (DCSEL=0)	Active Display H-Scale
  .label VERA_DC_HSCALE = $9f2a
  /// $9F2B	DC_VSCALE (DCSEL=0)	Active Display V-Scale
  .label VERA_DC_VSCALE = $9f2b
  /// $9F2D	L0_CONFIG   Layer 0 Configuration
  .label VERA_L0_CONFIG = $9f2d
  /// $9F2E	L0_MAPBASE	    Layer 0 Map Base Address (16:9)
  .label VERA_L0_MAPBASE = $9f2e
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L0_TILEBASE = $9f2f
  /// $9F34	L1_CONFIG   Layer 1 Configuration
  .label VERA_L1_CONFIG = $9f34
  /// $9F35	L1_MAPBASE	    Layer 1 Map Base Address (16:9)
  .label VERA_L1_MAPBASE = $9f35
  /// $9F36	L1_TILEBASE	    Layer 1 Tile Base
  /// Bit 2-7: Tile Base Address (16:11)
  /// Bit 1:   Tile Height (0:8 pixels, 1:16 pixels)
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L1_TILEBASE = $9f36
  // Variable holding the screen width;
  .label conio_screen_width = $19
  // Variable holding the screen height;
  .label conio_screen_height = $1a
  // Variable holding the screen layer on the VERA card with which conio interacts;
  .label conio_screen_layer = $1b
  // Variables holding the current map width and map height of the layer.
  .label conio_width = $1c
  .label conio_height = $1e
  .label conio_rowshift = $20
  .label conio_rowskip = $21
  .label __bitmap_address = $23
  .label __bitmap_layer = $27
  .label __bitmap_hscale = $28
  .label __bitmap_vscale = $29
  .label __bitmap_color_depth = $2a
  // The random state variable
  .label rand_state = $11
  // Remainder after unsigned 16-bit division
  .label rem16u = $52
  .label CONIO_SCREEN_BANK = $2b
  // The screen width
  // The screen height
  // The text screen base address, which is a 16:0 bit value in VERA VRAM.
  // That is 128KB addressable space, thus 17 bits in total.
  // CONIO_SCREEN_TEXT contains bits 15:0 of the address.
  // CONIO_SCREEN_BANK contains bit 16, the the 64K memory bank in VERA VRAM (the upper 17th bit).
  // !!! note that these values are not const for the cx16!
  // This conio implements the two layers of VERA, which can be layer 0 or layer 1.
  // Configuring conio to output to a different layer, will change these fields to the address base
  // configured using VERA_L0_MAPBASE = 0x9f2e or VERA_L1_MAPBASE = 0x9f35.
  // Using the function setscreenlayer(layer) will re-calculate using CONIO_SCREEN_TEXT and CONIO_SCREEN_BASE
  // based on the values of VERA_L0_MAPBASE or VERA_L1_MAPBASE, mapping the base address of the selected layer.
  // The function setscreenlayermapbase(layer,mapbase) allows to configure bit 16:9 of the
  // mapbase address of the time map in VRAM of the selected layer VERA_L0_MAPBASE or VERA_L1_MAPBASE.
  .label CONIO_SCREEN_TEXT = $2c
.segment Code
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] conio_screen_width = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_screen_width
    // [2] conio_screen_height = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_screen_height
    // [3] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // [4] conio_width = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_width
    lda #>0
    sta.z conio_width+1
    // [5] conio_height = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_height
    lda #>0
    sta.z conio_height+1
    // [6] conio_rowshift = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_rowshift
    // [7] conio_rowskip = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_rowskip
    lda #>0
    sta.z conio_rowskip+1
    // [8] __bitmap_address = 0 -- vduz1=vduc1 
    lda #<0
    sta.z __bitmap_address
    lda #>0
    sta.z __bitmap_address+1
    lda #<0>>$10
    sta.z __bitmap_address+2
    lda #>0>>$10
    sta.z __bitmap_address+3
    // [9] __bitmap_layer = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z __bitmap_layer
    // [10] __bitmap_hscale = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z __bitmap_hscale
    // [11] __bitmap_vscale = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z __bitmap_vscale
    // [12] __bitmap_color_depth = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z __bitmap_color_depth
    // [13] call conio_x16_init 
    jsr conio_x16_init
    // [14] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [15] call main 
    // [37] phi from __start::@1 to main [phi:__start::@1->main]
  main_from___b1:
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [16] return 
    rts
}
  // conio_x16_init
// Set initial cursor position
conio_x16_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    .label line = 2
    // [17] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE -- vbuz1=_deref_pbuc1 
    lda BASIC_CURSOR_LINE
    sta.z line
    // [18] call vera_layer_mode_text 
    // [145] phi from conio_x16_init to vera_layer_mode_text [phi:conio_x16_init->vera_layer_mode_text]
  vera_layer_mode_text_from_conio_x16_init:
    jsr vera_layer_mode_text
    // [19] phi from conio_x16_init to conio_x16_init::@3 [phi:conio_x16_init->conio_x16_init::@3]
  __b3_from_conio_x16_init:
    jmp __b3
    // conio_x16_init::@3
  __b3:
    // [20] call screensize 
    jsr screensize
    // [21] phi from conio_x16_init::@3 to conio_x16_init::@4 [phi:conio_x16_init::@3->conio_x16_init::@4]
  __b4_from___b3:
    jmp __b4
    // conio_x16_init::@4
  __b4:
    // [22] call screenlayer 
    jsr screenlayer
    // [23] phi from conio_x16_init::@4 to conio_x16_init::@5 [phi:conio_x16_init::@4->conio_x16_init::@5]
  __b5_from___b4:
    jmp __b5
    // conio_x16_init::@5
  __b5:
    // [24] call vera_layer_set_textcolor 
    // [197] phi from conio_x16_init::@5 to vera_layer_set_textcolor [phi:conio_x16_init::@5->vera_layer_set_textcolor]
  vera_layer_set_textcolor_from___b5:
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:conio_x16_init::@5->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = 1 [phi:conio_x16_init::@5->vera_layer_set_textcolor#1] -- vbuxx=vbuc1 
    ldx #1
    jsr vera_layer_set_textcolor
    // [25] phi from conio_x16_init::@5 to conio_x16_init::@6 [phi:conio_x16_init::@5->conio_x16_init::@6]
  __b6_from___b5:
    jmp __b6
    // conio_x16_init::@6
  __b6:
    // [26] call vera_layer_set_backcolor 
    // [200] phi from conio_x16_init::@6 to vera_layer_set_backcolor [phi:conio_x16_init::@6->vera_layer_set_backcolor]
  vera_layer_set_backcolor_from___b6:
    // [200] phi vera_layer_set_backcolor::color#4 = BLUE [phi:conio_x16_init::@6->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLUE
    // [200] phi vera_layer_set_backcolor::layer#4 = 1 [phi:conio_x16_init::@6->vera_layer_set_backcolor#1] -- vbuxx=vbuc1 
    ldx #1
    jsr vera_layer_set_backcolor
    // [27] phi from conio_x16_init::@6 to conio_x16_init::@7 [phi:conio_x16_init::@6->conio_x16_init::@7]
  __b7_from___b6:
    jmp __b7
    // conio_x16_init::@7
  __b7:
    // [28] call vera_layer_set_mapbase 
    // [203] phi from conio_x16_init::@7 to vera_layer_set_mapbase [phi:conio_x16_init::@7->vera_layer_set_mapbase]
  vera_layer_set_mapbase_from___b7:
    // [203] phi vera_layer_set_mapbase::mapbase#3 = $20 [phi:conio_x16_init::@7->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #$20
    // [203] phi vera_layer_set_mapbase::layer#3 = 0 [phi:conio_x16_init::@7->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #0
    jsr vera_layer_set_mapbase
    // [29] phi from conio_x16_init::@7 to conio_x16_init::@8 [phi:conio_x16_init::@7->conio_x16_init::@8]
  __b8_from___b7:
    jmp __b8
    // conio_x16_init::@8
  __b8:
    // [30] call vera_layer_set_mapbase 
    // [203] phi from conio_x16_init::@8 to vera_layer_set_mapbase [phi:conio_x16_init::@8->vera_layer_set_mapbase]
  vera_layer_set_mapbase_from___b8:
    // [203] phi vera_layer_set_mapbase::mapbase#3 = 0 [phi:conio_x16_init::@8->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #0
    // [203] phi vera_layer_set_mapbase::layer#3 = 1 [phi:conio_x16_init::@8->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #1
    jsr vera_layer_set_mapbase
    jmp __b9
    // conio_x16_init::@9
  __b9:
    // [31] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1 -- vbuz1_lt_vbuz2_then_la1 
    lda.z line
    cmp.z conio_screen_height
    bcc __b1_from___b9
    jmp __b2
    // conio_x16_init::@2
  __b2:
    // [32] conio_x16_init::line#1 = conio_screen_height - 1 -- vbuz1=vbuz2_minus_1 
    ldx.z conio_screen_height
    dex
    stx.z line
    // [33] phi from conio_x16_init::@2 conio_x16_init::@9 to conio_x16_init::@1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1]
  __b1_from___b2:
  __b1_from___b9:
    // [33] phi conio_x16_init::line#3 = conio_x16_init::line#1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1#0] -- register_copy 
    jmp __b1
    // conio_x16_init::@1
  __b1:
    // [34] gotoxy::y#1 = conio_x16_init::line#3 -- vbuxx=vbuz1 
    ldx.z line
    // [35] call gotoxy 
    // [208] phi from conio_x16_init::@1 to gotoxy [phi:conio_x16_init::@1->gotoxy]
  gotoxy_from___b1:
    // [208] phi gotoxy::y#7 = gotoxy::y#1 [phi:conio_x16_init::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn
    // conio_x16_init::@return
  __breturn:
    // [36] return 
    rts
}
  // main
main: {
    .label __40 = $13
    .label color = 5
    .label x = 3
    // [38] call memcpy_in_vram 
  // Before we configure the bitmap pane into vera  memory we need to re-arrange a few things!
  // It is better to load all in bank 0, but then there is an issue.
  // So the default CX16 character set is located in bank 0, at address 0xF800.
  // So we need to move this character set to bank 1, suggested is at address 0xF000.
  // The CX16 by default writes textual output to layer 1 in text mode, so we need to
  // realign the moved character set to 0xf000 as the new tile base for layer 1.
  // We also will need to realign for layer 1 the map base from 0x00000 to 0x14000.
  // This is now all easily done with a few statements in the new kickc vera lib ...
    // [221] phi from main to memcpy_in_vram [phi:main->memcpy_in_vram]
  memcpy_in_vram_from_main:
    // [221] phi memcpy_in_vram::num#3 = $100*8 [phi:main->memcpy_in_vram#0] -- vwuz1=vwuc1 
    lda #<$100*8
    sta.z memcpy_in_vram.num
    lda #>$100*8
    sta.z memcpy_in_vram.num+1
    // [221] phi memcpy_in_vram::dest_bank#2 = 1 [phi:main->memcpy_in_vram#1] -- vbuyy=vbuc1 
    ldy #1
    // [221] phi memcpy_in_vram::dest#2 = (void*)(byte*) 61440 [phi:main->memcpy_in_vram#2] -- pvoz1=pvoc1 
    lda #<$f000
    sta.z memcpy_in_vram.dest
    lda #>$f000
    sta.z memcpy_in_vram.dest+1
    // [221] phi memcpy_in_vram::src#2 = (void*)(byte*) 63488 [phi:main->memcpy_in_vram#3] -- pvoz1=pvoc1 
    lda #<$f800
    sta.z memcpy_in_vram.src
    lda #>$f800
    sta.z memcpy_in_vram.src+1
    jsr memcpy_in_vram
    // [39] phi from main to main::@12 [phi:main->main::@12]
  __b12_from_main:
    jmp __b12
    // main::@12
  __b12:
    // [40] call vera_layer_mode_tile 
  // We copy the 128 character set of 8 bytes each.
    // [240] phi from main::@12 to vera_layer_mode_tile [phi:main::@12->vera_layer_mode_tile]
  vera_layer_mode_tile_from___b12:
    // [240] phi vera_layer_mode_tile::tileheight#10 = 8 [phi:main::@12->vera_layer_mode_tile#0] -- vbuz1=vbuc1 
    lda #8
    sta.z vera_layer_mode_tile.tileheight
    // [240] phi vera_layer_mode_tile::tilewidth#10 = 8 [phi:main::@12->vera_layer_mode_tile#1] -- vbuz1=vbuc1 
    lda #8
    sta.z vera_layer_mode_tile.tilewidth
    // [240] phi vera_layer_mode_tile::tilebase_address#10 = $1f000 [phi:main::@12->vera_layer_mode_tile#2] -- vduz1=vduc1 
    lda #<$1f000
    sta.z vera_layer_mode_tile.tilebase_address
    lda #>$1f000
    sta.z vera_layer_mode_tile.tilebase_address+1
    lda #<$1f000>>$10
    sta.z vera_layer_mode_tile.tilebase_address+2
    lda #>$1f000>>$10
    sta.z vera_layer_mode_tile.tilebase_address+3
    // [240] phi vera_layer_mode_tile::mapbase_address#10 = $14000 [phi:main::@12->vera_layer_mode_tile#3] -- vduz1=vduc1 
    lda #<$14000
    sta.z vera_layer_mode_tile.mapbase_address
    lda #>$14000
    sta.z vera_layer_mode_tile.mapbase_address+1
    lda #<$14000>>$10
    sta.z vera_layer_mode_tile.mapbase_address+2
    lda #>$14000>>$10
    sta.z vera_layer_mode_tile.mapbase_address+3
    // [240] phi vera_layer_mode_tile::mapheight#10 = $40 [phi:main::@12->vera_layer_mode_tile#4] -- vwuz1=vbuc1 
    lda #<$40
    sta.z vera_layer_mode_tile.mapheight
    lda #>$40
    sta.z vera_layer_mode_tile.mapheight+1
    // [240] phi vera_layer_mode_tile::layer#10 = 1 [phi:main::@12->vera_layer_mode_tile#5] -- vbuz1=vbuc1 
    lda #1
    sta.z vera_layer_mode_tile.layer
    // [240] phi vera_layer_mode_tile::mapwidth#10 = $80 [phi:main::@12->vera_layer_mode_tile#6] -- vwuz1=vbuc1 
    lda #<$80
    sta.z vera_layer_mode_tile.mapwidth
    lda #>$80
    sta.z vera_layer_mode_tile.mapwidth+1
    jsr vera_layer_mode_tile
    // [41] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
  __b13_from___b12:
    jmp __b13
    // main::@13
  __b13:
    // [42] call vera_layer_mode_bitmap 
    // [301] phi from main::@13 to vera_layer_mode_bitmap [phi:main::@13->vera_layer_mode_bitmap]
  vera_layer_mode_bitmap_from___b13:
    jsr vera_layer_mode_bitmap
    // [43] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
  __b14_from___b13:
    jmp __b14
    // main::@14
  __b14:
    // [44] call screenlayer 
    jsr screenlayer
    jmp textcolor1
    // main::textcolor1
  textcolor1:
    // [45] vera_layer_set_textcolor::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [46] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor1 to vera_layer_set_textcolor [phi:main::textcolor1->vera_layer_set_textcolor]
  vera_layer_set_textcolor_from_textcolor1:
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:main::textcolor1->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#1 [phi:main::textcolor1->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    jmp bgcolor1
    // main::bgcolor1
  bgcolor1:
    // [47] vera_layer_set_backcolor::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [48] call vera_layer_set_backcolor 
    // [200] phi from main::bgcolor1 to vera_layer_set_backcolor [phi:main::bgcolor1->vera_layer_set_backcolor]
  vera_layer_set_backcolor_from_bgcolor1:
    // [200] phi vera_layer_set_backcolor::color#4 = BLACK [phi:main::bgcolor1->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLACK
    // [200] phi vera_layer_set_backcolor::layer#4 = vera_layer_set_backcolor::layer#1 [phi:main::bgcolor1->vera_layer_set_backcolor#1] -- register_copy 
    jsr vera_layer_set_backcolor
    // [49] phi from main::bgcolor1 to main::@6 [phi:main::bgcolor1->main::@6]
  __b6_from_bgcolor1:
    jmp __b6
    // main::@6
  __b6:
    // [50] call clrscr 
    jsr clrscr
    // [51] phi from main::@6 to main::@15 [phi:main::@6->main::@15]
  __b15_from___b6:
    jmp __b15
    // main::@15
  __b15:
    // [52] call gotoxy 
    // [208] phi from main::@15 to gotoxy [phi:main::@15->gotoxy]
  gotoxy_from___b15:
    // [208] phi gotoxy::y#7 = $19 [phi:main::@15->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$19
    jsr gotoxy
    // [53] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
  __b16_from___b15:
    jmp __b16
    // main::@16
  __b16:
    // [54] call cputs 
    // [344] phi from main::@16 to cputs [phi:main::@16->cputs]
  cputs_from___b16:
    // [344] phi cputs::s#9 = main::s [phi:main::@16->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    // [55] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
  __b17_from___b16:
    jmp __b17
    // main::@17
  __b17:
    // [56] call cputs 
    // [344] phi from main::@17 to cputs [phi:main::@17->cputs]
  cputs_from___b17:
    // [344] phi cputs::s#9 = main::s1 [phi:main::@17->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // [57] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [58] call cputs 
    // [344] phi from main::@18 to cputs [phi:main::@18->cputs]
  cputs_from___b18:
    // [344] phi cputs::s#9 = main::s2 [phi:main::@18->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    // [59] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
  __b19_from___b18:
    jmp __b19
    // main::@19
  __b19:
    // [60] call cputs 
    // [344] phi from main::@19 to cputs [phi:main::@19->cputs]
  cputs_from___b19:
    // [344] phi cputs::s#9 = main::s3 [phi:main::@19->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    jmp vera_layer_show1
    // main::vera_layer_show1
  vera_layer_show1:
    // [61] *VERA_DC_VIDEO = *VERA_DC_VIDEO | *vera_layer_enable -- _deref_pbuc1=_deref_pbuc1_bor__deref_pbuc2 
    lda VERA_DC_VIDEO
    ora vera_layer_enable
    sta VERA_DC_VIDEO
    // [62] phi from main::vera_layer_show1 to main::@7 [phi:main::vera_layer_show1->main::@7]
  __b7_from_vera_layer_show1:
    jmp __b7
    // main::@7
  __b7:
    // [63] call bitmap_init 
    jsr bitmap_init
    // [64] phi from main::@7 to main::@20 [phi:main::@7->main::@20]
  __b20_from___b7:
    jmp __b20
    // main::@20
  __b20:
    // [65] call bitmap_clear 
    jsr bitmap_clear
    // [66] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
  __b21_from___b20:
    jmp __b21
    // main::@21
  __b21:
    // [67] call gotoxy 
    // [208] phi from main::@21 to gotoxy [phi:main::@21->gotoxy]
  gotoxy_from___b21:
    // [208] phi gotoxy::y#7 = $1d [phi:main::@21->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$1d
    jsr gotoxy
    jmp textcolor2
    // main::textcolor2
  textcolor2:
    // [68] vera_layer_set_textcolor::layer#2 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [69] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor2 to vera_layer_set_textcolor [phi:main::textcolor2->vera_layer_set_textcolor]
  vera_layer_set_textcolor_from_textcolor2:
    // [197] phi vera_layer_set_textcolor::color#6 = YELLOW [phi:main::textcolor2->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #YELLOW
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#2 [phi:main::textcolor2->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // [70] phi from main::textcolor2 to main::@8 [phi:main::textcolor2->main::@8]
  __b8_from_textcolor2:
    jmp __b8
    // main::@8
  __b8:
    // [71] call cputs 
    // [344] phi from main::@8 to cputs [phi:main::@8->cputs]
  cputs_from___b8:
    // [344] phi cputs::s#9 = main::s4 [phi:main::@8->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // [72] phi from main::@8 to main::@1 [phi:main::@8->main::@1]
  __b1_from___b8:
    // [72] phi rand_state#23 = 1 [phi:main::@8->main::@1#0] -- vwuz1=vwuc1 
    lda #<1
    sta.z rand_state
    lda #>1
    sta.z rand_state+1
    jmp __b1
    // main::@1
  __b1:
    // [73] call kbhit 
    jsr kbhit
    // [74] kbhit::return#2 = kbhit::return#1
    jmp __b22
    // main::@22
  __b22:
    // [75] main::$30 = kbhit::return#2
    // [76] if(0==main::$30) goto main::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2_from___b22
    jmp textcolor3
    // main::textcolor3
  textcolor3:
    // [77] vera_layer_set_textcolor::layer#3 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [78] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor3 to vera_layer_set_textcolor [phi:main::textcolor3->vera_layer_set_textcolor]
  vera_layer_set_textcolor_from_textcolor3:
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:main::textcolor3->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#3 [phi:main::textcolor3->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    jmp bgcolor2
    // main::bgcolor2
  bgcolor2:
    // [79] vera_layer_set_backcolor::layer#2 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [80] call vera_layer_set_backcolor 
    // [200] phi from main::bgcolor2 to vera_layer_set_backcolor [phi:main::bgcolor2->vera_layer_set_backcolor]
  vera_layer_set_backcolor_from_bgcolor2:
    // [200] phi vera_layer_set_backcolor::color#4 = BLACK [phi:main::bgcolor2->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLACK
    // [200] phi vera_layer_set_backcolor::layer#4 = vera_layer_set_backcolor::layer#2 [phi:main::bgcolor2->vera_layer_set_backcolor#1] -- register_copy 
    jsr vera_layer_set_backcolor
    // [81] phi from main::bgcolor2 to main::@9 [phi:main::bgcolor2->main::@9]
  __b9_from_bgcolor2:
    jmp __b9
    // main::@9
  __b9:
    // [82] call clrscr 
    jsr clrscr
    // [83] phi from main::@9 to main::@32 [phi:main::@9->main::@32]
  __b32_from___b9:
    jmp __b32
    // main::@32
  __b32:
    // [84] call gotoxy 
    // [208] phi from main::@32 to gotoxy [phi:main::@32->gotoxy]
  gotoxy_from___b32:
    // [208] phi gotoxy::y#7 = $1a [phi:main::@32->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$1a
    jsr gotoxy
    // [85] phi from main::@32 to main::@33 [phi:main::@32->main::@33]
  __b33_from___b32:
    jmp __b33
    // main::@33
  __b33:
    // [86] call cputs 
    // [344] phi from main::@33 to cputs [phi:main::@33->cputs]
  cputs_from___b33:
    // [344] phi cputs::s#9 = main::s5 [phi:main::@33->cputs#0] -- pbuz1=pbuc1 
    lda #<s5
    sta.z cputs.s
    lda #>s5
    sta.z cputs.s+1
    jsr cputs
    // [87] phi from main::@33 to main::@34 [phi:main::@33->main::@34]
  __b34_from___b33:
    jmp __b34
    // main::@34
  __b34:
    // [88] call gotoxy 
    // [208] phi from main::@34 to gotoxy [phi:main::@34->gotoxy]
  gotoxy_from___b34:
    // [208] phi gotoxy::y#7 = $1d [phi:main::@34->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$1d
    jsr gotoxy
    jmp textcolor4
    // main::textcolor4
  textcolor4:
    // [89] vera_layer_set_textcolor::layer#4 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [90] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor4 to vera_layer_set_textcolor [phi:main::textcolor4->vera_layer_set_textcolor]
  vera_layer_set_textcolor_from_textcolor4:
    // [197] phi vera_layer_set_textcolor::color#6 = YELLOW [phi:main::textcolor4->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #YELLOW
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#4 [phi:main::textcolor4->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // [91] phi from main::textcolor4 to main::@10 [phi:main::textcolor4->main::@10]
  __b10_from_textcolor4:
    jmp __b10
    // main::@10
  __b10:
    // [92] call cputs 
    // [344] phi from main::@10 to cputs [phi:main::@10->cputs]
  cputs_from___b10:
    // [344] phi cputs::s#9 = main::s4 [phi:main::@10->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // [93] phi from main::@10 to main::@3 [phi:main::@10->main::@3]
  __b3_from___b10:
    // [93] phi main::color#2 = 0 [phi:main::@10->main::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta.z color
    // [93] phi main::x#3 = 0 [phi:main::@10->main::@3#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z x
    lda #>0
    sta.z x+1
    jmp __b3
    // main::@3
  __b3:
    // [94] call kbhit 
    jsr kbhit
    // [95] kbhit::return#3 = kbhit::return#1
    jmp __b35
    // main::@35
  __b35:
    // [96] main::$43 = kbhit::return#3
    // [97] if(0==main::$43) goto main::@4 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b4
    // [98] phi from main::@35 to main::@5 [phi:main::@35->main::@5]
  __b5_from___b35:
    jmp __b5
    // main::@5
  __b5:
    // [99] call screenlayer 
    jsr screenlayer
    jmp textcolor5
    // main::textcolor5
  textcolor5:
    // [100] vera_layer_set_textcolor::layer#5 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [101] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor5 to vera_layer_set_textcolor [phi:main::textcolor5->vera_layer_set_textcolor]
  vera_layer_set_textcolor_from_textcolor5:
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:main::textcolor5->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#5 [phi:main::textcolor5->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    jmp bgcolor3
    // main::bgcolor3
  bgcolor3:
    // [102] vera_layer_set_backcolor::layer#3 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [103] call vera_layer_set_backcolor 
    // [200] phi from main::bgcolor3 to vera_layer_set_backcolor [phi:main::bgcolor3->vera_layer_set_backcolor]
  vera_layer_set_backcolor_from_bgcolor3:
    // [200] phi vera_layer_set_backcolor::color#4 = BLUE [phi:main::bgcolor3->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLUE
    // [200] phi vera_layer_set_backcolor::layer#4 = vera_layer_set_backcolor::layer#3 [phi:main::bgcolor3->vera_layer_set_backcolor#1] -- register_copy 
    jsr vera_layer_set_backcolor
    // [104] phi from main::bgcolor3 to main::@11 [phi:main::bgcolor3->main::@11]
  __b11_from_bgcolor3:
    jmp __b11
    // main::@11
  __b11:
    // [105] call clrscr 
    jsr clrscr
    jmp __breturn
    // main::@return
  __breturn:
    // [106] return 
    rts
    // main::@4
  __b4:
    // [107] bitmap_line::x0#1 = main::x#3
    // [108] bitmap_line::x1#1 = main::x#3 -- vwuz1=vwuz2 
    lda.z x
    sta.z bitmap_line.x1
    lda.z x+1
    sta.z bitmap_line.x1+1
    // [109] bitmap_line::c#1 = main::color#2 -- vbuxx=vbuz1 
    ldx.z color
    // [110] call bitmap_line 
    // [461] phi from main::@4 to bitmap_line [phi:main::@4->bitmap_line]
  bitmap_line_from___b4:
    // [461] phi bitmap_line::c#10 = bitmap_line::c#1 [phi:main::@4->bitmap_line#0] -- register_copy 
    // [461] phi bitmap_line::y1#10 = $c7 [phi:main::@4->bitmap_line#1] -- vwuz1=vbuc1 
    lda #<$c7
    sta.z bitmap_line.y1
    lda #>$c7
    sta.z bitmap_line.y1+1
    // [461] phi bitmap_line::y0#10 = 0 [phi:main::@4->bitmap_line#2] -- vwuz1=vbuc1 
    lda #<0
    sta.z bitmap_line.y0
    lda #>0
    sta.z bitmap_line.y0+1
    // [461] phi bitmap_line::x1#10 = bitmap_line::x1#1 [phi:main::@4->bitmap_line#3] -- register_copy 
    // [461] phi bitmap_line::x0#10 = bitmap_line::x0#1 [phi:main::@4->bitmap_line#4] -- register_copy 
    jsr bitmap_line
    jmp __b36
    // main::@36
  __b36:
    // [111] main::color#1 = ++ main::color#2 -- vbuz1=_inc_vbuz1 
    inc.z color
    // [112] main::x#1 = ++ main::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // [113] if(main::x#1<=$13f) goto main::@37 -- vwuz1_le_vwuc1_then_la1 
    lda.z x+1
    cmp #>$13f
    bne !+
    lda.z x
    cmp #<$13f
  !:
    bcc __b37_from___b36
    beq __b37_from___b36
    // [93] phi from main::@36 to main::@3 [phi:main::@36->main::@3]
  __b3_from___b36:
    // [93] phi main::color#2 = main::color#1 [phi:main::@36->main::@3#0] -- register_copy 
    // [93] phi main::x#3 = 0 [phi:main::@36->main::@3#1] -- vwuz1=vbuc1 
    lda #<0
    sta.z x
    lda #>0
    sta.z x+1
    jmp __b3
    // [114] phi from main::@36 to main::@37 [phi:main::@36->main::@37]
  __b37_from___b36:
    jmp __b37
    // main::@37
  __b37:
    // [93] phi from main::@37 to main::@3 [phi:main::@37->main::@3]
  __b3_from___b37:
    // [93] phi main::color#2 = main::color#1 [phi:main::@37->main::@3#0] -- register_copy 
    // [93] phi main::x#3 = main::x#1 [phi:main::@37->main::@3#1] -- register_copy 
    jmp __b3
    // [115] phi from main::@22 to main::@2 [phi:main::@22->main::@2]
  __b2_from___b22:
    jmp __b2
    // main::@2
  __b2:
    // [116] call rand 
    // [532] phi from main::@2 to rand [phi:main::@2->rand]
  rand_from___b2:
    // [532] phi rand_state#13 = rand_state#23 [phi:main::@2->rand#0] -- register_copy 
    jsr rand
    // [117] rand::return#2 = rand::return#0
    jmp __b23
    // main::@23
  __b23:
    // [118] modr16u::dividend#0 = rand::return#2
    // [119] call modr16u 
    // [541] phi from main::@23 to modr16u [phi:main::@23->modr16u]
  modr16u_from___b23:
    // [541] phi modr16u::divisor#4 = $140 [phi:main::@23->modr16u#0] -- vwuz1=vwuc1 
    lda #<$140
    sta.z modr16u.divisor
    lda #>$140
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#0 [phi:main::@23->modr16u#1] -- register_copy 
    jsr modr16u
    // [120] modr16u::return#2 = modr16u::return#0
    jmp __b24
    // main::@24
  __b24:
    // [121] bitmap_line::x0#0 = modr16u::return#2 -- vwuz1=vwuz2 
    lda.z modr16u.return
    sta.z bitmap_line.x0
    lda.z modr16u.return+1
    sta.z bitmap_line.x0+1
    // [122] call rand 
    // [532] phi from main::@24 to rand [phi:main::@24->rand]
  rand_from___b24:
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@24->rand#0] -- register_copy 
    jsr rand
    // [123] rand::return#3 = rand::return#0
    jmp __b25
    // main::@25
  __b25:
    // [124] modr16u::dividend#1 = rand::return#3
    // [125] call modr16u 
    // [541] phi from main::@25 to modr16u [phi:main::@25->modr16u]
  modr16u_from___b25:
    // [541] phi modr16u::divisor#4 = $140 [phi:main::@25->modr16u#0] -- vwuz1=vwuc1 
    lda #<$140
    sta.z modr16u.divisor
    lda #>$140
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#1 [phi:main::@25->modr16u#1] -- register_copy 
    jsr modr16u
    // [126] modr16u::return#3 = modr16u::return#0 -- vwuz1=vwuz2 
    lda.z modr16u.return
    sta.z modr16u.return_1
    lda.z modr16u.return+1
    sta.z modr16u.return_1+1
    jmp __b26
    // main::@26
  __b26:
    // [127] bitmap_line::x1#0 = modr16u::return#3
    // [128] call rand 
    // [532] phi from main::@26 to rand [phi:main::@26->rand]
  rand_from___b26:
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@26->rand#0] -- register_copy 
    jsr rand
    // [129] rand::return#10 = rand::return#0
    jmp __b27
    // main::@27
  __b27:
    // [130] modr16u::dividend#2 = rand::return#10
    // [131] call modr16u 
    // [541] phi from main::@27 to modr16u [phi:main::@27->modr16u]
  modr16u_from___b27:
    // [541] phi modr16u::divisor#4 = $c8 [phi:main::@27->modr16u#0] -- vwuz1=vbuc1 
    lda #<$c8
    sta.z modr16u.divisor
    lda #>$c8
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#2 [phi:main::@27->modr16u#1] -- register_copy 
    jsr modr16u
    // [132] modr16u::return#4 = modr16u::return#0 -- vwuz1=vwuz2 
    lda.z modr16u.return
    sta.z modr16u.return_2
    lda.z modr16u.return+1
    sta.z modr16u.return_2+1
    jmp __b28
    // main::@28
  __b28:
    // [133] bitmap_line::y0#0 = modr16u::return#4
    // [134] call rand 
    // [532] phi from main::@28 to rand [phi:main::@28->rand]
  rand_from___b28:
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@28->rand#0] -- register_copy 
    jsr rand
    // [135] rand::return#11 = rand::return#0
    jmp __b29
    // main::@29
  __b29:
    // [136] modr16u::dividend#3 = rand::return#11
    // [137] call modr16u 
    // [541] phi from main::@29 to modr16u [phi:main::@29->modr16u]
  modr16u_from___b29:
    // [541] phi modr16u::divisor#4 = $c8 [phi:main::@29->modr16u#0] -- vwuz1=vbuc1 
    lda #<$c8
    sta.z modr16u.divisor
    lda #>$c8
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#3 [phi:main::@29->modr16u#1] -- register_copy 
    jsr modr16u
    // [138] modr16u::return#10 = modr16u::return#0
    jmp __b30
    // main::@30
  __b30:
    // [139] bitmap_line::y1#0 = modr16u::return#10
    // [140] call rand 
    // [532] phi from main::@30 to rand [phi:main::@30->rand]
  rand_from___b30:
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@30->rand#0] -- register_copy 
    jsr rand
    // [141] rand::return#12 = rand::return#0
    jmp __b31
    // main::@31
  __b31:
    // [142] main::$40 = rand::return#12
    // [143] bitmap_line::c#0 = main::$40 & $ff -- vbuxx=vwuz1_band_vbuc1 
    lda #$ff
    and.z __40
    tax
    // [144] call bitmap_line 
    // [461] phi from main::@31 to bitmap_line [phi:main::@31->bitmap_line]
  bitmap_line_from___b31:
    // [461] phi bitmap_line::c#10 = bitmap_line::c#0 [phi:main::@31->bitmap_line#0] -- register_copy 
    // [461] phi bitmap_line::y1#10 = bitmap_line::y1#0 [phi:main::@31->bitmap_line#1] -- register_copy 
    // [461] phi bitmap_line::y0#10 = bitmap_line::y0#0 [phi:main::@31->bitmap_line#2] -- register_copy 
    // [461] phi bitmap_line::x1#10 = bitmap_line::x1#0 [phi:main::@31->bitmap_line#3] -- register_copy 
    // [461] phi bitmap_line::x0#10 = bitmap_line::x0#0 [phi:main::@31->bitmap_line#4] -- register_copy 
    jsr bitmap_line
    // [72] phi from main::@31 to main::@1 [phi:main::@31->main::@1]
  __b1_from___b31:
    // [72] phi rand_state#23 = rand_state#14 [phi:main::@31->main::@1#0] -- register_copy 
    jmp __b1
  .segment Data
    s: .text @"vera in bitmap mode,\n"
    .byte 0
    s1: .text @"color depth 8 bits per pixel.\n"
    .byte 0
    s2: .text @"in this mode, it is possible to display\n"
    .byte 0
    s3: .text @"graphics in 256 colors.\n"
    .byte 0
    s4: .text "press a key ..."
    .byte 0
    s5: .text @"here you see all the colors possible.\n"
    .byte 0
}
.segment Code
  // vera_layer_mode_text
// Set a vera layer in text mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_mode: The color mode, which can be 16 or 256.
vera_layer_mode_text: {
    .const mapbase_address = 0
    .const tilebase_address = $f800
    .const mapwidth = $80
    .const mapheight = $40
    .const tilewidth = 8
    .const tileheight = 8
    .label layer = 1
    // [146] call vera_layer_mode_tile 
    // [240] phi from vera_layer_mode_text to vera_layer_mode_tile [phi:vera_layer_mode_text->vera_layer_mode_tile]
  vera_layer_mode_tile_from_vera_layer_mode_text:
    // [240] phi vera_layer_mode_tile::tileheight#10 = vera_layer_mode_text::tileheight#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#0] -- vbuz1=vbuc1 
    lda #tileheight
    sta.z vera_layer_mode_tile.tileheight
    // [240] phi vera_layer_mode_tile::tilewidth#10 = vera_layer_mode_text::tilewidth#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#1] -- vbuz1=vbuc1 
    lda #tilewidth
    sta.z vera_layer_mode_tile.tilewidth
    // [240] phi vera_layer_mode_tile::tilebase_address#10 = vera_layer_mode_text::tilebase_address#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#2] -- vduz1=vduc1 
    lda #<tilebase_address
    sta.z vera_layer_mode_tile.tilebase_address
    lda #>tilebase_address
    sta.z vera_layer_mode_tile.tilebase_address+1
    lda #<tilebase_address>>$10
    sta.z vera_layer_mode_tile.tilebase_address+2
    lda #>tilebase_address>>$10
    sta.z vera_layer_mode_tile.tilebase_address+3
    // [240] phi vera_layer_mode_tile::mapbase_address#10 = vera_layer_mode_text::mapbase_address#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#3] -- vduz1=vduc1 
    lda #<mapbase_address
    sta.z vera_layer_mode_tile.mapbase_address
    lda #>mapbase_address
    sta.z vera_layer_mode_tile.mapbase_address+1
    lda #<mapbase_address>>$10
    sta.z vera_layer_mode_tile.mapbase_address+2
    lda #>mapbase_address>>$10
    sta.z vera_layer_mode_tile.mapbase_address+3
    // [240] phi vera_layer_mode_tile::mapheight#10 = vera_layer_mode_text::mapheight#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#4] -- vwuz1=vwuc1 
    lda #<mapheight
    sta.z vera_layer_mode_tile.mapheight
    lda #>mapheight
    sta.z vera_layer_mode_tile.mapheight+1
    // [240] phi vera_layer_mode_tile::layer#10 = vera_layer_mode_text::layer#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#5] -- vbuz1=vbuc1 
    lda #layer
    sta.z vera_layer_mode_tile.layer
    // [240] phi vera_layer_mode_tile::mapwidth#10 = vera_layer_mode_text::mapwidth#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#6] -- vwuz1=vwuc1 
    lda #<mapwidth
    sta.z vera_layer_mode_tile.mapwidth
    lda #>mapwidth
    sta.z vera_layer_mode_tile.mapwidth+1
    jsr vera_layer_mode_tile
    // [147] phi from vera_layer_mode_text to vera_layer_mode_text::@1 [phi:vera_layer_mode_text->vera_layer_mode_text::@1]
  __b1_from_vera_layer_mode_text:
    jmp __b1
    // vera_layer_mode_text::@1
  __b1:
    // [148] call vera_layer_set_text_color_mode 
    jsr vera_layer_set_text_color_mode
    jmp __breturn
    // vera_layer_mode_text::@return
  __breturn:
    // [149] return 
    rts
}
  // screensize
// Return the current screen size.
screensize: {
    .label x = conio_screen_width
    .label y = conio_screen_height
    // [150] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    lda VERA_DC_HSCALE
    rol
    rol
    and #1
    // [151] screensize::$1 = $28 << screensize::hscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$28
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // [152] *screensize::x#0 = screensize::$1 -- _deref_pbuc1=vbuaa 
    sta.z x
    // [153] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    lda VERA_DC_VSCALE
    rol
    rol
    and #1
    // [154] screensize::$3 = $1e << screensize::vscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$1e
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // [155] *screensize::y#0 = screensize::$3 -- _deref_pbuc1=vbuaa 
    sta.z y
    jmp __breturn
    // screensize::@return
  __breturn:
    // [156] return 
    rts
}
  // screenlayer
// Set the layer with which the conio will interact.
// - layer: value of 0 or 1.
screenlayer: {
    .label __2 = $44
    .label __4 = $30
    .label __5 = $36
    .label vera_layer_get_width1_config = $2e
    .label vera_layer_get_width1_return = $44
    .label vera_layer_get_height1_config = $32
    .label vera_layer_get_height1_return = $36
    // [157] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // [158] vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [159] call vera_layer_get_mapbase_bank 
    jsr vera_layer_get_mapbase_bank
    // [160] vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#0
    jmp __b3
    // screenlayer::@3
  __b3:
    // [161] CONIO_SCREEN_BANK#15 = vera_layer_get_mapbase_bank::return#2 -- vbuz1=vbuaa 
    sta.z CONIO_SCREEN_BANK
    // [162] vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [163] call vera_layer_get_mapbase_offset 
    jsr vera_layer_get_mapbase_offset
    // [164] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0
    jmp __b4
    // screenlayer::@4
  __b4:
    // [165] CONIO_SCREEN_TEXT#104 = vera_layer_get_mapbase_offset::return#2 -- vwuz1=vwuz2 
    lda.z vera_layer_get_mapbase_offset.return
    sta.z CONIO_SCREEN_TEXT
    lda.z vera_layer_get_mapbase_offset.return+1
    sta.z CONIO_SCREEN_TEXT+1
    // [166] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    jmp vera_layer_get_width1
    // screenlayer::vera_layer_get_width1
  vera_layer_get_width1:
    // [167] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [168] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_width1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_width1_config+1
    // [169] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_WIDTH_MASK
    ldy #0
    and (vera_layer_get_width1_config),y
    // [170] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 -- vbuaa=vbuaa_ror_4 
    lsr
    lsr
    lsr
    lsr
    // [171] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [172] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_WIDTH,y
    sta.z vera_layer_get_width1_return
    lda VERA_LAYER_WIDTH+1,y
    sta.z vera_layer_get_width1_return+1
    jmp vera_layer_get_width1___breturn
    // screenlayer::vera_layer_get_width1_@return
  vera_layer_get_width1___breturn:
    // [173] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
    jmp __b1
    // screenlayer::@1
  __b1:
    // [174] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
    // [175] conio_width = screenlayer::$2 -- vwuz1=vwuz2 
    lda.z __2
    sta.z conio_width
    lda.z __2+1
    sta.z conio_width+1
    // [176] vera_layer_get_rowshift::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [177] call vera_layer_get_rowshift 
    jsr vera_layer_get_rowshift
    // [178] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
    jmp __b5
    // screenlayer::@5
  __b5:
    // [179] screenlayer::$3 = vera_layer_get_rowshift::return#2
    // [180] conio_rowshift = screenlayer::$3 -- vbuz1=vbuaa 
    sta.z conio_rowshift
    // [181] vera_layer_get_rowskip::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [182] call vera_layer_get_rowskip 
    jsr vera_layer_get_rowskip
    // [183] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
    jmp __b6
    // screenlayer::@6
  __b6:
    // [184] screenlayer::$4 = vera_layer_get_rowskip::return#2
    // [185] conio_rowskip = screenlayer::$4 -- vwuz1=vwuz2 
    lda.z __4
    sta.z conio_rowskip
    lda.z __4+1
    sta.z conio_rowskip+1
    // [186] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    jmp vera_layer_get_height1
    // screenlayer::vera_layer_get_height1
  vera_layer_get_height1:
    // [187] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [188] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_height1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_height1_config+1
    // [189] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_HEIGHT_MASK
    ldy #0
    and (vera_layer_get_height1_config),y
    // [190] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 -- vbuaa=vbuaa_ror_6 
    rol
    rol
    rol
    and #3
    // [191] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [192] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_HEIGHT,y
    sta.z vera_layer_get_height1_return
    lda VERA_LAYER_HEIGHT+1,y
    sta.z vera_layer_get_height1_return+1
    jmp vera_layer_get_height1___breturn
    // screenlayer::vera_layer_get_height1_@return
  vera_layer_get_height1___breturn:
    // [193] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
    jmp __b2
    // screenlayer::@2
  __b2:
    // [194] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
    // [195] conio_height = screenlayer::$5 -- vwuz1=vwuz2 
    lda.z __5
    sta.z conio_height
    lda.z __5+1
    sta.z conio_height+1
    jmp __breturn
    // screenlayer::@return
  __breturn:
    // [196] return 
    rts
}
  // vera_layer_set_textcolor
// Set the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15) when the VERA works in 16x16 color text mode.
//   An 8 bit value (decimal between 0 and 255) when the VERA works in 256 text mode.
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_set_textcolor(byte register(X) layer, byte register(A) color)
vera_layer_set_textcolor: {
    // [198] vera_layer_textcolor[vera_layer_set_textcolor::layer#6] = vera_layer_set_textcolor::color#6 -- pbuc1_derefidx_vbuxx=vbuaa 
    sta vera_layer_textcolor,x
    jmp __breturn
    // vera_layer_set_textcolor::@return
  __breturn:
    // [199] return 
    rts
}
  // vera_layer_set_backcolor
// Set the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_set_backcolor(byte register(X) layer, byte register(A) color)
vera_layer_set_backcolor: {
    // [201] vera_layer_backcolor[vera_layer_set_backcolor::layer#4] = vera_layer_set_backcolor::color#4 -- pbuc1_derefidx_vbuxx=vbuaa 
    sta vera_layer_backcolor,x
    jmp __breturn
    // vera_layer_set_backcolor::@return
  __breturn:
    // [202] return 
    rts
}
  // vera_layer_set_mapbase
// Set the base of the map layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - mapbase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// vera_layer_set_mapbase(byte register(A) layer, byte register(X) mapbase)
vera_layer_set_mapbase: {
    .label addr = $44
    // [204] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [205] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_mapbase,y
    sta.z addr
    lda vera_layer_mapbase+1,y
    sta.z addr+1
    // [206] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_mapbase::@return
  __breturn:
    // [207] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte register(X) y)
gotoxy: {
    .label __6 = $30
    .label line_offset = $30
    // [209] if(gotoxy::y#7<=conio_screen_height) goto gotoxy::@4 -- vbuxx_le_vbuz1_then_la1 
    lda.z conio_screen_height
    stx.z $ff
    cmp.z $ff
    bcs __b4_from_gotoxy
    // [211] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [211] phi gotoxy::y#10 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // [210] phi from gotoxy to gotoxy::@4 [phi:gotoxy->gotoxy::@4]
  __b4_from_gotoxy:
    jmp __b4
    // gotoxy::@4
  __b4:
    // [211] phi from gotoxy::@4 to gotoxy::@1 [phi:gotoxy::@4->gotoxy::@1]
  __b1_from___b4:
    // [211] phi gotoxy::y#10 = gotoxy::y#7 [phi:gotoxy::@4->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    // [212] if(0<conio_screen_width) goto gotoxy::@2 -- 0_lt_vbuz1_then_la1 
    lda.z conio_screen_width
    bne __b2
    // [213] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
  __b3_from___b1:
    jmp __b3
    // gotoxy::@3
  __b3:
    jmp __b2
    // gotoxy::@2
  __b2:
    // [214] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // [215] conio_cursor_y[conio_screen_layer] = gotoxy::y#10 -- pbuc1_derefidx_vbuz1=vbuxx 
    ldy.z conio_screen_layer
    txa
    sta conio_cursor_y,y
    // [216] gotoxy::$6 = (word)gotoxy::y#10 -- vwuz1=_word_vbuxx 
    txa
    sta.z __6
    lda #0
    sta.z __6+1
    // [217] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift -- vwuz1=vwuz1_rol_vbuz2 
    ldy.z conio_rowshift
    beq !e+
  !:
    asl.z line_offset
    rol.z line_offset+1
    dey
    bne !-
  !e:
    // [218] gotoxy::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [219] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z line_offset
    sta conio_line_text,y
    lda.z line_offset+1
    sta conio_line_text+1,y
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [220] return 
    rts
}
  // memcpy_in_vram
// Copy block of memory (from VRAM to VRAM)
// Copies the values from the location pointed by src to the location pointed by dest.
// The method uses the VERA access ports 0 and 1 to copy data from and to in VRAM.
// - src_bank:  64K VRAM bank number to copy from (0/1).
// - src: pointer to the location to copy from. Note that the address is a 16 bit value!
// - src_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - dest_bank:  64K VRAM bank number to copy to (0/1).
// - dest: pointer to the location to copy to. Note that the address is a 16 bit value!
// - dest_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - num: The number of bytes to copy
// memcpy_in_vram(byte register(Y) dest_bank, void* zp($15) dest, byte* zp($13) src, word zp($17) num)
memcpy_in_vram: {
    .label i = $39
    .label dest = $15
    .label src = $13
    .label num = $17
    // [222] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [223] memcpy_in_vram::$0 = byte0  memcpy_in_vram::src#2 -- vbuaa=_byte0_pvoz1 
    lda.z src
    // [224] *VERA_ADDRX_L = memcpy_in_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [225] memcpy_in_vram::$1 = byte1  memcpy_in_vram::src#2 -- vbuaa=_byte1_pvoz1 
    lda.z src+1
    // [226] *VERA_ADDRX_M = memcpy_in_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [227] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // [228] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    // Select DATA1
    lda #VERA_ADDRSEL
    ora VERA_CTRL
    sta VERA_CTRL
    // [229] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#2 -- vbuaa=_byte0_pvoz1 
    lda.z dest
    // [230] *VERA_ADDRX_L = memcpy_in_vram::$3 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [231] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#2 -- vbuaa=_byte1_pvoz1 
    lda.z dest+1
    // [232] *VERA_ADDRX_M = memcpy_in_vram::$4 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [233] memcpy_in_vram::$5 = VERA_INC_1 | memcpy_in_vram::dest_bank#2 -- vbuaa=vbuc1_bor_vbuyy 
    tya
    ora #VERA_INC_1
    // [234] *VERA_ADDRX_H = memcpy_in_vram::$5 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [235] phi from memcpy_in_vram to memcpy_in_vram::@1 [phi:memcpy_in_vram->memcpy_in_vram::@1]
  __b1_from_memcpy_in_vram:
    // [235] phi memcpy_in_vram::i#2 = 0 [phi:memcpy_in_vram->memcpy_in_vram::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z i
    lda #>0
    sta.z i+1
    jmp __b1
  // Transfer the data
    // memcpy_in_vram::@1
  __b1:
    // [236] if(memcpy_in_vram::i#2<memcpy_in_vram::num#3) goto memcpy_in_vram::@2 -- vwuz1_lt_vwuz2_then_la1 
    lda.z i+1
    cmp.z num+1
    bcc __b2
    bne !+
    lda.z i
    cmp.z num
    bcc __b2
  !:
    jmp __breturn
    // memcpy_in_vram::@return
  __breturn:
    // [237] return 
    rts
    // memcpy_in_vram::@2
  __b2:
    // [238] *VERA_DATA1 = *VERA_DATA0 -- _deref_pbuc1=_deref_pbuc2 
    lda VERA_DATA0
    sta VERA_DATA1
    // [239] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2 -- vwuz1=_inc_vwuz1 
    inc.z i
    bne !+
    inc.z i+1
  !:
    // [235] phi from memcpy_in_vram::@2 to memcpy_in_vram::@1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1]
  __b1_from___b2:
    // [235] phi memcpy_in_vram::i#2 = memcpy_in_vram::i#1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1#0] -- register_copy 
    jmp __b1
}
  // vera_layer_mode_tile
// Set a vera layer in tile mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_depth: The color depth in bits per pixel (BPP), which can be 1, 2, 4 or 8.
// vera_layer_mode_tile(byte zp(6) layer, dword zp(7) mapbase_address, dword zp($b) tilebase_address, word zp($30) mapwidth, word zp($2e) mapheight, byte zp($f) tilewidth, byte zp($10) tileheight)
vera_layer_mode_tile: {
    .label __1 = $32
    .label __6 = $36
    .label __17 = $34
    .label __18 = $35
    .label mapbase_address = 7
    .label tilebase_address = $b
    .label mapwidth = $30
    .label layer = 6
    .label mapheight = $2e
    .label tilewidth = $f
    .label tileheight = $10
    jmp __b1
    // vera_layer_mode_tile::@1
  __b1:
    // [241] if(vera_layer_mode_tile::mapwidth#10==$20) goto vera_layer_mode_tile::@5 -- vwuz1_eq_vbuc1_then_la1 
    lda #$20
    cmp.z mapwidth
    bne !+
    lda.z mapwidth+1
    bne !+
    jmp __b5
  !:
    jmp __b2
    // vera_layer_mode_tile::@2
  __b2:
    // [242] if(vera_layer_mode_tile::mapwidth#10==$40) goto vera_layer_mode_tile::@6 -- vwuz1_eq_vbuc1_then_la1 
    lda #$40
    cmp.z mapwidth
    bne !+
    lda.z mapwidth+1
    bne !+
    jmp __b6
  !:
    jmp __b3
    // vera_layer_mode_tile::@3
  __b3:
    // [243] if(vera_layer_mode_tile::mapwidth#10==$80) goto vera_layer_mode_tile::@7 -- vwuz1_eq_vbuc1_then_la1 
    lda #$80
    cmp.z mapwidth
    bne !+
    lda.z mapwidth+1
    bne !+
    jmp __b7
  !:
    jmp __b4
    // vera_layer_mode_tile::@4
  __b4:
    // [244] if(vera_layer_mode_tile::mapwidth#10!=$100) goto vera_layer_mode_tile::@9 -- vwuz1_neq_vwuc1_then_la1 
    lda.z mapwidth+1
    cmp #>$100
    bne __b9_from___b4
    lda.z mapwidth
    cmp #<$100
    bne __b9_from___b4
    jmp __b8
    // vera_layer_mode_tile::@8
  __b8:
    // [245] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 9 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #9
    ldy.z layer
    sta vera_layer_rowshift,y
    // [246] vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z layer
    asl
    // [247] vera_layer_rowskip[vera_layer_mode_tile::$14] = $200 -- pwuc1_derefidx_vbuaa=vwuc2 
    tay
    lda #<$200
    sta vera_layer_rowskip,y
    lda #>$200
    sta vera_layer_rowskip+1,y
    // [248] phi from vera_layer_mode_tile::@8 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@8->vera_layer_mode_tile::@9]
  __b9_from___b8:
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_256 [phi:vera_layer_mode_tile::@8->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_WIDTH_256
    jmp __b9
    // [248] phi from vera_layer_mode_tile::@4 vera_layer_mode_tile::@5 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@4/vera_layer_mode_tile::@5->vera_layer_mode_tile::@9]
  __b9_from___b4:
  __b9_from___b5:
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_COLOR_DEPTH_1BPP [phi:vera_layer_mode_tile::@4/vera_layer_mode_tile::@5->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_COLOR_DEPTH_1BPP
    jmp __b9
    // vera_layer_mode_tile::@9
  __b9:
    // [249] if(vera_layer_mode_tile::mapheight#10==$20) goto vera_layer_mode_tile::@16 -- vwuz1_eq_vbuc1_then_la1 
    lda #$20
    cmp.z mapheight
    bne !+
    lda.z mapheight+1
    bne !+
    jmp __b16_from___b9
  !:
    jmp __b10
    // vera_layer_mode_tile::@10
  __b10:
    // [250] if(vera_layer_mode_tile::mapheight#10==$40) goto vera_layer_mode_tile::@13 -- vwuz1_eq_vbuc1_then_la1 
    lda #$40
    cmp.z mapheight
    bne !+
    lda.z mapheight+1
    bne !+
    jmp __b13
  !:
    jmp __b11
    // vera_layer_mode_tile::@11
  __b11:
    // [251] if(vera_layer_mode_tile::mapheight#10==$80) goto vera_layer_mode_tile::@14 -- vwuz1_eq_vbuc1_then_la1 
    lda #$80
    cmp.z mapheight
    bne !+
    lda.z mapheight+1
    bne !+
    jmp __b14
  !:
    jmp __b12
    // vera_layer_mode_tile::@12
  __b12:
    // [252] if(vera_layer_mode_tile::mapheight#10!=$100) goto vera_layer_mode_tile::@16 -- vwuz1_neq_vwuc1_then_la1 
    lda.z mapheight+1
    cmp #>$100
    bne __b16_from___b12
    lda.z mapheight
    cmp #<$100
    bne __b16_from___b12
    jmp __b15
    // vera_layer_mode_tile::@15
  __b15:
    // [253] vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_256 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_LAYER_HEIGHT_256
    tax
    // [254] phi from vera_layer_mode_tile::@12 vera_layer_mode_tile::@13 vera_layer_mode_tile::@14 vera_layer_mode_tile::@15 vera_layer_mode_tile::@9 to vera_layer_mode_tile::@16 [phi:vera_layer_mode_tile::@12/vera_layer_mode_tile::@13/vera_layer_mode_tile::@14/vera_layer_mode_tile::@15/vera_layer_mode_tile::@9->vera_layer_mode_tile::@16]
  __b16_from___b12:
  __b16_from___b13:
  __b16_from___b14:
  __b16_from___b15:
  __b16_from___b9:
    // [254] phi vera_layer_mode_tile::config#25 = vera_layer_mode_tile::config#21 [phi:vera_layer_mode_tile::@12/vera_layer_mode_tile::@13/vera_layer_mode_tile::@14/vera_layer_mode_tile::@15/vera_layer_mode_tile::@9->vera_layer_mode_tile::@16#0] -- register_copy 
    jmp __b16
    // vera_layer_mode_tile::@16
  __b16:
    // [255] vera_layer_set_config::layer#0 = vera_layer_mode_tile::layer#10 -- vbuaa=vbuz1 
    lda.z layer
    // [256] vera_layer_set_config::config#0 = vera_layer_mode_tile::config#25
    // [257] call vera_layer_set_config 
    // [561] phi from vera_layer_mode_tile::@16 to vera_layer_set_config [phi:vera_layer_mode_tile::@16->vera_layer_set_config]
  vera_layer_set_config_from___b16:
    // [561] phi vera_layer_set_config::config#2 = vera_layer_set_config::config#0 [phi:vera_layer_mode_tile::@16->vera_layer_set_config#0] -- register_copy 
    // [561] phi vera_layer_set_config::layer#2 = vera_layer_set_config::layer#0 [phi:vera_layer_mode_tile::@16->vera_layer_set_config#1] -- register_copy 
    jsr vera_layer_set_config
    jmp __b23
    // vera_layer_mode_tile::@23
  __b23:
    // [258] vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#10 -- vwuz1=_word0_vduz2 
    lda.z mapbase_address
    sta.z __1
    lda.z mapbase_address+1
    sta.z __1+1
    // [259] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 << 1 -- vbuz1=vbuz2_rol_1 
    lda.z layer
    asl
    sta.z __17
    // [260] vera_mapbase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$1 -- pwuc1_derefidx_vbuz1=vwuz2 
    // mapbase
    ldy.z __17
    lda.z __1
    sta vera_mapbase_offset,y
    lda.z __1+1
    sta vera_mapbase_offset+1,y
    // [261] vera_layer_mode_tile::$2 = byte2  vera_layer_mode_tile::mapbase_address#10 -- vbuaa=_byte2_vduz1 
    lda.z mapbase_address+2
    // [262] vera_mapbase_bank[vera_layer_mode_tile::layer#10] = vera_layer_mode_tile::$2 -- pbuc1_derefidx_vbuz1=vbuaa 
    ldy.z layer
    sta vera_mapbase_bank,y
    // [263] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 << 2 -- vbuz1=vbuz2_rol_2 
    lda.z layer
    asl
    asl
    sta.z __18
    // [264] vera_mapbase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::mapbase_address#10 -- pduc1_derefidx_vbuz1=vduz2 
    ldy.z __18
    lda.z mapbase_address
    sta vera_mapbase_address,y
    lda.z mapbase_address+1
    sta vera_mapbase_address+1,y
    lda.z mapbase_address+2
    sta vera_mapbase_address+2,y
    lda.z mapbase_address+3
    sta vera_mapbase_address+3,y
    // [265] vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#10 >> 1 -- vduz1=vduz1_ror_1 
    lsr.z mapbase_address+3
    ror.z mapbase_address+2
    ror.z mapbase_address+1
    ror.z mapbase_address
    // [266] vera_layer_mode_tile::mapbase#0 = byte1  vera_layer_mode_tile::mapbase_address#0 -- vbuxx=_byte1_vduz1 
    ldx.z mapbase_address+1
    // [267] vera_layer_set_mapbase::layer#0 = vera_layer_mode_tile::layer#10 -- vbuaa=vbuz1 
    lda.z layer
    // [268] vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
    // [269] call vera_layer_set_mapbase 
    // [203] phi from vera_layer_mode_tile::@23 to vera_layer_set_mapbase [phi:vera_layer_mode_tile::@23->vera_layer_set_mapbase]
  vera_layer_set_mapbase_from___b23:
    // [203] phi vera_layer_set_mapbase::mapbase#3 = vera_layer_set_mapbase::mapbase#0 [phi:vera_layer_mode_tile::@23->vera_layer_set_mapbase#0] -- register_copy 
    // [203] phi vera_layer_set_mapbase::layer#3 = vera_layer_set_mapbase::layer#0 [phi:vera_layer_mode_tile::@23->vera_layer_set_mapbase#1] -- register_copy 
    jsr vera_layer_set_mapbase
    jmp __b24
    // vera_layer_mode_tile::@24
  __b24:
    // [270] vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#10 -- vwuz1=_word0_vduz2 
    lda.z tilebase_address
    sta.z __6
    lda.z tilebase_address+1
    sta.z __6+1
    // [271] vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6 -- pwuc1_derefidx_vbuz1=vwuz2 
    // tilebase
    ldy.z __17
    lda.z __6
    sta vera_tilebase_offset,y
    lda.z __6+1
    sta vera_tilebase_offset+1,y
    // [272] vera_layer_mode_tile::$7 = byte2  vera_layer_mode_tile::tilebase_address#10 -- vbuaa=_byte2_vduz1 
    lda.z tilebase_address+2
    // [273] vera_tilebase_bank[vera_layer_mode_tile::layer#10] = vera_layer_mode_tile::$7 -- pbuc1_derefidx_vbuz1=vbuaa 
    ldy.z layer
    sta vera_tilebase_bank,y
    // [274] vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#10 -- pduc1_derefidx_vbuz1=vduz2 
    ldy.z __18
    lda.z tilebase_address
    sta vera_tilebase_address,y
    lda.z tilebase_address+1
    sta vera_tilebase_address+1,y
    lda.z tilebase_address+2
    sta vera_tilebase_address+2,y
    lda.z tilebase_address+3
    sta vera_tilebase_address+3,y
    // [275] vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#10 >> 1 -- vduz1=vduz1_ror_1 
    lsr.z tilebase_address+3
    ror.z tilebase_address+2
    ror.z tilebase_address+1
    ror.z tilebase_address
    // [276] vera_layer_mode_tile::tilebase#0 = byte1  vera_layer_mode_tile::tilebase_address#0 -- vbuaa=_byte1_vduz1 
    lda.z tilebase_address+1
    // [277] vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK -- vbuxx=vbuaa_band_vbuc1 
    and #VERA_LAYER_TILEBASE_MASK
    tax
    // [278] if(vera_layer_mode_tile::tilewidth#10==8) goto vera_layer_mode_tile::@19 -- vbuz1_eq_vbuc1_then_la1 
    lda #8
    cmp.z tilewidth
    beq __b19_from___b24
    jmp __b17
    // vera_layer_mode_tile::@17
  __b17:
    // [279] if(vera_layer_mode_tile::tilewidth#10!=$10) goto vera_layer_mode_tile::@19 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z tilewidth
    bne __b19_from___b17
    jmp __b18
    // vera_layer_mode_tile::@18
  __b18:
    // [280] vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_16 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_TILEBASE_WIDTH_16
    tax
    // [281] phi from vera_layer_mode_tile::@17 vera_layer_mode_tile::@18 vera_layer_mode_tile::@24 to vera_layer_mode_tile::@19 [phi:vera_layer_mode_tile::@17/vera_layer_mode_tile::@18/vera_layer_mode_tile::@24->vera_layer_mode_tile::@19]
  __b19_from___b17:
  __b19_from___b18:
  __b19_from___b24:
    // [281] phi vera_layer_mode_tile::tilebase#12 = vera_layer_mode_tile::tilebase#1 [phi:vera_layer_mode_tile::@17/vera_layer_mode_tile::@18/vera_layer_mode_tile::@24->vera_layer_mode_tile::@19#0] -- register_copy 
    jmp __b19
    // vera_layer_mode_tile::@19
  __b19:
    // [282] if(vera_layer_mode_tile::tileheight#10==8) goto vera_layer_mode_tile::@22 -- vbuz1_eq_vbuc1_then_la1 
    lda #8
    cmp.z tileheight
    beq __b22_from___b19
    jmp __b20
    // vera_layer_mode_tile::@20
  __b20:
    // [283] if(vera_layer_mode_tile::tileheight#10!=$10) goto vera_layer_mode_tile::@22 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z tileheight
    bne __b22_from___b20
    jmp __b21
    // vera_layer_mode_tile::@21
  __b21:
    // [284] vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_16 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_TILEBASE_HEIGHT_16
    tax
    // [285] phi from vera_layer_mode_tile::@19 vera_layer_mode_tile::@20 vera_layer_mode_tile::@21 to vera_layer_mode_tile::@22 [phi:vera_layer_mode_tile::@19/vera_layer_mode_tile::@20/vera_layer_mode_tile::@21->vera_layer_mode_tile::@22]
  __b22_from___b19:
  __b22_from___b20:
  __b22_from___b21:
    // [285] phi vera_layer_mode_tile::tilebase#10 = vera_layer_mode_tile::tilebase#12 [phi:vera_layer_mode_tile::@19/vera_layer_mode_tile::@20/vera_layer_mode_tile::@21->vera_layer_mode_tile::@22#0] -- register_copy 
    jmp __b22
    // vera_layer_mode_tile::@22
  __b22:
    // [286] vera_layer_set_tilebase::layer#0 = vera_layer_mode_tile::layer#10 -- vbuaa=vbuz1 
    lda.z layer
    // [287] vera_layer_set_tilebase::tilebase#0 = vera_layer_mode_tile::tilebase#10
    // [288] call vera_layer_set_tilebase 
    // [566] phi from vera_layer_mode_tile::@22 to vera_layer_set_tilebase [phi:vera_layer_mode_tile::@22->vera_layer_set_tilebase]
  vera_layer_set_tilebase_from___b22:
    // [566] phi vera_layer_set_tilebase::tilebase#2 = vera_layer_set_tilebase::tilebase#0 [phi:vera_layer_mode_tile::@22->vera_layer_set_tilebase#0] -- register_copy 
    // [566] phi vera_layer_set_tilebase::layer#2 = vera_layer_set_tilebase::layer#0 [phi:vera_layer_mode_tile::@22->vera_layer_set_tilebase#1] -- register_copy 
    jsr vera_layer_set_tilebase
    jmp __breturn
    // vera_layer_mode_tile::@return
  __breturn:
    // [289] return 
    rts
    // vera_layer_mode_tile::@14
  __b14:
    // [290] vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_128 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_LAYER_HEIGHT_128
    tax
    jmp __b16_from___b14
    // vera_layer_mode_tile::@13
  __b13:
    // [291] vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_64 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_LAYER_HEIGHT_64
    tax
    jmp __b16_from___b13
    // vera_layer_mode_tile::@7
  __b7:
    // [292] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 8 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #8
    ldy.z layer
    sta vera_layer_rowshift,y
    // [293] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z layer
    asl
    // [294] vera_layer_rowskip[vera_layer_mode_tile::$13] = $100 -- pwuc1_derefidx_vbuaa=vwuc2 
    tay
    lda #<$100
    sta vera_layer_rowskip,y
    lda #>$100
    sta vera_layer_rowskip+1,y
    // [248] phi from vera_layer_mode_tile::@7 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@7->vera_layer_mode_tile::@9]
  __b9_from___b7:
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_128 [phi:vera_layer_mode_tile::@7->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_WIDTH_128
    jmp __b9
    // vera_layer_mode_tile::@6
  __b6:
    // [295] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 7 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #7
    ldy.z layer
    sta vera_layer_rowshift,y
    // [296] vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z layer
    asl
    // [297] vera_layer_rowskip[vera_layer_mode_tile::$12] = $80 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #$80
    sta vera_layer_rowskip,y
    lda #0
    sta vera_layer_rowskip+1,y
    // [248] phi from vera_layer_mode_tile::@6 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@6->vera_layer_mode_tile::@9]
  __b9_from___b6:
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_64 [phi:vera_layer_mode_tile::@6->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_WIDTH_64
    jmp __b9
    // vera_layer_mode_tile::@5
  __b5:
    // [298] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 6 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #6
    ldy.z layer
    sta vera_layer_rowshift,y
    // [299] vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z layer
    asl
    // [300] vera_layer_rowskip[vera_layer_mode_tile::$11] = $40 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #$40
    sta vera_layer_rowskip,y
    lda #0
    sta vera_layer_rowskip+1,y
    jmp __b9_from___b5
}
  // vera_layer_mode_bitmap
// Set a vera layer in bitmap mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_mode: The color mode, which can be 16 or 256.
vera_layer_mode_bitmap: {
    .const layer = 0
    .const bitmap_address = 0
    // config
    .const config = VERA_LAYER_COLOR_DEPTH_8BPP|VERA_LAYER_CONFIG_MODE_BITMAP
    .const tilebase = 0
    jmp __b1
    // vera_layer_mode_bitmap::@1
  __b1:
    // [302] *vera_tilebase_offset = 0 -- _deref_pwuc1=vwuc2 
    // tilebase
    lda #<0
    sta vera_tilebase_offset
    lda #>0
    sta vera_tilebase_offset+1
    // [303] *vera_tilebase_bank = 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta vera_tilebase_bank
    // [304] *vera_tilebase_address = vera_layer_mode_bitmap::bitmap_address#1 -- _deref_pduc1=vduc2 
    lda #<bitmap_address
    sta vera_tilebase_address
    lda #>bitmap_address
    sta vera_tilebase_address+1
    lda #<bitmap_address>>$10
    sta vera_tilebase_address+2
    lda #>bitmap_address>>$10
    sta vera_tilebase_address+3
    jmp vera_display_set_scale_double1
    // vera_layer_mode_bitmap::vera_display_set_scale_double1
  vera_display_set_scale_double1:
    // [305] *VERA_DC_HSCALE = $40 -- _deref_pbuc1=vbuc2 
    lda #$40
    sta VERA_DC_HSCALE
    // [306] *VERA_DC_VSCALE = $40 -- _deref_pbuc1=vbuc2 
    lda #$40
    sta VERA_DC_VSCALE
    // [307] phi from vera_layer_mode_bitmap::vera_display_set_scale_double1 to vera_layer_mode_bitmap::@2 [phi:vera_layer_mode_bitmap::vera_display_set_scale_double1->vera_layer_mode_bitmap::@2]
  __b2_from_vera_display_set_scale_double1:
    jmp __b2
    // vera_layer_mode_bitmap::@2
  __b2:
    // [308] call vera_layer_set_config 
    // [561] phi from vera_layer_mode_bitmap::@2 to vera_layer_set_config [phi:vera_layer_mode_bitmap::@2->vera_layer_set_config]
  vera_layer_set_config_from___b2:
    // [561] phi vera_layer_set_config::config#2 = vera_layer_mode_bitmap::config#11 [phi:vera_layer_mode_bitmap::@2->vera_layer_set_config#0] -- vbuxx=vbuc1 
    ldx #config
    // [561] phi vera_layer_set_config::layer#2 = vera_layer_mode_bitmap::layer#0 [phi:vera_layer_mode_bitmap::@2->vera_layer_set_config#1] -- vbuaa=vbuc1 
    lda #layer
    jsr vera_layer_set_config
    // [309] phi from vera_layer_mode_bitmap::@2 to vera_layer_mode_bitmap::@3 [phi:vera_layer_mode_bitmap::@2->vera_layer_mode_bitmap::@3]
  __b3_from___b2:
    jmp __b3
    // vera_layer_mode_bitmap::@3
  __b3:
    // [310] call vera_layer_set_tilebase 
    // [566] phi from vera_layer_mode_bitmap::@3 to vera_layer_set_tilebase [phi:vera_layer_mode_bitmap::@3->vera_layer_set_tilebase]
  vera_layer_set_tilebase_from___b3:
    // [566] phi vera_layer_set_tilebase::tilebase#2 = vera_layer_mode_bitmap::tilebase#1 [phi:vera_layer_mode_bitmap::@3->vera_layer_set_tilebase#0] -- vbuxx=vbuc1 
    ldx #tilebase
    // [566] phi vera_layer_set_tilebase::layer#2 = vera_layer_mode_bitmap::layer#0 [phi:vera_layer_mode_bitmap::@3->vera_layer_set_tilebase#1] -- vbuaa=vbuc1 
    lda #layer
    jsr vera_layer_set_tilebase
    jmp __breturn
    // vera_layer_mode_bitmap::@return
  __breturn:
    // [311] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label __1 = $38
    .label line_text = $13
    .label color = $38
    // [312] clrscr::line_text#0 = (byte*)CONIO_SCREEN_TEXT#104 -- pbuz1=pbuz2 
    lda.z CONIO_SCREEN_TEXT
    sta.z line_text
    lda.z CONIO_SCREEN_TEXT+1
    sta.z line_text+1
    // [313] vera_layer_get_backcolor::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [314] call vera_layer_get_backcolor 
    jsr vera_layer_get_backcolor
    // [315] vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1
    jmp __b7
    // clrscr::@7
  __b7:
    // [316] clrscr::$0 = vera_layer_get_backcolor::return#0
    // [317] clrscr::$1 = clrscr::$0 << 4 -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta.z __1
    // [318] vera_layer_get_textcolor::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [319] call vera_layer_get_textcolor 
    jsr vera_layer_get_textcolor
    // [320] vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1
    jmp __b8
    // clrscr::@8
  __b8:
    // [321] clrscr::$2 = vera_layer_get_textcolor::return#0
    // [322] clrscr::color#0 = clrscr::$1 | clrscr::$2 -- vbuz1=vbuz1_bor_vbuaa 
    ora.z color
    sta.z color
    // [323] phi from clrscr::@8 to clrscr::@1 [phi:clrscr::@8->clrscr::@1]
  __b1_from___b8:
    // [323] phi clrscr::line_text#2 = clrscr::line_text#0 [phi:clrscr::@8->clrscr::@1#0] -- register_copy 
    // [323] phi clrscr::l#2 = 0 [phi:clrscr::@8->clrscr::@1#1] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // clrscr::@1
  __b1:
    // [324] if(clrscr::l#2<conio_height) goto clrscr::@2 -- vbuxx_lt_vwuz1_then_la1 
    lda.z conio_height+1
    bne __b2
    cpx.z conio_height
    bcc __b2
    jmp __b3
    // clrscr::@3
  __b3:
    // [325] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // [326] conio_cursor_y[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_y,y
    // [327] clrscr::$9 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [328] conio_line_text[clrscr::$9] = 0 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #0
    sta conio_line_text,y
    lda #0
    sta conio_line_text+1,y
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [329] return 
    rts
    // clrscr::@2
  __b2:
    // [330] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [331] clrscr::$5 = byte0  clrscr::line_text#2 -- vbuaa=_byte0_pbuz1 
    lda.z line_text
    // [332] *VERA_ADDRX_L = clrscr::$5 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [333] clrscr::$6 = byte1  clrscr::line_text#2 -- vbuaa=_byte1_pbuz1 
    lda.z line_text+1
    // [334] *VERA_ADDRX_M = clrscr::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [335] clrscr::$7 = CONIO_SCREEN_BANK#15 | VERA_INC_1 -- vbuaa=vbuz1_bor_vbuc1 
    lda #VERA_INC_1
    ora.z CONIO_SCREEN_BANK
    // [336] *VERA_ADDRX_H = clrscr::$7 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [337] phi from clrscr::@2 to clrscr::@4 [phi:clrscr::@2->clrscr::@4]
  __b4_from___b2:
    // [337] phi clrscr::c#2 = 0 [phi:clrscr::@2->clrscr::@4#0] -- vbuyy=vbuc1 
    ldy #0
    jmp __b4
    // clrscr::@4
  __b4:
    // [338] if(clrscr::c#2<conio_width) goto clrscr::@5 -- vbuyy_lt_vwuz1_then_la1 
    lda.z conio_width+1
    bne __b5
    cpy.z conio_width
    bcc __b5
    jmp __b6
    // clrscr::@6
  __b6:
    // [339] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip -- pbuz1=pbuz1_plus_vwuz2 
    lda.z line_text
    clc
    adc.z conio_rowskip
    sta.z line_text
    lda.z line_text+1
    adc.z conio_rowskip+1
    sta.z line_text+1
    // [340] clrscr::l#1 = ++ clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [323] phi from clrscr::@6 to clrscr::@1 [phi:clrscr::@6->clrscr::@1]
  __b1_from___b6:
    // [323] phi clrscr::line_text#2 = clrscr::line_text#1 [phi:clrscr::@6->clrscr::@1#0] -- register_copy 
    // [323] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@6->clrscr::@1#1] -- register_copy 
    jmp __b1
    // clrscr::@5
  __b5:
    // [341] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    lda #' '
    sta VERA_DATA0
    // [342] *VERA_DATA0 = clrscr::color#0 -- _deref_pbuc1=vbuz1 
    lda.z color
    sta VERA_DATA0
    // [343] clrscr::c#1 = ++ clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [337] phi from clrscr::@5 to clrscr::@4 [phi:clrscr::@5->clrscr::@4]
  __b4_from___b5:
    // [337] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@5->clrscr::@4#0] -- register_copy 
    jmp __b4
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(const byte* zp($3b) s)
cputs: {
    .label s = $3b
    // [345] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
  __b1_from_cputs:
  __b1_from___b2:
    // [345] phi cputs::s#8 = cputs::s#9 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
    // cputs::@1
  __b1:
    // [346] cputs::c#1 = *cputs::s#8 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [347] cputs::s#0 = ++ cputs::s#8 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [348] if(0!=cputs::c#1) goto cputs::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [349] return 
    rts
    // cputs::@2
  __b2:
    // [350] cputc::c#0 = cputs::c#1 -- vbuz1=vbuaa 
    sta.z cputc.c
    // [351] call cputc 
    jsr cputc
    jmp __b1_from___b2
}
  // bitmap_init
// Initialize the bitmap plotter tables for a specific bitmap
bitmap_init: {
    .const layer = 0
    .const address = 0
    .label __7 = $39
    .label __10 = $42
    .label __13 = $4c
    .label __23 = $3b
    .label __24 = $46
    .label __25 = $4e
    .label __26 = $56
    .label __28 = $66
    .label vera_layer_get_color_depth1_config = $6a
    .label bitmask = $38
    .label x = $15
    .label hdelta = $64
    .label yoffs = $5a
    .label y = $17
    .label __29 = $3b
    .label __30 = $3e
    .label __31 = $40
    .label __32 = $46
    .label __33 = $48
    .label __34 = $4a
    .label __35 = $4e
    .label __36 = $50
    .label __37 = $54
    .label __38 = $56
    .label __39 = $58
    .label __40 = $5e
    .label __41 = $66
    // [352] __bitmap_address = bitmap_init::address#0 -- vduz1=vduc1 
    lda #<address
    sta.z __bitmap_address
    lda #>address
    sta.z __bitmap_address+1
    lda #<address>>$10
    sta.z __bitmap_address+2
    lda #>address>>$10
    sta.z __bitmap_address+3
    // [353] __bitmap_layer = bitmap_init::layer#0 -- vbuz1=vbuc1 
    lda #layer
    sta.z __bitmap_layer
    // [354] bitmap_init::vera_layer_get_color_depth1_layer#0 = __bitmap_layer -- vbuaa=vbuz1 
    lda.z __bitmap_layer
    jmp vera_layer_get_color_depth1
    // bitmap_init::vera_layer_get_color_depth1
  vera_layer_get_color_depth1:
    // [355] bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [356] bitmap_init::vera_layer_get_color_depth1_config#0 = vera_layer_config[bitmap_init::vera_layer_get_color_depth1_$1] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_color_depth1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_color_depth1_config+1
    // [357] bitmap_init::vera_layer_get_color_depth1_$0 = *bitmap_init::vera_layer_get_color_depth1_config#0 & VERA_LAYER_COLOR_DEPTH_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_COLOR_DEPTH_MASK
    ldy #0
    and (vera_layer_get_color_depth1_config),y
    // [358] bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0
    jmp vera_layer_get_color_depth1___breturn
    // bitmap_init::vera_layer_get_color_depth1_@return
  vera_layer_get_color_depth1___breturn:
    // [359] bitmap_init::vera_layer_get_color_depth1_return#1 = bitmap_init::vera_layer_get_color_depth1_return#0
    jmp __b16
    // bitmap_init::@16
  __b16:
    // [360] bitmap_init::$0 = bitmap_init::vera_layer_get_color_depth1_return#1
    // [361] __bitmap_color_depth = bitmap_init::$0 -- vbuz1=vbuaa 
    sta.z __bitmap_color_depth
    // [362] call vera_display_get_hscale 
    // [606] phi from bitmap_init::@16 to vera_display_get_hscale [phi:bitmap_init::@16->vera_display_get_hscale]
  vera_display_get_hscale_from___b16:
    jsr vera_display_get_hscale
    // [363] vera_display_get_hscale::return#2 = vera_display_get_hscale::return#0
    jmp __b17
    // bitmap_init::@17
  __b17:
    // [364] bitmap_init::$1 = vera_display_get_hscale::return#2
    // [365] __bitmap_hscale = bitmap_init::$1 -- vbuz1=vbuxx 
    stx.z __bitmap_hscale
    // [366] call vera_display_get_vscale 
    // [613] phi from bitmap_init::@17 to vera_display_get_vscale [phi:bitmap_init::@17->vera_display_get_vscale]
  vera_display_get_vscale_from___b17:
    jsr vera_display_get_vscale
    // [367] vera_display_get_vscale::return#2 = vera_display_get_vscale::return#0
    jmp __b18
    // bitmap_init::@18
  __b18:
    // [368] bitmap_init::$2 = vera_display_get_vscale::return#2
    // [369] __bitmap_vscale = bitmap_init::$2 -- vbuz1=vbuxx 
    // Returns 1 when 640 and 2 when 320.
    stx.z __bitmap_vscale
    // [370] bitmap_init::bitmask#0 = bitmasks[__bitmap_color_depth] -- vbuz1=pbuc1_derefidx_vbuz2 
    // Returns 1 when 480 and 2 when 240.
    ldy.z __bitmap_color_depth
    lda bitmasks,y
    sta.z bitmask
    // [371] bitmap_init::bitshift#0 = bitshifts[__bitmap_color_depth] -- vbsxx=pbsc1_derefidx_vbuz1 
    ldy.z __bitmap_color_depth
    ldx bitshifts,y
    // [372] phi from bitmap_init::@18 to bitmap_init::@1 [phi:bitmap_init::@18->bitmap_init::@1]
  __b1_from___b18:
    // [372] phi bitmap_init::bitshift#10 = bitmap_init::bitshift#0 [phi:bitmap_init::@18->bitmap_init::@1#0] -- register_copy 
    // [372] phi bitmap_init::bitmask#10 = bitmap_init::bitmask#0 [phi:bitmap_init::@18->bitmap_init::@1#1] -- register_copy 
    // [372] phi bitmap_init::x#10 = 0 [phi:bitmap_init::@18->bitmap_init::@1#2] -- vwuz1=vwuc1 
    lda #<0
    sta.z x
    lda #>0
    sta.z x+1
    jmp __b1
    // [372] phi from bitmap_init::@7 to bitmap_init::@1 [phi:bitmap_init::@7->bitmap_init::@1]
  __b1_from___b7:
    // [372] phi bitmap_init::bitshift#10 = bitmap_init::bitshift#14 [phi:bitmap_init::@7->bitmap_init::@1#0] -- register_copy 
    // [372] phi bitmap_init::bitmask#10 = bitmap_init::bitmask#16 [phi:bitmap_init::@7->bitmap_init::@1#1] -- register_copy 
    // [372] phi bitmap_init::x#10 = bitmap_init::x#1 [phi:bitmap_init::@7->bitmap_init::@1#2] -- register_copy 
    jmp __b1
    // bitmap_init::@1
  __b1:
    // [373] if(__bitmap_color_depth!=0) goto bitmap_init::@2 -- vbuz1_neq_0_then_la1 
    lda.z __bitmap_color_depth
    bne __b2_from___b1
    jmp __b8
    // bitmap_init::@8
  __b8:
    // [374] bitmap_init::$7 = bitmap_init::x#10 >> 3 -- vwuz1=vwuz2_ror_3 
    lda.z x+1
    lsr
    sta.z __7+1
    lda.z x
    ror
    sta.z __7
    lsr.z __7+1
    ror.z __7
    lsr.z __7+1
    ror.z __7
    // [375] bitmap_init::$23 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __23
    lda.z x+1
    rol
    sta.z __23+1
    // [376] bitmap_init::$29 = __bitmap_plot_x + bitmap_init::$23 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __29
    adc #<__bitmap_plot_x
    sta.z __29
    lda.z __29+1
    adc #>__bitmap_plot_x
    sta.z __29+1
    // [377] *bitmap_init::$29 = bitmap_init::$7 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z __7
    sta (__29),y
    iny
    lda.z __7+1
    sta (__29),y
    // [378] bitmap_init::$30 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __30
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __30+1
    // [379] *bitmap_init::$30 = bitmap_init::bitmask#10 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__30),y
    // [380] bitmap_init::$31 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __31
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __31+1
    // [381] *bitmap_init::$31 = (byte)bitmap_init::bitshift#10 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (__31),y
    // [382] bitmap_init::bitshift#1 = bitmap_init::bitshift#10 - 1 -- vbsxx=vbsxx_minus_1 
    dex
    // [383] bitmap_init::bitmask#1 = bitmap_init::bitmask#10 >> 1 -- vbuz1=vbuz1_ror_1 
    lsr.z bitmask
    // [384] phi from bitmap_init::@1 bitmap_init::@8 to bitmap_init::@2 [phi:bitmap_init::@1/bitmap_init::@8->bitmap_init::@2]
  __b2_from___b1:
  __b2_from___b8:
    // [384] phi bitmap_init::bitshift#11 = bitmap_init::bitshift#10 [phi:bitmap_init::@1/bitmap_init::@8->bitmap_init::@2#0] -- register_copy 
    // [384] phi bitmap_init::bitmask#11 = bitmap_init::bitmask#10 [phi:bitmap_init::@1/bitmap_init::@8->bitmap_init::@2#1] -- register_copy 
    jmp __b2
    // bitmap_init::@2
  __b2:
    // [385] if(__bitmap_color_depth!=1) goto bitmap_init::@3 -- vbuz1_neq_vbuc1_then_la1 
    lda #1
    cmp.z __bitmap_color_depth
    bne __b3_from___b2
    jmp __b9
    // bitmap_init::@9
  __b9:
    // [386] bitmap_init::$10 = bitmap_init::x#10 >> 2 -- vwuz1=vwuz2_ror_2 
    lda.z x+1
    lsr
    sta.z __10+1
    lda.z x
    ror
    sta.z __10
    lsr.z __10+1
    ror.z __10
    // [387] bitmap_init::$24 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __24
    lda.z x+1
    rol
    sta.z __24+1
    // [388] bitmap_init::$32 = __bitmap_plot_x + bitmap_init::$24 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __32
    adc #<__bitmap_plot_x
    sta.z __32
    lda.z __32+1
    adc #>__bitmap_plot_x
    sta.z __32+1
    // [389] *bitmap_init::$32 = bitmap_init::$10 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z __10
    sta (__32),y
    iny
    lda.z __10+1
    sta (__32),y
    // [390] bitmap_init::$33 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __33
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __33+1
    // [391] *bitmap_init::$33 = bitmap_init::bitmask#11 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__33),y
    // [392] bitmap_init::$34 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __34
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __34+1
    // [393] *bitmap_init::$34 = (byte)bitmap_init::bitshift#11 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (__34),y
    // [394] bitmap_init::bitshift#2 = bitmap_init::bitshift#11 - 2 -- vbsxx=vbsxx_minus_2 
    dex
    dex
    // [395] bitmap_init::bitmask#2 = bitmap_init::bitmask#11 >> 2 -- vbuz1=vbuz1_ror_2 
    lda.z bitmask
    lsr
    lsr
    sta.z bitmask
    // [396] phi from bitmap_init::@2 bitmap_init::@9 to bitmap_init::@3 [phi:bitmap_init::@2/bitmap_init::@9->bitmap_init::@3]
  __b3_from___b2:
  __b3_from___b9:
    // [396] phi bitmap_init::bitshift#12 = bitmap_init::bitshift#11 [phi:bitmap_init::@2/bitmap_init::@9->bitmap_init::@3#0] -- register_copy 
    // [396] phi bitmap_init::bitmask#12 = bitmap_init::bitmask#11 [phi:bitmap_init::@2/bitmap_init::@9->bitmap_init::@3#1] -- register_copy 
    jmp __b3
    // bitmap_init::@3
  __b3:
    // [397] if(__bitmap_color_depth!=2) goto bitmap_init::@4 -- vbuz1_neq_vbuc1_then_la1 
    lda #2
    cmp.z __bitmap_color_depth
    bne __b4_from___b3
    jmp __b10
    // bitmap_init::@10
  __b10:
    // [398] bitmap_init::$13 = bitmap_init::x#10 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z x+1
    lsr
    sta.z __13+1
    lda.z x
    ror
    sta.z __13
    // [399] bitmap_init::$25 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __25
    lda.z x+1
    rol
    sta.z __25+1
    // [400] bitmap_init::$35 = __bitmap_plot_x + bitmap_init::$25 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __35
    adc #<__bitmap_plot_x
    sta.z __35
    lda.z __35+1
    adc #>__bitmap_plot_x
    sta.z __35+1
    // [401] *bitmap_init::$35 = bitmap_init::$13 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z __13
    sta (__35),y
    iny
    lda.z __13+1
    sta (__35),y
    // [402] bitmap_init::$36 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __36
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __36+1
    // [403] *bitmap_init::$36 = bitmap_init::bitmask#12 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__36),y
    // [404] bitmap_init::$37 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __37
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __37+1
    // [405] *bitmap_init::$37 = (byte)bitmap_init::bitshift#12 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (__37),y
    // [406] bitmap_init::bitshift#3 = bitmap_init::bitshift#12 - 4 -- vbsxx=vbsxx_minus_vbsc1 
    txa
    sec
    sbc #4
    tax
    // [407] bitmap_init::bitmask#3 = bitmap_init::bitmask#12 >> 4 -- vbuz1=vbuz1_ror_4 
    lda.z bitmask
    lsr
    lsr
    lsr
    lsr
    sta.z bitmask
    // [408] phi from bitmap_init::@10 bitmap_init::@3 to bitmap_init::@4 [phi:bitmap_init::@10/bitmap_init::@3->bitmap_init::@4]
  __b4_from___b10:
  __b4_from___b3:
    // [408] phi bitmap_init::bitmask#13 = bitmap_init::bitmask#3 [phi:bitmap_init::@10/bitmap_init::@3->bitmap_init::@4#0] -- register_copy 
    // [408] phi bitmap_init::bitshift#13 = bitmap_init::bitshift#3 [phi:bitmap_init::@10/bitmap_init::@3->bitmap_init::@4#1] -- register_copy 
    jmp __b4
    // bitmap_init::@4
  __b4:
    // [409] if(__bitmap_color_depth!=3) goto bitmap_init::@5 -- vbuz1_neq_vbuc1_then_la1 
    lda #3
    cmp.z __bitmap_color_depth
    bne __b5
    jmp __b11
    // bitmap_init::@11
  __b11:
    // [410] bitmap_init::$26 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __26
    lda.z x+1
    rol
    sta.z __26+1
    // [411] bitmap_init::$38 = __bitmap_plot_x + bitmap_init::$26 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __38
    adc #<__bitmap_plot_x
    sta.z __38
    lda.z __38+1
    adc #>__bitmap_plot_x
    sta.z __38+1
    // [412] *bitmap_init::$38 = bitmap_init::x#10 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z x
    sta (__38),y
    iny
    lda.z x+1
    sta (__38),y
    // [413] bitmap_init::$39 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __39
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __39+1
    // [414] *bitmap_init::$39 = bitmap_init::bitmask#13 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__39),y
    // [415] bitmap_init::$40 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __40
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __40+1
    // [416] *bitmap_init::$40 = (byte)bitmap_init::bitshift#13 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (__40),y
    jmp __b5
    // bitmap_init::@5
  __b5:
    // [417] if(bitmap_init::bitshift#13>=0) goto bitmap_init::@6 -- vbsxx_ge_0_then_la1 
    cpx #0
    bpl __b6_from___b5
    jmp __b12
    // bitmap_init::@12
  __b12:
    // [418] bitmap_init::bitshift#4 = bitshifts[__bitmap_color_depth] -- vbsxx=pbsc1_derefidx_vbuz1 
    ldy.z __bitmap_color_depth
    ldx bitshifts,y
    // [419] phi from bitmap_init::@12 bitmap_init::@5 to bitmap_init::@6 [phi:bitmap_init::@12/bitmap_init::@5->bitmap_init::@6]
  __b6_from___b12:
  __b6_from___b5:
    // [419] phi bitmap_init::bitshift#14 = bitmap_init::bitshift#4 [phi:bitmap_init::@12/bitmap_init::@5->bitmap_init::@6#0] -- register_copy 
    jmp __b6
    // bitmap_init::@6
  __b6:
    // [420] if(bitmap_init::bitmask#13!=0) goto bitmap_init::@7 -- vbuz1_neq_0_then_la1 
    lda.z bitmask
    bne __b7_from___b6
    jmp __b13
    // bitmap_init::@13
  __b13:
    // [421] bitmap_init::bitmask#4 = bitmasks[__bitmap_color_depth] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __bitmap_color_depth
    lda bitmasks,y
    sta.z bitmask
    // [422] phi from bitmap_init::@13 bitmap_init::@6 to bitmap_init::@7 [phi:bitmap_init::@13/bitmap_init::@6->bitmap_init::@7]
  __b7_from___b13:
  __b7_from___b6:
    // [422] phi bitmap_init::bitmask#16 = bitmap_init::bitmask#4 [phi:bitmap_init::@13/bitmap_init::@6->bitmap_init::@7#0] -- register_copy 
    jmp __b7
    // bitmap_init::@7
  __b7:
    // [423] bitmap_init::x#1 = ++ bitmap_init::x#10 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // [424] if(bitmap_init::x#1!=$280) goto bitmap_init::@1 -- vwuz1_neq_vwuc1_then_la1 
    lda.z x+1
    cmp #>$280
    bne __b1_from___b7
    lda.z x
    cmp #<$280
    bne __b1_from___b7
    jmp __b14
    // bitmap_init::@14
  __b14:
    // [425] bitmap_init::$3 = __bitmap_color_depth << 2 -- vbuaa=vbuz1_rol_2 
    lda.z __bitmap_color_depth
    asl
    asl
    // [426] bitmap_init::$4 = bitmap_init::$3 + __bitmap_hscale -- vbuaa=vbuaa_plus_vbuz1 
    clc
    adc.z __bitmap_hscale
    // [427] bitmap_init::$27 = bitmap_init::$4 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [428] bitmap_init::hdelta#0 = hdeltas[bitmap_init::$27] -- vwuz1=pwuc1_derefidx_vbuaa 
    // This sets the right delta to skip a whole line based on the scale, depending on the color depth.
    tay
    lda hdeltas,y
    sta.z hdelta
    lda hdeltas+1,y
    sta.z hdelta+1
    // [429] bitmap_init::yoffs#0 = __bitmap_address -- vduz1=vduz2 
    // We start at the bitmap address; The plot_y contains the bitmap address embedded so we know where a line starts.
    lda.z __bitmap_address
    sta.z yoffs
    lda.z __bitmap_address+1
    sta.z yoffs+1
    lda.z __bitmap_address+2
    sta.z yoffs+2
    lda.z __bitmap_address+3
    sta.z yoffs+3
    // [430] phi from bitmap_init::@14 to bitmap_init::@15 [phi:bitmap_init::@14->bitmap_init::@15]
  __b15_from___b14:
    // [430] phi bitmap_init::yoffs#2 = bitmap_init::yoffs#0 [phi:bitmap_init::@14->bitmap_init::@15#0] -- register_copy 
    // [430] phi bitmap_init::y#2 = 0 [phi:bitmap_init::@14->bitmap_init::@15#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z y
    lda #>0
    sta.z y+1
    jmp __b15
    // [430] phi from bitmap_init::@15 to bitmap_init::@15 [phi:bitmap_init::@15->bitmap_init::@15]
  __b15_from___b15:
    // [430] phi bitmap_init::yoffs#2 = bitmap_init::yoffs#1 [phi:bitmap_init::@15->bitmap_init::@15#0] -- register_copy 
    // [430] phi bitmap_init::y#2 = bitmap_init::y#1 [phi:bitmap_init::@15->bitmap_init::@15#1] -- register_copy 
    jmp __b15
    // bitmap_init::@15
  __b15:
    // [431] bitmap_init::$28 = bitmap_init::y#2 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z y
    asl
    sta.z __28
    lda.z y+1
    rol
    sta.z __28+1
    asl.z __28
    rol.z __28+1
    // [432] bitmap_init::$41 = __bitmap_plot_y + bitmap_init::$28 -- pduz1=pduc1_plus_vwuz1 
    clc
    lda.z __41
    adc #<__bitmap_plot_y
    sta.z __41
    lda.z __41+1
    adc #>__bitmap_plot_y
    sta.z __41+1
    // [433] *bitmap_init::$41 = bitmap_init::yoffs#2 -- _deref_pduz1=vduz2 
    ldy #0
    lda.z yoffs
    sta (__41),y
    iny
    lda.z yoffs+1
    sta (__41),y
    iny
    lda.z yoffs+2
    sta (__41),y
    iny
    lda.z yoffs+3
    sta (__41),y
    // [434] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + bitmap_init::hdelta#0 -- vduz1=vduz1_plus_vwuz2 
    lda.z yoffs
    clc
    adc.z hdelta
    sta.z yoffs
    lda.z yoffs+1
    adc.z hdelta+1
    sta.z yoffs+1
    lda.z yoffs+2
    adc #0
    sta.z yoffs+2
    lda.z yoffs+3
    adc #0
    sta.z yoffs+3
    // [435] bitmap_init::y#1 = ++ bitmap_init::y#2 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // [436] if(bitmap_init::y#1!=$1e0) goto bitmap_init::@15 -- vwuz1_neq_vwuc1_then_la1 
    lda.z y+1
    cmp #>$1e0
    bne __b15_from___b15
    lda.z y
    cmp #<$1e0
    bne __b15_from___b15
    jmp __breturn
    // bitmap_init::@return
  __breturn:
    // [437] return 
    rts
}
  // bitmap_clear
// Clear all graphics on the bitmap
bitmap_clear: {
    .label vdelta = $39
    .label hdelta = $15
    .label count = $5a
    .label vdest = $3b
    // [438] bitmap_clear::$6 = __bitmap_vscale << 1 -- vbuaa=vbuz1_rol_1 
    lda.z __bitmap_vscale
    asl
    // [439] bitmap_clear::vdelta#0 = vdeltas[bitmap_clear::$6] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vdeltas,y
    sta.z vdelta
    lda vdeltas+1,y
    sta.z vdelta+1
    // [440] bitmap_clear::$0 = __bitmap_color_depth << 2 -- vbuaa=vbuz1_rol_2 
    lda.z __bitmap_color_depth
    asl
    asl
    // [441] bitmap_clear::$1 = bitmap_clear::$0 + __bitmap_hscale -- vbuaa=vbuaa_plus_vbuz1 
    clc
    adc.z __bitmap_hscale
    // [442] bitmap_clear::$7 = bitmap_clear::$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [443] bitmap_clear::hdelta#0 = hdeltas[bitmap_clear::$7] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda hdeltas,y
    sta.z hdelta
    lda hdeltas+1,y
    sta.z hdelta+1
    // [444] mul16u::a#0 = bitmap_clear::hdelta#0
    // [445] mul16u::b#0 = bitmap_clear::vdelta#0
    // [446] call mul16u 
    jsr mul16u
    // [447] mul16u::return#0 = mul16u::res#2
    jmp __b1
    // bitmap_clear::@1
  __b1:
    // [448] bitmap_clear::count#0 = mul16u::return#0
    // [449] bitmap_clear::vbank#0 = byte2  __bitmap_address -- vbuxx=_byte2_vduz1 
    ldx.z __bitmap_address+2
    // [450] bitmap_clear::vdest#0 = word0  __bitmap_address -- vwuz1=_word0_vduz2 
    lda.z __bitmap_address
    sta.z vdest
    lda.z __bitmap_address+1
    sta.z vdest+1
    // [451] memset_vram::vbank#0 = bitmap_clear::vbank#0
    // [452] memset_vram::vdest#0 = (void*)bitmap_clear::vdest#0
    // [453] memset_vram::num#0 = bitmap_clear::count#0
    // [454] call memset_vram 
    jsr memset_vram
    jmp __breturn
    // bitmap_clear::@return
  __breturn:
    // [455] return 
    rts
}
  // kbhit
// Return true if there's a key waiting, return false if not
kbhit: {
    .label chptr = ch
    .label IN_DEV = $28a
    // Current input device number
    .label GETIN = $ffe4
    .label ch = $3d
    // [456] kbhit::ch = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z ch
    // kickasm( uses kbhit::chptr uses kbhit::IN_DEV uses kbhit::GETIN) {{ jsr _kbhit         bne L3          jmp continue1          .var via1 = $9f60                  //VIA#1         .var d1pra = via1+1      _kbhit:         ldy     d1pra       // The count of keys pressed is stored in RAM bank 0.         stz     d1pra       // Set d1pra to zero to access RAM bank 0.         lda     $A00A       // Get number of characters from this address in the ROM of the CX16 (ROM 38).         sty     d1pra       // Set d1pra to previous value.         rts      L3:         ldy     IN_DEV          // Save current input device         stz     IN_DEV          // Keyboard         phy         jsr     GETIN           // Read char, and return in .A         ply         sta     chptr           // Store the character read in ch         sty     IN_DEV          // Restore input device         ldx     #>$0000         rts      continue1:         nop       }}
    // CBM GETIN API
    jsr _kbhit
        bne L3

        jmp continue1

        .var via1 = $9f60                  //VIA#1
        .var d1pra = via1+1

    _kbhit:
        ldy     d1pra       // The count of keys pressed is stored in RAM bank 0.
        stz     d1pra       // Set d1pra to zero to access RAM bank 0.
        lda     $A00A       // Get number of characters from this address in the ROM of the CX16 (ROM 38).
        sty     d1pra       // Set d1pra to previous value.
        rts

    L3:
        ldy     IN_DEV          // Save current input device
        stz     IN_DEV          // Keyboard
        phy
        jsr     GETIN           // Read char, and return in .A
        ply
        sta     chptr           // Store the character read in ch
        sty     IN_DEV          // Restore input device
        ldx     #>$0000
        rts

    continue1:
        nop
     
    // [458] kbhit::return#0 = kbhit::ch -- vbuaa=vbuz1 
    lda.z ch
    jmp __breturn
    // kbhit::@return
  __breturn:
    // [459] kbhit::return#1 = kbhit::return#0
    // [460] return 
    rts
}
  // bitmap_line
// Draw a line on the bitmap
// bitmap_line(word zp(3) x0, word zp($39) x1, word zp($3b) y0, word zp($15) y1, byte register(X) c)
bitmap_line: {
    .label xd = $17
    .label yd = $6a
    .label yd_1 = $3e
    .label x0 = 3
    .label x1 = $39
    .label y0 = $3b
    .label y1 = $15
    // [462] if(bitmap_line::x0#10<bitmap_line::x1#10) goto bitmap_line::@1 -- vwuz1_lt_vwuz2_then_la1 
    lda.z x0+1
    cmp.z x1+1
    bcc __b1
    bne !+
    lda.z x0
    cmp.z x1
    bcc __b1
  !:
    jmp __b2
    // bitmap_line::@2
  __b2:
    // [463] bitmap_line::xd#2 = bitmap_line::x0#10 - bitmap_line::x1#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z x0
    sec
    sbc.z x1
    sta.z xd
    lda.z x0+1
    sbc.z x1+1
    sta.z xd+1
    // [464] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@7 -- vwuz1_lt_vwuz2_then_la1 
    lda.z y0+1
    cmp.z y1+1
    bcc __b7
    bne !+
    lda.z y0
    cmp.z y1
    bcc __b7
  !:
    jmp __b3
    // bitmap_line::@3
  __b3:
    // [465] bitmap_line::yd#2 = bitmap_line::y0#10 - bitmap_line::y1#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y0
    sec
    sbc.z y1
    sta.z yd_1
    lda.z y0+1
    sbc.z y1+1
    sta.z yd_1+1
    // [466] if(bitmap_line::yd#2<bitmap_line::xd#2) goto bitmap_line::@8 -- vwuz1_lt_vwuz2_then_la1 
    lda.z yd_1+1
    cmp.z xd+1
    bcc __b8
    bne !+
    lda.z yd_1
    cmp.z xd
    bcc __b8
  !:
    jmp __b4
    // bitmap_line::@4
  __b4:
    // [467] bitmap_line_ydxi::y#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxi.y
    lda.z y1+1
    sta.z bitmap_line_ydxi.y+1
    // [468] bitmap_line_ydxi::x#0 = bitmap_line::x1#10
    // [469] bitmap_line_ydxi::y1#0 = bitmap_line::y0#10
    // [470] bitmap_line_ydxi::yd#0 = bitmap_line::yd#2
    // [471] bitmap_line_ydxi::xd#0 = bitmap_line::xd#2
    // [472] bitmap_line_ydxi::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxi.c
    // [473] call bitmap_line_ydxi 
    // [642] phi from bitmap_line::@4 to bitmap_line_ydxi [phi:bitmap_line::@4->bitmap_line_ydxi]
  bitmap_line_ydxi_from___b4:
    // [642] phi bitmap_line_ydxi::y1#6 = bitmap_line_ydxi::y1#0 [phi:bitmap_line::@4->bitmap_line_ydxi#0] -- register_copy 
    // [642] phi bitmap_line_ydxi::yd#5 = bitmap_line_ydxi::yd#0 [phi:bitmap_line::@4->bitmap_line_ydxi#1] -- register_copy 
    // [642] phi bitmap_line_ydxi::c#3 = bitmap_line_ydxi::c#0 [phi:bitmap_line::@4->bitmap_line_ydxi#2] -- register_copy 
    // [642] phi bitmap_line_ydxi::y#6 = bitmap_line_ydxi::y#0 [phi:bitmap_line::@4->bitmap_line_ydxi#3] -- register_copy 
    // [642] phi bitmap_line_ydxi::x#5 = bitmap_line_ydxi::x#0 [phi:bitmap_line::@4->bitmap_line_ydxi#4] -- register_copy 
    // [642] phi bitmap_line_ydxi::xd#2 = bitmap_line_ydxi::xd#0 [phi:bitmap_line::@4->bitmap_line_ydxi#5] -- register_copy 
    jsr bitmap_line_ydxi
    jmp __breturn
    // bitmap_line::@return
  __breturn:
    // [474] return 
    rts
    // bitmap_line::@8
  __b8:
    // [475] bitmap_line_xdyi::x#0 = bitmap_line::x1#10 -- vwuz1=vwuz2 
    lda.z x1
    sta.z bitmap_line_xdyi.x
    lda.z x1+1
    sta.z bitmap_line_xdyi.x+1
    // [476] bitmap_line_xdyi::y#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_xdyi.y
    lda.z y1+1
    sta.z bitmap_line_xdyi.y+1
    // [477] bitmap_line_xdyi::x1#0 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyi.x1
    lda.z x0+1
    sta.z bitmap_line_xdyi.x1+1
    // [478] bitmap_line_xdyi::xd#0 = bitmap_line::xd#2
    // [479] bitmap_line_xdyi::yd#0 = bitmap_line::yd#2
    // [480] bitmap_line_xdyi::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyi.c
    // [481] call bitmap_line_xdyi 
    // [658] phi from bitmap_line::@8 to bitmap_line_xdyi [phi:bitmap_line::@8->bitmap_line_xdyi]
  bitmap_line_xdyi_from___b8:
    // [658] phi bitmap_line_xdyi::x1#6 = bitmap_line_xdyi::x1#0 [phi:bitmap_line::@8->bitmap_line_xdyi#0] -- register_copy 
    // [658] phi bitmap_line_xdyi::xd#5 = bitmap_line_xdyi::xd#0 [phi:bitmap_line::@8->bitmap_line_xdyi#1] -- register_copy 
    // [658] phi bitmap_line_xdyi::c#3 = bitmap_line_xdyi::c#0 [phi:bitmap_line::@8->bitmap_line_xdyi#2] -- register_copy 
    // [658] phi bitmap_line_xdyi::y#5 = bitmap_line_xdyi::y#0 [phi:bitmap_line::@8->bitmap_line_xdyi#3] -- register_copy 
    // [658] phi bitmap_line_xdyi::x#6 = bitmap_line_xdyi::x#0 [phi:bitmap_line::@8->bitmap_line_xdyi#4] -- register_copy 
    // [658] phi bitmap_line_xdyi::yd#2 = bitmap_line_xdyi::yd#0 [phi:bitmap_line::@8->bitmap_line_xdyi#5] -- register_copy 
    jsr bitmap_line_xdyi
    jmp __breturn
    // bitmap_line::@7
  __b7:
    // [482] bitmap_line::yd#1 = bitmap_line::y1#10 - bitmap_line::y0#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y1
    sec
    sbc.z y0
    sta.z yd
    lda.z y1+1
    sbc.z y0+1
    sta.z yd+1
    // [483] if(bitmap_line::yd#1<bitmap_line::xd#2) goto bitmap_line::@9 -- vwuz1_lt_vwuz2_then_la1 
    lda.z yd+1
    cmp.z xd+1
    bcc __b9
    bne !+
    lda.z yd
    cmp.z xd
    bcc __b9
  !:
    jmp __b10
    // bitmap_line::@10
  __b10:
    // [484] bitmap_line_ydxd::y#0 = bitmap_line::y0#10 -- vwuz1=vwuz2 
    lda.z y0
    sta.z bitmap_line_ydxd.y
    lda.z y0+1
    sta.z bitmap_line_ydxd.y+1
    // [485] bitmap_line_ydxd::x#0 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_ydxd.x
    lda.z x0+1
    sta.z bitmap_line_ydxd.x+1
    // [486] bitmap_line_ydxd::y1#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxd.y1
    lda.z y1+1
    sta.z bitmap_line_ydxd.y1+1
    // [487] bitmap_line_ydxd::yd#0 = bitmap_line::yd#1
    // [488] bitmap_line_ydxd::xd#0 = bitmap_line::xd#2
    // [489] bitmap_line_ydxd::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxd.c
    // [490] call bitmap_line_ydxd 
    // [674] phi from bitmap_line::@10 to bitmap_line_ydxd [phi:bitmap_line::@10->bitmap_line_ydxd]
  bitmap_line_ydxd_from___b10:
    // [674] phi bitmap_line_ydxd::y1#6 = bitmap_line_ydxd::y1#0 [phi:bitmap_line::@10->bitmap_line_ydxd#0] -- register_copy 
    // [674] phi bitmap_line_ydxd::yd#5 = bitmap_line_ydxd::yd#0 [phi:bitmap_line::@10->bitmap_line_ydxd#1] -- register_copy 
    // [674] phi bitmap_line_ydxd::c#3 = bitmap_line_ydxd::c#0 [phi:bitmap_line::@10->bitmap_line_ydxd#2] -- register_copy 
    // [674] phi bitmap_line_ydxd::y#7 = bitmap_line_ydxd::y#0 [phi:bitmap_line::@10->bitmap_line_ydxd#3] -- register_copy 
    // [674] phi bitmap_line_ydxd::x#5 = bitmap_line_ydxd::x#0 [phi:bitmap_line::@10->bitmap_line_ydxd#4] -- register_copy 
    // [674] phi bitmap_line_ydxd::xd#2 = bitmap_line_ydxd::xd#0 [phi:bitmap_line::@10->bitmap_line_ydxd#5] -- register_copy 
    jsr bitmap_line_ydxd
    jmp __breturn
    // bitmap_line::@9
  __b9:
    // [491] bitmap_line_xdyd::x#0 = bitmap_line::x1#10 -- vwuz1=vwuz2 
    lda.z x1
    sta.z bitmap_line_xdyd.x
    lda.z x1+1
    sta.z bitmap_line_xdyd.x+1
    // [492] bitmap_line_xdyd::y#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_xdyd.y
    lda.z y1+1
    sta.z bitmap_line_xdyd.y+1
    // [493] bitmap_line_xdyd::x1#0 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyd.x1
    lda.z x0+1
    sta.z bitmap_line_xdyd.x1+1
    // [494] bitmap_line_xdyd::xd#0 = bitmap_line::xd#2
    // [495] bitmap_line_xdyd::yd#0 = bitmap_line::yd#1
    // [496] bitmap_line_xdyd::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyd.c
    // [497] call bitmap_line_xdyd 
    // [690] phi from bitmap_line::@9 to bitmap_line_xdyd [phi:bitmap_line::@9->bitmap_line_xdyd]
  bitmap_line_xdyd_from___b9:
    // [690] phi bitmap_line_xdyd::x1#6 = bitmap_line_xdyd::x1#0 [phi:bitmap_line::@9->bitmap_line_xdyd#0] -- register_copy 
    // [690] phi bitmap_line_xdyd::xd#5 = bitmap_line_xdyd::xd#0 [phi:bitmap_line::@9->bitmap_line_xdyd#1] -- register_copy 
    // [690] phi bitmap_line_xdyd::c#3 = bitmap_line_xdyd::c#0 [phi:bitmap_line::@9->bitmap_line_xdyd#2] -- register_copy 
    // [690] phi bitmap_line_xdyd::y#5 = bitmap_line_xdyd::y#0 [phi:bitmap_line::@9->bitmap_line_xdyd#3] -- register_copy 
    // [690] phi bitmap_line_xdyd::x#6 = bitmap_line_xdyd::x#0 [phi:bitmap_line::@9->bitmap_line_xdyd#4] -- register_copy 
    // [690] phi bitmap_line_xdyd::yd#2 = bitmap_line_xdyd::yd#0 [phi:bitmap_line::@9->bitmap_line_xdyd#5] -- register_copy 
    jsr bitmap_line_xdyd
    jmp __breturn
    // bitmap_line::@1
  __b1:
    // [498] bitmap_line::xd#1 = bitmap_line::x1#10 - bitmap_line::x0#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z x1
    sec
    sbc.z x0
    sta.z xd
    lda.z x1+1
    sbc.z x0+1
    sta.z xd+1
    // [499] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@11 -- vwuz1_lt_vwuz2_then_la1 
    lda.z y0+1
    cmp.z y1+1
    bcc __b11
    bne !+
    lda.z y0
    cmp.z y1
    bcc __b11
  !:
    jmp __b5
    // bitmap_line::@5
  __b5:
    // [500] bitmap_line::yd#10 = bitmap_line::y0#10 - bitmap_line::y1#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y0
    sec
    sbc.z y1
    sta.z yd
    lda.z y0+1
    sbc.z y1+1
    sta.z yd+1
    // [501] if(bitmap_line::yd#10<bitmap_line::xd#1) goto bitmap_line::@12 -- vwuz1_lt_vwuz2_then_la1 
    lda.z yd+1
    cmp.z xd+1
    bcc __b12
    bne !+
    lda.z yd
    cmp.z xd
    bcc __b12
  !:
    jmp __b6
    // bitmap_line::@6
  __b6:
    // [502] bitmap_line_ydxd::y#1 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxd.y
    lda.z y1+1
    sta.z bitmap_line_ydxd.y+1
    // [503] bitmap_line_ydxd::x#1 = bitmap_line::x1#10
    // [504] bitmap_line_ydxd::y1#1 = bitmap_line::y0#10
    // [505] bitmap_line_ydxd::yd#1 = bitmap_line::yd#10
    // [506] bitmap_line_ydxd::xd#1 = bitmap_line::xd#1
    // [507] bitmap_line_ydxd::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxd.c
    // [508] call bitmap_line_ydxd 
    // [674] phi from bitmap_line::@6 to bitmap_line_ydxd [phi:bitmap_line::@6->bitmap_line_ydxd]
  bitmap_line_ydxd_from___b6:
    // [674] phi bitmap_line_ydxd::y1#6 = bitmap_line_ydxd::y1#1 [phi:bitmap_line::@6->bitmap_line_ydxd#0] -- register_copy 
    // [674] phi bitmap_line_ydxd::yd#5 = bitmap_line_ydxd::yd#1 [phi:bitmap_line::@6->bitmap_line_ydxd#1] -- register_copy 
    // [674] phi bitmap_line_ydxd::c#3 = bitmap_line_ydxd::c#1 [phi:bitmap_line::@6->bitmap_line_ydxd#2] -- register_copy 
    // [674] phi bitmap_line_ydxd::y#7 = bitmap_line_ydxd::y#1 [phi:bitmap_line::@6->bitmap_line_ydxd#3] -- register_copy 
    // [674] phi bitmap_line_ydxd::x#5 = bitmap_line_ydxd::x#1 [phi:bitmap_line::@6->bitmap_line_ydxd#4] -- register_copy 
    // [674] phi bitmap_line_ydxd::xd#2 = bitmap_line_ydxd::xd#1 [phi:bitmap_line::@6->bitmap_line_ydxd#5] -- register_copy 
    jsr bitmap_line_ydxd
    jmp __breturn
    // bitmap_line::@12
  __b12:
    // [509] bitmap_line_xdyd::x#1 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyd.x
    lda.z x0+1
    sta.z bitmap_line_xdyd.x+1
    // [510] bitmap_line_xdyd::y#1 = bitmap_line::y0#10
    // [511] bitmap_line_xdyd::x1#1 = bitmap_line::x1#10
    // [512] bitmap_line_xdyd::xd#1 = bitmap_line::xd#1
    // [513] bitmap_line_xdyd::yd#1 = bitmap_line::yd#10
    // [514] bitmap_line_xdyd::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyd.c
    // [515] call bitmap_line_xdyd 
    // [690] phi from bitmap_line::@12 to bitmap_line_xdyd [phi:bitmap_line::@12->bitmap_line_xdyd]
  bitmap_line_xdyd_from___b12:
    // [690] phi bitmap_line_xdyd::x1#6 = bitmap_line_xdyd::x1#1 [phi:bitmap_line::@12->bitmap_line_xdyd#0] -- register_copy 
    // [690] phi bitmap_line_xdyd::xd#5 = bitmap_line_xdyd::xd#1 [phi:bitmap_line::@12->bitmap_line_xdyd#1] -- register_copy 
    // [690] phi bitmap_line_xdyd::c#3 = bitmap_line_xdyd::c#1 [phi:bitmap_line::@12->bitmap_line_xdyd#2] -- register_copy 
    // [690] phi bitmap_line_xdyd::y#5 = bitmap_line_xdyd::y#1 [phi:bitmap_line::@12->bitmap_line_xdyd#3] -- register_copy 
    // [690] phi bitmap_line_xdyd::x#6 = bitmap_line_xdyd::x#1 [phi:bitmap_line::@12->bitmap_line_xdyd#4] -- register_copy 
    // [690] phi bitmap_line_xdyd::yd#2 = bitmap_line_xdyd::yd#1 [phi:bitmap_line::@12->bitmap_line_xdyd#5] -- register_copy 
    jsr bitmap_line_xdyd
    jmp __breturn
    // bitmap_line::@11
  __b11:
    // [516] bitmap_line::yd#11 = bitmap_line::y1#10 - bitmap_line::y0#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y1
    sec
    sbc.z y0
    sta.z yd_1
    lda.z y1+1
    sbc.z y0+1
    sta.z yd_1+1
    // [517] if(bitmap_line::yd#11<bitmap_line::xd#1) goto bitmap_line::@13 -- vwuz1_lt_vwuz2_then_la1 
    lda.z yd_1+1
    cmp.z xd+1
    bcc __b13
    bne !+
    lda.z yd_1
    cmp.z xd
    bcc __b13
  !:
    jmp __b14
    // bitmap_line::@14
  __b14:
    // [518] bitmap_line_ydxi::y#1 = bitmap_line::y0#10 -- vwuz1=vwuz2 
    lda.z y0
    sta.z bitmap_line_ydxi.y
    lda.z y0+1
    sta.z bitmap_line_ydxi.y+1
    // [519] bitmap_line_ydxi::x#1 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_ydxi.x
    lda.z x0+1
    sta.z bitmap_line_ydxi.x+1
    // [520] bitmap_line_ydxi::y1#1 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxi.y1
    lda.z y1+1
    sta.z bitmap_line_ydxi.y1+1
    // [521] bitmap_line_ydxi::yd#1 = bitmap_line::yd#11
    // [522] bitmap_line_ydxi::xd#1 = bitmap_line::xd#1
    // [523] bitmap_line_ydxi::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxi.c
    // [524] call bitmap_line_ydxi 
    // [642] phi from bitmap_line::@14 to bitmap_line_ydxi [phi:bitmap_line::@14->bitmap_line_ydxi]
  bitmap_line_ydxi_from___b14:
    // [642] phi bitmap_line_ydxi::y1#6 = bitmap_line_ydxi::y1#1 [phi:bitmap_line::@14->bitmap_line_ydxi#0] -- register_copy 
    // [642] phi bitmap_line_ydxi::yd#5 = bitmap_line_ydxi::yd#1 [phi:bitmap_line::@14->bitmap_line_ydxi#1] -- register_copy 
    // [642] phi bitmap_line_ydxi::c#3 = bitmap_line_ydxi::c#1 [phi:bitmap_line::@14->bitmap_line_ydxi#2] -- register_copy 
    // [642] phi bitmap_line_ydxi::y#6 = bitmap_line_ydxi::y#1 [phi:bitmap_line::@14->bitmap_line_ydxi#3] -- register_copy 
    // [642] phi bitmap_line_ydxi::x#5 = bitmap_line_ydxi::x#1 [phi:bitmap_line::@14->bitmap_line_ydxi#4] -- register_copy 
    // [642] phi bitmap_line_ydxi::xd#2 = bitmap_line_ydxi::xd#1 [phi:bitmap_line::@14->bitmap_line_ydxi#5] -- register_copy 
    jsr bitmap_line_ydxi
    jmp __breturn
    // bitmap_line::@13
  __b13:
    // [525] bitmap_line_xdyi::x#1 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyi.x
    lda.z x0+1
    sta.z bitmap_line_xdyi.x+1
    // [526] bitmap_line_xdyi::y#1 = bitmap_line::y0#10
    // [527] bitmap_line_xdyi::x1#1 = bitmap_line::x1#10
    // [528] bitmap_line_xdyi::xd#1 = bitmap_line::xd#1
    // [529] bitmap_line_xdyi::yd#1 = bitmap_line::yd#11
    // [530] bitmap_line_xdyi::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyi.c
    // [531] call bitmap_line_xdyi 
    // [658] phi from bitmap_line::@13 to bitmap_line_xdyi [phi:bitmap_line::@13->bitmap_line_xdyi]
  bitmap_line_xdyi_from___b13:
    // [658] phi bitmap_line_xdyi::x1#6 = bitmap_line_xdyi::x1#1 [phi:bitmap_line::@13->bitmap_line_xdyi#0] -- register_copy 
    // [658] phi bitmap_line_xdyi::xd#5 = bitmap_line_xdyi::xd#1 [phi:bitmap_line::@13->bitmap_line_xdyi#1] -- register_copy 
    // [658] phi bitmap_line_xdyi::c#3 = bitmap_line_xdyi::c#1 [phi:bitmap_line::@13->bitmap_line_xdyi#2] -- register_copy 
    // [658] phi bitmap_line_xdyi::y#5 = bitmap_line_xdyi::y#1 [phi:bitmap_line::@13->bitmap_line_xdyi#3] -- register_copy 
    // [658] phi bitmap_line_xdyi::x#6 = bitmap_line_xdyi::x#1 [phi:bitmap_line::@13->bitmap_line_xdyi#4] -- register_copy 
    // [658] phi bitmap_line_xdyi::yd#2 = bitmap_line_xdyi::yd#1 [phi:bitmap_line::@13->bitmap_line_xdyi#5] -- register_copy 
    jsr bitmap_line_xdyi
    jmp __breturn
}
  // rand
// Returns a pseudo-random number in the range of 0 to RAND_MAX (65535)
// Uses an xorshift pseudorandom number generator that hits all different values
// Information https://en.wikipedia.org/wiki/Xorshift
// Source http://www.retroprogramming.com/2017/07/xorshift-pseudorandom-numbers-in-z80.html
rand: {
    .label __0 = $3e
    .label __1 = $40
    .label __2 = $42
    .label return = $13
    // [533] rand::$0 = rand_state#13 << 7 -- vwuz1=vwuz2_rol_7 
    lda.z rand_state+1
    lsr
    lda.z rand_state
    ror
    sta.z __0+1
    lda #0
    ror
    sta.z __0
    // [534] rand_state#0 = rand_state#13 ^ rand::$0 -- vwuz1=vwuz1_bxor_vwuz2 
    lda.z rand_state
    eor.z __0
    sta.z rand_state
    lda.z rand_state+1
    eor.z __0+1
    sta.z rand_state+1
    // [535] rand::$1 = rand_state#0 >> 9 -- vwuz1=vwuz2_ror_9 
    lda.z rand_state+1
    lsr
    sta.z __1
    lda #0
    sta.z __1+1
    // [536] rand_state#1 = rand_state#0 ^ rand::$1 -- vwuz1=vwuz1_bxor_vwuz2 
    lda.z rand_state
    eor.z __1
    sta.z rand_state
    lda.z rand_state+1
    eor.z __1+1
    sta.z rand_state+1
    // [537] rand::$2 = rand_state#1 << 8 -- vwuz1=vwuz2_rol_8 
    lda.z rand_state
    sta.z __2+1
    lda #0
    sta.z __2
    // [538] rand_state#14 = rand_state#1 ^ rand::$2 -- vwuz1=vwuz1_bxor_vwuz2 
    lda.z rand_state
    eor.z __2
    sta.z rand_state
    lda.z rand_state+1
    eor.z __2+1
    sta.z rand_state+1
    // [539] rand::return#0 = rand_state#14 -- vwuz1=vwuz2 
    lda.z rand_state
    sta.z return
    lda.z rand_state+1
    sta.z return+1
    jmp __breturn
    // rand::@return
  __breturn:
    // [540] return 
    rts
}
  // modr16u
// Performs modulo on two 16 bit unsigned ints and an initial remainder
// Returns the remainder.
// Implemented using simple binary division
// modr16u(word zp($13) dividend, word zp($17) divisor)
modr16u: {
    .label return = $15
    .label dividend = $13
    .label return_1 = $39
    .label return_2 = $3b
    .label divisor = $17
    // [542] divr16u::dividend#1 = modr16u::dividend#4
    // [543] divr16u::divisor#0 = modr16u::divisor#4
    // [544] call divr16u 
    // [706] phi from modr16u to divr16u [phi:modr16u->divr16u]
  divr16u_from_modr16u:
    jsr divr16u
    jmp __b1
    // modr16u::@1
  __b1:
    // [545] modr16u::return#0 = rem16u#0 -- vwuz1=vwuz2 
    lda.z rem16u
    sta.z return
    lda.z rem16u+1
    sta.z return+1
    jmp __breturn
    // modr16u::@return
  __breturn:
    // [546] return 
    rts
}
  // vera_layer_set_text_color_mode
// Set the configuration of the layer text color mode.
// - layer: Value of 0 or 1.
// - color_mode: Specifies the color mode to be VERA_LAYER_CONFIG_16 or VERA_LAYER_CONFIG_256 for text mode.
vera_layer_set_text_color_mode: {
    .label addr = $44
    // [547] vera_layer_set_text_color_mode::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) -- pbuz1=_deref_qbuc1 
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER
    sta.z addr
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER+1
    sta.z addr+1
    // [548] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C -- _deref_pbuz1=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C^$ff
    ldy #0
    and (addr),y
    ldy #0
    sta (addr),y
    // [549] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 -- _deref_pbuz1=_deref_pbuz1 
    ldy #0
    lda (addr),y
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_text_color_mode::@return
  __breturn:
    // [550] return 
    rts
}
  // vera_layer_get_mapbase_bank
// Get the map base bank of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Bank in vera vram.
// vera_layer_get_mapbase_bank(byte register(X) layer)
vera_layer_get_mapbase_bank: {
    // [551] vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_mapbase_bank,x
    jmp __breturn
    // vera_layer_get_mapbase_bank::@return
  __breturn:
    // [552] return 
    rts
}
  // vera_layer_get_mapbase_offset
// Get the map base lower 16-bit address (offset) of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Offset in vera vram of the specified bank.
// vera_layer_get_mapbase_offset(byte register(A) layer)
vera_layer_get_mapbase_offset: {
    .label return = $30
    // [553] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [554] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_mapbase_offset,y
    sta.z return
    lda vera_mapbase_offset+1,y
    sta.z return+1
    jmp __breturn
    // vera_layer_get_mapbase_offset::@return
  __breturn:
    // [555] return 
    rts
}
  // vera_layer_get_rowshift
// Get the bit shift value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Rowshift value to calculate fast from a y value to line offset in tile mode.
// vera_layer_get_rowshift(byte register(X) layer)
vera_layer_get_rowshift: {
    // [556] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_rowshift,x
    jmp __breturn
    // vera_layer_get_rowshift::@return
  __breturn:
    // [557] return 
    rts
}
  // vera_layer_get_rowskip
// Get the value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Skip value to calculate fast from a y value to line offset in tile mode.
// vera_layer_get_rowskip(byte register(A) layer)
vera_layer_get_rowskip: {
    .label return = $30
    // [558] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [559] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_layer_rowskip,y
    sta.z return
    lda vera_layer_rowskip+1,y
    sta.z return+1
    jmp __breturn
    // vera_layer_get_rowskip::@return
  __breturn:
    // [560] return 
    rts
}
  // vera_layer_set_config
// Set the configuration of the layer.
// - layer: Value of 0 or 1.
// - config: Specifies the modes which are specified using T256C / 'Bitmap Mode' / 'Color Depth'.
// vera_layer_set_config(byte register(A) layer, byte register(X) config)
vera_layer_set_config: {
    .label addr = $44
    // [562] vera_layer_set_config::$0 = vera_layer_set_config::layer#2 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [563] vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // [564] *vera_layer_set_config::addr#0 = vera_layer_set_config::config#2 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_config::@return
  __breturn:
    // [565] return 
    rts
}
  // vera_layer_set_tilebase
// Set the base of the tiles for the layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - tilebase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// vera_layer_set_tilebase(byte register(A) layer, byte register(X) tilebase)
vera_layer_set_tilebase: {
    .label addr = $44
    // [567] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [568] vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_tilebase,y
    sta.z addr
    lda vera_layer_tilebase+1,y
    sta.z addr+1
    // [569] *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#2 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_tilebase::@return
  __breturn:
    // [570] return 
    rts
}
  // vera_layer_get_backcolor
// Get the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_get_backcolor(byte register(X) layer)
vera_layer_get_backcolor: {
    // [571] vera_layer_get_backcolor::return#1 = vera_layer_backcolor[vera_layer_get_backcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_backcolor,x
    jmp __breturn
    // vera_layer_get_backcolor::@return
  __breturn:
    // [572] return 
    rts
}
  // vera_layer_get_textcolor
// Get the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_get_textcolor(byte register(X) layer)
vera_layer_get_textcolor: {
    // [573] vera_layer_get_textcolor::return#1 = vera_layer_textcolor[vera_layer_get_textcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_textcolor,x
    jmp __breturn
    // vera_layer_get_textcolor::@return
  __breturn:
    // [574] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($38) c)
cputc: {
    .label __16 = $48
    .label conio_addr = $46
    .label c = $38
    // [575] vera_layer_get_color::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [576] call vera_layer_get_color 
    // [724] phi from cputc to vera_layer_get_color [phi:cputc->vera_layer_get_color]
  vera_layer_get_color_from_cputc:
    // [724] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#0 [phi:cputc->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // [577] vera_layer_get_color::return#0 = vera_layer_get_color::return#3
    jmp __b7
    // cputc::@7
  __b7:
    // [578] cputc::color#0 = vera_layer_get_color::return#0 -- vbuxx=vbuaa 
    tax
    // [579] cputc::$15 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [580] cputc::conio_addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[cputc::$15] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z conio_addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z conio_addr+1
    // [581] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 -- vbuaa=pbuc1_derefidx_vbuz1_rol_1 
    ldy.z conio_screen_layer
    lda conio_cursor_x,y
    asl
    // [582] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 -- pbuz1=pbuz1_plus_vbuaa 
    clc
    adc.z conio_addr
    sta.z conio_addr
    bcc !+
    inc.z conio_addr+1
  !:
    // [583] if(cputc::c#0==' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1_from___b7
    jmp __b2
    // cputc::@2
  __b2:
    // [584] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [585] cputc::$4 = byte0  cputc::conio_addr#1 -- vbuaa=_byte0_pbuz1 
    lda.z conio_addr
    // [586] *VERA_ADDRX_L = cputc::$4 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [587] cputc::$5 = byte1  cputc::conio_addr#1 -- vbuaa=_byte1_pbuz1 
    lda.z conio_addr+1
    // [588] *VERA_ADDRX_M = cputc::$5 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [589] cputc::$6 = CONIO_SCREEN_BANK#15 | VERA_INC_1 -- vbuaa=vbuz1_bor_vbuc1 
    lda #VERA_INC_1
    ora.z CONIO_SCREEN_BANK
    // [590] *VERA_ADDRX_H = cputc::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [591] *VERA_DATA0 = cputc::c#0 -- _deref_pbuc1=vbuz1 
    lda.z c
    sta VERA_DATA0
    // [592] *VERA_DATA0 = cputc::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // [593] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_x,x
    // [594] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] -- vbuaa=pbuc1_derefidx_vbuz1 
    ldy.z conio_screen_layer
    lda conio_scroll_enable,y
    // [595] if(0!=cputc::scroll_enable#0) goto cputc::@5 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b5
    jmp __b3
    // cputc::@3
  __b3:
    // [596] cputc::$16 = (word)conio_cursor_x[conio_screen_layer] -- vwuz1=_word_pbuc1_derefidx_vbuz2 
    ldy.z conio_screen_layer
    lda conio_cursor_x,y
    sta.z __16
    lda #0
    sta.z __16+1
    // [597] if(cputc::$16!=conio_width) goto cputc::@return -- vwuz1_neq_vwuz2_then_la1 
    lda.z __16+1
    cmp.z conio_width+1
    bne __breturn
    lda.z __16
    cmp.z conio_width
    bne __breturn
    // [598] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
  __b4_from___b3:
    jmp __b4
    // cputc::@4
  __b4:
    // [599] call cputln 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [600] return 
    rts
    // cputc::@5
  __b5:
    // [601] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return -- pbuc1_derefidx_vbuz1_neq_vbuz2_then_la1 
    lda.z conio_screen_width
    ldy.z conio_screen_layer
    cmp conio_cursor_x,y
    bne __breturn
    // [602] phi from cputc::@5 to cputc::@6 [phi:cputc::@5->cputc::@6]
  __b6_from___b5:
    jmp __b6
    // cputc::@6
  __b6:
    // [603] call cputln 
    jsr cputln
    jmp __breturn
    // [604] phi from cputc::@7 to cputc::@1 [phi:cputc::@7->cputc::@1]
  __b1_from___b7:
    jmp __b1
    // cputc::@1
  __b1:
    // [605] call cputln 
    jsr cputln
    jmp __breturn
}
  // vera_display_get_hscale
vera_display_get_hscale: {
    .const scale = 0
    // [607] phi from vera_display_get_hscale to vera_display_get_hscale::@1 [phi:vera_display_get_hscale->vera_display_get_hscale::@1]
  __b1_from_vera_display_get_hscale:
    // [607] phi vera_display_get_hscale::s#2 = 1 [phi:vera_display_get_hscale->vera_display_get_hscale::@1#0] -- vbuxx=vbuc1 
    ldx #1
    jmp __b1
    // [607] phi from vera_display_get_hscale::@2 to vera_display_get_hscale::@1 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@1]
  __b1_from___b2:
    // [607] phi vera_display_get_hscale::s#2 = vera_display_get_hscale::s#1 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@1#0] -- register_copy 
    jmp __b1
    // vera_display_get_hscale::@1
  __b1:
    // [608] if(*VERA_DC_HSCALE!=vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]) goto vera_display_get_hscale::@2 -- _deref_pbuc1_neq_pbuc2_derefidx_vbuxx_then_la1 
    lda hscale,x
    cmp VERA_DC_HSCALE
    bne __b2
    // [611] phi from vera_display_get_hscale::@1 to vera_display_get_hscale::@3 [phi:vera_display_get_hscale::@1->vera_display_get_hscale::@3]
  __b3_from___b1:
    // [611] phi vera_display_get_hscale::return#0 = vera_display_get_hscale::s#2 [phi:vera_display_get_hscale::@1->vera_display_get_hscale::@3#0] -- register_copy 
    jmp __b3
    // vera_display_get_hscale::@2
  __b2:
    // [609] vera_display_get_hscale::s#1 = ++ vera_display_get_hscale::s#2 -- vbuxx=_inc_vbuxx 
    inx
    // [610] if(vera_display_get_hscale::s#1!=4) goto vera_display_get_hscale::@1 -- vbuxx_neq_vbuc1_then_la1 
    cpx #4
    bne __b1_from___b2
    // [611] phi from vera_display_get_hscale::@2 to vera_display_get_hscale::@3 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@3]
  __b3_from___b2:
    // [611] phi vera_display_get_hscale::return#0 = vera_display_get_hscale::scale#0 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@3#0] -- vbuxx=vbuc1 
    ldx #scale
    jmp __b3
    // vera_display_get_hscale::@3
  __b3:
    jmp __breturn
    // vera_display_get_hscale::@return
  __breturn:
    // [612] return 
    rts
  .segment Data
    hscale: .byte 0, $80, $40, $20
}
.segment Code
  // vera_display_get_vscale
vera_display_get_vscale: {
    .const scale = 0
    // [614] phi from vera_display_get_vscale to vera_display_get_vscale::@1 [phi:vera_display_get_vscale->vera_display_get_vscale::@1]
  __b1_from_vera_display_get_vscale:
    // [614] phi vera_display_get_vscale::s#2 = 1 [phi:vera_display_get_vscale->vera_display_get_vscale::@1#0] -- vbuxx=vbuc1 
    ldx #1
    jmp __b1
    // [614] phi from vera_display_get_vscale::@2 to vera_display_get_vscale::@1 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@1]
  __b1_from___b2:
    // [614] phi vera_display_get_vscale::s#2 = vera_display_get_vscale::s#1 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@1#0] -- register_copy 
    jmp __b1
    // vera_display_get_vscale::@1
  __b1:
    // [615] if(*VERA_DC_VSCALE!=vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]) goto vera_display_get_vscale::@2 -- _deref_pbuc1_neq_pbuc2_derefidx_vbuxx_then_la1 
    lda vscale,x
    cmp VERA_DC_VSCALE
    bne __b2
    // [618] phi from vera_display_get_vscale::@1 to vera_display_get_vscale::@3 [phi:vera_display_get_vscale::@1->vera_display_get_vscale::@3]
  __b3_from___b1:
    // [618] phi vera_display_get_vscale::return#0 = vera_display_get_vscale::s#2 [phi:vera_display_get_vscale::@1->vera_display_get_vscale::@3#0] -- register_copy 
    jmp __b3
    // vera_display_get_vscale::@2
  __b2:
    // [616] vera_display_get_vscale::s#1 = ++ vera_display_get_vscale::s#2 -- vbuxx=_inc_vbuxx 
    inx
    // [617] if(vera_display_get_vscale::s#1!=4) goto vera_display_get_vscale::@1 -- vbuxx_neq_vbuc1_then_la1 
    cpx #4
    bne __b1_from___b2
    // [618] phi from vera_display_get_vscale::@2 to vera_display_get_vscale::@3 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@3]
  __b3_from___b2:
    // [618] phi vera_display_get_vscale::return#0 = vera_display_get_vscale::scale#0 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@3#0] -- vbuxx=vbuc1 
    ldx #scale
    jmp __b3
    // vera_display_get_vscale::@3
  __b3:
    jmp __breturn
    // vera_display_get_vscale::@return
  __breturn:
    // [619] return 
    rts
  .segment Data
    vscale: .byte 0, $80, $40, $20
}
.segment Code
  // mul16u
// Perform binary multiplication of two unsigned 16-bit unsigned ints into a 32-bit unsigned long
// mul16u(word zp($15) a, word zp($39) b)
mul16u: {
    .label a = $15
    .label b = $39
    .label return = $5a
    .label mb = $60
    .label res = $5a
    // [620] mul16u::mb#0 = (dword)mul16u::b#0 -- vduz1=_dword_vwuz2 
    lda.z b
    sta.z mb
    lda.z b+1
    sta.z mb+1
    lda #0
    sta.z mb+2
    sta.z mb+3
    // [621] phi from mul16u to mul16u::@1 [phi:mul16u->mul16u::@1]
  __b1_from_mul16u:
    // [621] phi mul16u::mb#2 = mul16u::mb#0 [phi:mul16u->mul16u::@1#0] -- register_copy 
    // [621] phi mul16u::res#2 = 0 [phi:mul16u->mul16u::@1#1] -- vduz1=vduc1 
    lda #<0
    sta.z res
    lda #>0
    sta.z res+1
    lda #<0>>$10
    sta.z res+2
    lda #>0>>$10
    sta.z res+3
    // [621] phi mul16u::a#2 = mul16u::a#0 [phi:mul16u->mul16u::@1#2] -- register_copy 
    jmp __b1
    // mul16u::@1
  __b1:
    // [622] if(mul16u::a#2!=0) goto mul16u::@2 -- vwuz1_neq_0_then_la1 
    lda.z a
    ora.z a+1
    bne __b2
    jmp __breturn
    // mul16u::@return
  __breturn:
    // [623] return 
    rts
    // mul16u::@2
  __b2:
    // [624] mul16u::$1 = mul16u::a#2 & 1 -- vbuaa=vwuz1_band_vbuc1 
    lda #1
    and.z a
    // [625] if(mul16u::$1==0) goto mul16u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3_from___b2
    jmp __b4
    // mul16u::@4
  __b4:
    // [626] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 -- vduz1=vduz1_plus_vduz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    lda.z res+2
    adc.z mb+2
    sta.z res+2
    lda.z res+3
    adc.z mb+3
    sta.z res+3
    // [627] phi from mul16u::@2 mul16u::@4 to mul16u::@3 [phi:mul16u::@2/mul16u::@4->mul16u::@3]
  __b3_from___b2:
  __b3_from___b4:
    // [627] phi mul16u::res#6 = mul16u::res#2 [phi:mul16u::@2/mul16u::@4->mul16u::@3#0] -- register_copy 
    jmp __b3
    // mul16u::@3
  __b3:
    // [628] mul16u::a#1 = mul16u::a#2 >> 1 -- vwuz1=vwuz1_ror_1 
    lsr.z a+1
    ror.z a
    // [629] mul16u::mb#1 = mul16u::mb#2 << 1 -- vduz1=vduz1_rol_1 
    asl.z mb
    rol.z mb+1
    rol.z mb+2
    rol.z mb+3
    // [621] phi from mul16u::@3 to mul16u::@1 [phi:mul16u::@3->mul16u::@1]
  __b1_from___b3:
    // [621] phi mul16u::mb#2 = mul16u::mb#1 [phi:mul16u::@3->mul16u::@1#0] -- register_copy 
    // [621] phi mul16u::res#2 = mul16u::res#6 [phi:mul16u::@3->mul16u::@1#1] -- register_copy 
    // [621] phi mul16u::a#2 = mul16u::a#1 [phi:mul16u::@3->mul16u::@1#2] -- register_copy 
    jmp __b1
}
  // memset_vram
// Set block of memory to a value in VRAM.
// Sets num bytes to a value to the memory block pointed to by destination in VRAM.
// - vbank: Which 64K VRAM bank to put data into (0/1)
// - vdest: The destination address in VRAM
// - data: The value to set the vram with.
// - num: The number of bytes to set
// memset_vram(byte register(X) vbank, void* zp($3b) vdest, dword zp($5a) num)
memset_vram: {
    .const data = 0
    .label i = $60
    .label vdest = $3b
    .label num = $5a
    // [630] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [631] memset_vram::$0 = byte0  memset_vram::vdest#0 -- vbuaa=_byte0_pvoz1 
    lda.z vdest
    // [632] *VERA_ADDRX_L = memset_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [633] memset_vram::$1 = byte1  memset_vram::vdest#0 -- vbuaa=_byte1_pvoz1 
    lda.z vdest+1
    // [634] *VERA_ADDRX_M = memset_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [635] memset_vram::$2 = VERA_INC_1 | memset_vram::vbank#0 -- vbuaa=vbuc1_bor_vbuxx 
    txa
    ora #VERA_INC_1
    // [636] *VERA_ADDRX_H = memset_vram::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [637] phi from memset_vram to memset_vram::@1 [phi:memset_vram->memset_vram::@1]
  __b1_from_memset_vram:
    // [637] phi memset_vram::i#2 = 0 [phi:memset_vram->memset_vram::@1#0] -- vduz1=vduc1 
    lda #<0
    sta.z i
    lda #>0
    sta.z i+1
    lda #<0>>$10
    sta.z i+2
    lda #>0>>$10
    sta.z i+3
    jmp __b1
  // Transfer the data
    // memset_vram::@1
  __b1:
    // [638] if(memset_vram::i#2<memset_vram::num#0) goto memset_vram::@2 -- vduz1_lt_vduz2_then_la1 
    lda.z i+3
    cmp.z num+3
    bcc __b2
    bne !+
    lda.z i+2
    cmp.z num+2
    bcc __b2
    bne !+
    lda.z i+1
    cmp.z num+1
    bcc __b2
    bne !+
    lda.z i
    cmp.z num
    bcc __b2
  !:
    jmp __breturn
    // memset_vram::@return
  __breturn:
    // [639] return 
    rts
    // memset_vram::@2
  __b2:
    // [640] *VERA_DATA0 = memset_vram::data#0 -- _deref_pbuc1=vbuc2 
    lda #data
    sta VERA_DATA0
    // [641] memset_vram::i#1 = ++ memset_vram::i#2 -- vduz1=_inc_vduz1 
    inc.z i
    bne !+
    inc.z i+1
    bne !+
    inc.z i+2
    bne !+
    inc.z i+3
  !:
    // [637] phi from memset_vram::@2 to memset_vram::@1 [phi:memset_vram::@2->memset_vram::@1]
  __b1_from___b2:
    // [637] phi memset_vram::i#2 = memset_vram::i#1 [phi:memset_vram::@2->memset_vram::@1#0] -- register_copy 
    jmp __b1
}
  // bitmap_line_ydxi
// bitmap_line_ydxi(word zp($40) y, word zp($39) x, word zp($3b) y1, word zp($3e) yd, word zp($17) xd, byte zp($38) c)
bitmap_line_ydxi: {
    .label __6 = $4a
    .label y = $40
    .label x = $39
    .label y1 = $3b
    .label yd = $3e
    .label xd = $17
    .label c = $38
    .label e = $46
    // [643] bitmap_line_ydxi::e#0 = bitmap_line_ydxi::xd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z xd+1
    lsr
    sta.z e+1
    lda.z xd
    ror
    sta.z e
    // [644] phi from bitmap_line_ydxi bitmap_line_ydxi::@2 to bitmap_line_ydxi::@1 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1]
  __b1_from_bitmap_line_ydxi:
  __b1_from___b2:
    // [644] phi bitmap_line_ydxi::e#3 = bitmap_line_ydxi::e#0 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1#0] -- register_copy 
    // [644] phi bitmap_line_ydxi::y#3 = bitmap_line_ydxi::y#6 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1#1] -- register_copy 
    // [644] phi bitmap_line_ydxi::x#3 = bitmap_line_ydxi::x#5 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1#2] -- register_copy 
    jmp __b1
    // bitmap_line_ydxi::@1
  __b1:
    // [645] bitmap_plot::x#2 = bitmap_line_ydxi::x#3 -- vwuz1=vwuz2 
    lda.z x
    sta.z bitmap_plot.x
    lda.z x+1
    sta.z bitmap_plot.x+1
    // [646] bitmap_plot::y#2 = bitmap_line_ydxi::y#3
    // [647] bitmap_plot::c#3 = bitmap_line_ydxi::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [648] call bitmap_plot 
    // [743] phi from bitmap_line_ydxi::@1 to bitmap_plot [phi:bitmap_line_ydxi::@1->bitmap_plot]
  bitmap_plot_from___b1:
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#3 [phi:bitmap_line_ydxi::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#2 [phi:bitmap_line_ydxi::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#2 [phi:bitmap_line_ydxi::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    jmp __b4
    // bitmap_line_ydxi::@4
  __b4:
    // [649] bitmap_line_ydxi::y#2 = ++ bitmap_line_ydxi::y#3 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // [650] bitmap_line_ydxi::e#1 = bitmap_line_ydxi::e#3 + bitmap_line_ydxi::xd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z xd
    sta.z e
    lda.z e+1
    adc.z xd+1
    sta.z e+1
    // [651] if(bitmap_line_ydxi::yd#5>=bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z e+1
    cmp.z yd+1
    bne !+
    lda.z e
    cmp.z yd
    beq __b2_from___b4
  !:
    bcc __b2_from___b4
    jmp __b3
    // bitmap_line_ydxi::@3
  __b3:
    // [652] bitmap_line_ydxi::x#2 = ++ bitmap_line_ydxi::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // [653] bitmap_line_ydxi::e#2 = bitmap_line_ydxi::e#1 - bitmap_line_ydxi::yd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z yd
    sta.z e
    lda.z e+1
    sbc.z yd+1
    sta.z e+1
    // [654] phi from bitmap_line_ydxi::@3 bitmap_line_ydxi::@4 to bitmap_line_ydxi::@2 [phi:bitmap_line_ydxi::@3/bitmap_line_ydxi::@4->bitmap_line_ydxi::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [654] phi bitmap_line_ydxi::e#6 = bitmap_line_ydxi::e#2 [phi:bitmap_line_ydxi::@3/bitmap_line_ydxi::@4->bitmap_line_ydxi::@2#0] -- register_copy 
    // [654] phi bitmap_line_ydxi::x#6 = bitmap_line_ydxi::x#2 [phi:bitmap_line_ydxi::@3/bitmap_line_ydxi::@4->bitmap_line_ydxi::@2#1] -- register_copy 
    jmp __b2
    // bitmap_line_ydxi::@2
  __b2:
    // [655] bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z y1
    adc #1
    sta.z __6
    lda.z y1+1
    adc #0
    sta.z __6+1
    // [656] if(bitmap_line_ydxi::y#2!=bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z y+1
    cmp.z __6+1
    bne __b1_from___b2
    lda.z y
    cmp.z __6
    bne __b1_from___b2
    jmp __breturn
    // bitmap_line_ydxi::@return
  __breturn:
    // [657] return 
    rts
}
  // bitmap_line_xdyi
// bitmap_line_xdyi(word zp($42) x, word zp($3b) y, word zp($39) x1, word zp($17) xd, word zp($3e) yd, byte zp($38) c)
bitmap_line_xdyi: {
    .label __6 = $4c
    .label x = $42
    .label y = $3b
    .label x1 = $39
    .label xd = $17
    .label yd = $3e
    .label c = $38
    .label e = $46
    // [659] bitmap_line_xdyi::e#0 = bitmap_line_xdyi::yd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z yd+1
    lsr
    sta.z e+1
    lda.z yd
    ror
    sta.z e
    // [660] phi from bitmap_line_xdyi bitmap_line_xdyi::@2 to bitmap_line_xdyi::@1 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1]
  __b1_from_bitmap_line_xdyi:
  __b1_from___b2:
    // [660] phi bitmap_line_xdyi::e#3 = bitmap_line_xdyi::e#0 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1#0] -- register_copy 
    // [660] phi bitmap_line_xdyi::y#3 = bitmap_line_xdyi::y#5 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1#1] -- register_copy 
    // [660] phi bitmap_line_xdyi::x#3 = bitmap_line_xdyi::x#6 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1#2] -- register_copy 
    jmp __b1
    // bitmap_line_xdyi::@1
  __b1:
    // [661] bitmap_plot::x#0 = bitmap_line_xdyi::x#3
    // [662] bitmap_plot::y#0 = bitmap_line_xdyi::y#3 -- vwuz1=vwuz2 
    lda.z y
    sta.z bitmap_plot.y
    lda.z y+1
    sta.z bitmap_plot.y+1
    // [663] bitmap_plot::c#1 = bitmap_line_xdyi::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [664] call bitmap_plot 
    // [743] phi from bitmap_line_xdyi::@1 to bitmap_plot [phi:bitmap_line_xdyi::@1->bitmap_plot]
  bitmap_plot_from___b1:
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#1 [phi:bitmap_line_xdyi::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#0 [phi:bitmap_line_xdyi::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#0 [phi:bitmap_line_xdyi::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    jmp __b4
    // bitmap_line_xdyi::@4
  __b4:
    // [665] bitmap_line_xdyi::x#2 = ++ bitmap_line_xdyi::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // [666] bitmap_line_xdyi::e#1 = bitmap_line_xdyi::e#3 + bitmap_line_xdyi::yd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z yd
    sta.z e
    lda.z e+1
    adc.z yd+1
    sta.z e+1
    // [667] if(bitmap_line_xdyi::xd#5>=bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z e+1
    cmp.z xd+1
    bne !+
    lda.z e
    cmp.z xd
    beq __b2_from___b4
  !:
    bcc __b2_from___b4
    jmp __b3
    // bitmap_line_xdyi::@3
  __b3:
    // [668] bitmap_line_xdyi::y#2 = ++ bitmap_line_xdyi::y#3 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // [669] bitmap_line_xdyi::e#2 = bitmap_line_xdyi::e#1 - bitmap_line_xdyi::xd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z xd
    sta.z e
    lda.z e+1
    sbc.z xd+1
    sta.z e+1
    // [670] phi from bitmap_line_xdyi::@3 bitmap_line_xdyi::@4 to bitmap_line_xdyi::@2 [phi:bitmap_line_xdyi::@3/bitmap_line_xdyi::@4->bitmap_line_xdyi::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [670] phi bitmap_line_xdyi::e#6 = bitmap_line_xdyi::e#2 [phi:bitmap_line_xdyi::@3/bitmap_line_xdyi::@4->bitmap_line_xdyi::@2#0] -- register_copy 
    // [670] phi bitmap_line_xdyi::y#6 = bitmap_line_xdyi::y#2 [phi:bitmap_line_xdyi::@3/bitmap_line_xdyi::@4->bitmap_line_xdyi::@2#1] -- register_copy 
    jmp __b2
    // bitmap_line_xdyi::@2
  __b2:
    // [671] bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z x1
    adc #1
    sta.z __6
    lda.z x1+1
    adc #0
    sta.z __6+1
    // [672] if(bitmap_line_xdyi::x#2!=bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z x+1
    cmp.z __6+1
    bne __b1_from___b2
    lda.z x
    cmp.z __6
    bne __b1_from___b2
    jmp __breturn
    // bitmap_line_xdyi::@return
  __breturn:
    // [673] return 
    rts
}
  // bitmap_line_ydxd
// bitmap_line_ydxd(word zp($40) y, word zp($39) x, word zp($3b) y1, word zp($6a) yd, word zp($17) xd, byte zp($38) c)
bitmap_line_ydxd: {
    .label __6 = $4e
    .label y = $40
    .label x = $39
    .label y1 = $3b
    .label yd = $6a
    .label xd = $17
    .label c = $38
    .label e = $46
    // [675] bitmap_line_ydxd::e#0 = bitmap_line_ydxd::xd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z xd+1
    lsr
    sta.z e+1
    lda.z xd
    ror
    sta.z e
    // [676] phi from bitmap_line_ydxd bitmap_line_ydxd::@2 to bitmap_line_ydxd::@1 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1]
  __b1_from_bitmap_line_ydxd:
  __b1_from___b2:
    // [676] phi bitmap_line_ydxd::e#3 = bitmap_line_ydxd::e#0 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1#0] -- register_copy 
    // [676] phi bitmap_line_ydxd::y#2 = bitmap_line_ydxd::y#7 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1#1] -- register_copy 
    // [676] phi bitmap_line_ydxd::x#3 = bitmap_line_ydxd::x#5 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1#2] -- register_copy 
    jmp __b1
    // bitmap_line_ydxd::@1
  __b1:
    // [677] bitmap_plot::x#3 = bitmap_line_ydxd::x#3 -- vwuz1=vwuz2 
    lda.z x
    sta.z bitmap_plot.x
    lda.z x+1
    sta.z bitmap_plot.x+1
    // [678] bitmap_plot::y#3 = bitmap_line_ydxd::y#2
    // [679] bitmap_plot::c#4 = bitmap_line_ydxd::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [680] call bitmap_plot 
    // [743] phi from bitmap_line_ydxd::@1 to bitmap_plot [phi:bitmap_line_ydxd::@1->bitmap_plot]
  bitmap_plot_from___b1:
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#4 [phi:bitmap_line_ydxd::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#3 [phi:bitmap_line_ydxd::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#3 [phi:bitmap_line_ydxd::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    jmp __b4
    // bitmap_line_ydxd::@4
  __b4:
    // [681] bitmap_line_ydxd::y#3 = ++ bitmap_line_ydxd::y#2 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // [682] bitmap_line_ydxd::e#1 = bitmap_line_ydxd::e#3 + bitmap_line_ydxd::xd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z xd
    sta.z e
    lda.z e+1
    adc.z xd+1
    sta.z e+1
    // [683] if(bitmap_line_ydxd::yd#5>=bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z e+1
    cmp.z yd+1
    bne !+
    lda.z e
    cmp.z yd
    beq __b2_from___b4
  !:
    bcc __b2_from___b4
    jmp __b3
    // bitmap_line_ydxd::@3
  __b3:
    // [684] bitmap_line_ydxd::x#2 = -- bitmap_line_ydxd::x#3 -- vwuz1=_dec_vwuz1 
    lda.z x
    bne !+
    dec.z x+1
  !:
    dec.z x
    // [685] bitmap_line_ydxd::e#2 = bitmap_line_ydxd::e#1 - bitmap_line_ydxd::yd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z yd
    sta.z e
    lda.z e+1
    sbc.z yd+1
    sta.z e+1
    // [686] phi from bitmap_line_ydxd::@3 bitmap_line_ydxd::@4 to bitmap_line_ydxd::@2 [phi:bitmap_line_ydxd::@3/bitmap_line_ydxd::@4->bitmap_line_ydxd::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [686] phi bitmap_line_ydxd::e#6 = bitmap_line_ydxd::e#2 [phi:bitmap_line_ydxd::@3/bitmap_line_ydxd::@4->bitmap_line_ydxd::@2#0] -- register_copy 
    // [686] phi bitmap_line_ydxd::x#6 = bitmap_line_ydxd::x#2 [phi:bitmap_line_ydxd::@3/bitmap_line_ydxd::@4->bitmap_line_ydxd::@2#1] -- register_copy 
    jmp __b2
    // bitmap_line_ydxd::@2
  __b2:
    // [687] bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z y1
    adc #1
    sta.z __6
    lda.z y1+1
    adc #0
    sta.z __6+1
    // [688] if(bitmap_line_ydxd::y#3!=bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z y+1
    cmp.z __6+1
    bne __b1_from___b2
    lda.z y
    cmp.z __6
    bne __b1_from___b2
    jmp __breturn
    // bitmap_line_ydxd::@return
  __breturn:
    // [689] return 
    rts
}
  // bitmap_line_xdyd
// bitmap_line_xdyd(word zp($42) x, word zp($3b) y, word zp($39) x1, word zp($17) xd, word zp($6a) yd, byte zp($38) c)
bitmap_line_xdyd: {
    .label __6 = $50
    .label x = $42
    .label y = $3b
    .label x1 = $39
    .label xd = $17
    .label yd = $6a
    .label c = $38
    .label e = $46
    // [691] bitmap_line_xdyd::e#0 = bitmap_line_xdyd::yd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z yd+1
    lsr
    sta.z e+1
    lda.z yd
    ror
    sta.z e
    // [692] phi from bitmap_line_xdyd bitmap_line_xdyd::@2 to bitmap_line_xdyd::@1 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1]
  __b1_from_bitmap_line_xdyd:
  __b1_from___b2:
    // [692] phi bitmap_line_xdyd::e#3 = bitmap_line_xdyd::e#0 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1#0] -- register_copy 
    // [692] phi bitmap_line_xdyd::y#3 = bitmap_line_xdyd::y#5 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1#1] -- register_copy 
    // [692] phi bitmap_line_xdyd::x#3 = bitmap_line_xdyd::x#6 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1#2] -- register_copy 
    jmp __b1
    // bitmap_line_xdyd::@1
  __b1:
    // [693] bitmap_plot::x#1 = bitmap_line_xdyd::x#3
    // [694] bitmap_plot::y#1 = bitmap_line_xdyd::y#3 -- vwuz1=vwuz2 
    lda.z y
    sta.z bitmap_plot.y
    lda.z y+1
    sta.z bitmap_plot.y+1
    // [695] bitmap_plot::c#2 = bitmap_line_xdyd::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [696] call bitmap_plot 
    // [743] phi from bitmap_line_xdyd::@1 to bitmap_plot [phi:bitmap_line_xdyd::@1->bitmap_plot]
  bitmap_plot_from___b1:
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#2 [phi:bitmap_line_xdyd::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#1 [phi:bitmap_line_xdyd::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#1 [phi:bitmap_line_xdyd::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    jmp __b4
    // bitmap_line_xdyd::@4
  __b4:
    // [697] bitmap_line_xdyd::x#2 = ++ bitmap_line_xdyd::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // [698] bitmap_line_xdyd::e#1 = bitmap_line_xdyd::e#3 + bitmap_line_xdyd::yd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z yd
    sta.z e
    lda.z e+1
    adc.z yd+1
    sta.z e+1
    // [699] if(bitmap_line_xdyd::xd#5>=bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z e+1
    cmp.z xd+1
    bne !+
    lda.z e
    cmp.z xd
    beq __b2_from___b4
  !:
    bcc __b2_from___b4
    jmp __b3
    // bitmap_line_xdyd::@3
  __b3:
    // [700] bitmap_line_xdyd::y#2 = -- bitmap_line_xdyd::y#3 -- vwuz1=_dec_vwuz1 
    lda.z y
    bne !+
    dec.z y+1
  !:
    dec.z y
    // [701] bitmap_line_xdyd::e#2 = bitmap_line_xdyd::e#1 - bitmap_line_xdyd::xd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z xd
    sta.z e
    lda.z e+1
    sbc.z xd+1
    sta.z e+1
    // [702] phi from bitmap_line_xdyd::@3 bitmap_line_xdyd::@4 to bitmap_line_xdyd::@2 [phi:bitmap_line_xdyd::@3/bitmap_line_xdyd::@4->bitmap_line_xdyd::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [702] phi bitmap_line_xdyd::e#6 = bitmap_line_xdyd::e#2 [phi:bitmap_line_xdyd::@3/bitmap_line_xdyd::@4->bitmap_line_xdyd::@2#0] -- register_copy 
    // [702] phi bitmap_line_xdyd::y#6 = bitmap_line_xdyd::y#2 [phi:bitmap_line_xdyd::@3/bitmap_line_xdyd::@4->bitmap_line_xdyd::@2#1] -- register_copy 
    jmp __b2
    // bitmap_line_xdyd::@2
  __b2:
    // [703] bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z x1
    adc #1
    sta.z __6
    lda.z x1+1
    adc #0
    sta.z __6+1
    // [704] if(bitmap_line_xdyd::x#2!=bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z x+1
    cmp.z __6+1
    bne __b1_from___b2
    lda.z x
    cmp.z __6
    bne __b1_from___b2
    jmp __breturn
    // bitmap_line_xdyd::@return
  __breturn:
    // [705] return 
    rts
}
  // divr16u
// Performs division on two 16 bit unsigned ints and an initial remainder
// Returns the quotient dividend/divisor.
// The final remainder will be set into the global variable rem16u
// Implemented using simple binary division
// divr16u(word zp($13) dividend, word zp($17) divisor, word zp($3e) rem)
divr16u: {
    .label rem = $3e
    .label dividend = $13
    .label quotient = $40
    .label return = $40
    .label divisor = $17
    // [707] phi from divr16u to divr16u::@1 [phi:divr16u->divr16u::@1]
  __b1_from_divr16u:
    // [707] phi divr16u::i#2 = 0 [phi:divr16u->divr16u::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [707] phi divr16u::quotient#3 = 0 [phi:divr16u->divr16u::@1#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z quotient
    lda #>0
    sta.z quotient+1
    // [707] phi divr16u::dividend#2 = divr16u::dividend#1 [phi:divr16u->divr16u::@1#2] -- register_copy 
    // [707] phi divr16u::rem#4 = 0 [phi:divr16u->divr16u::@1#3] -- vwuz1=vbuc1 
    lda #<0
    sta.z rem
    lda #>0
    sta.z rem+1
    jmp __b1
    // [707] phi from divr16u::@3 to divr16u::@1 [phi:divr16u::@3->divr16u::@1]
  __b1_from___b3:
    // [707] phi divr16u::i#2 = divr16u::i#1 [phi:divr16u::@3->divr16u::@1#0] -- register_copy 
    // [707] phi divr16u::quotient#3 = divr16u::return#0 [phi:divr16u::@3->divr16u::@1#1] -- register_copy 
    // [707] phi divr16u::dividend#2 = divr16u::dividend#0 [phi:divr16u::@3->divr16u::@1#2] -- register_copy 
    // [707] phi divr16u::rem#4 = divr16u::rem#10 [phi:divr16u::@3->divr16u::@1#3] -- register_copy 
    jmp __b1
    // divr16u::@1
  __b1:
    // [708] divr16u::rem#0 = divr16u::rem#4 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z rem
    rol.z rem+1
    // [709] divr16u::$1 = byte1  divr16u::dividend#2 -- vbuaa=_byte1_vwuz1 
    lda.z dividend+1
    // [710] divr16u::$2 = divr16u::$1 & $80 -- vbuaa=vbuaa_band_vbuc1 
    and #$80
    // [711] if(divr16u::$2==0) goto divr16u::@2 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b2_from___b1
    jmp __b4
    // divr16u::@4
  __b4:
    // [712] divr16u::rem#1 = divr16u::rem#0 | 1 -- vwuz1=vwuz1_bor_vbuc1 
    lda #1
    ora.z rem
    sta.z rem
    // [713] phi from divr16u::@1 divr16u::@4 to divr16u::@2 [phi:divr16u::@1/divr16u::@4->divr16u::@2]
  __b2_from___b1:
  __b2_from___b4:
    // [713] phi divr16u::rem#5 = divr16u::rem#0 [phi:divr16u::@1/divr16u::@4->divr16u::@2#0] -- register_copy 
    jmp __b2
    // divr16u::@2
  __b2:
    // [714] divr16u::dividend#0 = divr16u::dividend#2 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z dividend
    rol.z dividend+1
    // [715] divr16u::quotient#1 = divr16u::quotient#3 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z quotient
    rol.z quotient+1
    // [716] if(divr16u::rem#5<divr16u::divisor#0) goto divr16u::@3 -- vwuz1_lt_vwuz2_then_la1 
    lda.z rem+1
    cmp.z divisor+1
    bcc __b3_from___b2
    bne !+
    lda.z rem
    cmp.z divisor
    bcc __b3_from___b2
  !:
    jmp __b5
    // divr16u::@5
  __b5:
    // [717] divr16u::quotient#2 = ++ divr16u::quotient#1 -- vwuz1=_inc_vwuz1 
    inc.z quotient
    bne !+
    inc.z quotient+1
  !:
    // [718] divr16u::rem#2 = divr16u::rem#5 - divr16u::divisor#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z rem
    sec
    sbc.z divisor
    sta.z rem
    lda.z rem+1
    sbc.z divisor+1
    sta.z rem+1
    // [719] phi from divr16u::@2 divr16u::@5 to divr16u::@3 [phi:divr16u::@2/divr16u::@5->divr16u::@3]
  __b3_from___b2:
  __b3_from___b5:
    // [719] phi divr16u::return#0 = divr16u::quotient#1 [phi:divr16u::@2/divr16u::@5->divr16u::@3#0] -- register_copy 
    // [719] phi divr16u::rem#10 = divr16u::rem#5 [phi:divr16u::@2/divr16u::@5->divr16u::@3#1] -- register_copy 
    jmp __b3
    // divr16u::@3
  __b3:
    // [720] divr16u::i#1 = ++ divr16u::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [721] if(divr16u::i#1!=$10) goto divr16u::@1 -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne __b1_from___b3
    jmp __b6
    // divr16u::@6
  __b6:
    // [722] rem16u#0 = divr16u::rem#10 -- vwuz1=vwuz2 
    lda.z rem
    sta.z rem16u
    lda.z rem+1
    sta.z rem16u+1
    jmp __breturn
    // divr16u::@return
  __breturn:
    // [723] return 
    rts
}
  // vera_layer_get_color
// Get the text and back color for text output in 16 color mode.
// - layer: Value of 0 or 1.
// - return: an 8 bit value with bit 7:4 containing the back color and bit 3:0 containing the front color.
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_get_color(byte register(X) layer)
vera_layer_get_color: {
    .label addr = $54
    // [725] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 -- vbuaa=vbuxx_rol_1 
    txa
    asl
    // [726] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // [727] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C
    ldy #0
    and (addr),y
    // [728] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b1
    jmp __b2
    // vera_layer_get_color::@2
  __b2:
    // [729] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 -- vbuaa=pbuc1_derefidx_vbuxx_rol_4 
    lda vera_layer_backcolor,x
    asl
    asl
    asl
    asl
    // [730] vera_layer_get_color::return#2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=vbuaa_bor_pbuc1_derefidx_vbuxx 
    ora vera_layer_textcolor,x
    // [731] phi from vera_layer_get_color::@1 vera_layer_get_color::@2 to vera_layer_get_color::@return [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return]
  __breturn_from___b1:
  __breturn_from___b2:
    // [731] phi vera_layer_get_color::return#3 = vera_layer_get_color::return#1 [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return#0] -- register_copy 
    jmp __breturn
    // vera_layer_get_color::@return
  __breturn:
    // [732] return 
    rts
    // vera_layer_get_color::@1
  __b1:
    // [733] vera_layer_get_color::return#1 = vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_textcolor,x
    jmp __breturn_from___b1
}
  // cputln
// Print a newline
cputln: {
    .label temp = $56
    // [734] cputln::$2 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [735] cputln::temp#0 = conio_line_text[cputln::$2] -- vwuz1=pwuc1_derefidx_vbuaa 
    // TODO: This needs to be optimized! other variations don't compile because of sections not available!
    tay
    lda conio_line_text,y
    sta.z temp
    lda conio_line_text+1,y
    sta.z temp+1
    // [736] cputln::temp#1 = cputln::temp#0 + conio_rowskip -- vwuz1=vwuz1_plus_vwuz2 
    lda.z temp
    clc
    adc.z conio_rowskip
    sta.z temp
    lda.z temp+1
    adc.z conio_rowskip+1
    sta.z temp+1
    // [737] cputln::$3 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [738] conio_line_text[cputln::$3] = cputln::temp#1 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z temp
    sta conio_line_text,y
    lda.z temp+1
    sta conio_line_text+1,y
    // [739] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // [740] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_y,x
    // [741] call cscroll 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [742] return 
    rts
}
  // bitmap_plot
// bitmap_plot(word zp($42) x, word zp($40) y, byte register(X) c)
bitmap_plot: {
    .label __9 = $58
    .label __10 = $5e
    .label plot_x = $5a
    .label plot_y = $60
    .label vera_vram_address01_bankaddr = $5a
    .label x = $42
    .label y = $40
    .label __12 = $58
    .label __13 = $5e
    .label __14 = $64
    .label __15 = $66
    // [744] bitmap_plot::$9 = bitmap_plot::x#4 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __9
    lda.z x+1
    rol
    sta.z __9+1
    // [745] bitmap_plot::$12 = __bitmap_plot_x + bitmap_plot::$9 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __12
    adc #<__bitmap_plot_x
    sta.z __12
    lda.z __12+1
    adc #>__bitmap_plot_x
    sta.z __12+1
    // [746] bitmap_plot::plot_x#0 = (dword)*bitmap_plot::$12 -- vduz1=_dword__deref_pwuz2 
    // Needs unsigned int arrays arranged as two underlying char arrays to allow char* plotter_x = plot_x[x]; - and eventually - char* plotter = plot_x[x] + plot_y[y];
    ldy #0
    sty.z plot_x+2
    sty.z plot_x+3
    lda (__12),y
    sta.z plot_x
    iny
    lda (__12),y
    sta.z plot_x+1
    // [747] bitmap_plot::$10 = bitmap_plot::y#4 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z y
    asl
    sta.z __10
    lda.z y+1
    rol
    sta.z __10+1
    asl.z __10
    rol.z __10+1
    // [748] bitmap_plot::$13 = __bitmap_plot_y + bitmap_plot::$10 -- pduz1=pduc1_plus_vwuz1 
    clc
    lda.z __13
    adc #<__bitmap_plot_y
    sta.z __13
    lda.z __13+1
    adc #>__bitmap_plot_y
    sta.z __13+1
    // [749] bitmap_plot::plot_y#0 = *bitmap_plot::$13 -- vduz1=_deref_pduz2 
    ldy #0
    lda (__13),y
    sta.z plot_y
    iny
    lda (__13),y
    sta.z plot_y+1
    iny
    lda (__13),y
    sta.z plot_y+2
    iny
    lda (__13),y
    sta.z plot_y+3
    // [750] bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plot_x#0 + bitmap_plot::plot_y#0 -- vduz1=vduz1_plus_vduz2 
    lda.z vera_vram_address01_bankaddr
    clc
    adc.z plot_y
    sta.z vera_vram_address01_bankaddr
    lda.z vera_vram_address01_bankaddr+1
    adc.z plot_y+1
    sta.z vera_vram_address01_bankaddr+1
    lda.z vera_vram_address01_bankaddr+2
    adc.z plot_y+2
    sta.z vera_vram_address01_bankaddr+2
    lda.z vera_vram_address01_bankaddr+3
    adc.z plot_y+3
    sta.z vera_vram_address01_bankaddr+3
    // [751] bitmap_plot::$14 = __bitmap_plot_bitshift + bitmap_plot::x#4 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __14
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __14+1
    // [752] bitmap_plot::bitshift#0 = *bitmap_plot::$14 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (__14),y
    // [753] if(0!=bitmap_plot::bitshift#0) goto bitmap_plot::@1 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b1
    // [755] phi from bitmap_plot bitmap_plot::@1 to bitmap_plot::@2 [phi:bitmap_plot/bitmap_plot::@1->bitmap_plot::@2]
  __b2_from_bitmap_plot:
  __b2_from___b1:
    // [755] phi bitmap_plot::c#0 = bitmap_plot::c#5 [phi:bitmap_plot/bitmap_plot::@1->bitmap_plot::@2#0] -- register_copy 
    jmp __b2
    // bitmap_plot::@1
  __b1:
    // [754] bitmap_plot::$3 = bitmap_plot::c#5 << bitmap_plot::bitshift#0 -- vbuxx=vbuxx_rol_vbuaa 
    tay
    txa
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    tax
    jmp __b2_from___b1
    // bitmap_plot::@2
  __b2:
    jmp vera_vram_address01
    // bitmap_plot::vera_vram_address01
  vera_vram_address01:
    // [756] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [757] bitmap_plot::vera_vram_address01_$0 = byte0  bitmap_plot::vera_vram_address01_bankaddr#0 -- vbuaa=_byte0_vduz1 
    lda.z vera_vram_address01_bankaddr
    // [758] *VERA_ADDRX_L = bitmap_plot::vera_vram_address01_$0 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_L
    // [759] bitmap_plot::vera_vram_address01_$1 = byte1  bitmap_plot::vera_vram_address01_bankaddr#0 -- vbuaa=_byte1_vduz1 
    lda.z vera_vram_address01_bankaddr+1
    // [760] *VERA_ADDRX_M = bitmap_plot::vera_vram_address01_$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [761] bitmap_plot::vera_vram_address01_$3 = byte2  bitmap_plot::vera_vram_address01_bankaddr#0 -- vbuaa=_byte2_vduz1 
    lda.z vera_vram_address01_bankaddr+2
    // [762] *VERA_ADDRX_H = bitmap_plot::vera_vram_address01_$3 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    jmp __b3
    // bitmap_plot::@3
  __b3:
    // [763] bitmap_plot::$15 = __bitmap_plot_bitmask + bitmap_plot::x#4 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __15
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __15+1
    // [764] bitmap_plot::$6 = ~ *bitmap_plot::$15 -- vbuaa=_bnot__deref_pbuz1 
    ldy #0
    lda (__15),y
    eor #$ff
    // [765] bitmap_plot::$7 = *VERA_DATA0 & bitmap_plot::$6 -- vbuaa=_deref_pbuc1_band_vbuaa 
    and VERA_DATA0
    // [766] bitmap_plot::$8 = bitmap_plot::$7 | bitmap_plot::c#0 -- vbuaa=vbuaa_bor_vbuxx 
    stx.z $ff
    ora.z $ff
    // [767] *VERA_DATA0 = bitmap_plot::$8 -- _deref_pbuc1=vbuaa 
    sta VERA_DATA0
    jmp __breturn
    // bitmap_plot::@return
  __breturn:
    // [768] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [769] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vbuz2_then_la1 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    cmp.z conio_screen_height
    bcc __breturn
    jmp __b1
    // cscroll::@1
  __b1:
    // [770] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 -- 0_neq_pbuc1_derefidx_vbuz1_then_la1 
    ldy.z conio_screen_layer
    lda conio_scroll_enable,y
    cmp #0
    bne __b4_from___b1
    jmp __b2
    // cscroll::@2
  __b2:
    // [771] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vwuz2_then_la1 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    ldy.z conio_height+1
    bne __breturn
    cmp.z conio_height
    bcc __breturn
    // [772] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [773] return 
    rts
    // [774] phi from cscroll::@1 to cscroll::@4 [phi:cscroll::@1->cscroll::@4]
  __b4_from___b1:
    jmp __b4
    // cscroll::@4
  __b4:
    // [775] call insertup 
    jsr insertup
    jmp __b5
    // cscroll::@5
  __b5:
    // [776] gotoxy::y#2 = conio_screen_height - 1 -- vbuxx=vbuz1_minus_1 
    ldx.z conio_screen_height
    dex
    // [777] call gotoxy 
    // [208] phi from cscroll::@5 to gotoxy [phi:cscroll::@5->gotoxy]
  gotoxy_from___b5:
    // [208] phi gotoxy::y#7 = gotoxy::y#2 [phi:cscroll::@5->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn
}
  // insertup
// Insert a new line, and scroll the upper part of the screen up.
insertup: {
    .label cy = $68
    .label width = $69
    .label line = $15
    .label start = $15
    // [778] insertup::cy#0 = conio_cursor_y[conio_screen_layer] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    sta.z cy
    // [779] insertup::width#0 = conio_screen_width << 1 -- vbuz1=vbuz2_rol_1 
    lda.z conio_screen_width
    asl
    sta.z width
    // [780] phi from insertup to insertup::@1 [phi:insertup->insertup::@1]
  __b1_from_insertup:
    // [780] phi insertup::i#2 = 1 [phi:insertup->insertup::@1#0] -- vbuxx=vbuc1 
    ldx #1
    jmp __b1
    // insertup::@1
  __b1:
    // [781] if(insertup::i#2<=insertup::cy#0) goto insertup::@2 -- vbuxx_le_vbuz1_then_la1 
    lda.z cy
    stx.z $ff
    cmp.z $ff
    bcs __b2
    // [782] phi from insertup::@1 to insertup::@3 [phi:insertup::@1->insertup::@3]
  __b3_from___b1:
    jmp __b3
    // insertup::@3
  __b3:
    // [783] call clearline 
    jsr clearline
    jmp __breturn
    // insertup::@return
  __breturn:
    // [784] return 
    rts
    // insertup::@2
  __b2:
    // [785] insertup::$3 = insertup::i#2 - 1 -- vbuaa=vbuxx_minus_1 
    txa
    sec
    sbc #1
    // [786] insertup::line#0 = insertup::$3 << conio_rowshift -- vwuz1=vbuaa_rol_vbuz2 
    ldy.z conio_rowshift
    sta.z line
    lda #0
    sta.z line+1
    cpy #0
    beq !e+
  !:
    asl.z line
    rol.z line+1
    dey
    bne !-
  !e:
    // [787] insertup::start#0 = (byte*)CONIO_SCREEN_TEXT#104 + insertup::line#0 -- pbuz1=pbuz2_plus_vwuz1 
    lda.z start
    clc
    adc.z CONIO_SCREEN_TEXT
    sta.z start
    lda.z start+1
    adc.z CONIO_SCREEN_TEXT+1
    sta.z start+1
    // [788] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip -- pbuz1=pbuz2_plus_vwuz3 
    lda.z start
    clc
    adc.z conio_rowskip
    sta.z memcpy_in_vram.src
    lda.z start+1
    adc.z conio_rowskip+1
    sta.z memcpy_in_vram.src+1
    // [789] memcpy_in_vram::dest#0 = (void*)insertup::start#0
    // [790] memcpy_in_vram::num#0 = insertup::width#0 -- vwuz1=vbuz2 
    lda.z width
    sta.z memcpy_in_vram.num
    lda #0
    sta.z memcpy_in_vram.num+1
    // [791] memcpy_in_vram::src#3 = (void*)memcpy_in_vram::src#0
    // [792] call memcpy_in_vram 
    // [221] phi from insertup::@2 to memcpy_in_vram [phi:insertup::@2->memcpy_in_vram]
  memcpy_in_vram_from___b2:
    // [221] phi memcpy_in_vram::num#3 = memcpy_in_vram::num#0 [phi:insertup::@2->memcpy_in_vram#0] -- register_copy 
    // [221] phi memcpy_in_vram::dest_bank#2 = 0 [phi:insertup::@2->memcpy_in_vram#1] -- vbuyy=vbuc1 
    ldy #0
    // [221] phi memcpy_in_vram::dest#2 = memcpy_in_vram::dest#0 [phi:insertup::@2->memcpy_in_vram#2] -- register_copy 
    // [221] phi memcpy_in_vram::src#2 = memcpy_in_vram::src#3 [phi:insertup::@2->memcpy_in_vram#3] -- register_copy 
    jsr memcpy_in_vram
    jmp __b4
    // insertup::@4
  __b4:
    // [793] insertup::i#1 = ++ insertup::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [780] phi from insertup::@4 to insertup::@1 [phi:insertup::@4->insertup::@1]
  __b1_from___b4:
    // [780] phi insertup::i#2 = insertup::i#1 [phi:insertup::@4->insertup::@1#0] -- register_copy 
    jmp __b1
}
  // clearline
clearline: {
    .label addr = $6a
    .label c = $42
    // [794] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [795] clearline::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [796] clearline::addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[clearline::$5] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z addr+1
    // [797] clearline::$1 = byte0  clearline::addr#0 -- vbuaa=_byte0_pbuz1 
    lda.z addr
    // [798] *VERA_ADDRX_L = clearline::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_L
    // [799] clearline::$2 = byte1  clearline::addr#0 -- vbuaa=_byte1_pbuz1 
    lda.z addr+1
    // [800] *VERA_ADDRX_M = clearline::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [801] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // [802] vera_layer_get_color::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [803] call vera_layer_get_color 
    // [724] phi from clearline to vera_layer_get_color [phi:clearline->vera_layer_get_color]
  vera_layer_get_color_from_clearline:
    // [724] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#1 [phi:clearline->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // [804] vera_layer_get_color::return#4 = vera_layer_get_color::return#3
    jmp __b4
    // clearline::@4
  __b4:
    // [805] clearline::color#0 = vera_layer_get_color::return#4 -- vbuxx=vbuaa 
    tax
    // [806] phi from clearline::@4 to clearline::@1 [phi:clearline::@4->clearline::@1]
  __b1_from___b4:
    // [806] phi clearline::c#2 = 0 [phi:clearline::@4->clearline::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z c
    lda #>0
    sta.z c+1
    jmp __b1
    // clearline::@1
  __b1:
    // [807] if(clearline::c#2<conio_screen_width) goto clearline::@2 -- vwuz1_lt_vbuz2_then_la1 
    lda.z c+1
    bne !+
    lda.z c
    cmp.z conio_screen_width
    bcc __b2
  !:
    jmp __b3
    // clearline::@3
  __b3:
    // [808] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    jmp __breturn
    // clearline::@return
  __breturn:
    // [809] return 
    rts
    // clearline::@2
  __b2:
    // [810] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    // Set data
    lda #' '
    sta VERA_DATA0
    // [811] *VERA_DATA0 = clearline::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // [812] clearline::c#1 = ++ clearline::c#2 -- vwuz1=_inc_vwuz1 
    inc.z c
    bne !+
    inc.z c+1
  !:
    // [806] phi from clearline::@2 to clearline::@1 [phi:clearline::@2->clearline::@1]
  __b1_from___b2:
    // [806] phi clearline::c#2 = clearline::c#1 [phi:clearline::@2->clearline::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  VERA_LAYER_WIDTH: .word $20, $40, $80, $100
  VERA_LAYER_HEIGHT: .word $20, $40, $80, $100
  /// --- VERA function encapsulation ---
  vera_mapbase_offset: .word 0, 0
  vera_mapbase_bank: .byte 0, 0
  vera_mapbase_address: .dword 0, 0
  vera_tilebase_offset: .word 0, 0
  vera_tilebase_bank: .byte 0, 0
  vera_tilebase_address: .dword 0, 0
  vera_layer_rowshift: .byte 0, 0
  vera_layer_rowskip: .word 0, 0
  vera_layer_config: .word VERA_L0_CONFIG, VERA_L1_CONFIG
  vera_layer_enable: .byte VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE
  vera_layer_mapbase: .word VERA_L0_MAPBASE, VERA_L1_MAPBASE
  vera_layer_tilebase: .word VERA_L0_TILEBASE, VERA_L1_TILEBASE
  vera_layer_textcolor: .byte WHITE, WHITE
  vera_layer_backcolor: .byte BLUE, BLUE
  // The number of bytes on the screen
  // The current cursor x-position
  conio_cursor_x: .byte 0, 0
  // The current cursor y-position
  conio_cursor_y: .byte 0, 0
  // The current text cursor line start
  conio_line_text: .word 0, 0
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  conio_scroll_enable: .byte 1, 1
  // Tables for the plotter - initialized by calling bitmap_draw_init();
  __bitmap_plot_x: .fill 2*$280, 0
  __bitmap_plot_y: .fill 4*$1e0, 0
  __bitmap_plot_bitmask: .fill $280, 0
  __bitmap_plot_bitshift: .fill $280, 0
  hdeltas: .word 0, $50, $28, $14, 0, $a0, $50, $28, 0, $140, $a0, $50, 0, $280, $140, $a0
  vdeltas: .word 0, $1e0, $f0, $a0
  bitmasks: .byte $80, $c0, $f0, $ff
  .fill 1, 0
  bitshifts: .byte 7, 6, 4, 0
  .fill 1, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp textcolor1
Removing instruction jmp bgcolor1
Removing instruction jmp __b6
Removing instruction jmp __b15
Removing instruction jmp __b16
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp vera_layer_show1
Removing instruction jmp __b7
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp textcolor2
Removing instruction jmp __b8
Removing instruction jmp __b1
Removing instruction jmp __b22
Removing instruction jmp textcolor3
Removing instruction jmp bgcolor2
Removing instruction jmp __b9
Removing instruction jmp __b32
Removing instruction jmp __b33
Removing instruction jmp __b34
Removing instruction jmp textcolor4
Removing instruction jmp __b10
Removing instruction jmp __b3
Removing instruction jmp __b35
Removing instruction jmp __b5
Removing instruction jmp textcolor5
Removing instruction jmp bgcolor3
Removing instruction jmp __b11
Removing instruction jmp __breturn
Removing instruction jmp __b36
Removing instruction jmp __b37
Removing instruction jmp __b2
Removing instruction jmp __b23
Removing instruction jmp __b24
Removing instruction jmp __b25
Removing instruction jmp __b26
Removing instruction jmp __b27
Removing instruction jmp __b28
Removing instruction jmp __b29
Removing instruction jmp __b30
Removing instruction jmp __b31
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp vera_layer_get_width1
Removing instruction jmp vera_layer_get_width1___breturn
Removing instruction jmp __b1
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp vera_layer_get_height1
Removing instruction jmp vera_layer_get_height1___breturn
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b15
Removing instruction jmp __b16
Removing instruction jmp __b23
Removing instruction jmp __b24
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp vera_display_set_scale_double1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp vera_layer_get_color_depth1
Removing instruction jmp vera_layer_get_color_depth1___breturn
Removing instruction jmp __b16
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b1
Removing instruction jmp __b8
Removing instruction jmp __b2
Removing instruction jmp __b9
Removing instruction jmp __b3
Removing instruction jmp __b10
Removing instruction jmp __b4
Removing instruction jmp __b11
Removing instruction jmp __b5
Removing instruction jmp __b12
Removing instruction jmp __b6
Removing instruction jmp __b13
Removing instruction jmp __b7
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __b10
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b14
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b2
Removing instruction jmp __b5
Removing instruction jmp __b3
Removing instruction jmp __b6
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp vera_vram_address01
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #8
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Replacing instruction ldx.z conio_screen_layer with TAX
Removing instruction ldy.z conio_screen_layer
Removing instruction lda #>0
Replacing instruction lda.z layer with TYA
Replacing instruction ldy.z __17 with TAY
Replacing instruction lda.z layer with TYA
Replacing instruction ldy.z __18 with TAY
Replacing instruction lda.z layer with TYA
Replacing instruction lda.z layer with TYA
Replacing instruction lda.z layer with TYA
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction lda #$40
Removing instruction lda #0
Removing instruction ldy.z conio_screen_layer
Replacing instruction lda.z conio_screen_layer with TYA
Removing instruction lda #0
Removing instruction lda.z __bitmap_layer
Removing instruction ldy.z __bitmap_color_depth
Removing instruction lda #>0
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction lda #>0
Removing instruction lda.z ch
Removing instruction lda.z yd_1+1
Removing instruction lda.z yd+1
Removing instruction lda.z yd+1
Removing instruction lda.z yd_1+1
Removing instruction lda.z rand_state+1
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction lda.z __16+1
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda.z e+1
Removing instruction lda.z e+1
Removing instruction lda.z e+1
Removing instruction lda.z e+1
Replacing instruction lda #<0 with TXA
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #>0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b1_from___b9 with __b1
Replacing label __b2_from___b22 with __b2
Replacing label __b37_from___b36 with __b37
Replacing label __b37_from___b36 with __b37
Replacing label __b4_from_gotoxy with __b1
Replacing label __b9_from___b4 with __b9_from___b5
Replacing label __b9_from___b4 with __b9_from___b5
Replacing label __b16_from___b9 with __b16
Replacing label __b16_from___b12 with __b16
Replacing label __b16_from___b12 with __b16
Replacing label __b19_from___b24 with __b19
Replacing label __b19_from___b17 with __b19
Replacing label __b22_from___b19 with __b22
Replacing label __b22_from___b20 with __b22
Replacing label __b16_from___b14 with __b16
Replacing label __b16_from___b13 with __b16
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b3_from___b2 with __b3
Replacing label __b4_from___b3 with __b4
Replacing label __b6_from___b5 with __b6
Replacing label __b7_from___b6 with __b7
Replacing label __b1_from___b7 with __b1
Replacing label __b1_from___b7 with __b1
Replacing label __b15_from___b15 with __b15
Replacing label __b15_from___b15 with __b15
Replacing label __b1_from___b7 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b3_from___b2 with __b3
Replacing label __b2_from___b4 with __b2
Replacing label __b2_from___b4 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b4 with __b2
Replacing label __b2_from___b4 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b4 with __b2
Replacing label __b2_from___b4 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b4 with __b2
Replacing label __b2_from___b4 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b3_from___b2 with __b3
Replacing label __b3_from___b2 with __b3
Replacing label __b1_from___b3 with __b1
Replacing label __breturn_from___b1 with __breturn
Replacing label __breturn with __b3
Replacing label __b4_from___b1 with __b4
Replacing label __breturn with __b3
Replacing label __breturn with __b3
Replacing label __breturn with __b3
Removing instruction __b1_from___init1:
Removing instruction main_from___b1:
Removing instruction __b3_from_conio_x16_init:
Removing instruction __b4_from___b3:
Removing instruction __b5_from___b4:
Removing instruction vera_layer_set_textcolor_from___b5:
Removing instruction __b6_from___b5:
Removing instruction vera_layer_set_backcolor_from___b6:
Removing instruction __b7_from___b6:
Removing instruction vera_layer_set_mapbase_from___b7:
Removing instruction __b8_from___b7:
Removing instruction vera_layer_set_mapbase_from___b8:
Removing instruction __b1_from___b2:
Removing instruction __b1_from___b9:
Removing instruction __b12_from_main:
Removing instruction __b13_from___b12:
Removing instruction vera_layer_mode_bitmap_from___b13:
Removing instruction __b14_from___b13:
Removing instruction __b6_from_bgcolor1:
Removing instruction __b15_from___b6:
Removing instruction gotoxy_from___b15:
Removing instruction __b16_from___b15:
Removing instruction cputs_from___b16:
Removing instruction __b17_from___b16:
Removing instruction cputs_from___b17:
Removing instruction __b18_from___b17:
Removing instruction cputs_from___b18:
Removing instruction __b19_from___b18:
Removing instruction cputs_from___b19:
Removing instruction __b7_from_vera_layer_show1:
Removing instruction __b20_from___b7:
Removing instruction __b21_from___b20:
Removing instruction gotoxy_from___b21:
Removing instruction __b8_from_textcolor2:
Removing instruction cputs_from___b8:
Removing instruction __b9_from_bgcolor2:
Removing instruction __b32_from___b9:
Removing instruction gotoxy_from___b32:
Removing instruction __b33_from___b32:
Removing instruction cputs_from___b33:
Removing instruction __b34_from___b33:
Removing instruction gotoxy_from___b34:
Removing instruction __b10_from_textcolor4:
Removing instruction cputs_from___b10:
Removing instruction __b5_from___b35:
Removing instruction __b11_from_bgcolor3:
Removing instruction __b37_from___b36:
Removing instruction __b3_from___b37:
Removing instruction __b2_from___b22:
Removing instruction rand_from___b2:
Removing instruction modr16u_from___b23:
Removing instruction modr16u_from___b25:
Removing instruction rand_from___b26:
Removing instruction modr16u_from___b27:
Removing instruction rand_from___b28:
Removing instruction modr16u_from___b29:
Removing instruction rand_from___b30:
Removing instruction __b1_from_vera_layer_mode_text:
Removing instruction vera_layer_get_width1___breturn:
Removing instruction vera_layer_get_height1___breturn:
Removing instruction __b4_from_gotoxy:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction __b3_from___b1:
Removing instruction __b3:
Removing instruction __b9_from___b4:
Removing instruction __b16_from___b12:
Removing instruction __b16_from___b13:
Removing instruction __b16_from___b14:
Removing instruction __b16_from___b15:
Removing instruction __b16_from___b9:
Removing instruction __b19_from___b17:
Removing instruction __b19_from___b18:
Removing instruction __b19_from___b24:
Removing instruction __b22_from___b19:
Removing instruction __b22_from___b20:
Removing instruction __b22_from___b21:
Removing instruction __b2_from_vera_display_set_scale_double1:
Removing instruction vera_layer_set_config_from___b2:
Removing instruction __b3_from___b2:
Removing instruction vera_layer_set_tilebase_from___b3:
Removing instruction __b1_from_cputs:
Removing instruction __b1_from___b2:
Removing instruction vera_layer_get_color_depth1___breturn:
Removing instruction __b1_from___b7:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b8:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b9:
Removing instruction __b4_from___b10:
Removing instruction __b4_from___b3:
Removing instruction __b6_from___b12:
Removing instruction __b6_from___b5:
Removing instruction __b7_from___b13:
Removing instruction __b7_from___b6:
Removing instruction __b15_from___b15:
Removing instruction __b4_from___b3:
Removing instruction __b6_from___b5:
Removing instruction __b1_from___b7:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b4:
Removing instruction __b1_from_bitmap_line_ydxi:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction __b1_from_bitmap_line_xdyi:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction __b1_from_bitmap_line_ydxd:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction __b1_from_bitmap_line_xdyd:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction __b1_from___b3:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b4:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b5:
Removing instruction __breturn_from___b1:
Removing instruction __breturn_from___b2:
Removing instruction __b2_from_bitmap_plot:
Removing instruction vera_vram_address01:
Removing instruction __b3_from___b2:
Removing instruction __breturn:
Removing instruction __b4_from___b1:
Removing instruction __b3_from___b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction vera_layer_mode_text_from_conio_x16_init:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b2:
Removing instruction gotoxy_from___b1:
Removing instruction __breturn:
Removing instruction memcpy_in_vram_from_main:
Removing instruction __b12:
Removing instruction vera_layer_mode_tile_from___b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction textcolor1:
Removing instruction vera_layer_set_textcolor_from_textcolor1:
Removing instruction bgcolor1:
Removing instruction vera_layer_set_backcolor_from_bgcolor1:
Removing instruction __b6:
Removing instruction __b15:
Removing instruction __b16:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b19:
Removing instruction vera_layer_show1:
Removing instruction __b7:
Removing instruction __b20:
Removing instruction __b21:
Removing instruction textcolor2:
Removing instruction vera_layer_set_textcolor_from_textcolor2:
Removing instruction __b8:
Removing instruction __b1_from___b8:
Removing instruction __b22:
Removing instruction textcolor3:
Removing instruction vera_layer_set_textcolor_from_textcolor3:
Removing instruction bgcolor2:
Removing instruction vera_layer_set_backcolor_from_bgcolor2:
Removing instruction __b9:
Removing instruction __b32:
Removing instruction __b33:
Removing instruction __b34:
Removing instruction textcolor4:
Removing instruction vera_layer_set_textcolor_from_textcolor4:
Removing instruction __b10:
Removing instruction __b3_from___b10:
Removing instruction __b35:
Removing instruction __b5:
Removing instruction textcolor5:
Removing instruction vera_layer_set_textcolor_from_textcolor5:
Removing instruction bgcolor3:
Removing instruction vera_layer_set_backcolor_from_bgcolor3:
Removing instruction __b11:
Removing instruction __breturn:
Removing instruction bitmap_line_from___b4:
Removing instruction __b36:
Removing instruction __b3_from___b36:
Removing instruction __b23:
Removing instruction __b24:
Removing instruction rand_from___b24:
Removing instruction __b25:
Removing instruction __b26:
Removing instruction __b27:
Removing instruction __b28:
Removing instruction __b29:
Removing instruction __b30:
Removing instruction __b31:
Removing instruction bitmap_line_from___b31:
Removing instruction __b1_from___b31:
Removing instruction vera_layer_mode_tile_from_vera_layer_mode_text:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction vera_layer_get_width1:
Removing instruction __b1:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction vera_layer_get_height1:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_gotoxy:
Removing instruction __breturn:
Removing instruction __b1_from_memcpy_in_vram:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b8:
Removing instruction __b9_from___b8:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b15:
Removing instruction vera_layer_set_config_from___b16:
Removing instruction __b23:
Removing instruction vera_layer_set_mapbase_from___b23:
Removing instruction __b24:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b20:
Removing instruction __b21:
Removing instruction vera_layer_set_tilebase_from___b22:
Removing instruction __breturn:
Removing instruction __b9_from___b7:
Removing instruction __b9_from___b6:
Removing instruction __b1:
Removing instruction vera_display_set_scale_double1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b1_from___b8:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4_from___b2:
Removing instruction __b6:
Removing instruction __b1_from___b6:
Removing instruction __b4_from___b5:
Removing instruction __breturn:
Removing instruction vera_layer_get_color_depth1:
Removing instruction __b16:
Removing instruction vera_display_get_hscale_from___b16:
Removing instruction __b17:
Removing instruction vera_display_get_vscale_from___b17:
Removing instruction __b18:
Removing instruction __b1_from___b18:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction __b15_from___b14:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction bitmap_line_ydxi_from___b4:
Removing instruction bitmap_line_xdyi_from___b8:
Removing instruction __b10:
Removing instruction bitmap_line_ydxd_from___b10:
Removing instruction bitmap_line_xdyd_from___b9:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction bitmap_line_ydxd_from___b6:
Removing instruction bitmap_line_xdyd_from___b12:
Removing instruction __b14:
Removing instruction bitmap_line_ydxi_from___b14:
Removing instruction bitmap_line_xdyi_from___b13:
Removing instruction __breturn:
Removing instruction divr16u_from_modr16u:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction vera_layer_get_color_from_cputc:
Removing instruction __b7:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b6:
Removing instruction __b1_from_vera_display_get_hscale:
Removing instruction __b3_from___b1:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_vera_display_get_vscale:
Removing instruction __b3_from___b1:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_mul16u:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b1_from___b3:
Removing instruction __b1_from_memset_vram:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction bitmap_plot_from___b1:
Removing instruction __b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction bitmap_plot_from___b1:
Removing instruction __b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction bitmap_plot_from___b1:
Removing instruction __b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction bitmap_plot_from___b1:
Removing instruction __b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from_divr16u:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b5:
Removing instruction gotoxy_from___b5:
Removing instruction __b1_from_insertup:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction memcpy_in_vram_from___b2:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction vera_layer_get_color_from_clearline:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5UnusedLabelElimination
Skipping double jump to __b3 in bcc __b37
Skipping double jump to __b3 in beq __b37
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __b3
Replacing jump to rts with rts in jmp __b3
Replacing jump to rts with rts in jmp __breturn
Skipping double jump to __b2 in jmp __b2_from___b1
Replacing jump to rts with rts in jmp __b3
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b9_from___b5 to __b1
Relabelling long label __b2_from___b1 to __b3
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Removing instruction bne __b2
Removing instruction jmp __b1
Removing instruction jmp __b15
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction bcc __b3
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction ldy.z conio_screen_layer
Removing instruction lda #<0
Removing instruction ldy.z conio_screen_layer
Removing instruction ldy.z conio_screen_layer
Replacing instruction ldy #0 with TAY
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction __b37:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b3:
Succesful ASM optimization Pass5UnusedLabelElimination
Removing unreachable instruction jmp __b3
Succesful ASM optimization Pass5UnreachableCodeElimination
Fixing long branch [1408] bne __b1 to beq
Fixing long branch [1413] bne __b1 to beq
Fixing long branch [293] beq __b2 to bne
Fixing long branch [1581] bcc __b1 to bcs
Fixing long branch [1587] bcc __b1 to bcs

FINAL SYMBOL TABLE
constant const byte BLACK = 0
constant const byte BLUE = 6
byte CONIO_SCREEN_BANK
byte CONIO_SCREEN_BANK#15 CONIO_SCREEN_BANK zp[1]:43 58.13089005235602
byte* CONIO_SCREEN_TEXT
word CONIO_SCREEN_TEXT#104 CONIO_SCREEN_TEXT zp[2]:44 0.42083333333333334
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant byte SIZEOF_POINTER = 2
constant const byte VERA_ADDRSEL = 1
constant byte* const VERA_ADDRX_H = (byte*) 40738
constant byte* const VERA_ADDRX_L = (byte*) 40736
constant byte* const VERA_ADDRX_M = (byte*) 40737
constant byte* const VERA_CTRL = (byte*) 40741
constant byte* const VERA_DATA0 = (byte*) 40739
constant byte* const VERA_DATA1 = (byte*) 40740
constant byte* const VERA_DC_HSCALE = (byte*) 40746
constant byte* const VERA_DC_VIDEO = (byte*) 40745
constant byte* const VERA_DC_VSCALE = (byte*) 40747
constant const byte VERA_INC_1 = $10
constant byte* const VERA_L0_CONFIG = (byte*) 40749
constant byte* const VERA_L0_MAPBASE = (byte*) 40750
constant byte* const VERA_L0_TILEBASE = (byte*) 40751
constant byte* const VERA_L1_CONFIG = (byte*) 40756
constant byte* const VERA_L1_MAPBASE = (byte*) 40757
constant byte* const VERA_L1_TILEBASE = (byte*) 40758
constant const byte VERA_LAYER0_ENABLE = $10
constant const byte VERA_LAYER1_ENABLE = $20
constant const byte VERA_LAYER_COLOR_DEPTH_1BPP = 0
constant const byte VERA_LAYER_COLOR_DEPTH_8BPP = 3
constant const byte VERA_LAYER_COLOR_DEPTH_MASK = 3
constant const byte VERA_LAYER_CONFIG_256C = 8
constant const byte VERA_LAYER_CONFIG_MODE_BITMAP = 4
constant const word* VERA_LAYER_HEIGHT[4]  = { $20, $40, $80, $100 }
constant const byte VERA_LAYER_HEIGHT_128 = $80
constant const byte VERA_LAYER_HEIGHT_256 = $c0
constant const byte VERA_LAYER_HEIGHT_64 = $40
constant const byte VERA_LAYER_HEIGHT_MASK = $c0
constant const byte VERA_LAYER_TILEBASE_MASK = $fc
constant const word* VERA_LAYER_WIDTH[4]  = { $20, $40, $80, $100 }
constant const byte VERA_LAYER_WIDTH_128 = $20
constant const byte VERA_LAYER_WIDTH_256 = $30
constant const byte VERA_LAYER_WIDTH_64 = $10
constant const byte VERA_LAYER_WIDTH_MASK = $30
constant const byte VERA_TILEBASE_HEIGHT_16 = 2
constant const byte VERA_TILEBASE_WIDTH_16 = 1
constant const byte WHITE = 1
constant const byte YELLOW = 7
dword __bitmap_address loadstore zp[4]:35 4.06
byte __bitmap_color_depth loadstore zp[1]:42 80.4074074074074
byte __bitmap_hscale loadstore zp[1]:40 3.9102564102564106
byte __bitmap_layer loadstore zp[1]:39 204.0
constant const byte* __bitmap_plot_bitmask[$280]  = { fill( $280, 0) }
constant const byte* __bitmap_plot_bitshift[$280]  = { fill( $280, 0) }
constant const word* __bitmap_plot_x[$280]  = { fill( $280, 0) }
constant const dword* __bitmap_plot_y[$1e0]  = { fill( $1e0, 0) }
byte __bitmap_vscale loadstore zp[1]:41 2.8732394366197185
void __start()
void bitmap_clear()
byte~ bitmap_clear::$0 reg byte a 202.0
byte~ bitmap_clear::$1 reg byte a 202.0
byte~ bitmap_clear::$6 reg byte a 202.0
byte~ bitmap_clear::$7 reg byte a 202.0
dword bitmap_clear::count
dword bitmap_clear::count#0 count zp[4]:90 40.4
word bitmap_clear::hdelta
word bitmap_clear::hdelta#0 hdelta zp[2]:21 202.0
byte bitmap_clear::vbank
byte bitmap_clear::vbank#0 reg byte x 101.0
word bitmap_clear::vdelta
word bitmap_clear::vdelta#0 vdelta zp[2]:57 33.666666666666664
void* bitmap_clear::vdest
word bitmap_clear::vdest#0 vdest zp[2]:59 50.5
void bitmap_init(byte bitmap_init::layer , dword bitmap_init::address)
byte~ bitmap_init::$0 reg byte a 202.0
byte~ bitmap_init::$1 reg byte x 202.0
word~ bitmap_init::$10 zp[2]:66 667.3333333333334
word~ bitmap_init::$13 zp[2]:76 667.3333333333334
byte~ bitmap_init::$2 reg byte x 202.0
word~ bitmap_init::$23 zp[2]:59 2002.0
word~ bitmap_init::$24 zp[2]:70 2002.0
word~ bitmap_init::$25 zp[2]:78 2002.0
word~ bitmap_init::$26 zp[2]:86 2002.0
byte~ bitmap_init::$27 reg byte a 202.0
word~ bitmap_init::$28 zp[2]:102 2002.0
const word*~ bitmap_init::$29 zp[2]:59 2002.0
byte~ bitmap_init::$3 reg byte a 202.0
const byte*~ bitmap_init::$30 zp[2]:62 2002.0
const byte*~ bitmap_init::$31 zp[2]:64 2002.0
const word*~ bitmap_init::$32 zp[2]:70 2002.0
const byte*~ bitmap_init::$33 zp[2]:72 2002.0
const byte*~ bitmap_init::$34 zp[2]:74 2002.0
const word*~ bitmap_init::$35 zp[2]:78 2002.0
const byte*~ bitmap_init::$36 zp[2]:80 2002.0
const byte*~ bitmap_init::$37 zp[2]:84 2002.0
const word*~ bitmap_init::$38 zp[2]:86 2002.0
const byte*~ bitmap_init::$39 zp[2]:88 2002.0
byte~ bitmap_init::$4 reg byte a 202.0
const byte*~ bitmap_init::$40 zp[2]:94 2002.0
const dword*~ bitmap_init::$41 zp[2]:102 2002.0
word~ bitmap_init::$7 zp[2]:57 667.3333333333334
dword bitmap_init::address
constant dword bitmap_init::address#0 address = 0
byte bitmap_init::bitmask
byte bitmap_init::bitmask#0 bitmask zp[1]:56 101.0
byte bitmap_init::bitmask#1 bitmask zp[1]:56 2002.0
byte bitmap_init::bitmask#10 bitmask zp[1]:56 373.1818181818182
byte bitmap_init::bitmask#11 bitmask zp[1]:56 455.0
byte bitmap_init::bitmask#12 bitmask zp[1]:56 455.0
byte bitmap_init::bitmask#13 bitmask zp[1]:56 385.0
byte bitmap_init::bitmask#16 bitmask zp[1]:56 1001.0
byte bitmap_init::bitmask#2 bitmask zp[1]:56 2002.0
byte bitmap_init::bitmask#3 bitmask zp[1]:56 2002.0
byte bitmap_init::bitmask#4 bitmask zp[1]:56 2002.0
signed byte bitmap_init::bitshift
signed byte bitmap_init::bitshift#0 reg byte x 202.0
signed byte bitmap_init::bitshift#1 reg byte x 1001.0
signed byte bitmap_init::bitshift#10 reg byte x 310.4
signed byte bitmap_init::bitshift#11 reg byte x 400.4
signed byte bitmap_init::bitshift#12 reg byte x 400.4
signed byte bitmap_init::bitshift#13 reg byte x 400.4
signed byte bitmap_init::bitshift#14 reg byte x 500.5
signed byte bitmap_init::bitshift#2 reg byte x 1001.0
signed byte bitmap_init::bitshift#3 reg byte x 1001.0
signed byte bitmap_init::bitshift#4 reg byte x 2002.0
word bitmap_init::hdelta
word bitmap_init::hdelta#0 hdelta zp[2]:100 122.44444444444446
byte bitmap_init::layer
constant byte bitmap_init::layer#0 layer = 0
byte~ bitmap_init::vera_layer_get_color_depth1_$0 reg byte a 202.0
byte~ bitmap_init::vera_layer_get_color_depth1_$1 reg byte a 202.0
byte* bitmap_init::vera_layer_get_color_depth1_config
byte* bitmap_init::vera_layer_get_color_depth1_config#0 vera_layer_get_color_depth1_config zp[2]:106 202.0
byte bitmap_init::vera_layer_get_color_depth1_layer
byte bitmap_init::vera_layer_get_color_depth1_layer#0 reg byte a 202.0
byte bitmap_init::vera_layer_get_color_depth1_return
byte bitmap_init::vera_layer_get_color_depth1_return#0 reg byte a 202.0
byte bitmap_init::vera_layer_get_color_depth1_return#1 reg byte a 202.0
word bitmap_init::x
word bitmap_init::x#1 x zp[2]:21 1501.5
word bitmap_init::x#10 x zp[2]:21 353.29411764705884
word bitmap_init::y
word bitmap_init::y#1 y zp[2]:23 1501.5
word bitmap_init::y#2 y zp[2]:23 600.5999999999999
dword bitmap_init::yoffs
dword bitmap_init::yoffs#0 yoffs zp[4]:90 202.0
dword bitmap_init::yoffs#1 yoffs zp[4]:90 667.3333333333334
dword bitmap_init::yoffs#2 yoffs zp[4]:90 776.0
void bitmap_line(word bitmap_line::x0 , word bitmap_line::x1 , word bitmap_line::y0 , word bitmap_line::y1 , byte bitmap_line::c)
byte bitmap_line::c
byte bitmap_line::c#0 reg byte x 202.0
byte bitmap_line::c#1 reg byte x 2002.0
byte bitmap_line::c#10 reg byte x 1502.037037037037
word bitmap_line::x0
word bitmap_line::x0#0 x0 zp[2]:3 8.782608695652174
word bitmap_line::x0#1 x0 zp[2]:3 667.3333333333334
word bitmap_line::x0#10 x0 zp[2]:3 4555.550000000001
word bitmap_line::x1
word bitmap_line::x1#0 x1 zp[2]:57 11.882352941176471
word bitmap_line::x1#1 x1 zp[2]:57 1001.0
word bitmap_line::x1#10 x1 zp[2]:57 4555.550000000001
word bitmap_line::xd
word bitmap_line::xd#1 xd zp[2]:23 3500.3500000000004
word bitmap_line::xd#2 xd zp[2]:23 3500.3500000000004
word bitmap_line::y0
word bitmap_line::y0#0 y0 zp[2]:59 18.363636363636363
word bitmap_line::y0#10 y0 zp[2]:59 6005.6500000000015
word bitmap_line::y1
word bitmap_line::y1#0 y1 zp[2]:21 40.4
word bitmap_line::y1#10 y1 zp[2]:21 6005.6500000000015
word bitmap_line::yd
word bitmap_line::yd#1 yd zp[2]:106 4444.888888888889
word bitmap_line::yd#10 yd zp[2]:106 4444.888888888889
word bitmap_line::yd#11 yd_1 zp[2]:62 4444.888888888889
word bitmap_line::yd#2 yd_1 zp[2]:62 4444.888888888889
void bitmap_line_xdyd(word bitmap_line_xdyd::x , word bitmap_line_xdyd::y , word bitmap_line_xdyd::x1 , word bitmap_line_xdyd::xd , word bitmap_line_xdyd::yd , byte bitmap_line_xdyd::c)
word~ bitmap_line_xdyd::$6 zp[2]:80 2.00000002E8
byte bitmap_line_xdyd::c
byte bitmap_line_xdyd::c#0 c zp[1]:56 20002.0
byte bitmap_line_xdyd::c#1 c zp[1]:56 20002.0
byte bitmap_line_xdyd::c#3 c zp[1]:56 6668000.2
word bitmap_line_xdyd::e
word bitmap_line_xdyd::e#0 e zp[2]:70 200002.0
word bitmap_line_xdyd::e#1 e zp[2]:70 1.3333333466666667E8
word bitmap_line_xdyd::e#2 e zp[2]:70 2.00000002E8
word bitmap_line_xdyd::e#3 e zp[2]:70 3.33500005E7
word bitmap_line_xdyd::e#6 e zp[2]:70 1.00000001E8
word bitmap_line_xdyd::x
word bitmap_line_xdyd::x#0 x zp[2]:66 3333.6666666666665
word bitmap_line_xdyd::x#1 x zp[2]:66 3333.6666666666665
word bitmap_line_xdyd::x#2 x zp[2]:66 3.7500000375E7
word bitmap_line_xdyd::x#3 x zp[2]:66 6.00200008E7
word bitmap_line_xdyd::x#6 x zp[2]:66 60001.5
word bitmap_line_xdyd::x1
word bitmap_line_xdyd::x1#0 x1 zp[2]:57 5000.5
word bitmap_line_xdyd::x1#1 x1 zp[2]:57 5000.5
word bitmap_line_xdyd::x1#6 x1 zp[2]:57 6668000.2
word bitmap_line_xdyd::xd
word bitmap_line_xdyd::xd#0 xd zp[2]:23 6667.333333333333
word bitmap_line_xdyd::xd#1 xd zp[2]:23 6667.333333333333
word bitmap_line_xdyd::xd#5 xd zp[2]:23 1.3334666933333334E7
word bitmap_line_xdyd::y
word bitmap_line_xdyd::y#0 y zp[2]:59 4000.4
word bitmap_line_xdyd::y#1 y zp[2]:59 4000.4
word bitmap_line_xdyd::y#2 y zp[2]:59 1.00000001E8
word bitmap_line_xdyd::y#3 y zp[2]:59 5.0012500625E7
word bitmap_line_xdyd::y#5 y zp[2]:59 60001.5
word bitmap_line_xdyd::y#6 y zp[2]:59 1.00000001E8
word bitmap_line_xdyd::yd
word bitmap_line_xdyd::yd#0 yd zp[2]:106 10001.0
word bitmap_line_xdyd::yd#1 yd zp[2]:106 10001.0
word bitmap_line_xdyd::yd#2 yd zp[2]:106 6674666.933333334
void bitmap_line_xdyi(word bitmap_line_xdyi::x , word bitmap_line_xdyi::y , word bitmap_line_xdyi::x1 , word bitmap_line_xdyi::xd , word bitmap_line_xdyi::yd , byte bitmap_line_xdyi::c)
word~ bitmap_line_xdyi::$6 zp[2]:76 2.00000002E8
byte bitmap_line_xdyi::c
byte bitmap_line_xdyi::c#0 c zp[1]:56 20002.0
byte bitmap_line_xdyi::c#1 c zp[1]:56 20002.0
byte bitmap_line_xdyi::c#3 c zp[1]:56 6668000.2
word bitmap_line_xdyi::e
word bitmap_line_xdyi::e#0 e zp[2]:70 200002.0
word bitmap_line_xdyi::e#1 e zp[2]:70 1.3333333466666667E8
word bitmap_line_xdyi::e#2 e zp[2]:70 2.00000002E8
word bitmap_line_xdyi::e#3 e zp[2]:70 3.33500005E7
word bitmap_line_xdyi::e#6 e zp[2]:70 1.00000001E8
word bitmap_line_xdyi::x
word bitmap_line_xdyi::x#0 x zp[2]:66 3333.6666666666665
word bitmap_line_xdyi::x#1 x zp[2]:66 3333.6666666666665
word bitmap_line_xdyi::x#2 x zp[2]:66 3.7500000375E7
word bitmap_line_xdyi::x#3 x zp[2]:66 6.00200008E7
word bitmap_line_xdyi::x#6 x zp[2]:66 60001.5
word bitmap_line_xdyi::x1
word bitmap_line_xdyi::x1#0 x1 zp[2]:57 5000.5
word bitmap_line_xdyi::x1#1 x1 zp[2]:57 5000.5
word bitmap_line_xdyi::x1#6 x1 zp[2]:57 6668000.2
word bitmap_line_xdyi::xd
word bitmap_line_xdyi::xd#0 xd zp[2]:23 6667.333333333333
word bitmap_line_xdyi::xd#1 xd zp[2]:23 6667.333333333333
word bitmap_line_xdyi::xd#5 xd zp[2]:23 1.3334666933333334E7
word bitmap_line_xdyi::y
word bitmap_line_xdyi::y#0 y zp[2]:59 4000.4
word bitmap_line_xdyi::y#1 y zp[2]:59 4000.4
word bitmap_line_xdyi::y#2 y zp[2]:59 1.00000001E8
word bitmap_line_xdyi::y#3 y zp[2]:59 5.0012500625E7
word bitmap_line_xdyi::y#5 y zp[2]:59 60001.5
word bitmap_line_xdyi::y#6 y zp[2]:59 1.00000001E8
word bitmap_line_xdyi::yd
word bitmap_line_xdyi::yd#0 yd zp[2]:62 10001.0
word bitmap_line_xdyi::yd#1 yd zp[2]:62 10001.0
word bitmap_line_xdyi::yd#2 yd zp[2]:62 6674666.933333334
void bitmap_line_ydxd(word bitmap_line_ydxd::y , word bitmap_line_ydxd::x , word bitmap_line_ydxd::y1 , word bitmap_line_ydxd::yd , word bitmap_line_ydxd::xd , byte bitmap_line_ydxd::c)
word~ bitmap_line_ydxd::$6 zp[2]:78 2.00000002E8
byte bitmap_line_ydxd::c
byte bitmap_line_ydxd::c#0 c zp[1]:56 20002.0
byte bitmap_line_ydxd::c#1 c zp[1]:56 20002.0
byte bitmap_line_ydxd::c#3 c zp[1]:56 6668000.2
word bitmap_line_ydxd::e
word bitmap_line_ydxd::e#0 e zp[2]:70 200002.0
word bitmap_line_ydxd::e#1 e zp[2]:70 1.3333333466666667E8
word bitmap_line_ydxd::e#2 e zp[2]:70 2.00000002E8
word bitmap_line_ydxd::e#3 e zp[2]:70 3.33500005E7
word bitmap_line_ydxd::e#6 e zp[2]:70 1.00000001E8
word bitmap_line_ydxd::x
word bitmap_line_ydxd::x#0 x zp[2]:57 4000.4
word bitmap_line_ydxd::x#1 x zp[2]:57 4000.4
word bitmap_line_ydxd::x#2 x zp[2]:57 1.00000001E8
word bitmap_line_ydxd::x#3 x zp[2]:57 5.0012500625E7
word bitmap_line_ydxd::x#5 x zp[2]:57 60001.5
word bitmap_line_ydxd::x#6 x zp[2]:57 1.00000001E8
word bitmap_line_ydxd::xd
word bitmap_line_ydxd::xd#0 xd zp[2]:23 10001.0
word bitmap_line_ydxd::xd#1 xd zp[2]:23 10001.0
word bitmap_line_ydxd::xd#2 xd zp[2]:23 6674666.933333334
word bitmap_line_ydxd::y
word bitmap_line_ydxd::y#0 y zp[2]:64 3333.6666666666665
word bitmap_line_ydxd::y#1 y zp[2]:64 3333.6666666666665
word bitmap_line_ydxd::y#2 y zp[2]:64 6.00200008E7
word bitmap_line_ydxd::y#3 y zp[2]:64 3.7500000375E7
word bitmap_line_ydxd::y#7 y zp[2]:64 60001.5
word bitmap_line_ydxd::y1
word bitmap_line_ydxd::y1#0 y1 zp[2]:59 5000.5
word bitmap_line_ydxd::y1#1 y1 zp[2]:59 5000.5
word bitmap_line_ydxd::y1#6 y1 zp[2]:59 6668000.2
word bitmap_line_ydxd::yd
word bitmap_line_ydxd::yd#0 yd zp[2]:106 6667.333333333333
word bitmap_line_ydxd::yd#1 yd zp[2]:106 6667.333333333333
word bitmap_line_ydxd::yd#5 yd zp[2]:106 1.3334666933333334E7
void bitmap_line_ydxi(word bitmap_line_ydxi::y , word bitmap_line_ydxi::x , word bitmap_line_ydxi::y1 , word bitmap_line_ydxi::yd , word bitmap_line_ydxi::xd , byte bitmap_line_ydxi::c)
word~ bitmap_line_ydxi::$6 zp[2]:74 2.00000002E8
byte bitmap_line_ydxi::c
byte bitmap_line_ydxi::c#0 c zp[1]:56 20002.0
byte bitmap_line_ydxi::c#1 c zp[1]:56 20002.0
byte bitmap_line_ydxi::c#3 c zp[1]:56 6668000.2
word bitmap_line_ydxi::e
word bitmap_line_ydxi::e#0 e zp[2]:70 200002.0
word bitmap_line_ydxi::e#1 e zp[2]:70 1.3333333466666667E8
word bitmap_line_ydxi::e#2 e zp[2]:70 2.00000002E8
word bitmap_line_ydxi::e#3 e zp[2]:70 3.33500005E7
word bitmap_line_ydxi::e#6 e zp[2]:70 1.00000001E8
word bitmap_line_ydxi::x
word bitmap_line_ydxi::x#0 x zp[2]:57 4000.4
word bitmap_line_ydxi::x#1 x zp[2]:57 4000.4
word bitmap_line_ydxi::x#2 x zp[2]:57 1.00000001E8
word bitmap_line_ydxi::x#3 x zp[2]:57 5.0012500625E7
word bitmap_line_ydxi::x#5 x zp[2]:57 60001.5
word bitmap_line_ydxi::x#6 x zp[2]:57 1.00000001E8
word bitmap_line_ydxi::xd
word bitmap_line_ydxi::xd#0 xd zp[2]:23 10001.0
word bitmap_line_ydxi::xd#1 xd zp[2]:23 10001.0
word bitmap_line_ydxi::xd#2 xd zp[2]:23 6674666.933333334
word bitmap_line_ydxi::y
word bitmap_line_ydxi::y#0 y zp[2]:64 3333.6666666666665
word bitmap_line_ydxi::y#1 y zp[2]:64 3333.6666666666665
word bitmap_line_ydxi::y#2 y zp[2]:64 3.7500000375E7
word bitmap_line_ydxi::y#3 y zp[2]:64 6.00200008E7
word bitmap_line_ydxi::y#6 y zp[2]:64 60001.5
word bitmap_line_ydxi::y1
word bitmap_line_ydxi::y1#0 y1 zp[2]:59 5000.5
word bitmap_line_ydxi::y1#1 y1 zp[2]:59 5000.5
word bitmap_line_ydxi::y1#6 y1 zp[2]:59 6668000.2
word bitmap_line_ydxi::yd
word bitmap_line_ydxi::yd#0 yd zp[2]:62 6667.333333333333
word bitmap_line_ydxi::yd#1 yd zp[2]:62 6667.333333333333
word bitmap_line_ydxi::yd#5 yd zp[2]:62 1.3334666933333334E7
void bitmap_plot(word bitmap_plot::x , word bitmap_plot::y , byte bitmap_plot::c)
word~ bitmap_plot::$10 zp[2]:94 2.000000002E9
const word*~ bitmap_plot::$12 zp[2]:88 1.000000001E9
const dword*~ bitmap_plot::$13 zp[2]:94 2.000000002E9
const byte*~ bitmap_plot::$14 zp[2]:100 2.000000002E9
const byte*~ bitmap_plot::$15 zp[2]:102 2.000000002E9
byte~ bitmap_plot::$3 reg byte x 2.000000002E9
byte~ bitmap_plot::$6 reg byte a 2.000000002E9
byte~ bitmap_plot::$7 reg byte a 2.000000002E9
byte~ bitmap_plot::$8 reg byte a 2.000000002E9
word~ bitmap_plot::$9 zp[2]:88 2.000000002E9
byte bitmap_plot::bitshift
byte bitmap_plot::bitshift#0 reg byte a 1.5000000015E9
byte bitmap_plot::c
byte bitmap_plot::c#0 reg byte x 2.72727273E8
byte bitmap_plot::c#1 reg byte x 2.00000002E8
byte bitmap_plot::c#2 reg byte x 2.00000002E8
byte bitmap_plot::c#3 reg byte x 2.00000002E8
byte bitmap_plot::c#4 reg byte x 2.00000002E8
byte bitmap_plot::c#5 reg byte x 2.1818181872727272E8
dword bitmap_plot::plot_x
dword bitmap_plot::plot_x#0 plot_x zp[4]:90 5.000000005E8
dword bitmap_plot::plot_y
dword bitmap_plot::plot_y#0 plot_y zp[4]:96 2.000000002E9
dword bitmap_plot::plotter
byte~ bitmap_plot::vera_vram_address01_$0 reg byte a 2.000000002E9
byte~ bitmap_plot::vera_vram_address01_$1 reg byte a 2.000000002E9
byte~ bitmap_plot::vera_vram_address01_$3 reg byte a 2.000000002E9
dword bitmap_plot::vera_vram_address01_bankaddr
dword bitmap_plot::vera_vram_address01_bankaddr#0 vera_vram_address01_bankaddr zp[4]:90 3.63636364E8
byte bitmap_plot::vera_vram_address01_incr
word bitmap_plot::x
word bitmap_plot::x#0 x zp[2]:66 6.6666667333333336E7
word bitmap_plot::x#1 x zp[2]:66 6.6666667333333336E7
word bitmap_plot::x#2 x zp[2]:66 6.6666667333333336E7
word bitmap_plot::x#3 x zp[2]:66 6.6666667333333336E7
word bitmap_plot::x#4 x zp[2]:66 1.7000000035E8
word bitmap_plot::y
word bitmap_plot::y#0 y zp[2]:64 1.00000001E8
word bitmap_plot::y#1 y zp[2]:64 1.00000001E8
word bitmap_plot::y#2 y zp[2]:64 1.00000001E8
word bitmap_plot::y#3 y zp[2]:64 1.00000001E8
word bitmap_plot::y#4 y zp[2]:64 3.5000000125E8
constant const byte* bitmasks[5]  = { $80, $c0, $f0, $ff }
constant const signed byte* bitshifts[5]  = { 7, 6, 4, 0 }
void clearline()
byte~ clearline::$1 reg byte a 2.00000002E8
byte~ clearline::$2 reg byte a 2.00000002E8
byte~ clearline::$5 reg byte a 2.00000002E8
byte* clearline::addr
byte* clearline::addr#0 addr zp[2]:106 1.00000001E8
word clearline::c
word clearline::c#1 c zp[2]:66 2.0000000002E10
word clearline::c#2 c zp[2]:66 7.50000000075E9
byte clearline::color
byte clearline::color#0 reg byte x 1.6833333336666665E9
void clrscr()
byte~ clrscr::$0 reg byte a 202.0
byte~ clrscr::$1 zp[1]:56 40.4
byte~ clrscr::$2 reg byte a 202.0
byte~ clrscr::$5 reg byte a 2002.0
byte~ clrscr::$6 reg byte a 2002.0
byte~ clrscr::$7 reg byte a 2002.0
byte~ clrscr::$9 reg byte a 202.0
byte clrscr::c
byte clrscr::c#1 reg byte y 20002.0
byte clrscr::c#2 reg byte y 7500.75
byte* clrscr::ch
byte clrscr::color
byte clrscr::color#0 color zp[1]:56 594.2352941176471
byte clrscr::l
byte clrscr::l#1 reg byte x 2002.0
byte clrscr::l#2 reg byte x 200.2
byte* clrscr::line_text
byte* clrscr::line_text#0 line_text zp[2]:19 18.363636363636363
byte* clrscr::line_text#1 line_text zp[2]:19 1001.0
byte* clrscr::line_text#2 line_text zp[2]:19 293.2142857142857
constant byte* conio_cursor_x[2]  = { 0, 0 }
constant byte* conio_cursor_y[2]  = { 0, 0 }
word conio_height loadstore zp[2]:30 5720.6
constant word* conio_line_text[2]  = { 0, 0 }
byte conio_rowshift loadstore zp[1]:32 5206186.108247423
word conio_rowskip loadstore zp[2]:33 4975627.393034826
volatile byte conio_screen_height loadstore zp[1]:26 63829.93085106383
byte conio_screen_layer loadstore zp[1]:27 1253909.9416058394
volatile byte conio_screen_width loadstore zp[1]:25 4.473218752678571E7
constant byte* conio_scroll_enable[2]  = { 1, 1 }
word conio_width loadstore zp[2]:28 113.58757062146893
void conio_x16_init()
constant byte* const conio_x16_init::BASIC_CURSOR_LINE = (byte*) 214
byte conio_x16_init::line
byte conio_x16_init::line#0 line zp[1]:2 2.1999999999999997
byte conio_x16_init::line#1 line zp[1]:2 22.0
byte conio_x16_init::line#3 line zp[1]:2 33.0
void cputc(byte cputc::c)
byte~ cputc::$15 reg byte a 20002.0
word~ cputc::$16 zp[2]:72 20002.0
byte~ cputc::$2 reg byte a 20002.0
byte~ cputc::$4 reg byte a 20002.0
byte~ cputc::$5 reg byte a 20002.0
byte~ cputc::$6 reg byte a 20002.0
byte cputc::c
byte cputc::c#0 c zp[1]:56 1235.4705882352941
byte cputc::color
byte cputc::color#0 reg byte x 1428.7142857142858
byte* cputc::conio_addr
byte* cputc::conio_addr#0 conio_addr zp[2]:70 10001.0
byte* cputc::conio_addr#1 conio_addr zp[2]:70 6000.6
byte cputc::scroll_enable
byte cputc::scroll_enable#0 reg byte a 20002.0
void cputln()
byte~ cputln::$2 reg byte a 200002.0
byte~ cputln::$3 reg byte a 200002.0
word cputln::temp
word cputln::temp#0 temp zp[2]:86 200002.0
word cputln::temp#1 temp zp[2]:86 100001.0
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 1001.0
const byte* cputs::s
const byte* cputs::s#0 s zp[2]:59 500.5
const byte* cputs::s#8 s zp[2]:59 1552.0
const byte* cputs::s#9 s zp[2]:59 101.0
void cscroll()
word divr16u(word divr16u::dividend , word divr16u::divisor , word divr16u::rem)
byte~ divr16u::$1 reg byte a 2000002.0
byte~ divr16u::$2 reg byte a 2000002.0
word divr16u::dividend
word divr16u::dividend#0 dividend zp[2]:19 250000.25
word divr16u::dividend#1 dividend zp[2]:19 3667.333333333333
word divr16u::dividend#2 dividend zp[2]:19 430000.57142857136
word divr16u::divisor
word divr16u::divisor#0 divisor zp[2]:23 117706.05882352941
byte divr16u::i
byte divr16u::i#1 reg byte x 1500001.5
byte divr16u::i#2 reg byte x 153846.3076923077
word divr16u::quotient
word divr16u::quotient#1 quotient zp[2]:64 1500001.5
word divr16u::quotient#2 quotient zp[2]:64 1000001.0
word divr16u::quotient#3 quotient zp[2]:64 250000.25
word divr16u::rem
word divr16u::rem#0 rem zp[2]:62 750000.75
word divr16u::rem#1 rem zp[2]:62 2000002.0
word divr16u::rem#10 rem zp[2]:62 1003334.6666666666
word divr16u::rem#2 rem zp[2]:62 2000002.0
word divr16u::rem#4 rem zp[2]:62 2000002.0
word divr16u::rem#5 rem zp[2]:62 1000001.0
word divr16u::return
word divr16u::return#0 return zp[2]:64 1000001.0
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte~ gotoxy::$5 reg byte a 2.0000002E7
word~ gotoxy::$6 zp[2]:48 2.0000002E7
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:48 1.0000001E7
byte gotoxy::x
byte gotoxy::y
byte gotoxy::y#1 reg byte x 22.0
byte gotoxy::y#10 reg byte x 4000000.4
byte gotoxy::y#2 reg byte x 2000002.0
byte gotoxy::y#7 reg byte x 7000004.666666666
constant word* hdeltas[$10]  = { 0, $50, $28, $14, 0, $a0, $50, $28, 0, $140, $a0, $50, 0, $280, $140, $a0 }
void insertup()
byte~ insertup::$3 reg byte a 2.000000002E9
byte insertup::cy
byte insertup::cy#0 cy zp[1]:104 7.769230784615384E7
byte insertup::i
byte insertup::i#1 reg byte x 2.000000002E9
byte insertup::i#2 reg byte x 4.000000004E8
word insertup::line
word insertup::line#0 line zp[2]:21 2.000000002E9
byte* insertup::start
byte* insertup::start#0 start zp[2]:21 1.000000001E9
byte insertup::width
byte insertup::width#0 width zp[1]:105 8.416666683333334E7
byte kbhit()
constant byte* const kbhit::GETIN = (byte*) 65508
constant byte* const kbhit::IN_DEV = (byte*) 650
volatile byte kbhit::ch loadstore zp[1]:61 10001.0
constant byte* const kbhit::chptr = &kbhit::ch
byte kbhit::return
byte kbhit::return#0 reg byte a 20002.0
byte kbhit::return#1 reg byte a 2775.75
byte kbhit::return#2 reg byte a 202.0
byte kbhit::return#3 reg byte a 2002.0
void main()
byte~ main::$30 reg byte a 202.0
word~ main::$40 zp[2]:19 202.0
byte~ main::$43 reg byte a 2002.0
byte main::bgcolor1_color
byte main::bgcolor2_color
byte main::bgcolor3_color
byte main::color
byte main::color#1 color zp[1]:5 525.75
byte main::color#2 color zp[1]:5 344.8888888888889
constant byte* main::s[$16]  = "vera in bitmap mode,
"
constant byte* main::s1[$1f]  = "color depth 8 bits per pixel.
"
constant byte* main::s2[$29]  = "in this mode, it is possible to display
"
constant byte* main::s3[$19]  = "graphics in 256 colors.
"
constant byte* main::s4[$10]  = "press a key ..."
constant byte* main::s5[$27]  = "here you see all the colors possible.
"
byte main::textcolor1_color
byte main::textcolor2_color
byte main::textcolor3_color
byte main::textcolor4_color
byte main::textcolor5_color
byte main::vera_layer_show1_layer
word main::x
word main::x#1 x zp[2]:3 701.0
word main::x#3 x zp[2]:3 310.4
void memcpy_in_vram(byte memcpy_in_vram::dest_bank , void* memcpy_in_vram::dest , byte memcpy_in_vram::dest_increment , byte memcpy_in_vram::src_bank , void* memcpy_in_vram::src , byte memcpy_in_vram::src_increment , word memcpy_in_vram::num)
byte~ memcpy_in_vram::$0 reg byte a 2.0000000002E10
byte~ memcpy_in_vram::$1 reg byte a 2.0000000002E10
byte~ memcpy_in_vram::$3 reg byte a 2.0000000002E10
byte~ memcpy_in_vram::$4 reg byte a 2.0000000002E10
byte~ memcpy_in_vram::$5 reg byte a 2.0000000002E10
void* memcpy_in_vram::dest
void* memcpy_in_vram::dest#0 dest zp[2]:21 6.666666673333334E8
void* memcpy_in_vram::dest#2 dest zp[2]:21 2.1000000003000002E9
byte memcpy_in_vram::dest_bank
byte memcpy_in_vram::dest_bank#2 reg byte y 8.333333334166666E8
byte memcpy_in_vram::dest_increment
word memcpy_in_vram::i
word memcpy_in_vram::i#1 i zp[2]:57 2.00000000002E11
word memcpy_in_vram::i#2 i zp[2]:57 1.00000000001E11
word memcpy_in_vram::num
word memcpy_in_vram::num#0 num zp[2]:23 1.000000001E9
word memcpy_in_vram::num#3 num zp[2]:23 5.611111111222221E9
void* memcpy_in_vram::src
byte* memcpy_in_vram::src#0 src zp[2]:19 3.333333336666667E8
void* memcpy_in_vram::src#2 src zp[2]:19 5.25000000075E9
void* memcpy_in_vram::src#3 src zp[2]:19 2.000000002E9
byte memcpy_in_vram::src_bank
byte memcpy_in_vram::src_increment
void memset_vram(byte memset_vram::vbank , void* memset_vram::vdest , byte memset_vram::data , dword memset_vram::num)
byte~ memset_vram::$0 reg byte a 2002.0
byte~ memset_vram::$1 reg byte a 2002.0
byte~ memset_vram::$2 reg byte a 2002.0
byte memset_vram::data
constant byte memset_vram::data#0 data = 0
dword memset_vram::i
dword memset_vram::i#1 i zp[4]:96 20002.0
dword memset_vram::i#2 i zp[4]:96 10001.0
dword memset_vram::num
dword memset_vram::num#0 num zp[4]:90 841.8333333333333
byte memset_vram::vbank
byte memset_vram::vbank#0 reg byte x 137.75
void* memset_vram::vdest
void* memset_vram::vdest#0 vdest zp[2]:59 420.59999999999997
word modr16u(word modr16u::dividend , word modr16u::divisor , word modr16u::rem)
word modr16u::dividend
word modr16u::dividend#0 dividend zp[2]:19 202.0
word modr16u::dividend#1 dividend zp[2]:19 202.0
word modr16u::dividend#2 dividend zp[2]:19 202.0
word modr16u::dividend#3 dividend zp[2]:19 202.0
word modr16u::dividend#4 dividend zp[2]:19 1405.0
word modr16u::divisor
word modr16u::divisor#4 divisor zp[2]:23 500.5
word modr16u::rem
word modr16u::return
word modr16u::return#0 return zp[2]:21 234.16666666666669
word modr16u::return#10 return zp[2]:21 202.0
word modr16u::return#2 return zp[2]:21 202.0
word modr16u::return#3 return_1 zp[2]:57 202.0
word modr16u::return#4 return_2 zp[2]:59 202.0
dword mul16u(word mul16u::a , word mul16u::b)
byte~ mul16u::$1 reg byte a 20002.0
word mul16u::a
word mul16u::a#0 a zp[2]:21 367.33333333333337
word mul16u::a#1 a zp[2]:21 10001.0
word mul16u::a#2 a zp[2]:21 6834.166666666666
word mul16u::b
word mul16u::b#0 b zp[2]:57 101.0
dword mul16u::mb
dword mul16u::mb#0 mb zp[4]:96 2002.0
dword mul16u::mb#1 mb zp[4]:96 20002.0
dword mul16u::mb#2 mb zp[4]:96 4429.142857142857
dword mul16u::res
dword mul16u::res#1 res zp[4]:90 20002.0
dword mul16u::res#2 res zp[4]:90 5017.333333333333
dword mul16u::res#6 res zp[4]:90 10001.0
dword mul16u::return
dword mul16u::return#0 return zp[4]:90 202.0
word rand()
word~ rand::$0 zp[2]:62 2002.0
word~ rand::$1 zp[2]:64 2002.0
word~ rand::$2 zp[2]:66 2002.0
word rand::return
word rand::return#0 return zp[2]:19 215.14285714285714
word rand::return#10 return zp[2]:19 202.0
word rand::return#11 return zp[2]:19 202.0
word rand::return#12 return zp[2]:19 202.0
word rand::return#2 return zp[2]:19 202.0
word rand::return#3 return zp[2]:19 202.0
word rand_state
word rand_state#0 rand_state zp[2]:17 1501.5
word rand_state#1 rand_state zp[2]:17 1501.5
word rand_state#13 rand_state zp[2]:17 1253.5
word rand_state#14 rand_state zp[2]:17 78.34375
word rand_state#23 rand_state zp[2]:17 33.666666666666664
word rem16u
word rem16u#0 rem16u zp[2]:82 3667.333333333333
void screenlayer(byte screenlayer::layer)
word~ screenlayer::$2 zp[2]:68 202.0
byte~ screenlayer::$3 reg byte a 202.0
word~ screenlayer::$4 zp[2]:48 202.0
word~ screenlayer::$5 zp[2]:54 202.0
byte screenlayer::layer
byte~ screenlayer::vera_layer_get_height1_$0 reg byte a 202.0
byte~ screenlayer::vera_layer_get_height1_$1 reg byte a 202.0
byte~ screenlayer::vera_layer_get_height1_$2 reg byte a 202.0
byte~ screenlayer::vera_layer_get_height1_$3 reg byte a 202.0
byte* screenlayer::vera_layer_get_height1_config
byte* screenlayer::vera_layer_get_height1_config#0 vera_layer_get_height1_config zp[2]:50 202.0
byte screenlayer::vera_layer_get_height1_layer
byte screenlayer::vera_layer_get_height1_layer#0 reg byte a 202.0
word screenlayer::vera_layer_get_height1_return
word screenlayer::vera_layer_get_height1_return#0 vera_layer_get_height1_return zp[2]:54 202.0
word screenlayer::vera_layer_get_height1_return#1 vera_layer_get_height1_return zp[2]:54 202.0
byte~ screenlayer::vera_layer_get_width1_$0 reg byte a 202.0
byte~ screenlayer::vera_layer_get_width1_$1 reg byte a 202.0
byte~ screenlayer::vera_layer_get_width1_$2 reg byte a 202.0
byte~ screenlayer::vera_layer_get_width1_$3 reg byte a 202.0
byte* screenlayer::vera_layer_get_width1_config
byte* screenlayer::vera_layer_get_width1_config#0 vera_layer_get_width1_config zp[2]:46 202.0
byte screenlayer::vera_layer_get_width1_layer
byte screenlayer::vera_layer_get_width1_layer#0 reg byte a 202.0
word screenlayer::vera_layer_get_width1_return
word screenlayer::vera_layer_get_width1_return#0 vera_layer_get_width1_return zp[2]:68 202.0
word screenlayer::vera_layer_get_width1_return#1 vera_layer_get_width1_return zp[2]:68 202.0
void screensize(byte* screensize::x , byte* screensize::y)
byte~ screensize::$1 reg byte a 202.0
byte~ screensize::$3 reg byte a 202.0
byte screensize::hscale
byte screensize::hscale#0 reg byte a 202.0
byte screensize::vscale
byte screensize::vscale#0 reg byte a 202.0
byte* screensize::x
constant byte* screensize::x#0 x = &conio_screen_width
byte* screensize::y
constant byte* screensize::y#0 y = &conio_screen_height
constant const word* vdeltas[4]  = { 0, $1e0, $f0, $a0 }
byte vera_display_get_hscale()
constant byte* vera_display_get_hscale::hscale[4]  = { 0, $80, $40, $20 }
byte vera_display_get_hscale::return
byte vera_display_get_hscale::return#0 reg byte x 3367.333333333333
byte vera_display_get_hscale::return#2 reg byte x 202.0
byte vera_display_get_hscale::s
byte vera_display_get_hscale::s#1 reg byte x 15001.5
byte vera_display_get_hscale::s#2 reg byte x 20002.0
byte vera_display_get_hscale::scale
constant byte vera_display_get_hscale::scale#0 scale = 0
byte vera_display_get_vscale()
byte vera_display_get_vscale::return
byte vera_display_get_vscale::return#0 reg byte x 3367.333333333333
byte vera_display_get_vscale::return#2 reg byte x 202.0
byte vera_display_get_vscale::s
byte vera_display_get_vscale::s#1 reg byte x 15001.5
byte vera_display_get_vscale::s#2 reg byte x 20002.0
byte vera_display_get_vscale::scale
constant byte vera_display_get_vscale::scale#0 scale = 0
constant byte* vera_display_get_vscale::vscale[4]  = { 0, $80, $40, $20 }
constant byte* vera_layer_backcolor[2]  = { BLUE, BLUE }
constant byte** vera_layer_config[2]  = { VERA_L0_CONFIG, VERA_L1_CONFIG }
constant byte* vera_layer_enable[2]  = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
byte vera_layer_get_backcolor(byte vera_layer_get_backcolor::layer)
byte vera_layer_get_backcolor::layer
byte vera_layer_get_backcolor::layer#0 reg byte x 1102.0
byte vera_layer_get_backcolor::return
byte vera_layer_get_backcolor::return#0 reg byte a 202.0
byte vera_layer_get_backcolor::return#1 reg byte a 367.33333333333337
byte vera_layer_get_color(byte vera_layer_get_color::layer)
byte~ vera_layer_get_color::$0 reg byte a 2.000000002E9
byte~ vera_layer_get_color::$1 reg byte a 2.000000002E9
byte~ vera_layer_get_color::$3 reg byte a 2.000000002E9
byte* vera_layer_get_color::addr
byte* vera_layer_get_color::addr#0 addr zp[2]:84 2.000000002E9
byte vera_layer_get_color::layer
byte vera_layer_get_color::layer#0 reg byte x 20002.0
byte vera_layer_get_color::layer#1 reg byte x 2.00000002E8
byte vera_layer_get_color::layer#2 reg byte x 6.833350010000001E8
byte vera_layer_get_color::return
byte vera_layer_get_color::return#0 reg byte a 20002.0
byte vera_layer_get_color::return#1 reg byte a 2.000000002E9
byte vera_layer_get_color::return#2 reg byte a 2.000000002E9
byte vera_layer_get_color::return#3 reg byte a 5.25002501E8
byte vera_layer_get_color::return#4 reg byte a 2.00000002E8
byte vera_layer_get_mapbase_bank(byte vera_layer_get_mapbase_bank::layer)
byte vera_layer_get_mapbase_bank::layer
byte vera_layer_get_mapbase_bank::layer#0 reg byte x 1102.0
byte vera_layer_get_mapbase_bank::return
byte vera_layer_get_mapbase_bank::return#0 reg byte a 367.33333333333337
byte vera_layer_get_mapbase_bank::return#2 reg byte a 202.0
word vera_layer_get_mapbase_offset(byte vera_layer_get_mapbase_offset::layer)
byte~ vera_layer_get_mapbase_offset::$0 reg byte a 2002.0
byte vera_layer_get_mapbase_offset::layer
byte vera_layer_get_mapbase_offset::layer#0 reg byte a 1102.0
word vera_layer_get_mapbase_offset::return
word vera_layer_get_mapbase_offset::return#0 return zp[2]:48 367.33333333333337
word vera_layer_get_mapbase_offset::return#2 return zp[2]:48 202.0
byte vera_layer_get_rowshift(byte vera_layer_get_rowshift::layer)
byte vera_layer_get_rowshift::layer
byte vera_layer_get_rowshift::layer#0 reg byte x 1102.0
byte vera_layer_get_rowshift::return
byte vera_layer_get_rowshift::return#0 reg byte a 367.33333333333337
byte vera_layer_get_rowshift::return#2 reg byte a 202.0
word vera_layer_get_rowskip(byte vera_layer_get_rowskip::layer)
byte~ vera_layer_get_rowskip::$0 reg byte a 2002.0
byte vera_layer_get_rowskip::layer
byte vera_layer_get_rowskip::layer#0 reg byte a 1102.0
word vera_layer_get_rowskip::return
word vera_layer_get_rowskip::return#0 return zp[2]:48 367.33333333333337
word vera_layer_get_rowskip::return#2 return zp[2]:48 202.0
byte vera_layer_get_textcolor(byte vera_layer_get_textcolor::layer)
byte vera_layer_get_textcolor::layer
byte vera_layer_get_textcolor::layer#0 reg byte x 1102.0
byte vera_layer_get_textcolor::return
byte vera_layer_get_textcolor::return#0 reg byte a 202.0
byte vera_layer_get_textcolor::return#1 reg byte a 367.33333333333337
constant byte** vera_layer_mapbase[2]  = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_bitmap(byte vera_layer_mode_bitmap::layer , dword vera_layer_mode_bitmap::bitmap_address , word vera_layer_mode_bitmap::mapwidth , word vera_layer_mode_bitmap::color_depth)
dword vera_layer_mode_bitmap::bitmap_address
constant dword vera_layer_mode_bitmap::bitmap_address#1 bitmap_address = 0
word vera_layer_mode_bitmap::color_depth
byte vera_layer_mode_bitmap::config
constant byte vera_layer_mode_bitmap::config#11 config = VERA_LAYER_COLOR_DEPTH_8BPP|VERA_LAYER_CONFIG_MODE_BITMAP
byte vera_layer_mode_bitmap::layer
constant byte vera_layer_mode_bitmap::layer#0 layer = 0
word vera_layer_mode_bitmap::mapwidth
byte vera_layer_mode_bitmap::tilebase
constant byte vera_layer_mode_bitmap::tilebase#1 tilebase = 0
void vera_layer_mode_text(byte vera_layer_mode_text::layer , dword vera_layer_mode_text::mapbase_address , dword vera_layer_mode_text::tilebase_address , word vera_layer_mode_text::mapwidth , word vera_layer_mode_text::mapheight , byte vera_layer_mode_text::tilewidth , byte vera_layer_mode_text::tileheight , word vera_layer_mode_text::color_mode)
word vera_layer_mode_text::color_mode
byte vera_layer_mode_text::layer
constant byte vera_layer_mode_text::layer#0 layer = 1
dword vera_layer_mode_text::mapbase_address
constant dword vera_layer_mode_text::mapbase_address#0 mapbase_address = 0
word vera_layer_mode_text::mapheight
constant word vera_layer_mode_text::mapheight#0 mapheight = $40
word vera_layer_mode_text::mapwidth
constant word vera_layer_mode_text::mapwidth#0 mapwidth = $80
dword vera_layer_mode_text::tilebase_address
constant dword vera_layer_mode_text::tilebase_address#0 tilebase_address = $f800
byte vera_layer_mode_text::tileheight
constant byte vera_layer_mode_text::tileheight#0 tileheight = 8
byte vera_layer_mode_text::tilewidth
constant byte vera_layer_mode_text::tilewidth#0 tilewidth = 8
void vera_layer_mode_tile(byte vera_layer_mode_tile::layer , dword vera_layer_mode_tile::mapbase_address , dword vera_layer_mode_tile::tilebase_address , word vera_layer_mode_tile::mapwidth , word vera_layer_mode_tile::mapheight , byte vera_layer_mode_tile::tilewidth , byte vera_layer_mode_tile::tileheight , byte vera_layer_mode_tile::color_depth)
word~ vera_layer_mode_tile::$1 zp[2]:50 1001.0
byte~ vera_layer_mode_tile::$11 reg byte a 2002.0
byte~ vera_layer_mode_tile::$12 reg byte a 2002.0
byte~ vera_layer_mode_tile::$13 reg byte a 2002.0
byte~ vera_layer_mode_tile::$14 reg byte a 2002.0
byte~ vera_layer_mode_tile::$17 zp[1]:52 250.25
byte~ vera_layer_mode_tile::$18 zp[1]:53 273.0
byte~ vera_layer_mode_tile::$2 reg byte a 2002.0
word~ vera_layer_mode_tile::$6 zp[2]:54 2002.0
byte~ vera_layer_mode_tile::$7 reg byte a 2002.0
byte vera_layer_mode_tile::color_depth
byte vera_layer_mode_tile::config
byte vera_layer_mode_tile::config#10 reg byte x 2002.0
byte vera_layer_mode_tile::config#11 reg byte x 2002.0
byte vera_layer_mode_tile::config#12 reg byte x 2002.0
byte vera_layer_mode_tile::config#21 reg byte x 1001.0
byte vera_layer_mode_tile::config#25 reg byte x 3003.0
byte vera_layer_mode_tile::layer
byte vera_layer_mode_tile::layer#10 layer zp[1]:6 263.4210526315791
byte vera_layer_mode_tile::mapbase
byte vera_layer_mode_tile::mapbase#0 reg byte x 1001.0
dword vera_layer_mode_tile::mapbase_address
dword vera_layer_mode_tile::mapbase_address#0 mapbase_address zp[4]:7 2002.0
dword vera_layer_mode_tile::mapbase_address#10 mapbase_address zp[4]:7 111.22222222222223
word vera_layer_mode_tile::mapheight
word vera_layer_mode_tile::mapheight#10 mapheight zp[2]:46 190.66666666666666
word vera_layer_mode_tile::mapwidth
word vera_layer_mode_tile::mapwidth#10 mapwidth zp[2]:48 1001.0
byte vera_layer_mode_tile::tilebase
byte vera_layer_mode_tile::tilebase#0 reg byte a 2002.0
byte vera_layer_mode_tile::tilebase#1 reg byte x 1334.6666666666667
byte vera_layer_mode_tile::tilebase#10 reg byte x 2002.0
byte vera_layer_mode_tile::tilebase#12 reg byte x 2002.0000000000002
byte vera_layer_mode_tile::tilebase#3 reg byte x 2002.0
byte vera_layer_mode_tile::tilebase#5 reg byte x 2002.0
dword vera_layer_mode_tile::tilebase_address
dword vera_layer_mode_tile::tilebase_address#0 tilebase_address zp[4]:11 2002.0
dword vera_layer_mode_tile::tilebase_address#10 tilebase_address zp[4]:11 87.04347826086956
byte vera_layer_mode_tile::tileheight
byte vera_layer_mode_tile::tileheight#10 tileheight zp[1]:16 37.074074074074076
byte vera_layer_mode_tile::tilewidth
byte vera_layer_mode_tile::tilewidth#10 tilewidth zp[1]:15 40.04
constant byte* vera_layer_rowshift[2]  = { 0, 0 }
constant word* vera_layer_rowskip[2]  = { 0, 0 }
byte vera_layer_set_backcolor(byte vera_layer_set_backcolor::layer , byte vera_layer_set_backcolor::color)
byte vera_layer_set_backcolor::color
byte vera_layer_set_backcolor::color#4 reg byte a 101.0
byte vera_layer_set_backcolor::layer
byte vera_layer_set_backcolor::layer#1 reg byte x 22.0
byte vera_layer_set_backcolor::layer#2 reg byte x 22.0
byte vera_layer_set_backcolor::layer#3 reg byte x 22.0
byte vera_layer_set_backcolor::layer#4 reg byte x 134.0
byte vera_layer_set_backcolor::old
byte vera_layer_set_backcolor::return
void vera_layer_set_config(byte vera_layer_set_config::layer , byte vera_layer_set_config::config)
byte~ vera_layer_set_config::$0 reg byte a 20002.0
byte* vera_layer_set_config::addr
byte* vera_layer_set_config::addr#0 addr zp[2]:68 20002.0
byte vera_layer_set_config::config
byte vera_layer_set_config::config#0 reg byte x 2002.0
byte vera_layer_set_config::config#2 reg byte x 3667.333333333333
byte vera_layer_set_config::layer
byte vera_layer_set_config::layer#0 reg byte a 1001.0
byte vera_layer_set_config::layer#2 reg byte a 11002.0
void vera_layer_set_mapbase(byte vera_layer_set_mapbase::layer , byte vera_layer_set_mapbase::mapbase)
byte~ vera_layer_set_mapbase::$0 reg byte a 20002.0
byte* vera_layer_set_mapbase::addr
byte* vera_layer_set_mapbase::addr#0 addr zp[2]:68 20002.0
byte vera_layer_set_mapbase::layer
byte vera_layer_set_mapbase::layer#0 reg byte a 1001.0
byte vera_layer_set_mapbase::layer#3 reg byte a 11002.0
byte vera_layer_set_mapbase::mapbase
byte vera_layer_set_mapbase::mapbase#0 reg byte x 2002.0
byte vera_layer_set_mapbase::mapbase#3 reg byte x 3667.333333333333
void vera_layer_set_text_color_mode(byte vera_layer_set_text_color_mode::layer , byte vera_layer_set_text_color_mode::color_mode)
byte* vera_layer_set_text_color_mode::addr
byte* vera_layer_set_text_color_mode::addr#0 addr zp[2]:68 2502.5
byte vera_layer_set_text_color_mode::color_mode
byte vera_layer_set_text_color_mode::layer
byte vera_layer_set_textcolor(byte vera_layer_set_textcolor::layer , byte vera_layer_set_textcolor::color)
byte vera_layer_set_textcolor::color
byte vera_layer_set_textcolor::color#6 reg byte a 101.0
byte vera_layer_set_textcolor::layer
byte vera_layer_set_textcolor::layer#1 reg byte x 22.0
byte vera_layer_set_textcolor::layer#2 reg byte x 22.0
byte vera_layer_set_textcolor::layer#3 reg byte x 22.0
byte vera_layer_set_textcolor::layer#4 reg byte x 22.0
byte vera_layer_set_textcolor::layer#5 reg byte x 22.0
byte vera_layer_set_textcolor::layer#6 reg byte x 156.0
byte vera_layer_set_textcolor::old
byte vera_layer_set_textcolor::return
void vera_layer_set_tilebase(byte vera_layer_set_tilebase::layer , byte vera_layer_set_tilebase::tilebase)
byte~ vera_layer_set_tilebase::$0 reg byte a 20002.0
byte* vera_layer_set_tilebase::addr
byte* vera_layer_set_tilebase::addr#0 addr zp[2]:68 20002.0
byte vera_layer_set_tilebase::layer
byte vera_layer_set_tilebase::layer#0 reg byte a 1001.0
byte vera_layer_set_tilebase::layer#2 reg byte a 11002.0
byte vera_layer_set_tilebase::tilebase
byte vera_layer_set_tilebase::tilebase#0 reg byte x 2002.0
byte vera_layer_set_tilebase::tilebase#2 reg byte x 3667.333333333333
constant byte* vera_layer_textcolor[2]  = { WHITE, WHITE }
constant byte** vera_layer_tilebase[2]  = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
constant dword* vera_mapbase_address[2]  = { 0, 0 }
constant byte* vera_mapbase_bank[2]  = { 0, 0 }
constant word* vera_mapbase_offset[2]  = { 0, 0 }
constant dword* vera_tilebase_address[2]  = { 0, 0 }
constant byte* vera_tilebase_bank[2]  = { 0, 0 }
constant word* vera_tilebase_offset[2]  = { 0, 0 }

zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
zp[2]:3 [ main::x#3 main::x#1 bitmap_line::x0#10 bitmap_line::x0#0 bitmap_line::x0#1 ]
zp[1]:5 [ main::color#2 main::color#1 ]
reg byte x [ vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 ]
reg byte a [ vera_layer_set_textcolor::color#6 ]
reg byte x [ vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 ]
reg byte a [ vera_layer_set_backcolor::color#4 ]
reg byte a [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
reg byte x [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
reg byte x [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#1 gotoxy::y#2 ]
reg byte y [ memcpy_in_vram::dest_bank#2 ]
zp[1]:6 [ vera_layer_mode_tile::layer#10 ]
zp[4]:7 [ vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::mapbase_address#0 ]
zp[4]:11 [ vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilebase_address#0 ]
zp[1]:15 [ vera_layer_mode_tile::tilewidth#10 ]
zp[1]:16 [ vera_layer_mode_tile::tileheight#10 ]
reg byte x [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
reg byte x [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte x [ bitmap_init::bitshift#13 bitmap_init::bitshift#3 bitmap_init::bitshift#12 bitmap_init::bitshift#11 bitmap_init::bitshift#10 bitmap_init::bitshift#0 bitmap_init::bitshift#14 bitmap_init::bitshift#1 bitmap_init::bitshift#2 bitmap_init::bitshift#4 ]
reg byte x [ bitmap_line::c#10 bitmap_line::c#0 bitmap_line::c#1 ]
zp[2]:17 [ rand_state#13 rand_state#23 rand_state#14 rand_state#0 rand_state#1 ]
zp[2]:19 [ modr16u::dividend#4 modr16u::dividend#0 modr16u::dividend#1 modr16u::dividend#2 modr16u::dividend#3 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 rand::return#2 rand::return#3 rand::return#10 rand::return#11 rand::return#12 main::$40 rand::return#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 memcpy_in_vram::src#2 memcpy_in_vram::src#3 memcpy_in_vram::src#0 ]
reg byte a [ vera_layer_set_config::layer#2 vera_layer_set_config::layer#0 ]
reg byte x [ vera_layer_set_config::config#2 vera_layer_set_config::config#0 ]
reg byte a [ vera_layer_set_tilebase::layer#2 vera_layer_set_tilebase::layer#0 ]
reg byte x [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#0 ]
reg byte x [ vera_display_get_hscale::return#0 vera_display_get_hscale::s#2 vera_display_get_hscale::s#1 ]
reg byte x [ vera_display_get_vscale::return#0 vera_display_get_vscale::s#2 vera_display_get_vscale::s#1 ]
zp[2]:21 [ mul16u::a#2 mul16u::a#0 mul16u::a#1 bitmap_clear::hdelta#0 bitmap_line::y1#10 bitmap_line::y1#0 modr16u::return#10 modr16u::return#2 modr16u::return#0 bitmap_init::x#10 bitmap_init::x#1 memcpy_in_vram::dest#2 memcpy_in_vram::dest#0 insertup::start#0 insertup::line#0 ]
zp[2]:23 [ bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#1 bitmap_line_xdyi::xd#0 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#1 bitmap_line_xdyd::xd#0 modr16u::divisor#4 divr16u::divisor#0 bitmap_init::y#2 bitmap_init::y#1 memcpy_in_vram::num#3 memcpy_in_vram::num#0 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
reg byte a [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
reg byte x [ bitmap_plot::c#0 bitmap_plot::$3 bitmap_plot::c#5 bitmap_plot::c#2 bitmap_plot::c#1 bitmap_plot::c#4 bitmap_plot::c#3 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
zp[1]:25 [ conio_screen_width ]
zp[1]:26 [ conio_screen_height ]
zp[1]:27 [ conio_screen_layer ]
zp[2]:28 [ conio_width ]
zp[2]:30 [ conio_height ]
zp[1]:32 [ conio_rowshift ]
zp[2]:33 [ conio_rowskip ]
zp[4]:35 [ __bitmap_address ]
zp[1]:39 [ __bitmap_layer ]
zp[1]:40 [ __bitmap_hscale ]
zp[1]:41 [ __bitmap_vscale ]
zp[1]:42 [ __bitmap_color_depth ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$30 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$43 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte x [ vera_layer_get_mapbase_bank::layer#0 ]
reg byte a [ vera_layer_get_mapbase_bank::return#2 ]
zp[1]:43 [ CONIO_SCREEN_BANK#15 ]
reg byte a [ vera_layer_get_mapbase_offset::layer#0 ]
zp[2]:44 [ CONIO_SCREEN_TEXT#104 ]
reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$2 ]
zp[2]:46 [ screenlayer::vera_layer_get_width1_config#0 vera_layer_mode_tile::mapheight#10 ]
reg byte a [ screenlayer::vera_layer_get_width1_$0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$1 ]
reg byte a [ screenlayer::vera_layer_get_width1_$3 ]
reg byte x [ vera_layer_get_rowshift::layer#0 ]
reg byte a [ vera_layer_get_rowshift::return#2 ]
reg byte a [ screenlayer::$3 ]
reg byte a [ vera_layer_get_rowskip::layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$2 ]
reg byte a [ screenlayer::vera_layer_get_height1_$0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$1 ]
reg byte a [ screenlayer::vera_layer_get_height1_$3 ]
reg byte a [ vera_layer_set_mapbase::$0 ]
zp[2]:48 [ gotoxy::$6 gotoxy::line_offset#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 vera_layer_mode_tile::mapwidth#10 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
reg byte a [ memcpy_in_vram::$5 ]
reg byte a [ vera_layer_mode_tile::$14 ]
zp[2]:50 [ vera_layer_mode_tile::$1 screenlayer::vera_layer_get_height1_config#0 ]
zp[1]:52 [ vera_layer_mode_tile::$17 ]
reg byte a [ vera_layer_mode_tile::$2 ]
zp[1]:53 [ vera_layer_mode_tile::$18 ]
reg byte x [ vera_layer_mode_tile::mapbase#0 ]
zp[2]:54 [ vera_layer_mode_tile::$6 screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
reg byte a [ vera_layer_mode_tile::$7 ]
reg byte a [ vera_layer_mode_tile::tilebase#0 ]
reg byte a [ vera_layer_mode_tile::$13 ]
reg byte a [ vera_layer_mode_tile::$12 ]
reg byte a [ vera_layer_mode_tile::$11 ]
reg byte x [ vera_layer_get_backcolor::layer#0 ]
reg byte a [ vera_layer_get_backcolor::return#0 ]
reg byte a [ clrscr::$0 ]
reg byte x [ vera_layer_get_textcolor::layer#0 ]
reg byte a [ vera_layer_get_textcolor::return#0 ]
reg byte a [ clrscr::$2 ]
reg byte a [ clrscr::$9 ]
reg byte a [ clrscr::$5 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ cputs::c#1 ]
zp[1]:56 [ cputc::c#0 clrscr::$1 clrscr::color#0 bitmap_line_xdyd::c#3 bitmap_line_xdyd::c#1 bitmap_line_xdyd::c#0 bitmap_line_ydxd::c#3 bitmap_line_ydxd::c#0 bitmap_line_ydxd::c#1 bitmap_line_xdyi::c#3 bitmap_line_xdyi::c#1 bitmap_line_xdyi::c#0 bitmap_line_ydxi::c#3 bitmap_line_ydxi::c#1 bitmap_line_ydxi::c#0 bitmap_init::bitmask#13 bitmap_init::bitmask#3 bitmap_init::bitmask#12 bitmap_init::bitmask#11 bitmap_init::bitmask#10 bitmap_init::bitmask#0 bitmap_init::bitmask#16 bitmap_init::bitmask#1 bitmap_init::bitmask#2 bitmap_init::bitmask#4 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_layer#0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_$1 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_$0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_return#0 ]
reg byte a [ bitmap_init::vera_layer_get_color_depth1_return#1 ]
reg byte a [ bitmap_init::$0 ]
reg byte x [ vera_display_get_hscale::return#2 ]
reg byte x [ bitmap_init::$1 ]
reg byte x [ vera_display_get_vscale::return#2 ]
reg byte x [ bitmap_init::$2 ]
reg byte a [ bitmap_init::$3 ]
reg byte a [ bitmap_init::$4 ]
reg byte a [ bitmap_init::$27 ]
reg byte a [ bitmap_clear::$6 ]
zp[2]:57 [ bitmap_clear::vdelta#0 mul16u::b#0 bitmap_init::$7 bitmap_line::x1#10 bitmap_line::x1#0 bitmap_line::x1#1 bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#1 bitmap_line_xdyi::x1#0 bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#1 bitmap_line_xdyd::x1#0 modr16u::return#3 memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
reg byte a [ bitmap_clear::$0 ]
reg byte a [ bitmap_clear::$1 ]
reg byte a [ bitmap_clear::$7 ]
reg byte x [ bitmap_clear::vbank#0 ]
zp[2]:59 [ bitmap_clear::vdest#0 memset_vram::vdest#0 bitmap_init::$23 bitmap_init::$29 bitmap_line::y0#10 bitmap_line::y0#0 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 modr16u::return#4 cputs::s#8 cputs::s#9 cputs::s#0 ]
reg byte x [ memset_vram::vbank#0 ]
zp[1]:61 [ kbhit::ch ]
reg byte a [ kbhit::return#0 ]
reg byte a [ kbhit::return#1 ]
zp[2]:62 [ rand::$0 bitmap_init::$30 divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line::yd#2 bitmap_line::yd#11 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#1 bitmap_line_xdyi::yd#0 ]
zp[2]:64 [ rand::$1 bitmap_init::$31 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
zp[2]:66 [ rand::$2 bitmap_init::$10 clearline::c#2 clearline::c#1 bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#2 bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#2 ]
reg byte a [ vera_layer_get_mapbase_bank::return#0 ]
reg byte a [ vera_layer_get_mapbase_offset::$0 ]
reg byte a [ vera_layer_get_rowshift::return#0 ]
reg byte a [ vera_layer_get_rowskip::$0 ]
reg byte a [ vera_layer_set_config::$0 ]
reg byte a [ vera_layer_set_tilebase::$0 ]
zp[2]:68 [ vera_layer_set_tilebase::addr#0 vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
reg byte a [ vera_layer_get_backcolor::return#1 ]
reg byte a [ vera_layer_get_textcolor::return#1 ]
reg byte a [ vera_layer_get_color::return#0 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
zp[2]:70 [ cputc::conio_addr#0 cputc::conio_addr#1 bitmap_init::$24 bitmap_init::$32 bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:72 [ cputc::$16 bitmap_init::$33 ]
reg byte a [ mul16u::$1 ]
reg byte a [ memset_vram::$0 ]
reg byte a [ memset_vram::$1 ]
reg byte a [ memset_vram::$2 ]
zp[2]:74 [ bitmap_line_ydxi::$6 bitmap_init::$34 ]
zp[2]:76 [ bitmap_line_xdyi::$6 bitmap_init::$13 ]
zp[2]:78 [ bitmap_line_ydxd::$6 bitmap_init::$25 bitmap_init::$35 ]
zp[2]:80 [ bitmap_line_xdyd::$6 bitmap_init::$36 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
zp[2]:82 [ rem16u#0 ]
reg byte a [ vera_layer_get_color::$3 ]
zp[2]:84 [ vera_layer_get_color::addr#0 bitmap_init::$37 ]
reg byte a [ vera_layer_get_color::$0 ]
reg byte a [ vera_layer_get_color::$1 ]
reg byte a [ cputln::$2 ]
zp[2]:86 [ cputln::temp#0 cputln::temp#1 bitmap_init::$26 bitmap_init::$38 ]
reg byte a [ cputln::$3 ]
zp[2]:88 [ bitmap_plot::$9 bitmap_plot::$12 bitmap_init::$39 ]
zp[4]:90 [ bitmap_plot::plot_x#0 bitmap_plot::vera_vram_address01_bankaddr#0 mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#0 bitmap_clear::count#0 memset_vram::num#0 bitmap_init::yoffs#2 bitmap_init::yoffs#0 bitmap_init::yoffs#1 ]
zp[2]:94 [ bitmap_plot::$10 bitmap_plot::$13 bitmap_init::$40 ]
zp[4]:96 [ bitmap_plot::plot_y#0 memset_vram::i#2 memset_vram::i#1 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
zp[2]:100 [ bitmap_plot::$14 bitmap_init::hdelta#0 ]
reg byte a [ bitmap_plot::bitshift#0 ]
reg byte a [ bitmap_plot::vera_vram_address01_$0 ]
reg byte a [ bitmap_plot::vera_vram_address01_$1 ]
reg byte a [ bitmap_plot::vera_vram_address01_$3 ]
zp[2]:102 [ bitmap_plot::$15 bitmap_init::$28 bitmap_init::$41 ]
reg byte a [ bitmap_plot::$6 ]
reg byte a [ bitmap_plot::$7 ]
reg byte a [ bitmap_plot::$8 ]
zp[1]:104 [ insertup::cy#0 ]
zp[1]:105 [ insertup::width#0 ]
reg byte a [ insertup::$3 ]
reg byte a [ clearline::$5 ]
zp[2]:106 [ clearline::addr#0 bitmap_init::vera_layer_get_color_depth1_config#0 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 bitmap_line::yd#1 bitmap_line::yd#10 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#1 bitmap_line_xdyd::yd#0 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_layer_get_color::return#4 ]
reg byte x [ clearline::color#0 ]


FINAL ASSEMBLER
Score: 588307

  // File Comments
// Example program for the Commander X16.
// Demonstrates the usage of the VERA tile map modes and layering.
  // Upstart
.cpu _65c02
  // Commodore 64 PRG executable file
.file [name="bitmap_8bpp_320_x_240.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  /// The colors of the CX16
  .const BLACK = 0
  .const WHITE = 1
  .const BLUE = 6
  .const YELLOW = 7
  .const VERA_INC_1 = $10
  .const VERA_ADDRSEL = 1
  .const VERA_LAYER1_ENABLE = $20
  .const VERA_LAYER0_ENABLE = $10
  .const VERA_LAYER_WIDTH_64 = $10
  .const VERA_LAYER_WIDTH_128 = $20
  .const VERA_LAYER_WIDTH_256 = $30
  .const VERA_LAYER_WIDTH_MASK = $30
  .const VERA_LAYER_HEIGHT_64 = $40
  .const VERA_LAYER_HEIGHT_128 = $80
  .const VERA_LAYER_HEIGHT_256 = $c0
  .const VERA_LAYER_HEIGHT_MASK = $c0
  /// Bit 0-1: Color Depth (0: 1 bpp, 1: 2 bpp, 2: 4 bpp, 3: 8 bpp)
  .const VERA_LAYER_COLOR_DEPTH_1BPP = 0
  .const VERA_LAYER_COLOR_DEPTH_8BPP = 3
  .const VERA_LAYER_COLOR_DEPTH_MASK = 3
  .const VERA_LAYER_CONFIG_MODE_BITMAP = 4
  .const VERA_LAYER_CONFIG_256C = 8
  .const VERA_TILEBASE_WIDTH_16 = 1
  .const VERA_TILEBASE_HEIGHT_16 = 2
  .const VERA_LAYER_TILEBASE_MASK = $fc
  .const SIZEOF_POINTER = 2
  /// $9F20 VRAM Address (7:0)
  .label VERA_ADDRX_L = $9f20
  /// $9F21 VRAM Address (15:8)
  .label VERA_ADDRX_M = $9f21
  /// $9F22 VRAM Address (7:0)
  /// Bit 4-7: Address Increment  The following is the amount incremented per value value:increment
  ///                             0:0, 1:1, 2:2, 3:4, 4:8, 5:16, 6:32, 7:64, 8:128, 9:256, 10:512, 11:40, 12:80, 13:160, 14:320, 15:640
  /// Bit 3: DECR Setting the DECR bit, will decrement instead of increment by the value set by the 'Address Increment' field.
  /// Bit 0: VRAM Address (16)
  .label VERA_ADDRX_H = $9f22
  /// $9F23	DATA0	VRAM Data port 0
  .label VERA_DATA0 = $9f23
  /// $9F24	DATA1	VRAM Data port 1
  .label VERA_DATA1 = $9f24
  /// $9F25	CTRL Control
  /// Bit 7: Reset
  /// Bit 1: DCSEL
  /// Bit 2: ADDRSEL
  .label VERA_CTRL = $9f25
  /// $9F29	DC_VIDEO (DCSEL=0)
  /// Bit 7: Current Field     Read-only bit which reflects the active interlaced field in composite and RGB modes. (0: even, 1: odd)
  /// Bit 6: Sprites Enable	Enable output from the Sprites renderer
  /// Bit 5: Layer1 Enable	    Enable output from the Layer1 renderer
  /// Bit 4: Layer0 Enable	    Enable output from the Layer0 renderer
  /// Bit 2: Chroma Disable    Setting 'Chroma Disable' disables output of chroma in NTSC composite mode and will give a better picture on a monochrome display. (Setting this bit will also disable the chroma output on the S-video output.)
  /// Bit 0-1: Output Mode     0: Video disabled, 1: VGA output, 2: NTSC composite, 3: RGB interlaced, composite sync (via VGA connector)
  .label VERA_DC_VIDEO = $9f29
  /// $9F2A	DC_HSCALE (DCSEL=0)	Active Display H-Scale
  .label VERA_DC_HSCALE = $9f2a
  /// $9F2B	DC_VSCALE (DCSEL=0)	Active Display V-Scale
  .label VERA_DC_VSCALE = $9f2b
  /// $9F2D	L0_CONFIG   Layer 0 Configuration
  .label VERA_L0_CONFIG = $9f2d
  /// $9F2E	L0_MAPBASE	    Layer 0 Map Base Address (16:9)
  .label VERA_L0_MAPBASE = $9f2e
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L0_TILEBASE = $9f2f
  /// $9F34	L1_CONFIG   Layer 1 Configuration
  .label VERA_L1_CONFIG = $9f34
  /// $9F35	L1_MAPBASE	    Layer 1 Map Base Address (16:9)
  .label VERA_L1_MAPBASE = $9f35
  /// $9F36	L1_TILEBASE	    Layer 1 Tile Base
  /// Bit 2-7: Tile Base Address (16:11)
  /// Bit 1:   Tile Height (0:8 pixels, 1:16 pixels)
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L1_TILEBASE = $9f36
  // Variable holding the screen width;
  .label conio_screen_width = $19
  // Variable holding the screen height;
  .label conio_screen_height = $1a
  // Variable holding the screen layer on the VERA card with which conio interacts;
  .label conio_screen_layer = $1b
  // Variables holding the current map width and map height of the layer.
  .label conio_width = $1c
  .label conio_height = $1e
  .label conio_rowshift = $20
  .label conio_rowskip = $21
  .label __bitmap_address = $23
  .label __bitmap_layer = $27
  .label __bitmap_hscale = $28
  .label __bitmap_vscale = $29
  .label __bitmap_color_depth = $2a
  // The random state variable
  .label rand_state = $11
  // Remainder after unsigned 16-bit division
  .label rem16u = $52
  .label CONIO_SCREEN_BANK = $2b
  // The screen width
  // The screen height
  // The text screen base address, which is a 16:0 bit value in VERA VRAM.
  // That is 128KB addressable space, thus 17 bits in total.
  // CONIO_SCREEN_TEXT contains bits 15:0 of the address.
  // CONIO_SCREEN_BANK contains bit 16, the the 64K memory bank in VERA VRAM (the upper 17th bit).
  // !!! note that these values are not const for the cx16!
  // This conio implements the two layers of VERA, which can be layer 0 or layer 1.
  // Configuring conio to output to a different layer, will change these fields to the address base
  // configured using VERA_L0_MAPBASE = 0x9f2e or VERA_L1_MAPBASE = 0x9f35.
  // Using the function setscreenlayer(layer) will re-calculate using CONIO_SCREEN_TEXT and CONIO_SCREEN_BASE
  // based on the values of VERA_L0_MAPBASE or VERA_L1_MAPBASE, mapping the base address of the selected layer.
  // The function setscreenlayermapbase(layer,mapbase) allows to configure bit 16:9 of the
  // mapbase address of the time map in VRAM of the selected layer VERA_L0_MAPBASE or VERA_L1_MAPBASE.
  .label CONIO_SCREEN_TEXT = $2c
.segment Code
  // __start
__start: {
    // __start::__init1
    // __ma unsigned byte conio_screen_width = 0
    // [1] conio_screen_width = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_screen_width
    // __ma unsigned byte conio_screen_height = 0
    // [2] conio_screen_height = 0 -- vbuz1=vbuc1 
    sta.z conio_screen_height
    // __ma unsigned byte conio_screen_layer = 1
    // [3] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // __ma word conio_width = 0
    // [4] conio_width = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_width
    sta.z conio_width+1
    // __ma word conio_height = 0
    // [5] conio_height = 0 -- vwuz1=vwuc1 
    sta.z conio_height
    sta.z conio_height+1
    // __ma byte conio_rowshift = 0
    // [6] conio_rowshift = 0 -- vbuz1=vbuc1 
    sta.z conio_rowshift
    // __ma word conio_rowskip = 0
    // [7] conio_rowskip = 0 -- vwuz1=vwuc1 
    sta.z conio_rowskip
    sta.z conio_rowskip+1
    // __ma dword __bitmap_address = 0
    // [8] __bitmap_address = 0 -- vduz1=vduc1 
    sta.z __bitmap_address
    sta.z __bitmap_address+1
    lda #<0>>$10
    sta.z __bitmap_address+2
    lda #>0>>$10
    sta.z __bitmap_address+3
    // __ma byte __bitmap_layer = 0
    // [9] __bitmap_layer = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z __bitmap_layer
    // __ma byte __bitmap_hscale = 0
    // [10] __bitmap_hscale = 0 -- vbuz1=vbuc1 
    sta.z __bitmap_hscale
    // __ma byte __bitmap_vscale = 0
    // [11] __bitmap_vscale = 0 -- vbuz1=vbuc1 
    sta.z __bitmap_vscale
    // __ma byte __bitmap_color_depth = 0
    // [12] __bitmap_color_depth = 0 -- vbuz1=vbuc1 
    sta.z __bitmap_color_depth
    // #pragma constructor_for(conio_x16_init, cputc, clrscr, cscroll)
    // [13] call conio_x16_init 
    jsr conio_x16_init
    // [14] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
    // __start::@1
    // [15] call main 
    // [37] phi from __start::@1 to main [phi:__start::@1->main]
    jsr main
    // __start::@return
    // [16] return 
    rts
}
  // conio_x16_init
// Set initial cursor position
conio_x16_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    .label line = 2
    // char line = *BASIC_CURSOR_LINE
    // [17] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE -- vbuz1=_deref_pbuc1 
    lda BASIC_CURSOR_LINE
    sta.z line
    // vera_layer_mode_text(1,(dword)0x00000,(dword)0x0F800,128,64,8,8,16)
    // [18] call vera_layer_mode_text 
    // [145] phi from conio_x16_init to vera_layer_mode_text [phi:conio_x16_init->vera_layer_mode_text]
    jsr vera_layer_mode_text
    // [19] phi from conio_x16_init to conio_x16_init::@3 [phi:conio_x16_init->conio_x16_init::@3]
    // conio_x16_init::@3
    // screensize(&conio_screen_width, &conio_screen_height)
    // [20] call screensize 
    jsr screensize
    // [21] phi from conio_x16_init::@3 to conio_x16_init::@4 [phi:conio_x16_init::@3->conio_x16_init::@4]
    // conio_x16_init::@4
    // screenlayer(1)
    // [22] call screenlayer 
    jsr screenlayer
    // [23] phi from conio_x16_init::@4 to conio_x16_init::@5 [phi:conio_x16_init::@4->conio_x16_init::@5]
    // conio_x16_init::@5
    // vera_layer_set_textcolor(1, WHITE)
    // [24] call vera_layer_set_textcolor 
    // [197] phi from conio_x16_init::@5 to vera_layer_set_textcolor [phi:conio_x16_init::@5->vera_layer_set_textcolor]
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:conio_x16_init::@5->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = 1 [phi:conio_x16_init::@5->vera_layer_set_textcolor#1] -- vbuxx=vbuc1 
    ldx #1
    jsr vera_layer_set_textcolor
    // [25] phi from conio_x16_init::@5 to conio_x16_init::@6 [phi:conio_x16_init::@5->conio_x16_init::@6]
    // conio_x16_init::@6
    // vera_layer_set_backcolor(1, BLUE)
    // [26] call vera_layer_set_backcolor 
    // [200] phi from conio_x16_init::@6 to vera_layer_set_backcolor [phi:conio_x16_init::@6->vera_layer_set_backcolor]
    // [200] phi vera_layer_set_backcolor::color#4 = BLUE [phi:conio_x16_init::@6->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLUE
    // [200] phi vera_layer_set_backcolor::layer#4 = 1 [phi:conio_x16_init::@6->vera_layer_set_backcolor#1] -- vbuxx=vbuc1 
    ldx #1
    jsr vera_layer_set_backcolor
    // [27] phi from conio_x16_init::@6 to conio_x16_init::@7 [phi:conio_x16_init::@6->conio_x16_init::@7]
    // conio_x16_init::@7
    // vera_layer_set_mapbase(0,0x20)
    // [28] call vera_layer_set_mapbase 
    // [203] phi from conio_x16_init::@7 to vera_layer_set_mapbase [phi:conio_x16_init::@7->vera_layer_set_mapbase]
    // [203] phi vera_layer_set_mapbase::mapbase#3 = $20 [phi:conio_x16_init::@7->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #$20
    // [203] phi vera_layer_set_mapbase::layer#3 = 0 [phi:conio_x16_init::@7->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #0
    jsr vera_layer_set_mapbase
    // [29] phi from conio_x16_init::@7 to conio_x16_init::@8 [phi:conio_x16_init::@7->conio_x16_init::@8]
    // conio_x16_init::@8
    // vera_layer_set_mapbase(1,0x00)
    // [30] call vera_layer_set_mapbase 
    // [203] phi from conio_x16_init::@8 to vera_layer_set_mapbase [phi:conio_x16_init::@8->vera_layer_set_mapbase]
    // [203] phi vera_layer_set_mapbase::mapbase#3 = 0 [phi:conio_x16_init::@8->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #0
    // [203] phi vera_layer_set_mapbase::layer#3 = 1 [phi:conio_x16_init::@8->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #1
    jsr vera_layer_set_mapbase
    // conio_x16_init::@9
    // if(line>=CONIO_HEIGHT)
    // [31] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1 -- vbuz1_lt_vbuz2_then_la1 
    lda.z line
    cmp.z conio_screen_height
    bcc __b1
    // conio_x16_init::@2
    // line=CONIO_HEIGHT-1
    // [32] conio_x16_init::line#1 = conio_screen_height - 1 -- vbuz1=vbuz2_minus_1 
    ldx.z conio_screen_height
    dex
    stx.z line
    // [33] phi from conio_x16_init::@2 conio_x16_init::@9 to conio_x16_init::@1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1]
    // [33] phi conio_x16_init::line#3 = conio_x16_init::line#1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1#0] -- register_copy 
    // conio_x16_init::@1
  __b1:
    // gotoxy(0, line)
    // [34] gotoxy::y#1 = conio_x16_init::line#3 -- vbuxx=vbuz1 
    ldx.z line
    // [35] call gotoxy 
    // [208] phi from conio_x16_init::@1 to gotoxy [phi:conio_x16_init::@1->gotoxy]
    // [208] phi gotoxy::y#7 = gotoxy::y#1 [phi:conio_x16_init::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    // conio_x16_init::@return
    // }
    // [36] return 
    rts
}
  // main
main: {
    .label __40 = $13
    .label color = 5
    .label x = 3
    // memcpy_in_vram(1, (char*)0xF000, VERA_INC_1, 0, (char*)0xF800, VERA_INC_1, 256*8)
    // [38] call memcpy_in_vram 
  // Before we configure the bitmap pane into vera  memory we need to re-arrange a few things!
  // It is better to load all in bank 0, but then there is an issue.
  // So the default CX16 character set is located in bank 0, at address 0xF800.
  // So we need to move this character set to bank 1, suggested is at address 0xF000.
  // The CX16 by default writes textual output to layer 1 in text mode, so we need to
  // realign the moved character set to 0xf000 as the new tile base for layer 1.
  // We also will need to realign for layer 1 the map base from 0x00000 to 0x14000.
  // This is now all easily done with a few statements in the new kickc vera lib ...
    // [221] phi from main to memcpy_in_vram [phi:main->memcpy_in_vram]
    // [221] phi memcpy_in_vram::num#3 = $100*8 [phi:main->memcpy_in_vram#0] -- vwuz1=vwuc1 
    lda #<$100*8
    sta.z memcpy_in_vram.num
    lda #>$100*8
    sta.z memcpy_in_vram.num+1
    // [221] phi memcpy_in_vram::dest_bank#2 = 1 [phi:main->memcpy_in_vram#1] -- vbuyy=vbuc1 
    ldy #1
    // [221] phi memcpy_in_vram::dest#2 = (void*)(byte*) 61440 [phi:main->memcpy_in_vram#2] -- pvoz1=pvoc1 
    lda #<$f000
    sta.z memcpy_in_vram.dest
    lda #>$f000
    sta.z memcpy_in_vram.dest+1
    // [221] phi memcpy_in_vram::src#2 = (void*)(byte*) 63488 [phi:main->memcpy_in_vram#3] -- pvoz1=pvoc1 
    lda #<$f800
    sta.z memcpy_in_vram.src
    lda #>$f800
    sta.z memcpy_in_vram.src+1
    jsr memcpy_in_vram
    // [39] phi from main to main::@12 [phi:main->main::@12]
    // main::@12
    // vera_layer_mode_tile(1, 0x14000, 0x1F000, 128, 64, 8, 8, 1)
    // [40] call vera_layer_mode_tile 
  // We copy the 128 character set of 8 bytes each.
    // [240] phi from main::@12 to vera_layer_mode_tile [phi:main::@12->vera_layer_mode_tile]
    // [240] phi vera_layer_mode_tile::tileheight#10 = 8 [phi:main::@12->vera_layer_mode_tile#0] -- vbuz1=vbuc1 
    lda #8
    sta.z vera_layer_mode_tile.tileheight
    // [240] phi vera_layer_mode_tile::tilewidth#10 = 8 [phi:main::@12->vera_layer_mode_tile#1] -- vbuz1=vbuc1 
    sta.z vera_layer_mode_tile.tilewidth
    // [240] phi vera_layer_mode_tile::tilebase_address#10 = $1f000 [phi:main::@12->vera_layer_mode_tile#2] -- vduz1=vduc1 
    lda #<$1f000
    sta.z vera_layer_mode_tile.tilebase_address
    lda #>$1f000
    sta.z vera_layer_mode_tile.tilebase_address+1
    lda #<$1f000>>$10
    sta.z vera_layer_mode_tile.tilebase_address+2
    lda #>$1f000>>$10
    sta.z vera_layer_mode_tile.tilebase_address+3
    // [240] phi vera_layer_mode_tile::mapbase_address#10 = $14000 [phi:main::@12->vera_layer_mode_tile#3] -- vduz1=vduc1 
    lda #<$14000
    sta.z vera_layer_mode_tile.mapbase_address
    lda #>$14000
    sta.z vera_layer_mode_tile.mapbase_address+1
    lda #<$14000>>$10
    sta.z vera_layer_mode_tile.mapbase_address+2
    lda #>$14000>>$10
    sta.z vera_layer_mode_tile.mapbase_address+3
    // [240] phi vera_layer_mode_tile::mapheight#10 = $40 [phi:main::@12->vera_layer_mode_tile#4] -- vwuz1=vbuc1 
    lda #<$40
    sta.z vera_layer_mode_tile.mapheight
    lda #>$40
    sta.z vera_layer_mode_tile.mapheight+1
    // [240] phi vera_layer_mode_tile::layer#10 = 1 [phi:main::@12->vera_layer_mode_tile#5] -- vbuz1=vbuc1 
    lda #1
    sta.z vera_layer_mode_tile.layer
    // [240] phi vera_layer_mode_tile::mapwidth#10 = $80 [phi:main::@12->vera_layer_mode_tile#6] -- vwuz1=vbuc1 
    lda #<$80
    sta.z vera_layer_mode_tile.mapwidth
    lda #>$80
    sta.z vera_layer_mode_tile.mapwidth+1
    jsr vera_layer_mode_tile
    // [41] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
    // main::@13
    // vera_layer_mode_bitmap(0, (dword)0x00000, 320, 8)
    // [42] call vera_layer_mode_bitmap 
    // [301] phi from main::@13 to vera_layer_mode_bitmap [phi:main::@13->vera_layer_mode_bitmap]
    jsr vera_layer_mode_bitmap
    // [43] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
    // main::@14
    // screenlayer(1)
    // [44] call screenlayer 
    jsr screenlayer
    // main::textcolor1
    // vera_layer_set_textcolor(conio_screen_layer, color)
    // [45] vera_layer_set_textcolor::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [46] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor1 to vera_layer_set_textcolor [phi:main::textcolor1->vera_layer_set_textcolor]
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:main::textcolor1->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#1 [phi:main::textcolor1->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // main::bgcolor1
    // vera_layer_set_backcolor(conio_screen_layer, color)
    // [47] vera_layer_set_backcolor::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [48] call vera_layer_set_backcolor 
    // [200] phi from main::bgcolor1 to vera_layer_set_backcolor [phi:main::bgcolor1->vera_layer_set_backcolor]
    // [200] phi vera_layer_set_backcolor::color#4 = BLACK [phi:main::bgcolor1->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLACK
    // [200] phi vera_layer_set_backcolor::layer#4 = vera_layer_set_backcolor::layer#1 [phi:main::bgcolor1->vera_layer_set_backcolor#1] -- register_copy 
    jsr vera_layer_set_backcolor
    // [49] phi from main::bgcolor1 to main::@6 [phi:main::bgcolor1->main::@6]
    // main::@6
    // clrscr()
    // [50] call clrscr 
    jsr clrscr
    // [51] phi from main::@6 to main::@15 [phi:main::@6->main::@15]
    // main::@15
    // gotoxy(0,25)
    // [52] call gotoxy 
    // [208] phi from main::@15 to gotoxy [phi:main::@15->gotoxy]
    // [208] phi gotoxy::y#7 = $19 [phi:main::@15->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$19
    jsr gotoxy
    // [53] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
    // main::@16
    // printf("vera in bitmap mode,\n")
    // [54] call cputs 
    // [344] phi from main::@16 to cputs [phi:main::@16->cputs]
    // [344] phi cputs::s#9 = main::s [phi:main::@16->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    // [55] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
    // main::@17
    // printf("color depth 8 bits per pixel.\n")
    // [56] call cputs 
    // [344] phi from main::@17 to cputs [phi:main::@17->cputs]
    // [344] phi cputs::s#9 = main::s1 [phi:main::@17->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // [57] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
    // main::@18
    // printf("in this mode, it is possible to display\n")
    // [58] call cputs 
    // [344] phi from main::@18 to cputs [phi:main::@18->cputs]
    // [344] phi cputs::s#9 = main::s2 [phi:main::@18->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    // [59] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
    // main::@19
    // printf("graphics in 256 colors.\n")
    // [60] call cputs 
    // [344] phi from main::@19 to cputs [phi:main::@19->cputs]
    // [344] phi cputs::s#9 = main::s3 [phi:main::@19->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    // main::vera_layer_show1
    // *VERA_DC_VIDEO |= vera_layer_enable[layer]
    // [61] *VERA_DC_VIDEO = *VERA_DC_VIDEO | *vera_layer_enable -- _deref_pbuc1=_deref_pbuc1_bor__deref_pbuc2 
    lda VERA_DC_VIDEO
    ora vera_layer_enable
    sta VERA_DC_VIDEO
    // [62] phi from main::vera_layer_show1 to main::@7 [phi:main::vera_layer_show1->main::@7]
    // main::@7
    // bitmap_init(0, 0x00000)
    // [63] call bitmap_init 
    jsr bitmap_init
    // [64] phi from main::@7 to main::@20 [phi:main::@7->main::@20]
    // main::@20
    // bitmap_clear()
    // [65] call bitmap_clear 
    jsr bitmap_clear
    // [66] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
    // main::@21
    // gotoxy(0,29)
    // [67] call gotoxy 
    // [208] phi from main::@21 to gotoxy [phi:main::@21->gotoxy]
    // [208] phi gotoxy::y#7 = $1d [phi:main::@21->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$1d
    jsr gotoxy
    // main::textcolor2
    // vera_layer_set_textcolor(conio_screen_layer, color)
    // [68] vera_layer_set_textcolor::layer#2 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [69] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor2 to vera_layer_set_textcolor [phi:main::textcolor2->vera_layer_set_textcolor]
    // [197] phi vera_layer_set_textcolor::color#6 = YELLOW [phi:main::textcolor2->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #YELLOW
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#2 [phi:main::textcolor2->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // [70] phi from main::textcolor2 to main::@8 [phi:main::textcolor2->main::@8]
    // main::@8
    // printf("press a key ...")
    // [71] call cputs 
    // [344] phi from main::@8 to cputs [phi:main::@8->cputs]
    // [344] phi cputs::s#9 = main::s4 [phi:main::@8->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // [72] phi from main::@8 to main::@1 [phi:main::@8->main::@1]
    // [72] phi rand_state#23 = 1 [phi:main::@8->main::@1#0] -- vwuz1=vwuc1 
    lda #<1
    sta.z rand_state
    lda #>1
    sta.z rand_state+1
    // main::@1
  __b1:
    // kbhit()
    // [73] call kbhit 
    jsr kbhit
    // [74] kbhit::return#2 = kbhit::return#1
    // main::@22
    // [75] main::$30 = kbhit::return#2
    // while(!kbhit())
    // [76] if(0==main::$30) goto main::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    bne !__b2+
    jmp __b2
  !__b2:
    // main::textcolor3
    // vera_layer_set_textcolor(conio_screen_layer, color)
    // [77] vera_layer_set_textcolor::layer#3 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [78] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor3 to vera_layer_set_textcolor [phi:main::textcolor3->vera_layer_set_textcolor]
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:main::textcolor3->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#3 [phi:main::textcolor3->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // main::bgcolor2
    // vera_layer_set_backcolor(conio_screen_layer, color)
    // [79] vera_layer_set_backcolor::layer#2 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [80] call vera_layer_set_backcolor 
    // [200] phi from main::bgcolor2 to vera_layer_set_backcolor [phi:main::bgcolor2->vera_layer_set_backcolor]
    // [200] phi vera_layer_set_backcolor::color#4 = BLACK [phi:main::bgcolor2->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLACK
    // [200] phi vera_layer_set_backcolor::layer#4 = vera_layer_set_backcolor::layer#2 [phi:main::bgcolor2->vera_layer_set_backcolor#1] -- register_copy 
    jsr vera_layer_set_backcolor
    // [81] phi from main::bgcolor2 to main::@9 [phi:main::bgcolor2->main::@9]
    // main::@9
    // clrscr()
    // [82] call clrscr 
    jsr clrscr
    // [83] phi from main::@9 to main::@32 [phi:main::@9->main::@32]
    // main::@32
    // gotoxy(0,26)
    // [84] call gotoxy 
    // [208] phi from main::@32 to gotoxy [phi:main::@32->gotoxy]
    // [208] phi gotoxy::y#7 = $1a [phi:main::@32->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$1a
    jsr gotoxy
    // [85] phi from main::@32 to main::@33 [phi:main::@32->main::@33]
    // main::@33
    // printf("here you see all the colors possible.\n")
    // [86] call cputs 
    // [344] phi from main::@33 to cputs [phi:main::@33->cputs]
    // [344] phi cputs::s#9 = main::s5 [phi:main::@33->cputs#0] -- pbuz1=pbuc1 
    lda #<s5
    sta.z cputs.s
    lda #>s5
    sta.z cputs.s+1
    jsr cputs
    // [87] phi from main::@33 to main::@34 [phi:main::@33->main::@34]
    // main::@34
    // gotoxy(0,29)
    // [88] call gotoxy 
    // [208] phi from main::@34 to gotoxy [phi:main::@34->gotoxy]
    // [208] phi gotoxy::y#7 = $1d [phi:main::@34->gotoxy#0] -- vbuxx=vbuc1 
    ldx #$1d
    jsr gotoxy
    // main::textcolor4
    // vera_layer_set_textcolor(conio_screen_layer, color)
    // [89] vera_layer_set_textcolor::layer#4 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [90] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor4 to vera_layer_set_textcolor [phi:main::textcolor4->vera_layer_set_textcolor]
    // [197] phi vera_layer_set_textcolor::color#6 = YELLOW [phi:main::textcolor4->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #YELLOW
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#4 [phi:main::textcolor4->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // [91] phi from main::textcolor4 to main::@10 [phi:main::textcolor4->main::@10]
    // main::@10
    // printf("press a key ...")
    // [92] call cputs 
    // [344] phi from main::@10 to cputs [phi:main::@10->cputs]
    // [344] phi cputs::s#9 = main::s4 [phi:main::@10->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // [93] phi from main::@10 to main::@3 [phi:main::@10->main::@3]
    // [93] phi main::color#2 = 0 [phi:main::@10->main::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta.z color
    // [93] phi main::x#3 = 0 [phi:main::@10->main::@3#1] -- vwuz1=vwuc1 
    sta.z x
    sta.z x+1
    // main::@3
  __b3:
    // kbhit()
    // [94] call kbhit 
    jsr kbhit
    // [95] kbhit::return#3 = kbhit::return#1
    // main::@35
    // [96] main::$43 = kbhit::return#3
    // while(!kbhit())
    // [97] if(0==main::$43) goto main::@4 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b4
    // [98] phi from main::@35 to main::@5 [phi:main::@35->main::@5]
    // main::@5
    // screenlayer(1)
    // [99] call screenlayer 
    jsr screenlayer
    // main::textcolor5
    // vera_layer_set_textcolor(conio_screen_layer, color)
    // [100] vera_layer_set_textcolor::layer#5 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [101] call vera_layer_set_textcolor 
    // [197] phi from main::textcolor5 to vera_layer_set_textcolor [phi:main::textcolor5->vera_layer_set_textcolor]
    // [197] phi vera_layer_set_textcolor::color#6 = WHITE [phi:main::textcolor5->vera_layer_set_textcolor#0] -- vbuaa=vbuc1 
    lda #WHITE
    // [197] phi vera_layer_set_textcolor::layer#6 = vera_layer_set_textcolor::layer#5 [phi:main::textcolor5->vera_layer_set_textcolor#1] -- register_copy 
    jsr vera_layer_set_textcolor
    // main::bgcolor3
    // vera_layer_set_backcolor(conio_screen_layer, color)
    // [102] vera_layer_set_backcolor::layer#3 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [103] call vera_layer_set_backcolor 
    // [200] phi from main::bgcolor3 to vera_layer_set_backcolor [phi:main::bgcolor3->vera_layer_set_backcolor]
    // [200] phi vera_layer_set_backcolor::color#4 = BLUE [phi:main::bgcolor3->vera_layer_set_backcolor#0] -- vbuaa=vbuc1 
    lda #BLUE
    // [200] phi vera_layer_set_backcolor::layer#4 = vera_layer_set_backcolor::layer#3 [phi:main::bgcolor3->vera_layer_set_backcolor#1] -- register_copy 
    jsr vera_layer_set_backcolor
    // [104] phi from main::bgcolor3 to main::@11 [phi:main::bgcolor3->main::@11]
    // main::@11
    // clrscr()
    // [105] call clrscr 
    jsr clrscr
    // main::@return
    // }
    // [106] return 
    rts
    // main::@4
  __b4:
    // bitmap_line(x, x, 0, 199, color)
    // [107] bitmap_line::x0#1 = main::x#3
    // [108] bitmap_line::x1#1 = main::x#3 -- vwuz1=vwuz2 
    lda.z x
    sta.z bitmap_line.x1
    lda.z x+1
    sta.z bitmap_line.x1+1
    // [109] bitmap_line::c#1 = main::color#2 -- vbuxx=vbuz1 
    ldx.z color
    // [110] call bitmap_line 
    // [461] phi from main::@4 to bitmap_line [phi:main::@4->bitmap_line]
    // [461] phi bitmap_line::c#10 = bitmap_line::c#1 [phi:main::@4->bitmap_line#0] -- register_copy 
    // [461] phi bitmap_line::y1#10 = $c7 [phi:main::@4->bitmap_line#1] -- vwuz1=vbuc1 
    lda #<$c7
    sta.z bitmap_line.y1
    lda #>$c7
    sta.z bitmap_line.y1+1
    // [461] phi bitmap_line::y0#10 = 0 [phi:main::@4->bitmap_line#2] -- vwuz1=vbuc1 
    lda #<0
    sta.z bitmap_line.y0
    sta.z bitmap_line.y0+1
    // [461] phi bitmap_line::x1#10 = bitmap_line::x1#1 [phi:main::@4->bitmap_line#3] -- register_copy 
    // [461] phi bitmap_line::x0#10 = bitmap_line::x0#1 [phi:main::@4->bitmap_line#4] -- register_copy 
    jsr bitmap_line
    // main::@36
    // color++;
    // [111] main::color#1 = ++ main::color#2 -- vbuz1=_inc_vbuz1 
    inc.z color
    // x++;
    // [112] main::x#1 = ++ main::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // if(x>319)
    // [113] if(main::x#1<=$13f) goto main::@37 -- vwuz1_le_vwuc1_then_la1 
    lda.z x+1
    cmp #>$13f
    bne !+
    lda.z x
    cmp #<$13f
  !:
    bcc __b3
    beq __b3
    // [93] phi from main::@36 to main::@3 [phi:main::@36->main::@3]
    // [93] phi main::color#2 = main::color#1 [phi:main::@36->main::@3#0] -- register_copy 
    // [93] phi main::x#3 = 0 [phi:main::@36->main::@3#1] -- vwuz1=vbuc1 
    lda #<0
    sta.z x
    sta.z x+1
    jmp __b3
    // [114] phi from main::@36 to main::@37 [phi:main::@36->main::@37]
    // main::@37
    // [93] phi from main::@37 to main::@3 [phi:main::@37->main::@3]
    // [93] phi main::color#2 = main::color#1 [phi:main::@37->main::@3#0] -- register_copy 
    // [93] phi main::x#3 = main::x#1 [phi:main::@37->main::@3#1] -- register_copy 
    // [115] phi from main::@22 to main::@2 [phi:main::@22->main::@2]
    // main::@2
  __b2:
    // rand()
    // [116] call rand 
    // [532] phi from main::@2 to rand [phi:main::@2->rand]
    // [532] phi rand_state#13 = rand_state#23 [phi:main::@2->rand#0] -- register_copy 
    jsr rand
    // rand()
    // [117] rand::return#2 = rand::return#0
    // main::@23
    // modr16u(rand(),320,0)
    // [118] modr16u::dividend#0 = rand::return#2
    // [119] call modr16u 
    // [541] phi from main::@23 to modr16u [phi:main::@23->modr16u]
    // [541] phi modr16u::divisor#4 = $140 [phi:main::@23->modr16u#0] -- vwuz1=vwuc1 
    lda #<$140
    sta.z modr16u.divisor
    lda #>$140
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#0 [phi:main::@23->modr16u#1] -- register_copy 
    jsr modr16u
    // modr16u(rand(),320,0)
    // [120] modr16u::return#2 = modr16u::return#0
    // main::@24
    // bitmap_line(modr16u(rand(),320,0), modr16u(rand(),320,0), modr16u(rand(),200,0), modr16u(rand(),200,0), rand()&255)
    // [121] bitmap_line::x0#0 = modr16u::return#2 -- vwuz1=vwuz2 
    lda.z modr16u.return
    sta.z bitmap_line.x0
    lda.z modr16u.return+1
    sta.z bitmap_line.x0+1
    // rand()
    // [122] call rand 
    // [532] phi from main::@24 to rand [phi:main::@24->rand]
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@24->rand#0] -- register_copy 
    jsr rand
    // rand()
    // [123] rand::return#3 = rand::return#0
    // main::@25
    // modr16u(rand(),320,0)
    // [124] modr16u::dividend#1 = rand::return#3
    // [125] call modr16u 
    // [541] phi from main::@25 to modr16u [phi:main::@25->modr16u]
    // [541] phi modr16u::divisor#4 = $140 [phi:main::@25->modr16u#0] -- vwuz1=vwuc1 
    lda #<$140
    sta.z modr16u.divisor
    lda #>$140
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#1 [phi:main::@25->modr16u#1] -- register_copy 
    jsr modr16u
    // modr16u(rand(),320,0)
    // [126] modr16u::return#3 = modr16u::return#0 -- vwuz1=vwuz2 
    lda.z modr16u.return
    sta.z modr16u.return_1
    lda.z modr16u.return+1
    sta.z modr16u.return_1+1
    // main::@26
    // bitmap_line(modr16u(rand(),320,0), modr16u(rand(),320,0), modr16u(rand(),200,0), modr16u(rand(),200,0), rand()&255)
    // [127] bitmap_line::x1#0 = modr16u::return#3
    // rand()
    // [128] call rand 
    // [532] phi from main::@26 to rand [phi:main::@26->rand]
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@26->rand#0] -- register_copy 
    jsr rand
    // rand()
    // [129] rand::return#10 = rand::return#0
    // main::@27
    // modr16u(rand(),200,0)
    // [130] modr16u::dividend#2 = rand::return#10
    // [131] call modr16u 
    // [541] phi from main::@27 to modr16u [phi:main::@27->modr16u]
    // [541] phi modr16u::divisor#4 = $c8 [phi:main::@27->modr16u#0] -- vwuz1=vbuc1 
    lda #<$c8
    sta.z modr16u.divisor
    lda #>$c8
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#2 [phi:main::@27->modr16u#1] -- register_copy 
    jsr modr16u
    // modr16u(rand(),200,0)
    // [132] modr16u::return#4 = modr16u::return#0 -- vwuz1=vwuz2 
    lda.z modr16u.return
    sta.z modr16u.return_2
    lda.z modr16u.return+1
    sta.z modr16u.return_2+1
    // main::@28
    // bitmap_line(modr16u(rand(),320,0), modr16u(rand(),320,0), modr16u(rand(),200,0), modr16u(rand(),200,0), rand()&255)
    // [133] bitmap_line::y0#0 = modr16u::return#4
    // rand()
    // [134] call rand 
    // [532] phi from main::@28 to rand [phi:main::@28->rand]
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@28->rand#0] -- register_copy 
    jsr rand
    // rand()
    // [135] rand::return#11 = rand::return#0
    // main::@29
    // modr16u(rand(),200,0)
    // [136] modr16u::dividend#3 = rand::return#11
    // [137] call modr16u 
    // [541] phi from main::@29 to modr16u [phi:main::@29->modr16u]
    // [541] phi modr16u::divisor#4 = $c8 [phi:main::@29->modr16u#0] -- vwuz1=vbuc1 
    lda #<$c8
    sta.z modr16u.divisor
    lda #>$c8
    sta.z modr16u.divisor+1
    // [541] phi modr16u::dividend#4 = modr16u::dividend#3 [phi:main::@29->modr16u#1] -- register_copy 
    jsr modr16u
    // modr16u(rand(),200,0)
    // [138] modr16u::return#10 = modr16u::return#0
    // main::@30
    // bitmap_line(modr16u(rand(),320,0), modr16u(rand(),320,0), modr16u(rand(),200,0), modr16u(rand(),200,0), rand()&255)
    // [139] bitmap_line::y1#0 = modr16u::return#10
    // rand()
    // [140] call rand 
    // [532] phi from main::@30 to rand [phi:main::@30->rand]
    // [532] phi rand_state#13 = rand_state#14 [phi:main::@30->rand#0] -- register_copy 
    jsr rand
    // rand()
    // [141] rand::return#12 = rand::return#0
    // main::@31
    // [142] main::$40 = rand::return#12
    // bitmap_line(modr16u(rand(),320,0), modr16u(rand(),320,0), modr16u(rand(),200,0), modr16u(rand(),200,0), rand()&255)
    // [143] bitmap_line::c#0 = main::$40 & $ff -- vbuxx=vwuz1_band_vbuc1 
    lda #$ff
    and.z __40
    tax
    // [144] call bitmap_line 
    // [461] phi from main::@31 to bitmap_line [phi:main::@31->bitmap_line]
    // [461] phi bitmap_line::c#10 = bitmap_line::c#0 [phi:main::@31->bitmap_line#0] -- register_copy 
    // [461] phi bitmap_line::y1#10 = bitmap_line::y1#0 [phi:main::@31->bitmap_line#1] -- register_copy 
    // [461] phi bitmap_line::y0#10 = bitmap_line::y0#0 [phi:main::@31->bitmap_line#2] -- register_copy 
    // [461] phi bitmap_line::x1#10 = bitmap_line::x1#0 [phi:main::@31->bitmap_line#3] -- register_copy 
    // [461] phi bitmap_line::x0#10 = bitmap_line::x0#0 [phi:main::@31->bitmap_line#4] -- register_copy 
    jsr bitmap_line
    // [72] phi from main::@31 to main::@1 [phi:main::@31->main::@1]
    // [72] phi rand_state#23 = rand_state#14 [phi:main::@31->main::@1#0] -- register_copy 
    jmp __b1
  .segment Data
    s: .text @"vera in bitmap mode,\n"
    .byte 0
    s1: .text @"color depth 8 bits per pixel.\n"
    .byte 0
    s2: .text @"in this mode, it is possible to display\n"
    .byte 0
    s3: .text @"graphics in 256 colors.\n"
    .byte 0
    s4: .text "press a key ..."
    .byte 0
    s5: .text @"here you see all the colors possible.\n"
    .byte 0
}
.segment Code
  // vera_layer_mode_text
// Set a vera layer in text mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_mode: The color mode, which can be 16 or 256.
vera_layer_mode_text: {
    .const mapbase_address = 0
    .const tilebase_address = $f800
    .const mapwidth = $80
    .const mapheight = $40
    .const tilewidth = 8
    .const tileheight = 8
    .label layer = 1
    // vera_layer_mode_tile( layer, mapbase_address, tilebase_address, mapwidth, mapheight, tilewidth, tileheight, 1 )
    // [146] call vera_layer_mode_tile 
    // [240] phi from vera_layer_mode_text to vera_layer_mode_tile [phi:vera_layer_mode_text->vera_layer_mode_tile]
    // [240] phi vera_layer_mode_tile::tileheight#10 = vera_layer_mode_text::tileheight#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#0] -- vbuz1=vbuc1 
    lda #tileheight
    sta.z vera_layer_mode_tile.tileheight
    // [240] phi vera_layer_mode_tile::tilewidth#10 = vera_layer_mode_text::tilewidth#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#1] -- vbuz1=vbuc1 
    lda #tilewidth
    sta.z vera_layer_mode_tile.tilewidth
    // [240] phi vera_layer_mode_tile::tilebase_address#10 = vera_layer_mode_text::tilebase_address#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#2] -- vduz1=vduc1 
    lda #<tilebase_address
    sta.z vera_layer_mode_tile.tilebase_address
    lda #>tilebase_address
    sta.z vera_layer_mode_tile.tilebase_address+1
    lda #<tilebase_address>>$10
    sta.z vera_layer_mode_tile.tilebase_address+2
    lda #>tilebase_address>>$10
    sta.z vera_layer_mode_tile.tilebase_address+3
    // [240] phi vera_layer_mode_tile::mapbase_address#10 = vera_layer_mode_text::mapbase_address#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#3] -- vduz1=vduc1 
    lda #<mapbase_address
    sta.z vera_layer_mode_tile.mapbase_address
    lda #>mapbase_address
    sta.z vera_layer_mode_tile.mapbase_address+1
    lda #<mapbase_address>>$10
    sta.z vera_layer_mode_tile.mapbase_address+2
    lda #>mapbase_address>>$10
    sta.z vera_layer_mode_tile.mapbase_address+3
    // [240] phi vera_layer_mode_tile::mapheight#10 = vera_layer_mode_text::mapheight#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#4] -- vwuz1=vwuc1 
    lda #<mapheight
    sta.z vera_layer_mode_tile.mapheight
    lda #>mapheight
    sta.z vera_layer_mode_tile.mapheight+1
    // [240] phi vera_layer_mode_tile::layer#10 = vera_layer_mode_text::layer#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#5] -- vbuz1=vbuc1 
    lda #layer
    sta.z vera_layer_mode_tile.layer
    // [240] phi vera_layer_mode_tile::mapwidth#10 = vera_layer_mode_text::mapwidth#0 [phi:vera_layer_mode_text->vera_layer_mode_tile#6] -- vwuz1=vwuc1 
    lda #<mapwidth
    sta.z vera_layer_mode_tile.mapwidth
    lda #>mapwidth
    sta.z vera_layer_mode_tile.mapwidth+1
    jsr vera_layer_mode_tile
    // [147] phi from vera_layer_mode_text to vera_layer_mode_text::@1 [phi:vera_layer_mode_text->vera_layer_mode_text::@1]
    // vera_layer_mode_text::@1
    // vera_layer_set_text_color_mode( layer, VERA_LAYER_CONFIG_16C )
    // [148] call vera_layer_set_text_color_mode 
    jsr vera_layer_set_text_color_mode
    // vera_layer_mode_text::@return
    // }
    // [149] return 
    rts
}
  // screensize
// Return the current screen size.
screensize: {
    .label x = conio_screen_width
    .label y = conio_screen_height
    // char hscale = (*VERA_DC_HSCALE) >> 7
    // [150] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    lda VERA_DC_HSCALE
    rol
    rol
    and #1
    // 40 << hscale
    // [151] screensize::$1 = $28 << screensize::hscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$28
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // *x = 40 << hscale
    // [152] *screensize::x#0 = screensize::$1 -- _deref_pbuc1=vbuaa 
    sta.z x
    // char vscale = (*VERA_DC_VSCALE) >> 7
    // [153] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    lda VERA_DC_VSCALE
    rol
    rol
    and #1
    // 30 << vscale
    // [154] screensize::$3 = $1e << screensize::vscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$1e
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // *y = 30 << vscale
    // [155] *screensize::y#0 = screensize::$3 -- _deref_pbuc1=vbuaa 
    sta.z y
    // screensize::@return
    // }
    // [156] return 
    rts
}
  // screenlayer
// Set the layer with which the conio will interact.
// - layer: value of 0 or 1.
screenlayer: {
    .label __2 = $44
    .label __4 = $30
    .label __5 = $36
    .label vera_layer_get_width1_config = $2e
    .label vera_layer_get_width1_return = $44
    .label vera_layer_get_height1_config = $32
    .label vera_layer_get_height1_return = $36
    // conio_screen_layer = layer
    // [157] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // vera_layer_get_mapbase_bank(conio_screen_layer)
    // [158] vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    tax
    // [159] call vera_layer_get_mapbase_bank 
    jsr vera_layer_get_mapbase_bank
    // [160] vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#0
    // screenlayer::@3
    // [161] CONIO_SCREEN_BANK#15 = vera_layer_get_mapbase_bank::return#2 -- vbuz1=vbuaa 
    sta.z CONIO_SCREEN_BANK
    // vera_layer_get_mapbase_offset(conio_screen_layer)
    // [162] vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [163] call vera_layer_get_mapbase_offset 
    jsr vera_layer_get_mapbase_offset
    // [164] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0
    // screenlayer::@4
    // [165] CONIO_SCREEN_TEXT#104 = vera_layer_get_mapbase_offset::return#2 -- vwuz1=vwuz2 
    lda.z vera_layer_get_mapbase_offset.return
    sta.z CONIO_SCREEN_TEXT
    lda.z vera_layer_get_mapbase_offset.return+1
    sta.z CONIO_SCREEN_TEXT+1
    // vera_layer_get_width(conio_screen_layer)
    // [166] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // screenlayer::vera_layer_get_width1
    // byte* config = vera_layer_config[layer]
    // [167] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [168] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_width1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_width1_config+1
    // *config & VERA_LAYER_WIDTH_MASK
    // [169] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_WIDTH_MASK
    ldy #0
    and (vera_layer_get_width1_config),y
    // (*config & VERA_LAYER_WIDTH_MASK) >> 4
    // [170] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 -- vbuaa=vbuaa_ror_4 
    lsr
    lsr
    lsr
    lsr
    // return VERA_LAYER_WIDTH[ (*config & VERA_LAYER_WIDTH_MASK) >> 4];
    // [171] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [172] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_WIDTH,y
    sta.z vera_layer_get_width1_return
    lda VERA_LAYER_WIDTH+1,y
    sta.z vera_layer_get_width1_return+1
    // screenlayer::vera_layer_get_width1_@return
    // }
    // [173] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
    // screenlayer::@1
    // vera_layer_get_width(conio_screen_layer)
    // [174] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
    // conio_width = vera_layer_get_width(conio_screen_layer)
    // [175] conio_width = screenlayer::$2 -- vwuz1=vwuz2 
    lda.z __2
    sta.z conio_width
    lda.z __2+1
    sta.z conio_width+1
    // vera_layer_get_rowshift(conio_screen_layer)
    // [176] vera_layer_get_rowshift::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [177] call vera_layer_get_rowshift 
    jsr vera_layer_get_rowshift
    // [178] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
    // screenlayer::@5
    // [179] screenlayer::$3 = vera_layer_get_rowshift::return#2
    // conio_rowshift = vera_layer_get_rowshift(conio_screen_layer)
    // [180] conio_rowshift = screenlayer::$3 -- vbuz1=vbuaa 
    sta.z conio_rowshift
    // vera_layer_get_rowskip(conio_screen_layer)
    // [181] vera_layer_get_rowskip::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [182] call vera_layer_get_rowskip 
    jsr vera_layer_get_rowskip
    // [183] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
    // screenlayer::@6
    // [184] screenlayer::$4 = vera_layer_get_rowskip::return#2
    // conio_rowskip = vera_layer_get_rowskip(conio_screen_layer)
    // [185] conio_rowskip = screenlayer::$4 -- vwuz1=vwuz2 
    lda.z __4
    sta.z conio_rowskip
    lda.z __4+1
    sta.z conio_rowskip+1
    // vera_layer_get_height(conio_screen_layer)
    // [186] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // screenlayer::vera_layer_get_height1
    // byte* config = vera_layer_config[layer]
    // [187] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [188] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_height1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_height1_config+1
    // *config & VERA_LAYER_HEIGHT_MASK
    // [189] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_HEIGHT_MASK
    ldy #0
    and (vera_layer_get_height1_config),y
    // (*config & VERA_LAYER_HEIGHT_MASK) >> 6
    // [190] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 -- vbuaa=vbuaa_ror_6 
    rol
    rol
    rol
    and #3
    // return VERA_LAYER_HEIGHT[ (*config & VERA_LAYER_HEIGHT_MASK) >> 6];
    // [191] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [192] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_HEIGHT,y
    sta.z vera_layer_get_height1_return
    lda VERA_LAYER_HEIGHT+1,y
    sta.z vera_layer_get_height1_return+1
    // screenlayer::vera_layer_get_height1_@return
    // }
    // [193] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
    // screenlayer::@2
    // vera_layer_get_height(conio_screen_layer)
    // [194] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
    // conio_height = vera_layer_get_height(conio_screen_layer)
    // [195] conio_height = screenlayer::$5 -- vwuz1=vwuz2 
    lda.z __5
    sta.z conio_height
    lda.z __5+1
    sta.z conio_height+1
    // screenlayer::@return
    // }
    // [196] return 
    rts
}
  // vera_layer_set_textcolor
// Set the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15) when the VERA works in 16x16 color text mode.
//   An 8 bit value (decimal between 0 and 255) when the VERA works in 256 text mode.
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_set_textcolor(byte register(X) layer, byte register(A) color)
vera_layer_set_textcolor: {
    // vera_layer_textcolor[layer] = color
    // [198] vera_layer_textcolor[vera_layer_set_textcolor::layer#6] = vera_layer_set_textcolor::color#6 -- pbuc1_derefidx_vbuxx=vbuaa 
    sta vera_layer_textcolor,x
    // vera_layer_set_textcolor::@return
    // }
    // [199] return 
    rts
}
  // vera_layer_set_backcolor
// Set the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_set_backcolor(byte register(X) layer, byte register(A) color)
vera_layer_set_backcolor: {
    // vera_layer_backcolor[layer] = color
    // [201] vera_layer_backcolor[vera_layer_set_backcolor::layer#4] = vera_layer_set_backcolor::color#4 -- pbuc1_derefidx_vbuxx=vbuaa 
    sta vera_layer_backcolor,x
    // vera_layer_set_backcolor::@return
    // }
    // [202] return 
    rts
}
  // vera_layer_set_mapbase
// Set the base of the map layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - mapbase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// vera_layer_set_mapbase(byte register(A) layer, byte register(X) mapbase)
vera_layer_set_mapbase: {
    .label addr = $44
    // byte* addr = vera_layer_mapbase[layer]
    // [204] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [205] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_mapbase,y
    sta.z addr
    lda vera_layer_mapbase+1,y
    sta.z addr+1
    // *addr = mapbase
    // [206] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    // vera_layer_set_mapbase::@return
    // }
    // [207] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte register(X) y)
gotoxy: {
    .label __6 = $30
    .label line_offset = $30
    // if(y>CONIO_HEIGHT)
    // [209] if(gotoxy::y#7<=conio_screen_height) goto gotoxy::@4 -- vbuxx_le_vbuz1_then_la1 
    lda.z conio_screen_height
    stx.z $ff
    cmp.z $ff
    bcs __b1
    // [211] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
    // [211] phi gotoxy::y#10 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [210] phi from gotoxy to gotoxy::@4 [phi:gotoxy->gotoxy::@4]
    // gotoxy::@4
    // [211] phi from gotoxy::@4 to gotoxy::@1 [phi:gotoxy::@4->gotoxy::@1]
    // [211] phi gotoxy::y#10 = gotoxy::y#7 [phi:gotoxy::@4->gotoxy::@1#0] -- register_copy 
    // gotoxy::@1
  __b1:
    // if(x>=CONIO_WIDTH)
    // [212] if(0<conio_screen_width) goto gotoxy::@2 -- 0_lt_vbuz1_then_la1 
    lda.z conio_screen_width
    // [213] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
    // gotoxy::@3
    // gotoxy::@2
    // conio_cursor_x[conio_screen_layer] = x
    // [214] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // conio_cursor_y[conio_screen_layer] = y
    // [215] conio_cursor_y[conio_screen_layer] = gotoxy::y#10 -- pbuc1_derefidx_vbuz1=vbuxx 
    txa
    sta conio_cursor_y,y
    // (unsigned int)y << conio_rowshift
    // [216] gotoxy::$6 = (word)gotoxy::y#10 -- vwuz1=_word_vbuxx 
    txa
    sta.z __6
    lda #0
    sta.z __6+1
    // unsigned int line_offset = (unsigned int)y << conio_rowshift
    // [217] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift -- vwuz1=vwuz1_rol_vbuz2 
    ldy.z conio_rowshift
    beq !e+
  !:
    asl.z line_offset
    rol.z line_offset+1
    dey
    bne !-
  !e:
    // conio_line_text[conio_screen_layer] = line_offset
    // [218] gotoxy::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [219] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z line_offset
    sta conio_line_text,y
    lda.z line_offset+1
    sta conio_line_text+1,y
    // gotoxy::@return
    // }
    // [220] return 
    rts
}
  // memcpy_in_vram
// Copy block of memory (from VRAM to VRAM)
// Copies the values from the location pointed by src to the location pointed by dest.
// The method uses the VERA access ports 0 and 1 to copy data from and to in VRAM.
// - src_bank:  64K VRAM bank number to copy from (0/1).
// - src: pointer to the location to copy from. Note that the address is a 16 bit value!
// - src_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - dest_bank:  64K VRAM bank number to copy to (0/1).
// - dest: pointer to the location to copy to. Note that the address is a 16 bit value!
// - dest_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - num: The number of bytes to copy
// memcpy_in_vram(byte register(Y) dest_bank, void* zp($15) dest, byte* zp($13) src, word zp($17) num)
memcpy_in_vram: {
    .label i = $39
    .label dest = $15
    .label src = $13
    .label num = $17
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [222] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(src)
    // [223] memcpy_in_vram::$0 = byte0  memcpy_in_vram::src#2 -- vbuaa=_byte0_pvoz1 
    lda.z src
    // *VERA_ADDRX_L = BYTE0(src)
    // [224] *VERA_ADDRX_L = memcpy_in_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(src)
    // [225] memcpy_in_vram::$1 = byte1  memcpy_in_vram::src#2 -- vbuaa=_byte1_pvoz1 
    lda.z src+1
    // *VERA_ADDRX_M = BYTE1(src)
    // [226] *VERA_ADDRX_M = memcpy_in_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // *VERA_ADDRX_H = src_increment | src_bank
    // [227] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // *VERA_CTRL |= VERA_ADDRSEL
    // [228] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    // Select DATA1
    lda #VERA_ADDRSEL
    ora VERA_CTRL
    sta VERA_CTRL
    // BYTE0(dest)
    // [229] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#2 -- vbuaa=_byte0_pvoz1 
    lda.z dest
    // *VERA_ADDRX_L = BYTE0(dest)
    // [230] *VERA_ADDRX_L = memcpy_in_vram::$3 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(dest)
    // [231] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#2 -- vbuaa=_byte1_pvoz1 
    lda.z dest+1
    // *VERA_ADDRX_M = BYTE1(dest)
    // [232] *VERA_ADDRX_M = memcpy_in_vram::$4 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // dest_increment | dest_bank
    // [233] memcpy_in_vram::$5 = VERA_INC_1 | memcpy_in_vram::dest_bank#2 -- vbuaa=vbuc1_bor_vbuyy 
    tya
    ora #VERA_INC_1
    // *VERA_ADDRX_H = dest_increment | dest_bank
    // [234] *VERA_ADDRX_H = memcpy_in_vram::$5 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [235] phi from memcpy_in_vram to memcpy_in_vram::@1 [phi:memcpy_in_vram->memcpy_in_vram::@1]
    // [235] phi memcpy_in_vram::i#2 = 0 [phi:memcpy_in_vram->memcpy_in_vram::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z i
    sta.z i+1
  // Transfer the data
    // memcpy_in_vram::@1
  __b1:
    // for(unsigned int i=0; i<num; i++)
    // [236] if(memcpy_in_vram::i#2<memcpy_in_vram::num#3) goto memcpy_in_vram::@2 -- vwuz1_lt_vwuz2_then_la1 
    lda.z i+1
    cmp.z num+1
    bcc __b2
    bne !+
    lda.z i
    cmp.z num
    bcc __b2
  !:
    // memcpy_in_vram::@return
    // }
    // [237] return 
    rts
    // memcpy_in_vram::@2
  __b2:
    // *VERA_DATA1 = *VERA_DATA0
    // [238] *VERA_DATA1 = *VERA_DATA0 -- _deref_pbuc1=_deref_pbuc2 
    lda VERA_DATA0
    sta VERA_DATA1
    // for(unsigned int i=0; i<num; i++)
    // [239] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2 -- vwuz1=_inc_vwuz1 
    inc.z i
    bne !+
    inc.z i+1
  !:
    // [235] phi from memcpy_in_vram::@2 to memcpy_in_vram::@1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1]
    // [235] phi memcpy_in_vram::i#2 = memcpy_in_vram::i#1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1#0] -- register_copy 
    jmp __b1
}
  // vera_layer_mode_tile
// Set a vera layer in tile mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_depth: The color depth in bits per pixel (BPP), which can be 1, 2, 4 or 8.
// vera_layer_mode_tile(byte zp(6) layer, dword zp(7) mapbase_address, dword zp($b) tilebase_address, word zp($30) mapwidth, word zp($2e) mapheight, byte zp($f) tilewidth, byte zp($10) tileheight)
vera_layer_mode_tile: {
    .label __1 = $32
    .label __6 = $36
    .label __17 = $34
    .label __18 = $35
    .label mapbase_address = 7
    .label tilebase_address = $b
    .label mapwidth = $30
    .label layer = 6
    .label mapheight = $2e
    .label tilewidth = $f
    .label tileheight = $10
    // vera_layer_mode_tile::@1
    // case 32:
    //             config |= VERA_LAYER_WIDTH_32;
    //             vera_layer_rowshift[layer] = 6;
    //             vera_layer_rowskip[layer] = 64;
    //             break;
    // [241] if(vera_layer_mode_tile::mapwidth#10==$20) goto vera_layer_mode_tile::@5 -- vwuz1_eq_vbuc1_then_la1 
    lda #$20
    cmp.z mapwidth
    bne !+
    lda.z mapwidth+1
    bne !+
    jmp __b5
  !:
    // vera_layer_mode_tile::@2
    // case 64:
    //             config |= VERA_LAYER_WIDTH_64;
    //             vera_layer_rowshift[layer] = 7;
    //             vera_layer_rowskip[layer] = 128;
    //             break;
    // [242] if(vera_layer_mode_tile::mapwidth#10==$40) goto vera_layer_mode_tile::@6 -- vwuz1_eq_vbuc1_then_la1 
    lda #$40
    cmp.z mapwidth
    bne !+
    lda.z mapwidth+1
    bne !+
    jmp __b6
  !:
    // vera_layer_mode_tile::@3
    // case 128:
    //             config |= VERA_LAYER_WIDTH_128;
    //             vera_layer_rowshift[layer] = 8;
    //             vera_layer_rowskip[layer] = 256;
    //             break;
    // [243] if(vera_layer_mode_tile::mapwidth#10==$80) goto vera_layer_mode_tile::@7 -- vwuz1_eq_vbuc1_then_la1 
    lda #$80
    cmp.z mapwidth
    bne !+
    lda.z mapwidth+1
    bne !+
    jmp __b7
  !:
    // vera_layer_mode_tile::@4
    // case 256:
    //             config |= VERA_LAYER_WIDTH_256;
    //             vera_layer_rowshift[layer] = 9;
    //             vera_layer_rowskip[layer] = 512;
    //             break;
    // [244] if(vera_layer_mode_tile::mapwidth#10!=$100) goto vera_layer_mode_tile::@9 -- vwuz1_neq_vwuc1_then_la1 
    lda.z mapwidth+1
    cmp #>$100
    bne __b1
    lda.z mapwidth
    cmp #<$100
    bne __b1
    // vera_layer_mode_tile::@8
    // vera_layer_rowshift[layer] = 9
    // [245] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 9 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #9
    ldy.z layer
    sta vera_layer_rowshift,y
    // vera_layer_rowskip[layer] = 512
    // [246] vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    tya
    asl
    // [247] vera_layer_rowskip[vera_layer_mode_tile::$14] = $200 -- pwuc1_derefidx_vbuaa=vwuc2 
    tay
    lda #<$200
    sta vera_layer_rowskip,y
    lda #>$200
    sta vera_layer_rowskip+1,y
    // [248] phi from vera_layer_mode_tile::@8 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@8->vera_layer_mode_tile::@9]
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_256 [phi:vera_layer_mode_tile::@8->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_WIDTH_256
    jmp __b9
    // [248] phi from vera_layer_mode_tile::@4 vera_layer_mode_tile::@5 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@4/vera_layer_mode_tile::@5->vera_layer_mode_tile::@9]
  __b1:
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_COLOR_DEPTH_1BPP [phi:vera_layer_mode_tile::@4/vera_layer_mode_tile::@5->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_COLOR_DEPTH_1BPP
    // vera_layer_mode_tile::@9
  __b9:
    // case 32:
    //             config |= VERA_LAYER_HEIGHT_32;
    //             break;
    // [249] if(vera_layer_mode_tile::mapheight#10==$20) goto vera_layer_mode_tile::@16 -- vwuz1_eq_vbuc1_then_la1 
    lda #$20
    cmp.z mapheight
    bne !+
    lda.z mapheight+1
    bne !+
    jmp __b16
  !:
    // vera_layer_mode_tile::@10
    // case 64:
    //             config |= VERA_LAYER_HEIGHT_64;
    //             break;
    // [250] if(vera_layer_mode_tile::mapheight#10==$40) goto vera_layer_mode_tile::@13 -- vwuz1_eq_vbuc1_then_la1 
    lda #$40
    cmp.z mapheight
    bne !+
    lda.z mapheight+1
    bne !+
    jmp __b13
  !:
    // vera_layer_mode_tile::@11
    // case 128:
    //             config |= VERA_LAYER_HEIGHT_128;
    //             break;
    // [251] if(vera_layer_mode_tile::mapheight#10==$80) goto vera_layer_mode_tile::@14 -- vwuz1_eq_vbuc1_then_la1 
    lda #$80
    cmp.z mapheight
    bne !+
    lda.z mapheight+1
    bne !+
    jmp __b14
  !:
    // vera_layer_mode_tile::@12
    // case 256:
    //             config |= VERA_LAYER_HEIGHT_256;
    //             break;
    // [252] if(vera_layer_mode_tile::mapheight#10!=$100) goto vera_layer_mode_tile::@16 -- vwuz1_neq_vwuc1_then_la1 
    lda.z mapheight+1
    cmp #>$100
    bne __b16
    lda.z mapheight
    cmp #<$100
    bne __b16
    // vera_layer_mode_tile::@15
    // config |= VERA_LAYER_HEIGHT_256
    // [253] vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_256 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_LAYER_HEIGHT_256
    tax
    // [254] phi from vera_layer_mode_tile::@12 vera_layer_mode_tile::@13 vera_layer_mode_tile::@14 vera_layer_mode_tile::@15 vera_layer_mode_tile::@9 to vera_layer_mode_tile::@16 [phi:vera_layer_mode_tile::@12/vera_layer_mode_tile::@13/vera_layer_mode_tile::@14/vera_layer_mode_tile::@15/vera_layer_mode_tile::@9->vera_layer_mode_tile::@16]
    // [254] phi vera_layer_mode_tile::config#25 = vera_layer_mode_tile::config#21 [phi:vera_layer_mode_tile::@12/vera_layer_mode_tile::@13/vera_layer_mode_tile::@14/vera_layer_mode_tile::@15/vera_layer_mode_tile::@9->vera_layer_mode_tile::@16#0] -- register_copy 
    // vera_layer_mode_tile::@16
  __b16:
    // vera_layer_set_config(layer, config)
    // [255] vera_layer_set_config::layer#0 = vera_layer_mode_tile::layer#10 -- vbuaa=vbuz1 
    lda.z layer
    // [256] vera_layer_set_config::config#0 = vera_layer_mode_tile::config#25
    // [257] call vera_layer_set_config 
    // [561] phi from vera_layer_mode_tile::@16 to vera_layer_set_config [phi:vera_layer_mode_tile::@16->vera_layer_set_config]
    // [561] phi vera_layer_set_config::config#2 = vera_layer_set_config::config#0 [phi:vera_layer_mode_tile::@16->vera_layer_set_config#0] -- register_copy 
    // [561] phi vera_layer_set_config::layer#2 = vera_layer_set_config::layer#0 [phi:vera_layer_mode_tile::@16->vera_layer_set_config#1] -- register_copy 
    jsr vera_layer_set_config
    // vera_layer_mode_tile::@23
    // WORD0(mapbase_address)
    // [258] vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#10 -- vwuz1=_word0_vduz2 
    lda.z mapbase_address
    sta.z __1
    lda.z mapbase_address+1
    sta.z __1+1
    // vera_mapbase_offset[layer] = WORD0(mapbase_address)
    // [259] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#10 << 1 -- vbuz1=vbuz2_rol_1 
    lda.z layer
    asl
    sta.z __17
    // [260] vera_mapbase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$1 -- pwuc1_derefidx_vbuz1=vwuz2 
    // mapbase
    tay
    lda.z __1
    sta vera_mapbase_offset,y
    lda.z __1+1
    sta vera_mapbase_offset+1,y
    // BYTE2(mapbase_address)
    // [261] vera_layer_mode_tile::$2 = byte2  vera_layer_mode_tile::mapbase_address#10 -- vbuaa=_byte2_vduz1 
    lda.z mapbase_address+2
    // vera_mapbase_bank[layer] = BYTE2(mapbase_address)
    // [262] vera_mapbase_bank[vera_layer_mode_tile::layer#10] = vera_layer_mode_tile::$2 -- pbuc1_derefidx_vbuz1=vbuaa 
    ldy.z layer
    sta vera_mapbase_bank,y
    // vera_mapbase_address[layer] = mapbase_address
    // [263] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#10 << 2 -- vbuz1=vbuz2_rol_2 
    tya
    asl
    asl
    sta.z __18
    // [264] vera_mapbase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::mapbase_address#10 -- pduc1_derefidx_vbuz1=vduz2 
    tay
    lda.z mapbase_address
    sta vera_mapbase_address,y
    lda.z mapbase_address+1
    sta vera_mapbase_address+1,y
    lda.z mapbase_address+2
    sta vera_mapbase_address+2,y
    lda.z mapbase_address+3
    sta vera_mapbase_address+3,y
    // mapbase_address = mapbase_address >> 1
    // [265] vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#10 >> 1 -- vduz1=vduz1_ror_1 
    lsr.z mapbase_address+3
    ror.z mapbase_address+2
    ror.z mapbase_address+1
    ror.z mapbase_address
    // byte mapbase = BYTE1(mapbase_address)
    // [266] vera_layer_mode_tile::mapbase#0 = byte1  vera_layer_mode_tile::mapbase_address#0 -- vbuxx=_byte1_vduz1 
    ldx.z mapbase_address+1
    // vera_layer_set_mapbase(layer,mapbase)
    // [267] vera_layer_set_mapbase::layer#0 = vera_layer_mode_tile::layer#10 -- vbuaa=vbuz1 
    lda.z layer
    // [268] vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
    // [269] call vera_layer_set_mapbase 
    // [203] phi from vera_layer_mode_tile::@23 to vera_layer_set_mapbase [phi:vera_layer_mode_tile::@23->vera_layer_set_mapbase]
    // [203] phi vera_layer_set_mapbase::mapbase#3 = vera_layer_set_mapbase::mapbase#0 [phi:vera_layer_mode_tile::@23->vera_layer_set_mapbase#0] -- register_copy 
    // [203] phi vera_layer_set_mapbase::layer#3 = vera_layer_set_mapbase::layer#0 [phi:vera_layer_mode_tile::@23->vera_layer_set_mapbase#1] -- register_copy 
    jsr vera_layer_set_mapbase
    // vera_layer_mode_tile::@24
    // WORD0(tilebase_address)
    // [270] vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#10 -- vwuz1=_word0_vduz2 
    lda.z tilebase_address
    sta.z __6
    lda.z tilebase_address+1
    sta.z __6+1
    // vera_tilebase_offset[layer] = WORD0(tilebase_address)
    // [271] vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6 -- pwuc1_derefidx_vbuz1=vwuz2 
    // tilebase
    ldy.z __17
    lda.z __6
    sta vera_tilebase_offset,y
    lda.z __6+1
    sta vera_tilebase_offset+1,y
    // BYTE2(tilebase_address)
    // [272] vera_layer_mode_tile::$7 = byte2  vera_layer_mode_tile::tilebase_address#10 -- vbuaa=_byte2_vduz1 
    lda.z tilebase_address+2
    // vera_tilebase_bank[layer] = BYTE2(tilebase_address)
    // [273] vera_tilebase_bank[vera_layer_mode_tile::layer#10] = vera_layer_mode_tile::$7 -- pbuc1_derefidx_vbuz1=vbuaa 
    ldy.z layer
    sta vera_tilebase_bank,y
    // vera_tilebase_address[layer] = tilebase_address
    // [274] vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#10 -- pduc1_derefidx_vbuz1=vduz2 
    ldy.z __18
    lda.z tilebase_address
    sta vera_tilebase_address,y
    lda.z tilebase_address+1
    sta vera_tilebase_address+1,y
    lda.z tilebase_address+2
    sta vera_tilebase_address+2,y
    lda.z tilebase_address+3
    sta vera_tilebase_address+3,y
    // tilebase_address = tilebase_address >> 1
    // [275] vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#10 >> 1 -- vduz1=vduz1_ror_1 
    lsr.z tilebase_address+3
    ror.z tilebase_address+2
    ror.z tilebase_address+1
    ror.z tilebase_address
    // byte tilebase = BYTE1(tilebase_address)
    // [276] vera_layer_mode_tile::tilebase#0 = byte1  vera_layer_mode_tile::tilebase_address#0 -- vbuaa=_byte1_vduz1 
    lda.z tilebase_address+1
    // tilebase &= VERA_LAYER_TILEBASE_MASK
    // [277] vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK -- vbuxx=vbuaa_band_vbuc1 
    and #VERA_LAYER_TILEBASE_MASK
    tax
    // case 8:
    //             tilebase |= VERA_TILEBASE_WIDTH_8;
    //             break;
    // [278] if(vera_layer_mode_tile::tilewidth#10==8) goto vera_layer_mode_tile::@19 -- vbuz1_eq_vbuc1_then_la1 
    lda #8
    cmp.z tilewidth
    beq __b19
    // vera_layer_mode_tile::@17
    // case 16:
    //             tilebase |= VERA_TILEBASE_WIDTH_16;
    //             break;
    // [279] if(vera_layer_mode_tile::tilewidth#10!=$10) goto vera_layer_mode_tile::@19 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z tilewidth
    bne __b19
    // vera_layer_mode_tile::@18
    // tilebase |= VERA_TILEBASE_WIDTH_16
    // [280] vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_16 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_TILEBASE_WIDTH_16
    tax
    // [281] phi from vera_layer_mode_tile::@17 vera_layer_mode_tile::@18 vera_layer_mode_tile::@24 to vera_layer_mode_tile::@19 [phi:vera_layer_mode_tile::@17/vera_layer_mode_tile::@18/vera_layer_mode_tile::@24->vera_layer_mode_tile::@19]
    // [281] phi vera_layer_mode_tile::tilebase#12 = vera_layer_mode_tile::tilebase#1 [phi:vera_layer_mode_tile::@17/vera_layer_mode_tile::@18/vera_layer_mode_tile::@24->vera_layer_mode_tile::@19#0] -- register_copy 
    // vera_layer_mode_tile::@19
  __b19:
    // case 8:
    //             tilebase |= VERA_TILEBASE_HEIGHT_8;
    //             break;
    // [282] if(vera_layer_mode_tile::tileheight#10==8) goto vera_layer_mode_tile::@22 -- vbuz1_eq_vbuc1_then_la1 
    lda #8
    cmp.z tileheight
    beq __b22
    // vera_layer_mode_tile::@20
    // case 16:
    //             tilebase |= VERA_TILEBASE_HEIGHT_16;
    //             break;
    // [283] if(vera_layer_mode_tile::tileheight#10!=$10) goto vera_layer_mode_tile::@22 -- vbuz1_neq_vbuc1_then_la1 
    lda #$10
    cmp.z tileheight
    bne __b22
    // vera_layer_mode_tile::@21
    // tilebase |= VERA_TILEBASE_HEIGHT_16
    // [284] vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_16 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_TILEBASE_HEIGHT_16
    tax
    // [285] phi from vera_layer_mode_tile::@19 vera_layer_mode_tile::@20 vera_layer_mode_tile::@21 to vera_layer_mode_tile::@22 [phi:vera_layer_mode_tile::@19/vera_layer_mode_tile::@20/vera_layer_mode_tile::@21->vera_layer_mode_tile::@22]
    // [285] phi vera_layer_mode_tile::tilebase#10 = vera_layer_mode_tile::tilebase#12 [phi:vera_layer_mode_tile::@19/vera_layer_mode_tile::@20/vera_layer_mode_tile::@21->vera_layer_mode_tile::@22#0] -- register_copy 
    // vera_layer_mode_tile::@22
  __b22:
    // vera_layer_set_tilebase(layer,tilebase)
    // [286] vera_layer_set_tilebase::layer#0 = vera_layer_mode_tile::layer#10 -- vbuaa=vbuz1 
    lda.z layer
    // [287] vera_layer_set_tilebase::tilebase#0 = vera_layer_mode_tile::tilebase#10
    // [288] call vera_layer_set_tilebase 
    // [566] phi from vera_layer_mode_tile::@22 to vera_layer_set_tilebase [phi:vera_layer_mode_tile::@22->vera_layer_set_tilebase]
    // [566] phi vera_layer_set_tilebase::tilebase#2 = vera_layer_set_tilebase::tilebase#0 [phi:vera_layer_mode_tile::@22->vera_layer_set_tilebase#0] -- register_copy 
    // [566] phi vera_layer_set_tilebase::layer#2 = vera_layer_set_tilebase::layer#0 [phi:vera_layer_mode_tile::@22->vera_layer_set_tilebase#1] -- register_copy 
    jsr vera_layer_set_tilebase
    // vera_layer_mode_tile::@return
    // }
    // [289] return 
    rts
    // vera_layer_mode_tile::@14
  __b14:
    // config |= VERA_LAYER_HEIGHT_128
    // [290] vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_128 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_LAYER_HEIGHT_128
    tax
    jmp __b16
    // vera_layer_mode_tile::@13
  __b13:
    // config |= VERA_LAYER_HEIGHT_64
    // [291] vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_64 -- vbuxx=vbuxx_bor_vbuc1 
    txa
    ora #VERA_LAYER_HEIGHT_64
    tax
    jmp __b16
    // vera_layer_mode_tile::@7
  __b7:
    // vera_layer_rowshift[layer] = 8
    // [292] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 8 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #8
    ldy.z layer
    sta vera_layer_rowshift,y
    // vera_layer_rowskip[layer] = 256
    // [293] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    tya
    asl
    // [294] vera_layer_rowskip[vera_layer_mode_tile::$13] = $100 -- pwuc1_derefidx_vbuaa=vwuc2 
    tay
    lda #<$100
    sta vera_layer_rowskip,y
    lda #>$100
    sta vera_layer_rowskip+1,y
    // [248] phi from vera_layer_mode_tile::@7 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@7->vera_layer_mode_tile::@9]
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_128 [phi:vera_layer_mode_tile::@7->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_WIDTH_128
    jmp __b9
    // vera_layer_mode_tile::@6
  __b6:
    // vera_layer_rowshift[layer] = 7
    // [295] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 7 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #7
    ldy.z layer
    sta vera_layer_rowshift,y
    // vera_layer_rowskip[layer] = 128
    // [296] vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    tya
    asl
    // [297] vera_layer_rowskip[vera_layer_mode_tile::$12] = $80 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #$80
    sta vera_layer_rowskip,y
    lda #0
    sta vera_layer_rowskip+1,y
    // [248] phi from vera_layer_mode_tile::@6 to vera_layer_mode_tile::@9 [phi:vera_layer_mode_tile::@6->vera_layer_mode_tile::@9]
    // [248] phi vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_64 [phi:vera_layer_mode_tile::@6->vera_layer_mode_tile::@9#0] -- vbuxx=vbuc1 
    ldx #VERA_LAYER_WIDTH_64
    jmp __b9
    // vera_layer_mode_tile::@5
  __b5:
    // vera_layer_rowshift[layer] = 6
    // [298] vera_layer_rowshift[vera_layer_mode_tile::layer#10] = 6 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #6
    ldy.z layer
    sta vera_layer_rowshift,y
    // vera_layer_rowskip[layer] = 64
    // [299] vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#10 << 1 -- vbuaa=vbuz1_rol_1 
    tya
    asl
    // [300] vera_layer_rowskip[vera_layer_mode_tile::$11] = $40 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #$40
    sta vera_layer_rowskip,y
    lda #0
    sta vera_layer_rowskip+1,y
    jmp __b1
}
  // vera_layer_mode_bitmap
// Set a vera layer in bitmap mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_mode: The color mode, which can be 16 or 256.
vera_layer_mode_bitmap: {
    .const layer = 0
    .const bitmap_address = 0
    // config
    .const config = VERA_LAYER_COLOR_DEPTH_8BPP|VERA_LAYER_CONFIG_MODE_BITMAP
    .const tilebase = 0
    // vera_layer_mode_bitmap::@1
    // vera_tilebase_offset[layer] = WORD0(bitmap_address)
    // [302] *vera_tilebase_offset = 0 -- _deref_pwuc1=vwuc2 
    // tilebase
    lda #<0
    sta vera_tilebase_offset
    sta vera_tilebase_offset+1
    // vera_tilebase_bank[layer] = BYTE2(bitmap_address)
    // [303] *vera_tilebase_bank = 0 -- _deref_pbuc1=vbuc2 
    sta vera_tilebase_bank
    // vera_tilebase_address[layer] = bitmap_address
    // [304] *vera_tilebase_address = vera_layer_mode_bitmap::bitmap_address#1 -- _deref_pduc1=vduc2 
    lda #<bitmap_address
    sta vera_tilebase_address
    lda #>bitmap_address
    sta vera_tilebase_address+1
    lda #<bitmap_address>>$10
    sta vera_tilebase_address+2
    lda #>bitmap_address>>$10
    sta vera_tilebase_address+3
    // vera_layer_mode_bitmap::vera_display_set_scale_double1
    // *VERA_DC_HSCALE = 64
    // [305] *VERA_DC_HSCALE = $40 -- _deref_pbuc1=vbuc2 
    lda #$40
    sta VERA_DC_HSCALE
    // *VERA_DC_VSCALE = 64
    // [306] *VERA_DC_VSCALE = $40 -- _deref_pbuc1=vbuc2 
    sta VERA_DC_VSCALE
    // [307] phi from vera_layer_mode_bitmap::vera_display_set_scale_double1 to vera_layer_mode_bitmap::@2 [phi:vera_layer_mode_bitmap::vera_display_set_scale_double1->vera_layer_mode_bitmap::@2]
    // vera_layer_mode_bitmap::@2
    // vera_layer_set_config(layer, config)
    // [308] call vera_layer_set_config 
    // [561] phi from vera_layer_mode_bitmap::@2 to vera_layer_set_config [phi:vera_layer_mode_bitmap::@2->vera_layer_set_config]
    // [561] phi vera_layer_set_config::config#2 = vera_layer_mode_bitmap::config#11 [phi:vera_layer_mode_bitmap::@2->vera_layer_set_config#0] -- vbuxx=vbuc1 
    ldx #config
    // [561] phi vera_layer_set_config::layer#2 = vera_layer_mode_bitmap::layer#0 [phi:vera_layer_mode_bitmap::@2->vera_layer_set_config#1] -- vbuaa=vbuc1 
    lda #layer
    jsr vera_layer_set_config
    // [309] phi from vera_layer_mode_bitmap::@2 to vera_layer_mode_bitmap::@3 [phi:vera_layer_mode_bitmap::@2->vera_layer_mode_bitmap::@3]
    // vera_layer_mode_bitmap::@3
    // vera_layer_set_tilebase(layer,tilebase)
    // [310] call vera_layer_set_tilebase 
    // [566] phi from vera_layer_mode_bitmap::@3 to vera_layer_set_tilebase [phi:vera_layer_mode_bitmap::@3->vera_layer_set_tilebase]
    // [566] phi vera_layer_set_tilebase::tilebase#2 = vera_layer_mode_bitmap::tilebase#1 [phi:vera_layer_mode_bitmap::@3->vera_layer_set_tilebase#0] -- vbuxx=vbuc1 
    ldx #tilebase
    // [566] phi vera_layer_set_tilebase::layer#2 = vera_layer_mode_bitmap::layer#0 [phi:vera_layer_mode_bitmap::@3->vera_layer_set_tilebase#1] -- vbuaa=vbuc1 
    lda #layer
    jsr vera_layer_set_tilebase
    // vera_layer_mode_bitmap::@return
    // }
    // [311] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label __1 = $38
    .label line_text = $13
    .label color = $38
    // char* line_text = CONIO_SCREEN_TEXT
    // [312] clrscr::line_text#0 = (byte*)CONIO_SCREEN_TEXT#104 -- pbuz1=pbuz2 
    lda.z CONIO_SCREEN_TEXT
    sta.z line_text
    lda.z CONIO_SCREEN_TEXT+1
    sta.z line_text+1
    // vera_layer_get_backcolor(conio_screen_layer)
    // [313] vera_layer_get_backcolor::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [314] call vera_layer_get_backcolor 
    jsr vera_layer_get_backcolor
    // [315] vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#1
    // clrscr::@7
    // [316] clrscr::$0 = vera_layer_get_backcolor::return#0
    // vera_layer_get_backcolor(conio_screen_layer) << 4
    // [317] clrscr::$1 = clrscr::$0 << 4 -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta.z __1
    // vera_layer_get_textcolor(conio_screen_layer)
    // [318] vera_layer_get_textcolor::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [319] call vera_layer_get_textcolor 
    jsr vera_layer_get_textcolor
    // [320] vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#1
    // clrscr::@8
    // [321] clrscr::$2 = vera_layer_get_textcolor::return#0
    // char color = ( vera_layer_get_backcolor(conio_screen_layer) << 4 ) | vera_layer_get_textcolor(conio_screen_layer)
    // [322] clrscr::color#0 = clrscr::$1 | clrscr::$2 -- vbuz1=vbuz1_bor_vbuaa 
    ora.z color
    sta.z color
    // [323] phi from clrscr::@8 to clrscr::@1 [phi:clrscr::@8->clrscr::@1]
    // [323] phi clrscr::line_text#2 = clrscr::line_text#0 [phi:clrscr::@8->clrscr::@1#0] -- register_copy 
    // [323] phi clrscr::l#2 = 0 [phi:clrscr::@8->clrscr::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // clrscr::@1
  __b1:
    // for( char l=0;l<conio_height; l++ )
    // [324] if(clrscr::l#2<conio_height) goto clrscr::@2 -- vbuxx_lt_vwuz1_then_la1 
    lda.z conio_height+1
    bne __b2
    cpx.z conio_height
    bcc __b2
    // clrscr::@3
    // conio_cursor_x[conio_screen_layer] = 0
    // [325] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // conio_cursor_y[conio_screen_layer] = 0
    // [326] conio_cursor_y[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    sta conio_cursor_y,y
    // conio_line_text[conio_screen_layer] = 0
    // [327] clrscr::$9 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    tya
    asl
    // [328] conio_line_text[clrscr::$9] = 0 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #0
    sta conio_line_text,y
    sta conio_line_text+1,y
    // clrscr::@return
    // }
    // [329] return 
    rts
    // clrscr::@2
  __b2:
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [330] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(ch)
    // [331] clrscr::$5 = byte0  clrscr::line_text#2 -- vbuaa=_byte0_pbuz1 
    lda.z line_text
    // *VERA_ADDRX_L = BYTE0(ch)
    // [332] *VERA_ADDRX_L = clrscr::$5 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(ch)
    // [333] clrscr::$6 = byte1  clrscr::line_text#2 -- vbuaa=_byte1_pbuz1 
    lda.z line_text+1
    // *VERA_ADDRX_M = BYTE1(ch)
    // [334] *VERA_ADDRX_M = clrscr::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // CONIO_SCREEN_BANK | VERA_INC_1
    // [335] clrscr::$7 = CONIO_SCREEN_BANK#15 | VERA_INC_1 -- vbuaa=vbuz1_bor_vbuc1 
    lda #VERA_INC_1
    ora.z CONIO_SCREEN_BANK
    // *VERA_ADDRX_H = CONIO_SCREEN_BANK | VERA_INC_1
    // [336] *VERA_ADDRX_H = clrscr::$7 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [337] phi from clrscr::@2 to clrscr::@4 [phi:clrscr::@2->clrscr::@4]
    // [337] phi clrscr::c#2 = 0 [phi:clrscr::@2->clrscr::@4#0] -- vbuyy=vbuc1 
    ldy #0
    // clrscr::@4
  __b4:
    // for( char c=0;c<conio_width; c++ )
    // [338] if(clrscr::c#2<conio_width) goto clrscr::@5 -- vbuyy_lt_vwuz1_then_la1 
    lda.z conio_width+1
    bne __b5
    cpy.z conio_width
    bcc __b5
    // clrscr::@6
    // line_text += conio_rowskip
    // [339] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip -- pbuz1=pbuz1_plus_vwuz2 
    lda.z line_text
    clc
    adc.z conio_rowskip
    sta.z line_text
    lda.z line_text+1
    adc.z conio_rowskip+1
    sta.z line_text+1
    // for( char l=0;l<conio_height; l++ )
    // [340] clrscr::l#1 = ++ clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [323] phi from clrscr::@6 to clrscr::@1 [phi:clrscr::@6->clrscr::@1]
    // [323] phi clrscr::line_text#2 = clrscr::line_text#1 [phi:clrscr::@6->clrscr::@1#0] -- register_copy 
    // [323] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@6->clrscr::@1#1] -- register_copy 
    jmp __b1
    // clrscr::@5
  __b5:
    // *VERA_DATA0 = ' '
    // [341] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    lda #' '
    sta VERA_DATA0
    // *VERA_DATA0 = color
    // [342] *VERA_DATA0 = clrscr::color#0 -- _deref_pbuc1=vbuz1 
    lda.z color
    sta VERA_DATA0
    // for( char c=0;c<conio_width; c++ )
    // [343] clrscr::c#1 = ++ clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [337] phi from clrscr::@5 to clrscr::@4 [phi:clrscr::@5->clrscr::@4]
    // [337] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@5->clrscr::@4#0] -- register_copy 
    jmp __b4
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(const byte* zp($3b) s)
cputs: {
    .label s = $3b
    // [345] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
    // [345] phi cputs::s#8 = cputs::s#9 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    // cputs::@1
  __b1:
    // while(c=*s++)
    // [346] cputs::c#1 = *cputs::s#8 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [347] cputs::s#0 = ++ cputs::s#8 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [348] if(0!=cputs::c#1) goto cputs::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // cputs::@return
    // }
    // [349] return 
    rts
    // cputs::@2
  __b2:
    // cputc(c)
    // [350] cputc::c#0 = cputs::c#1 -- vbuz1=vbuaa 
    sta.z cputc.c
    // [351] call cputc 
    jsr cputc
    jmp __b1
}
  // bitmap_init
// Initialize the bitmap plotter tables for a specific bitmap
bitmap_init: {
    .const layer = 0
    .const address = 0
    .label __7 = $39
    .label __10 = $42
    .label __13 = $4c
    .label __23 = $3b
    .label __24 = $46
    .label __25 = $4e
    .label __26 = $56
    .label __28 = $66
    .label vera_layer_get_color_depth1_config = $6a
    .label bitmask = $38
    .label x = $15
    .label hdelta = $64
    .label yoffs = $5a
    .label y = $17
    .label __29 = $3b
    .label __30 = $3e
    .label __31 = $40
    .label __32 = $46
    .label __33 = $48
    .label __34 = $4a
    .label __35 = $4e
    .label __36 = $50
    .label __37 = $54
    .label __38 = $56
    .label __39 = $58
    .label __40 = $5e
    .label __41 = $66
    // __bitmap_address = address
    // [352] __bitmap_address = bitmap_init::address#0 -- vduz1=vduc1 
    lda #<address
    sta.z __bitmap_address
    lda #>address
    sta.z __bitmap_address+1
    lda #<address>>$10
    sta.z __bitmap_address+2
    lda #>address>>$10
    sta.z __bitmap_address+3
    // __bitmap_layer = layer
    // [353] __bitmap_layer = bitmap_init::layer#0 -- vbuz1=vbuc1 
    lda #layer
    sta.z __bitmap_layer
    // vera_layer_get_color_depth(__bitmap_layer)
    // [354] bitmap_init::vera_layer_get_color_depth1_layer#0 = __bitmap_layer -- vbuaa=vbuz1 
    // bitmap_init::vera_layer_get_color_depth1
    // byte* config = vera_layer_config[layer]
    // [355] bitmap_init::vera_layer_get_color_depth1_$1 = bitmap_init::vera_layer_get_color_depth1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [356] bitmap_init::vera_layer_get_color_depth1_config#0 = vera_layer_config[bitmap_init::vera_layer_get_color_depth1_$1] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_color_depth1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_color_depth1_config+1
    // *config & VERA_LAYER_COLOR_DEPTH_MASK
    // [357] bitmap_init::vera_layer_get_color_depth1_$0 = *bitmap_init::vera_layer_get_color_depth1_config#0 & VERA_LAYER_COLOR_DEPTH_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_COLOR_DEPTH_MASK
    ldy #0
    and (vera_layer_get_color_depth1_config),y
    // return (*config & VERA_LAYER_COLOR_DEPTH_MASK);
    // [358] bitmap_init::vera_layer_get_color_depth1_return#0 = bitmap_init::vera_layer_get_color_depth1_$0
    // bitmap_init::vera_layer_get_color_depth1_@return
    // }
    // [359] bitmap_init::vera_layer_get_color_depth1_return#1 = bitmap_init::vera_layer_get_color_depth1_return#0
    // bitmap_init::@16
    // vera_layer_get_color_depth(__bitmap_layer)
    // [360] bitmap_init::$0 = bitmap_init::vera_layer_get_color_depth1_return#1
    // __bitmap_color_depth = vera_layer_get_color_depth(__bitmap_layer)
    // [361] __bitmap_color_depth = bitmap_init::$0 -- vbuz1=vbuaa 
    sta.z __bitmap_color_depth
    // vera_display_get_hscale()
    // [362] call vera_display_get_hscale 
    // [606] phi from bitmap_init::@16 to vera_display_get_hscale [phi:bitmap_init::@16->vera_display_get_hscale]
    jsr vera_display_get_hscale
    // vera_display_get_hscale()
    // [363] vera_display_get_hscale::return#2 = vera_display_get_hscale::return#0
    // bitmap_init::@17
    // [364] bitmap_init::$1 = vera_display_get_hscale::return#2
    // __bitmap_hscale = vera_display_get_hscale()
    // [365] __bitmap_hscale = bitmap_init::$1 -- vbuz1=vbuxx 
    stx.z __bitmap_hscale
    // vera_display_get_vscale()
    // [366] call vera_display_get_vscale 
    // [613] phi from bitmap_init::@17 to vera_display_get_vscale [phi:bitmap_init::@17->vera_display_get_vscale]
    jsr vera_display_get_vscale
    // vera_display_get_vscale()
    // [367] vera_display_get_vscale::return#2 = vera_display_get_vscale::return#0
    // bitmap_init::@18
    // [368] bitmap_init::$2 = vera_display_get_vscale::return#2
    // __bitmap_vscale = vera_display_get_vscale()
    // [369] __bitmap_vscale = bitmap_init::$2 -- vbuz1=vbuxx 
    // Returns 1 when 640 and 2 when 320.
    stx.z __bitmap_vscale
    // byte bitmask = bitmasks[__bitmap_color_depth]
    // [370] bitmap_init::bitmask#0 = bitmasks[__bitmap_color_depth] -- vbuz1=pbuc1_derefidx_vbuz2 
    // Returns 1 when 480 and 2 when 240.
    ldy.z __bitmap_color_depth
    lda bitmasks,y
    sta.z bitmask
    // signed byte bitshift = bitshifts[__bitmap_color_depth]
    // [371] bitmap_init::bitshift#0 = bitshifts[__bitmap_color_depth] -- vbsxx=pbsc1_derefidx_vbuz1 
    ldx bitshifts,y
    // [372] phi from bitmap_init::@18 to bitmap_init::@1 [phi:bitmap_init::@18->bitmap_init::@1]
    // [372] phi bitmap_init::bitshift#10 = bitmap_init::bitshift#0 [phi:bitmap_init::@18->bitmap_init::@1#0] -- register_copy 
    // [372] phi bitmap_init::bitmask#10 = bitmap_init::bitmask#0 [phi:bitmap_init::@18->bitmap_init::@1#1] -- register_copy 
    // [372] phi bitmap_init::x#10 = 0 [phi:bitmap_init::@18->bitmap_init::@1#2] -- vwuz1=vwuc1 
    lda #<0
    sta.z x
    sta.z x+1
    // [372] phi from bitmap_init::@7 to bitmap_init::@1 [phi:bitmap_init::@7->bitmap_init::@1]
    // [372] phi bitmap_init::bitshift#10 = bitmap_init::bitshift#14 [phi:bitmap_init::@7->bitmap_init::@1#0] -- register_copy 
    // [372] phi bitmap_init::bitmask#10 = bitmap_init::bitmask#16 [phi:bitmap_init::@7->bitmap_init::@1#1] -- register_copy 
    // [372] phi bitmap_init::x#10 = bitmap_init::x#1 [phi:bitmap_init::@7->bitmap_init::@1#2] -- register_copy 
    // bitmap_init::@1
  __b1:
    // if(__bitmap_color_depth==0)
    // [373] if(__bitmap_color_depth!=0) goto bitmap_init::@2 -- vbuz1_neq_0_then_la1 
    lda.z __bitmap_color_depth
    bne __b2
    // bitmap_init::@8
    // x >> 3
    // [374] bitmap_init::$7 = bitmap_init::x#10 >> 3 -- vwuz1=vwuz2_ror_3 
    lda.z x+1
    lsr
    sta.z __7+1
    lda.z x
    ror
    sta.z __7
    lsr.z __7+1
    ror.z __7
    lsr.z __7+1
    ror.z __7
    // __bitmap_plot_x[x] = (x >> 3)
    // [375] bitmap_init::$23 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __23
    lda.z x+1
    rol
    sta.z __23+1
    // [376] bitmap_init::$29 = __bitmap_plot_x + bitmap_init::$23 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __29
    adc #<__bitmap_plot_x
    sta.z __29
    lda.z __29+1
    adc #>__bitmap_plot_x
    sta.z __29+1
    // [377] *bitmap_init::$29 = bitmap_init::$7 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z __7
    sta (__29),y
    iny
    lda.z __7+1
    sta (__29),y
    // __bitmap_plot_bitmask[x] = bitmask
    // [378] bitmap_init::$30 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __30
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __30+1
    // [379] *bitmap_init::$30 = bitmap_init::bitmask#10 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__30),y
    // __bitmap_plot_bitshift[x] = (byte)bitshift
    // [380] bitmap_init::$31 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __31
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __31+1
    // [381] *bitmap_init::$31 = (byte)bitmap_init::bitshift#10 -- _deref_pbuz1=vbuxx 
    txa
    sta (__31),y
    // bitshift -= 1
    // [382] bitmap_init::bitshift#1 = bitmap_init::bitshift#10 - 1 -- vbsxx=vbsxx_minus_1 
    dex
    // bitmask >>= 1
    // [383] bitmap_init::bitmask#1 = bitmap_init::bitmask#10 >> 1 -- vbuz1=vbuz1_ror_1 
    lsr.z bitmask
    // [384] phi from bitmap_init::@1 bitmap_init::@8 to bitmap_init::@2 [phi:bitmap_init::@1/bitmap_init::@8->bitmap_init::@2]
    // [384] phi bitmap_init::bitshift#11 = bitmap_init::bitshift#10 [phi:bitmap_init::@1/bitmap_init::@8->bitmap_init::@2#0] -- register_copy 
    // [384] phi bitmap_init::bitmask#11 = bitmap_init::bitmask#10 [phi:bitmap_init::@1/bitmap_init::@8->bitmap_init::@2#1] -- register_copy 
    // bitmap_init::@2
  __b2:
    // if(__bitmap_color_depth==1)
    // [385] if(__bitmap_color_depth!=1) goto bitmap_init::@3 -- vbuz1_neq_vbuc1_then_la1 
    lda #1
    cmp.z __bitmap_color_depth
    bne __b3
    // bitmap_init::@9
    // x >> 2
    // [386] bitmap_init::$10 = bitmap_init::x#10 >> 2 -- vwuz1=vwuz2_ror_2 
    lda.z x+1
    lsr
    sta.z __10+1
    lda.z x
    ror
    sta.z __10
    lsr.z __10+1
    ror.z __10
    // __bitmap_plot_x[x] = (x >> 2)
    // [387] bitmap_init::$24 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __24
    lda.z x+1
    rol
    sta.z __24+1
    // [388] bitmap_init::$32 = __bitmap_plot_x + bitmap_init::$24 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __32
    adc #<__bitmap_plot_x
    sta.z __32
    lda.z __32+1
    adc #>__bitmap_plot_x
    sta.z __32+1
    // [389] *bitmap_init::$32 = bitmap_init::$10 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z __10
    sta (__32),y
    iny
    lda.z __10+1
    sta (__32),y
    // __bitmap_plot_bitmask[x] = bitmask
    // [390] bitmap_init::$33 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __33
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __33+1
    // [391] *bitmap_init::$33 = bitmap_init::bitmask#11 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__33),y
    // __bitmap_plot_bitshift[x] = (byte)bitshift
    // [392] bitmap_init::$34 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __34
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __34+1
    // [393] *bitmap_init::$34 = (byte)bitmap_init::bitshift#11 -- _deref_pbuz1=vbuxx 
    txa
    sta (__34),y
    // bitshift -= 2
    // [394] bitmap_init::bitshift#2 = bitmap_init::bitshift#11 - 2 -- vbsxx=vbsxx_minus_2 
    dex
    dex
    // bitmask >>= 2
    // [395] bitmap_init::bitmask#2 = bitmap_init::bitmask#11 >> 2 -- vbuz1=vbuz1_ror_2 
    lda.z bitmask
    lsr
    lsr
    sta.z bitmask
    // [396] phi from bitmap_init::@2 bitmap_init::@9 to bitmap_init::@3 [phi:bitmap_init::@2/bitmap_init::@9->bitmap_init::@3]
    // [396] phi bitmap_init::bitshift#12 = bitmap_init::bitshift#11 [phi:bitmap_init::@2/bitmap_init::@9->bitmap_init::@3#0] -- register_copy 
    // [396] phi bitmap_init::bitmask#12 = bitmap_init::bitmask#11 [phi:bitmap_init::@2/bitmap_init::@9->bitmap_init::@3#1] -- register_copy 
    // bitmap_init::@3
  __b3:
    // if(__bitmap_color_depth==2)
    // [397] if(__bitmap_color_depth!=2) goto bitmap_init::@4 -- vbuz1_neq_vbuc1_then_la1 
    lda #2
    cmp.z __bitmap_color_depth
    bne __b4
    // bitmap_init::@10
    // x >> 1
    // [398] bitmap_init::$13 = bitmap_init::x#10 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z x+1
    lsr
    sta.z __13+1
    lda.z x
    ror
    sta.z __13
    // __bitmap_plot_x[x] = (x >> 1)
    // [399] bitmap_init::$25 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __25
    lda.z x+1
    rol
    sta.z __25+1
    // [400] bitmap_init::$35 = __bitmap_plot_x + bitmap_init::$25 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __35
    adc #<__bitmap_plot_x
    sta.z __35
    lda.z __35+1
    adc #>__bitmap_plot_x
    sta.z __35+1
    // [401] *bitmap_init::$35 = bitmap_init::$13 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z __13
    sta (__35),y
    iny
    lda.z __13+1
    sta (__35),y
    // __bitmap_plot_bitmask[x] = bitmask
    // [402] bitmap_init::$36 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __36
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __36+1
    // [403] *bitmap_init::$36 = bitmap_init::bitmask#12 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__36),y
    // __bitmap_plot_bitshift[x] = (byte)bitshift
    // [404] bitmap_init::$37 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __37
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __37+1
    // [405] *bitmap_init::$37 = (byte)bitmap_init::bitshift#12 -- _deref_pbuz1=vbuxx 
    txa
    sta (__37),y
    // bitshift -= 4
    // [406] bitmap_init::bitshift#3 = bitmap_init::bitshift#12 - 4 -- vbsxx=vbsxx_minus_vbsc1 
    txa
    sec
    sbc #4
    tax
    // bitmask >>= 4
    // [407] bitmap_init::bitmask#3 = bitmap_init::bitmask#12 >> 4 -- vbuz1=vbuz1_ror_4 
    lda.z bitmask
    lsr
    lsr
    lsr
    lsr
    sta.z bitmask
    // [408] phi from bitmap_init::@10 bitmap_init::@3 to bitmap_init::@4 [phi:bitmap_init::@10/bitmap_init::@3->bitmap_init::@4]
    // [408] phi bitmap_init::bitmask#13 = bitmap_init::bitmask#3 [phi:bitmap_init::@10/bitmap_init::@3->bitmap_init::@4#0] -- register_copy 
    // [408] phi bitmap_init::bitshift#13 = bitmap_init::bitshift#3 [phi:bitmap_init::@10/bitmap_init::@3->bitmap_init::@4#1] -- register_copy 
    // bitmap_init::@4
  __b4:
    // if(__bitmap_color_depth==3)
    // [409] if(__bitmap_color_depth!=3) goto bitmap_init::@5 -- vbuz1_neq_vbuc1_then_la1 
    lda #3
    cmp.z __bitmap_color_depth
    bne __b5
    // bitmap_init::@11
    // __bitmap_plot_x[x] = x
    // [410] bitmap_init::$26 = bitmap_init::x#10 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __26
    lda.z x+1
    rol
    sta.z __26+1
    // [411] bitmap_init::$38 = __bitmap_plot_x + bitmap_init::$26 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __38
    adc #<__bitmap_plot_x
    sta.z __38
    lda.z __38+1
    adc #>__bitmap_plot_x
    sta.z __38+1
    // [412] *bitmap_init::$38 = bitmap_init::x#10 -- _deref_pwuz1=vwuz2 
    ldy #0
    lda.z x
    sta (__38),y
    iny
    lda.z x+1
    sta (__38),y
    // __bitmap_plot_bitmask[x] = bitmask
    // [413] bitmap_init::$39 = __bitmap_plot_bitmask + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __39
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __39+1
    // [414] *bitmap_init::$39 = bitmap_init::bitmask#13 -- _deref_pbuz1=vbuz2 
    lda.z bitmask
    ldy #0
    sta (__39),y
    // __bitmap_plot_bitshift[x] = (byte)bitshift
    // [415] bitmap_init::$40 = __bitmap_plot_bitshift + bitmap_init::x#10 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __40
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __40+1
    // [416] *bitmap_init::$40 = (byte)bitmap_init::bitshift#13 -- _deref_pbuz1=vbuxx 
    txa
    sta (__40),y
    // bitmap_init::@5
  __b5:
    // if(bitshift<0)
    // [417] if(bitmap_init::bitshift#13>=0) goto bitmap_init::@6 -- vbsxx_ge_0_then_la1 
    cpx #0
    bpl __b6
    // bitmap_init::@12
    // bitshift = bitshifts[__bitmap_color_depth]
    // [418] bitmap_init::bitshift#4 = bitshifts[__bitmap_color_depth] -- vbsxx=pbsc1_derefidx_vbuz1 
    ldy.z __bitmap_color_depth
    ldx bitshifts,y
    // [419] phi from bitmap_init::@12 bitmap_init::@5 to bitmap_init::@6 [phi:bitmap_init::@12/bitmap_init::@5->bitmap_init::@6]
    // [419] phi bitmap_init::bitshift#14 = bitmap_init::bitshift#4 [phi:bitmap_init::@12/bitmap_init::@5->bitmap_init::@6#0] -- register_copy 
    // bitmap_init::@6
  __b6:
    // if(bitmask==0)
    // [420] if(bitmap_init::bitmask#13!=0) goto bitmap_init::@7 -- vbuz1_neq_0_then_la1 
    lda.z bitmask
    bne __b7
    // bitmap_init::@13
    // bitmask = bitmasks[__bitmap_color_depth]
    // [421] bitmap_init::bitmask#4 = bitmasks[__bitmap_color_depth] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __bitmap_color_depth
    lda bitmasks,y
    sta.z bitmask
    // [422] phi from bitmap_init::@13 bitmap_init::@6 to bitmap_init::@7 [phi:bitmap_init::@13/bitmap_init::@6->bitmap_init::@7]
    // [422] phi bitmap_init::bitmask#16 = bitmap_init::bitmask#4 [phi:bitmap_init::@13/bitmap_init::@6->bitmap_init::@7#0] -- register_copy 
    // bitmap_init::@7
  __b7:
    // for(word x : 0..639)
    // [423] bitmap_init::x#1 = ++ bitmap_init::x#10 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // [424] if(bitmap_init::x#1!=$280) goto bitmap_init::@1 -- vwuz1_neq_vwuc1_then_la1 
    lda.z x+1
    cmp #>$280
    beq !__b1+
    jmp __b1
  !__b1:
    lda.z x
    cmp #<$280
    beq !__b1+
    jmp __b1
  !__b1:
    // bitmap_init::@14
    // __bitmap_color_depth<<2
    // [425] bitmap_init::$3 = __bitmap_color_depth << 2 -- vbuaa=vbuz1_rol_2 
    lda.z __bitmap_color_depth
    asl
    asl
    // (__bitmap_color_depth<<2)+__bitmap_hscale
    // [426] bitmap_init::$4 = bitmap_init::$3 + __bitmap_hscale -- vbuaa=vbuaa_plus_vbuz1 
    clc
    adc.z __bitmap_hscale
    // word hdelta = hdeltas[(__bitmap_color_depth<<2)+__bitmap_hscale]
    // [427] bitmap_init::$27 = bitmap_init::$4 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [428] bitmap_init::hdelta#0 = hdeltas[bitmap_init::$27] -- vwuz1=pwuc1_derefidx_vbuaa 
    // This sets the right delta to skip a whole line based on the scale, depending on the color depth.
    tay
    lda hdeltas,y
    sta.z hdelta
    lda hdeltas+1,y
    sta.z hdelta+1
    // dword yoffs = __bitmap_address
    // [429] bitmap_init::yoffs#0 = __bitmap_address -- vduz1=vduz2 
    // We start at the bitmap address; The plot_y contains the bitmap address embedded so we know where a line starts.
    lda.z __bitmap_address
    sta.z yoffs
    lda.z __bitmap_address+1
    sta.z yoffs+1
    lda.z __bitmap_address+2
    sta.z yoffs+2
    lda.z __bitmap_address+3
    sta.z yoffs+3
    // [430] phi from bitmap_init::@14 to bitmap_init::@15 [phi:bitmap_init::@14->bitmap_init::@15]
    // [430] phi bitmap_init::yoffs#2 = bitmap_init::yoffs#0 [phi:bitmap_init::@14->bitmap_init::@15#0] -- register_copy 
    // [430] phi bitmap_init::y#2 = 0 [phi:bitmap_init::@14->bitmap_init::@15#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z y
    sta.z y+1
    // [430] phi from bitmap_init::@15 to bitmap_init::@15 [phi:bitmap_init::@15->bitmap_init::@15]
    // [430] phi bitmap_init::yoffs#2 = bitmap_init::yoffs#1 [phi:bitmap_init::@15->bitmap_init::@15#0] -- register_copy 
    // [430] phi bitmap_init::y#2 = bitmap_init::y#1 [phi:bitmap_init::@15->bitmap_init::@15#1] -- register_copy 
    // bitmap_init::@15
  __b15:
    // __bitmap_plot_y[y] = yoffs
    // [431] bitmap_init::$28 = bitmap_init::y#2 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z y
    asl
    sta.z __28
    lda.z y+1
    rol
    sta.z __28+1
    asl.z __28
    rol.z __28+1
    // [432] bitmap_init::$41 = __bitmap_plot_y + bitmap_init::$28 -- pduz1=pduc1_plus_vwuz1 
    clc
    lda.z __41
    adc #<__bitmap_plot_y
    sta.z __41
    lda.z __41+1
    adc #>__bitmap_plot_y
    sta.z __41+1
    // [433] *bitmap_init::$41 = bitmap_init::yoffs#2 -- _deref_pduz1=vduz2 
    ldy #0
    lda.z yoffs
    sta (__41),y
    iny
    lda.z yoffs+1
    sta (__41),y
    iny
    lda.z yoffs+2
    sta (__41),y
    iny
    lda.z yoffs+3
    sta (__41),y
    // yoffs = yoffs + hdelta
    // [434] bitmap_init::yoffs#1 = bitmap_init::yoffs#2 + bitmap_init::hdelta#0 -- vduz1=vduz1_plus_vwuz2 
    lda.z yoffs
    clc
    adc.z hdelta
    sta.z yoffs
    lda.z yoffs+1
    adc.z hdelta+1
    sta.z yoffs+1
    lda.z yoffs+2
    adc #0
    sta.z yoffs+2
    lda.z yoffs+3
    adc #0
    sta.z yoffs+3
    // for(word y : 0..479)
    // [435] bitmap_init::y#1 = ++ bitmap_init::y#2 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // [436] if(bitmap_init::y#1!=$1e0) goto bitmap_init::@15 -- vwuz1_neq_vwuc1_then_la1 
    lda.z y+1
    cmp #>$1e0
    bne __b15
    lda.z y
    cmp #<$1e0
    bne __b15
    // bitmap_init::@return
    // }
    // [437] return 
    rts
}
  // bitmap_clear
// Clear all graphics on the bitmap
bitmap_clear: {
    .label vdelta = $39
    .label hdelta = $15
    .label count = $5a
    .label vdest = $3b
    // word vdelta = vdeltas[__bitmap_vscale]
    // [438] bitmap_clear::$6 = __bitmap_vscale << 1 -- vbuaa=vbuz1_rol_1 
    lda.z __bitmap_vscale
    asl
    // [439] bitmap_clear::vdelta#0 = vdeltas[bitmap_clear::$6] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vdeltas,y
    sta.z vdelta
    lda vdeltas+1,y
    sta.z vdelta+1
    // __bitmap_color_depth<<2
    // [440] bitmap_clear::$0 = __bitmap_color_depth << 2 -- vbuaa=vbuz1_rol_2 
    lda.z __bitmap_color_depth
    asl
    asl
    // (__bitmap_color_depth<<2)+__bitmap_hscale
    // [441] bitmap_clear::$1 = bitmap_clear::$0 + __bitmap_hscale -- vbuaa=vbuaa_plus_vbuz1 
    clc
    adc.z __bitmap_hscale
    // word hdelta = hdeltas[(__bitmap_color_depth<<2)+__bitmap_hscale]
    // [442] bitmap_clear::$7 = bitmap_clear::$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [443] bitmap_clear::hdelta#0 = hdeltas[bitmap_clear::$7] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda hdeltas,y
    sta.z hdelta
    lda hdeltas+1,y
    sta.z hdelta+1
    // mul16u(hdelta,vdelta)
    // [444] mul16u::a#0 = bitmap_clear::hdelta#0
    // [445] mul16u::b#0 = bitmap_clear::vdelta#0
    // [446] call mul16u 
    jsr mul16u
    // [447] mul16u::return#0 = mul16u::res#2
    // bitmap_clear::@1
    // dword count = mul16u(hdelta,vdelta)
    // [448] bitmap_clear::count#0 = mul16u::return#0
    // char vbank = BYTE2(__bitmap_address)
    // [449] bitmap_clear::vbank#0 = byte2  __bitmap_address -- vbuxx=_byte2_vduz1 
    ldx.z __bitmap_address+2
    // WORD0(__bitmap_address)
    // [450] bitmap_clear::vdest#0 = word0  __bitmap_address -- vwuz1=_word0_vduz2 
    lda.z __bitmap_address
    sta.z vdest
    lda.z __bitmap_address+1
    sta.z vdest+1
    // memset_vram(vbank, vdest, 0, count)
    // [451] memset_vram::vbank#0 = bitmap_clear::vbank#0
    // [452] memset_vram::vdest#0 = (void*)bitmap_clear::vdest#0
    // [453] memset_vram::num#0 = bitmap_clear::count#0
    // [454] call memset_vram 
    jsr memset_vram
    // bitmap_clear::@return
    // }
    // [455] return 
    rts
}
  // kbhit
// Return true if there's a key waiting, return false if not
kbhit: {
    .label chptr = ch
    .label IN_DEV = $28a
    // Current input device number
    .label GETIN = $ffe4
    .label ch = $3d
    // char ch = 0
    // [456] kbhit::ch = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z ch
    // kickasm
    // kickasm( uses kbhit::chptr uses kbhit::IN_DEV uses kbhit::GETIN) {{ jsr _kbhit         bne L3          jmp continue1          .var via1 = $9f60                  //VIA#1         .var d1pra = via1+1      _kbhit:         ldy     d1pra       // The count of keys pressed is stored in RAM bank 0.         stz     d1pra       // Set d1pra to zero to access RAM bank 0.         lda     $A00A       // Get number of characters from this address in the ROM of the CX16 (ROM 38).         sty     d1pra       // Set d1pra to previous value.         rts      L3:         ldy     IN_DEV          // Save current input device         stz     IN_DEV          // Keyboard         phy         jsr     GETIN           // Read char, and return in .A         ply         sta     chptr           // Store the character read in ch         sty     IN_DEV          // Restore input device         ldx     #>$0000         rts      continue1:         nop       }}
    // CBM GETIN API
    jsr _kbhit
        bne L3

        jmp continue1

        .var via1 = $9f60                  //VIA#1
        .var d1pra = via1+1

    _kbhit:
        ldy     d1pra       // The count of keys pressed is stored in RAM bank 0.
        stz     d1pra       // Set d1pra to zero to access RAM bank 0.
        lda     $A00A       // Get number of characters from this address in the ROM of the CX16 (ROM 38).
        sty     d1pra       // Set d1pra to previous value.
        rts

    L3:
        ldy     IN_DEV          // Save current input device
        stz     IN_DEV          // Keyboard
        phy
        jsr     GETIN           // Read char, and return in .A
        ply
        sta     chptr           // Store the character read in ch
        sty     IN_DEV          // Restore input device
        ldx     #>$0000
        rts

    continue1:
        nop
     
    // return ch;
    // [458] kbhit::return#0 = kbhit::ch -- vbuaa=vbuz1 
    // kbhit::@return
    // }
    // [459] kbhit::return#1 = kbhit::return#0
    // [460] return 
    rts
}
  // bitmap_line
// Draw a line on the bitmap
// bitmap_line(word zp(3) x0, word zp($39) x1, word zp($3b) y0, word zp($15) y1, byte register(X) c)
bitmap_line: {
    .label xd = $17
    .label yd = $6a
    .label yd_1 = $3e
    .label x0 = 3
    .label x1 = $39
    .label y0 = $3b
    .label y1 = $15
    // if(x0<x1)
    // [462] if(bitmap_line::x0#10<bitmap_line::x1#10) goto bitmap_line::@1 -- vwuz1_lt_vwuz2_then_la1 
    lda.z x0+1
    cmp.z x1+1
    bcs !__b1+
    jmp __b1
  !__b1:
    bne !+
    lda.z x0
    cmp.z x1
    bcs !__b1+
    jmp __b1
  !__b1:
  !:
    // bitmap_line::@2
    // xd = x0-x1
    // [463] bitmap_line::xd#2 = bitmap_line::x0#10 - bitmap_line::x1#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z x0
    sec
    sbc.z x1
    sta.z xd
    lda.z x0+1
    sbc.z x1+1
    sta.z xd+1
    // if(y0<y1)
    // [464] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@7 -- vwuz1_lt_vwuz2_then_la1 
    lda.z y0+1
    cmp.z y1+1
    bcc __b7
    bne !+
    lda.z y0
    cmp.z y1
    bcc __b7
  !:
    // bitmap_line::@3
    // yd = y0-y1
    // [465] bitmap_line::yd#2 = bitmap_line::y0#10 - bitmap_line::y1#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y0
    sec
    sbc.z y1
    sta.z yd_1
    lda.z y0+1
    sbc.z y1+1
    sta.z yd_1+1
    // if(yd<xd)
    // [466] if(bitmap_line::yd#2<bitmap_line::xd#2) goto bitmap_line::@8 -- vwuz1_lt_vwuz2_then_la1 
    cmp.z xd+1
    bcc __b8
    bne !+
    lda.z yd_1
    cmp.z xd
    bcc __b8
  !:
    // bitmap_line::@4
    // bitmap_line_ydxi(y1, x1, y0, yd, xd, c)
    // [467] bitmap_line_ydxi::y#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxi.y
    lda.z y1+1
    sta.z bitmap_line_ydxi.y+1
    // [468] bitmap_line_ydxi::x#0 = bitmap_line::x1#10
    // [469] bitmap_line_ydxi::y1#0 = bitmap_line::y0#10
    // [470] bitmap_line_ydxi::yd#0 = bitmap_line::yd#2
    // [471] bitmap_line_ydxi::xd#0 = bitmap_line::xd#2
    // [472] bitmap_line_ydxi::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxi.c
    // [473] call bitmap_line_ydxi 
    // [642] phi from bitmap_line::@4 to bitmap_line_ydxi [phi:bitmap_line::@4->bitmap_line_ydxi]
    // [642] phi bitmap_line_ydxi::y1#6 = bitmap_line_ydxi::y1#0 [phi:bitmap_line::@4->bitmap_line_ydxi#0] -- register_copy 
    // [642] phi bitmap_line_ydxi::yd#5 = bitmap_line_ydxi::yd#0 [phi:bitmap_line::@4->bitmap_line_ydxi#1] -- register_copy 
    // [642] phi bitmap_line_ydxi::c#3 = bitmap_line_ydxi::c#0 [phi:bitmap_line::@4->bitmap_line_ydxi#2] -- register_copy 
    // [642] phi bitmap_line_ydxi::y#6 = bitmap_line_ydxi::y#0 [phi:bitmap_line::@4->bitmap_line_ydxi#3] -- register_copy 
    // [642] phi bitmap_line_ydxi::x#5 = bitmap_line_ydxi::x#0 [phi:bitmap_line::@4->bitmap_line_ydxi#4] -- register_copy 
    // [642] phi bitmap_line_ydxi::xd#2 = bitmap_line_ydxi::xd#0 [phi:bitmap_line::@4->bitmap_line_ydxi#5] -- register_copy 
    jsr bitmap_line_ydxi
    // bitmap_line::@return
    // }
    // [474] return 
    rts
    // bitmap_line::@8
  __b8:
    // bitmap_line_xdyi(x1, y1, x0, xd, yd, c)
    // [475] bitmap_line_xdyi::x#0 = bitmap_line::x1#10 -- vwuz1=vwuz2 
    lda.z x1
    sta.z bitmap_line_xdyi.x
    lda.z x1+1
    sta.z bitmap_line_xdyi.x+1
    // [476] bitmap_line_xdyi::y#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_xdyi.y
    lda.z y1+1
    sta.z bitmap_line_xdyi.y+1
    // [477] bitmap_line_xdyi::x1#0 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyi.x1
    lda.z x0+1
    sta.z bitmap_line_xdyi.x1+1
    // [478] bitmap_line_xdyi::xd#0 = bitmap_line::xd#2
    // [479] bitmap_line_xdyi::yd#0 = bitmap_line::yd#2
    // [480] bitmap_line_xdyi::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyi.c
    // [481] call bitmap_line_xdyi 
    // [658] phi from bitmap_line::@8 to bitmap_line_xdyi [phi:bitmap_line::@8->bitmap_line_xdyi]
    // [658] phi bitmap_line_xdyi::x1#6 = bitmap_line_xdyi::x1#0 [phi:bitmap_line::@8->bitmap_line_xdyi#0] -- register_copy 
    // [658] phi bitmap_line_xdyi::xd#5 = bitmap_line_xdyi::xd#0 [phi:bitmap_line::@8->bitmap_line_xdyi#1] -- register_copy 
    // [658] phi bitmap_line_xdyi::c#3 = bitmap_line_xdyi::c#0 [phi:bitmap_line::@8->bitmap_line_xdyi#2] -- register_copy 
    // [658] phi bitmap_line_xdyi::y#5 = bitmap_line_xdyi::y#0 [phi:bitmap_line::@8->bitmap_line_xdyi#3] -- register_copy 
    // [658] phi bitmap_line_xdyi::x#6 = bitmap_line_xdyi::x#0 [phi:bitmap_line::@8->bitmap_line_xdyi#4] -- register_copy 
    // [658] phi bitmap_line_xdyi::yd#2 = bitmap_line_xdyi::yd#0 [phi:bitmap_line::@8->bitmap_line_xdyi#5] -- register_copy 
    jsr bitmap_line_xdyi
    rts
    // bitmap_line::@7
  __b7:
    // yd = y1-y0
    // [482] bitmap_line::yd#1 = bitmap_line::y1#10 - bitmap_line::y0#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y1
    sec
    sbc.z y0
    sta.z yd
    lda.z y1+1
    sbc.z y0+1
    sta.z yd+1
    // if(yd<xd)
    // [483] if(bitmap_line::yd#1<bitmap_line::xd#2) goto bitmap_line::@9 -- vwuz1_lt_vwuz2_then_la1 
    cmp.z xd+1
    bcc __b9
    bne !+
    lda.z yd
    cmp.z xd
    bcc __b9
  !:
    // bitmap_line::@10
    // bitmap_line_ydxd(y0, x0, y1, yd, xd, c)
    // [484] bitmap_line_ydxd::y#0 = bitmap_line::y0#10 -- vwuz1=vwuz2 
    lda.z y0
    sta.z bitmap_line_ydxd.y
    lda.z y0+1
    sta.z bitmap_line_ydxd.y+1
    // [485] bitmap_line_ydxd::x#0 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_ydxd.x
    lda.z x0+1
    sta.z bitmap_line_ydxd.x+1
    // [486] bitmap_line_ydxd::y1#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxd.y1
    lda.z y1+1
    sta.z bitmap_line_ydxd.y1+1
    // [487] bitmap_line_ydxd::yd#0 = bitmap_line::yd#1
    // [488] bitmap_line_ydxd::xd#0 = bitmap_line::xd#2
    // [489] bitmap_line_ydxd::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxd.c
    // [490] call bitmap_line_ydxd 
    // [674] phi from bitmap_line::@10 to bitmap_line_ydxd [phi:bitmap_line::@10->bitmap_line_ydxd]
    // [674] phi bitmap_line_ydxd::y1#6 = bitmap_line_ydxd::y1#0 [phi:bitmap_line::@10->bitmap_line_ydxd#0] -- register_copy 
    // [674] phi bitmap_line_ydxd::yd#5 = bitmap_line_ydxd::yd#0 [phi:bitmap_line::@10->bitmap_line_ydxd#1] -- register_copy 
    // [674] phi bitmap_line_ydxd::c#3 = bitmap_line_ydxd::c#0 [phi:bitmap_line::@10->bitmap_line_ydxd#2] -- register_copy 
    // [674] phi bitmap_line_ydxd::y#7 = bitmap_line_ydxd::y#0 [phi:bitmap_line::@10->bitmap_line_ydxd#3] -- register_copy 
    // [674] phi bitmap_line_ydxd::x#5 = bitmap_line_ydxd::x#0 [phi:bitmap_line::@10->bitmap_line_ydxd#4] -- register_copy 
    // [674] phi bitmap_line_ydxd::xd#2 = bitmap_line_ydxd::xd#0 [phi:bitmap_line::@10->bitmap_line_ydxd#5] -- register_copy 
    jsr bitmap_line_ydxd
    rts
    // bitmap_line::@9
  __b9:
    // bitmap_line_xdyd(x1, y1, x0, xd, yd, c)
    // [491] bitmap_line_xdyd::x#0 = bitmap_line::x1#10 -- vwuz1=vwuz2 
    lda.z x1
    sta.z bitmap_line_xdyd.x
    lda.z x1+1
    sta.z bitmap_line_xdyd.x+1
    // [492] bitmap_line_xdyd::y#0 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_xdyd.y
    lda.z y1+1
    sta.z bitmap_line_xdyd.y+1
    // [493] bitmap_line_xdyd::x1#0 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyd.x1
    lda.z x0+1
    sta.z bitmap_line_xdyd.x1+1
    // [494] bitmap_line_xdyd::xd#0 = bitmap_line::xd#2
    // [495] bitmap_line_xdyd::yd#0 = bitmap_line::yd#1
    // [496] bitmap_line_xdyd::c#0 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyd.c
    // [497] call bitmap_line_xdyd 
    // [690] phi from bitmap_line::@9 to bitmap_line_xdyd [phi:bitmap_line::@9->bitmap_line_xdyd]
    // [690] phi bitmap_line_xdyd::x1#6 = bitmap_line_xdyd::x1#0 [phi:bitmap_line::@9->bitmap_line_xdyd#0] -- register_copy 
    // [690] phi bitmap_line_xdyd::xd#5 = bitmap_line_xdyd::xd#0 [phi:bitmap_line::@9->bitmap_line_xdyd#1] -- register_copy 
    // [690] phi bitmap_line_xdyd::c#3 = bitmap_line_xdyd::c#0 [phi:bitmap_line::@9->bitmap_line_xdyd#2] -- register_copy 
    // [690] phi bitmap_line_xdyd::y#5 = bitmap_line_xdyd::y#0 [phi:bitmap_line::@9->bitmap_line_xdyd#3] -- register_copy 
    // [690] phi bitmap_line_xdyd::x#6 = bitmap_line_xdyd::x#0 [phi:bitmap_line::@9->bitmap_line_xdyd#4] -- register_copy 
    // [690] phi bitmap_line_xdyd::yd#2 = bitmap_line_xdyd::yd#0 [phi:bitmap_line::@9->bitmap_line_xdyd#5] -- register_copy 
    jsr bitmap_line_xdyd
    rts
    // bitmap_line::@1
  __b1:
    // xd = x1-x0
    // [498] bitmap_line::xd#1 = bitmap_line::x1#10 - bitmap_line::x0#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z x1
    sec
    sbc.z x0
    sta.z xd
    lda.z x1+1
    sbc.z x0+1
    sta.z xd+1
    // if(y0<y1)
    // [499] if(bitmap_line::y0#10<bitmap_line::y1#10) goto bitmap_line::@11 -- vwuz1_lt_vwuz2_then_la1 
    lda.z y0+1
    cmp.z y1+1
    bcc __b11
    bne !+
    lda.z y0
    cmp.z y1
    bcc __b11
  !:
    // bitmap_line::@5
    // yd = y0-y1
    // [500] bitmap_line::yd#10 = bitmap_line::y0#10 - bitmap_line::y1#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y0
    sec
    sbc.z y1
    sta.z yd
    lda.z y0+1
    sbc.z y1+1
    sta.z yd+1
    // if(yd<xd)
    // [501] if(bitmap_line::yd#10<bitmap_line::xd#1) goto bitmap_line::@12 -- vwuz1_lt_vwuz2_then_la1 
    cmp.z xd+1
    bcc __b12
    bne !+
    lda.z yd
    cmp.z xd
    bcc __b12
  !:
    // bitmap_line::@6
    // bitmap_line_ydxd(y1, x1, y0, yd, xd, c)
    // [502] bitmap_line_ydxd::y#1 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxd.y
    lda.z y1+1
    sta.z bitmap_line_ydxd.y+1
    // [503] bitmap_line_ydxd::x#1 = bitmap_line::x1#10
    // [504] bitmap_line_ydxd::y1#1 = bitmap_line::y0#10
    // [505] bitmap_line_ydxd::yd#1 = bitmap_line::yd#10
    // [506] bitmap_line_ydxd::xd#1 = bitmap_line::xd#1
    // [507] bitmap_line_ydxd::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxd.c
    // [508] call bitmap_line_ydxd 
    // [674] phi from bitmap_line::@6 to bitmap_line_ydxd [phi:bitmap_line::@6->bitmap_line_ydxd]
    // [674] phi bitmap_line_ydxd::y1#6 = bitmap_line_ydxd::y1#1 [phi:bitmap_line::@6->bitmap_line_ydxd#0] -- register_copy 
    // [674] phi bitmap_line_ydxd::yd#5 = bitmap_line_ydxd::yd#1 [phi:bitmap_line::@6->bitmap_line_ydxd#1] -- register_copy 
    // [674] phi bitmap_line_ydxd::c#3 = bitmap_line_ydxd::c#1 [phi:bitmap_line::@6->bitmap_line_ydxd#2] -- register_copy 
    // [674] phi bitmap_line_ydxd::y#7 = bitmap_line_ydxd::y#1 [phi:bitmap_line::@6->bitmap_line_ydxd#3] -- register_copy 
    // [674] phi bitmap_line_ydxd::x#5 = bitmap_line_ydxd::x#1 [phi:bitmap_line::@6->bitmap_line_ydxd#4] -- register_copy 
    // [674] phi bitmap_line_ydxd::xd#2 = bitmap_line_ydxd::xd#1 [phi:bitmap_line::@6->bitmap_line_ydxd#5] -- register_copy 
    jsr bitmap_line_ydxd
    rts
    // bitmap_line::@12
  __b12:
    // bitmap_line_xdyd(x0, y0, x1, xd, yd, c)
    // [509] bitmap_line_xdyd::x#1 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyd.x
    lda.z x0+1
    sta.z bitmap_line_xdyd.x+1
    // [510] bitmap_line_xdyd::y#1 = bitmap_line::y0#10
    // [511] bitmap_line_xdyd::x1#1 = bitmap_line::x1#10
    // [512] bitmap_line_xdyd::xd#1 = bitmap_line::xd#1
    // [513] bitmap_line_xdyd::yd#1 = bitmap_line::yd#10
    // [514] bitmap_line_xdyd::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyd.c
    // [515] call bitmap_line_xdyd 
    // [690] phi from bitmap_line::@12 to bitmap_line_xdyd [phi:bitmap_line::@12->bitmap_line_xdyd]
    // [690] phi bitmap_line_xdyd::x1#6 = bitmap_line_xdyd::x1#1 [phi:bitmap_line::@12->bitmap_line_xdyd#0] -- register_copy 
    // [690] phi bitmap_line_xdyd::xd#5 = bitmap_line_xdyd::xd#1 [phi:bitmap_line::@12->bitmap_line_xdyd#1] -- register_copy 
    // [690] phi bitmap_line_xdyd::c#3 = bitmap_line_xdyd::c#1 [phi:bitmap_line::@12->bitmap_line_xdyd#2] -- register_copy 
    // [690] phi bitmap_line_xdyd::y#5 = bitmap_line_xdyd::y#1 [phi:bitmap_line::@12->bitmap_line_xdyd#3] -- register_copy 
    // [690] phi bitmap_line_xdyd::x#6 = bitmap_line_xdyd::x#1 [phi:bitmap_line::@12->bitmap_line_xdyd#4] -- register_copy 
    // [690] phi bitmap_line_xdyd::yd#2 = bitmap_line_xdyd::yd#1 [phi:bitmap_line::@12->bitmap_line_xdyd#5] -- register_copy 
    jsr bitmap_line_xdyd
    rts
    // bitmap_line::@11
  __b11:
    // yd = y1-y0
    // [516] bitmap_line::yd#11 = bitmap_line::y1#10 - bitmap_line::y0#10 -- vwuz1=vwuz2_minus_vwuz3 
    lda.z y1
    sec
    sbc.z y0
    sta.z yd_1
    lda.z y1+1
    sbc.z y0+1
    sta.z yd_1+1
    // if(yd<xd)
    // [517] if(bitmap_line::yd#11<bitmap_line::xd#1) goto bitmap_line::@13 -- vwuz1_lt_vwuz2_then_la1 
    cmp.z xd+1
    bcc __b13
    bne !+
    lda.z yd_1
    cmp.z xd
    bcc __b13
  !:
    // bitmap_line::@14
    // bitmap_line_ydxi(y0, x0, y1, yd, xd, c)
    // [518] bitmap_line_ydxi::y#1 = bitmap_line::y0#10 -- vwuz1=vwuz2 
    lda.z y0
    sta.z bitmap_line_ydxi.y
    lda.z y0+1
    sta.z bitmap_line_ydxi.y+1
    // [519] bitmap_line_ydxi::x#1 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_ydxi.x
    lda.z x0+1
    sta.z bitmap_line_ydxi.x+1
    // [520] bitmap_line_ydxi::y1#1 = bitmap_line::y1#10 -- vwuz1=vwuz2 
    lda.z y1
    sta.z bitmap_line_ydxi.y1
    lda.z y1+1
    sta.z bitmap_line_ydxi.y1+1
    // [521] bitmap_line_ydxi::yd#1 = bitmap_line::yd#11
    // [522] bitmap_line_ydxi::xd#1 = bitmap_line::xd#1
    // [523] bitmap_line_ydxi::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_ydxi.c
    // [524] call bitmap_line_ydxi 
    // [642] phi from bitmap_line::@14 to bitmap_line_ydxi [phi:bitmap_line::@14->bitmap_line_ydxi]
    // [642] phi bitmap_line_ydxi::y1#6 = bitmap_line_ydxi::y1#1 [phi:bitmap_line::@14->bitmap_line_ydxi#0] -- register_copy 
    // [642] phi bitmap_line_ydxi::yd#5 = bitmap_line_ydxi::yd#1 [phi:bitmap_line::@14->bitmap_line_ydxi#1] -- register_copy 
    // [642] phi bitmap_line_ydxi::c#3 = bitmap_line_ydxi::c#1 [phi:bitmap_line::@14->bitmap_line_ydxi#2] -- register_copy 
    // [642] phi bitmap_line_ydxi::y#6 = bitmap_line_ydxi::y#1 [phi:bitmap_line::@14->bitmap_line_ydxi#3] -- register_copy 
    // [642] phi bitmap_line_ydxi::x#5 = bitmap_line_ydxi::x#1 [phi:bitmap_line::@14->bitmap_line_ydxi#4] -- register_copy 
    // [642] phi bitmap_line_ydxi::xd#2 = bitmap_line_ydxi::xd#1 [phi:bitmap_line::@14->bitmap_line_ydxi#5] -- register_copy 
    jsr bitmap_line_ydxi
    rts
    // bitmap_line::@13
  __b13:
    // bitmap_line_xdyi(x0, y0, x1, xd, yd, c)
    // [525] bitmap_line_xdyi::x#1 = bitmap_line::x0#10 -- vwuz1=vwuz2 
    lda.z x0
    sta.z bitmap_line_xdyi.x
    lda.z x0+1
    sta.z bitmap_line_xdyi.x+1
    // [526] bitmap_line_xdyi::y#1 = bitmap_line::y0#10
    // [527] bitmap_line_xdyi::x1#1 = bitmap_line::x1#10
    // [528] bitmap_line_xdyi::xd#1 = bitmap_line::xd#1
    // [529] bitmap_line_xdyi::yd#1 = bitmap_line::yd#11
    // [530] bitmap_line_xdyi::c#1 = bitmap_line::c#10 -- vbuz1=vbuxx 
    stx.z bitmap_line_xdyi.c
    // [531] call bitmap_line_xdyi 
    // [658] phi from bitmap_line::@13 to bitmap_line_xdyi [phi:bitmap_line::@13->bitmap_line_xdyi]
    // [658] phi bitmap_line_xdyi::x1#6 = bitmap_line_xdyi::x1#1 [phi:bitmap_line::@13->bitmap_line_xdyi#0] -- register_copy 
    // [658] phi bitmap_line_xdyi::xd#5 = bitmap_line_xdyi::xd#1 [phi:bitmap_line::@13->bitmap_line_xdyi#1] -- register_copy 
    // [658] phi bitmap_line_xdyi::c#3 = bitmap_line_xdyi::c#1 [phi:bitmap_line::@13->bitmap_line_xdyi#2] -- register_copy 
    // [658] phi bitmap_line_xdyi::y#5 = bitmap_line_xdyi::y#1 [phi:bitmap_line::@13->bitmap_line_xdyi#3] -- register_copy 
    // [658] phi bitmap_line_xdyi::x#6 = bitmap_line_xdyi::x#1 [phi:bitmap_line::@13->bitmap_line_xdyi#4] -- register_copy 
    // [658] phi bitmap_line_xdyi::yd#2 = bitmap_line_xdyi::yd#1 [phi:bitmap_line::@13->bitmap_line_xdyi#5] -- register_copy 
    jsr bitmap_line_xdyi
    rts
}
  // rand
// Returns a pseudo-random number in the range of 0 to RAND_MAX (65535)
// Uses an xorshift pseudorandom number generator that hits all different values
// Information https://en.wikipedia.org/wiki/Xorshift
// Source http://www.retroprogramming.com/2017/07/xorshift-pseudorandom-numbers-in-z80.html
rand: {
    .label __0 = $3e
    .label __1 = $40
    .label __2 = $42
    .label return = $13
    // rand_state << 7
    // [533] rand::$0 = rand_state#13 << 7 -- vwuz1=vwuz2_rol_7 
    lda.z rand_state+1
    lsr
    lda.z rand_state
    ror
    sta.z __0+1
    lda #0
    ror
    sta.z __0
    // rand_state ^= rand_state << 7
    // [534] rand_state#0 = rand_state#13 ^ rand::$0 -- vwuz1=vwuz1_bxor_vwuz2 
    lda.z rand_state
    eor.z __0
    sta.z rand_state
    lda.z rand_state+1
    eor.z __0+1
    sta.z rand_state+1
    // rand_state >> 9
    // [535] rand::$1 = rand_state#0 >> 9 -- vwuz1=vwuz2_ror_9 
    lsr
    sta.z __1
    lda #0
    sta.z __1+1
    // rand_state ^= rand_state >> 9
    // [536] rand_state#1 = rand_state#0 ^ rand::$1 -- vwuz1=vwuz1_bxor_vwuz2 
    lda.z rand_state
    eor.z __1
    sta.z rand_state
    lda.z rand_state+1
    eor.z __1+1
    sta.z rand_state+1
    // rand_state << 8
    // [537] rand::$2 = rand_state#1 << 8 -- vwuz1=vwuz2_rol_8 
    lda.z rand_state
    sta.z __2+1
    lda #0
    sta.z __2
    // rand_state ^= rand_state << 8
    // [538] rand_state#14 = rand_state#1 ^ rand::$2 -- vwuz1=vwuz1_bxor_vwuz2 
    lda.z rand_state
    eor.z __2
    sta.z rand_state
    lda.z rand_state+1
    eor.z __2+1
    sta.z rand_state+1
    // return rand_state;
    // [539] rand::return#0 = rand_state#14 -- vwuz1=vwuz2 
    lda.z rand_state
    sta.z return
    lda.z rand_state+1
    sta.z return+1
    // rand::@return
    // }
    // [540] return 
    rts
}
  // modr16u
// Performs modulo on two 16 bit unsigned ints and an initial remainder
// Returns the remainder.
// Implemented using simple binary division
// modr16u(word zp($13) dividend, word zp($17) divisor)
modr16u: {
    .label return = $15
    .label dividend = $13
    .label return_1 = $39
    .label return_2 = $3b
    .label divisor = $17
    // divr16u(dividend, divisor, rem)
    // [542] divr16u::dividend#1 = modr16u::dividend#4
    // [543] divr16u::divisor#0 = modr16u::divisor#4
    // [544] call divr16u 
    // [706] phi from modr16u to divr16u [phi:modr16u->divr16u]
    jsr divr16u
    // modr16u::@1
    // return rem16u;
    // [545] modr16u::return#0 = rem16u#0 -- vwuz1=vwuz2 
    lda.z rem16u
    sta.z return
    lda.z rem16u+1
    sta.z return+1
    // modr16u::@return
    // }
    // [546] return 
    rts
}
  // vera_layer_set_text_color_mode
// Set the configuration of the layer text color mode.
// - layer: Value of 0 or 1.
// - color_mode: Specifies the color mode to be VERA_LAYER_CONFIG_16 or VERA_LAYER_CONFIG_256 for text mode.
vera_layer_set_text_color_mode: {
    .label addr = $44
    // byte* addr = vera_layer_config[layer]
    // [547] vera_layer_set_text_color_mode::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) -- pbuz1=_deref_qbuc1 
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER
    sta.z addr
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER+1
    sta.z addr+1
    // *addr &= ~VERA_LAYER_CONFIG_256C
    // [548] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C -- _deref_pbuz1=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C^$ff
    ldy #0
    and (addr),y
    sta (addr),y
    // *addr |= color_mode
    // [549] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 -- _deref_pbuz1=_deref_pbuz1 
    lda (addr),y
    sta (addr),y
    // vera_layer_set_text_color_mode::@return
    // }
    // [550] return 
    rts
}
  // vera_layer_get_mapbase_bank
// Get the map base bank of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Bank in vera vram.
// vera_layer_get_mapbase_bank(byte register(X) layer)
vera_layer_get_mapbase_bank: {
    // return vera_mapbase_bank[layer];
    // [551] vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_mapbase_bank,x
    // vera_layer_get_mapbase_bank::@return
    // }
    // [552] return 
    rts
}
  // vera_layer_get_mapbase_offset
// Get the map base lower 16-bit address (offset) of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Offset in vera vram of the specified bank.
// vera_layer_get_mapbase_offset(byte register(A) layer)
vera_layer_get_mapbase_offset: {
    .label return = $30
    // return vera_mapbase_offset[layer];
    // [553] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [554] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_mapbase_offset,y
    sta.z return
    lda vera_mapbase_offset+1,y
    sta.z return+1
    // vera_layer_get_mapbase_offset::@return
    // }
    // [555] return 
    rts
}
  // vera_layer_get_rowshift
// Get the bit shift value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Rowshift value to calculate fast from a y value to line offset in tile mode.
// vera_layer_get_rowshift(byte register(X) layer)
vera_layer_get_rowshift: {
    // return vera_layer_rowshift[layer];
    // [556] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_rowshift,x
    // vera_layer_get_rowshift::@return
    // }
    // [557] return 
    rts
}
  // vera_layer_get_rowskip
// Get the value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Skip value to calculate fast from a y value to line offset in tile mode.
// vera_layer_get_rowskip(byte register(A) layer)
vera_layer_get_rowskip: {
    .label return = $30
    // return vera_layer_rowskip[layer];
    // [558] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [559] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_layer_rowskip,y
    sta.z return
    lda vera_layer_rowskip+1,y
    sta.z return+1
    // vera_layer_get_rowskip::@return
    // }
    // [560] return 
    rts
}
  // vera_layer_set_config
// Set the configuration of the layer.
// - layer: Value of 0 or 1.
// - config: Specifies the modes which are specified using T256C / 'Bitmap Mode' / 'Color Depth'.
// vera_layer_set_config(byte register(A) layer, byte register(X) config)
vera_layer_set_config: {
    .label addr = $44
    // byte* addr = vera_layer_config[layer]
    // [562] vera_layer_set_config::$0 = vera_layer_set_config::layer#2 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [563] vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // *addr = config
    // [564] *vera_layer_set_config::addr#0 = vera_layer_set_config::config#2 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    // vera_layer_set_config::@return
    // }
    // [565] return 
    rts
}
  // vera_layer_set_tilebase
// Set the base of the tiles for the layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - tilebase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// vera_layer_set_tilebase(byte register(A) layer, byte register(X) tilebase)
vera_layer_set_tilebase: {
    .label addr = $44
    // byte* addr = vera_layer_tilebase[layer]
    // [567] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#2 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [568] vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_tilebase,y
    sta.z addr
    lda vera_layer_tilebase+1,y
    sta.z addr+1
    // *addr = tilebase
    // [569] *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#2 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    // vera_layer_set_tilebase::@return
    // }
    // [570] return 
    rts
}
  // vera_layer_get_backcolor
// Get the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_get_backcolor(byte register(X) layer)
vera_layer_get_backcolor: {
    // return vera_layer_backcolor[layer];
    // [571] vera_layer_get_backcolor::return#1 = vera_layer_backcolor[vera_layer_get_backcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_backcolor,x
    // vera_layer_get_backcolor::@return
    // }
    // [572] return 
    rts
}
  // vera_layer_get_textcolor
// Get the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_get_textcolor(byte register(X) layer)
vera_layer_get_textcolor: {
    // return vera_layer_textcolor[layer];
    // [573] vera_layer_get_textcolor::return#1 = vera_layer_textcolor[vera_layer_get_textcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_textcolor,x
    // vera_layer_get_textcolor::@return
    // }
    // [574] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($38) c)
cputc: {
    .label __16 = $48
    .label conio_addr = $46
    .label c = $38
    // vera_layer_get_color( conio_screen_layer)
    // [575] vera_layer_get_color::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [576] call vera_layer_get_color 
    // [724] phi from cputc to vera_layer_get_color [phi:cputc->vera_layer_get_color]
    // [724] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#0 [phi:cputc->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // vera_layer_get_color( conio_screen_layer)
    // [577] vera_layer_get_color::return#0 = vera_layer_get_color::return#3
    // cputc::@7
    // char color = vera_layer_get_color( conio_screen_layer)
    // [578] cputc::color#0 = vera_layer_get_color::return#0 -- vbuxx=vbuaa 
    tax
    // CONIO_SCREEN_TEXT + conio_line_text[conio_screen_layer]
    // [579] cputc::$15 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // char* conio_addr = CONIO_SCREEN_TEXT + conio_line_text[conio_screen_layer]
    // [580] cputc::conio_addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[cputc::$15] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z conio_addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z conio_addr+1
    // conio_cursor_x[conio_screen_layer] << 1
    // [581] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 -- vbuaa=pbuc1_derefidx_vbuz1_rol_1 
    ldy.z conio_screen_layer
    lda conio_cursor_x,y
    asl
    // conio_addr += conio_cursor_x[conio_screen_layer] << 1
    // [582] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 -- pbuz1=pbuz1_plus_vbuaa 
    clc
    adc.z conio_addr
    sta.z conio_addr
    bcc !+
    inc.z conio_addr+1
  !:
    // if(c=='\n')
    // [583] if(cputc::c#0==' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1
    // cputc::@2
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [584] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(conio_addr)
    // [585] cputc::$4 = byte0  cputc::conio_addr#1 -- vbuaa=_byte0_pbuz1 
    lda.z conio_addr
    // *VERA_ADDRX_L = BYTE0(conio_addr)
    // [586] *VERA_ADDRX_L = cputc::$4 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(conio_addr)
    // [587] cputc::$5 = byte1  cputc::conio_addr#1 -- vbuaa=_byte1_pbuz1 
    lda.z conio_addr+1
    // *VERA_ADDRX_M = BYTE1(conio_addr)
    // [588] *VERA_ADDRX_M = cputc::$5 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // CONIO_SCREEN_BANK | VERA_INC_1
    // [589] cputc::$6 = CONIO_SCREEN_BANK#15 | VERA_INC_1 -- vbuaa=vbuz1_bor_vbuc1 
    lda #VERA_INC_1
    ora.z CONIO_SCREEN_BANK
    // *VERA_ADDRX_H = CONIO_SCREEN_BANK | VERA_INC_1
    // [590] *VERA_ADDRX_H = cputc::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // *VERA_DATA0 = c
    // [591] *VERA_DATA0 = cputc::c#0 -- _deref_pbuc1=vbuz1 
    lda.z c
    sta VERA_DATA0
    // *VERA_DATA0 = color
    // [592] *VERA_DATA0 = cputc::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // conio_cursor_x[conio_screen_layer]++;
    // [593] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_x,x
    // byte scroll_enable = conio_scroll_enable[conio_screen_layer]
    // [594] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] -- vbuaa=pbuc1_derefidx_vbuz1 
    ldy.z conio_screen_layer
    lda conio_scroll_enable,y
    // if(scroll_enable)
    // [595] if(0!=cputc::scroll_enable#0) goto cputc::@5 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b5
    // cputc::@3
    // (unsigned int)conio_cursor_x[conio_screen_layer] == conio_width
    // [596] cputc::$16 = (word)conio_cursor_x[conio_screen_layer] -- vwuz1=_word_pbuc1_derefidx_vbuz2 
    lda conio_cursor_x,y
    sta.z __16
    lda #0
    sta.z __16+1
    // if((unsigned int)conio_cursor_x[conio_screen_layer] == conio_width)
    // [597] if(cputc::$16!=conio_width) goto cputc::@return -- vwuz1_neq_vwuz2_then_la1 
    cmp.z conio_width+1
    bne __breturn
    lda.z __16
    cmp.z conio_width
    bne __breturn
    // [598] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
    // cputc::@4
    // cputln()
    // [599] call cputln 
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [600] return 
    rts
    // cputc::@5
  __b5:
    // if(conio_cursor_x[conio_screen_layer] == CONIO_WIDTH)
    // [601] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return -- pbuc1_derefidx_vbuz1_neq_vbuz2_then_la1 
    lda.z conio_screen_width
    ldy.z conio_screen_layer
    cmp conio_cursor_x,y
    bne __breturn
    // [602] phi from cputc::@5 to cputc::@6 [phi:cputc::@5->cputc::@6]
    // cputc::@6
    // cputln()
    // [603] call cputln 
    jsr cputln
    rts
    // [604] phi from cputc::@7 to cputc::@1 [phi:cputc::@7->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [605] call cputln 
    jsr cputln
    rts
}
  // vera_display_get_hscale
vera_display_get_hscale: {
    .const scale = 0
    // [607] phi from vera_display_get_hscale to vera_display_get_hscale::@1 [phi:vera_display_get_hscale->vera_display_get_hscale::@1]
    // [607] phi vera_display_get_hscale::s#2 = 1 [phi:vera_display_get_hscale->vera_display_get_hscale::@1#0] -- vbuxx=vbuc1 
    ldx #1
    // [607] phi from vera_display_get_hscale::@2 to vera_display_get_hscale::@1 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@1]
    // [607] phi vera_display_get_hscale::s#2 = vera_display_get_hscale::s#1 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@1#0] -- register_copy 
    // vera_display_get_hscale::@1
  __b1:
    // if(*VERA_DC_HSCALE==hscale[s])
    // [608] if(*VERA_DC_HSCALE!=vera_display_get_hscale::hscale[vera_display_get_hscale::s#2]) goto vera_display_get_hscale::@2 -- _deref_pbuc1_neq_pbuc2_derefidx_vbuxx_then_la1 
    lda hscale,x
    cmp VERA_DC_HSCALE
    bne __b2
    // [611] phi from vera_display_get_hscale::@1 to vera_display_get_hscale::@3 [phi:vera_display_get_hscale::@1->vera_display_get_hscale::@3]
    // [611] phi vera_display_get_hscale::return#0 = vera_display_get_hscale::s#2 [phi:vera_display_get_hscale::@1->vera_display_get_hscale::@3#0] -- register_copy 
    rts
    // vera_display_get_hscale::@2
  __b2:
    // for(byte s:1..3)
    // [609] vera_display_get_hscale::s#1 = ++ vera_display_get_hscale::s#2 -- vbuxx=_inc_vbuxx 
    inx
    // [610] if(vera_display_get_hscale::s#1!=4) goto vera_display_get_hscale::@1 -- vbuxx_neq_vbuc1_then_la1 
    cpx #4
    bne __b1
    // [611] phi from vera_display_get_hscale::@2 to vera_display_get_hscale::@3 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@3]
    // [611] phi vera_display_get_hscale::return#0 = vera_display_get_hscale::scale#0 [phi:vera_display_get_hscale::@2->vera_display_get_hscale::@3#0] -- vbuxx=vbuc1 
    ldx #scale
    // vera_display_get_hscale::@3
    // vera_display_get_hscale::@return
    // }
    // [612] return 
    rts
  .segment Data
    hscale: .byte 0, $80, $40, $20
}
.segment Code
  // vera_display_get_vscale
vera_display_get_vscale: {
    .const scale = 0
    // [614] phi from vera_display_get_vscale to vera_display_get_vscale::@1 [phi:vera_display_get_vscale->vera_display_get_vscale::@1]
    // [614] phi vera_display_get_vscale::s#2 = 1 [phi:vera_display_get_vscale->vera_display_get_vscale::@1#0] -- vbuxx=vbuc1 
    ldx #1
    // [614] phi from vera_display_get_vscale::@2 to vera_display_get_vscale::@1 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@1]
    // [614] phi vera_display_get_vscale::s#2 = vera_display_get_vscale::s#1 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@1#0] -- register_copy 
    // vera_display_get_vscale::@1
  __b1:
    // if(*VERA_DC_VSCALE==vscale[s])
    // [615] if(*VERA_DC_VSCALE!=vera_display_get_vscale::vscale[vera_display_get_vscale::s#2]) goto vera_display_get_vscale::@2 -- _deref_pbuc1_neq_pbuc2_derefidx_vbuxx_then_la1 
    lda vscale,x
    cmp VERA_DC_VSCALE
    bne __b2
    // [618] phi from vera_display_get_vscale::@1 to vera_display_get_vscale::@3 [phi:vera_display_get_vscale::@1->vera_display_get_vscale::@3]
    // [618] phi vera_display_get_vscale::return#0 = vera_display_get_vscale::s#2 [phi:vera_display_get_vscale::@1->vera_display_get_vscale::@3#0] -- register_copy 
    rts
    // vera_display_get_vscale::@2
  __b2:
    // for(byte s:1..3)
    // [616] vera_display_get_vscale::s#1 = ++ vera_display_get_vscale::s#2 -- vbuxx=_inc_vbuxx 
    inx
    // [617] if(vera_display_get_vscale::s#1!=4) goto vera_display_get_vscale::@1 -- vbuxx_neq_vbuc1_then_la1 
    cpx #4
    bne __b1
    // [618] phi from vera_display_get_vscale::@2 to vera_display_get_vscale::@3 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@3]
    // [618] phi vera_display_get_vscale::return#0 = vera_display_get_vscale::scale#0 [phi:vera_display_get_vscale::@2->vera_display_get_vscale::@3#0] -- vbuxx=vbuc1 
    ldx #scale
    // vera_display_get_vscale::@3
    // vera_display_get_vscale::@return
    // }
    // [619] return 
    rts
  .segment Data
    vscale: .byte 0, $80, $40, $20
}
.segment Code
  // mul16u
// Perform binary multiplication of two unsigned 16-bit unsigned ints into a 32-bit unsigned long
// mul16u(word zp($15) a, word zp($39) b)
mul16u: {
    .label a = $15
    .label b = $39
    .label return = $5a
    .label mb = $60
    .label res = $5a
    // unsigned long mb = b
    // [620] mul16u::mb#0 = (dword)mul16u::b#0 -- vduz1=_dword_vwuz2 
    lda.z b
    sta.z mb
    lda.z b+1
    sta.z mb+1
    lda #0
    sta.z mb+2
    sta.z mb+3
    // [621] phi from mul16u to mul16u::@1 [phi:mul16u->mul16u::@1]
    // [621] phi mul16u::mb#2 = mul16u::mb#0 [phi:mul16u->mul16u::@1#0] -- register_copy 
    // [621] phi mul16u::res#2 = 0 [phi:mul16u->mul16u::@1#1] -- vduz1=vduc1 
    sta.z res
    sta.z res+1
    lda #<0>>$10
    sta.z res+2
    lda #>0>>$10
    sta.z res+3
    // [621] phi mul16u::a#2 = mul16u::a#0 [phi:mul16u->mul16u::@1#2] -- register_copy 
    // mul16u::@1
  __b1:
    // while(a!=0)
    // [622] if(mul16u::a#2!=0) goto mul16u::@2 -- vwuz1_neq_0_then_la1 
    lda.z a
    ora.z a+1
    bne __b2
    // mul16u::@return
    // }
    // [623] return 
    rts
    // mul16u::@2
  __b2:
    // a&1
    // [624] mul16u::$1 = mul16u::a#2 & 1 -- vbuaa=vwuz1_band_vbuc1 
    lda #1
    and.z a
    // if( (a&1) != 0)
    // [625] if(mul16u::$1==0) goto mul16u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3
    // mul16u::@4
    // res = res + mb
    // [626] mul16u::res#1 = mul16u::res#2 + mul16u::mb#2 -- vduz1=vduz1_plus_vduz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    lda.z res+2
    adc.z mb+2
    sta.z res+2
    lda.z res+3
    adc.z mb+3
    sta.z res+3
    // [627] phi from mul16u::@2 mul16u::@4 to mul16u::@3 [phi:mul16u::@2/mul16u::@4->mul16u::@3]
    // [627] phi mul16u::res#6 = mul16u::res#2 [phi:mul16u::@2/mul16u::@4->mul16u::@3#0] -- register_copy 
    // mul16u::@3
  __b3:
    // a = a>>1
    // [628] mul16u::a#1 = mul16u::a#2 >> 1 -- vwuz1=vwuz1_ror_1 
    lsr.z a+1
    ror.z a
    // mb = mb<<1
    // [629] mul16u::mb#1 = mul16u::mb#2 << 1 -- vduz1=vduz1_rol_1 
    asl.z mb
    rol.z mb+1
    rol.z mb+2
    rol.z mb+3
    // [621] phi from mul16u::@3 to mul16u::@1 [phi:mul16u::@3->mul16u::@1]
    // [621] phi mul16u::mb#2 = mul16u::mb#1 [phi:mul16u::@3->mul16u::@1#0] -- register_copy 
    // [621] phi mul16u::res#2 = mul16u::res#6 [phi:mul16u::@3->mul16u::@1#1] -- register_copy 
    // [621] phi mul16u::a#2 = mul16u::a#1 [phi:mul16u::@3->mul16u::@1#2] -- register_copy 
    jmp __b1
}
  // memset_vram
// Set block of memory to a value in VRAM.
// Sets num bytes to a value to the memory block pointed to by destination in VRAM.
// - vbank: Which 64K VRAM bank to put data into (0/1)
// - vdest: The destination address in VRAM
// - data: The value to set the vram with.
// - num: The number of bytes to set
// memset_vram(byte register(X) vbank, void* zp($3b) vdest, dword zp($5a) num)
memset_vram: {
    .const data = 0
    .label i = $60
    .label vdest = $3b
    .label num = $5a
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [630] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(vdest)
    // [631] memset_vram::$0 = byte0  memset_vram::vdest#0 -- vbuaa=_byte0_pvoz1 
    lda.z vdest
    // *VERA_ADDRX_L = BYTE0(vdest)
    // [632] *VERA_ADDRX_L = memset_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(vdest)
    // [633] memset_vram::$1 = byte1  memset_vram::vdest#0 -- vbuaa=_byte1_pvoz1 
    lda.z vdest+1
    // *VERA_ADDRX_M = BYTE1(vdest)
    // [634] *VERA_ADDRX_M = memset_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // VERA_INC_1 | vbank
    // [635] memset_vram::$2 = VERA_INC_1 | memset_vram::vbank#0 -- vbuaa=vbuc1_bor_vbuxx 
    txa
    ora #VERA_INC_1
    // *VERA_ADDRX_H = VERA_INC_1 | vbank
    // [636] *VERA_ADDRX_H = memset_vram::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [637] phi from memset_vram to memset_vram::@1 [phi:memset_vram->memset_vram::@1]
    // [637] phi memset_vram::i#2 = 0 [phi:memset_vram->memset_vram::@1#0] -- vduz1=vduc1 
    lda #<0
    sta.z i
    sta.z i+1
    lda #<0>>$10
    sta.z i+2
    lda #>0>>$10
    sta.z i+3
  // Transfer the data
    // memset_vram::@1
  __b1:
    // for(unsigned long i = 0; i<num; i++)
    // [638] if(memset_vram::i#2<memset_vram::num#0) goto memset_vram::@2 -- vduz1_lt_vduz2_then_la1 
    lda.z i+3
    cmp.z num+3
    bcc __b2
    bne !+
    lda.z i+2
    cmp.z num+2
    bcc __b2
    bne !+
    lda.z i+1
    cmp.z num+1
    bcc __b2
    bne !+
    lda.z i
    cmp.z num
    bcc __b2
  !:
    // memset_vram::@return
    // }
    // [639] return 
    rts
    // memset_vram::@2
  __b2:
    // *VERA_DATA0 = data
    // [640] *VERA_DATA0 = memset_vram::data#0 -- _deref_pbuc1=vbuc2 
    lda #data
    sta VERA_DATA0
    // for(unsigned long i = 0; i<num; i++)
    // [641] memset_vram::i#1 = ++ memset_vram::i#2 -- vduz1=_inc_vduz1 
    inc.z i
    bne !+
    inc.z i+1
    bne !+
    inc.z i+2
    bne !+
    inc.z i+3
  !:
    // [637] phi from memset_vram::@2 to memset_vram::@1 [phi:memset_vram::@2->memset_vram::@1]
    // [637] phi memset_vram::i#2 = memset_vram::i#1 [phi:memset_vram::@2->memset_vram::@1#0] -- register_copy 
    jmp __b1
}
  // bitmap_line_ydxi
// bitmap_line_ydxi(word zp($40) y, word zp($39) x, word zp($3b) y1, word zp($3e) yd, word zp($17) xd, byte zp($38) c)
bitmap_line_ydxi: {
    .label __6 = $4a
    .label y = $40
    .label x = $39
    .label y1 = $3b
    .label yd = $3e
    .label xd = $17
    .label c = $38
    .label e = $46
    // word e = xd>>1
    // [643] bitmap_line_ydxi::e#0 = bitmap_line_ydxi::xd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z xd+1
    lsr
    sta.z e+1
    lda.z xd
    ror
    sta.z e
    // [644] phi from bitmap_line_ydxi bitmap_line_ydxi::@2 to bitmap_line_ydxi::@1 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1]
    // [644] phi bitmap_line_ydxi::e#3 = bitmap_line_ydxi::e#0 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1#0] -- register_copy 
    // [644] phi bitmap_line_ydxi::y#3 = bitmap_line_ydxi::y#6 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1#1] -- register_copy 
    // [644] phi bitmap_line_ydxi::x#3 = bitmap_line_ydxi::x#5 [phi:bitmap_line_ydxi/bitmap_line_ydxi::@2->bitmap_line_ydxi::@1#2] -- register_copy 
    // bitmap_line_ydxi::@1
  __b1:
    // bitmap_plot(x,y,c)
    // [645] bitmap_plot::x#2 = bitmap_line_ydxi::x#3 -- vwuz1=vwuz2 
    lda.z x
    sta.z bitmap_plot.x
    lda.z x+1
    sta.z bitmap_plot.x+1
    // [646] bitmap_plot::y#2 = bitmap_line_ydxi::y#3
    // [647] bitmap_plot::c#3 = bitmap_line_ydxi::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [648] call bitmap_plot 
    // [743] phi from bitmap_line_ydxi::@1 to bitmap_plot [phi:bitmap_line_ydxi::@1->bitmap_plot]
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#3 [phi:bitmap_line_ydxi::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#2 [phi:bitmap_line_ydxi::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#2 [phi:bitmap_line_ydxi::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    // bitmap_line_ydxi::@4
    // y++;
    // [649] bitmap_line_ydxi::y#2 = ++ bitmap_line_ydxi::y#3 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // e = e+xd
    // [650] bitmap_line_ydxi::e#1 = bitmap_line_ydxi::e#3 + bitmap_line_ydxi::xd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z xd
    sta.z e
    lda.z e+1
    adc.z xd+1
    sta.z e+1
    // if(yd<e)
    // [651] if(bitmap_line_ydxi::yd#5>=bitmap_line_ydxi::e#1) goto bitmap_line_ydxi::@2 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z yd+1
    bne !+
    lda.z e
    cmp.z yd
    beq __b2
  !:
    bcc __b2
    // bitmap_line_ydxi::@3
    // x++;
    // [652] bitmap_line_ydxi::x#2 = ++ bitmap_line_ydxi::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // e = e - yd
    // [653] bitmap_line_ydxi::e#2 = bitmap_line_ydxi::e#1 - bitmap_line_ydxi::yd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z yd
    sta.z e
    lda.z e+1
    sbc.z yd+1
    sta.z e+1
    // [654] phi from bitmap_line_ydxi::@3 bitmap_line_ydxi::@4 to bitmap_line_ydxi::@2 [phi:bitmap_line_ydxi::@3/bitmap_line_ydxi::@4->bitmap_line_ydxi::@2]
    // [654] phi bitmap_line_ydxi::e#6 = bitmap_line_ydxi::e#2 [phi:bitmap_line_ydxi::@3/bitmap_line_ydxi::@4->bitmap_line_ydxi::@2#0] -- register_copy 
    // [654] phi bitmap_line_ydxi::x#6 = bitmap_line_ydxi::x#2 [phi:bitmap_line_ydxi::@3/bitmap_line_ydxi::@4->bitmap_line_ydxi::@2#1] -- register_copy 
    // bitmap_line_ydxi::@2
  __b2:
    // y1+1
    // [655] bitmap_line_ydxi::$6 = bitmap_line_ydxi::y1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z y1
    adc #1
    sta.z __6
    lda.z y1+1
    adc #0
    sta.z __6+1
    // while (y!=(y1+1))
    // [656] if(bitmap_line_ydxi::y#2!=bitmap_line_ydxi::$6) goto bitmap_line_ydxi::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z y+1
    cmp.z __6+1
    bne __b1
    lda.z y
    cmp.z __6
    bne __b1
    // bitmap_line_ydxi::@return
    // }
    // [657] return 
    rts
}
  // bitmap_line_xdyi
// bitmap_line_xdyi(word zp($42) x, word zp($3b) y, word zp($39) x1, word zp($17) xd, word zp($3e) yd, byte zp($38) c)
bitmap_line_xdyi: {
    .label __6 = $4c
    .label x = $42
    .label y = $3b
    .label x1 = $39
    .label xd = $17
    .label yd = $3e
    .label c = $38
    .label e = $46
    // word e = yd>>1
    // [659] bitmap_line_xdyi::e#0 = bitmap_line_xdyi::yd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z yd+1
    lsr
    sta.z e+1
    lda.z yd
    ror
    sta.z e
    // [660] phi from bitmap_line_xdyi bitmap_line_xdyi::@2 to bitmap_line_xdyi::@1 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1]
    // [660] phi bitmap_line_xdyi::e#3 = bitmap_line_xdyi::e#0 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1#0] -- register_copy 
    // [660] phi bitmap_line_xdyi::y#3 = bitmap_line_xdyi::y#5 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1#1] -- register_copy 
    // [660] phi bitmap_line_xdyi::x#3 = bitmap_line_xdyi::x#6 [phi:bitmap_line_xdyi/bitmap_line_xdyi::@2->bitmap_line_xdyi::@1#2] -- register_copy 
    // bitmap_line_xdyi::@1
  __b1:
    // bitmap_plot(x,y,c)
    // [661] bitmap_plot::x#0 = bitmap_line_xdyi::x#3
    // [662] bitmap_plot::y#0 = bitmap_line_xdyi::y#3 -- vwuz1=vwuz2 
    lda.z y
    sta.z bitmap_plot.y
    lda.z y+1
    sta.z bitmap_plot.y+1
    // [663] bitmap_plot::c#1 = bitmap_line_xdyi::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [664] call bitmap_plot 
    // [743] phi from bitmap_line_xdyi::@1 to bitmap_plot [phi:bitmap_line_xdyi::@1->bitmap_plot]
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#1 [phi:bitmap_line_xdyi::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#0 [phi:bitmap_line_xdyi::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#0 [phi:bitmap_line_xdyi::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    // bitmap_line_xdyi::@4
    // x++;
    // [665] bitmap_line_xdyi::x#2 = ++ bitmap_line_xdyi::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // e = e+yd
    // [666] bitmap_line_xdyi::e#1 = bitmap_line_xdyi::e#3 + bitmap_line_xdyi::yd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z yd
    sta.z e
    lda.z e+1
    adc.z yd+1
    sta.z e+1
    // if(xd<e)
    // [667] if(bitmap_line_xdyi::xd#5>=bitmap_line_xdyi::e#1) goto bitmap_line_xdyi::@2 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z xd+1
    bne !+
    lda.z e
    cmp.z xd
    beq __b2
  !:
    bcc __b2
    // bitmap_line_xdyi::@3
    // y++;
    // [668] bitmap_line_xdyi::y#2 = ++ bitmap_line_xdyi::y#3 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // e = e - xd
    // [669] bitmap_line_xdyi::e#2 = bitmap_line_xdyi::e#1 - bitmap_line_xdyi::xd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z xd
    sta.z e
    lda.z e+1
    sbc.z xd+1
    sta.z e+1
    // [670] phi from bitmap_line_xdyi::@3 bitmap_line_xdyi::@4 to bitmap_line_xdyi::@2 [phi:bitmap_line_xdyi::@3/bitmap_line_xdyi::@4->bitmap_line_xdyi::@2]
    // [670] phi bitmap_line_xdyi::e#6 = bitmap_line_xdyi::e#2 [phi:bitmap_line_xdyi::@3/bitmap_line_xdyi::@4->bitmap_line_xdyi::@2#0] -- register_copy 
    // [670] phi bitmap_line_xdyi::y#6 = bitmap_line_xdyi::y#2 [phi:bitmap_line_xdyi::@3/bitmap_line_xdyi::@4->bitmap_line_xdyi::@2#1] -- register_copy 
    // bitmap_line_xdyi::@2
  __b2:
    // x1+1
    // [671] bitmap_line_xdyi::$6 = bitmap_line_xdyi::x1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z x1
    adc #1
    sta.z __6
    lda.z x1+1
    adc #0
    sta.z __6+1
    // while (x!=(x1+1))
    // [672] if(bitmap_line_xdyi::x#2!=bitmap_line_xdyi::$6) goto bitmap_line_xdyi::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z x+1
    cmp.z __6+1
    bne __b1
    lda.z x
    cmp.z __6
    bne __b1
    // bitmap_line_xdyi::@return
    // }
    // [673] return 
    rts
}
  // bitmap_line_ydxd
// bitmap_line_ydxd(word zp($40) y, word zp($39) x, word zp($3b) y1, word zp($6a) yd, word zp($17) xd, byte zp($38) c)
bitmap_line_ydxd: {
    .label __6 = $4e
    .label y = $40
    .label x = $39
    .label y1 = $3b
    .label yd = $6a
    .label xd = $17
    .label c = $38
    .label e = $46
    // word e = xd>>1
    // [675] bitmap_line_ydxd::e#0 = bitmap_line_ydxd::xd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z xd+1
    lsr
    sta.z e+1
    lda.z xd
    ror
    sta.z e
    // [676] phi from bitmap_line_ydxd bitmap_line_ydxd::@2 to bitmap_line_ydxd::@1 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1]
    // [676] phi bitmap_line_ydxd::e#3 = bitmap_line_ydxd::e#0 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1#0] -- register_copy 
    // [676] phi bitmap_line_ydxd::y#2 = bitmap_line_ydxd::y#7 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1#1] -- register_copy 
    // [676] phi bitmap_line_ydxd::x#3 = bitmap_line_ydxd::x#5 [phi:bitmap_line_ydxd/bitmap_line_ydxd::@2->bitmap_line_ydxd::@1#2] -- register_copy 
    // bitmap_line_ydxd::@1
  __b1:
    // bitmap_plot(x,y,c)
    // [677] bitmap_plot::x#3 = bitmap_line_ydxd::x#3 -- vwuz1=vwuz2 
    lda.z x
    sta.z bitmap_plot.x
    lda.z x+1
    sta.z bitmap_plot.x+1
    // [678] bitmap_plot::y#3 = bitmap_line_ydxd::y#2
    // [679] bitmap_plot::c#4 = bitmap_line_ydxd::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [680] call bitmap_plot 
    // [743] phi from bitmap_line_ydxd::@1 to bitmap_plot [phi:bitmap_line_ydxd::@1->bitmap_plot]
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#4 [phi:bitmap_line_ydxd::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#3 [phi:bitmap_line_ydxd::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#3 [phi:bitmap_line_ydxd::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    // bitmap_line_ydxd::@4
    // y = y++;
    // [681] bitmap_line_ydxd::y#3 = ++ bitmap_line_ydxd::y#2 -- vwuz1=_inc_vwuz1 
    inc.z y
    bne !+
    inc.z y+1
  !:
    // e = e+xd
    // [682] bitmap_line_ydxd::e#1 = bitmap_line_ydxd::e#3 + bitmap_line_ydxd::xd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z xd
    sta.z e
    lda.z e+1
    adc.z xd+1
    sta.z e+1
    // if(yd<e)
    // [683] if(bitmap_line_ydxd::yd#5>=bitmap_line_ydxd::e#1) goto bitmap_line_ydxd::@2 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z yd+1
    bne !+
    lda.z e
    cmp.z yd
    beq __b2
  !:
    bcc __b2
    // bitmap_line_ydxd::@3
    // x--;
    // [684] bitmap_line_ydxd::x#2 = -- bitmap_line_ydxd::x#3 -- vwuz1=_dec_vwuz1 
    lda.z x
    bne !+
    dec.z x+1
  !:
    dec.z x
    // e = e - yd
    // [685] bitmap_line_ydxd::e#2 = bitmap_line_ydxd::e#1 - bitmap_line_ydxd::yd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z yd
    sta.z e
    lda.z e+1
    sbc.z yd+1
    sta.z e+1
    // [686] phi from bitmap_line_ydxd::@3 bitmap_line_ydxd::@4 to bitmap_line_ydxd::@2 [phi:bitmap_line_ydxd::@3/bitmap_line_ydxd::@4->bitmap_line_ydxd::@2]
    // [686] phi bitmap_line_ydxd::e#6 = bitmap_line_ydxd::e#2 [phi:bitmap_line_ydxd::@3/bitmap_line_ydxd::@4->bitmap_line_ydxd::@2#0] -- register_copy 
    // [686] phi bitmap_line_ydxd::x#6 = bitmap_line_ydxd::x#2 [phi:bitmap_line_ydxd::@3/bitmap_line_ydxd::@4->bitmap_line_ydxd::@2#1] -- register_copy 
    // bitmap_line_ydxd::@2
  __b2:
    // y1+1
    // [687] bitmap_line_ydxd::$6 = bitmap_line_ydxd::y1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z y1
    adc #1
    sta.z __6
    lda.z y1+1
    adc #0
    sta.z __6+1
    // while (y!=(y1+1))
    // [688] if(bitmap_line_ydxd::y#3!=bitmap_line_ydxd::$6) goto bitmap_line_ydxd::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z y+1
    cmp.z __6+1
    bne __b1
    lda.z y
    cmp.z __6
    bne __b1
    // bitmap_line_ydxd::@return
    // }
    // [689] return 
    rts
}
  // bitmap_line_xdyd
// bitmap_line_xdyd(word zp($42) x, word zp($3b) y, word zp($39) x1, word zp($17) xd, word zp($6a) yd, byte zp($38) c)
bitmap_line_xdyd: {
    .label __6 = $50
    .label x = $42
    .label y = $3b
    .label x1 = $39
    .label xd = $17
    .label yd = $6a
    .label c = $38
    .label e = $46
    // word e = yd>>1
    // [691] bitmap_line_xdyd::e#0 = bitmap_line_xdyd::yd#2 >> 1 -- vwuz1=vwuz2_ror_1 
    lda.z yd+1
    lsr
    sta.z e+1
    lda.z yd
    ror
    sta.z e
    // [692] phi from bitmap_line_xdyd bitmap_line_xdyd::@2 to bitmap_line_xdyd::@1 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1]
    // [692] phi bitmap_line_xdyd::e#3 = bitmap_line_xdyd::e#0 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1#0] -- register_copy 
    // [692] phi bitmap_line_xdyd::y#3 = bitmap_line_xdyd::y#5 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1#1] -- register_copy 
    // [692] phi bitmap_line_xdyd::x#3 = bitmap_line_xdyd::x#6 [phi:bitmap_line_xdyd/bitmap_line_xdyd::@2->bitmap_line_xdyd::@1#2] -- register_copy 
    // bitmap_line_xdyd::@1
  __b1:
    // bitmap_plot(x,y,c)
    // [693] bitmap_plot::x#1 = bitmap_line_xdyd::x#3
    // [694] bitmap_plot::y#1 = bitmap_line_xdyd::y#3 -- vwuz1=vwuz2 
    lda.z y
    sta.z bitmap_plot.y
    lda.z y+1
    sta.z bitmap_plot.y+1
    // [695] bitmap_plot::c#2 = bitmap_line_xdyd::c#3 -- vbuxx=vbuz1 
    ldx.z c
    // [696] call bitmap_plot 
    // [743] phi from bitmap_line_xdyd::@1 to bitmap_plot [phi:bitmap_line_xdyd::@1->bitmap_plot]
    // [743] phi bitmap_plot::c#5 = bitmap_plot::c#2 [phi:bitmap_line_xdyd::@1->bitmap_plot#0] -- register_copy 
    // [743] phi bitmap_plot::y#4 = bitmap_plot::y#1 [phi:bitmap_line_xdyd::@1->bitmap_plot#1] -- register_copy 
    // [743] phi bitmap_plot::x#4 = bitmap_plot::x#1 [phi:bitmap_line_xdyd::@1->bitmap_plot#2] -- register_copy 
    jsr bitmap_plot
    // bitmap_line_xdyd::@4
    // x++;
    // [697] bitmap_line_xdyd::x#2 = ++ bitmap_line_xdyd::x#3 -- vwuz1=_inc_vwuz1 
    inc.z x
    bne !+
    inc.z x+1
  !:
    // e = e+yd
    // [698] bitmap_line_xdyd::e#1 = bitmap_line_xdyd::e#3 + bitmap_line_xdyd::yd#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z e
    clc
    adc.z yd
    sta.z e
    lda.z e+1
    adc.z yd+1
    sta.z e+1
    // if(xd<e)
    // [699] if(bitmap_line_xdyd::xd#5>=bitmap_line_xdyd::e#1) goto bitmap_line_xdyd::@2 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z xd+1
    bne !+
    lda.z e
    cmp.z xd
    beq __b2
  !:
    bcc __b2
    // bitmap_line_xdyd::@3
    // y--;
    // [700] bitmap_line_xdyd::y#2 = -- bitmap_line_xdyd::y#3 -- vwuz1=_dec_vwuz1 
    lda.z y
    bne !+
    dec.z y+1
  !:
    dec.z y
    // e = e - xd
    // [701] bitmap_line_xdyd::e#2 = bitmap_line_xdyd::e#1 - bitmap_line_xdyd::xd#5 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z e
    sec
    sbc.z xd
    sta.z e
    lda.z e+1
    sbc.z xd+1
    sta.z e+1
    // [702] phi from bitmap_line_xdyd::@3 bitmap_line_xdyd::@4 to bitmap_line_xdyd::@2 [phi:bitmap_line_xdyd::@3/bitmap_line_xdyd::@4->bitmap_line_xdyd::@2]
    // [702] phi bitmap_line_xdyd::e#6 = bitmap_line_xdyd::e#2 [phi:bitmap_line_xdyd::@3/bitmap_line_xdyd::@4->bitmap_line_xdyd::@2#0] -- register_copy 
    // [702] phi bitmap_line_xdyd::y#6 = bitmap_line_xdyd::y#2 [phi:bitmap_line_xdyd::@3/bitmap_line_xdyd::@4->bitmap_line_xdyd::@2#1] -- register_copy 
    // bitmap_line_xdyd::@2
  __b2:
    // x1+1
    // [703] bitmap_line_xdyd::$6 = bitmap_line_xdyd::x1#6 + 1 -- vwuz1=vwuz2_plus_1 
    clc
    lda.z x1
    adc #1
    sta.z __6
    lda.z x1+1
    adc #0
    sta.z __6+1
    // while (x!=(x1+1))
    // [704] if(bitmap_line_xdyd::x#2!=bitmap_line_xdyd::$6) goto bitmap_line_xdyd::@1 -- vwuz1_neq_vwuz2_then_la1 
    lda.z x+1
    cmp.z __6+1
    bne __b1
    lda.z x
    cmp.z __6
    bne __b1
    // bitmap_line_xdyd::@return
    // }
    // [705] return 
    rts
}
  // divr16u
// Performs division on two 16 bit unsigned ints and an initial remainder
// Returns the quotient dividend/divisor.
// The final remainder will be set into the global variable rem16u
// Implemented using simple binary division
// divr16u(word zp($13) dividend, word zp($17) divisor, word zp($3e) rem)
divr16u: {
    .label rem = $3e
    .label dividend = $13
    .label quotient = $40
    .label return = $40
    .label divisor = $17
    // [707] phi from divr16u to divr16u::@1 [phi:divr16u->divr16u::@1]
    // [707] phi divr16u::i#2 = 0 [phi:divr16u->divr16u::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [707] phi divr16u::quotient#3 = 0 [phi:divr16u->divr16u::@1#1] -- vwuz1=vwuc1 
    txa
    sta.z quotient
    sta.z quotient+1
    // [707] phi divr16u::dividend#2 = divr16u::dividend#1 [phi:divr16u->divr16u::@1#2] -- register_copy 
    // [707] phi divr16u::rem#4 = 0 [phi:divr16u->divr16u::@1#3] -- vwuz1=vbuc1 
    sta.z rem
    sta.z rem+1
    // [707] phi from divr16u::@3 to divr16u::@1 [phi:divr16u::@3->divr16u::@1]
    // [707] phi divr16u::i#2 = divr16u::i#1 [phi:divr16u::@3->divr16u::@1#0] -- register_copy 
    // [707] phi divr16u::quotient#3 = divr16u::return#0 [phi:divr16u::@3->divr16u::@1#1] -- register_copy 
    // [707] phi divr16u::dividend#2 = divr16u::dividend#0 [phi:divr16u::@3->divr16u::@1#2] -- register_copy 
    // [707] phi divr16u::rem#4 = divr16u::rem#10 [phi:divr16u::@3->divr16u::@1#3] -- register_copy 
    // divr16u::@1
  __b1:
    // rem = rem << 1
    // [708] divr16u::rem#0 = divr16u::rem#4 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z rem
    rol.z rem+1
    // BYTE1(dividend)
    // [709] divr16u::$1 = byte1  divr16u::dividend#2 -- vbuaa=_byte1_vwuz1 
    lda.z dividend+1
    // BYTE1(dividend) & $80
    // [710] divr16u::$2 = divr16u::$1 & $80 -- vbuaa=vbuaa_band_vbuc1 
    and #$80
    // if( (BYTE1(dividend) & $80) != 0 )
    // [711] if(divr16u::$2==0) goto divr16u::@2 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b2
    // divr16u::@4
    // rem = rem | 1
    // [712] divr16u::rem#1 = divr16u::rem#0 | 1 -- vwuz1=vwuz1_bor_vbuc1 
    lda #1
    ora.z rem
    sta.z rem
    // [713] phi from divr16u::@1 divr16u::@4 to divr16u::@2 [phi:divr16u::@1/divr16u::@4->divr16u::@2]
    // [713] phi divr16u::rem#5 = divr16u::rem#0 [phi:divr16u::@1/divr16u::@4->divr16u::@2#0] -- register_copy 
    // divr16u::@2
  __b2:
    // dividend = dividend << 1
    // [714] divr16u::dividend#0 = divr16u::dividend#2 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z dividend
    rol.z dividend+1
    // quotient = quotient << 1
    // [715] divr16u::quotient#1 = divr16u::quotient#3 << 1 -- vwuz1=vwuz1_rol_1 
    asl.z quotient
    rol.z quotient+1
    // if(rem>=divisor)
    // [716] if(divr16u::rem#5<divr16u::divisor#0) goto divr16u::@3 -- vwuz1_lt_vwuz2_then_la1 
    lda.z rem+1
    cmp.z divisor+1
    bcc __b3
    bne !+
    lda.z rem
    cmp.z divisor
    bcc __b3
  !:
    // divr16u::@5
    // quotient++;
    // [717] divr16u::quotient#2 = ++ divr16u::quotient#1 -- vwuz1=_inc_vwuz1 
    inc.z quotient
    bne !+
    inc.z quotient+1
  !:
    // rem = rem - divisor
    // [718] divr16u::rem#2 = divr16u::rem#5 - divr16u::divisor#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z rem
    sec
    sbc.z divisor
    sta.z rem
    lda.z rem+1
    sbc.z divisor+1
    sta.z rem+1
    // [719] phi from divr16u::@2 divr16u::@5 to divr16u::@3 [phi:divr16u::@2/divr16u::@5->divr16u::@3]
    // [719] phi divr16u::return#0 = divr16u::quotient#1 [phi:divr16u::@2/divr16u::@5->divr16u::@3#0] -- register_copy 
    // [719] phi divr16u::rem#10 = divr16u::rem#5 [phi:divr16u::@2/divr16u::@5->divr16u::@3#1] -- register_copy 
    // divr16u::@3
  __b3:
    // for( char i : 0..15)
    // [720] divr16u::i#1 = ++ divr16u::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [721] if(divr16u::i#1!=$10) goto divr16u::@1 -- vbuxx_neq_vbuc1_then_la1 
    cpx #$10
    bne __b1
    // divr16u::@6
    // rem16u = rem
    // [722] rem16u#0 = divr16u::rem#10 -- vwuz1=vwuz2 
    lda.z rem
    sta.z rem16u
    lda.z rem+1
    sta.z rem16u+1
    // divr16u::@return
    // }
    // [723] return 
    rts
}
  // vera_layer_get_color
// Get the text and back color for text output in 16 color mode.
// - layer: Value of 0 or 1.
// - return: an 8 bit value with bit 7:4 containing the back color and bit 3:0 containing the front color.
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// vera_layer_get_color(byte register(X) layer)
vera_layer_get_color: {
    .label addr = $54
    // byte* addr = vera_layer_config[layer]
    // [725] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 -- vbuaa=vbuxx_rol_1 
    txa
    asl
    // [726] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // *addr & VERA_LAYER_CONFIG_256C
    // [727] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C
    ldy #0
    and (addr),y
    // if( *addr & VERA_LAYER_CONFIG_256C )
    // [728] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b1
    // vera_layer_get_color::@2
    // vera_layer_backcolor[layer] << 4
    // [729] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 -- vbuaa=pbuc1_derefidx_vbuxx_rol_4 
    lda vera_layer_backcolor,x
    asl
    asl
    asl
    asl
    // return ((vera_layer_backcolor[layer] << 4) | vera_layer_textcolor[layer]);
    // [730] vera_layer_get_color::return#2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=vbuaa_bor_pbuc1_derefidx_vbuxx 
    ora vera_layer_textcolor,x
    // [731] phi from vera_layer_get_color::@1 vera_layer_get_color::@2 to vera_layer_get_color::@return [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return]
    // [731] phi vera_layer_get_color::return#3 = vera_layer_get_color::return#1 [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return#0] -- register_copy 
    // vera_layer_get_color::@return
    // }
    // [732] return 
    rts
    // vera_layer_get_color::@1
  __b1:
    // return (vera_layer_textcolor[layer]);
    // [733] vera_layer_get_color::return#1 = vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_textcolor,x
    rts
}
  // cputln
// Print a newline
cputln: {
    .label temp = $56
    // word temp = conio_line_text[conio_screen_layer]
    // [734] cputln::$2 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [735] cputln::temp#0 = conio_line_text[cputln::$2] -- vwuz1=pwuc1_derefidx_vbuaa 
    // TODO: This needs to be optimized! other variations don't compile because of sections not available!
    tay
    lda conio_line_text,y
    sta.z temp
    lda conio_line_text+1,y
    sta.z temp+1
    // temp += conio_rowskip
    // [736] cputln::temp#1 = cputln::temp#0 + conio_rowskip -- vwuz1=vwuz1_plus_vwuz2 
    lda.z temp
    clc
    adc.z conio_rowskip
    sta.z temp
    lda.z temp+1
    adc.z conio_rowskip+1
    sta.z temp+1
    // conio_line_text[conio_screen_layer] = temp
    // [737] cputln::$3 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [738] conio_line_text[cputln::$3] = cputln::temp#1 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z temp
    sta conio_line_text,y
    lda.z temp+1
    sta conio_line_text+1,y
    // conio_cursor_x[conio_screen_layer] = 0
    // [739] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // conio_cursor_y[conio_screen_layer]++;
    // [740] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_y,x
    // cscroll()
    // [741] call cscroll 
    jsr cscroll
    // cputln::@return
    // }
    // [742] return 
    rts
}
  // bitmap_plot
// bitmap_plot(word zp($42) x, word zp($40) y, byte register(X) c)
bitmap_plot: {
    .label __9 = $58
    .label __10 = $5e
    .label plot_x = $5a
    .label plot_y = $60
    .label vera_vram_address01_bankaddr = $5a
    .label x = $42
    .label y = $40
    .label __12 = $58
    .label __13 = $5e
    .label __14 = $64
    .label __15 = $66
    // dword plot_x = __bitmap_plot_x[x]
    // [744] bitmap_plot::$9 = bitmap_plot::x#4 << 1 -- vwuz1=vwuz2_rol_1 
    lda.z x
    asl
    sta.z __9
    lda.z x+1
    rol
    sta.z __9+1
    // [745] bitmap_plot::$12 = __bitmap_plot_x + bitmap_plot::$9 -- pwuz1=pwuc1_plus_vwuz1 
    clc
    lda.z __12
    adc #<__bitmap_plot_x
    sta.z __12
    lda.z __12+1
    adc #>__bitmap_plot_x
    sta.z __12+1
    // [746] bitmap_plot::plot_x#0 = (dword)*bitmap_plot::$12 -- vduz1=_dword__deref_pwuz2 
    // Needs unsigned int arrays arranged as two underlying char arrays to allow char* plotter_x = plot_x[x]; - and eventually - char* plotter = plot_x[x] + plot_y[y];
    ldy #0
    sty.z plot_x+2
    sty.z plot_x+3
    lda (__12),y
    sta.z plot_x
    iny
    lda (__12),y
    sta.z plot_x+1
    // dword plot_y = __bitmap_plot_y[y]
    // [747] bitmap_plot::$10 = bitmap_plot::y#4 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z y
    asl
    sta.z __10
    lda.z y+1
    rol
    sta.z __10+1
    asl.z __10
    rol.z __10+1
    // [748] bitmap_plot::$13 = __bitmap_plot_y + bitmap_plot::$10 -- pduz1=pduc1_plus_vwuz1 
    clc
    lda.z __13
    adc #<__bitmap_plot_y
    sta.z __13
    lda.z __13+1
    adc #>__bitmap_plot_y
    sta.z __13+1
    // [749] bitmap_plot::plot_y#0 = *bitmap_plot::$13 -- vduz1=_deref_pduz2 
    ldy #0
    lda (__13),y
    sta.z plot_y
    iny
    lda (__13),y
    sta.z plot_y+1
    iny
    lda (__13),y
    sta.z plot_y+2
    iny
    lda (__13),y
    sta.z plot_y+3
    // dword plotter = plot_x+plot_y
    // [750] bitmap_plot::vera_vram_address01_bankaddr#0 = bitmap_plot::plot_x#0 + bitmap_plot::plot_y#0 -- vduz1=vduz1_plus_vduz2 
    lda.z vera_vram_address01_bankaddr
    clc
    adc.z plot_y
    sta.z vera_vram_address01_bankaddr
    lda.z vera_vram_address01_bankaddr+1
    adc.z plot_y+1
    sta.z vera_vram_address01_bankaddr+1
    lda.z vera_vram_address01_bankaddr+2
    adc.z plot_y+2
    sta.z vera_vram_address01_bankaddr+2
    lda.z vera_vram_address01_bankaddr+3
    adc.z plot_y+3
    sta.z vera_vram_address01_bankaddr+3
    // byte bitshift = __bitmap_plot_bitshift[x]
    // [751] bitmap_plot::$14 = __bitmap_plot_bitshift + bitmap_plot::x#4 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitshift
    sta.z __14
    lda.z x+1
    adc #>__bitmap_plot_bitshift
    sta.z __14+1
    // [752] bitmap_plot::bitshift#0 = *bitmap_plot::$14 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (__14),y
    // bitshift?c<<(bitshift):c
    // [753] if(0!=bitmap_plot::bitshift#0) goto bitmap_plot::@1 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b1
    // [755] phi from bitmap_plot bitmap_plot::@1 to bitmap_plot::@2 [phi:bitmap_plot/bitmap_plot::@1->bitmap_plot::@2]
    // [755] phi bitmap_plot::c#0 = bitmap_plot::c#5 [phi:bitmap_plot/bitmap_plot::@1->bitmap_plot::@2#0] -- register_copy 
    jmp __b2
    // bitmap_plot::@1
  __b1:
    // [754] bitmap_plot::$3 = bitmap_plot::c#5 << bitmap_plot::bitshift#0 -- vbuxx=vbuxx_rol_vbuaa 
    tay
    txa
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    tax
    // bitmap_plot::@2
  __b2:
    // bitmap_plot::vera_vram_address01
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [756] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(bankaddr)
    // [757] bitmap_plot::vera_vram_address01_$0 = byte0  bitmap_plot::vera_vram_address01_bankaddr#0 -- vbuaa=_byte0_vduz1 
    lda.z vera_vram_address01_bankaddr
    // *VERA_ADDRX_L = BYTE0(bankaddr)
    // [758] *VERA_ADDRX_L = bitmap_plot::vera_vram_address01_$0 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_L
    // BYTE1(bankaddr)
    // [759] bitmap_plot::vera_vram_address01_$1 = byte1  bitmap_plot::vera_vram_address01_bankaddr#0 -- vbuaa=_byte1_vduz1 
    lda.z vera_vram_address01_bankaddr+1
    // *VERA_ADDRX_M = BYTE1(bankaddr)
    // [760] *VERA_ADDRX_M = bitmap_plot::vera_vram_address01_$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // BYTE2(bankaddr) | incr
    // [761] bitmap_plot::vera_vram_address01_$3 = byte2  bitmap_plot::vera_vram_address01_bankaddr#0 -- vbuaa=_byte2_vduz1 
    lda.z vera_vram_address01_bankaddr+2
    // *VERA_ADDRX_H = BYTE2(bankaddr) | incr
    // [762] *VERA_ADDRX_H = bitmap_plot::vera_vram_address01_$3 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // bitmap_plot::@3
    // ~__bitmap_plot_bitmask[x]
    // [763] bitmap_plot::$15 = __bitmap_plot_bitmask + bitmap_plot::x#4 -- pbuz1=pbuc1_plus_vwuz2 
    clc
    lda.z x
    adc #<__bitmap_plot_bitmask
    sta.z __15
    lda.z x+1
    adc #>__bitmap_plot_bitmask
    sta.z __15+1
    // [764] bitmap_plot::$6 = ~ *bitmap_plot::$15 -- vbuaa=_bnot__deref_pbuz1 
    ldy #0
    lda (__15),y
    eor #$ff
    // *VERA_DATA0 & ~__bitmap_plot_bitmask[x]
    // [765] bitmap_plot::$7 = *VERA_DATA0 & bitmap_plot::$6 -- vbuaa=_deref_pbuc1_band_vbuaa 
    and VERA_DATA0
    // (*VERA_DATA0 & ~__bitmap_plot_bitmask[x]) | c
    // [766] bitmap_plot::$8 = bitmap_plot::$7 | bitmap_plot::c#0 -- vbuaa=vbuaa_bor_vbuxx 
    stx.z $ff
    ora.z $ff
    // *VERA_DATA0 = (*VERA_DATA0 & ~__bitmap_plot_bitmask[x]) | c
    // [767] *VERA_DATA0 = bitmap_plot::$8 -- _deref_pbuc1=vbuaa 
    sta VERA_DATA0
    // bitmap_plot::@return
    // }
    // [768] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y[conio_screen_layer]>=CONIO_HEIGHT)
    // [769] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vbuz2_then_la1 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    cmp.z conio_screen_height
    bcc __b3
    // cscroll::@1
    // if(conio_scroll_enable[conio_screen_layer])
    // [770] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 -- 0_neq_pbuc1_derefidx_vbuz1_then_la1 
    lda conio_scroll_enable,y
    cmp #0
    bne __b4
    // cscroll::@2
    // if(conio_cursor_y[conio_screen_layer]>=conio_height)
    // [771] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vwuz2_then_la1 
    lda conio_cursor_y,y
    ldy.z conio_height+1
    bne __b3
    cmp.z conio_height
    // [772] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
    // cscroll::@3
  __b3:
    // cscroll::@return
    // }
    // [773] return 
    rts
    // [774] phi from cscroll::@1 to cscroll::@4 [phi:cscroll::@1->cscroll::@4]
    // cscroll::@4
  __b4:
    // insertup()
    // [775] call insertup 
    jsr insertup
    // cscroll::@5
    // gotoxy( 0, CONIO_HEIGHT-1)
    // [776] gotoxy::y#2 = conio_screen_height - 1 -- vbuxx=vbuz1_minus_1 
    ldx.z conio_screen_height
    dex
    // [777] call gotoxy 
    // [208] phi from cscroll::@5 to gotoxy [phi:cscroll::@5->gotoxy]
    // [208] phi gotoxy::y#7 = gotoxy::y#2 [phi:cscroll::@5->gotoxy#0] -- register_copy 
    jsr gotoxy
    rts
}
  // insertup
// Insert a new line, and scroll the upper part of the screen up.
insertup: {
    .label cy = $68
    .label width = $69
    .label line = $15
    .label start = $15
    // unsigned byte cy = conio_cursor_y[conio_screen_layer]
    // [778] insertup::cy#0 = conio_cursor_y[conio_screen_layer] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    sta.z cy
    // unsigned byte width = CONIO_WIDTH * 2
    // [779] insertup::width#0 = conio_screen_width << 1 -- vbuz1=vbuz2_rol_1 
    lda.z conio_screen_width
    asl
    sta.z width
    // [780] phi from insertup to insertup::@1 [phi:insertup->insertup::@1]
    // [780] phi insertup::i#2 = 1 [phi:insertup->insertup::@1#0] -- vbuxx=vbuc1 
    ldx #1
    // insertup::@1
  __b1:
    // for(unsigned byte i=1; i<=cy; i++)
    // [781] if(insertup::i#2<=insertup::cy#0) goto insertup::@2 -- vbuxx_le_vbuz1_then_la1 
    lda.z cy
    stx.z $ff
    cmp.z $ff
    bcs __b2
    // [782] phi from insertup::@1 to insertup::@3 [phi:insertup::@1->insertup::@3]
    // insertup::@3
    // clearline()
    // [783] call clearline 
    jsr clearline
    // insertup::@return
    // }
    // [784] return 
    rts
    // insertup::@2
  __b2:
    // i-1
    // [785] insertup::$3 = insertup::i#2 - 1 -- vbuaa=vbuxx_minus_1 
    txa
    sec
    sbc #1
    // unsigned int line = (i-1) << conio_rowshift
    // [786] insertup::line#0 = insertup::$3 << conio_rowshift -- vwuz1=vbuaa_rol_vbuz2 
    ldy.z conio_rowshift
    sta.z line
    lda #0
    sta.z line+1
    cpy #0
    beq !e+
  !:
    asl.z line
    rol.z line+1
    dey
    bne !-
  !e:
    // unsigned char* start = CONIO_SCREEN_TEXT + line
    // [787] insertup::start#0 = (byte*)CONIO_SCREEN_TEXT#104 + insertup::line#0 -- pbuz1=pbuz2_plus_vwuz1 
    lda.z start
    clc
    adc.z CONIO_SCREEN_TEXT
    sta.z start
    lda.z start+1
    adc.z CONIO_SCREEN_TEXT+1
    sta.z start+1
    // start+conio_rowskip
    // [788] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip -- pbuz1=pbuz2_plus_vwuz3 
    lda.z start
    clc
    adc.z conio_rowskip
    sta.z memcpy_in_vram.src
    lda.z start+1
    adc.z conio_rowskip+1
    sta.z memcpy_in_vram.src+1
    // memcpy_in_vram(0, start, VERA_INC_1,  0, start+conio_rowskip, VERA_INC_1, width)
    // [789] memcpy_in_vram::dest#0 = (void*)insertup::start#0
    // [790] memcpy_in_vram::num#0 = insertup::width#0 -- vwuz1=vbuz2 
    lda.z width
    sta.z memcpy_in_vram.num
    lda #0
    sta.z memcpy_in_vram.num+1
    // [791] memcpy_in_vram::src#3 = (void*)memcpy_in_vram::src#0
    // memcpy_in_vram(0, start, VERA_INC_1,  0, start+conio_rowskip, VERA_INC_1, width)
    // [792] call memcpy_in_vram 
    // [221] phi from insertup::@2 to memcpy_in_vram [phi:insertup::@2->memcpy_in_vram]
    // [221] phi memcpy_in_vram::num#3 = memcpy_in_vram::num#0 [phi:insertup::@2->memcpy_in_vram#0] -- register_copy 
    // [221] phi memcpy_in_vram::dest_bank#2 = 0 [phi:insertup::@2->memcpy_in_vram#1] -- vbuyy=vbuc1 
    tay
    // [221] phi memcpy_in_vram::dest#2 = memcpy_in_vram::dest#0 [phi:insertup::@2->memcpy_in_vram#2] -- register_copy 
    // [221] phi memcpy_in_vram::src#2 = memcpy_in_vram::src#3 [phi:insertup::@2->memcpy_in_vram#3] -- register_copy 
    jsr memcpy_in_vram
    // insertup::@4
    // for(unsigned byte i=1; i<=cy; i++)
    // [793] insertup::i#1 = ++ insertup::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [780] phi from insertup::@4 to insertup::@1 [phi:insertup::@4->insertup::@1]
    // [780] phi insertup::i#2 = insertup::i#1 [phi:insertup::@4->insertup::@1#0] -- register_copy 
    jmp __b1
}
  // clearline
clearline: {
    .label addr = $6a
    .label c = $42
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [794] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // CONIO_SCREEN_TEXT + conio_line_text[conio_screen_layer]
    // [795] clearline::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // byte* addr = CONIO_SCREEN_TEXT + conio_line_text[conio_screen_layer]
    // [796] clearline::addr#0 = (byte*)CONIO_SCREEN_TEXT#104 + conio_line_text[clearline::$5] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z addr+1
    // BYTE0(addr)
    // [797] clearline::$1 = byte0  clearline::addr#0 -- vbuaa=_byte0_pbuz1 
    lda.z addr
    // *VERA_ADDRX_L = BYTE0(addr)
    // [798] *VERA_ADDRX_L = clearline::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_L
    // BYTE1(addr)
    // [799] clearline::$2 = byte1  clearline::addr#0 -- vbuaa=_byte1_pbuz1 
    lda.z addr+1
    // *VERA_ADDRX_M = BYTE1(addr)
    // [800] *VERA_ADDRX_M = clearline::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // *VERA_ADDRX_H = VERA_INC_1
    // [801] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // vera_layer_get_color( conio_screen_layer)
    // [802] vera_layer_get_color::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [803] call vera_layer_get_color 
    // [724] phi from clearline to vera_layer_get_color [phi:clearline->vera_layer_get_color]
    // [724] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#1 [phi:clearline->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // vera_layer_get_color( conio_screen_layer)
    // [804] vera_layer_get_color::return#4 = vera_layer_get_color::return#3
    // clearline::@4
    // char color = vera_layer_get_color( conio_screen_layer)
    // [805] clearline::color#0 = vera_layer_get_color::return#4 -- vbuxx=vbuaa 
    tax
    // [806] phi from clearline::@4 to clearline::@1 [phi:clearline::@4->clearline::@1]
    // [806] phi clearline::c#2 = 0 [phi:clearline::@4->clearline::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z c
    sta.z c+1
    // clearline::@1
  __b1:
    // for( unsigned int c=0;c<CONIO_WIDTH; c++ )
    // [807] if(clearline::c#2<conio_screen_width) goto clearline::@2 -- vwuz1_lt_vbuz2_then_la1 
    lda.z c+1
    bne !+
    lda.z c
    cmp.z conio_screen_width
    bcc __b2
  !:
    // clearline::@3
    // conio_cursor_x[conio_screen_layer] = 0
    // [808] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // clearline::@return
    // }
    // [809] return 
    rts
    // clearline::@2
  __b2:
    // *VERA_DATA0 = ' '
    // [810] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    // Set data
    lda #' '
    sta VERA_DATA0
    // *VERA_DATA0 = color
    // [811] *VERA_DATA0 = clearline::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // for( unsigned int c=0;c<CONIO_WIDTH; c++ )
    // [812] clearline::c#1 = ++ clearline::c#2 -- vwuz1=_inc_vwuz1 
    inc.z c
    bne !+
    inc.z c+1
  !:
    // [806] phi from clearline::@2 to clearline::@1 [phi:clearline::@2->clearline::@1]
    // [806] phi clearline::c#2 = clearline::c#1 [phi:clearline::@2->clearline::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  VERA_LAYER_WIDTH: .word $20, $40, $80, $100
  VERA_LAYER_HEIGHT: .word $20, $40, $80, $100
  /// --- VERA function encapsulation ---
  vera_mapbase_offset: .word 0, 0
  vera_mapbase_bank: .byte 0, 0
  vera_mapbase_address: .dword 0, 0
  vera_tilebase_offset: .word 0, 0
  vera_tilebase_bank: .byte 0, 0
  vera_tilebase_address: .dword 0, 0
  vera_layer_rowshift: .byte 0, 0
  vera_layer_rowskip: .word 0, 0
  vera_layer_config: .word VERA_L0_CONFIG, VERA_L1_CONFIG
  vera_layer_enable: .byte VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE
  vera_layer_mapbase: .word VERA_L0_MAPBASE, VERA_L1_MAPBASE
  vera_layer_tilebase: .word VERA_L0_TILEBASE, VERA_L1_TILEBASE
  vera_layer_textcolor: .byte WHITE, WHITE
  vera_layer_backcolor: .byte BLUE, BLUE
  // The number of bytes on the screen
  // The current cursor x-position
  conio_cursor_x: .byte 0, 0
  // The current cursor y-position
  conio_cursor_y: .byte 0, 0
  // The current text cursor line start
  conio_line_text: .word 0, 0
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  conio_scroll_enable: .byte 1, 1
  // Tables for the plotter - initialized by calling bitmap_draw_init();
  __bitmap_plot_x: .fill 2*$280, 0
  __bitmap_plot_y: .fill 4*$1e0, 0
  __bitmap_plot_bitmask: .fill $280, 0
  __bitmap_plot_bitshift: .fill $280, 0
  hdeltas: .word 0, $50, $28, $14, 0, $a0, $50, $28, 0, $140, $a0, $50, 0, $280, $140, $a0
  vdeltas: .word 0, $1e0, $f0, $a0
  bitmasks: .byte $80, $c0, $f0, $ff
  .fill 1, 0
  bitshifts: .byte 7, 6, 4, 0
  .fill 1, 0

