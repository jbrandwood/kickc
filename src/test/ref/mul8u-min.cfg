@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::i#4 ← phi( main/(byte) 0 main::@3/(byte) main::i#1 )
  [5] (byte) main::a#4 ← phi( main/(byte) 0 main::@3/(byte) main::a#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@4
  [6] (byte) main::i#2 ← phi( main::@1/(byte) main::i#4 main::@4/(byte) main::i#1 )
  [6] (byte) main::b#2 ← phi( main::@1/(byte) 0 main::@4/(byte) main::b#1 )
  [7] (byte) mul8u::a#1 ← (byte) main::a#4
  [8] (byte) mul8u::b#0 ← (byte) main::b#2
  [9] call mul8u 
  [10] (word) mul8u::return#2 ← (word) mul8u::res#2
  to:main::@4
main::@4: scope:[main]  from main::@2
  [11] (word~) main::$0 ← (word) mul8u::return#2
  [12] (byte~) main::$3 ← (byte) main::i#2 << (byte) 1
  [13] *((const word*) main::screen#0 + (byte~) main::$3) ← (word~) main::$0
  [14] (byte) main::i#1 ← ++ (byte) main::i#2
  [15] (byte) main::b#1 ← ++ (byte) main::b#2
  [16] if((byte) main::b#1!=(byte) 6) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@4
  [17] (byte) main::a#1 ← ++ (byte) main::a#4
  [18] if((byte) main::a#1!=(byte) 6) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [19] return 
  to:@return

(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
mul8u: scope:[mul8u]  from main::@2
  [20] phi()
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@3
  [21] (word) mul8u::mb#2 ← phi( mul8u/(byte) mul8u::b#0 mul8u::@3/(word) mul8u::mb#1 )
  [21] (word) mul8u::res#2 ← phi( mul8u/(byte) 0 mul8u::@3/(word) mul8u::res#6 )
  [21] (byte) mul8u::a#2 ← phi( mul8u/(byte) mul8u::a#1 mul8u::@3/(byte) mul8u::a#0 )
  [22] if((byte) mul8u::a#2!=(byte) 0) goto mul8u::@2
  to:mul8u::@return
mul8u::@return: scope:[mul8u]  from mul8u::@1
  [23] return 
  to:@return
mul8u::@2: scope:[mul8u]  from mul8u::@1
  [24] (byte~) mul8u::$1 ← (byte) mul8u::a#2 & (byte) 1
  [25] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3
  to:mul8u::@4
mul8u::@4: scope:[mul8u]  from mul8u::@2
  [26] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2
  to:mul8u::@3
mul8u::@3: scope:[mul8u]  from mul8u::@2 mul8u::@4
  [27] (word) mul8u::res#6 ← phi( mul8u::@2/(word) mul8u::res#2 mul8u::@4/(word) mul8u::res#1 )
  [28] (byte) mul8u::a#0 ← (byte) mul8u::a#2 >> (byte) 1
  [29] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1
  to:mul8u::@1
