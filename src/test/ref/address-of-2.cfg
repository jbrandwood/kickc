@begin: scope:[]  from
  [0] (byte) val#0 ← (byte) 0
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((const byte*) main::SCREEN1) ← (byte) val#0
  [5] *((const byte*) main::SCREEN2) ← (byte) '.'
  [6] (byte) val#1 ← (byte) 1
  [7] *((const byte*) main::SCREEN1+(byte) 1) ← (byte) val#1
  [8] *((const byte*) main::SCREEN2+(byte) 1) ← (byte) '.'
  [9] (byte) val#2 ← (byte) 2
  [10] *((const byte*) main::SCREEN1+(byte) 2) ← (byte) val#2
  [11] *((const byte*) main::SCREEN2+(byte) 2) ← *((const byte*) main::ptr#0)
  [12] *((const byte*) main::ptr#0) ← (byte) 3
  [13] *((const byte*) main::SCREEN1+(byte) 3) ← (byte) val#2
  [14] *((const byte*) main::SCREEN2+(byte) 3) ← *((const byte*) main::ptr#0)
  [15] call setv 
  to:main::@1
main::@1: scope:[main]  from main
  [16] *((const byte*) main::SCREEN1+(byte) 4) ← (byte) val#12
  [17] *((const byte*) main::SCREEN2+(byte) 4) ← *((const byte*) main::ptr#0)
  [18] call setp 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [19] *((const byte*) main::SCREEN1+(byte) 5) ← (byte) val#12
  [20] *((const byte*) main::SCREEN2+(byte) 5) ← *((const byte*) main::ptr#0)
  to:main::@return
main::@return: scope:[main]  from main::@2
  [21] return 
  to:@return

(void()) setp((byte*) setp::p , (byte) setp::v)
setp: scope:[setp]  from main::@1
  [22] *((const byte*) main::ptr#0) ← (const byte) setp::v#0
  to:setp::@return
setp::@return: scope:[setp]  from setp
  [23] return 
  to:@return

(void()) setv((byte) setv::v)
setv: scope:[setv]  from main
  [24] (byte) val#12 ← (const byte) setv::v#0
  to:setv::@return
setv::@return: scope:[setv]  from setv
  [25] return 
  to:@return
