
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@2/(byte) main::i#1 )
  [2] if((byte) main::i#2<(byte) $19) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [3] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [4] (byte~) main::$4 ← (byte) main::i#2 << (byte) 1
  [5] (byte~) main::$2 ← (byte~) main::$4 + (byte) main::i#2
  [6] *((byte*)(const struct Ball*) balls + (byte~) main::$2) ← *((byte*)(const struct Ball*) balls + (byte~) main::$2) + *((byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_VEL + (byte~) main::$2)
  [7] *((byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_VEL + (byte~) main::$2) ← *((byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_VEL + (byte~) main::$2) + (byte) $a
  [8] *((byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_SYM + (byte~) main::$2) ← (byte) '*'
  [9] (byte) main::i#1 ← ++ (byte) main::i#2
  to:main::@1
