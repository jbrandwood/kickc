(label) @1
(label) @begin
(label) @end
(const byte) OFFSET_STRUCT_POINT_X = (byte) 0
(const byte) OFFSET_STRUCT_POINT_Y = (byte) 1
(byte) Point::x loadstore
(byte) Point::y loadstore
(const byte*) SCREEN = (byte*) 1024
(const word) STACK_BASE = (word) $103
__stackcall (struct Point()) get((byte) get::i)
(byte~) get::$0 reg byte a 2.0
(label) get::@return
(const byte) get::OFFSET_STACK_I = (byte) 0
(const byte) get::OFFSET_STACK_RETURN = (byte) 0
(byte) get::i
(byte) get::i#0 reg byte x 3.0
(struct Point) get::p loadstore zp[2]:8
(struct Point) get::return
(byte) get::return_x
(byte) get::return_x#0 reg byte a 1.0
(byte) get::return_y
(byte) get::return_y#0 reg byte y 2.0
(byte) idx loadstore zp[1]:2 0.7368421052631579
__stackcall (void()) main()
(byte~) main::$1_x zp[1]:4 0.8461538461538461
(byte~) main::$1_y zp[1]:5 0.8461538461538461
(label) main::@1
(label) main::@2
(label) main::@return
(byte) main::i loadstore zp[1]:3 3.1818181818181817
(struct Point) main::p loadstore zp[2]:6
__stackcall (void()) print((byte) print::p_x , (byte) print::p_y)
(label) print::@return
(byte) print::p_x
(byte) print::p_x#0 reg byte a 2.0
(byte) print::p_y
(byte) print::p_y#0 reg byte x 0.6666666666666666

reg byte a [ print::p_x#0 ]
reg byte x [ print::p_y#0 ]
zp[1]:2 [ idx ]
reg byte x [ get::i#0 ]
reg byte a [ get::$0 ]
reg byte a [ get::return_x#0 ]
reg byte y [ get::return_y#0 ]
zp[1]:3 [ main::i ]
zp[1]:4 [ main::$1_x ]
zp[1]:5 [ main::$1_y ]
zp[2]:6 [ main::p ]
zp[2]:8 [ get::p ]
