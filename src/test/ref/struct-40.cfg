@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((const byte*) SCREEN) ← (const byte) main::v1_p_x
  [5] *((const byte*) SCREEN+(byte) 1) ← (const byte) main::v1_p_y
  [6] *((const byte*) SCREEN+(byte) 2) ← (const byte) main::v1_q_x
  [7] *((const byte*) SCREEN+(byte) 3) ← (const byte) main::v1_q_y
  [8] *((const byte*) SCREEN+(byte) 4) ← (const byte) main::v1_p_x
  [9] *((const byte*) SCREEN+(byte) 5) ← (const byte) main::v1_p_y
  [10] *((const byte*) SCREEN+(byte) 6) ← (const byte) main::v1_q_x
  [11] *((const byte*) SCREEN+(byte) 7) ← (const byte) main::v1_q_y
  [12] *((const byte*) SCREEN+(byte) 8) ← (const byte) main::v1_p_x
  [13] *((const byte*) SCREEN+(byte) 9) ← (const byte) main::v1_p_y
  [14] *((const byte*) SCREEN+(byte) $a) ← (const byte) main::v3_q_x
  [15] *((const byte*) SCREEN+(byte) $b) ← (const byte) main::v3_q_y
  [16] *((const byte*) SCREEN+(byte) $c) ← (const byte) main::v1_p_x
  [17] *((const byte*) SCREEN+(byte) $d) ← (const byte) main::v1_p_y
  [18] *((const byte*) SCREEN+(byte) $e) ← (const byte) main::v4_q_x
  [19] *((const byte*) SCREEN+(byte) $f) ← (const byte) main::v4_q_y
  to:main::@return
main::@return: scope:[main]  from main
  [20] return 
  to:@return
