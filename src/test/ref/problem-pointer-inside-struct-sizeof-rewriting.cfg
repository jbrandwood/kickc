@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::radix#4 ← phi( main/(byte) 0 main::@3/(byte) main::radix#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [6] (byte) main::digit#2 ← phi( main::@1/(byte) 0 main::@2/(byte) main::digit#1 )
  [7] (word) main::digit_value#0 ← *((const word[]) RADIX_DECIMAL_VALUES#0 + (byte) main::digit#2)
  [8] (byte~) main::$2 ← (byte) main::digit#2 << (byte) 1
  [9] *((const word*) main::SCREEN#0 + (byte~) main::$2) ← (word) main::digit_value#0
  [10] (byte) main::digit#1 ← ++ (byte) main::digit#2
  [11] if((byte) main::digit#1!=(byte) 5) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [12] (byte) main::radix#1 ← ++ (byte) main::radix#4
  [13] if((byte) main::radix#1!=(byte) 2) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [14] return 
  to:@return
