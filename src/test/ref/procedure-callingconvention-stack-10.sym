(label) @1
(label) @begin
(label) @end
(const byte) OFFSET_STRUCT_POINT_Y = (byte) 1
(byte) Point::x
(byte) Point::y
(const byte*) SCREEN = (byte*) 1024
(const word) STACK_BASE = (word) $103
__stackcall (struct Point()) get((byte) get::i)
(label) get::@return
(const byte) get::OFFSET_STACK_I = (byte) 0
(byte) get::i
(byte) get::p_x
(byte) get::p_y
(struct Point) get::return
(byte) get::return_x
(byte) get::return_x#0 reg byte x 3.0
(byte) get::return_y
(byte) get::return_y#0 reg byte y 2.0
(byte) idx loadstore zp[1]:3 0.6363636363636365
__stackcall (void()) main()
(label) main::@1
(label) main::@2
(label) main::@return
(byte) main::i
(byte) main::i#1 i zp[1]:2 22.0
(byte) main::i#2 i zp[1]:2 4.0
(byte) main::p_x
(byte) main::p_x#0 reg byte y 11.0
(byte) main::p_y
(byte) main::p_y#0 reg byte x 11.0
__stackcall (void()) print((byte) print::p_x , (byte) print::p_y)
(label) print::@return
(const byte) print::OFFSET_STACK_P_X = (byte) 1
(const byte) print::OFFSET_STACK_P_Y = (byte) 0
(byte) print::p_x
(byte) print::p_x#0 reg byte y 2.0
(byte) print::p_y
(byte) print::p_y#0 reg byte x 1.3333333333333333

zp[1]:2 [ main::i#2 main::i#1 ]
zp[1]:3 [ idx ]
reg byte y [ print::p_x#0 ]
reg byte x [ print::p_y#0 ]
reg byte x [ get::return_x#0 ]
reg byte y [ get::return_y#0 ]
reg byte y [ main::p_x#0 ]
reg byte x [ main::p_y#0 ]
