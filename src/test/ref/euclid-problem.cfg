@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@4 main::@5
  [5] (byte) main::b#2 ← phi( main/(byte) 2 main::@4/(byte) main::b#2 main::@5/(byte) main::b#1 )
  [5] (byte) main::a#2 ← phi( main/(byte) $80 main::@4/(byte) main::a#1 main::@5/(byte) main::a#2 )
  [6] if((byte) main::a#2!=(byte) main::b#2) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [7] *((const byte*) SCREEN#0) ← (byte) main::a#2
  to:main::@return
main::@return: scope:[main]  from main::@3
  [8] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [9] if((byte) main::a#2>(byte) main::b#2) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@2
  [10] (byte) main::b#1 ← (byte) main::b#2 - (byte) main::a#2
  to:main::@1
main::@4: scope:[main]  from main::@2
  [11] (byte) main::a#1 ← (byte) main::a#2 - (byte) main::b#2
  to:main::@1
