@begin: scope:[]  from
  [0] phi()
  to:@25
@25: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @25
  [3] phi()
main: scope:[main]  from @25
  [4] phi()
  [5] call print_cls 
  to:main::@7
main::@7: scope:[main]  from main main::@13
  [6] (byte*) print_line_cursor#32 ← phi( main::@13/(byte*) print_line_cursor#23 main/((byte*))(word/signed word/dword/signed dword) $400 )
  [6] (byte) main::s#8 ← phi( main::@13/(byte) main::s#10 main/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [6] (byte*) print_char_cursor#82 ← phi( main::@13/(byte*) print_char_cursor#75 main/((byte*))(word/signed word/dword/signed dword) $400 )
  [6] (byte) main::i#2 ← phi( main::@13/(byte) main::i#1 main/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [7] (byte~) main::$1 ← (byte) main::i#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [8] (signed word) main::w1#0 ← *((const signed word[]) swords#0 + (byte~) main::$1)
  to:main::@8
main::@8: scope:[main]  from main::@12 main::@7
  [9] (byte*) print_line_cursor#31 ← phi( main::@12/(byte*) print_line_cursor#23 main::@7/(byte*) print_line_cursor#32 )
  [9] (byte) main::s#6 ← phi( main::@12/(byte) main::s#10 main::@7/(byte) main::s#8 )
  [9] (byte*) print_char_cursor#76 ← phi( main::@12/(byte*) print_char_cursor#75 main::@7/(byte*) print_char_cursor#82 )
  [9] (byte) main::j#2 ← phi( main::@12/(byte) main::j#1 main::@7/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [10] (byte~) main::$2 ← (byte) main::j#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [11] (signed word) main::w2#0 ← *((const signed word[]) swords#0 + (byte~) main::$2)
  to:main::@9
main::@9: scope:[main]  from main::@10 main::@8
  [12] (byte*) print_line_cursor#19 ← phi( main::@10/(byte*) print_line_cursor#23 main::@8/(byte*) print_line_cursor#31 )
  [12] (byte) main::s#3 ← phi( main::@10/(byte) main::s#10 main::@8/(byte) main::s#6 )
  [12] (byte*) print_char_cursor#67 ← phi( main::@10/(byte*) print_char_cursor#75 main::@8/(byte*) print_char_cursor#76 )
  [12] (byte) main::op#2 ← phi( main::@10/(byte) main::op#1 main::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [13] (signed word) compare::w1#0 ← (signed word) main::w1#0
  [14] (signed word) compare::w2#0 ← (signed word) main::w2#0
  [15] (byte) compare::op#0 ← (byte) main::op#2
  [16] call compare 
  to:main::@16
main::@16: scope:[main]  from main::@9
  [17] (byte) main::s#1 ← ++ (byte) main::s#3
  [18] if((byte) main::s#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto main::@10
  to:main::@11
main::@11: scope:[main]  from main::@16
  [19] phi()
  [20] call print_ln 
  [21] (byte*~) print_char_cursor#116 ← (byte*) print_line_cursor#1
  to:main::@10
main::@10: scope:[main]  from main::@11 main::@16
  [22] (byte*) print_line_cursor#23 ← phi( main::@16/(byte*) print_line_cursor#19 main::@11/(byte*) print_line_cursor#1 )
  [22] (byte) main::s#10 ← phi( main::@16/(byte) main::s#1 main::@11/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [22] (byte*) print_char_cursor#75 ← phi( main::@16/(byte*) print_char_cursor#14 main::@11/(byte*~) print_char_cursor#116 )
  [23] (byte) main::op#1 ← ++ (byte) main::op#2
  [24] if((byte) main::op#1!=(byte/signed byte/word/signed word/dword/signed dword) 6) goto main::@9
  to:main::@12
main::@12: scope:[main]  from main::@10
  [25] (byte) main::j#1 ← ++ (byte) main::j#2
  [26] if((byte) main::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto main::@8
  to:main::@13
main::@13: scope:[main]  from main::@12
  [27] (byte) main::i#1 ← ++ (byte) main::i#2
  [28] if((byte) main::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto main::@7
  to:main::@2
main::@2: scope:[main]  from main::@13 main::@2
  [29] phi()
  to:main::@2
print_ln: scope:[print_ln]  from main::@11
  [30] phi()
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [31] (byte*) print_line_cursor#9 ← phi( print_ln/(byte*) print_line_cursor#19 print_ln::@1/(byte*) print_line_cursor#1 )
  [32] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#9 + (byte/signed byte/word/signed word/dword/signed dword) $28
  [33] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#14) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [34] return 
  to:@return
compare: scope:[compare]  from main::@9
  [35] if((byte) compare::op#0==(const byte) LT#0) goto compare::@1
  to:compare::@14
compare::@14: scope:[compare]  from compare
  [36] if((byte) compare::op#0==(const byte) LE#0) goto compare::@2
  to:compare::@15
compare::@15: scope:[compare]  from compare::@14
  [37] if((byte) compare::op#0==(const byte) GT#0) goto compare::@3
  to:compare::@16
compare::@16: scope:[compare]  from compare::@15
  [38] if((byte) compare::op#0==(const byte) GE#0) goto compare::@4
  to:compare::@17
compare::@17: scope:[compare]  from compare::@16
  [39] if((byte) compare::op#0==(const byte) EQ#0) goto compare::@5
  to:compare::@18
compare::@18: scope:[compare]  from compare::@17
  [40] if((byte) compare::op#0!=(const byte) NE#0) goto compare::@11
  to:compare::@19
compare::@19: scope:[compare]  from compare::@18
  [41] if((signed word) compare::w1#0==(signed word) compare::w2#0) goto compare::@33
  to:compare::@20
compare::@20: scope:[compare]  from compare::@19
  [42] phi()
  to:compare::@33
compare::@33: scope:[compare]  from compare::@19 compare::@20
  [43] (byte) compare::r#16 ← phi( compare::@19/(const byte) FF#0 compare::@20/(const byte) TT#0 )
  to:compare::@11
compare::@11: scope:[compare]  from compare::@18 compare::@33 compare::@34 compare::@35 compare::@36 compare::@37 compare::@38
  [44] (byte) compare::r#10 ← phi( compare::@33/(byte) compare::r#16 compare::@34/(byte) compare::r#17 compare::@35/(byte) compare::r#18 compare::@36/(byte) compare::r#19 compare::@37/(byte) compare::r#20 compare::@38/(byte) compare::r#21 compare::@18/(const byte) FF#0 )
  [44] (byte*) compare::ops#10 ← phi( compare::@33/(const byte*) compare::ops#1 compare::@34/(const byte*) compare::ops#2 compare::@35/(const byte*) compare::ops#3 compare::@36/(const byte*) compare::ops#4 compare::@37/(const byte*) compare::ops#5 compare::@38/(const byte*) compare::ops#6 compare::@18/(byte*) 0 )
  [45] if((signed word) compare::w1#0<(byte/signed byte/word/signed word/dword/signed dword) 0) goto compare::@12
  to:compare::@31
compare::@31: scope:[compare]  from compare::@11
  [46] phi()
  [47] call print_char 
  to:compare::@12
compare::@12: scope:[compare]  from compare::@11 compare::@31
  [48] (byte*) print_char_cursor#70 ← phi( compare::@11/(byte*) print_char_cursor#67 compare::@31/(byte*) print_char_cursor#14 )
  [49] (signed word) print_sword::w#1 ← (signed word) compare::w1#0
  [50] call print_sword 
  to:compare::@39
compare::@39: scope:[compare]  from compare::@12
  [51] (byte*) print_str::str#1 ← (byte*) compare::ops#10
  [52] call print_str 
  to:compare::@40
compare::@40: scope:[compare]  from compare::@39
  [53] if((signed word) compare::w2#0<(byte/signed byte/word/signed word/dword/signed dword) 0) goto compare::@13
  to:compare::@32
compare::@32: scope:[compare]  from compare::@40
  [54] phi()
  [55] call print_char 
  to:compare::@13
compare::@13: scope:[compare]  from compare::@32 compare::@40
  [56] (byte*) print_char_cursor#71 ← phi( compare::@40/(byte*) print_char_cursor#2 compare::@32/(byte*) print_char_cursor#14 )
  [57] (signed word) print_sword::w#2 ← (signed word) compare::w2#0
  [58] call print_sword 
  to:compare::@42
compare::@42: scope:[compare]  from compare::@13
  [59] (byte) print_char::ch#4 ← (byte) compare::r#10
  [60] call print_char 
  to:compare::@return
compare::@return: scope:[compare]  from compare::@42
  [61] return 
  to:@return
compare::@5: scope:[compare]  from compare::@17
  [62] if((signed word) compare::w1#0!=(signed word) compare::w2#0) goto compare::@34
  to:compare::@22
compare::@22: scope:[compare]  from compare::@5
  [63] phi()
  to:compare::@34
compare::@34: scope:[compare]  from compare::@22 compare::@5
  [64] (byte) compare::r#17 ← phi( compare::@22/(const byte) TT#0 compare::@5/(const byte) FF#0 )
  to:compare::@11
compare::@4: scope:[compare]  from compare::@16
  [65] if((signed word) compare::w1#0<(signed word) compare::w2#0) goto compare::@35
  to:compare::@24
compare::@24: scope:[compare]  from compare::@4
  [66] phi()
  to:compare::@35
compare::@35: scope:[compare]  from compare::@24 compare::@4
  [67] (byte) compare::r#18 ← phi( compare::@24/(const byte) TT#0 compare::@4/(const byte) FF#0 )
  to:compare::@11
compare::@3: scope:[compare]  from compare::@15
  [68] if((signed word) compare::w1#0<=(signed word) compare::w2#0) goto compare::@36
  to:compare::@26
compare::@26: scope:[compare]  from compare::@3
  [69] phi()
  to:compare::@36
compare::@36: scope:[compare]  from compare::@26 compare::@3
  [70] (byte) compare::r#19 ← phi( compare::@26/(const byte) TT#0 compare::@3/(const byte) FF#0 )
  to:compare::@11
compare::@2: scope:[compare]  from compare::@14
  [71] if((signed word) compare::w1#0>(signed word) compare::w2#0) goto compare::@37
  to:compare::@28
compare::@28: scope:[compare]  from compare::@2
  [72] phi()
  to:compare::@37
compare::@37: scope:[compare]  from compare::@2 compare::@28
  [73] (byte) compare::r#20 ← phi( compare::@2/(const byte) FF#0 compare::@28/(const byte) TT#0 )
  to:compare::@11
compare::@1: scope:[compare]  from compare
  [74] if((signed word) compare::w1#0>=(signed word) compare::w2#0) goto compare::@38
  to:compare::@30
compare::@30: scope:[compare]  from compare::@1
  [75] phi()
  to:compare::@38
compare::@38: scope:[compare]  from compare::@1 compare::@30
  [76] (byte) compare::r#21 ← phi( compare::@1/(const byte) FF#0 compare::@30/(const byte) TT#0 )
  to:compare::@11
print_char: scope:[print_char]  from compare::@31 compare::@32 compare::@42 print_byte print_byte::@1 print_sword::@2
  [77] (byte*) print_char_cursor#43 ← phi( compare::@31/(byte*) print_char_cursor#67 compare::@32/(byte*) print_char_cursor#2 compare::@42/(byte*) print_char_cursor#14 print_byte/(byte*) print_char_cursor#63 print_byte::@1/(byte*) print_char_cursor#14 print_sword::@2/(byte*) print_char_cursor#61 )
  [77] (byte) print_char::ch#6 ← phi( compare::@31/(byte) ' ' compare::@32/(byte) ' ' compare::@42/(byte) print_char::ch#4 print_byte/(byte) print_char::ch#1 print_byte::@1/(byte) print_char::ch#2 print_sword::@2/(byte) '-' )
  [78] *((byte*) print_char_cursor#43) ← (byte) print_char::ch#6
  [79] (byte*) print_char_cursor#14 ← ++ (byte*) print_char_cursor#43
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [80] return 
  to:@return
print_sword: scope:[print_sword]  from compare::@12 compare::@13
  [81] (byte*) print_char_cursor#61 ← phi( compare::@12/(byte*) print_char_cursor#70 compare::@13/(byte*) print_char_cursor#71 )
  [81] (signed word) print_sword::w#3 ← phi( compare::@12/(signed word) print_sword::w#1 compare::@13/(signed word) print_sword::w#2 )
  [82] if((signed word) print_sword::w#3>=(byte/signed byte/word/signed word/dword/signed dword) 0) goto print_sword::@1
  to:print_sword::@2
print_sword::@2: scope:[print_sword]  from print_sword
  [83] phi()
  [84] call print_char 
  to:print_sword::@4
print_sword::@4: scope:[print_sword]  from print_sword::@2
  [85] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#3
  to:print_sword::@1
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@4
  [86] (byte*) print_char_cursor#60 ← phi( print_sword/(byte*) print_char_cursor#61 print_sword::@4/(byte*) print_char_cursor#14 )
  [86] (signed word) print_sword::w#4 ← phi( print_sword/(signed word) print_sword::w#3 print_sword::@4/(signed word) print_sword::w#0 )
  [87] call print_word 
  to:print_sword::@return
print_sword::@return: scope:[print_sword]  from print_sword::@1
  [88] return 
  to:@return
print_word: scope:[print_word]  from print_sword::@1
  [89] (byte) print_byte::b#0 ← > (word)(signed word) print_sword::w#4
  [90] call print_byte 
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [91] (byte) print_byte::b#1 ← < (word)(signed word) print_sword::w#4
  [92] call print_byte 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [93] return 
  to:@return
print_byte: scope:[print_byte]  from print_word print_word::@1
  [94] (byte*) print_char_cursor#63 ← phi( print_word/(byte*) print_char_cursor#60 print_word::@1/(byte*) print_char_cursor#14 )
  [94] (byte) print_byte::b#2 ← phi( print_word/(byte) print_byte::b#0 print_word::@1/(byte) print_byte::b#1 )
  [95] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word/dword/signed dword) 4
  [96] (byte) print_char::ch#1 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$0)
  [97] call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [98] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word/dword/signed dword) $f
  [99] (byte) print_char::ch#2 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$2)
  [100] call print_char 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [101] return 
  to:@return
print_str: scope:[print_str]  from compare::@39
  [102] phi()
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [103] (byte*) print_char_cursor#2 ← phi( print_str/(byte*) print_char_cursor#14 print_str::@2/(byte*) print_char_cursor#1 )
  [103] (byte*) print_str::str#2 ← phi( print_str/(byte*) print_str::str#1 print_str::@2/(byte*) print_str::str#0 )
  [104] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [105] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [106] *((byte*) print_char_cursor#2) ← *((byte*) print_str::str#2)
  [107] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#2
  [108] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2
  to:print_str::@1
print_cls: scope:[print_cls]  from main
  [109] phi()
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [110] (byte*) print_cls::sc#2 ← phi( print_cls/((byte*))(word/signed word/dword/signed dword) $400 print_cls::@1/(byte*) print_cls::sc#1 )
  [111] *((byte*) print_cls::sc#2) ← (byte) ' '
  [112] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2
  [113] if((byte*) print_cls::sc#1!=((byte*))(word/signed word/dword/signed dword) $400+(word/signed word/dword/signed dword) $3e8) goto print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [114] return 
  to:@return
