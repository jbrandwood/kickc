@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (byte) conio_cursor_x ← (byte) 0
  [2] (byte) conio_cursor_y ← (byte) 0
  [3] (byte*) conio_cursor_text ← (const nomodify byte*) CONIO_SCREEN_TEXT
  [4] (byte*) conio_cursor_color ← (const nomodify byte*) CONIO_SCREEN_COLORS
  to:@2
@2: scope:[]  from @1
  [5] phi()
  [6] call main 
  to:@end
@end: scope:[]  from @2
  [7] phi()

(void()) main()
main: scope:[main]  from @2
  [8] phi()
  [9] call clrscr 
  to:main::@1
main::@1: scope:[main]  from main
  [10] phi()
  [11] call cputc 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [12] phi()
  [13] call cputs 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [14] phi()
  [15] call printf_string 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [16] phi()
  [17] call cputs 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [18] phi()
  [19] call printf_string 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [20] phi()
  [21] call cputs 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [22] phi()
  [23] call printf_string 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [24] phi()
  [25] call cputs 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [26] phi()
  [27] call printf_string 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [28] phi()
  [29] call cputs 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [30] phi()
  [31] call cputc 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [32] phi()
  [33] call cputs 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [34] phi()
  [35] call printf_string 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [36] phi()
  [37] call cputs 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [38] phi()
  [39] call printf_string 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [40] phi()
  [41] call cputs 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [42] phi()
  [43] call printf_string 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [44] phi()
  [45] call cputs 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [46] phi()
  [47] call printf_string 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [48] phi()
  [49] call cputs 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [50] phi()
  [51] call cputc 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [52] phi()
  [53] call cputs 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [54] phi()
  [55] call printf_sint 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [56] phi()
  [57] call cputs 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [58] phi()
  [59] call printf_sint 
  to:main::@26
main::@26: scope:[main]  from main::@25
  [60] phi()
  [61] call cputs 
  to:main::@27
main::@27: scope:[main]  from main::@26
  [62] phi()
  [63] call printf_sint 
  to:main::@28
main::@28: scope:[main]  from main::@27
  [64] phi()
  [65] call cputs 
  to:main::@29
main::@29: scope:[main]  from main::@28
  [66] phi()
  [67] call printf_sint 
  to:main::@30
main::@30: scope:[main]  from main::@29
  [68] phi()
  [69] call cputs 
  to:main::@31
main::@31: scope:[main]  from main::@30
  [70] phi()
  [71] call cputc 
  to:main::@32
main::@32: scope:[main]  from main::@31
  [72] phi()
  [73] call cputs 
  to:main::@33
main::@33: scope:[main]  from main::@32
  [74] phi()
  [75] call printf_sint 
  to:main::@34
main::@34: scope:[main]  from main::@33
  [76] phi()
  [77] call cputs 
  to:main::@35
main::@35: scope:[main]  from main::@34
  [78] phi()
  [79] call printf_sint 
  to:main::@36
main::@36: scope:[main]  from main::@35
  [80] phi()
  [81] call cputs 
  to:main::@37
main::@37: scope:[main]  from main::@36
  [82] phi()
  [83] call printf_sint 
  to:main::@38
main::@38: scope:[main]  from main::@37
  [84] phi()
  [85] call cputs 
  to:main::@39
main::@39: scope:[main]  from main::@38
  [86] phi()
  [87] call printf_sint 
  to:main::@40
main::@40: scope:[main]  from main::@39
  [88] phi()
  [89] call cputs 
  to:main::@41
main::@41: scope:[main]  from main::@40
  [90] phi()
  [91] call cputc 
  to:main::@42
main::@42: scope:[main]  from main::@41
  [92] phi()
  [93] call cputs 
  to:main::@43
main::@43: scope:[main]  from main::@42
  [94] phi()
  [95] call printf_sint 
  to:main::@44
main::@44: scope:[main]  from main::@43
  [96] phi()
  [97] call cputs 
  to:main::@45
main::@45: scope:[main]  from main::@44
  [98] phi()
  [99] call printf_sint 
  to:main::@46
main::@46: scope:[main]  from main::@45
  [100] phi()
  [101] call cputs 
  to:main::@47
main::@47: scope:[main]  from main::@46
  [102] phi()
  [103] call printf_sint 
  to:main::@48
main::@48: scope:[main]  from main::@47
  [104] phi()
  [105] call cputs 
  to:main::@49
main::@49: scope:[main]  from main::@48
  [106] phi()
  [107] call printf_sint 
  to:main::@50
main::@50: scope:[main]  from main::@49
  [108] phi()
  [109] call cputs 
  to:main::@51
main::@51: scope:[main]  from main::@50
  [110] phi()
  [111] call cputc 
  to:main::@52
main::@52: scope:[main]  from main::@51
  [112] phi()
  [113] call cputs 
  to:main::@53
main::@53: scope:[main]  from main::@52
  [114] phi()
  [115] call printf_sint 
  to:main::@54
main::@54: scope:[main]  from main::@53
  [116] phi()
  [117] call cputs 
  to:main::@55
main::@55: scope:[main]  from main::@54
  [118] phi()
  [119] call printf_sint 
  to:main::@56
main::@56: scope:[main]  from main::@55
  [120] phi()
  [121] call cputs 
  to:main::@57
main::@57: scope:[main]  from main::@56
  [122] phi()
  [123] call printf_sint 
  to:main::@58
main::@58: scope:[main]  from main::@57
  [124] phi()
  [125] call cputs 
  to:main::@59
main::@59: scope:[main]  from main::@58
  [126] phi()
  [127] call printf_sint 
  to:main::@60
main::@60: scope:[main]  from main::@59
  [128] phi()
  [129] call cputs 
  to:main::@61
main::@61: scope:[main]  from main::@60
  [130] phi()
  [131] call cputc 
  to:main::@62
main::@62: scope:[main]  from main::@61
  [132] phi()
  [133] call cputs 
  to:main::@63
main::@63: scope:[main]  from main::@62
  [134] phi()
  [135] call printf_uint 
  to:main::@64
main::@64: scope:[main]  from main::@63
  [136] phi()
  [137] call cputs 
  to:main::@65
main::@65: scope:[main]  from main::@64
  [138] phi()
  [139] call printf_uint 
  to:main::@66
main::@66: scope:[main]  from main::@65
  [140] phi()
  [141] call cputs 
  to:main::@67
main::@67: scope:[main]  from main::@66
  [142] phi()
  [143] call printf_uint 
  to:main::@68
main::@68: scope:[main]  from main::@67
  [144] phi()
  [145] call cputs 
  to:main::@69
main::@69: scope:[main]  from main::@68
  [146] phi()
  [147] call printf_uint 
  to:main::@70
main::@70: scope:[main]  from main::@69
  [148] phi()
  [149] call cputs 
  to:main::@71
main::@71: scope:[main]  from main::@70
  [150] phi()
  [151] call cputc 
  to:main::@72
main::@72: scope:[main]  from main::@71
  [152] phi()
  [153] call cputs 
  to:main::@73
main::@73: scope:[main]  from main::@72
  [154] phi()
  [155] call printf_uint 
  to:main::@74
main::@74: scope:[main]  from main::@73
  [156] phi()
  [157] call cputs 
  to:main::@75
main::@75: scope:[main]  from main::@74
  [158] phi()
  [159] call printf_uint 
  to:main::@76
main::@76: scope:[main]  from main::@75
  [160] phi()
  [161] call cputs 
  to:main::@77
main::@77: scope:[main]  from main::@76
  [162] phi()
  [163] call printf_uint 
  to:main::@78
main::@78: scope:[main]  from main::@77
  [164] phi()
  [165] call cputs 
  to:main::@79
main::@79: scope:[main]  from main::@78
  [166] phi()
  [167] call printf_uint 
  to:main::@80
main::@80: scope:[main]  from main::@79
  [168] phi()
  [169] call cputs 
  to:main::@81
main::@81: scope:[main]  from main::@80
  [170] phi()
  [171] call cputc 
  to:main::@82
main::@82: scope:[main]  from main::@81
  [172] phi()
  [173] call cputs 
  to:main::@83
main::@83: scope:[main]  from main::@82
  [174] phi()
  [175] call printf_uint 
  to:main::@84
main::@84: scope:[main]  from main::@83
  [176] phi()
  [177] call cputs 
  to:main::@85
main::@85: scope:[main]  from main::@84
  [178] phi()
  [179] call printf_uint 
  to:main::@86
main::@86: scope:[main]  from main::@85
  [180] phi()
  [181] call cputs 
  to:main::@87
main::@87: scope:[main]  from main::@86
  [182] phi()
  [183] call printf_uint 
  to:main::@88
main::@88: scope:[main]  from main::@87
  [184] phi()
  [185] call cputs 
  to:main::@89
main::@89: scope:[main]  from main::@88
  [186] phi()
  [187] call printf_uint 
  to:main::@90
main::@90: scope:[main]  from main::@89
  [188] phi()
  [189] call cputs 
  to:main::@return
main::@return: scope:[main]  from main::@90
  [190] return 
  to:@return

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from main::@10 main::@12 main::@14 main::@16 main::@18 main::@2 main::@20 main::@22 main::@24 main::@26 main::@28 main::@30 main::@32 main::@34 main::@36 main::@38 main::@4 main::@40 main::@42 main::@44 main::@46 main::@48 main::@50 main::@52 main::@54 main::@56 main::@58 main::@6 main::@60 main::@62 main::@64 main::@66 main::@68 main::@70 main::@72 main::@74 main::@76 main::@78 main::@8 main::@80 main::@82 main::@84 main::@86 main::@88 main::@90 printf_number_buffer::@5 printf_string::@2
  [191] (to_nomodify byte*) cputs::s#49 ← phi( main::@10/(const byte*) main::s4 main::@12/(const byte*) main::s5 main::@14/(const byte*) main::s1 main::@16/(const byte*) main::s1 main::@18/(const byte*) main::s1 main::@2/(const byte*) main::s main::@20/(const byte*) main::s4 main::@22/(const byte*) main::s10 main::@24/(const byte*) main::s1 main::@26/(const byte*) main::s1 main::@28/(const byte*) main::s1 main::@30/(const byte*) main::s4 main::@32/(const byte*) main::s15 main::@34/(const byte*) main::s1 main::@36/(const byte*) main::s1 main::@38/(const byte*) main::s1 main::@4/(const byte*) main::s1 main::@40/(const byte*) main::s4 main::@42/(const byte*) main::s20 main::@44/(const byte*) main::s1 main::@46/(const byte*) main::s1 main::@48/(const byte*) main::s1 main::@50/(const byte*) main::s4 main::@52/(const byte*) main::s25 main::@54/(const byte*) main::s1 main::@56/(const byte*) main::s1 main::@58/(const byte*) main::s1 main::@6/(const byte*) main::s1 main::@60/(const byte*) main::s4 main::@62/(const byte*) main::s30 main::@64/(const byte*) main::s1 main::@66/(const byte*) main::s1 main::@68/(const byte*) main::s1 main::@70/(const byte*) main::s4 main::@72/(const byte*) main::s35 main::@74/(const byte*) main::s1 main::@76/(const byte*) main::s1 main::@78/(const byte*) main::s1 main::@8/(const byte*) main::s1 main::@80/(const byte*) main::s4 main::@82/(const byte*) main::s40 main::@84/(const byte*) main::s1 main::@86/(const byte*) main::s1 main::@88/(const byte*) main::s1 main::@90/(const byte*) main::s4 printf_number_buffer::@5/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS printf_string::@2/(to_nomodify byte*) cputs::s#2 )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [192] (to_nomodify byte*) cputs::s#48 ← phi( cputs/(to_nomodify byte*) cputs::s#49 cputs::@2/(to_nomodify byte*) cputs::s#0 )
  [193] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#48)
  [194] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#48
  [195] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [196] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [197] (byte) cputc::c#0 ← (byte) cputs::c#1
  [198] call cputc 
  to:cputs::@1

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from cputs::@2 main::@1 main::@11 main::@21 main::@31 main::@41 main::@51 main::@61 main::@71 main::@81 printf_number_buffer::@9 printf_padding::@2
  [199] (byte) cputc::c#12 ← phi( cputs::@2/(byte) cputc::c#0 main::@1/(byte) '%' main::@11/(byte) '%' main::@21/(byte) '%' main::@31/(byte) '%' main::@41/(byte) '%' main::@51/(byte) '%' main::@61/(byte) '%' main::@71/(byte) '%' main::@81/(byte) '%' printf_number_buffer::@9/(byte) cputc::c#2 printf_padding::@2/(byte) cputc::c#1 )
  [200] if((byte) cputc::c#12==(byte) '
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [201] *((byte*) conio_cursor_text) ← (byte) cputc::c#12
  [202] (byte*) conio_cursor_text ← ++ (byte*) conio_cursor_text
  [203] *((byte*) conio_cursor_color) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  [204] (byte*) conio_cursor_color ← ++ (byte*) conio_cursor_color
  [205] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x
  [206] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [207] (byte) conio_cursor_x ← (byte) 0
  [208] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y
  [209] call cscroll 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [210] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [211] phi()
  [212] call cputln 
  to:cputc::@return

(void()) cputln()
cputln: scope:[cputln]  from cputc::@1
  [213] (word) cputln::ln_offset#0 ← (byte) $28 - (byte) conio_cursor_x
  [214] (byte*~) cputln::$1 ← (byte*) conio_cursor_text + (word) cputln::ln_offset#0
  [215] (byte*) conio_cursor_text ← (byte*~) cputln::$1
  [216] (byte*~) cputln::$2 ← (byte*) conio_cursor_color + (word) cputln::ln_offset#0
  [217] (byte*) conio_cursor_color ← (byte*~) cputln::$2
  [218] (byte) conio_cursor_x ← (byte) 0
  [219] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y
  [220] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [221] return 
  to:@return

(void()) cscroll()
cscroll: scope:[cscroll]  from cputc::@3 cputln
  [222] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [223] phi()
  [224] call memcpy 
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [225] phi()
  [226] call memcpy 
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [227] phi()
  [228] call memset 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [229] phi()
  [230] call memset 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [231] (byte*~) cscroll::$7 ← (byte*) conio_cursor_text - (byte) $28
  [232] (byte*) conio_cursor_text ← (byte*~) cscroll::$7
  [233] (byte*~) cscroll::$8 ← (byte*) conio_cursor_color - (byte) $28
  [234] (byte*) conio_cursor_color ← (byte*~) cscroll::$8
  [235] (byte) conio_cursor_y ← -- (byte) conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [236] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [237] (byte) memset::c#4 ← phi( cscroll::@3/(byte) ' ' cscroll::@4/(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT )
  [237] (void*) memset::str#3 ← phi( cscroll::@3/(void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(word)(number) $19*(number) $28-(byte) $28 cscroll::@4/(void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(word)(number) $19*(number) $28-(byte) $28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [238] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28
  [239] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [240] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [241] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [242] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [243] *((byte*) memset::dst#2) ← (byte) memset::c#4
  [244] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [245] (void*) memcpy::destination#2 ← phi( cscroll::@1/(void*)(const nomodify byte*) CONIO_SCREEN_TEXT cscroll::@2/(void*)(const nomodify byte*) CONIO_SCREEN_COLORS )
  [245] (void*) memcpy::source#2 ← phi( cscroll::@1/(void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(byte) $28 cscroll::@2/(void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(byte) $28 )
  [246] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28
  [247] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
  [248] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [249] (byte*) memcpy::dst#2 ← phi( memcpy/(byte*) memcpy::dst#4 memcpy::@2/(byte*) memcpy::dst#1 )
  [249] (byte*) memcpy::src#2 ← phi( memcpy/(byte*) memcpy::src#4 memcpy::@2/(byte*) memcpy::src#1 )
  [250] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [251] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [252] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2)
  [253] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  [254] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2
  to:memcpy::@1

(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@63 main::@65 main::@67 main::@69 main::@73 main::@75 main::@77 main::@79 main::@83 main::@85 main::@87 main::@89
  [255] (byte) printf_uint::format_upper_case#12 ← phi( main::@63/(byte) 0 main::@65/(byte) 0 main::@67/(byte) 0 main::@69/(byte) 0 main::@73/(byte) 0 main::@75/(byte) 0 main::@77/(byte) 0 main::@79/(byte) 0 main::@83/(byte) 1 main::@85/(byte) 1 main::@87/(byte) 1 main::@89/(byte) 1 )
  [255] (byte) printf_uint::format_radix#12 ← phi( main::@63/(const byte) OCTAL main::@65/(const byte) OCTAL main::@67/(const byte) OCTAL main::@69/(const byte) OCTAL main::@73/(const byte) HEXADECIMAL main::@75/(const byte) HEXADECIMAL main::@77/(const byte) HEXADECIMAL main::@79/(const byte) HEXADECIMAL main::@83/(const byte) HEXADECIMAL main::@85/(const byte) HEXADECIMAL main::@87/(const byte) HEXADECIMAL main::@89/(const byte) HEXADECIMAL )
  [255] (word) printf_uint::uvalue#12 ← phi( main::@63/(byte) 1 main::@65/(byte) $b main::@67/(byte) $6f main::@69/(word) $457 main::@73/(byte) 1 main::@75/(byte) $b main::@77/(byte) $6f main::@79/(word) $457 main::@83/(byte) 1 main::@85/(byte) $b main::@87/(byte) $6f main::@89/(word) $457 )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [256] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0
  [257] (word) utoa::value#2 ← (word) printf_uint::uvalue#12
  [258] (byte) utoa::radix#1 ← (byte) printf_uint::format_radix#12
  [259] call utoa 
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [260] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer)
  [261] (byte) printf_number_buffer::format_upper_case#1 ← (byte) printf_uint::format_upper_case#12
  [262] call printf_number_buffer 
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [263] return 
  to:@return

(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_sint::@5 printf_uint::@2
  [264] (byte) printf_number_buffer::format_upper_case#10 ← phi( printf_sint::@5/(byte) 0 printf_uint::@2/(byte) printf_number_buffer::format_upper_case#1 )
  [264] (byte) printf_number_buffer::buffer_sign#10 ← phi( printf_sint::@5/(byte) printf_number_buffer::buffer_sign#0 printf_uint::@2/(byte) printf_number_buffer::buffer_sign#1 )
  [264] (byte) printf_number_buffer::format_zero_padding#10 ← phi( printf_sint::@5/(byte) printf_number_buffer::format_zero_padding#0 printf_uint::@2/(byte) 0 )
  [264] (byte) printf_number_buffer::format_justify_left#10 ← phi( printf_sint::@5/(byte) printf_number_buffer::format_justify_left#0 printf_uint::@2/(byte) 0 )
  [264] (byte) printf_number_buffer::format_min_length#2 ← phi( printf_sint::@5/(byte) 3 printf_uint::@2/(byte) 0 )
  [265] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  [266] phi()
  [267] call strlen 
  [268] (word) strlen::return#2 ← (word) strlen::len#2
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@6
  [269] (word~) printf_number_buffer::$19 ← (word) strlen::return#2
  [270] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19
  [271] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [272] (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#0
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@7
  [273] (signed byte) printf_number_buffer::len#2 ← phi( printf_number_buffer::@14/(signed byte) printf_number_buffer::len#0 printf_number_buffer::@7/(signed byte) printf_number_buffer::len#1 )
  [274] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2
  [275] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@21
  to:printf_number_buffer::@1
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [276] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@21
  [277] (signed byte) printf_number_buffer::padding#10 ← phi( printf_number_buffer/(signed byte) 0 printf_number_buffer::@21/(signed byte) printf_number_buffer::padding#1 printf_number_buffer::@13/(signed byte) 0 )
  [278] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [279] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@17
  [280] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@8
  to:printf_number_buffer::@2
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@16
  [281] (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#10
  [282] call printf_padding 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16 printf_number_buffer::@17 printf_number_buffer::@8
  [283] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [284] (byte) cputc::c#2 ← (byte) printf_number_buffer::buffer_sign#10
  [285] call cputc 
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  [286] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [287] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@4
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@18
  [288] (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#10
  [289] call printf_padding 
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@18 printf_number_buffer::@3
  [290] if((byte) 0==(byte) printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [291] phi()
  [292] call strupr 
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@4
  [293] phi()
  [294] call cputs 
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [295] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@15
  [296] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@20
  [297] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  [298] (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#10
  [299] call printf_padding 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@15 printf_number_buffer::@19 printf_number_buffer::@20
  [300] return 
  to:@return

(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8 printf_string::@4 printf_string::@5
  [301] (byte) printf_padding::pad#7 ← phi( printf_number_buffer::@10/(byte) '0' printf_number_buffer::@12/(byte) ' ' printf_number_buffer::@8/(byte) ' ' printf_string::@4/(byte) ' ' printf_string::@5/(byte) ' ' )
  [301] (byte) printf_padding::length#6 ← phi( printf_number_buffer::@10/(byte) printf_padding::length#1 printf_number_buffer::@12/(byte) printf_padding::length#2 printf_number_buffer::@8/(byte) printf_padding::length#0 printf_string::@4/(byte) printf_padding::length#3 printf_string::@5/(byte) printf_padding::length#4 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [302] (byte) printf_padding::i#2 ← phi( printf_padding/(byte) 0 printf_padding::@3/(byte) printf_padding::i#1 )
  [303] if((byte) printf_padding::i#2<(byte) printf_padding::length#6) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [304] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [305] (byte) cputc::c#1 ← (byte) printf_padding::pad#7
  [306] call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [307] (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#2
  to:printf_padding::@1

(byte*()) strupr((byte*) strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  [308] phi()
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@3
  [309] (byte*) strupr::src#2 ← phi( strupr/(const byte*) strupr::str#0 strupr::@3/(byte*) strupr::src#1 )
  [310] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@1
  [311] return 
  to:@return
strupr::@2: scope:[strupr]  from strupr::@1
  [312] (byte) toupper::ch#0 ← *((byte*) strupr::src#2)
  [313] call toupper 
  [314] (byte) toupper::return#3 ← (byte) toupper::return#2
  to:strupr::@3
strupr::@3: scope:[strupr]  from strupr::@2
  [315] (byte~) strupr::$0 ← (byte) toupper::return#3
  [316] *((byte*) strupr::src#2) ← (byte~) strupr::$0
  [317] (byte*) strupr::src#1 ← ++ (byte*) strupr::src#2
  to:strupr::@1

(byte()) toupper((byte) toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  [318] if((byte) toupper::ch#0<(byte) 'a') goto toupper::@return
  to:toupper::@2
toupper::@2: scope:[toupper]  from toupper
  [319] if((byte) toupper::ch#0<=(byte) 'z') goto toupper::@1
  to:toupper::@return
toupper::@1: scope:[toupper]  from toupper::@2
  [320] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a'
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper toupper::@1 toupper::@2
  [321] (byte) toupper::return#2 ← phi( toupper::@1/(byte) toupper::return#0 toupper/(byte) toupper::ch#0 toupper::@2/(byte) toupper::ch#0 )
  [322] return 
  to:@return

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6 printf_string::@3
  [323] (byte*) strlen::str#5 ← phi( printf_number_buffer::@6/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS printf_string::@3/(byte*) strlen::str#2 )
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [324] (word) strlen::len#2 ← phi( strlen/(word) 0 strlen::@2/(word) strlen::len#1 )
  [324] (byte*) strlen::str#3 ← phi( strlen/(byte*) strlen::str#5 strlen::@2/(byte*) strlen::str#0 )
  [325] if((byte) 0!=*((byte*) strlen::str#3)) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [326] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [327] (word) strlen::len#1 ← ++ (word) strlen::len#2
  [328] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#3
  to:strlen::@1

(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
utoa: scope:[utoa]  from printf_sint::@2 printf_uint::@1
  [329] (word) utoa::value#10 ← phi( printf_sint::@2/(word) utoa::value#1 printf_uint::@1/(word) utoa::value#2 )
  [329] (byte) utoa::radix#2 ← phi( printf_sint::@2/(const byte) DECIMAL printf_uint::@1/(byte) utoa::radix#1 )
  [330] if((byte) utoa::radix#2==(const byte) DECIMAL) goto utoa::@1
  to:utoa::@2
utoa::@2: scope:[utoa]  from utoa
  [331] if((byte) utoa::radix#2==(const byte) HEXADECIMAL) goto utoa::@1
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@2
  [332] if((byte) utoa::radix#2==(const byte) OCTAL) goto utoa::@1
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@3
  [333] if((byte) utoa::radix#2==(const byte) BINARY) goto utoa::@1
  to:utoa::@5
utoa::@5: scope:[utoa]  from utoa::@4
  [334] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e'
  [335] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r'
  [336] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r'
  [337] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@5 utoa::@8
  [338] return 
  to:@return
utoa::@1: scope:[utoa]  from utoa utoa::@2 utoa::@3 utoa::@4
  [339] (word*) utoa::digit_values#8 ← phi( utoa/(const word*) RADIX_DECIMAL_VALUES utoa::@2/(const word*) RADIX_HEXADECIMAL_VALUES utoa::@3/(const word*) RADIX_OCTAL_VALUES utoa::@4/(const word*) RADIX_BINARY_VALUES )
  [339] (byte) utoa::max_digits#7 ← phi( utoa/(byte) 5 utoa::@2/(byte) 4 utoa::@3/(byte) 6 utoa::@4/(byte) $10 )
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@1 utoa::@9
  [340] (byte*) utoa::buffer#10 ← phi( utoa::@9/(byte*) utoa::buffer#15 utoa::@1/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [340] (byte) utoa::started#2 ← phi( utoa::@9/(byte) utoa::started#4 utoa::@1/(byte) 0 )
  [340] (word) utoa::value#3 ← phi( utoa::@9/(word) utoa::value#7 utoa::@1/(word) utoa::value#10 )
  [340] (byte) utoa::digit#2 ← phi( utoa::@9/(byte) utoa::digit#1 utoa::@1/(byte) 0 )
  [341] (byte~) utoa::$4 ← (byte) utoa::max_digits#7 - (byte) 1
  [342] if((byte) utoa::digit#2<(byte~) utoa::$4) goto utoa::@7
  to:utoa::@8
utoa::@8: scope:[utoa]  from utoa::@6
  [343] (byte~) utoa::$11 ← (byte)(word) utoa::value#3
  [344] *((byte*) utoa::buffer#10) ← *((const byte*) DIGITS + (byte~) utoa::$11)
  [345] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#10
  [346] *((byte*) utoa::buffer#3) ← (byte) 0
  to:utoa::@return
utoa::@7: scope:[utoa]  from utoa::@6
  [347] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1
  [348] (word) utoa::digit_value#0 ← *((word*) utoa::digit_values#8 + (byte~) utoa::$10)
  [349] if((byte) 0!=(byte) utoa::started#2) goto utoa::@10
  to:utoa::@12
utoa::@12: scope:[utoa]  from utoa::@7
  [350] if((word) utoa::value#3>=(word) utoa::digit_value#0) goto utoa::@10
  to:utoa::@9
utoa::@9: scope:[utoa]  from utoa::@11 utoa::@12
  [351] (byte*) utoa::buffer#15 ← phi( utoa::@12/(byte*) utoa::buffer#10 utoa::@11/(byte*) utoa::buffer#4 )
  [351] (byte) utoa::started#4 ← phi( utoa::@12/(byte) utoa::started#2 utoa::@11/(byte) 1 )
  [351] (word) utoa::value#7 ← phi( utoa::@12/(word) utoa::value#3 utoa::@11/(word) utoa::value#0 )
  [352] (byte) utoa::digit#1 ← ++ (byte) utoa::digit#2
  to:utoa::@6
utoa::@10: scope:[utoa]  from utoa::@12 utoa::@7
  [353] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#10
  [354] (word) utoa_append::value#0 ← (word) utoa::value#3
  [355] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0
  [356] call utoa_append 
  [357] (word) utoa_append::return#0 ← (word) utoa_append::value#2
  to:utoa::@11
utoa::@11: scope:[utoa]  from utoa::@10
  [358] (word) utoa::value#0 ← (word) utoa_append::return#0
  [359] (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#10
  to:utoa::@9

(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@10
  [360] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [361] (byte) utoa_append::digit#2 ← phi( utoa_append/(byte) 0 utoa_append::@2/(byte) utoa_append::digit#1 )
  [361] (word) utoa_append::value#2 ← phi( utoa_append/(word) utoa_append::value#0 utoa_append::@2/(word) utoa_append::value#1 )
  [362] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [363] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2)
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [364] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [365] (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2
  [366] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0
  to:utoa_append::@1

(void()) printf_sint((signed word) printf_sint::value , (byte) printf_sint::format_min_length , (byte) printf_sint::format_justify_left , (byte) printf_sint::format_sign_always , (byte) printf_sint::format_zero_padding , (byte) printf_sint::format_upper_case , (byte) printf_sint::format_radix)
printf_sint: scope:[printf_sint]  from main::@23 main::@25 main::@27 main::@29 main::@33 main::@35 main::@37 main::@39 main::@43 main::@45 main::@47 main::@49 main::@53 main::@55 main::@57 main::@59
  [367] (byte) printf_sint::format_zero_padding#16 ← phi( main::@23/(byte) 0 main::@25/(byte) 0 main::@27/(byte) 0 main::@29/(byte) 0 main::@33/(byte) 0 main::@35/(byte) 0 main::@37/(byte) 0 main::@39/(byte) 0 main::@43/(byte) 0 main::@45/(byte) 0 main::@47/(byte) 0 main::@49/(byte) 0 main::@53/(byte) 1 main::@55/(byte) 1 main::@57/(byte) 1 main::@59/(byte) 0 )
  [367] (byte) printf_sint::format_justify_left#16 ← phi( main::@23/(byte) 0 main::@25/(byte) 0 main::@27/(byte) 0 main::@29/(byte) 0 main::@33/(byte) 1 main::@35/(byte) 1 main::@37/(byte) 1 main::@39/(byte) 1 main::@43/(byte) 0 main::@45/(byte) 0 main::@47/(byte) 0 main::@49/(byte) 0 main::@53/(byte) 0 main::@55/(byte) 0 main::@57/(byte) 0 main::@59/(byte) 0 )
  [367] (byte) printf_sint::format_sign_always#16 ← phi( main::@23/(byte) 0 main::@25/(byte) 0 main::@27/(byte) 0 main::@29/(byte) 0 main::@33/(byte) 0 main::@35/(byte) 0 main::@37/(byte) 0 main::@39/(byte) 0 main::@43/(byte) 1 main::@45/(byte) 1 main::@47/(byte) 1 main::@49/(byte) 1 main::@53/(byte) 0 main::@55/(byte) 0 main::@57/(byte) 0 main::@59/(byte) 0 )
  [367] (signed word) printf_sint::value#17 ← phi( main::@23/(signed byte) 1 main::@25/(signed byte) $b main::@27/(signed byte) $6f main::@29/(signed word) $457 main::@33/(signed byte) -2 main::@35/(signed byte) -$16 main::@37/(signed word) -$de main::@39/(signed word) -$8ae main::@43/(signed byte) 3 main::@45/(signed byte) -$2c main::@47/(signed word) $22b main::@49/(signed word) -$1a0a main::@53/(signed byte) 1 main::@55/(signed byte) $b main::@57/(signed byte) $6f main::@59/(signed word) $457 )
  [368] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0
  [369] if((signed word) printf_sint::value#17<(signed byte) 0) goto printf_sint::@1
  to:printf_sint::@3
printf_sint::@3: scope:[printf_sint]  from printf_sint
  [370] if((byte) 0==(byte) printf_sint::format_sign_always#16) goto printf_sint::@2
  to:printf_sint::@4
printf_sint::@4: scope:[printf_sint]  from printf_sint::@3
  [371] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+'
  to:printf_sint::@2
printf_sint::@2: scope:[printf_sint]  from printf_sint::@1 printf_sint::@3 printf_sint::@4
  [372] (signed word) printf_sint::value#19 ← phi( printf_sint::@1/(signed word) printf_sint::value#0 printf_sint::@3/(signed word) printf_sint::value#17 printf_sint::@4/(signed word) printf_sint::value#17 )
  [373] (word) utoa::value#1 ← (word)(signed word) printf_sint::value#19
  [374] call utoa 
  to:printf_sint::@5
printf_sint::@5: scope:[printf_sint]  from printf_sint::@2
  [375] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer)
  [376] (byte) printf_number_buffer::format_justify_left#0 ← (byte) printf_sint::format_justify_left#16
  [377] (byte) printf_number_buffer::format_zero_padding#0 ← (byte) printf_sint::format_zero_padding#16
  [378] call printf_number_buffer 
  to:printf_sint::@return
printf_sint::@return: scope:[printf_sint]  from printf_sint::@5
  [379] return 
  to:@return
printf_sint::@1: scope:[printf_sint]  from printf_sint
  [380] (signed word) printf_sint::value#0 ← - (signed word) printf_sint::value#17
  [381] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-'
  to:printf_sint::@2

(void()) printf_string((byte*) printf_string::str , (byte) printf_string::format_min_length , (byte) printf_string::format_justify_left)
printf_string: scope:[printf_string]  from main::@13 main::@15 main::@17 main::@19 main::@3 main::@5 main::@7 main::@9
  [382] (byte*) printf_string::str#10 ← phi( main::@13/(const byte*) main::str main::@15/(const byte*) main::str1 main::@17/(const byte*) main::str2 main::@19/(const byte*) main::str3 main::@3/(const byte*) main::str main::@5/(const byte*) main::str1 main::@7/(const byte*) main::str2 main::@9/(const byte*) main::str3 )
  [382] (byte) printf_string::format_justify_left#10 ← phi( main::@13/(byte) 1 main::@15/(byte) 1 main::@17/(byte) 1 main::@19/(byte) 1 main::@3/(byte) 0 main::@5/(byte) 0 main::@7/(byte) 0 main::@9/(byte) 0 )
  to:printf_string::@3
printf_string::@3: scope:[printf_string]  from printf_string
  [383] (byte*) strlen::str#2 ← (byte*) printf_string::str#10
  [384] call strlen 
  [385] (word) strlen::return#3 ← (word) strlen::len#2
  to:printf_string::@6
printf_string::@6: scope:[printf_string]  from printf_string::@3
  [386] (word~) printf_string::$9 ← (word) strlen::return#3
  [387] (signed byte) printf_string::len#0 ← (signed byte)(word~) printf_string::$9
  [388] (signed byte) printf_string::padding#1 ← (signed byte) 3 - (signed byte) printf_string::len#0
  [389] if((signed byte) printf_string::padding#1>=(signed byte) 0) goto printf_string::@10
  to:printf_string::@1
printf_string::@10: scope:[printf_string]  from printf_string::@6
  [390] phi()
  to:printf_string::@1
printf_string::@1: scope:[printf_string]  from printf_string::@10 printf_string::@6
  [391] (signed byte) printf_string::padding#3 ← phi( printf_string::@6/(signed byte) 0 printf_string::@10/(signed byte) printf_string::padding#1 )
  [392] if((byte) 0!=(byte) printf_string::format_justify_left#10) goto printf_string::@2
  to:printf_string::@8
printf_string::@8: scope:[printf_string]  from printf_string::@1
  [393] if((signed byte) 0!=(signed byte) printf_string::padding#3) goto printf_string::@4
  to:printf_string::@2
printf_string::@4: scope:[printf_string]  from printf_string::@8
  [394] (byte) printf_padding::length#3 ← (byte)(signed byte) printf_string::padding#3
  [395] call printf_padding 
  to:printf_string::@2
printf_string::@2: scope:[printf_string]  from printf_string::@1 printf_string::@4 printf_string::@8
  [396] (to_nomodify byte*) cputs::s#2 ← (byte*) printf_string::str#10
  [397] call cputs 
  to:printf_string::@7
printf_string::@7: scope:[printf_string]  from printf_string::@2
  [398] if((byte) 0==(byte) printf_string::format_justify_left#10) goto printf_string::@return
  to:printf_string::@9
printf_string::@9: scope:[printf_string]  from printf_string::@7
  [399] if((signed byte) 0!=(signed byte) printf_string::padding#3) goto printf_string::@5
  to:printf_string::@return
printf_string::@5: scope:[printf_string]  from printf_string::@9
  [400] (byte) printf_padding::length#4 ← (byte)(signed byte) printf_string::padding#3
  [401] call printf_padding 
  to:printf_string::@return
printf_string::@return: scope:[printf_string]  from printf_string::@5 printf_string::@7 printf_string::@9
  [402] return 
  to:@return

(void()) clrscr()
clrscr: scope:[clrscr]  from main
  [403] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [404] (byte*) clrscr::line_cols#5 ← phi( clrscr/(const nomodify byte*) CONIO_SCREEN_COLORS clrscr::@5/(byte*) clrscr::line_cols#1 )
  [404] (byte*) clrscr::line_text#5 ← phi( clrscr/(const nomodify byte*) CONIO_SCREEN_TEXT clrscr::@5/(byte*) clrscr::line_text#1 )
  [404] (byte) clrscr::l#2 ← phi( clrscr/(byte) 0 clrscr::@5/(byte) clrscr::l#1 )
  [405] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [406] (byte) conio_cursor_x ← (byte) 0
  [407] (byte) conio_cursor_y ← (byte) 0
  [408] (byte*) conio_cursor_text ← (const nomodify byte*) CONIO_SCREEN_TEXT
  [409] (byte*) conio_cursor_color ← (const nomodify byte*) CONIO_SCREEN_COLORS
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [410] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [411] (byte) clrscr::c#2 ← phi( clrscr::@1/(byte) 0 clrscr::@4/(byte) clrscr::c#1 )
  [412] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [413] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28
  [414] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28
  [415] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [416] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' '
  [417] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  [418] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2
  to:clrscr::@3
