__constant struct MOS6526_CIA * const CIA1 = (struct MOS6526_CIA *) 56320
__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
__constant char OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = 8
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = $b
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = $a
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = 9
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char OFFSET_STRUCT_TIME_OF_DAY_HOURS = 3
__constant char OFFSET_STRUCT_TIME_OF_DAY_MIN = 2
__constant char OFFSET_STRUCT_TIME_OF_DAY_SEC = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
__loadstore struct TIME_OF_DAY TOD_ZERO = { TENTHS: 0, SEC: 0, MIN: 0, HOURS: 0 } // mem[4]
void __start()
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:10 57731.11538461538
__loadstore char conio_cursor_y // zp[1]:11 744209.488372093
__loadstore char *conio_line_color // zp[2]:14 650029.6470588236
__loadstore char *conio_line_text // zp[2]:12 631457.3714285714
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // reg byte a 150001.5
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:22 2002.0
char *gotoxy::$6 // zp[2]:18 2002.0
unsigned int gotoxy::$7 // zp[2]:18 1501.5
unsigned int gotoxy::$8 // zp[2]:20 2002.0
unsigned int gotoxy::$9 // zp[2]:18 2002.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:18 1001.0
char gotoxy::x
char gotoxy::y
char gotoxy::y#2 // reg byte x 22.0
char gotoxy::y#6 // reg byte x 671.0
char gotoxy::y#7 // reg byte x 667.3333333333334
void main()
char main::$6 // reg byte a 202.0
unsigned int main::i
unsigned int main::i#1 // i zp[2]:2 202.0
unsigned int main::i#2 // i zp[2]:2 42.08333333333333
__constant char main::s[7] = "time: "
__constant char main::s1[5] = "qwe "
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:29
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:29 1.0000000001E10
char *memcpy::dst#2 // dst zp[2]:29 1.0033333334666666E10
char *memcpy::dst#4 // dst zp[2]:29 2.00000002E8
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:8
char *memcpy::src
char *memcpy::src#1 // src zp[2]:8 2.0000000002E10
char *memcpy::src#2 // src zp[2]:8 1.002500000125E10
char *memcpy::src#4 // src zp[2]:8 1.00000001E8
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:27 1.26250000025E9
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1.4285714287142856E9
char *memset::dst
char *memset::dst#1 // dst zp[2]:8 2.0000000002E10
char *memset::dst#2 // dst zp[2]:8 1.3366666668333332E10
char *memset::dst#4 // dst zp[2]:8 2.00000002E8
char *memset::end
char *memset::end#0 // end zp[2]:29 1.6833333336666665E9
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:8
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
__constant char *printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // reg byte a 7001.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1.0000001E7
void (*printf_str::putc)(char)
void (*printf_str::putc#6)(char) // putc zp[2]:4
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:6 1.0000001E7
const char *printf_str::s#5 // s zp[2]:6 1.5050002E7
const char *printf_str::s#6 // s zp[2]:6 100001.0
void printf_string(void (*putc)(char) , char *str , char format_min_length , char format_justify_left)
struct printf_format_string printf_string::format
char printf_string::format_justify_left
char printf_string::format_min_length
signed char printf_string::len
signed char printf_string::padding
void (*printf_string::putc)(char)
__constant void (*printf_string::putc#0)(char) = &cputc // putc
char *printf_string::str
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
__constant void (*printf_uint::putc#0)(char) = &cputc // putc
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // uvalue zp[2]:2 367.33333333333337
__constant char tod_buffer[] = "00:00:00:00"
void tod_init(char tod_TENTHS , char tod_SEC , char tod_MIN , char tod_HOURS)
struct TIME_OF_DAY tod_init::tod
char tod_init::tod_HOURS
char tod_init::tod_HOURS#0 // reg byte y 37.33333333333333
char tod_init::tod_MIN
char tod_init::tod_MIN#0 // reg byte x 22.4
char tod_init::tod_SEC
char tod_init::tod_SEC#0 // tod_SEC zp[1]:16 16.0
char tod_init::tod_TENTHS
char tod_init::tod_TENTHS#0 // tod_TENTHS zp[1]:17 12.444444444444443
struct TIME_OF_DAY tod_read()
char tod_read::hours
char tod_read::mins
struct TIME_OF_DAY tod_read::return
char tod_read::return_HOURS
char tod_read::return_HOURS#0 // return_HOURS zp[1]:24 12.444444444444443
char tod_read::return_HOURS#1 // reg byte a 5.5
char tod_read::return_MIN
char tod_read::return_MIN#0 // reg byte a 16.0
char tod_read::return_MIN#1 // return_MIN zp[1]:16 5.5
char tod_read::return_SEC
char tod_read::return_SEC#0 // reg byte x 22.4
char tod_read::return_SEC#1 // reg byte x 5.5
char tod_read::return_TENTHS
char tod_read::return_TENTHS#0 // reg byte y 37.33333333333333
char tod_read::return_TENTHS#1 // reg byte y 5.5
char tod_read::secs
char tod_read::tenths
char tod_read::tod_HOURS
char tod_read::tod_MIN
char tod_read::tod_SEC
char tod_read::tod_TENTHS
char * tod_str(char tod_TENTHS , char tod_SEC , char tod_MIN , char tod_HOURS)
char tod_str::$0 // reg byte a 202.0
char tod_str::$1 // reg byte a 202.0
char tod_str::$10 // reg byte a 202.0
char tod_str::$11 // reg byte a 202.0
char tod_str::$12 // reg byte a 202.0
char tod_str::$13 // reg byte a 202.0
char tod_str::$14 // reg byte a 202.0
char tod_str::$15 // reg byte a 202.0
char tod_str::$2 // reg byte a 202.0
char tod_str::$3 // reg byte a 202.0
char tod_str::$4 // reg byte a 202.0
char tod_str::$5 // reg byte a 202.0
char tod_str::$6 // reg byte a 202.0
char tod_str::$7 // reg byte a 202.0
char tod_str::$8 // reg byte a 202.0
char tod_str::$9 // reg byte a 202.0
char *tod_str::return
struct TIME_OF_DAY tod_str::tod
char tod_str::tod_HOURS
char tod_str::tod_HOURS#0 // reg byte x 53.25
char tod_str::tod_MIN
char tod_str::tod_MIN#0 // reg byte y 19.363636363636363
char tod_str::tod_SEC
char tod_str::tod_SEC#0 // tod_SEC zp[1]:17 11.833333333333332
char tod_str::tod_TENTHS
char tod_str::tod_TENTHS#0 // tod_TENTHS zp[1]:24 8.52
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 2000002.0
char utoa::$11 // reg byte x 20002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:6 287143.2857142857
char *utoa::buffer#14 // buffer zp[2]:6 1500001.5
char *utoa::buffer#3 // buffer zp[2]:6 20002.0
char *utoa::buffer#4 // buffer zp[2]:6 2000002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:17 2000002.0
char utoa::digit#2 // digit zp[1]:17 285714.5714285714
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:25 600000.6000000001
unsigned int *utoa::digit_values
char utoa::max_digits
__constant char utoa::max_digits#1 = 5 // max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 500000.5
char utoa::started#4 // reg byte x 1000001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:4 1000001.0
unsigned int utoa::value#1 // value zp[2]:4 5501.0
unsigned int utoa::value#2 // value zp[2]:4 572857.857142857
unsigned int utoa::value#6 // value zp[2]:4 1500001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:6 1375000.25
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.0000000001E10
char utoa_append::digit#2 // reg byte x 1.00050000015E10
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:4 2000002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:25 3.3335000005E9
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:4 3666667.333333333
unsigned int utoa_append::value#1 // value zp[2]:4 2.0000000002E10
unsigned int utoa_append::value#2 // value zp[2]:4 5.001833334166666E9

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[2]:2 [ main::i#2 main::i#1 printf_uint::uvalue#0 ]
reg byte x [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 ]
zp[2]:4 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 printf_str::putc#6 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
zp[2]:6 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 printf_str::s#5 printf_str::s#6 printf_str::s#0 ]
zp[2]:8 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[1]:10 [ conio_cursor_x ]
zp[1]:11 [ conio_cursor_y ]
zp[2]:12 [ conio_line_text ]
zp[2]:14 [ conio_line_color ]
reg byte a [ cputc::c#0 ]
reg byte x [ tod_init::tod_MIN#0 ]
reg byte y [ tod_init::tod_HOURS#0 ]
reg byte y [ tod_read::return_TENTHS#1 ]
reg byte x [ tod_read::return_SEC#1 ]
zp[1]:16 [ tod_read::return_MIN#1 tod_init::tod_SEC#0 ]
reg byte a [ tod_read::return_HOURS#1 ]
zp[1]:17 [ tod_str::tod_SEC#0 tod_init::tod_TENTHS#0 utoa::digit#2 utoa::digit#1 ]
reg byte y [ tod_str::tod_MIN#0 ]
reg byte x [ tod_str::tod_HOURS#0 ]
reg byte a [ main::$6 ]
zp[2]:18 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:20 [ gotoxy::$8 ]
zp[2]:22 [ gotoxy::$5 ]
zp[1]:24 [ tod_read::return_HOURS#0 tod_str::tod_TENTHS#0 ]
reg byte a [ tod_read::return_MIN#0 ]
reg byte x [ tod_read::return_SEC#0 ]
reg byte y [ tod_read::return_TENTHS#0 ]
reg byte a [ tod_str::$0 ]
reg byte a [ tod_str::$1 ]
reg byte a [ tod_str::$2 ]
reg byte a [ tod_str::$3 ]
reg byte a [ tod_str::$4 ]
reg byte a [ tod_str::$5 ]
reg byte a [ tod_str::$6 ]
reg byte a [ tod_str::$7 ]
reg byte a [ tod_str::$8 ]
reg byte a [ tod_str::$9 ]
reg byte a [ tod_str::$10 ]
reg byte a [ tod_str::$11 ]
reg byte a [ tod_str::$12 ]
reg byte a [ tod_str::$13 ]
reg byte a [ tod_str::$14 ]
reg byte a [ tod_str::$15 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:25 [ utoa::digit_value#0 utoa_append::sub#0 ]
zp[2]:27 [ memcpy::src_end#0 ]
zp[2]:29 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]
mem[4] [ TOD_ZERO ]
