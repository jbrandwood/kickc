Resolved forward reference rawmap to rawmap
Resolved forward reference required_tags to required_tags
Fixing struct type size struct ATARI_GTIA_READ to 32
Fixing struct type size struct ATARI_POKEY_READ to 16
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct ATARI_GTIA_READ to 32
Fixing struct type SIZE_OF struct ATARI_POKEY_READ to 16
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct ATARI_GTIA_READ to 32
Fixing struct type SIZE_OF struct ATARI_POKEY_READ to 16
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Setting inferred volatile on symbol affected by address-of cputc::$4 = call convertToScreenCode &cputc::c 
Added struct type cast to parameter value list call printf_uint main::valid (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL } 
Added struct type cast to parameter value list call printf_uint main::total (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL } 
Inlined call cputc::$4 = call convertToScreenCode &cputc::c 
Inlined call call __init 
Eliminating unused variable with no statement main::$1
Eliminating unused variable with no statement main::$11
Eliminating unused variable with no statement main::$12

CONTROL FLOW GRAPH SSA

byte toupper(byte toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  toupper::ch#1 = phi( strupr::@2/toupper::ch#0 )
  toupper::$0 = toupper::ch#1 >= 'a'at
  toupper::$1 = toupper::ch#1 <= 'z'at
  toupper::$2 = toupper::$0 && toupper::$1
  if(toupper::$2) goto toupper::@1
  to:toupper::@2
toupper::@1: scope:[toupper]  from toupper
  toupper::ch#2 = phi( toupper/toupper::ch#1 )
  toupper::$3 = toupper::ch#2 + 'A'at-'a'at
  toupper::return#0 = toupper::$3
  to:toupper::@return
toupper::@2: scope:[toupper]  from toupper
  toupper::ch#3 = phi( toupper/toupper::ch#1 )
  toupper::return#1 = toupper::ch#3
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper::@1 toupper::@2
  toupper::return#4 = phi( toupper::@1/toupper::return#0, toupper::@2/toupper::return#1 )
  toupper::return#2 = toupper::return#4
  return 
  to:@return

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from newline::@5
  memcpy::num#1 = phi( newline::@5/memcpy::num#0 )
  memcpy::destination#1 = phi( newline::@5/memcpy::destination#0 )
  memcpy::source#1 = phi( newline::@5/memcpy::source#0 )
  memcpy::src#0 = ((byte*)) memcpy::source#1
  memcpy::dst#0 = ((byte*)) memcpy::destination#1
  memcpy::$2 = (byte*)memcpy::source#1
  memcpy::$0 = memcpy::$2 + memcpy::num#1
  memcpy::src_end#0 = memcpy::$0
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  memcpy::destination#3 = phi( memcpy/memcpy::destination#1, memcpy::@2/memcpy::destination#4 )
  memcpy::dst#3 = phi( memcpy/memcpy::dst#0, memcpy::@2/memcpy::dst#1 )
  memcpy::src_end#1 = phi( memcpy/memcpy::src_end#0, memcpy::@2/memcpy::src_end#2 )
  memcpy::src#2 = phi( memcpy/memcpy::src#0, memcpy::@2/memcpy::src#1 )
  memcpy::$1 = memcpy::src#2 != memcpy::src_end#1
  if(memcpy::$1) goto memcpy::@2
  to:memcpy::@3
memcpy::@2: scope:[memcpy]  from memcpy::@1
  memcpy::destination#4 = phi( memcpy::@1/memcpy::destination#3 )
  memcpy::src_end#2 = phi( memcpy::@1/memcpy::src_end#1 )
  memcpy::dst#2 = phi( memcpy::@1/memcpy::dst#3 )
  memcpy::src#3 = phi( memcpy::@1/memcpy::src#2 )
  *memcpy::dst#2 = *memcpy::src#3
  memcpy::dst#1 = ++ memcpy::dst#2
  memcpy::src#1 = ++ memcpy::src#3
  to:memcpy::@1
memcpy::@3: scope:[memcpy]  from memcpy::@1
  memcpy::destination#2 = phi( memcpy::@1/memcpy::destination#3 )
  memcpy::return#0 = memcpy::destination#2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@3
  memcpy::return#3 = phi( memcpy::@3/memcpy::return#0 )
  memcpy::return#1 = memcpy::return#3
  return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from clrscr newline::@9
  memset::c#5 = phi( clrscr/memset::c#1, newline::@9/memset::c#0 )
  memset::str#4 = phi( clrscr/memset::str#1, newline::@9/memset::str#0 )
  memset::num#2 = phi( clrscr/memset::num#1, newline::@9/memset::num#0 )
  memset::$0 = memset::num#2 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#2 = phi( memset/memset::str#4, memset::@3/memset::str#5 )
  memset::return#0 = memset::str#2
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#4 = phi( memset/memset::c#5 )
  memset::num#3 = phi( memset/memset::num#2 )
  memset::str#3 = phi( memset/memset::str#4 )
  memset::$4 = (byte*)memset::str#3
  memset::$2 = memset::$4 + memset::num#3
  memset::end#0 = memset::$2
  memset::dst#0 = ((byte*)) memset::str#3
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#3 = phi( memset::@2/memset::c#4, memset::@4/memset::c#2 )
  memset::str#5 = phi( memset::@2/memset::str#3, memset::@4/memset::str#6 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#6 = phi( memset::@3/memset::str#5 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#2 = phi( memset::@3/memset::c#3 )
  *memset::dst#3 = memset::c#2
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#4 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#4
  return 
  to:@return

byte* strupr(byte* strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  strupr::str#1 = phi( printf_number_buffer::@11/strupr::str#0 )
  strupr::src#0 = strupr::str#1
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@4
  strupr::str#3 = phi( strupr/strupr::str#1, strupr::@4/strupr::str#4 )
  strupr::src#2 = phi( strupr/strupr::src#0, strupr::@4/strupr::src#1 )
  strupr::$1 = 0 != *strupr::src#2
  if(strupr::$1) goto strupr::@2
  to:strupr::@3
strupr::@2: scope:[strupr]  from strupr::@1
  strupr::str#5 = phi( strupr::@1/strupr::str#3 )
  strupr::src#3 = phi( strupr::@1/strupr::src#2 )
  toupper::ch#0 = *strupr::src#3
  call toupper 
  toupper::return#3 = toupper::return#2
  to:strupr::@4
strupr::@4: scope:[strupr]  from strupr::@2
  strupr::str#4 = phi( strupr::@2/strupr::str#5 )
  strupr::src#4 = phi( strupr::@2/strupr::src#3 )
  toupper::return#5 = phi( strupr::@2/toupper::return#3 )
  strupr::$0 = toupper::return#5
  *strupr::src#4 = strupr::$0
  strupr::src#1 = ++ strupr::src#4
  to:strupr::@1
strupr::@3: scope:[strupr]  from strupr::@1
  strupr::str#2 = phi( strupr::@1/strupr::str#3 )
  strupr::return#0 = strupr::str#2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@3
  strupr::return#3 = phi( strupr::@3/strupr::return#0 )
  strupr::return#1 = strupr::return#3
  return 
  to:@return

word strlen(byte* strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  strlen::str#4 = phi( printf_number_buffer::@6/strlen::str#1 )
  strlen::len#0 = 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  strlen::len#4 = phi( strlen/strlen::len#0, strlen::@2/strlen::len#1 )
  strlen::str#2 = phi( strlen/strlen::str#4, strlen::@2/strlen::str#0 )
  strlen::$0 = 0 != *strlen::str#2
  if(strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  strlen::str#3 = phi( strlen::@1/strlen::str#2 )
  strlen::len#2 = phi( strlen::@1/strlen::len#4 )
  strlen::len#1 = ++ strlen::len#2
  strlen::str#0 = ++ strlen::str#3
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  strlen::len#3 = phi( strlen::@1/strlen::len#4 )
  strlen::return#0 = strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  strlen::return#3 = phi( strlen::@3/strlen::return#0 )
  strlen::return#1 = strlen::return#3
  return 
  to:@return

void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
utoa: scope:[utoa]  from printf_uint::@3
  utoa::buffer#21 = phi( printf_uint::@3/utoa::buffer#5 )
  utoa::value#12 = phi( printf_uint::@3/utoa::value#1 )
  utoa::radix#1 = phi( printf_uint::@3/utoa::radix#0 )
  utoa::max_digits#0 = 0
  utoa::digit_values#0 = (word*) 0
  utoa::$0 = utoa::radix#1 == DECIMAL
  if(utoa::$0) goto utoa::@1
  to:utoa::@6
utoa::@1: scope:[utoa]  from utoa
  utoa::buffer#17 = phi( utoa/utoa::buffer#21 )
  utoa::value#8 = phi( utoa/utoa::value#12 )
  utoa::max_digits#1 = 5
  utoa::digit_values#1 = RADIX_DECIMAL_VALUES
  to:utoa::@5
utoa::@6: scope:[utoa]  from utoa
  utoa::value#13 = phi( utoa/utoa::value#12 )
  utoa::buffer#16 = phi( utoa/utoa::buffer#21 )
  utoa::radix#2 = phi( utoa/utoa::radix#1 )
  utoa::$1 = utoa::radix#2 == HEXADECIMAL
  if(utoa::$1) goto utoa::@2
  to:utoa::@7
utoa::@2: scope:[utoa]  from utoa::@6
  utoa::buffer#18 = phi( utoa::@6/utoa::buffer#16 )
  utoa::value#9 = phi( utoa::@6/utoa::value#13 )
  utoa::max_digits#2 = 4
  utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
  to:utoa::@5
utoa::@7: scope:[utoa]  from utoa::@6
  utoa::value#14 = phi( utoa::@6/utoa::value#13 )
  utoa::buffer#13 = phi( utoa::@6/utoa::buffer#16 )
  utoa::radix#3 = phi( utoa::@6/utoa::radix#2 )
  utoa::$2 = utoa::radix#3 == OCTAL
  if(utoa::$2) goto utoa::@3
  to:utoa::@8
utoa::@3: scope:[utoa]  from utoa::@7
  utoa::buffer#19 = phi( utoa::@7/utoa::buffer#13 )
  utoa::value#10 = phi( utoa::@7/utoa::value#14 )
  utoa::max_digits#3 = 6
  utoa::digit_values#3 = RADIX_OCTAL_VALUES
  to:utoa::@5
utoa::@8: scope:[utoa]  from utoa::@7
  utoa::value#15 = phi( utoa::@7/utoa::value#14 )
  utoa::buffer#10 = phi( utoa::@7/utoa::buffer#13 )
  utoa::radix#4 = phi( utoa::@7/utoa::radix#3 )
  utoa::$3 = utoa::radix#4 == BINARY
  if(utoa::$3) goto utoa::@4
  to:utoa::@9
utoa::@4: scope:[utoa]  from utoa::@8
  utoa::buffer#20 = phi( utoa::@8/utoa::buffer#10 )
  utoa::value#11 = phi( utoa::@8/utoa::value#15 )
  utoa::max_digits#4 = $10
  utoa::digit_values#4 = RADIX_BINARY_VALUES
  to:utoa::@5
utoa::@9: scope:[utoa]  from utoa::@8
  utoa::buffer#6 = phi( utoa::@8/utoa::buffer#10 )
  *utoa::buffer#6 = 'e'at
  utoa::buffer#0 = ++ utoa::buffer#6
  *utoa::buffer#0 = 'r'at
  utoa::buffer#1 = ++ utoa::buffer#0
  *utoa::buffer#1 = 'r'at
  utoa::buffer#2 = ++ utoa::buffer#1
  *utoa::buffer#2 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@12 utoa::@9
  return 
  to:@return
utoa::@5: scope:[utoa]  from utoa::@1 utoa::@2 utoa::@3 utoa::@4
  utoa::buffer#15 = phi( utoa::@1/utoa::buffer#17, utoa::@2/utoa::buffer#18, utoa::@3/utoa::buffer#19, utoa::@4/utoa::buffer#20 )
  utoa::value#7 = phi( utoa::@1/utoa::value#8, utoa::@2/utoa::value#9, utoa::@3/utoa::value#10, utoa::@4/utoa::value#11 )
  utoa::digit_values#8 = phi( utoa::@1/utoa::digit_values#1, utoa::@2/utoa::digit_values#2, utoa::@3/utoa::digit_values#3, utoa::@4/utoa::digit_values#4 )
  utoa::max_digits#7 = phi( utoa::@1/utoa::max_digits#1, utoa::@2/utoa::max_digits#2, utoa::@3/utoa::max_digits#3, utoa::@4/utoa::max_digits#4 )
  utoa::started#0 = 0
  utoa::digit#0 = 0
  to:utoa::@10
utoa::@10: scope:[utoa]  from utoa::@13 utoa::@5
  utoa::buffer#11 = phi( utoa::@13/utoa::buffer#14, utoa::@5/utoa::buffer#15 )
  utoa::started#3 = phi( utoa::@13/utoa::started#4, utoa::@5/utoa::started#0 )
  utoa::value#5 = phi( utoa::@13/utoa::value#6, utoa::@5/utoa::value#7 )
  utoa::digit_values#6 = phi( utoa::@13/utoa::digit_values#7, utoa::@5/utoa::digit_values#8 )
  utoa::digit#2 = phi( utoa::@13/utoa::digit#1, utoa::@5/utoa::digit#0 )
  utoa::max_digits#5 = phi( utoa::@13/utoa::max_digits#6, utoa::@5/utoa::max_digits#7 )
  utoa::$4 = utoa::max_digits#5 - 1
  utoa::$5 = utoa::digit#2 < utoa::$4
  if(utoa::$5) goto utoa::@11
  to:utoa::@12
utoa::@11: scope:[utoa]  from utoa::@10
  utoa::max_digits#8 = phi( utoa::@10/utoa::max_digits#5 )
  utoa::buffer#12 = phi( utoa::@10/utoa::buffer#11 )
  utoa::started#2 = phi( utoa::@10/utoa::started#3 )
  utoa::value#2 = phi( utoa::@10/utoa::value#5 )
  utoa::digit_values#5 = phi( utoa::@10/utoa::digit_values#6 )
  utoa::digit#3 = phi( utoa::@10/utoa::digit#2 )
  utoa::$10 = utoa::digit#3 * SIZEOF_WORD
  utoa::digit_value#0 = utoa::digit_values#5[utoa::$10]
  utoa::$6 = utoa::value#2 >= utoa::digit_value#0
  utoa::$7 = utoa::started#2 || utoa::$6
  utoa::$8 = ! utoa::$7
  if(utoa::$8) goto utoa::@13
  to:utoa::@14
utoa::@12: scope:[utoa]  from utoa::@10
  utoa::buffer#7 = phi( utoa::@10/utoa::buffer#11 )
  utoa::value#3 = phi( utoa::@10/utoa::value#5 )
  utoa::$11 = (byte)utoa::value#3
  *utoa::buffer#7 = DIGITS[utoa::$11]
  utoa::buffer#3 = ++ utoa::buffer#7
  *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@13: scope:[utoa]  from utoa::@11 utoa::@15
  utoa::buffer#14 = phi( utoa::@11/utoa::buffer#12, utoa::@15/utoa::buffer#4 )
  utoa::started#4 = phi( utoa::@11/utoa::started#2, utoa::@15/utoa::started#1 )
  utoa::value#6 = phi( utoa::@11/utoa::value#2, utoa::@15/utoa::value#0 )
  utoa::digit_values#7 = phi( utoa::@11/utoa::digit_values#5, utoa::@15/utoa::digit_values#9 )
  utoa::max_digits#6 = phi( utoa::@11/utoa::max_digits#8, utoa::@15/utoa::max_digits#9 )
  utoa::digit#4 = phi( utoa::@11/utoa::digit#3, utoa::@15/utoa::digit#5 )
  utoa::digit#1 = ++ utoa::digit#4
  to:utoa::@10
utoa::@14: scope:[utoa]  from utoa::@11
  utoa::digit_values#10 = phi( utoa::@11/utoa::digit_values#5 )
  utoa::max_digits#10 = phi( utoa::@11/utoa::max_digits#8 )
  utoa::digit#6 = phi( utoa::@11/utoa::digit#3 )
  utoa::digit_value#1 = phi( utoa::@11/utoa::digit_value#0 )
  utoa::value#4 = phi( utoa::@11/utoa::value#2 )
  utoa::buffer#8 = phi( utoa::@11/utoa::buffer#12 )
  utoa_append::buffer#0 = utoa::buffer#8
  utoa_append::value#0 = utoa::value#4
  utoa_append::sub#0 = utoa::digit_value#1
  call utoa_append 
  utoa_append::return#0 = utoa_append::return#2
  to:utoa::@15
utoa::@15: scope:[utoa]  from utoa::@14
  utoa::digit_values#9 = phi( utoa::@14/utoa::digit_values#10 )
  utoa::max_digits#9 = phi( utoa::@14/utoa::max_digits#10 )
  utoa::digit#5 = phi( utoa::@14/utoa::digit#6 )
  utoa::buffer#9 = phi( utoa::@14/utoa::buffer#8 )
  utoa_append::return#3 = phi( utoa::@14/utoa_append::return#0 )
  utoa::$9 = utoa_append::return#3
  utoa::value#0 = utoa::$9
  utoa::buffer#4 = ++ utoa::buffer#9
  utoa::started#1 = 1
  to:utoa::@13

word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@14
  utoa_append::buffer#3 = phi( utoa::@14/utoa_append::buffer#0 )
  utoa_append::sub#3 = phi( utoa::@14/utoa_append::sub#0 )
  utoa_append::value#5 = phi( utoa::@14/utoa_append::value#0 )
  utoa_append::digit#0 = 0
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  utoa_append::buffer#2 = phi( utoa_append/utoa_append::buffer#3, utoa_append::@2/utoa_append::buffer#4 )
  utoa_append::digit#4 = phi( utoa_append/utoa_append::digit#0, utoa_append::@2/utoa_append::digit#1 )
  utoa_append::sub#1 = phi( utoa_append/utoa_append::sub#3, utoa_append::@2/utoa_append::sub#2 )
  utoa_append::value#2 = phi( utoa_append/utoa_append::value#5, utoa_append::@2/utoa_append::value#1 )
  utoa_append::$0 = utoa_append::value#2 >= utoa_append::sub#1
  if(utoa_append::$0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  utoa_append::buffer#4 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::sub#2 = phi( utoa_append::@1/utoa_append::sub#1 )
  utoa_append::value#3 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::digit#2 = phi( utoa_append::@1/utoa_append::digit#4 )
  utoa_append::digit#1 = ++ utoa_append::digit#2
  utoa_append::value#1 = utoa_append::value#3 - utoa_append::sub#2
  to:utoa_append::@1
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  utoa_append::value#4 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::buffer#1 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::digit#3 = phi( utoa_append::@1/utoa_append::digit#4 )
  *utoa_append::buffer#1 = DIGITS[utoa_append::digit#3]
  utoa_append::return#1 = utoa_append::value#4
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  utoa_append::return#4 = phi( utoa_append::@3/utoa_append::return#1 )
  utoa_append::return#2 = utoa_append::return#4
  return 
  to:@return

void cputc(volatile byte cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@9 printf_padding::@2
  cputc::$0 = cputc::c == ''at
  if(cputc::$0) goto cputc::@1
  to:cputc::@3
cputc::@1: scope:[cputc]  from cputc
  *COLCRS = 0
  call setcursor 
  to:cputc::@8
cputc::@8: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@3: scope:[cputc]  from cputc
  cputc::$1 = cputc::c == '
'at
  cputc::$2 = cputc::c == $9b
  cputc::$3 = cputc::$1 || cputc::$2
  if(cputc::$3) goto cputc::@2
  to:cputc::@4
cputc::@2: scope:[cputc]  from cputc::@3
  *COLCRS = 0
  call newline 
  to:cputc::@9
cputc::@9: scope:[cputc]  from cputc::@2
  to:cputc::@return
cputc::@4: scope:[cputc]  from cputc::@3
  cputc::convertToScreenCode1_v#0 = &cputc::c
  to:cputc::convertToScreenCode1
cputc::convertToScreenCode1: scope:[cputc]  from cputc::@4
  cputc::convertToScreenCode1_v#1 = phi( cputc::@4/cputc::convertToScreenCode1_v#0 )
  cputc::convertToScreenCode1_return#0 = rawmap[*cputc::convertToScreenCode1_v#1]
  to:cputc::convertToScreenCode1_@return
cputc::convertToScreenCode1_@return: scope:[cputc]  from cputc::convertToScreenCode1
  cputc::convertToScreenCode1_return#2 = phi( cputc::convertToScreenCode1/cputc::convertToScreenCode1_return#0 )
  cputc::convertToScreenCode1_return#1 = cputc::convertToScreenCode1_return#2
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc::convertToScreenCode1_@return
  cputc::convertToScreenCode1_return#3 = phi( cputc::convertToScreenCode1_@return/cputc::convertToScreenCode1_return#1 )
  cputc::$4 = cputc::convertToScreenCode1_return#3
  putchar::code#0 = cputc::$4
  call putchar 
  to:cputc::@10
cputc::@10: scope:[cputc]  from cputc::@7
  *COLCRS = ++ *COLCRS
  cputc::$7 = *COLCRS == $28
  if(cputc::$7) goto cputc::@6
  to:cputc::@5
cputc::@6: scope:[cputc]  from cputc::@10
  *COLCRS = 0
  call newline 
  to:cputc::@11
cputc::@11: scope:[cputc]  from cputc::@6
  to:cputc::@return
cputc::@5: scope:[cputc]  from cputc::@10
  call setcursor 
  to:cputc::@12
cputc::@12: scope:[cputc]  from cputc::@5
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@11 cputc::@12 cputc::@8 cputc::@9
  return 
  to:@return

void putchar(byte putchar::code)
putchar: scope:[putchar]  from cputc::@7
  putchar::code#2 = phi( cputc::@7/putchar::code#0 )
  *(*OLDADR) = *OLDCHR
  call cursorLocation 
  cursorLocation::return#0 = cursorLocation::return#2
  to:putchar::@1
putchar::@1: scope:[putchar]  from putchar
  putchar::code#1 = phi( putchar/putchar::code#2 )
  cursorLocation::return#4 = phi( putchar/cursorLocation::return#0 )
  putchar::$0 = cursorLocation::return#4
  putchar::loc#0 = putchar::$0
  putchar::$1 = putchar::code#1 | conio_reverse_value
  putchar::newChar#0 = putchar::$1
  *putchar::loc#0 = putchar::newChar#0
  *OLDCHR = putchar::newChar#0
  call setcursor 
  to:putchar::@2
putchar::@2: scope:[putchar]  from putchar::@1
  to:putchar::@return
putchar::@return: scope:[putchar]  from putchar::@2
  return 
  to:@return

void cputs(to_nomodify byte* cputs::s)
cputs: scope:[cputs]  from main::@11 main::@12 main::@3 main::@32 main::@34 printf_number_buffer::@5
  cputs::s#8 = phi( main::@11/cputs::s#6, main::@12/cputs::s#5, main::@3/cputs::s#2, main::@32/cputs::s#3, main::@34/cputs::s#4, printf_number_buffer::@5/cputs::s#1 )
  cputs::c#0 = 0
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@3
  cputs::s#7 = phi( cputs/cputs::s#8, cputs::@3/cputs::s#9 )
  cputs::c#1 = *cputs::s#7
  cputs::$0 = cputs::c#1
  cputs::s#0 = ++ cputs::s#7
  cputs::$2 = 0 != cputs::$0
  if(cputs::$2) goto cputs::@2
  to:cputs::@return
cputs::@2: scope:[cputs]  from cputs::@1
  cputs::s#10 = phi( cputs::@1/cputs::s#0 )
  cputs::c#2 = phi( cputs::@1/cputs::c#1 )
  cputc::c = cputs::c#2
  call cputc 
  to:cputs::@3
cputs::@3: scope:[cputs]  from cputs::@2
  cputs::s#9 = phi( cputs::@2/cputs::s#10 )
  to:cputs::@1
cputs::@return: scope:[cputs]  from cputs::@1
  return 
  to:@return

byte* cursorLocation()
cursorLocation: scope:[cursorLocation]  from putchar setcursor
  cursorLocation::$3 = (word)*ROWCRS
  cursorLocation::$0 = cursorLocation::$3 * $28
  cursorLocation::$1 = *SAVMSC + cursorLocation::$0
  cursorLocation::$2 = cursorLocation::$1 + *COLCRS
  cursorLocation::return#1 = cursorLocation::$2
  to:cursorLocation::@return
cursorLocation::@return: scope:[cursorLocation]  from cursorLocation
  cursorLocation::return#5 = phi( cursorLocation/cursorLocation::return#1 )
  cursorLocation::return#2 = cursorLocation::return#5
  return 
  to:@return

void newline()
newline: scope:[newline]  from cputc::@2 cputc::@6
  newline::$0 = *ROWCRS == $18
  *ROWCRS = ++ *ROWCRS
  newline::$1 = ! newline::$0
  if(newline::$1) goto newline::@1
  to:newline::@2
newline::@1: scope:[newline]  from newline newline::@10 newline::@8
  call setcursor 
  to:newline::@7
newline::@7: scope:[newline]  from newline::@1
  to:newline::@return
newline::@2: scope:[newline]  from newline
  newline::$3 = conio_scroll_enable == 1
  if(newline::$3) goto newline::@4
  to:newline::@3
newline::@4: scope:[newline]  from newline::@2
  newline::$5 = conio_display_cursor == 1
  newline::$6 = ! newline::$5
  if(newline::$6) goto newline::@5
  to:newline::@6
newline::@3: scope:[newline]  from newline::@2
  gotoxy::x#0 = 0
  gotoxy::y#0 = 0
  call gotoxy 
  to:newline::@8
newline::@8: scope:[newline]  from newline::@3
  to:newline::@1
newline::@5: scope:[newline]  from newline::@4 newline::@6
  newline::start#0 = *SAVMSC
  newline::$7 = newline::start#0 + $28
  memcpy::destination#0 = (void*)newline::start#0
  memcpy::source#0 = (void*)newline::$7
  memcpy::num#0 = $28*$17
  call memcpy 
  memcpy::return#2 = memcpy::return#1
  to:newline::@9
newline::@9: scope:[newline]  from newline::@5
  newline::start#1 = phi( newline::@5/newline::start#0 )
  newline::$9 = newline::start#1 + $28*$17
  memset::str#0 = (void*)newline::$9
  memset::c#0 = 0
  memset::num#0 = $28
  call memset 
  memset::return#2 = memset::return#1
  to:newline::@10
newline::@10: scope:[newline]  from newline::@9
  *ROWCRS = $18-1
  to:newline::@1
newline::@6: scope:[newline]  from newline::@4
  *(*OLDADR) = *(*OLDADR) ^ $80
  to:newline::@5
newline::@return: scope:[newline]  from newline::@7
  return 
  to:@return

void setcursor()
setcursor: scope:[setcursor]  from cputc::@1 cputc::@5 gotoxy newline::@1 putchar::@1
  *(*OLDADR) = *OLDCHR
  call cursorLocation 
  cursorLocation::return#3 = cursorLocation::return#2
  to:setcursor::@4
setcursor::@4: scope:[setcursor]  from setcursor
  cursorLocation::return#6 = phi( setcursor/cursorLocation::return#3 )
  setcursor::$0 = cursorLocation::return#6
  setcursor::loc#0 = setcursor::$0
  setcursor::c#0 = *setcursor::loc#0
  *OLDCHR = setcursor::c#0
  *OLDADR = setcursor::loc#0
  setcursor::$1 = conio_display_cursor == 0
  if(setcursor::$1) goto setcursor::@1
  to:setcursor::@3
setcursor::@1: scope:[setcursor]  from setcursor::@4
  setcursor::c#4 = phi( setcursor::@4/setcursor::c#0 )
  *CRSINH = 1
  to:setcursor::@2
setcursor::@3: scope:[setcursor]  from setcursor::@4
  setcursor::c#2 = phi( setcursor::@4/setcursor::c#0 )
  *CRSINH = 0
  setcursor::$2 = setcursor::c#2 ^ $80
  setcursor::c#1 = setcursor::$2
  to:setcursor::@2
setcursor::@2: scope:[setcursor]  from setcursor::@1 setcursor::@3
  setcursor::c#3 = phi( setcursor::@1/setcursor::c#4, setcursor::@3/setcursor::c#1 )
  *(*OLDADR) = setcursor::c#3
  to:setcursor::@return
setcursor::@return: scope:[setcursor]  from setcursor::@2
  return 
  to:@return

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from clrscr::@1 newline::@3
  gotoxy::y#2 = phi( clrscr::@1/gotoxy::y#1, newline::@3/gotoxy::y#0 )
  gotoxy::x#2 = phi( clrscr::@1/gotoxy::x#1, newline::@3/gotoxy::x#0 )
  *COLCRS = gotoxy::x#2
  *ROWCRS = gotoxy::y#2
  call setcursor 
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@1
  return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  memset::str#1 = (void*)*SAVMSC
  memset::c#1 = 0
  memset::num#1 = $28*$18
  call memset 
  memset::return#3 = memset::return#1
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr
  *OLDCHR = 0
  gotoxy::x#1 = 0
  gotoxy::y#1 = 0
  call gotoxy 
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  return 
  to:@return

void printf_padding(byte printf_padding::pad , byte printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  printf_padding::pad#5 = phi( printf_number_buffer::@10/printf_padding::pad#1, printf_number_buffer::@12/printf_padding::pad#2, printf_number_buffer::@8/printf_padding::pad#0 )
  printf_padding::length#4 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0 )
  printf_padding::i#0 = 0
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  printf_padding::pad#4 = phi( printf_padding/printf_padding::pad#5, printf_padding::@3/printf_padding::pad#6 )
  printf_padding::length#3 = phi( printf_padding/printf_padding::length#4, printf_padding::@3/printf_padding::length#5 )
  printf_padding::i#2 = phi( printf_padding/printf_padding::i#0, printf_padding::@3/printf_padding::i#1 )
  printf_padding::$0 = printf_padding::i#2 < printf_padding::length#3
  if(printf_padding::$0) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  printf_padding::length#6 = phi( printf_padding::@1/printf_padding::length#3 )
  printf_padding::i#4 = phi( printf_padding::@1/printf_padding::i#2 )
  printf_padding::pad#3 = phi( printf_padding::@1/printf_padding::pad#4 )
  cputc::c = printf_padding::pad#3
  call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  printf_padding::pad#6 = phi( printf_padding::@2/printf_padding::pad#3 )
  printf_padding::length#5 = phi( printf_padding::@2/printf_padding::length#6 )
  printf_padding::i#3 = phi( printf_padding::@2/printf_padding::i#4 )
  printf_padding::i#1 = ++ printf_padding::i#3
  to:printf_padding::@1
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  return 
  to:@return

void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@31 main::@33
  printf_uint::format_upper_case#6 = phi( main::@31/printf_uint::format_upper_case#0, main::@33/printf_uint::format_upper_case#1 )
  printf_uint::format_zero_padding#6 = phi( main::@31/printf_uint::format_zero_padding#0, main::@33/printf_uint::format_zero_padding#1 )
  printf_uint::format_justify_left#6 = phi( main::@31/printf_uint::format_justify_left#0, main::@33/printf_uint::format_justify_left#1 )
  printf_uint::format_min_length#6 = phi( main::@31/printf_uint::format_min_length#0, main::@33/printf_uint::format_min_length#1 )
  printf_uint::format_radix#6 = phi( main::@31/printf_uint::format_radix#0, main::@33/printf_uint::format_radix#1 )
  printf_uint::uvalue#5 = phi( main::@31/printf_uint::uvalue#0, main::@33/printf_uint::uvalue#1 )
  printf_uint::format_sign_always#2 = phi( main::@31/printf_uint::format_sign_always#0, main::@33/printf_uint::format_sign_always#1 )
  printf_uint::$5 = 0 != printf_uint::format_sign_always#2
  if(printf_uint::$5) goto printf_uint::@1
  to:printf_uint::@2
printf_uint::@1: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#4 = phi( printf_uint/printf_uint::format_upper_case#6 )
  printf_uint::format_zero_padding#4 = phi( printf_uint/printf_uint::format_zero_padding#6 )
  printf_uint::format_sign_always#5 = phi( printf_uint/printf_uint::format_sign_always#2 )
  printf_uint::format_justify_left#4 = phi( printf_uint/printf_uint::format_justify_left#6 )
  printf_uint::format_min_length#4 = phi( printf_uint/printf_uint::format_min_length#6 )
  printf_uint::format_radix#4 = phi( printf_uint/printf_uint::format_radix#6 )
  printf_uint::uvalue#3 = phi( printf_uint/printf_uint::uvalue#5 )
  printf_uint::$1 = '+'at
  to:printf_uint::@3
printf_uint::@2: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#5 = phi( printf_uint/printf_uint::format_upper_case#6 )
  printf_uint::format_zero_padding#5 = phi( printf_uint/printf_uint::format_zero_padding#6 )
  printf_uint::format_sign_always#6 = phi( printf_uint/printf_uint::format_sign_always#2 )
  printf_uint::format_justify_left#5 = phi( printf_uint/printf_uint::format_justify_left#6 )
  printf_uint::format_min_length#5 = phi( printf_uint/printf_uint::format_min_length#6 )
  printf_uint::format_radix#5 = phi( printf_uint/printf_uint::format_radix#6 )
  printf_uint::uvalue#4 = phi( printf_uint/printf_uint::uvalue#5 )
  printf_uint::$0 = 0
  to:printf_uint::@3
printf_uint::@3: scope:[printf_uint]  from printf_uint::@1 printf_uint::@2
  printf_uint::format_upper_case#3 = phi( printf_uint::@1/printf_uint::format_upper_case#4, printf_uint::@2/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#3 = phi( printf_uint::@1/printf_uint::format_zero_padding#4, printf_uint::@2/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#4 = phi( printf_uint::@1/printf_uint::format_sign_always#5, printf_uint::@2/printf_uint::format_sign_always#6 )
  printf_uint::format_justify_left#3 = phi( printf_uint::@1/printf_uint::format_justify_left#4, printf_uint::@2/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#3 = phi( printf_uint::@1/printf_uint::format_min_length#4, printf_uint::@2/printf_uint::format_min_length#5 )
  printf_uint::format_radix#2 = phi( printf_uint::@1/printf_uint::format_radix#4, printf_uint::@2/printf_uint::format_radix#5 )
  printf_uint::uvalue#2 = phi( printf_uint::@1/printf_uint::uvalue#3, printf_uint::@2/printf_uint::uvalue#4 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
  *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
  utoa::value#1 = printf_uint::uvalue#2
  utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  utoa::radix#0 = printf_uint::format_radix#2
  call utoa 
  to:printf_uint::@4
printf_uint::@4: scope:[printf_uint]  from printf_uint::@3
  printf_uint::format_radix#3 = phi( printf_uint::@3/printf_uint::format_radix#2 )
  printf_uint::format_upper_case#2 = phi( printf_uint::@3/printf_uint::format_upper_case#3 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@3/printf_uint::format_zero_padding#3 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@3/printf_uint::format_sign_always#4 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@3/printf_uint::format_justify_left#3 )
  printf_uint::format_min_length#2 = phi( printf_uint::@3/printf_uint::format_min_length#3 )
  printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  printf_number_buffer::buffer_digits#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  printf_number_buffer::format_min_length#0 = printf_uint::format_min_length#2
  printf_number_buffer::format_justify_left#0 = printf_uint::format_justify_left#2
  printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#3
  printf_number_buffer::format_zero_padding#0 = printf_uint::format_zero_padding#2
  printf_number_buffer::format_upper_case#0 = printf_uint::format_upper_case#2
  printf_number_buffer::format_radix#0 = printf_uint::format_radix#3
  call printf_number_buffer 
  to:printf_uint::@5
printf_uint::@5: scope:[printf_uint]  from printf_uint::@4
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@5
  return 
  to:@return

void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uint::@4
  printf_number_buffer::format_upper_case#10 = phi( printf_uint::@4/printf_number_buffer::format_upper_case#0 )
  printf_number_buffer::buffer_sign#7 = phi( printf_uint::@4/printf_number_buffer::buffer_sign#0 )
  printf_number_buffer::buffer_digits#4 = phi( printf_uint::@4/printf_number_buffer::buffer_digits#0 )
  printf_number_buffer::format_zero_padding#4 = phi( printf_uint::@4/printf_number_buffer::format_zero_padding#0 )
  printf_number_buffer::format_justify_left#3 = phi( printf_uint::@4/printf_number_buffer::format_justify_left#0 )
  printf_number_buffer::format_min_length#1 = phi( printf_uint::@4/printf_number_buffer::format_min_length#0 )
  printf_number_buffer::padding#0 = 0
  printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
  printf_number_buffer::$0 = ! printf_number_buffer::$26
  if(printf_number_buffer::$0) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@14
  printf_number_buffer::buffer_digits#12 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#4, printf_number_buffer::@13/printf_number_buffer::buffer_digits#15, printf_number_buffer::@14/printf_number_buffer::buffer_digits#16 )
  printf_number_buffer::format_upper_case#7 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#10, printf_number_buffer::@13/printf_number_buffer::format_upper_case#11, printf_number_buffer::@14/printf_number_buffer::format_upper_case#12 )
  printf_number_buffer::buffer_sign#5 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#7, printf_number_buffer::@13/printf_number_buffer::buffer_sign#8, printf_number_buffer::@14/printf_number_buffer::buffer_sign#9 )
  printf_number_buffer::padding#3 = phi( printf_number_buffer/printf_number_buffer::padding#0, printf_number_buffer::@13/printf_number_buffer::padding#1, printf_number_buffer::@14/printf_number_buffer::padding#2 )
  printf_number_buffer::format_zero_padding#1 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#4, printf_number_buffer::@13/printf_number_buffer::format_zero_padding#5, printf_number_buffer::@14/printf_number_buffer::format_zero_padding#6 )
  printf_number_buffer::format_justify_left#1 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#3, printf_number_buffer::@13/printf_number_buffer::format_justify_left#4, printf_number_buffer::@14/printf_number_buffer::format_justify_left#5 )
  printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
  printf_number_buffer::$1 = ! printf_number_buffer::$27
  printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
  printf_number_buffer::$2 = ! printf_number_buffer::$28
  printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
  printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#3
  printf_number_buffer::$5 = ! printf_number_buffer::$4
  if(printf_number_buffer::$5) goto printf_number_buffer::@2
  to:printf_number_buffer::@8
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  printf_number_buffer::format_upper_case#16 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#10 )
  printf_number_buffer::format_zero_padding#16 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#4 )
  printf_number_buffer::format_justify_left#11 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#3 )
  printf_number_buffer::format_min_length#5 = phi( printf_number_buffer/printf_number_buffer::format_min_length#1 )
  printf_number_buffer::buffer_sign#4 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#7 )
  printf_number_buffer::buffer_digits#1 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#4 )
  strlen::str#1 = printf_number_buffer::buffer_digits#1
  call strlen 
  strlen::return#2 = strlen::return#1
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@6
  printf_number_buffer::buffer_digits#18 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_digits#1 )
  printf_number_buffer::format_upper_case#14 = phi( printf_number_buffer::@6/printf_number_buffer::format_upper_case#16 )
  printf_number_buffer::format_zero_padding#10 = phi( printf_number_buffer::@6/printf_number_buffer::format_zero_padding#16 )
  printf_number_buffer::format_justify_left#7 = phi( printf_number_buffer::@6/printf_number_buffer::format_justify_left#11 )
  printf_number_buffer::format_min_length#3 = phi( printf_number_buffer::@6/printf_number_buffer::format_min_length#5 )
  printf_number_buffer::buffer_sign#1 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_sign#4 )
  strlen::return#4 = phi( printf_number_buffer::@6/strlen::return#2 )
  printf_number_buffer::$19 = strlen::return#4
  printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19
  printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
  printf_number_buffer::$20 = ! printf_number_buffer::$29
  if(printf_number_buffer::$20) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@15 printf_number_buffer::@7
  printf_number_buffer::buffer_digits#15 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#18, printf_number_buffer::@7/printf_number_buffer::buffer_digits#19 )
  printf_number_buffer::format_upper_case#11 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#14, printf_number_buffer::@7/printf_number_buffer::format_upper_case#15 )
  printf_number_buffer::buffer_sign#8 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#1, printf_number_buffer::@7/printf_number_buffer::buffer_sign#11 )
  printf_number_buffer::format_zero_padding#5 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#10, printf_number_buffer::@7/printf_number_buffer::format_zero_padding#11 )
  printf_number_buffer::format_justify_left#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#7, printf_number_buffer::@7/printf_number_buffer::format_justify_left#8 )
  printf_number_buffer::len#2 = phi( printf_number_buffer::@15/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  printf_number_buffer::format_min_length#2 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#3, printf_number_buffer::@7/printf_number_buffer::format_min_length#4 )
  printf_number_buffer::$25 = (signed byte)printf_number_buffer::format_min_length#2
  printf_number_buffer::$21 = printf_number_buffer::$25 - printf_number_buffer::len#2
  printf_number_buffer::padding#1 = printf_number_buffer::$21
  printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
  printf_number_buffer::$23 = ! printf_number_buffer::$22
  if(printf_number_buffer::$23) goto printf_number_buffer::@1
  to:printf_number_buffer::@14
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@15
  printf_number_buffer::buffer_digits#19 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#18 )
  printf_number_buffer::format_upper_case#15 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#14 )
  printf_number_buffer::buffer_sign#11 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#1 )
  printf_number_buffer::format_zero_padding#11 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#10 )
  printf_number_buffer::format_justify_left#8 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#7 )
  printf_number_buffer::format_min_length#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#3 )
  printf_number_buffer::len#3 = phi( printf_number_buffer::@15/printf_number_buffer::len#0 )
  printf_number_buffer::len#1 = ++ printf_number_buffer::len#3
  to:printf_number_buffer::@13
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@13
  printf_number_buffer::buffer_digits#16 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_digits#15 )
  printf_number_buffer::format_upper_case#12 = phi( printf_number_buffer::@13/printf_number_buffer::format_upper_case#11 )
  printf_number_buffer::buffer_sign#9 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_sign#8 )
  printf_number_buffer::format_zero_padding#6 = phi( printf_number_buffer::@13/printf_number_buffer::format_zero_padding#5 )
  printf_number_buffer::format_justify_left#5 = phi( printf_number_buffer::@13/printf_number_buffer::format_justify_left#4 )
  printf_number_buffer::padding#2 = 0
  to:printf_number_buffer::@1
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16
  printf_number_buffer::format_justify_left#16 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#1, printf_number_buffer::@16/printf_number_buffer::format_justify_left#18 )
  printf_number_buffer::buffer_digits#10 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#12, printf_number_buffer::@16/printf_number_buffer::buffer_digits#13 )
  printf_number_buffer::format_upper_case#5 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#7, printf_number_buffer::@16/printf_number_buffer::format_upper_case#8 )
  printf_number_buffer::padding#10 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3, printf_number_buffer::@16/printf_number_buffer::padding#12 )
  printf_number_buffer::format_zero_padding#8 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#1, printf_number_buffer::@16/printf_number_buffer::format_zero_padding#12 )
  printf_number_buffer::buffer_sign#2 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#5, printf_number_buffer::@16/printf_number_buffer::buffer_sign#6 )
  printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
  printf_number_buffer::$7 = ! printf_number_buffer::$30
  if(printf_number_buffer::$7) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@1
  printf_number_buffer::format_justify_left#20 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#1 )
  printf_number_buffer::buffer_digits#17 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#12 )
  printf_number_buffer::format_upper_case#13 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#7 )
  printf_number_buffer::format_zero_padding#17 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#1 )
  printf_number_buffer::buffer_sign#10 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#5 )
  printf_number_buffer::padding#4 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3 )
  printf_padding::pad#0 = ' 'at
  printf_padding::length#0 = (byte)printf_number_buffer::padding#4
  call printf_padding 
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@8
  printf_number_buffer::format_justify_left#18 = phi( printf_number_buffer::@8/printf_number_buffer::format_justify_left#20 )
  printf_number_buffer::buffer_digits#13 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_digits#17 )
  printf_number_buffer::format_upper_case#8 = phi( printf_number_buffer::@8/printf_number_buffer::format_upper_case#13 )
  printf_number_buffer::padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::padding#4 )
  printf_number_buffer::format_zero_padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::format_zero_padding#17 )
  printf_number_buffer::buffer_sign#6 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_sign#10 )
  to:printf_number_buffer::@2
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@17 printf_number_buffer::@2
  printf_number_buffer::format_justify_left#13 = phi( printf_number_buffer::@17/printf_number_buffer::format_justify_left#15, printf_number_buffer::@2/printf_number_buffer::format_justify_left#16 )
  printf_number_buffer::buffer_digits#8 = phi( printf_number_buffer::@17/printf_number_buffer::buffer_digits#9, printf_number_buffer::@2/printf_number_buffer::buffer_digits#10 )
  printf_number_buffer::format_upper_case#3 = phi( printf_number_buffer::@17/printf_number_buffer::format_upper_case#4, printf_number_buffer::@2/printf_number_buffer::format_upper_case#5 )
  printf_number_buffer::padding#5 = phi( printf_number_buffer::@17/printf_number_buffer::padding#9, printf_number_buffer::@2/printf_number_buffer::padding#10 )
  printf_number_buffer::format_zero_padding#2 = phi( printf_number_buffer::@17/printf_number_buffer::format_zero_padding#7, printf_number_buffer::@2/printf_number_buffer::format_zero_padding#8 )
  printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#2 && printf_number_buffer::padding#5
  printf_number_buffer::$10 = ! printf_number_buffer::$9
  if(printf_number_buffer::$10) goto printf_number_buffer::@4
  to:printf_number_buffer::@10
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  printf_number_buffer::format_justify_left#19 = phi( printf_number_buffer::@2/printf_number_buffer::format_justify_left#16 )
  printf_number_buffer::buffer_digits#14 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_digits#10 )
  printf_number_buffer::format_upper_case#9 = phi( printf_number_buffer::@2/printf_number_buffer::format_upper_case#5 )
  printf_number_buffer::padding#13 = phi( printf_number_buffer::@2/printf_number_buffer::padding#10 )
  printf_number_buffer::format_zero_padding#13 = phi( printf_number_buffer::@2/printf_number_buffer::format_zero_padding#8 )
  printf_number_buffer::buffer_sign#3 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_sign#2 )
  cputc::c = printf_number_buffer::buffer_sign#3
  call cputc 
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@9
  printf_number_buffer::format_justify_left#15 = phi( printf_number_buffer::@9/printf_number_buffer::format_justify_left#19 )
  printf_number_buffer::buffer_digits#9 = phi( printf_number_buffer::@9/printf_number_buffer::buffer_digits#14 )
  printf_number_buffer::format_upper_case#4 = phi( printf_number_buffer::@9/printf_number_buffer::format_upper_case#9 )
  printf_number_buffer::padding#9 = phi( printf_number_buffer::@9/printf_number_buffer::padding#13 )
  printf_number_buffer::format_zero_padding#7 = phi( printf_number_buffer::@9/printf_number_buffer::format_zero_padding#13 )
  to:printf_number_buffer::@3
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@18 printf_number_buffer::@3
  printf_number_buffer::padding#15 = phi( printf_number_buffer::@18/printf_number_buffer::padding#16, printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_number_buffer::format_justify_left#10 = phi( printf_number_buffer::@18/printf_number_buffer::format_justify_left#12, printf_number_buffer::@3/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_zero_padding#15 = phi( printf_number_buffer::@18/printf_number_buffer::format_zero_padding#18, printf_number_buffer::@3/printf_number_buffer::format_zero_padding#2 )
  printf_number_buffer::buffer_digits#6 = phi( printf_number_buffer::@18/printf_number_buffer::buffer_digits#7, printf_number_buffer::@3/printf_number_buffer::buffer_digits#8 )
  printf_number_buffer::format_upper_case#1 = phi( printf_number_buffer::@18/printf_number_buffer::format_upper_case#2, printf_number_buffer::@3/printf_number_buffer::format_upper_case#3 )
  printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
  printf_number_buffer::$12 = ! printf_number_buffer::$31
  if(printf_number_buffer::$12) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@3
  printf_number_buffer::format_justify_left#17 = phi( printf_number_buffer::@3/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_zero_padding#20 = phi( printf_number_buffer::@3/printf_number_buffer::format_zero_padding#2 )
  printf_number_buffer::buffer_digits#11 = phi( printf_number_buffer::@3/printf_number_buffer::buffer_digits#8 )
  printf_number_buffer::format_upper_case#6 = phi( printf_number_buffer::@3/printf_number_buffer::format_upper_case#3 )
  printf_number_buffer::padding#6 = phi( printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_padding::pad#1 = '0'at
  printf_padding::length#1 = (byte)printf_number_buffer::padding#6
  call printf_padding 
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@10
  printf_number_buffer::padding#16 = phi( printf_number_buffer::@10/printf_number_buffer::padding#6 )
  printf_number_buffer::format_justify_left#12 = phi( printf_number_buffer::@10/printf_number_buffer::format_justify_left#17 )
  printf_number_buffer::format_zero_padding#18 = phi( printf_number_buffer::@10/printf_number_buffer::format_zero_padding#20 )
  printf_number_buffer::buffer_digits#7 = phi( printf_number_buffer::@10/printf_number_buffer::buffer_digits#11 )
  printf_number_buffer::format_upper_case#2 = phi( printf_number_buffer::@10/printf_number_buffer::format_upper_case#6 )
  to:printf_number_buffer::@4
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@20 printf_number_buffer::@4
  printf_number_buffer::padding#11 = phi( printf_number_buffer::@20/printf_number_buffer::padding#14, printf_number_buffer::@4/printf_number_buffer::padding#15 )
  printf_number_buffer::format_justify_left#6 = phi( printf_number_buffer::@20/printf_number_buffer::format_justify_left#9, printf_number_buffer::@4/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::format_zero_padding#9 = phi( printf_number_buffer::@20/printf_number_buffer::format_zero_padding#14, printf_number_buffer::@4/printf_number_buffer::format_zero_padding#15 )
  printf_number_buffer::buffer_digits#2 = phi( printf_number_buffer::@20/printf_number_buffer::buffer_digits#5, printf_number_buffer::@4/printf_number_buffer::buffer_digits#6 )
  cputs::s#1 = printf_number_buffer::buffer_digits#2
  call cputs 
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@5
  printf_number_buffer::padding#7 = phi( printf_number_buffer::@5/printf_number_buffer::padding#11 )
  printf_number_buffer::format_justify_left#2 = phi( printf_number_buffer::@5/printf_number_buffer::format_justify_left#6 )
  printf_number_buffer::format_zero_padding#3 = phi( printf_number_buffer::@5/printf_number_buffer::format_zero_padding#9 )
  printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
  printf_number_buffer::$14 = ! printf_number_buffer::$32
  printf_number_buffer::$15 = printf_number_buffer::format_justify_left#2 && printf_number_buffer::$14
  printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#7
  printf_number_buffer::$17 = ! printf_number_buffer::$16
  if(printf_number_buffer::$17) goto printf_number_buffer::@return
  to:printf_number_buffer::@12
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  printf_number_buffer::padding#17 = phi( printf_number_buffer::@4/printf_number_buffer::padding#15 )
  printf_number_buffer::format_justify_left#14 = phi( printf_number_buffer::@4/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::format_zero_padding#19 = phi( printf_number_buffer::@4/printf_number_buffer::format_zero_padding#15 )
  printf_number_buffer::buffer_digits#3 = phi( printf_number_buffer::@4/printf_number_buffer::buffer_digits#6 )
  strupr::str#0 = printf_number_buffer::buffer_digits#3
  call strupr 
  strupr::return#2 = strupr::return#1
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@11
  printf_number_buffer::padding#14 = phi( printf_number_buffer::@11/printf_number_buffer::padding#17 )
  printf_number_buffer::format_justify_left#9 = phi( printf_number_buffer::@11/printf_number_buffer::format_justify_left#14 )
  printf_number_buffer::format_zero_padding#14 = phi( printf_number_buffer::@11/printf_number_buffer::format_zero_padding#19 )
  printf_number_buffer::buffer_digits#5 = phi( printf_number_buffer::@11/printf_number_buffer::buffer_digits#3 )
  to:printf_number_buffer::@5
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  printf_number_buffer::padding#8 = phi( printf_number_buffer::@19/printf_number_buffer::padding#7 )
  printf_padding::pad#2 = ' 'at
  printf_padding::length#2 = (byte)printf_number_buffer::padding#8
  call printf_padding 
  to:printf_number_buffer::@21
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@19 printf_number_buffer::@21
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  call clrscr 
  to:main::@30
main::@30: scope:[main]  from main
  main::valid#0 = 0
  main::total#0 = 0
  main::pass#0 = passports
  to:main::@1
main::@1: scope:[main]  from main::@13 main::@24 main::@26 main::@27 main::@30
  main::total#12 = phi( main::@13/main::total#1, main::@24/main::total#14, main::@26/main::total#15, main::@27/main::total#16, main::@30/main::total#0 )
  main::valid#6 = phi( main::@13/main::valid#8, main::@24/main::valid#9, main::@26/main::valid#10, main::@27/main::valid#11, main::@30/main::valid#0 )
  main::pass#6 = phi( main::@13/main::pass#16, main::@24/main::pass#14, main::@26/main::pass#1, main::@27/main::pass#2, main::@30/main::pass#0 )
  main::$23 = 0 != *main::pass#6
  if(main::$23) goto main::@2
  to:main::@3
main::@2: scope:[main]  from main::@1
  main::total#19 = phi( main::@1/main::total#12 )
  main::valid#14 = phi( main::@1/main::valid#6 )
  main::pass#7 = phi( main::@1/main::pass#6 )
  main::$2 = *main::pass#7 == ' 'at
  main::$3 = ! main::$2
  if(main::$3) goto main::@4
  to:main::@26
main::@3: scope:[main]  from main::@1
  main::total#10 = phi( main::@1/main::total#12 )
  main::valid#4 = phi( main::@1/main::valid#6 )
  cputs::s#2 = main::s
  call cputs 
  to:main::@31
main::@31: scope:[main]  from main::@3
  main::total#7 = phi( main::@3/main::total#10 )
  main::valid#2 = phi( main::@3/main::valid#4 )
  printf_uint::uvalue#0 = main::valid#2
  printf_uint::format_min_length#0 = 0
  printf_uint::format_justify_left#0 = 0
  printf_uint::format_sign_always#0 = 0
  printf_uint::format_zero_padding#0 = 0
  printf_uint::format_upper_case#0 = 0
  printf_uint::format_radix#0 = DECIMAL
  call printf_uint 
  to:main::@32
main::@32: scope:[main]  from main::@31
  main::total#4 = phi( main::@31/main::total#7 )
  cputs::s#3 = main::s1
  call cputs 
  to:main::@33
main::@33: scope:[main]  from main::@32
  main::total#2 = phi( main::@32/main::total#4 )
  printf_uint::uvalue#1 = main::total#2
  printf_uint::format_min_length#1 = 0
  printf_uint::format_justify_left#1 = 0
  printf_uint::format_sign_always#1 = 0
  printf_uint::format_zero_padding#1 = 0
  printf_uint::format_upper_case#1 = 0
  printf_uint::format_radix#1 = DECIMAL
  call printf_uint 
  to:main::@34
main::@34: scope:[main]  from main::@33
  cputs::s#4 = main::s2
  call cputs 
  to:main::@35
main::@35: scope:[main]  from main::@34
  to:main::@29
main::@4: scope:[main]  from main::@2
  main::total#20 = phi( main::@2/main::total#19 )
  main::valid#15 = phi( main::@2/main::valid#14 )
  main::pass#8 = phi( main::@2/main::pass#7 )
  main::$4 = *main::pass#8 == '
'at
  main::$5 = ! main::$4
  if(main::$5) goto main::@5
  to:main::@27
main::@26: scope:[main]  from main::@2
  main::total#15 = phi( main::@2/main::total#19 )
  main::valid#10 = phi( main::@2/main::valid#14 )
  main::pass#9 = phi( main::@2/main::pass#7 )
  main::pass#1 = ++ main::pass#9
  to:main::@1
main::@5: scope:[main]  from main::@4
  main::total#28 = phi( main::@4/main::total#20 )
  main::valid#26 = phi( main::@4/main::valid#15 )
  main::pass#23 = phi( main::@4/main::pass#8 )
  main::required_tag#0 = required_tags
  main::tag_idx#0 = 0
  to:main::@14
main::@27: scope:[main]  from main::@4
  main::total#16 = phi( main::@4/main::total#20 )
  main::valid#11 = phi( main::@4/main::valid#15 )
  main::pass#10 = phi( main::@4/main::pass#8 )
  main::pass#2 = ++ main::pass#10
  main::$6 = *main::pass#2 == '
'at
  main::$7 = ! main::$6
  if(main::$7) goto main::@1
  to:main::@28
main::@28: scope:[main]  from main::@27
  main::total#17 = phi( main::@27/main::total#16 )
  main::valid#12 = phi( main::@27/main::valid#11 )
  main::pass#11 = phi( main::@27/main::pass#2 )
  main::pass#3 = ++ main::pass#11
  main::num_found#0 = 0
  main::i#0 = 0
  to:main::@6
main::@6: scope:[main]  from main::@28 main::@9
  main::pass#31 = phi( main::@28/main::pass#3, main::@9/main::pass#32 )
  main::total#13 = phi( main::@28/main::total#17, main::@9/main::total#18 )
  main::valid#7 = phi( main::@28/main::valid#12, main::@9/main::valid#13 )
  main::num_found#4 = phi( main::@28/main::num_found#0, main::@9/main::num_found#6 )
  main::i#2 = phi( main::@28/main::i#0, main::@9/main::i#1 )
  main::$8 = main::i#2 < 7
  if(main::$8) goto main::@7
  to:main::@8
main::@7: scope:[main]  from main::@6
  main::pass#34 = phi( main::@6/main::pass#31 )
  main::total#22 = phi( main::@6/main::total#13 )
  main::valid#17 = phi( main::@6/main::valid#7 )
  main::num_found#5 = phi( main::@6/main::num_found#4 )
  main::i#3 = phi( main::@6/main::i#2 )
  main::$24 = 0 != main::tags_found[main::i#3]
  main::$9 = ! main::$24
  if(main::$9) goto main::@9
  to:main::@10
main::@8: scope:[main]  from main::@6
  main::pass#30 = phi( main::@6/main::pass#31 )
  main::total#11 = phi( main::@6/main::total#13 )
  main::valid#5 = phi( main::@6/main::valid#7 )
  main::num_found#2 = phi( main::@6/main::num_found#4 )
  main::$10 = main::num_found#2 == 7
  if(main::$10) goto main::@12
  to:main::@11
main::@9: scope:[main]  from main::@10 main::@7
  main::pass#32 = phi( main::@10/main::pass#33, main::@7/main::pass#34 )
  main::total#18 = phi( main::@10/main::total#21, main::@7/main::total#22 )
  main::valid#13 = phi( main::@10/main::valid#16, main::@7/main::valid#17 )
  main::num_found#6 = phi( main::@10/main::num_found#1, main::@7/main::num_found#5 )
  main::i#4 = phi( main::@10/main::i#5, main::@7/main::i#3 )
  main::tags_found[main::i#4] = 0
  main::i#1 = ++ main::i#4
  to:main::@6
main::@10: scope:[main]  from main::@7
  main::pass#33 = phi( main::@7/main::pass#34 )
  main::total#21 = phi( main::@7/main::total#22 )
  main::valid#16 = phi( main::@7/main::valid#17 )
  main::i#5 = phi( main::@7/main::i#3 )
  main::num_found#3 = phi( main::@7/main::num_found#5 )
  main::num_found#1 = ++ main::num_found#3
  to:main::@9
main::@12: scope:[main]  from main::@8
  main::pass#27 = phi( main::@8/main::pass#30 )
  main::total#8 = phi( main::@8/main::total#11 )
  main::valid#3 = phi( main::@8/main::valid#5 )
  main::valid#1 = ++ main::valid#3
  cputs::s#5 = main::s3
  call cputs 
  to:main::@36
main::@36: scope:[main]  from main::@12
  main::valid#18 = phi( main::@12/main::valid#1 )
  main::pass#20 = phi( main::@12/main::pass#27 )
  main::total#5 = phi( main::@12/main::total#8 )
  to:main::@13
main::@11: scope:[main]  from main::@8
  main::valid#22 = phi( main::@8/main::valid#5 )
  main::pass#28 = phi( main::@8/main::pass#30 )
  main::total#9 = phi( main::@8/main::total#11 )
  cputs::s#6 = main::s4
  call cputs 
  to:main::@37
main::@37: scope:[main]  from main::@11
  main::valid#19 = phi( main::@11/main::valid#22 )
  main::pass#21 = phi( main::@11/main::pass#28 )
  main::total#6 = phi( main::@11/main::total#9 )
  to:main::@13
main::@13: scope:[main]  from main::@36 main::@37
  main::valid#8 = phi( main::@36/main::valid#18, main::@37/main::valid#19 )
  main::pass#16 = phi( main::@36/main::pass#20, main::@37/main::pass#21 )
  main::total#3 = phi( main::@36/main::total#5, main::@37/main::total#6 )
  main::total#1 = ++ main::total#3
  to:main::@1
main::@14: scope:[main]  from main::@22 main::@5
  main::total#25 = phi( main::@22/main::total#27, main::@5/main::total#28 )
  main::valid#23 = phi( main::@22/main::valid#25, main::@5/main::valid#26 )
  main::required_tag#8 = phi( main::@22/main::required_tag#1, main::@5/main::required_tag#0 )
  main::pass#18 = phi( main::@22/main::pass#22, main::@5/main::pass#23 )
  main::tag_idx#2 = phi( main::@22/main::tag_idx#1, main::@5/main::tag_idx#0 )
  main::$13 = main::tag_idx#2 < 7
  if(main::$13) goto main::@15
  to:main::@23
main::@15: scope:[main]  from main::@14
  main::total#31 = phi( main::@14/main::total#25 )
  main::valid#29 = phi( main::@14/main::valid#23 )
  main::tag_idx#7 = phi( main::@14/main::tag_idx#2 )
  main::pass#24 = phi( main::@14/main::pass#18 )
  main::required_tag#6 = phi( main::@14/main::required_tag#8 )
  main::match#0 = 0
  main::i1#0 = 0
  to:main::@16
main::@16: scope:[main]  from main::@15 main::@19
  main::total#30 = phi( main::@15/main::total#31, main::@19/main::total#32 )
  main::valid#28 = phi( main::@15/main::valid#29, main::@19/main::valid#30 )
  main::tag_idx#6 = phi( main::@15/main::tag_idx#7, main::@19/main::tag_idx#8 )
  main::match#4 = phi( main::@15/main::match#0, main::@19/main::match#6 )
  main::pass#17 = phi( main::@15/main::pass#24, main::@19/main::pass#25 )
  main::required_tag#4 = phi( main::@15/main::required_tag#6, main::@19/main::required_tag#7 )
  main::i1#2 = phi( main::@15/main::i1#0, main::@19/main::i1#1 )
  main::$14 = main::i1#2 < 3
  if(main::$14) goto main::@17
  to:main::@18
main::@17: scope:[main]  from main::@16
  main::total#33 = phi( main::@16/main::total#30 )
  main::valid#31 = phi( main::@16/main::valid#28 )
  main::tag_idx#9 = phi( main::@16/main::tag_idx#6 )
  main::match#5 = phi( main::@16/main::match#4 )
  main::pass#12 = phi( main::@16/main::pass#17 )
  main::i1#3 = phi( main::@16/main::i1#2 )
  main::required_tag#2 = phi( main::@16/main::required_tag#4 )
  main::$15 = main::required_tag#2[main::i1#3] == main::pass#12[main::i1#3]
  main::$16 = ! main::$15
  if(main::$16) goto main::@19
  to:main::@20
main::@18: scope:[main]  from main::@16
  main::total#29 = phi( main::@16/main::total#30 )
  main::valid#27 = phi( main::@16/main::valid#28 )
  main::pass#26 = phi( main::@16/main::pass#17 )
  main::tag_idx#5 = phi( main::@16/main::tag_idx#6 )
  main::required_tag#5 = phi( main::@16/main::required_tag#4 )
  main::match#2 = phi( main::@16/main::match#4 )
  main::$17 = main::match#2 == 3
  main::$18 = ! main::$17
  if(main::$18) goto main::@22
  to:main::@21
main::@19: scope:[main]  from main::@17 main::@20
  main::total#32 = phi( main::@17/main::total#33, main::@20/main::total#34 )
  main::valid#30 = phi( main::@17/main::valid#31, main::@20/main::valid#32 )
  main::tag_idx#8 = phi( main::@17/main::tag_idx#9, main::@20/main::tag_idx#10 )
  main::match#6 = phi( main::@17/main::match#5, main::@20/main::match#1 )
  main::pass#25 = phi( main::@17/main::pass#12, main::@20/main::pass#29 )
  main::required_tag#7 = phi( main::@17/main::required_tag#2, main::@20/main::required_tag#9 )
  main::i1#4 = phi( main::@17/main::i1#3, main::@20/main::i1#5 )
  main::i1#1 = ++ main::i1#4
  to:main::@16
main::@20: scope:[main]  from main::@17
  main::total#34 = phi( main::@17/main::total#33 )
  main::valid#32 = phi( main::@17/main::valid#31 )
  main::tag_idx#10 = phi( main::@17/main::tag_idx#9 )
  main::pass#29 = phi( main::@17/main::pass#12 )
  main::required_tag#9 = phi( main::@17/main::required_tag#2 )
  main::i1#5 = phi( main::@17/main::i1#3 )
  main::match#3 = phi( main::@17/main::match#5 )
  main::match#1 = ++ main::match#3
  to:main::@19
main::@22: scope:[main]  from main::@18
  main::total#27 = phi( main::@18/main::total#29 )
  main::valid#25 = phi( main::@18/main::valid#27 )
  main::pass#22 = phi( main::@18/main::pass#26 )
  main::tag_idx#3 = phi( main::@18/main::tag_idx#5 )
  main::required_tag#3 = phi( main::@18/main::required_tag#5 )
  main::required_tag#1 = main::required_tag#3 + 3
  main::tag_idx#1 = ++ main::tag_idx#3
  to:main::@14
main::@21: scope:[main]  from main::@18
  main::total#26 = phi( main::@18/main::total#29 )
  main::valid#24 = phi( main::@18/main::valid#27 )
  main::pass#19 = phi( main::@18/main::pass#26 )
  main::tag_idx#4 = phi( main::@18/main::tag_idx#5 )
  main::tags_found[main::tag_idx#4] = 1
  to:main::@23
main::@23: scope:[main]  from main::@14 main::@21
  main::total#23 = phi( main::@14/main::total#25, main::@21/main::total#26 )
  main::valid#20 = phi( main::@14/main::valid#23, main::@21/main::valid#24 )
  main::pass#13 = phi( main::@14/main::pass#18, main::@21/main::pass#19 )
  main::pass#4 = main::pass#13 + 3
  to:main::@24
main::@24: scope:[main]  from main::@23 main::@25
  main::total#14 = phi( main::@23/main::total#23, main::@25/main::total#24 )
  main::valid#9 = phi( main::@23/main::valid#20, main::@25/main::valid#21 )
  main::pass#14 = phi( main::@23/main::pass#4, main::@25/main::pass#5 )
  main::$19 = *main::pass#14 != ' 'at
  main::$20 = *main::pass#14 && main::$19
  main::$21 = *main::pass#14 != '
'at
  main::$22 = main::$20 && main::$21
  if(main::$22) goto main::@25
  to:main::@1
main::@25: scope:[main]  from main::@24
  main::total#24 = phi( main::@24/main::total#14 )
  main::valid#21 = phi( main::@24/main::valid#9 )
  main::pass#15 = phi( main::@24/main::pass#14 )
  main::pass#5 = ++ main::pass#15
  to:main::@24
main::@29: scope:[main]  from main::@29 main::@35
  to:main::@29
main::@return: scope:[main]  from
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  conio_reverse_value = 0
  conio_display_cursor = 1
  conio_scroll_enable = 1
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  call main 
  to:__start::@2
__start::@2: scope:[__start]  from __start::@1
  to:__start::@return
__start::@return: scope:[__start]  from __start::@2
  return 
  to:@return

SYMBOL TABLE SSA
const byte BINARY = 2
const word* COLCRS = (word*)$55
const nomodify byte* CRSINH = (byte*)$2f0
const byte DECIMAL = $a
const byte* DIGITS[]  = "0123456789abcdef"atz
const byte HEXADECIMAL = $10
const byte OCTAL = 8
const byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
const byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN = 0
const nomodify byte** OLDADR = (byte**)$5e
const nomodify byte* OLDCHR = (byte*)$5d
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const word* RADIX_BINARY_VALUES[]  = { $8000, $4000, $2000, $1000, $800, $400, $200, $100, $80, $40, $20, $10, 8, 4, 2 }
const word* RADIX_DECIMAL_VALUES[]  = { $2710, $3e8, $64, $a }
const word* RADIX_HEXADECIMAL_VALUES[]  = { $1000, $100, $10 }
const word* RADIX_OCTAL_VALUES[]  = { $8000, $1000, $200, $40, 8 }
const byte* ROWCRS = (byte*)$54
const nomodify byte** SAVMSC = (byte**)$58
const byte SIZEOF_WORD = 2
void __start()
void clrscr()
byte conio_display_cursor loadstore
byte conio_reverse_value loadstore
byte conio_scroll_enable loadstore
void cputc(volatile byte cputc::c)
bool~ cputc::$0
bool~ cputc::$1
bool~ cputc::$2
bool~ cputc::$3
byte~ cputc::$4
bool~ cputc::$7
volatile byte cputc::c loadstore
byte cputc::convertToScreenCode1_return
byte cputc::convertToScreenCode1_return#0
byte cputc::convertToScreenCode1_return#1
byte cputc::convertToScreenCode1_return#2
byte cputc::convertToScreenCode1_return#3
byte* cputc::convertToScreenCode1_v
byte* cputc::convertToScreenCode1_v#0
byte* cputc::convertToScreenCode1_v#1
void cputs(to_nomodify byte* cputs::s)
byte~ cputs::$0
bool~ cputs::$2
byte cputs::c
byte cputs::c#0
byte cputs::c#1
byte cputs::c#2
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0
to_nomodify byte* cputs::s#1
to_nomodify byte* cputs::s#10
to_nomodify byte* cputs::s#2
to_nomodify byte* cputs::s#3
to_nomodify byte* cputs::s#4
to_nomodify byte* cputs::s#5
to_nomodify byte* cputs::s#6
to_nomodify byte* cputs::s#7
to_nomodify byte* cputs::s#8
to_nomodify byte* cputs::s#9
byte* cursorLocation()
number~ cursorLocation::$0
byte*~ cursorLocation::$1
byte*~ cursorLocation::$2
word~ cursorLocation::$3
byte* cursorLocation::return
byte* cursorLocation::return#0
byte* cursorLocation::return#1
byte* cursorLocation::return#2
byte* cursorLocation::return#3
byte* cursorLocation::return#4
byte* cursorLocation::return#5
byte* cursorLocation::return#6
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte gotoxy::x
byte gotoxy::x#0
byte gotoxy::x#1
byte gotoxy::x#2
byte gotoxy::y
byte gotoxy::y#0
byte gotoxy::y#1
byte gotoxy::y#2
void main()
bool~ main::$10
bool~ main::$13
bool~ main::$14
bool~ main::$15
bool~ main::$16
bool~ main::$17
bool~ main::$18
bool~ main::$19
bool~ main::$2
bool~ main::$20
bool~ main::$21
bool~ main::$22
bool~ main::$23
bool~ main::$24
bool~ main::$3
bool~ main::$4
bool~ main::$5
bool~ main::$6
bool~ main::$7
bool~ main::$8
bool~ main::$9
byte main::i
byte main::i#0
byte main::i#1
byte main::i#2
byte main::i#3
byte main::i#4
byte main::i#5
byte main::i1
byte main::i1#0
byte main::i1#1
byte main::i1#2
byte main::i1#3
byte main::i1#4
byte main::i1#5
byte main::match
byte main::match#0
byte main::match#1
byte main::match#2
byte main::match#3
byte main::match#4
byte main::match#5
byte main::match#6
byte main::num_found
byte main::num_found#0
byte main::num_found#1
byte main::num_found#2
byte main::num_found#3
byte main::num_found#4
byte main::num_found#5
byte main::num_found#6
byte* main::pass
byte* main::pass#0
byte* main::pass#1
byte* main::pass#10
byte* main::pass#11
byte* main::pass#12
byte* main::pass#13
byte* main::pass#14
byte* main::pass#15
byte* main::pass#16
byte* main::pass#17
byte* main::pass#18
byte* main::pass#19
byte* main::pass#2
byte* main::pass#20
byte* main::pass#21
byte* main::pass#22
byte* main::pass#23
byte* main::pass#24
byte* main::pass#25
byte* main::pass#26
byte* main::pass#27
byte* main::pass#28
byte* main::pass#29
byte* main::pass#3
byte* main::pass#30
byte* main::pass#31
byte* main::pass#32
byte* main::pass#33
byte* main::pass#34
byte* main::pass#4
byte* main::pass#5
byte* main::pass#6
byte* main::pass#7
byte* main::pass#8
byte* main::pass#9
byte* main::required_tag
byte* main::required_tag#0
byte* main::required_tag#1
byte* main::required_tag#2
byte* main::required_tag#3
byte* main::required_tag#4
byte* main::required_tag#5
byte* main::required_tag#6
byte* main::required_tag#7
byte* main::required_tag#8
byte* main::required_tag#9
const byte* main::s[8]  = "
Valid "at
const byte* main::s1[8]  = " Total "at
const byte* main::s2[2]  = "
"at
const byte* main::s3[2]  = "+"at
const byte* main::s4[2]  = "."at
byte main::tag_idx
byte main::tag_idx#0
byte main::tag_idx#1
byte main::tag_idx#10
byte main::tag_idx#2
byte main::tag_idx#3
byte main::tag_idx#4
byte main::tag_idx#5
byte main::tag_idx#6
byte main::tag_idx#7
byte main::tag_idx#8
byte main::tag_idx#9
const byte* main::tags_found[7]  = { fill( 7, 0) }
word main::total
word main::total#0
word main::total#1
word main::total#10
word main::total#11
word main::total#12
word main::total#13
word main::total#14
word main::total#15
word main::total#16
word main::total#17
word main::total#18
word main::total#19
word main::total#2
word main::total#20
word main::total#21
word main::total#22
word main::total#23
word main::total#24
word main::total#25
word main::total#26
word main::total#27
word main::total#28
word main::total#29
word main::total#3
word main::total#30
word main::total#31
word main::total#32
word main::total#33
word main::total#34
word main::total#4
word main::total#5
word main::total#6
word main::total#7
word main::total#8
word main::total#9
word main::valid
word main::valid#0
word main::valid#1
word main::valid#10
word main::valid#11
word main::valid#12
word main::valid#13
word main::valid#14
word main::valid#15
word main::valid#16
word main::valid#17
word main::valid#18
word main::valid#19
word main::valid#2
word main::valid#20
word main::valid#21
word main::valid#22
word main::valid#23
word main::valid#24
word main::valid#25
word main::valid#26
word main::valid#27
word main::valid#28
word main::valid#29
word main::valid#3
word main::valid#30
word main::valid#31
word main::valid#32
word main::valid#4
word main::valid#5
word main::valid#6
word main::valid#7
word main::valid#8
word main::valid#9
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
byte*~ memcpy::$0
bool~ memcpy::$1
byte*~ memcpy::$2
void* memcpy::destination
void* memcpy::destination#0
void* memcpy::destination#1
void* memcpy::destination#2
void* memcpy::destination#3
void* memcpy::destination#4
byte* memcpy::dst
byte* memcpy::dst#0
byte* memcpy::dst#1
byte* memcpy::dst#2
byte* memcpy::dst#3
word memcpy::num
word memcpy::num#0
word memcpy::num#1
void* memcpy::return
void* memcpy::return#0
void* memcpy::return#1
void* memcpy::return#2
void* memcpy::return#3
void* memcpy::source
void* memcpy::source#0
void* memcpy::source#1
byte* memcpy::src
byte* memcpy::src#0
byte* memcpy::src#1
byte* memcpy::src#2
byte* memcpy::src#3
byte* memcpy::src_end
byte* memcpy::src_end#0
byte* memcpy::src_end#1
byte* memcpy::src_end#2
void* memset(void* memset::str , byte memset::c , word memset::num)
bool~ memset::$0
bool~ memset::$1
byte*~ memset::$2
bool~ memset::$3
byte*~ memset::$4
byte memset::c
byte memset::c#0
byte memset::c#1
byte memset::c#2
byte memset::c#3
byte memset::c#4
byte memset::c#5
byte* memset::dst
byte* memset::dst#0
byte* memset::dst#1
byte* memset::dst#2
byte* memset::dst#3
byte* memset::end
byte* memset::end#0
byte* memset::end#1
byte* memset::end#2
word memset::num
word memset::num#0
word memset::num#1
word memset::num#2
word memset::num#3
void* memset::return
void* memset::return#0
void* memset::return#1
void* memset::return#2
void* memset::return#3
void* memset::return#4
void* memset::str
void* memset::str#0
void* memset::str#1
void* memset::str#2
void* memset::str#3
void* memset::str#4
void* memset::str#5
void* memset::str#6
void newline()
bool~ newline::$0
bool~ newline::$1
bool~ newline::$3
bool~ newline::$5
bool~ newline::$6
byte*~ newline::$7
byte*~ newline::$9
byte* newline::start
byte* newline::start#0
byte* newline::start#1
const byte* passports = "ecl:grn
cid:315 iyr:2012 hgt:192cm eyr:2023 pid:873355140 byr:1925 hcl:#cb2c03

byr:2027 hcl:ec0cfd ecl:blu cid:120
eyr:1937 pid:106018766 iyr:2010 hgt:154cm

byr:1965 eyr:2028 hgt:157cm
cid:236 iyr:2018 ecl:brn
hcl:#cfa07d pid:584111467

eyr:2029 ecl:hzl
iyr:1972 byr:1966
pid:2898897192
hgt:59cm hcl:z

pid:231652013 hcl:#602927 hgt:166
ecl:grn eyr:2025
byr:2008 iyr:1986

byr:1928 hgt:167cm
hcl:#18171d iyr:2012
ecl:oth pid:237657808 eyr:1944

hgt:73in ecl:grn byr:1931 pid:358388825 iyr:2020
hcl:#602927 eyr:2020

hcl:#efcc98 eyr:2024 ecl:hzl
byr:2030 hgt:192cm
iyr:2013 pid:7479289410

pid:053467220 iyr:2012 hgt:169cm
cid:149 hcl:#866857
eyr:2030
byr:1995 ecl:oth

hgt:162cm hcl:#efcc98 ecl:grn byr:1985 pid:419840766
eyr:2022
iyr:2020

pid:22086957 hcl:c69235 ecl:#c458c5 eyr:1986 byr:2014 hgt:72cm iyr:1934

hcl:#866857
ecl:brn eyr:2024
iyr:2017
pid:505225484 cid:144
byr:1980
hgt:170cm

hcl:#866857 ecl:gry
byr:1972 iyr:2019 eyr:2023
cid:234 pid:721290041 hgt:191cm

pid:346301363
eyr:2020
hcl:#733820 iyr:2019 hgt:177cm
byr:1998

hgt:157cm byr:1963
pid:898055805
hcl:#fffffd ecl:blu iyr:2017 cid:87
eyr:2030

pid:605900764 iyr:2011
hgt:73in ecl:hzl eyr:2024
hcl:#888785
cid:281

iyr:2010 eyr:2026 hcl:#4f7e76 pid:883386029 byr:1946 ecl:brn

hcl:z
iyr:2020 pid:9121928466 byr:2014 ecl:zzz eyr:2025
hgt:172in

hgt:151cm cid:163 pid:670884417 iyr:2012
ecl:oth hcl:#ceb3a1
eyr:2028

hcl:z cid:92 hgt:69cm
byr:2008 pid:492284612
eyr:2020 iyr:2023
ecl:hzl

byr:1933
hcl:#7d3b0c eyr:2020 hgt:170cm
pid:949064511 iyr:2010
ecl:oth

eyr:2025 byr:1989 ecl:oth cid:100 hgt:182cm
pid:629190040 iyr:2017 hcl:#b6652a

ecl:hzl cid:76 hcl:#e71392 eyr:2021 iyr:2013 byr:1995
pid:762177473
hgt:179cm

pid:198500564 eyr:2029 hcl:#733820 cid:51 iyr:2012
hgt:70in byr:1938 ecl:oth

hgt:190cm ecl:brn byr:1952 iyr:2015 hcl:#623a2f
eyr:2023

hgt:169cm hcl:#602927 byr:2001 pid:823979592 iyr:2016 eyr:2029

iyr:2010 ecl:gry
eyr:2022 hgt:156cm byr:1953 pid:434063393
hcl:#733820

pid:091724580 hcl:a7069e eyr:1984 ecl:#95d01e byr:2012 iyr:2005

eyr:2022 byr:1972 hcl:#866857 ecl:hzl pid:227453248
hgt:153cm cid:324 iyr:2018

cid:195 pid:049871343
eyr:2024 hgt:169cm
byr:1952 iyr:2010 ecl:grn

eyr:2035 pid:189cm
hgt:77 iyr:1973 ecl:#dc83d5
hcl:z byr:2004

byr:2027
pid:89338932 hcl:1de39e ecl:grn hgt:159in eyr:2034 iyr:1937

pid:076534920
hgt:152cm
byr:1969
ecl:blu
hcl:#866857 iyr:2011 eyr:2024

iyr:2019 eyr:2028
ecl:blu hgt:169cm
hcl:#888785 pid:332202163 byr:1923

hgt:65in byr:1964 iyr:2019
pid:287612987 ecl:hzl cid:213 eyr:2023 hcl:#ceb3a1

hcl:#623a2f pid:182484027
iyr:2016 ecl:brn byr:1943
hgt:71in eyr:2021 cid:344

hcl:#cdee64 iyr:2011 ecl:brn eyr:2026 hgt:176cm
byr:1985 pid:978641227

eyr:2029 ecl:brn hgt:173cm byr:1920 cid:211
hcl:#866857
iyr:2016 pid:289769625

hcl:#7d3b0c pid:770938833 iyr:2010 byr:1941 ecl:oth eyr:2029 hgt:161cm

hgt:172cm iyr:2015 ecl:gry byr:1948
eyr:2029
pid:466359109 hcl:#341e13

cid:74 pid:405199325 ecl:blu
hcl:#6b5442
eyr:1980 byr:2024 hgt:174cm iyr:2011

hgt:183cm pid:075760048 cid:78 byr:1960 ecl:hzl eyr:2030 hcl:#6b5442 iyr:2014

cid:264 hcl:#7d3b0c
ecl:blu iyr:2011 eyr:2020 hgt:182cm
byr:1929

pid:435338286 byr:1931
hcl:z ecl:amb iyr:2013 hgt:73in
cid:165 eyr:2027

pid:511898552 eyr:2025 hgt:184cm hcl:#602927
iyr:2018 byr:1989 ecl:hzl

iyr:2016
hgt:168in
hcl:#623a2f
eyr:2025 pid:310738569 ecl:#0c3039
byr:2027

pid:158cm byr:1946 ecl:grt
iyr:1920 cid:189
hcl:389bce hgt:165cm

pid:973732906 hcl:#cfa07d iyr:2010 eyr:2020 hgt:180cm
byr:1930
ecl:brn

pid:930994364 byr:1967 hgt:151cm
iyr:2011 eyr:2022

eyr:1968 hgt:75cm cid:241
iyr:2011 pid:5493866745
ecl:grt
byr:1976 hcl:#a97842

eyr:2026 ecl:oth
iyr:2016 hcl:#c0946f
byr:1929
hgt:175cm
pid:9421898537

eyr:2028 iyr:2016 byr:1962
ecl:grn hgt:186cm hcl:#cfa07d pid:432962396

iyr:2010 byr:1934 eyr:2023 hgt:180cm hcl:#cfa07d ecl:gry

cid:168
byr:1978
eyr:2027 hgt:189cm pid:802710287
hcl:#2f980b iyr:2014
ecl:grn

eyr:1970
pid:576329104
ecl:xry iyr:1954 hcl:#341e13 byr:2026
hgt:74in

eyr:2027 hgt:153cm
ecl:oth
hcl:#866857
pid:290407832 byr:1956 iyr:2017

iyr:2011
cid:128
ecl:amb hcl:#7d3b0c hgt:68in pid:743606119 eyr:2020

ecl:oth hcl:#cfa07d
byr:2016 pid:#de98ae iyr:1984 cid:194
hgt:170cm
eyr:2034

pid:526098672 hgt:168cm
hcl:#7d3b0c cid:167 byr:1923 ecl:blu iyr:2016
eyr:2030

pid:495569197 hcl:#866857 hgt:193cm
iyr:2013 eyr:2021 byr:1921 ecl:amb

ecl:amb
hcl:#a97842 pid:862249915 iyr:2012 byr:1964
cid:325
eyr:2021

iyr:1958
byr:2003
hgt:160 hcl:#18171d
ecl:hzl eyr:2020

iyr:2019 byr:1997 ecl:brn
pid:342735713 hcl:#efcc98
hgt:181cm cid:307
eyr:2027

pid:817121616 eyr:2020
iyr:2012
hgt:185cm
hcl:#18171d byr:1969 ecl:hzl

pid:381399203
ecl:oth byr:1930
iyr:2014 hcl:#6b5442 hgt:71in cid:156 eyr:2025

byr:2002 hcl:#18171d iyr:2017
pid:398245854 hgt:64in ecl:gry eyr:2025 cid:127

eyr:2028 hcl:#341e13
ecl:amb iyr:2012
pid:079796480 hgt:69cm
byr:1995

cid:315 iyr:2028
pid:775929239
hgt:162cm ecl:dne byr:1940 eyr:1952 hcl:#c0946f

iyr:2015
hgt:154cm byr:1997
ecl:grn
cid:125 eyr:2024 pid:834780229
hcl:#18171d

ecl:hzl hcl:#a97842 pid:553710574 eyr:2028
hgt:183cm cid:196
iyr:2014

pid:377912488 hgt:159cm ecl:amb eyr:2024 byr:1974
iyr:2014
hcl:#ceb3a1

eyr:2024
byr:1947 hgt:63in ecl:brn
cid:69
pid:185228911 hcl:#b6652a iyr:2016

eyr:2024
hgt:168cm hcl:#602927
iyr:2013
byr:1993
pid:681091728 ecl:gry cid:203

pid:037922164 iyr:2020
byr:1990 hgt:156cm eyr:2023 hcl:#866857
cid:97 ecl:grn

hgt:170cm pid:980455250
iyr:2011 ecl:hzl byr:1957
eyr:2030 hcl:#cfa07d

hgt:158cm
hcl:#602927
byr:2002 ecl:hzl iyr:2013
cid:99
eyr:2020 pid:48646993

byr:1955 pid:814033843 eyr:2030 hcl:#a97842
hgt:191cm iyr:2019

pid:111196491 hgt:191cm iyr:2012 ecl:blu hcl:#a97842
eyr:2026 cid:131 byr:1979

hcl:#fffffd hgt:68in
cid:121 ecl:oth eyr:2024 pid:343836937
byr:1955
iyr:2020

eyr:2025 byr:1954
pid:737517118
cid:343 hcl:#b6652a
iyr:2017 ecl:hzl
hgt:175cm

ecl:brn
iyr:2011 hgt:171cm cid:102 pid:066348279 byr:1981

ecl:oth iyr:2018 byr:1975
eyr:2029
hgt:185cm cid:226
pid:978243407 hcl:#341e13

iyr:2015 pid:918017915 hcl:#3e52b7
byr:1999 ecl:brn cid:314
eyr:2025 hgt:192cm

hcl:#19d1fa byr:1984 ecl:dne hgt:76in
iyr:2015 cid:118 pid:417075672
eyr:2020

iyr:2019
cid:120 hgt:186cm
hcl:#733820 eyr:2024 pid:423238982 ecl:brn byr:1968

hgt:70cm cid:173 pid:767014975
hcl:#866857 eyr:2039 ecl:brn byr:1985

pid:340424924
eyr:2027 hcl:#7d3b0c
hgt:168cm ecl:hzl iyr:2016
byr:1994

ecl:hzl byr:1933 pid:580425691
iyr:2010 hcl:#c0946f eyr:2024
hgt:64in

hcl:#9fe6b0 pid:913184461 ecl:grn eyr:2030
cid:262 iyr:2014

ecl:amb pid:640007768 eyr:2030 byr:2017 iyr:1988 hcl:z

byr:1977 cid:54
eyr:1939 pid:882762394 iyr:2030 hcl:#ceb3a1 ecl:blu

iyr:2011 hcl:#7d3b0c byr:1928
pid:340969354 cid:199 hgt:168cm eyr:2029 ecl:hzl

pid:729464282
iyr:2012 hcl:baae60
eyr:2026 ecl:hzl hgt:166cm byr:2019

pid:930997801 iyr:2019 eyr:2030
hcl:#866857 ecl:oth byr:1960 cid:235 hgt:73in

ecl:brn
byr:1988 hgt:179cm iyr:2017
pid:864768439 cid:305 hcl:#c0946f
eyr:2029

hcl:#7d3b0c ecl:grn
hgt:182cm eyr:2021 pid:719891314
byr:1920 iyr:2017

hgt:62cm
cid:71 ecl:brn hcl:#fffffd iyr:2025 eyr:1997
pid:175cm byr:2022

hcl:#cfa07d cid:239 eyr:2025 ecl:hzl hgt:189in byr:1980 iyr:2020
pid:703047050

byr:1951
eyr:2030
ecl:hzl
pid:130992467 hgt:157cm hcl:#341e13

hgt:175cm
hcl:#623a2f
cid:68 eyr:2025
byr:2001 ecl:oth pid:253618704 iyr:2016

hcl:#fffffd pid:379344553 ecl:grn
eyr:2026
hgt:72in byr:1974 iyr:2013

ecl:#b4e952 byr:1970 hcl:z
eyr:2039 pid:6056894636 iyr:2021 hgt:165cm
cid:328

hcl:#602927 iyr:2014 pid:890429537 byr:1957 hgt:68in eyr:2020 ecl:hzl

cid:265 byr:1961 hcl:#ceb3a1 eyr:2022 iyr:2016 hgt:184cm pid:921615309

byr:1951 eyr:2024
hcl:#341e13
ecl:amb pid:414644982
iyr:2010 hgt:159cm

iyr:2015 cid:319
eyr:2029 ecl:brn pid:380237898
hcl:#efcc98 hgt:157cm byr:1972

pid:237156579 ecl:#312a91
hgt:167cm iyr:2011 hcl:#c0946f eyr:2021 byr:1953

ecl:hzl iyr:2015 pid:10160221 eyr:2025 hgt:175cm hcl:z byr:1939

hgt:59in hcl:#18171d byr:1962 ecl:hzl
iyr:2019 eyr:2025
cid:337 pid:491938615

ecl:utc hgt:82 pid:51674655 byr:2020
eyr:1954 iyr:2029 hcl:z

pid:119530189
cid:103
iyr:2010 byr:1979
hgt:168cm hcl:#a97842 ecl:brn eyr:2029

hgt:177cm ecl:brn
byr:1990
pid:015089628 eyr:2028 hcl:#733820 iyr:2020

ecl:blu iyr:2020 hgt:189cm
hcl:#efcc98 byr:1982 pid:346500376 eyr:2021 cid:160

ecl:brn hgt:173cm iyr:2011 cid:259 hcl:#6b5442 eyr:2026
byr:1995
pid:654875035

ecl:grn eyr:2025 pid:147155222 byr:1942
cid:341 hcl:#602927
hgt:165cm
iyr:2016

pid:543171646
hgt:153cm
iyr:2019 hcl:#fffffd byr:1985 cid:266
eyr:2027
ecl:hzl

ecl:blu
eyr:2022
pid:667939101 byr:1974
cid:259 hcl:#888785

eyr:2030 byr:2016 iyr:2022
pid:86902982
ecl:zzz hgt:72 hcl:ceb867

hcl:#fffffd
ecl:grn pid:046978329
byr:1924
eyr:2025 hgt:158cm iyr:2011

hgt:150cm eyr:2028 byr:1985 ecl:gry hcl:#866857 pid:340615189
iyr:2017
cid:50

cid:171 hcl:#18171d pid:009562218 byr:1981 hgt:175cm eyr:2024 ecl:oth iyr:2017

iyr:2019
eyr:2022
ecl:brn hcl:#cfa07d pid:050270380 cid:159
hgt:151cm
byr:1951

hcl:#7d3b0c hgt:176cm iyr:2015 byr:1923 pid:348188421 ecl:blu eyr:2029

byr:1997 hgt:162cm eyr:2023 pid:445685977
iyr:2012 ecl:amb hcl:#efcc98

iyr:2017 ecl:oth eyr:2028 pid:791977055 hgt:170cm byr:1991
hcl:#623a2f

byr:1998 hcl:#fffffd
eyr:2020
ecl:gry pid:039483695 hgt:163cm iyr:2020
cid:165

ecl:hzl hgt:74in iyr:2016 pid:026214321
cid:152 hcl:#a1f179
eyr:2036 byr:2001

pid:257900949 cid:80 byr:1956 iyr:2012 hgt:165cm eyr:2030

pid:918371363
ecl:xry
iyr:2012
byr:2012 hgt:65cm
eyr:2029

pid:041789006 iyr:2018 byr:1945 eyr:2024 ecl:blu
hcl:#5ab31e hgt:171cm

ecl:gry
byr:1956 cid:318 iyr:2020 hcl:#623a2f
eyr:2030 pid:020576506 hgt:184cm

hgt:173cm iyr:2025
eyr:2023
ecl:amb pid:958983168 hcl:#866857 byr:1935

byr:1974
eyr:2040 pid:57104308 iyr:1980 hcl:z
hgt:192in cid:295 ecl:amb

pid:180cm hcl:1109f7 eyr:2039 byr:2020
ecl:dne hgt:189in iyr:1921

iyr:2013 byr:1961
hcl:#866857
eyr:2025 hgt:158cm ecl:gry

ecl:brn iyr:2013 eyr:2021 pid:978650418 byr:1980
hcl:#ceb3a1 cid:110
hgt:166cm

pid:864880558 ecl:hzl hcl:#c0946f byr:1955 eyr:2027 hgt:169cm iyr:2011

eyr:2023 hgt:191cm hcl:#866857
pid:454509887
ecl:grn byr:1938 iyr:2015

pid:793008846 eyr:2025 ecl:grn hcl:#341e13
hgt:187cm
byr:1973 cid:224
iyr:2013

hcl:#866857 eyr:2022 pid:802335395 hgt:171cm ecl:amb
iyr:2015 byr:1991

hcl:#888785 pid:768625886
hgt:180cm
eyr:2026 ecl:oth cid:178 byr:1958

pid:921387245 cid:82 hgt:190cm hcl:#c0946f ecl:grn
iyr:2015 eyr:2023

pid:0704550258 hcl:1ba8f6 iyr:2010 byr:1978 cid:130
eyr:2030 ecl:dne hgt:66cm

pid:626293279 hcl:#7d3b0c hgt:185cm ecl:oth
eyr:2020 byr:1937 iyr:2012

hgt:175
eyr:1933 ecl:gry
hcl:#7d3b0c byr:2003 pid:#5d8fcc
iyr:2012

eyr:2027
byr:1927 cid:154
ecl:gry pid:683668809 hgt:164cm
hcl:#a97842 iyr:2011

byr:1940 iyr:2014 hgt:172cm eyr:2024 pid:033678324 hcl:#10fded
cid:292 ecl:oth

iyr:1970 ecl:#201515 pid:#4cd485 eyr:2034 hgt:162
byr:2005 cid:67
hcl:#c0946f

cid:306
byr:1948
hcl:#efcc98
eyr:2024 hgt:171cm pid:440657854 iyr:2015 ecl:brn

hgt:172cm ecl:brn byr:1958 pid:054926969 hcl:#4b8065 iyr:2019

pid:45977569 ecl:amb byr:2002 hgt:71cm hcl:z iyr:1983

pid:811407848 hcl:#866857 cid:112 hgt:180cm byr:1986
ecl:brn eyr:2026

ecl:amb
byr:1992
cid:288 pid:417117245 hcl:#623a2f
iyr:2011 hgt:181cm
eyr:2021

byr:1974 hgt:192cm cid:172
eyr:2022
ecl:blu
hcl:#cfa07d iyr:2014

eyr:2024 ecl:gry
pid:874569675 byr:1960 iyr:2017 hgt:186cm
hcl:#6b5442

byr:1988 eyr:2024 iyr:2020 ecl:oth hcl:#866857 pid:227304269 hgt:170cm

ecl:grn iyr:2019 byr:2002 cid:150 hcl:#efcc98
pid:600740993
hgt:167cm eyr:2027

pid:553824537 iyr:2019 ecl:blu eyr:2025 hcl:#e21269 hgt:193cm
byr:1923

byr:2030 iyr:2019 ecl:#cb0911
hcl:#cfa07d hgt:74in eyr:2012
pid:7647207386

cid:289 hgt:128 pid:178cm iyr:2025 ecl:#4ad977 byr:2020 eyr:2036 hcl:#efcc98

cid:119 hgt:150in
hcl:z
iyr:2012
ecl:brn eyr:1975
byr:2007 pid:#0dcd32

hcl:8a1ce7 pid:0434291854
eyr:2034 iyr:2005
hgt:62cm byr:2029 ecl:utc

ecl:gry hcl:#ceb3a1 byr:1976 eyr:2024 iyr:2010 hgt:188cm
pid:636312902

hcl:#888785 byr:2027 hgt:178in iyr:2017 pid:973095872 eyr:1952

hgt:179cm iyr:2015 hcl:#ceb3a1
byr:1944 pid:182079308 cid:317
eyr:2025 ecl:hzl

hcl:#6b5442 ecl:grn eyr:2023 hgt:71in pid:829794667 byr:2000
iyr:2014 cid:192

iyr:2014 pid:096659610 hcl:#c0946f ecl:oth byr:1991 cid:180
hgt:177cm
eyr:2023

byr:2017
eyr:2036 iyr:1933
cid:225 ecl:gmt hgt:179in
hcl:b5c44d pid:99932231

hcl:#18171d
hgt:187cm eyr:2023 byr:1934 cid:286 pid:878541119 iyr:2020 ecl:amb

hgt:185cm
pid:754207134 ecl:oth eyr:2023
hcl:#a97842 cid:313 byr:1966
iyr:2015

hcl:#ceb3a1 byr:1921 eyr:2022 pid:799265846 cid:285
hgt:67in iyr:2015

iyr:2011 byr:1941
hcl:#341e13 cid:65 pid:413556937
hgt:169cm
ecl:amb eyr:2020

iyr:2016
hgt:158cm ecl:grn byr:1931 hcl:#7d3b0c

pid:574299170 iyr:2013 byr:1961 ecl:hzl hcl:#866857 hgt:168cm eyr:2022

eyr:2022 pid:245416405
iyr:2019 hgt:173cm hcl:#c0946f
ecl:brn
byr:1965

byr:1980 hgt:162cm ecl:brn pid:239318191
hcl:#fffffd
cid:58 eyr:2025 iyr:2020

pid:892646915
iyr:2012 hcl:#733820 byr:1991 eyr:2021
hgt:157cm ecl:oth

pid:310597466 eyr:2025
hcl:#cfa07d byr:1944 iyr:2018 ecl:oth
hgt:183cm

iyr:2010 hgt:187cm ecl:oth
pid:975763328
hcl:#866857 eyr:2023 cid:283 byr:1997

iyr:2020 cid:225 hcl:#efcc98 pid:424680047 ecl:blu
hgt:154cm
byr:1968 eyr:2027

ecl:oth eyr:2020 hgt:183cm hcl:#623a2f
pid:771851807
byr:1990
iyr:2017

hcl:#efcc98 ecl:blu byr:1991 hgt:191cm pid:266021118
cid:124
eyr:2025

byr:1993
ecl:hzl eyr:2020
hgt:163cm
iyr:2015 pid:831538073 hcl:#18171d

hgt:74in hcl:#420afb eyr:2028
ecl:grn pid:264469103
byr:1993

eyr:2020
cid:79
byr:1972
pid:084953331 hcl:#a97842 ecl:brn iyr:2010
hgt:170cm

iyr:2014 ecl:gry pid:094812116 eyr:2026 hgt:190cm byr:1965 hcl:#944667

hcl:#fffffd byr:1953 iyr:2014 ecl:hzl hgt:164cm
cid:123 eyr:2023 pid:546394433

iyr:2012 hgt:155cm byr:1998 pid:#2c9be6 eyr:2023 hcl:#ceb3a1 ecl:gry

eyr:2029 ecl:gry pid:752489331 iyr:2015 hgt:167cm hcl:#18171d cid:70 byr:2002

byr:1938
ecl:gry
pid:764937909 iyr:2014
hcl:#7d3b0c
eyr:2022 cid:145 hgt:184cm

cid:340
byr:1924 hgt:169cm eyr:2026
iyr:2013 ecl:amb
pid:499844992 hcl:#18171d

pid:838417672 hgt:175cm
ecl:grt iyr:2017 eyr:2025 hcl:17aa1a

eyr:2020
byr:1925 hcl:#341e13
ecl:brn cid:342 pid:047426814 hgt:156cm iyr:2012

iyr:2011 hcl:#341e13 byr:1959
ecl:amb pid:969679865

byr:1978 cid:320 hgt:180cm hcl:#435ceb pid:363518544 eyr:2023 iyr:2016 ecl:blu

iyr:2010 eyr:2028
pid:183cm byr:1948
ecl:oth cid:133
hcl:#8d3298 hgt:190cm

hcl:#6b5442 byr:1929 iyr:2019 pid:207713865 eyr:2029
hgt:166cm ecl:gry

ecl:blu iyr:2019
byr:1985 eyr:2030 hcl:#866857 hgt:155cm pid:659180287

ecl:hzl
eyr:2020 iyr:2016 pid:440624039
cid:147
hgt:61in byr:1976 hcl:#733820

hcl:#341e13 pid:178082907 eyr:2023
iyr:2015 byr:1956
ecl:amb hgt:163cm

eyr:2023
iyr:2011 hcl:#cfa07d hgt:164cm
pid:291621559 byr:1960 ecl:gry

hcl:#efcc98 byr:1976
iyr:2017 pid:394566091 cid:248
hgt:176cm ecl:hzl eyr:2026

iyr:2013 eyr:2029 hgt:152cm ecl:gry byr:1984 hcl:#623a2f pid:511780941

pid:953716819 iyr:2010 hgt:156cm ecl:amb
byr:1947
hcl:#18171d eyr:2025

eyr:2025 ecl:amb
iyr:2016
hcl:#cfa07d byr:1925 pid:322787273 hgt:168cm

hgt:59in iyr:2012
pid:916978929 byr:1959
hcl:#c0946f eyr:2021
ecl:brn

byr:2018 eyr:1929 hgt:187in
hcl:z
iyr:2003 pid:0377361331 ecl:utc

byr:1949 hcl:#fffffd pid:071791776 eyr:2030 iyr:2015 hgt:71in ecl:hzl

hcl:#341e13
hgt:154cm byr:1927 eyr:2023 ecl:blu iyr:2017
pid:639867283

hcl:z pid:315276249 byr:2026
hgt:151cm
iyr:2028 eyr:2020
ecl:hzl

hcl:#341e13 eyr:2027 byr:1981 cid:342 pid:999898177 hgt:187cm
ecl:blu iyr:2011

byr:2009
hgt:73cm iyr:1921 hcl:z
pid:181cm
ecl:xry

ecl:hzl
byr:1925
pid:034183103 hcl:#341e13 hgt:158cm eyr:2029 iyr:2010

byr:1976
iyr:2011 hgt:177cm pid:833479839 hcl:#dcab9d ecl:blu eyr:2020

cid:230 hcl:#7d3b0c byr:1954
iyr:2014 eyr:2026 pid:122150889
ecl:brn hgt:182cm

hcl:#a97842
ecl:brn hgt:187cm
eyr:2028
pid:427631634 iyr:2002 byr:2004

pid:912516995 ecl:hzl iyr:2017 hcl:#ceb3a1 byr:1929 eyr:2028
hgt:155cm

pid:019809181
cid:128 iyr:2013 hcl:#f5b9f7 byr:1931
hgt:161cm
ecl:amb

hgt:64in byr:1924
iyr:2016 eyr:2029 ecl:hzl pid:474940085 hcl:#c0946f

pid:172419213
ecl:grn
hgt:193cm iyr:2010 byr:1973 hcl:#6b5442
eyr:2027

ecl:#7b5cfd iyr:2019
byr:2016
eyr:2040 hgt:191in
cid:187 hcl:z pid:#c61084

eyr:2032 iyr:2014 pid:430247344 byr:1967
hcl:#ceb3a1
cid:241
ecl:brn hgt:178in

hcl:#623a2f iyr:2017 cid:235
eyr:2020 byr:1978 ecl:blu hgt:175cm

iyr:2013 ecl:amb hgt:174cm hcl:#866857 pid:285533942 byr:1954

hgt:152cm ecl:blu pid:952587262 eyr:2024
iyr:2019 cid:268 hcl:#602927 byr:1947

hgt:176in cid:245 byr:2011 iyr:2018
eyr:1987
hcl:z
pid:346518170
ecl:utc

hgt:180cm
iyr:2015 ecl:brn eyr:2027 pid:807494368 cid:324 byr:1980

byr:1936 hcl:#866857 ecl:blu
eyr:2021 hgt:187cm
iyr:2016 pid:244556968

byr:1950 cid:125
iyr:2020 hgt:168cm hcl:#c0946f eyr:2030 pid:758313758 ecl:blu

eyr:2021
pid:618915663 hcl:#cfa07d iyr:2018 byr:2002
hgt:157cm ecl:blu

byr:1967
ecl:brn hcl:#c0946f pid:200495802 eyr:2021 iyr:2020
cid:335
hgt:181cm

byr:1996
ecl:brn iyr:2015
eyr:2030
hcl:#fffffd cid:207
pid:022460311 hgt:158cm

eyr:2022 hgt:59cm iyr:2023
byr:1974 pid:354098699 hcl:b244f7
ecl:#219505

hcl:#866857 eyr:2025
pid:370874666
byr:1947
cid:162 ecl:oth hgt:186cm iyr:2011

ecl:hzl eyr:2029
byr:1981
iyr:2012 pid:433430792 cid:252
hgt:171cm

pid:512473844 hgt:186cm iyr:2012 eyr:2028 byr:1949 ecl:hzl hcl:#18171d

hgt:60cm iyr:1934
ecl:#4a4017 pid:3067366202 hcl:1161df
eyr:1938 byr:2008

pid:119509757 hcl:#cfa07d eyr:2022 hgt:174cm byr:1983
iyr:2015
ecl:blu

byr:1955 eyr:2023
cid:114
hcl:f1aa8a pid:609049659 ecl:grn hgt:177cm
iyr:2015

eyr:2027 cid:284
pid:654627982 byr:1964 iyr:2018 hgt:168cm
hcl:#fffffd ecl:oth

iyr:1988
hgt:191cm hcl:b87a62 byr:1990 ecl:xry
pid:996624367 eyr:1960

pid:641466821 eyr:2028 hcl:#7d3b0c
iyr:2010 hgt:175cm ecl:gry

hcl:#b6652a
ecl:oth
byr:1926 eyr:2030 iyr:2019 hgt:183cm
pid:057196056

iyr:2017
eyr:2022 pid:936841429
ecl:blu hcl:#6b5442 cid:179 byr:1927 hgt:161cm

eyr:2021
cid:289 hgt:174cm iyr:2013
ecl:grn pid:329574701 byr:1970

eyr:2021 byr:1939 ecl:gry pid:933505139 iyr:2014 hgt:173cm hcl:#7d3b0c

cid:116 hcl:045bff eyr:2030 iyr:1920
ecl:brn
byr:2030
pid:#38f7f3
hgt:155in

eyr:2028
pid:225829241 byr:1928 hcl:#cfa07d iyr:2019
ecl:oth
hgt:166cm

cid:80 byr:1936
iyr:2017
hgt:94 hcl:#2e7503 ecl:oth eyr:2030
pid:597284996

ecl:oth
iyr:2019 hgt:76in
byr:1956 pid:821874039

eyr:2026 hgt:168cm
pid:019015588
iyr:2010
ecl:amb byr:2009 hcl:#623a2f cid:159

iyr:1980 hgt:167in
pid:380644909 eyr:1966 ecl:blu byr:2004 hcl:z

eyr:2020 iyr:2013
hcl:#08ad66 pid:540886868
ecl:oth byr:1980 hgt:158cm

eyr:2026 hgt:186cm byr:1995
cid:275
hcl:z iyr:1958 ecl:blu

eyr:2026 iyr:2012
hgt:61in byr:1936 pid:390833536 cid:298 ecl:grn hcl:#623a2f

pid:393878498 eyr:2023 ecl:gry byr:1943 iyr:2010 hcl:#888785 hgt:158cm

hgt:191cm cid:197 iyr:2014 byr:1945
hcl:#fffffd
eyr:2020
pid:183948344 ecl:amb

ecl:gmt hgt:88
cid:260 iyr:2024 byr:2022 eyr:2031 hcl:z pid:#532c6e

hcl:#a97842
hgt:160cm eyr:2024 ecl:blu iyr:2015 byr:1970

byr:1964 hgt:178cm
eyr:2025
pid:813643223 ecl:brn iyr:2014
hcl:#ceb3a1

byr:1965 eyr:2024 iyr:2018
hgt:165cm hcl:#18171d ecl:grn pid:475669993

hgt:116
iyr:2024 eyr:1974 hcl:504345 byr:2010 cid:206 pid:166cm ecl:zzz

iyr:2014 eyr:2020 pid:096460673 byr:1948
hgt:153cm
ecl:blu hcl:#341e13

hcl:#ceb3a1
iyr:2017 hgt:67cm
pid:178cm byr:2028 ecl:brn
cid:293

hgt:157cm
hcl:#602927 byr:1941
iyr:2012 pid:611003211 eyr:2029

iyr:2019 byr:2000 pid:083917767 eyr:2024 hgt:172cm
cid:248 hcl:#7e4d15

byr:1946
hgt:160cm iyr:2020 hcl:#559278 pid:989139577
ecl:amb eyr:2020

pid:165cm byr:1927 cid:178 hcl:#733820 iyr:2017 hgt:156in
eyr:2029 ecl:brn

hcl:#18171d hgt:163cm eyr:2022 byr:1962 pid:639124940 cid:258 ecl:hzl
iyr:2015

cid:123 pid:4542006033
eyr:1987 byr:2010 iyr:2029 ecl:amb
hgt:191cm hcl:#18171d

hcl:z
byr:1928 iyr:1965
eyr:2022 hgt:75 ecl:oth pid:400765046

hcl:#c0946f hgt:62in
ecl:blu byr:1978 iyr:1923
cid:260 eyr:2021 pid:404628742

pid:#bf1611 ecl:grn
iyr:2018 cid:146 byr:1948
eyr:2025 hcl:#fffffd hgt:87

pid:767547618
iyr:2018 hcl:#b6652a eyr:2029 hgt:165cm ecl:hzl byr:1937

ecl:blu iyr:2019 pid:960083875 eyr:2027 hgt:71in hcl:#c0946f
byr:1921

iyr:2011
pid:9562042482
hcl:z hgt:59cm
eyr:1994 cid:258 ecl:#6c1bcc byr:2025

eyr:2028 pid:494999718 byr:1928 hgt:176cm
iyr:2015 ecl:oth hcl:#733820

cid:78 eyr:2020 hgt:160cm byr:1947 ecl:blu
hcl:#b6652a iyr:2016 pid:069457741

hcl:#6b5442 iyr:2010
byr:1971
eyr:2028 hgt:169cm ecl:brn pid:528961949

eyr:2028
hcl:#7d3b0c
byr:1952
ecl:hzl
cid:317 iyr:2016
pid:832169844

hcl:#c0946f
ecl:brn
iyr:2017 eyr:2028
pid:161390075 byr:1993 cid:50
hgt:171cm

ecl:#ae12d3 hgt:74cm cid:239 hcl:z pid:345439730 iyr:1924 byr:2029 eyr:2031

"at
struct printf_buffer_number printf_buffer loadstore = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
bool~ printf_number_buffer::$0
bool~ printf_number_buffer::$1
bool~ printf_number_buffer::$10
bool~ printf_number_buffer::$12
bool~ printf_number_buffer::$14
bool~ printf_number_buffer::$15
bool~ printf_number_buffer::$16
bool~ printf_number_buffer::$17
word~ printf_number_buffer::$19
bool~ printf_number_buffer::$2
bool~ printf_number_buffer::$20
signed byte~ printf_number_buffer::$21
bool~ printf_number_buffer::$22
bool~ printf_number_buffer::$23
signed byte~ printf_number_buffer::$25
bool~ printf_number_buffer::$26
bool~ printf_number_buffer::$27
bool~ printf_number_buffer::$28
bool~ printf_number_buffer::$29
bool~ printf_number_buffer::$3
bool~ printf_number_buffer::$30
bool~ printf_number_buffer::$31
bool~ printf_number_buffer::$32
bool~ printf_number_buffer::$4
bool~ printf_number_buffer::$5
bool~ printf_number_buffer::$7
bool~ printf_number_buffer::$9
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
byte* printf_number_buffer::buffer_digits#0
byte* printf_number_buffer::buffer_digits#1
byte* printf_number_buffer::buffer_digits#10
byte* printf_number_buffer::buffer_digits#11
byte* printf_number_buffer::buffer_digits#12
byte* printf_number_buffer::buffer_digits#13
byte* printf_number_buffer::buffer_digits#14
byte* printf_number_buffer::buffer_digits#15
byte* printf_number_buffer::buffer_digits#16
byte* printf_number_buffer::buffer_digits#17
byte* printf_number_buffer::buffer_digits#18
byte* printf_number_buffer::buffer_digits#19
byte* printf_number_buffer::buffer_digits#2
byte* printf_number_buffer::buffer_digits#3
byte* printf_number_buffer::buffer_digits#4
byte* printf_number_buffer::buffer_digits#5
byte* printf_number_buffer::buffer_digits#6
byte* printf_number_buffer::buffer_digits#7
byte* printf_number_buffer::buffer_digits#8
byte* printf_number_buffer::buffer_digits#9
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0
byte printf_number_buffer::buffer_sign#1
byte printf_number_buffer::buffer_sign#10
byte printf_number_buffer::buffer_sign#11
byte printf_number_buffer::buffer_sign#2
byte printf_number_buffer::buffer_sign#3
byte printf_number_buffer::buffer_sign#4
byte printf_number_buffer::buffer_sign#5
byte printf_number_buffer::buffer_sign#6
byte printf_number_buffer::buffer_sign#7
byte printf_number_buffer::buffer_sign#8
byte printf_number_buffer::buffer_sign#9
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_justify_left#0
byte printf_number_buffer::format_justify_left#1
byte printf_number_buffer::format_justify_left#10
byte printf_number_buffer::format_justify_left#11
byte printf_number_buffer::format_justify_left#12
byte printf_number_buffer::format_justify_left#13
byte printf_number_buffer::format_justify_left#14
byte printf_number_buffer::format_justify_left#15
byte printf_number_buffer::format_justify_left#16
byte printf_number_buffer::format_justify_left#17
byte printf_number_buffer::format_justify_left#18
byte printf_number_buffer::format_justify_left#19
byte printf_number_buffer::format_justify_left#2
byte printf_number_buffer::format_justify_left#20
byte printf_number_buffer::format_justify_left#3
byte printf_number_buffer::format_justify_left#4
byte printf_number_buffer::format_justify_left#5
byte printf_number_buffer::format_justify_left#6
byte printf_number_buffer::format_justify_left#7
byte printf_number_buffer::format_justify_left#8
byte printf_number_buffer::format_justify_left#9
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_min_length#0
byte printf_number_buffer::format_min_length#1
byte printf_number_buffer::format_min_length#2
byte printf_number_buffer::format_min_length#3
byte printf_number_buffer::format_min_length#4
byte printf_number_buffer::format_min_length#5
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_radix#0
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_sign_always#0
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_upper_case#0
byte printf_number_buffer::format_upper_case#1
byte printf_number_buffer::format_upper_case#10
byte printf_number_buffer::format_upper_case#11
byte printf_number_buffer::format_upper_case#12
byte printf_number_buffer::format_upper_case#13
byte printf_number_buffer::format_upper_case#14
byte printf_number_buffer::format_upper_case#15
byte printf_number_buffer::format_upper_case#16
byte printf_number_buffer::format_upper_case#2
byte printf_number_buffer::format_upper_case#3
byte printf_number_buffer::format_upper_case#4
byte printf_number_buffer::format_upper_case#5
byte printf_number_buffer::format_upper_case#6
byte printf_number_buffer::format_upper_case#7
byte printf_number_buffer::format_upper_case#8
byte printf_number_buffer::format_upper_case#9
byte printf_number_buffer::format_zero_padding
byte printf_number_buffer::format_zero_padding#0
byte printf_number_buffer::format_zero_padding#1
byte printf_number_buffer::format_zero_padding#10
byte printf_number_buffer::format_zero_padding#11
byte printf_number_buffer::format_zero_padding#12
byte printf_number_buffer::format_zero_padding#13
byte printf_number_buffer::format_zero_padding#14
byte printf_number_buffer::format_zero_padding#15
byte printf_number_buffer::format_zero_padding#16
byte printf_number_buffer::format_zero_padding#17
byte printf_number_buffer::format_zero_padding#18
byte printf_number_buffer::format_zero_padding#19
byte printf_number_buffer::format_zero_padding#2
byte printf_number_buffer::format_zero_padding#20
byte printf_number_buffer::format_zero_padding#3
byte printf_number_buffer::format_zero_padding#4
byte printf_number_buffer::format_zero_padding#5
byte printf_number_buffer::format_zero_padding#6
byte printf_number_buffer::format_zero_padding#7
byte printf_number_buffer::format_zero_padding#8
byte printf_number_buffer::format_zero_padding#9
signed byte printf_number_buffer::len
signed byte printf_number_buffer::len#0
signed byte printf_number_buffer::len#1
signed byte printf_number_buffer::len#2
signed byte printf_number_buffer::len#3
signed byte printf_number_buffer::padding
signed byte printf_number_buffer::padding#0
signed byte printf_number_buffer::padding#1
signed byte printf_number_buffer::padding#10
signed byte printf_number_buffer::padding#11
signed byte printf_number_buffer::padding#12
signed byte printf_number_buffer::padding#13
signed byte printf_number_buffer::padding#14
signed byte printf_number_buffer::padding#15
signed byte printf_number_buffer::padding#16
signed byte printf_number_buffer::padding#17
signed byte printf_number_buffer::padding#2
signed byte printf_number_buffer::padding#3
signed byte printf_number_buffer::padding#4
signed byte printf_number_buffer::padding#5
signed byte printf_number_buffer::padding#6
signed byte printf_number_buffer::padding#7
signed byte printf_number_buffer::padding#8
signed byte printf_number_buffer::padding#9
void printf_padding(byte printf_padding::pad , byte printf_padding::length)
bool~ printf_padding::$0
byte printf_padding::i
byte printf_padding::i#0
byte printf_padding::i#1
byte printf_padding::i#2
byte printf_padding::i#3
byte printf_padding::i#4
byte printf_padding::length
byte printf_padding::length#0
byte printf_padding::length#1
byte printf_padding::length#2
byte printf_padding::length#3
byte printf_padding::length#4
byte printf_padding::length#5
byte printf_padding::length#6
byte printf_padding::pad
byte printf_padding::pad#0
byte printf_padding::pad#1
byte printf_padding::pad#2
byte printf_padding::pad#3
byte printf_padding::pad#4
byte printf_padding::pad#5
byte printf_padding::pad#6
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
number~ printf_uint::$0
byte~ printf_uint::$1
number~ printf_uint::$2
bool~ printf_uint::$5
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
byte printf_uint::format_justify_left#0
byte printf_uint::format_justify_left#1
byte printf_uint::format_justify_left#2
byte printf_uint::format_justify_left#3
byte printf_uint::format_justify_left#4
byte printf_uint::format_justify_left#5
byte printf_uint::format_justify_left#6
byte printf_uint::format_min_length
byte printf_uint::format_min_length#0
byte printf_uint::format_min_length#1
byte printf_uint::format_min_length#2
byte printf_uint::format_min_length#3
byte printf_uint::format_min_length#4
byte printf_uint::format_min_length#5
byte printf_uint::format_min_length#6
byte printf_uint::format_radix
byte printf_uint::format_radix#0
byte printf_uint::format_radix#1
byte printf_uint::format_radix#2
byte printf_uint::format_radix#3
byte printf_uint::format_radix#4
byte printf_uint::format_radix#5
byte printf_uint::format_radix#6
byte printf_uint::format_sign_always
byte printf_uint::format_sign_always#0
byte printf_uint::format_sign_always#1
byte printf_uint::format_sign_always#2
byte printf_uint::format_sign_always#3
byte printf_uint::format_sign_always#4
byte printf_uint::format_sign_always#5
byte printf_uint::format_sign_always#6
byte printf_uint::format_upper_case
byte printf_uint::format_upper_case#0
byte printf_uint::format_upper_case#1
byte printf_uint::format_upper_case#2
byte printf_uint::format_upper_case#3
byte printf_uint::format_upper_case#4
byte printf_uint::format_upper_case#5
byte printf_uint::format_upper_case#6
byte printf_uint::format_zero_padding
byte printf_uint::format_zero_padding#0
byte printf_uint::format_zero_padding#1
byte printf_uint::format_zero_padding#2
byte printf_uint::format_zero_padding#3
byte printf_uint::format_zero_padding#4
byte printf_uint::format_zero_padding#5
byte printf_uint::format_zero_padding#6
word printf_uint::uvalue
word printf_uint::uvalue#0
word printf_uint::uvalue#1
word printf_uint::uvalue#2
word printf_uint::uvalue#3
word printf_uint::uvalue#4
word printf_uint::uvalue#5
void putchar(byte putchar::code)
byte*~ putchar::$0
byte~ putchar::$1
byte putchar::code
byte putchar::code#0
byte putchar::code#1
byte putchar::code#2
byte* putchar::loc
byte* putchar::loc#0
byte putchar::newChar
byte putchar::newChar#0
const byte* rawmap[$100]  = kickasm {{ .var ht = Hashtable().put(0,64, 1,0, 2,32, 3,96) // the table for converting bit 6,7 into ora value
	.for(var i=0; i<256; i++) {
		.var idx = (i & $60) / 32
		.var mask = i & $9f
		.byte mask | ht.get(idx)
	}
 }}
const byte* required_tags[]  = "byriyreyrhgthcleclpid"at
void setcursor()
byte*~ setcursor::$0
bool~ setcursor::$1
number~ setcursor::$2
byte setcursor::c
byte setcursor::c#0
byte setcursor::c#1
byte setcursor::c#2
byte setcursor::c#3
byte setcursor::c#4
byte* setcursor::loc
byte* setcursor::loc#0
word strlen(byte* strlen::str)
bool~ strlen::$0
word strlen::len
word strlen::len#0
word strlen::len#1
word strlen::len#2
word strlen::len#3
word strlen::len#4
word strlen::return
word strlen::return#0
word strlen::return#1
word strlen::return#2
word strlen::return#3
word strlen::return#4
byte* strlen::str
byte* strlen::str#0
byte* strlen::str#1
byte* strlen::str#2
byte* strlen::str#3
byte* strlen::str#4
byte* strupr(byte* strupr::str)
byte~ strupr::$0
bool~ strupr::$1
byte* strupr::return
byte* strupr::return#0
byte* strupr::return#1
byte* strupr::return#2
byte* strupr::return#3
byte* strupr::src
byte* strupr::src#0
byte* strupr::src#1
byte* strupr::src#2
byte* strupr::src#3
byte* strupr::src#4
byte* strupr::str
byte* strupr::str#0
byte* strupr::str#1
byte* strupr::str#2
byte* strupr::str#3
byte* strupr::str#4
byte* strupr::str#5
byte toupper(byte toupper::ch)
bool~ toupper::$0
bool~ toupper::$1
bool~ toupper::$2
byte~ toupper::$3
byte toupper::ch
byte toupper::ch#0
byte toupper::ch#1
byte toupper::ch#2
byte toupper::ch#3
byte toupper::return
byte toupper::return#0
byte toupper::return#1
byte toupper::return#2
byte toupper::return#3
byte toupper::return#4
byte toupper::return#5
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
bool~ utoa::$0
bool~ utoa::$1
byte~ utoa::$10
byte~ utoa::$11
bool~ utoa::$2
bool~ utoa::$3
number~ utoa::$4
bool~ utoa::$5
bool~ utoa::$6
bool~ utoa::$7
bool~ utoa::$8
word~ utoa::$9
byte* utoa::buffer
byte* utoa::buffer#0
byte* utoa::buffer#1
byte* utoa::buffer#10
byte* utoa::buffer#11
byte* utoa::buffer#12
byte* utoa::buffer#13
byte* utoa::buffer#14
byte* utoa::buffer#15
byte* utoa::buffer#16
byte* utoa::buffer#17
byte* utoa::buffer#18
byte* utoa::buffer#19
byte* utoa::buffer#2
byte* utoa::buffer#20
byte* utoa::buffer#21
byte* utoa::buffer#3
byte* utoa::buffer#4
byte* utoa::buffer#5
byte* utoa::buffer#6
byte* utoa::buffer#7
byte* utoa::buffer#8
byte* utoa::buffer#9
byte utoa::digit
byte utoa::digit#0
byte utoa::digit#1
byte utoa::digit#2
byte utoa::digit#3
byte utoa::digit#4
byte utoa::digit#5
byte utoa::digit#6
word utoa::digit_value
word utoa::digit_value#0
word utoa::digit_value#1
word* utoa::digit_values
word* utoa::digit_values#0
word* utoa::digit_values#1
word* utoa::digit_values#10
word* utoa::digit_values#2
word* utoa::digit_values#3
word* utoa::digit_values#4
word* utoa::digit_values#5
word* utoa::digit_values#6
word* utoa::digit_values#7
word* utoa::digit_values#8
word* utoa::digit_values#9
byte utoa::max_digits
byte utoa::max_digits#0
byte utoa::max_digits#1
byte utoa::max_digits#10
byte utoa::max_digits#2
byte utoa::max_digits#3
byte utoa::max_digits#4
byte utoa::max_digits#5
byte utoa::max_digits#6
byte utoa::max_digits#7
byte utoa::max_digits#8
byte utoa::max_digits#9
byte utoa::radix
byte utoa::radix#0
byte utoa::radix#1
byte utoa::radix#2
byte utoa::radix#3
byte utoa::radix#4
byte utoa::started
byte utoa::started#0
byte utoa::started#1
byte utoa::started#2
byte utoa::started#3
byte utoa::started#4
word utoa::value
word utoa::value#0
word utoa::value#1
word utoa::value#10
word utoa::value#11
word utoa::value#12
word utoa::value#13
word utoa::value#14
word utoa::value#15
word utoa::value#2
word utoa::value#3
word utoa::value#4
word utoa::value#5
word utoa::value#6
word utoa::value#7
word utoa::value#8
word utoa::value#9
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
bool~ utoa_append::$0
byte* utoa_append::buffer
byte* utoa_append::buffer#0
byte* utoa_append::buffer#1
byte* utoa_append::buffer#2
byte* utoa_append::buffer#3
byte* utoa_append::buffer#4
byte utoa_append::digit
byte utoa_append::digit#0
byte utoa_append::digit#1
byte utoa_append::digit#2
byte utoa_append::digit#3
byte utoa_append::digit#4
word utoa_append::return
word utoa_append::return#0
word utoa_append::return#1
word utoa_append::return#2
word utoa_append::return#3
word utoa_append::return#4
word utoa_append::sub
word utoa_append::sub#0
word utoa_append::sub#1
word utoa_append::sub#2
word utoa_append::sub#3
word utoa_append::value
word utoa_append::value#0
word utoa_append::value#1
word utoa_append::value#2
word utoa_append::value#3
word utoa_append::value#4
word utoa_append::value#5

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#2 > 0
Adding number conversion cast (unumber) 0 in strupr::$1 = 0 != *strupr::src#2
Adding number conversion cast (unumber) 0 in strlen::$0 = 0 != *strlen::str#2
Adding number conversion cast (unumber) 5 in utoa::max_digits#1 = 5
Adding number conversion cast (unumber) 4 in utoa::max_digits#2 = 4
Adding number conversion cast (unumber) 6 in utoa::max_digits#3 = 6
Adding number conversion cast (unumber) $10 in utoa::max_digits#4 = $10
Adding number conversion cast (unumber) 0 in *utoa::buffer#2 = 0
Adding number conversion cast (unumber) 1 in utoa::$4 = utoa::max_digits#5 - 1
Adding number conversion cast (unumber) utoa::$4 in utoa::$4 = utoa::max_digits#5 - (unumber)1
Adding number conversion cast (unumber) 0 in *utoa::buffer#3 = 0
Adding number conversion cast (unumber) 1 in utoa::started#1 = 1
Adding number conversion cast (unumber) 0 in *COLCRS = 0
Adding number conversion cast (unumber) $9b in cputc::$2 = cputc::c == $9b
Adding number conversion cast (unumber) 0 in *COLCRS = 0
Adding number conversion cast (unumber) $28 in cputc::$7 = *COLCRS == $28
Adding number conversion cast (unumber) 0 in *COLCRS = 0
Adding number conversion cast (unumber) 0 in cputs::$2 = 0 != cputs::$0
Adding number conversion cast (unumber) $28 in cursorLocation::$0 = cursorLocation::$3 * $28
Adding number conversion cast (unumber) cursorLocation::$0 in cursorLocation::$0 = cursorLocation::$3 * (unumber)$28
Adding number conversion cast (unumber) $18 in newline::$0 = *ROWCRS == $18
Adding number conversion cast (unumber) 1 in newline::$3 = conio_scroll_enable == 1
Adding number conversion cast (unumber) 1 in newline::$5 = conio_display_cursor == 1
Adding number conversion cast (unumber) 0 in gotoxy::x#0 = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#0 = 0
Adding number conversion cast (unumber) $28 in newline::$7 = newline::start#0 + $28
Adding number conversion cast (unumber) $28*$17 in memcpy::num#0 = $28*$17
Adding number conversion cast (unumber) $28*$17 in newline::$9 = newline::start#1 + $28*$17
Adding number conversion cast (unumber) 0 in memset::c#0 = 0
Adding number conversion cast (unumber) $28 in memset::num#0 = $28
Adding number conversion cast (unumber) $18-1 in *ROWCRS = $18-1
Adding number conversion cast (unumber) $80 in *(*OLDADR) = *(*OLDADR) ^ $80
Adding number conversion cast (unumber) 0 in setcursor::$1 = conio_display_cursor == 0
Adding number conversion cast (unumber) 1 in *CRSINH = 1
Adding number conversion cast (unumber) 0 in *CRSINH = 0
Adding number conversion cast (unumber) $80 in setcursor::$2 = setcursor::c#2 ^ $80
Adding number conversion cast (unumber) setcursor::$2 in setcursor::$2 = setcursor::c#2 ^ (unumber)$80
Adding number conversion cast (unumber) 0 in memset::c#1 = 0
Adding number conversion cast (unumber) $28*$18 in memset::num#1 = $28*$18
Adding number conversion cast (unumber) 0 in *OLDCHR = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#1 = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#1 = 0
Adding number conversion cast (unumber) 0 in printf_uint::$5 = 0 != printf_uint::format_sign_always#2
Adding number conversion cast (unumber) printf_uint::$2 in printf_uint::format_upper_case#3 = phi( printf_uint::@1/printf_uint::format_upper_case#4, printf_uint::@2/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#3 = phi( printf_uint::@1/printf_uint::format_zero_padding#4, printf_uint::@2/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#4 = phi( printf_uint::@1/printf_uint::format_sign_always#5, printf_uint::@2/printf_uint::format_sign_always#6 )
  printf_uint::format_justify_left#3 = phi( printf_uint::@1/printf_uint::format_justify_left#4, printf_uint::@2/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#3 = phi( printf_uint::@1/printf_uint::format_min_length#4, printf_uint::@2/printf_uint::format_min_length#5 )
  printf_uint::format_radix#2 = phi( printf_uint::@1/printf_uint::format_radix#4, printf_uint::@2/printf_uint::format_radix#5 )
  printf_uint::uvalue#2 = phi( printf_uint::@1/printf_uint::uvalue#3, printf_uint::@2/printf_uint::uvalue#4 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) printf_uint::$0 in printf_uint::format_upper_case#3 = phi( printf_uint::@1/printf_uint::format_upper_case#4, printf_uint::@2/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#3 = phi( printf_uint::@1/printf_uint::format_zero_padding#4, printf_uint::@2/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#4 = phi( printf_uint::@1/printf_uint::format_sign_always#5, printf_uint::@2/printf_uint::format_sign_always#6 )
  printf_uint::format_justify_left#3 = phi( printf_uint::@1/printf_uint::format_justify_left#4, printf_uint::@2/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#3 = phi( printf_uint::@1/printf_uint::format_min_length#4, printf_uint::@2/printf_uint::format_min_length#5 )
  printf_uint::format_radix#2 = phi( printf_uint::@1/printf_uint::format_radix#4, printf_uint::@2/printf_uint::format_radix#5 )
  printf_uint::uvalue#2 = phi( printf_uint::@1/printf_uint::uvalue#3, printf_uint::@2/printf_uint::uvalue#4 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) 0 in printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
Adding number conversion cast (snumber) 0 in printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Adding number conversion cast (snumber) 0 in printf_number_buffer::padding#2 = 0
Adding number conversion cast (unumber) 0 in printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
Adding number conversion cast (unumber) 0 in printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
Adding number conversion cast (unumber) 0 in main::$23 = 0 != *main::pass#6
Adding number conversion cast (unumber) 7 in main::$8 = main::i#2 < 7
Adding number conversion cast (unumber) 0 in main::$24 = 0 != main::tags_found[main::i#3]
Adding number conversion cast (unumber) 7 in main::$10 = main::num_found#2 == 7
Adding number conversion cast (unumber) 0 in main::tags_found[main::i#4] = 0
Adding number conversion cast (unumber) 7 in main::$13 = main::tag_idx#2 < 7
Adding number conversion cast (unumber) 3 in main::$14 = main::i1#2 < 3
Adding number conversion cast (unumber) 3 in main::$17 = main::match#2 == 3
Adding number conversion cast (unumber) 3 in main::required_tag#1 = main::required_tag#3 + 3
Adding number conversion cast (unumber) 1 in main::tags_found[main::tag_idx#4] = 1
Adding number conversion cast (unumber) 3 in main::pass#4 = main::pass#13 + 3
Successful SSA optimization PassNAddNumberTypeConversions
Adding number conversion cast (unumber) 0 in printf_uint::$0 = 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memcpy::src#0 = (byte*)memcpy::source#1
Inlining cast memcpy::dst#0 = (byte*)memcpy::destination#1
Inlining cast memset::dst#0 = (byte*)memset::str#3
Inlining cast utoa::max_digits#1 = (unumber)5
Inlining cast utoa::max_digits#2 = (unumber)4
Inlining cast utoa::max_digits#3 = (unumber)6
Inlining cast utoa::max_digits#4 = (unumber)$10
Inlining cast *utoa::buffer#2 = (unumber)0
Inlining cast *utoa::buffer#3 = (unumber)0
Inlining cast utoa::started#1 = (unumber)1
Inlining cast *COLCRS = (unumber)0
Inlining cast *COLCRS = (unumber)0
Inlining cast *COLCRS = (unumber)0
Inlining cast gotoxy::x#0 = (unumber)0
Inlining cast gotoxy::y#0 = (unumber)0
Inlining cast memcpy::num#0 = (unumber)$28*$17
Inlining cast memset::c#0 = (unumber)0
Inlining cast memset::num#0 = (unumber)$28
Inlining cast *ROWCRS = (unumber)$18-1
Inlining cast *CRSINH = (unumber)1
Inlining cast *CRSINH = (unumber)0
Inlining cast memset::c#1 = (unumber)0
Inlining cast memset::num#1 = (unumber)$28*$18
Inlining cast *OLDCHR = (unumber)0
Inlining cast gotoxy::x#1 = (unumber)0
Inlining cast gotoxy::y#1 = (unumber)0
Inlining cast printf_uint::$0 = (unumber)0
Inlining cast printf_number_buffer::padding#2 = (snumber)0
Inlining cast main::tags_found[main::i#4] = (unumber)0
Inlining cast main::tags_found[main::tag_idx#4] = (unumber)1
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte**) 88
Simplifying constant pointer cast (byte*) 93
Simplifying constant pointer cast (byte**) 94
Simplifying constant pointer cast (byte*) 752
Simplifying constant pointer cast (byte*) 84
Simplifying constant pointer cast (word*) 85
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast $10
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $9b
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $18
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $80
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $80
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast 3
Simplifying constant integer cast 3
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 3
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 5
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $9b
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $18
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 3
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in utoa::$4 = utoa::max_digits#5 - 1
Inferred type updated to word in cursorLocation::$0 = cursorLocation::$3 * $28
Inferred type updated to byte in setcursor::$2 = setcursor::c#2 ^ $80
Inferred type updated to byte in printf_uint::$0 = 0
Inferred type updated to byte for printf_uint::$2
Inversing boolean not [33] memset::$1 = memset::num#2 <= 0 from [32] memset::$0 = memset::num#2 > 0
Inversing boolean not [225] newline::$1 = *ROWCRS != $18 from [223] newline::$0 = *ROWCRS == $18
Inversing boolean not [231] newline::$6 = conio_display_cursor != 1 from [230] newline::$5 = conio_display_cursor == 1
Inversing boolean not [326] printf_number_buffer::$0 = 0 == printf_number_buffer::format_min_length#1 from [325] printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
Inversing boolean not [330] printf_number_buffer::$1 = 0 == printf_number_buffer::format_justify_left#1 from [329] printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
Inversing boolean not [332] printf_number_buffer::$2 = 0 == printf_number_buffer::format_zero_padding#1 from [331] printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
Inversing boolean not [345] printf_number_buffer::$20 = 0 == printf_number_buffer::buffer_sign#1 from [344] printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
Inversing boolean not [352] printf_number_buffer::$23 = printf_number_buffer::padding#1 >= 0 from [351] printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Inversing boolean not [360] printf_number_buffer::$7 = 0 == printf_number_buffer::buffer_sign#2 from [359] printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
Inversing boolean not [377] printf_number_buffer::$12 = 0 == printf_number_buffer::format_upper_case#1 from [376] printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
Inversing boolean not [389] printf_number_buffer::$14 = 0 == printf_number_buffer::format_zero_padding#3 from [388] printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
Inversing boolean not [413] main::$3 = *main::pass#7 != ' 'at from [412] main::$2 = *main::pass#7 == ' 'at
Inversing boolean not [443] main::$5 = *main::pass#8 != '
'at from [442] main::$4 = *main::pass#8 == '
'at
Inversing boolean not [453] main::$7 = *main::pass#2 != '
'at from [452] main::$6 = *main::pass#2 == '
'at
Inversing boolean not [464] main::$9 = 0 == main::tags_found[main::i#3] from [463] main::$24 = 0 != main::tags_found[main::i#3]
Inversing boolean not [496] main::$16 = main::required_tag#2[main::i1#3] != main::pass#12[main::i1#3] from [495] main::$15 = main::required_tag#2[main::i1#3] == main::pass#12[main::i1#3]
Inversing boolean not [500] main::$18 = main::match#2 != 3 from [499] main::$17 = main::match#2 == 3
Successful SSA optimization Pass2UnaryNotSimplification
Alias toupper::ch#1 = toupper::ch#2 toupper::ch#3 toupper::return#1 
Alias toupper::return#0 = toupper::$3 
Alias toupper::return#2 = toupper::return#4 
Alias memcpy::src_end#0 = memcpy::$0 
Alias memcpy::src#2 = memcpy::src#3 
Alias memcpy::dst#2 = memcpy::dst#3 
Alias memcpy::src_end#1 = memcpy::src_end#2 
Alias memcpy::destination#2 = memcpy::destination#4 memcpy::destination#3 memcpy::return#0 memcpy::return#3 memcpy::return#1 
Alias memset::return#0 = memset::str#2 memset::return#4 memset::return#1 
Alias memset::str#3 = memset::str#4 
Alias memset::num#2 = memset::num#3 
Alias memset::c#4 = memset::c#5 
Alias memset::end#0 = memset::$2 
Alias memset::c#2 = memset::c#3 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#5 = memset::str#6 
Alias strupr::src#0 = strupr::str#1 
Alias strupr::src#2 = strupr::src#3 strupr::src#4 
Alias strupr::str#2 = strupr::str#5 strupr::str#3 strupr::str#4 strupr::return#0 strupr::return#3 strupr::return#1 
Alias toupper::return#3 = toupper::return#5 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#0 strlen::return#3 strlen::return#1 
Alias strlen::str#2 = strlen::str#3 
Alias utoa::value#10 = utoa::value#8 utoa::value#12 utoa::value#13 utoa::value#9 utoa::value#14 utoa::value#15 utoa::value#11 
Alias utoa::buffer#10 = utoa::buffer#17 utoa::buffer#21 utoa::buffer#16 utoa::buffer#18 utoa::buffer#13 utoa::buffer#19 utoa::buffer#20 utoa::buffer#6 
Alias utoa::radix#1 = utoa::radix#2 utoa::radix#3 utoa::radix#4 
Alias utoa::digit#2 = utoa::digit#3 utoa::digit#6 utoa::digit#5 
Alias utoa::digit_values#10 = utoa::digit_values#5 utoa::digit_values#6 utoa::digit_values#9 
Alias utoa::value#2 = utoa::value#5 utoa::value#3 utoa::value#4 
Alias utoa::started#2 = utoa::started#3 
Alias utoa::buffer#11 = utoa::buffer#12 utoa::buffer#7 utoa::buffer#8 utoa::buffer#9 
Alias utoa::max_digits#10 = utoa::max_digits#8 utoa::max_digits#5 utoa::max_digits#9 
Alias utoa::digit_value#0 = utoa::digit_value#1 
Alias utoa_append::return#0 = utoa_append::return#3 
Alias utoa::value#0 = utoa::$9 
Alias utoa_append::digit#2 = utoa_append::digit#4 utoa_append::digit#3 
Alias utoa_append::value#2 = utoa_append::value#3 utoa_append::value#4 utoa_append::return#1 utoa_append::return#4 utoa_append::return#2 
Alias utoa_append::sub#1 = utoa_append::sub#2 
Alias utoa_append::buffer#1 = utoa_append::buffer#4 utoa_append::buffer#2 
Alias cputc::convertToScreenCode1_v#0 = cputc::convertToScreenCode1_v#1 
Alias cputc::convertToScreenCode1_return#0 = cputc::convertToScreenCode1_return#2 cputc::convertToScreenCode1_return#1 cputc::convertToScreenCode1_return#3 cputc::$4 putchar::code#0 
Alias cursorLocation::return#0 = cursorLocation::return#4 
Alias putchar::code#1 = putchar::code#2 
Alias putchar::loc#0 = putchar::$0 
Alias putchar::newChar#0 = putchar::$1 
Alias cputs::c#1 = cputs::$0 cputs::c#2 
Alias cputs::s#0 = cputs::s#10 cputs::s#9 
Alias cursorLocation::return#1 = cursorLocation::$2 cursorLocation::return#5 cursorLocation::return#2 
Alias newline::start#0 = newline::start#1 
Alias cursorLocation::return#3 = cursorLocation::return#6 
Alias setcursor::loc#0 = setcursor::$0 
Alias setcursor::c#0 = setcursor::c#4 setcursor::c#2 
Alias setcursor::c#1 = setcursor::$2 
Alias printf_padding::pad#3 = printf_padding::pad#4 printf_padding::pad#6 
Alias printf_padding::i#2 = printf_padding::i#4 printf_padding::i#3 
Alias printf_padding::length#3 = printf_padding::length#6 printf_padding::length#5 
Alias printf_uint::uvalue#3 = printf_uint::uvalue#5 printf_uint::uvalue#4 
Alias printf_uint::format_radix#4 = printf_uint::format_radix#6 printf_uint::format_radix#5 
Alias printf_uint::format_min_length#4 = printf_uint::format_min_length#6 printf_uint::format_min_length#5 
Alias printf_uint::format_justify_left#4 = printf_uint::format_justify_left#6 printf_uint::format_justify_left#5 
Alias printf_uint::format_sign_always#2 = printf_uint::format_sign_always#5 printf_uint::format_sign_always#6 
Alias printf_uint::format_zero_padding#4 = printf_uint::format_zero_padding#6 printf_uint::format_zero_padding#5 
Alias printf_uint::format_upper_case#4 = printf_uint::format_upper_case#6 printf_uint::format_upper_case#5 
Alias printf_uint::format_min_length#2 = printf_uint::format_min_length#3 
Alias printf_uint::format_justify_left#2 = printf_uint::format_justify_left#3 
Alias printf_uint::format_sign_always#3 = printf_uint::format_sign_always#4 
Alias printf_uint::format_zero_padding#2 = printf_uint::format_zero_padding#3 
Alias printf_uint::format_upper_case#2 = printf_uint::format_upper_case#3 
Alias printf_uint::format_radix#2 = printf_uint::format_radix#3 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#4 printf_number_buffer::buffer_digits#18 printf_number_buffer::buffer_digits#19 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#4 printf_number_buffer::buffer_sign#7 printf_number_buffer::buffer_sign#11 
Alias printf_number_buffer::format_min_length#1 = printf_number_buffer::format_min_length#5 printf_number_buffer::format_min_length#3 printf_number_buffer::format_min_length#4 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#3 printf_number_buffer::format_justify_left#7 printf_number_buffer::format_justify_left#8 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#16 printf_number_buffer::format_zero_padding#4 printf_number_buffer::format_zero_padding#11 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#16 printf_number_buffer::format_upper_case#14 printf_number_buffer::format_upper_case#15 
Alias strlen::return#2 = strlen::return#4 
Alias printf_number_buffer::padding#1 = printf_number_buffer::$21 
Alias printf_number_buffer::len#0 = printf_number_buffer::len#3 
Alias printf_number_buffer::format_justify_left#4 = printf_number_buffer::format_justify_left#5 
Alias printf_number_buffer::format_zero_padding#5 = printf_number_buffer::format_zero_padding#6 
Alias printf_number_buffer::buffer_sign#8 = printf_number_buffer::buffer_sign#9 
Alias printf_number_buffer::format_upper_case#11 = printf_number_buffer::format_upper_case#12 
Alias printf_number_buffer::buffer_digits#15 = printf_number_buffer::buffer_digits#16 
Alias printf_number_buffer::padding#12 = printf_number_buffer::padding#4 printf_number_buffer::padding#3 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#5 printf_number_buffer::buffer_sign#6 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#17 printf_number_buffer::format_zero_padding#12 
Alias printf_number_buffer::format_upper_case#13 = printf_number_buffer::format_upper_case#7 printf_number_buffer::format_upper_case#8 
Alias printf_number_buffer::buffer_digits#12 = printf_number_buffer::buffer_digits#17 printf_number_buffer::buffer_digits#13 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#20 printf_number_buffer::format_justify_left#18 
Alias printf_number_buffer::buffer_sign#2 = printf_number_buffer::buffer_sign#3 
Alias printf_number_buffer::format_zero_padding#13 = printf_number_buffer::format_zero_padding#8 printf_number_buffer::format_zero_padding#7 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#13 printf_number_buffer::padding#9 
Alias printf_number_buffer::format_upper_case#4 = printf_number_buffer::format_upper_case#9 printf_number_buffer::format_upper_case#5 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#14 printf_number_buffer::buffer_digits#9 
Alias printf_number_buffer::format_justify_left#15 = printf_number_buffer::format_justify_left#19 printf_number_buffer::format_justify_left#16 
Alias printf_number_buffer::padding#16 = printf_number_buffer::padding#6 printf_number_buffer::padding#5 
Alias printf_number_buffer::format_upper_case#2 = printf_number_buffer::format_upper_case#6 printf_number_buffer::format_upper_case#3 
Alias printf_number_buffer::buffer_digits#11 = printf_number_buffer::buffer_digits#8 printf_number_buffer::buffer_digits#7 
Alias printf_number_buffer::format_zero_padding#18 = printf_number_buffer::format_zero_padding#20 printf_number_buffer::format_zero_padding#2 
Alias printf_number_buffer::format_justify_left#12 = printf_number_buffer::format_justify_left#17 printf_number_buffer::format_justify_left#13 
Alias printf_number_buffer::format_zero_padding#3 = printf_number_buffer::format_zero_padding#9 
Alias printf_number_buffer::format_justify_left#2 = printf_number_buffer::format_justify_left#6 
Alias printf_number_buffer::padding#11 = printf_number_buffer::padding#7 printf_number_buffer::padding#8 
Alias printf_number_buffer::buffer_digits#3 = printf_number_buffer::buffer_digits#6 printf_number_buffer::buffer_digits#5 
Alias printf_number_buffer::format_zero_padding#14 = printf_number_buffer::format_zero_padding#19 printf_number_buffer::format_zero_padding#15 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#14 printf_number_buffer::format_justify_left#9 
Alias printf_number_buffer::padding#14 = printf_number_buffer::padding#17 printf_number_buffer::padding#15 
Alias main::pass#10 = main::pass#7 main::pass#6 main::pass#8 main::pass#9 main::pass#23 
Alias main::valid#10 = main::valid#14 main::valid#6 main::valid#4 main::valid#2 main::valid#15 main::valid#26 main::valid#11 main::valid#12 
Alias main::total#10 = main::total#19 main::total#12 main::total#7 main::total#4 main::total#2 main::total#20 main::total#15 main::total#28 main::total#16 main::total#17 
Alias main::pass#11 = main::pass#2 
Alias main::i#2 = main::i#3 main::i#5 
Alias main::num_found#2 = main::num_found#5 main::num_found#4 main::num_found#3 
Alias main::valid#16 = main::valid#17 main::valid#7 main::valid#5 main::valid#3 main::valid#22 main::valid#19 
Alias main::total#11 = main::total#22 main::total#13 main::total#21 main::total#8 main::total#5 main::total#9 main::total#6 
Alias main::pass#20 = main::pass#34 main::pass#31 main::pass#30 main::pass#33 main::pass#27 main::pass#28 main::pass#21 
Alias main::valid#1 = main::valid#18 
Alias main::required_tag#6 = main::required_tag#8 
Alias main::pass#18 = main::pass#24 
Alias main::tag_idx#2 = main::tag_idx#7 
Alias main::valid#23 = main::valid#29 
Alias main::total#25 = main::total#31 
Alias main::required_tag#2 = main::required_tag#4 main::required_tag#5 main::required_tag#9 main::required_tag#3 
Alias main::i1#2 = main::i1#3 main::i1#5 
Alias main::pass#12 = main::pass#17 main::pass#26 main::pass#29 main::pass#22 main::pass#19 
Alias main::match#2 = main::match#5 main::match#4 main::match#3 
Alias main::tag_idx#10 = main::tag_idx#9 main::tag_idx#6 main::tag_idx#5 main::tag_idx#3 main::tag_idx#4 
Alias main::valid#24 = main::valid#31 main::valid#28 main::valid#27 main::valid#32 main::valid#25 
Alias main::total#26 = main::total#33 main::total#30 main::total#29 main::total#34 main::total#27 
Alias main::pass#14 = main::pass#15 
Alias main::valid#21 = main::valid#9 
Alias main::total#14 = main::total#24 
Successful SSA optimization Pass2AliasElimination
Alias utoa::value#10 = utoa::value#7 
Alias utoa::buffer#10 = utoa::buffer#15 
Alias utoa::digit#2 = utoa::digit#4 
Alias utoa::max_digits#10 = utoa::max_digits#6 
Alias utoa::digit_values#10 = utoa::digit_values#7 
Alias printf_uint::uvalue#2 = printf_uint::uvalue#3 
Alias printf_uint::format_radix#2 = printf_uint::format_radix#4 
Alias printf_uint::format_min_length#2 = printf_uint::format_min_length#4 
Alias printf_uint::format_justify_left#2 = printf_uint::format_justify_left#4 
Alias printf_uint::format_sign_always#2 = printf_uint::format_sign_always#3 
Alias printf_uint::format_zero_padding#2 = printf_uint::format_zero_padding#4 
Alias printf_uint::format_upper_case#2 = printf_uint::format_upper_case#4 
Alias printf_number_buffer::format_min_length#1 = printf_number_buffer::format_min_length#2 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#4 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#5 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#8 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#11 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#15 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#13 printf_number_buffer::format_zero_padding#18 printf_number_buffer::format_zero_padding#14 printf_number_buffer::format_zero_padding#3 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#12 printf_number_buffer::padding#16 printf_number_buffer::padding#14 printf_number_buffer::padding#11 
Alias printf_number_buffer::format_upper_case#1 = printf_number_buffer::format_upper_case#4 printf_number_buffer::format_upper_case#13 printf_number_buffer::format_upper_case#2 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#12 printf_number_buffer::buffer_digits#11 printf_number_buffer::buffer_digits#3 printf_number_buffer::buffer_digits#2 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#15 printf_number_buffer::format_justify_left#12 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_justify_left#2 
Alias main::i#2 = main::i#4 
Alias main::valid#13 = main::valid#16 
Alias main::total#11 = main::total#18 main::total#3 
Alias main::pass#16 = main::pass#32 main::pass#20 
Alias main::i1#2 = main::i1#4 
Alias main::required_tag#2 = main::required_tag#7 
Alias main::pass#12 = main::pass#25 
Alias main::tag_idx#10 = main::tag_idx#8 
Alias main::valid#24 = main::valid#30 
Alias main::total#26 = main::total#32 
Successful SSA optimization Pass2AliasElimination
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#11 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 
Alias printf_number_buffer::format_upper_case#1 = printf_number_buffer::format_upper_case#10 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#10 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values toupper::ch#1 toupper::ch#0
Identical Phi Values memcpy::source#1 memcpy::source#0
Identical Phi Values memcpy::destination#1 memcpy::destination#0
Identical Phi Values memcpy::num#1 memcpy::num#0
Identical Phi Values memcpy::src_end#1 memcpy::src_end#0
Identical Phi Values memcpy::destination#2 memcpy::destination#1
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#5 memset::str#3
Identical Phi Values memset::c#2 memset::c#4
Identical Phi Values strupr::src#0 strupr::str#0
Identical Phi Values strupr::str#2 strupr::src#0
Identical Phi Values strlen::str#4 strlen::str#1
Identical Phi Values utoa::radix#1 utoa::radix#0
Identical Phi Values utoa::value#10 utoa::value#1
Identical Phi Values utoa::buffer#10 utoa::buffer#5
Identical Phi Values utoa::max_digits#10 utoa::max_digits#7
Identical Phi Values utoa::digit_values#10 utoa::digit_values#8
Identical Phi Values utoa_append::value#5 utoa_append::value#0
Identical Phi Values utoa_append::sub#3 utoa_append::sub#0
Identical Phi Values utoa_append::buffer#3 utoa_append::buffer#0
Identical Phi Values utoa_append::sub#1 utoa_append::sub#3
Identical Phi Values utoa_append::buffer#1 utoa_append::buffer#3
Identical Phi Values putchar::code#1 cputc::convertToScreenCode1_return#0
Identical Phi Values printf_padding::length#3 printf_padding::length#4
Identical Phi Values printf_padding::pad#3 printf_padding::pad#5
Identical Phi Values printf_number_buffer::format_min_length#1 printf_number_buffer::format_min_length#0
Identical Phi Values printf_number_buffer::format_justify_left#1 printf_number_buffer::format_justify_left#0
Identical Phi Values printf_number_buffer::format_zero_padding#1 printf_number_buffer::format_zero_padding#0
Identical Phi Values printf_number_buffer::buffer_digits#1 printf_number_buffer::buffer_digits#0
Identical Phi Values printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0
Identical Phi Values printf_number_buffer::format_upper_case#1 printf_number_buffer::format_upper_case#0
Identical Phi Values main::valid#13 main::valid#10
Identical Phi Values main::total#11 main::total#10
Identical Phi Values main::pass#16 main::pass#3
Identical Phi Values main::required_tag#2 main::required_tag#6
Identical Phi Values main::pass#12 main::pass#18
Identical Phi Values main::tag_idx#10 main::tag_idx#2
Identical Phi Values main::valid#24 main::valid#23
Identical Phi Values main::total#26 main::total#25
Identical Phi Values main::valid#21 main::valid#20
Identical Phi Values main::total#14 main::total#23
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#3
Identical Phi Values main::pass#18 main::pass#10
Identical Phi Values main::valid#23 main::valid#10
Identical Phi Values main::total#25 main::total#10
Identical Phi Values main::pass#13 main::pass#18
Identical Phi Values main::valid#20 main::valid#23
Identical Phi Values main::total#23 main::total#25
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memcpy::$1 [15] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
Simple Condition memset::$1 [22] if(memset::num#2<=0) goto memset::@1
Simple Condition memset::$3 [29] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition strupr::$1 [36] if(0!=*strupr::src#2) goto strupr::@2
Simple Condition strlen::$0 [48] if(0!=*strlen::str#2) goto strlen::@2
Simple Condition utoa::$0 [56] if(utoa::radix#0==DECIMAL) goto utoa::@1
Simple Condition utoa::$1 [60] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
Simple Condition utoa::$2 [64] if(utoa::radix#0==OCTAL) goto utoa::@3
Simple Condition utoa::$3 [68] if(utoa::radix#0==BINARY) goto utoa::@4
Simple Condition utoa::$5 [85] if(utoa::digit#2<utoa::$4) goto utoa::@11
Simple Condition utoa_append::$0 [110] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
Simple Condition cputc::$0 [116] if(cputc::c==''at) goto cputc::@1
Simple Condition cputc::$7 [130] if(*COLCRS==$28) goto cputc::@6
Simple Condition cputs::$2 [151] if(0!=cputs::c#1) goto cputs::@2
Simple Condition newline::$1 [162] if(*ROWCRS!=$18) goto newline::@1
Simple Condition newline::$3 [165] if(conio_scroll_enable==1) goto newline::@4
Simple Condition newline::$6 [167] if(conio_display_cursor!=1) goto newline::@5
Simple Condition setcursor::$1 [195] if(conio_display_cursor==0) goto setcursor::@1
Simple Condition printf_padding::$0 [221] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
Simple Condition printf_uint::$5 [228] if(0!=printf_uint::format_sign_always#2) goto printf_uint::@1
Simple Condition printf_number_buffer::$0 [250] if(0==printf_number_buffer::format_min_length#0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$20 [264] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@13
Simple Condition printf_number_buffer::$23 [269] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$7 [273] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@3
Simple Condition printf_number_buffer::$12 [283] if(0==printf_number_buffer::format_upper_case#0) goto printf_number_buffer::@5
Simple Condition main::$23 [307] if(0!=*main::pass#10) goto main::@2
Simple Condition main::$3 [309] if(*main::pass#10!=' 'at) goto main::@4
Simple Condition main::$5 [333] if(*main::pass#10!='
'at) goto main::@5
Simple Condition main::$7 [339] if(*main::pass#11!='
'at) goto main::@1
Simple Condition main::$8 [345] if(main::i#2<7) goto main::@7
Simple Condition main::$9 [347] if(0==main::tags_found[main::i#2]) goto main::@9
Simple Condition main::$10 [349] if(main::num_found#2==7) goto main::@12
Simple Condition main::$13 [363] if(main::tag_idx#2<7) goto main::@15
Simple Condition main::$14 [368] if(main::i1#2<3) goto main::@17
Simple Condition main::$16 [370] if(main::required_tag#6[main::i1#2]!=main::pass#10[main::i1#2]) goto main::@19
Simple Condition main::$18 [372] if(main::match#2!=3) goto main::@22
Successful SSA optimization Pass2ConditionalJumpSimplification
Rewriting && if()-condition to two if()s [3] toupper::$2 = toupper::$0 && toupper::$1
Rewriting ! if()-condition to reversed if() [90] utoa::$8 = ! utoa::$7
Rewriting || if()-condition to two if()s [89] utoa::$7 = utoa::started#2 || utoa::$6
Rewriting || if()-condition to two if()s [121] cputc::$3 = cputc::$1 || cputc::$2
Rewriting ! if()-condition to reversed if() [256] printf_number_buffer::$5 = ! printf_number_buffer::$4
Rewriting && if()-condition to two if()s [255] printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [254] printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
Rewriting ! if()-condition to reversed if() [278] printf_number_buffer::$10 = ! printf_number_buffer::$9
Rewriting && if()-condition to two if()s [277] printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#0 && printf_number_buffer::padding#10
Rewriting ! if()-condition to reversed if() [292] printf_number_buffer::$17 = ! printf_number_buffer::$16
Rewriting && if()-condition to two if()s [291] printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [290] printf_number_buffer::$15 = printf_number_buffer::format_justify_left#0 && printf_number_buffer::$14
Rewriting && if()-condition to two if()s [385] main::$22 = main::$20 && main::$21
Rewriting && if()-condition to two if()s [383] main::$20 = *main::pass#14 && main::$19
Successful SSA optimization Pass2ConditionalAndOrRewriting
Warning! Adding boolean cast to non-boolean condition utoa::started#2
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_zero_padding#0
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_justify_left#0
Warning! Adding boolean cast to non-boolean condition *main::pass#14
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Constant right-side identified [175] memcpy::num#0 = (unumber)$28*$17
Constant right-side identified [184] *ROWCRS = (unumber)$18-1
Constant right-side identified [209] memset::num#1 = (unumber)$28*$18
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant strlen::len#0 = 0
Constant utoa::max_digits#0 = 0
Constant utoa::digit_values#0 = (word*) 0
Constant utoa::max_digits#1 = 5
Constant utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant utoa::max_digits#2 = 4
Constant utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant utoa::max_digits#3 = 6
Constant utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant utoa::max_digits#4 = $10
Constant utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant utoa::started#0 = 0
Constant utoa::digit#0 = 0
Constant utoa::started#1 = 1
Constant utoa_append::digit#0 = 0
Constant cputc::convertToScreenCode1_v#0 = &cputc::c
Constant cputs::c#0 = 0
Constant gotoxy::x#0 = 0
Constant gotoxy::y#0 = 0
Constant memcpy::num#0 = (unumber)$28*$17
Constant memset::c#0 = 0
Constant memset::num#0 = $28
Constant memset::c#1 = 0
Constant memset::num#1 = (unumber)$28*$18
Constant gotoxy::x#1 = 0
Constant gotoxy::y#1 = 0
Constant printf_padding::i#0 = 0
Constant printf_uint::$1 = '+'at
Constant printf_uint::$0 = 0
Constant utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::buffer_digits#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::padding#0 = 0
Constant printf_number_buffer::padding#2 = 0
Constant printf_padding::pad#0 = ' 'at
Constant printf_padding::pad#1 = '0'at
Constant printf_padding::pad#2 = ' 'at
Constant main::valid#0 = 0
Constant main::total#0 = 0
Constant main::pass#0 = passports
Constant cputs::s#2 = main::s
Constant printf_uint::format_min_length#0 = 0
Constant printf_uint::format_justify_left#0 = 0
Constant printf_uint::format_sign_always#0 = 0
Constant printf_uint::format_zero_padding#0 = 0
Constant printf_uint::format_upper_case#0 = 0
Constant printf_uint::format_radix#0 = DECIMAL
Constant cputs::s#3 = main::s1
Constant printf_uint::format_min_length#1 = 0
Constant printf_uint::format_justify_left#1 = 0
Constant printf_uint::format_sign_always#1 = 0
Constant printf_uint::format_zero_padding#1 = 0
Constant printf_uint::format_upper_case#1 = 0
Constant printf_uint::format_radix#1 = DECIMAL
Constant cputs::s#4 = main::s2
Constant main::required_tag#0 = required_tags
Constant main::tag_idx#0 = 0
Constant main::num_found#0 = 0
Constant main::i#0 = 0
Constant cputs::s#5 = main::s3
Constant cputs::s#6 = main::s4
Constant main::match#0 = 0
Constant main::i1#0 = 0
Constant conio_reverse_value = 0
Constant conio_display_cursor = 1
Constant conio_scroll_enable = 1
Successful SSA optimization Pass2ConstantIdentification
Constant strlen::str#1 = printf_number_buffer::buffer_digits#0
Constant cputs::s#1 = printf_number_buffer::buffer_digits#0
Constant strupr::str#0 = printf_number_buffer::buffer_digits#0
Successful SSA optimization Pass2ConstantIdentification
Constant strupr::return#2 = strupr::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [165] if(conio_scroll_enable==1) goto newline::@4
if() condition always false - eliminating [167] if(conio_display_cursor!=1) goto newline::@5
if() condition always false - eliminating [195] if(conio_display_cursor==0) goto setcursor::@1
Successful SSA optimization Pass2ConstantIfs
Simplifying expression containing zero cputc::convertToScreenCode1_return#0 in [140] putchar::newChar#0 = cputc::convertToScreenCode1_return#0 | conio_reverse_value
Simplifying expression containing zero (byte*)&printf_buffer in [232] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
Simplifying expression containing zero (byte*)&printf_buffer in [237] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused variable memcpy::return#2 and assignment [127] memcpy::return#2 = memcpy::destination#0
Eliminating unused variable memset::return#2 and assignment [131] memset::return#2 = memset::str#3
Eliminating unused variable memset::return#3 and assignment [155] memset::return#3 = memset::str#3
Eliminating unused variable printf_number_buffer::format_sign_always#0 and assignment [176] printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#2
Eliminating unused variable printf_number_buffer::format_radix#0 and assignment [179] printf_number_buffer::format_radix#0 = printf_uint::format_radix#2
Eliminating unused constant strupr::return#2
Eliminating unused constant utoa::max_digits#0
Eliminating unused constant utoa::digit_values#0
Eliminating unused constant cputs::c#0
Eliminating unused constant OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN
Eliminating unused constant conio_reverse_value
Eliminating unused constant conio_display_cursor
Eliminating unused constant conio_scroll_enable
Successful SSA optimization PassNEliminateUnusedVars
Removing PHI-reference to removed block (newline::@3) in block gotoxy
Removing PHI-reference to removed block (newline::@3) in block gotoxy
Removing unused block newline::@3
Removing unused block newline::@8
Removing PHI-reference to removed block (setcursor::@1) in block setcursor::@2
Removing unused block setcursor::@1
Removing unused block main::@return
Successful SSA optimization Pass2EliminateUnusedBlocks
Removing unused procedure __start
Removing unused procedure block __start
Removing unused procedure block __start::__init1
Removing unused procedure block __start::@1
Removing unused procedure block __start::@2
Removing unused procedure block __start::@return
Successful SSA optimization PassNEliminateEmptyStart
Adding number conversion cast (unumber) 0 in [59] utoa::$12 = 0 != utoa::started#2
Adding number conversion cast (unumber) 0 in [193] printf_number_buffer::$33 = 0 != printf_number_buffer::format_zero_padding#0
Adding number conversion cast (unumber) 0 in [202] printf_number_buffer::$34 = 0 != printf_number_buffer::format_justify_left#0
Adding number conversion cast (unumber) 0 in [253] main::$25 = 0 != *main::pass#14
Adding number conversion cast (snumber) 0 in [261] printf_number_buffer::$35 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in [264] printf_number_buffer::$36 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in [266] printf_number_buffer::$37 = 0 != printf_number_buffer::padding#10
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias setcursor::c#1 = setcursor::c#3 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values gotoxy::x#2 gotoxy::x#1
Identical Phi Values gotoxy::y#2 gotoxy::y#1
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition toupper::$0 [2] if(toupper::ch#0>='a'at) goto toupper::@3
Simple Condition utoa::$12 [60] if(0!=utoa::started#2) goto utoa::@14
Simple Condition cputc::$1 [85] if(cputc::c=='
'at) goto cputc::@2
Simple Condition printf_number_buffer::$1 [178] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@23
Simple Condition printf_number_buffer::$33 [193] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@24
Simple Condition printf_number_buffer::$34 [202] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@26
Simple Condition main::$25 [253] if(0!=*main::pass#14) goto main::@39
Simple Condition toupper::$1 [255] if(toupper::ch#0<='z'at) goto toupper::@1
Simple Condition utoa::$6 [256] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@14
Simple Condition cputc::$2 [257] if(cputc::c==$9b) goto cputc::@2
Simple Condition printf_number_buffer::$35 [259] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8
Simple Condition printf_number_buffer::$2 [260] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@22
Simple Condition printf_number_buffer::$36 [262] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10
Simple Condition printf_number_buffer::$37 [264] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12
Simple Condition printf_number_buffer::$14 [265] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@25
Simple Condition main::$21 [266] if(*main::pass#14!='
'at) goto main::@25
Simple Condition main::$19 [267] if(*main::pass#14!=' 'at) goto main::@38
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [2] if(toupper::ch#0<'a'at) goto toupper::@2
Negating conditional jump and destination [178] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@2
Negating conditional jump and destination [193] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@4
Negating conditional jump and destination [202] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@return
Negating conditional jump and destination [253] if(0==*main::pass#14) goto main::@1
Negating conditional jump and destination [260] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@2
Negating conditional jump and destination [265] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@return
Negating conditional jump and destination [267] if(*main::pass#14==' 'at) goto main::@1
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [45] utoa::buffer#0 = ++ utoa::buffer#5
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::buffer#0 = ++utoa::buffer#5
Successful SSA optimization Pass2ConstantIdentification
Eliminating unused constant gotoxy::x#0
Eliminating unused constant gotoxy::y#0
Successful SSA optimization PassNEliminateUnusedVars
Constant right-side identified [44] utoa::buffer#1 = ++ utoa::buffer#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::buffer#1 = ++utoa::buffer#0
Successful SSA optimization Pass2ConstantIdentification
Constant right-side identified [45] utoa::buffer#2 = ++ utoa::buffer#1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::buffer#2 = ++utoa::buffer#1
Successful SSA optimization Pass2ConstantIdentification
Inlining Noop Cast [4] memcpy::src#0 = (byte*)memcpy::source#0 keeping memcpy::source#0
Inlining Noop Cast [5] memcpy::dst#0 = (byte*)memcpy::destination#0 keeping memcpy::destination#0
Inlining Noop Cast [6] memcpy::$2 = (byte*)memcpy::source#0 keeping memcpy::source#0
Inlining Noop Cast [16] memset::$4 = (byte*)memset::str#3 keeping memset::str#3
Inlining Noop Cast [18] memset::dst#0 = (byte*)memset::str#3 keeping memset::str#3
Inlining Noop Cast [138] memset::str#1 = (void*)*SAVMSC keeping *SAVMSC
Inlining Noop Cast [173] printf_number_buffer::$25 = (signed byte)printf_number_buffer::format_min_length#0 keeping printf_number_buffer::format_min_length#0
Successful SSA optimization Pass2NopCastInlining
Inlining Noop Cast [115] memcpy::source#0 = (void*)newline::$7 keeping memcpy::source#0
Inlining Noop Cast [118] memset::str#0 = (void*)newline::$9 keeping memset::str#0
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [51] utoa::$10 = utoa::digit#2 * SIZEOF_WORD
Rewriting multiplication to use shift and addition[105] cursorLocation::$0 = cursorLocation::$3 * $28
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memset::c#0
Inlining constant with var siblings memset::num#0
Inlining constant with var siblings memset::c#1
Inlining constant with var siblings memset::num#1
Inlining constant with var siblings strlen::len#0
Inlining constant with var siblings strlen::str#1
Inlining constant with var siblings utoa::max_digits#1
Inlining constant with var siblings utoa::digit_values#1
Inlining constant with var siblings utoa::max_digits#2
Inlining constant with var siblings utoa::digit_values#2
Inlining constant with var siblings utoa::max_digits#3
Inlining constant with var siblings utoa::digit_values#3
Inlining constant with var siblings utoa::max_digits#4
Inlining constant with var siblings utoa::digit_values#4
Inlining constant with var siblings utoa::started#0
Inlining constant with var siblings utoa::digit#0
Inlining constant with var siblings utoa::started#1
Inlining constant with var siblings utoa::buffer#5
Inlining constant with var siblings utoa::buffer#0
Inlining constant with var siblings utoa::buffer#1
Inlining constant with var siblings utoa::buffer#2
Inlining constant with var siblings utoa_append::digit#0
Inlining constant with var siblings cputs::s#2
Inlining constant with var siblings cputs::s#3
Inlining constant with var siblings cputs::s#4
Inlining constant with var siblings cputs::s#5
Inlining constant with var siblings cputs::s#6
Inlining constant with var siblings cputs::s#1
Inlining constant with var siblings printf_padding::i#0
Inlining constant with var siblings printf_padding::pad#0
Inlining constant with var siblings printf_padding::pad#1
Inlining constant with var siblings printf_padding::pad#2
Inlining constant with var siblings printf_uint::format_min_length#0
Inlining constant with var siblings printf_uint::format_justify_left#0
Inlining constant with var siblings printf_uint::format_sign_always#0
Inlining constant with var siblings printf_uint::format_zero_padding#0
Inlining constant with var siblings printf_uint::format_upper_case#0
Inlining constant with var siblings printf_uint::format_radix#0
Inlining constant with var siblings printf_uint::format_min_length#1
Inlining constant with var siblings printf_uint::format_justify_left#1
Inlining constant with var siblings printf_uint::format_sign_always#1
Inlining constant with var siblings printf_uint::format_zero_padding#1
Inlining constant with var siblings printf_uint::format_upper_case#1
Inlining constant with var siblings printf_uint::format_radix#1
Inlining constant with var siblings printf_number_buffer::padding#0
Inlining constant with var siblings printf_number_buffer::padding#2
Inlining constant with var siblings main::valid#0
Inlining constant with var siblings main::total#0
Inlining constant with var siblings main::pass#0
Inlining constant with var siblings main::required_tag#0
Inlining constant with var siblings main::tag_idx#0
Inlining constant with var siblings main::num_found#0
Inlining constant with var siblings main::i#0
Inlining constant with var siblings main::match#0
Inlining constant with var siblings main::i1#0
Constant inlined cputs::s#5 = main::s3
Constant inlined main::match#0 = 0
Constant inlined utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant inlined cputs::s#6 = main::s4
Constant inlined cputs::s#3 = main::s1
Constant inlined cputs::s#4 = main::s2
Constant inlined utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant inlined cputs::s#1 = printf_number_buffer::buffer_digits#0
Constant inlined cputs::s#2 = main::s
Constant inlined utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant inlined utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant inlined utoa::buffer#0 = ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined utoa::buffer#1 = ++++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined memset::num#1 = (word)$28*$18
Constant inlined memset::num#0 = $28
Constant inlined strlen::len#0 = 0
Constant inlined main::pass#0 = passports
Constant inlined main::required_tag#0 = required_tags
Constant inlined main::total#0 = 0
Constant inlined printf_number_buffer::padding#2 = 0
Constant inlined printf_uint::format_zero_padding#1 = 0
Constant inlined utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined utoa::buffer#2 = ++++++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_uint::format_sign_always#0 = 0
Constant inlined printf_uint::format_sign_always#1 = 0
Constant inlined utoa::max_digits#1 = 5
Constant inlined printf_uint::format_radix#0 = DECIMAL
Constant inlined utoa::max_digits#2 = 4
Constant inlined printf_uint::format_radix#1 = DECIMAL
Constant inlined utoa::max_digits#3 = 6
Constant inlined memset::c#0 = 0
Constant inlined utoa::max_digits#4 = $10
Constant inlined memset::c#1 = 0
Constant inlined printf_uint::format_zero_padding#0 = 0
Constant inlined printf_number_buffer::padding#0 = 0
Constant inlined utoa_append::digit#0 = 0
Constant inlined printf_uint::format_justify_left#0 = 0
Constant inlined printf_uint::format_justify_left#1 = 0
Constant inlined strlen::str#1 = printf_number_buffer::buffer_digits#0
Constant inlined main::valid#0 = 0
Constant inlined printf_uint::format_min_length#0 = 0
Constant inlined utoa::digit#0 = 0
Constant inlined printf_uint::format_min_length#1 = 0
Constant inlined main::i#0 = 0
Constant inlined main::i1#0 = 0
Constant inlined printf_uint::format_upper_case#1 = 0
Constant inlined printf_uint::format_upper_case#0 = 0
Constant inlined strupr::str#0 = printf_number_buffer::buffer_digits#0
Constant inlined printf_padding::pad#0 = ' 'at
Constant inlined printf_padding::i#0 = 0
Constant inlined printf_padding::pad#1 = '0'at
Constant inlined printf_padding::pad#2 = ' 'at
Constant inlined printf_uint::$1 = '+'at
Constant inlined printf_uint::$0 = 0
Constant inlined utoa::started#1 = 1
Constant inlined main::tag_idx#0 = 0
Constant inlined utoa::started#0 = 0
Constant inlined main::num_found#0 = 0
Successful SSA optimization Pass2ConstantInlining
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Successful SSA optimization Pass2ConstantSimplification
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
Successful SSA optimization Pass2ConstantSimplification
Adding number conversion cast (unumber) 1 in [43] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1) = 'r'at
Adding number conversion cast (unumber) 2 in [44] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2) = 'r'at
Adding number conversion cast (unumber) 3 in [45] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3) = 0
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias cursorLocation::$0 = cursorLocation::$6 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values memset::c#4 0
Identical Phi Values printf_uint::format_sign_always#2 0
Identical Phi Values printf_uint::format_radix#2 DECIMAL
Identical Phi Values printf_uint::format_min_length#2 0
Identical Phi Values printf_uint::format_justify_left#2 0
Identical Phi Values printf_uint::format_zero_padding#2 0
Identical Phi Values printf_uint::format_upper_case#2 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant utoa::radix#0 = DECIMAL
Constant printf_number_buffer::format_min_length#0 = 0
Constant printf_number_buffer::format_justify_left#0 = 0
Constant printf_number_buffer::format_zero_padding#0 = 0
Constant printf_number_buffer::format_upper_case#0 = 0
Successful SSA optimization Pass2ConstantIdentification
Constant value identified (signed byte)printf_number_buffer::format_min_length#0 in [167] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#0 - printf_number_buffer::len#2
Successful SSA optimization Pass2ConstantValues
if() condition always true - replacing block destination [33] if(utoa::radix#0==DECIMAL) goto utoa::@1
if() condition always false - eliminating [34] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
if() condition always false - eliminating [35] if(utoa::radix#0==OCTAL) goto utoa::@3
if() condition always false - eliminating [36] if(utoa::radix#0==BINARY) goto utoa::@4
if() condition always false - eliminating [145] if(0!=0) goto printf_uint::@1
if() condition always true - replacing block destination [158] if(0==printf_number_buffer::format_min_length#0) goto printf_number_buffer::@1
if() condition always false - eliminating [160] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@2
if() condition always true - replacing block destination [173] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@4
if() condition always true - replacing block destination [176] if(0==printf_number_buffer::format_upper_case#0) goto printf_number_buffer::@5
if() condition always true - replacing block destination [180] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@return
if() condition always false - eliminating [234] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@2
if() condition always false - eliminating [237] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (signed byte)printf_number_buffer::format_min_length#0 in [167] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#0 - printf_number_buffer::len#2
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero printf_number_buffer::len#2 in [167] printf_number_buffer::padding#1 = 0 - printf_number_buffer::len#2
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused constant BINARY
Eliminating unused constant OCTAL
Eliminating unused constant HEXADECIMAL
Eliminating unused constant utoa::radix#0
Eliminating unused constant printf_number_buffer::format_min_length#0
Eliminating unused constant printf_number_buffer::format_justify_left#0
Eliminating unused constant printf_number_buffer::format_zero_padding#0
Eliminating unused constant printf_number_buffer::format_upper_case#0
Eliminating unused constant SIZEOF_WORD
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant DECIMAL
Successful SSA optimization PassNEliminateUnusedVars
Eliminating variable toupper::return#0 from unused block toupper::@1
Eliminating variable toupper::return#2 from unused block toupper::@return
Eliminating variable strupr::src#2 from unused block strupr::@1
Eliminating variable toupper::ch#0 from unused block strupr::@2
Eliminating variable toupper::return#3 from unused block strupr::@2
Eliminating variable strupr::$0 from unused block strupr::@4
Eliminating variable strupr::src#1 from unused block strupr::@4
Eliminating variable strlen::str#2 from unused block strlen::@1
Eliminating variable strlen::len#2 from unused block strlen::@1
Eliminating variable strlen::len#1 from unused block strlen::@2
Eliminating variable strlen::str#0 from unused block strlen::@2
Eliminating variable strlen::return#2 from unused block printf_number_buffer::@6
Eliminating variable printf_number_buffer::$19 from unused block printf_number_buffer::@15
Eliminating variable printf_number_buffer::len#0 from unused block printf_number_buffer::@15
Eliminating variable printf_number_buffer::len#2 from unused block printf_number_buffer::@13
Eliminating variable printf_number_buffer::padding#1 from unused block printf_number_buffer::@13
Eliminating variable printf_number_buffer::len#1 from unused block printf_number_buffer::@7
Eliminating variable printf_padding::length#1 from unused block printf_number_buffer::@10
Eliminating variable printf_padding::length#2 from unused block printf_number_buffer::@12
Removing unused procedure toupper
Removing unused procedure block toupper
Removing unused procedure block toupper::@1
Removing PHI-reference to removed block (toupper::@1) in block toupper::@return
Removing unused procedure block toupper::@2
Removing PHI-reference to removed block (toupper::@2) in block toupper::@return
Removing unused procedure block toupper::@return
Removing unused procedure block toupper::@3
Removing unused procedure strupr
Removing unused procedure block strupr
Removing PHI-reference to removed block (strupr) in block strupr::@1
Removing unused procedure block strupr::@1
Removing unused procedure block strupr::@2
Removing unused procedure block strupr::@4
Removing unused procedure block strupr::@3
Removing unused procedure block strupr::@return
Removing unused procedure strlen
Removing unused procedure block strlen
Removing PHI-reference to removed block (strlen) in block strlen::@1
Removing PHI-reference to removed block (strlen) in block strlen::@1
Removing unused procedure block strlen::@1
Removing unused procedure block strlen::@2
Removing unused procedure block strlen::@3
Removing unused procedure block strlen::@return
Removing unused block utoa::@6
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing unused block utoa::@2
Removing unused block utoa::@7
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing unused block utoa::@3
Removing unused block utoa::@8
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing unused block utoa::@4
Removing unused block utoa::@9
Removing PHI-reference to removed block (printf_uint::@1) in block printf_uint::@3
Removing unused block printf_uint::@1
Removing unused block printf_number_buffer::@6
Removing PHI-reference to removed block (printf_number_buffer::@15) in block printf_number_buffer::@13
Removing unused block printf_number_buffer::@15
Removing PHI-reference to removed block (printf_number_buffer::@13) in block printf_number_buffer::@1
Removing unused block printf_number_buffer::@13
Removing unused block printf_number_buffer::@7
Removing PHI-reference to removed block (printf_number_buffer::@14) in block printf_number_buffer::@1
Removing unused block printf_number_buffer::@14
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing unused block printf_number_buffer::@10
Removing unused block printf_number_buffer::@18
Removing unused block printf_number_buffer::@11
Removing unused block printf_number_buffer::@20
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing unused block printf_number_buffer::@12
Removing unused block printf_number_buffer::@21
Removing unused block printf_number_buffer::@24
Removing unused block printf_number_buffer::@25
Removing unused block printf_number_buffer::@26
Successful SSA optimization Pass2EliminateUnusedBlocks
Identical Phi Values utoa::max_digits#7 5
Identical Phi Values utoa::digit_values#8 RADIX_DECIMAL_VALUES
Identical Phi Values printf_padding::length#4 printf_padding::length#0
Identical Phi Values printf_padding::pad#5 ' 'at
Identical Phi Values printf_uint::$2 0
Identical Phi Values printf_number_buffer::padding#10 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [18] utoa::$4 = 5 - 1
Constant right-side identified [128] printf_padding::length#0 = (byte)0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::$4 = 5-1
Constant printf_padding::length#0 = (byte)0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [113] if(printf_padding::i#2<printf_padding::length#0) goto printf_padding::@2
if() condition always false - eliminating [181] if(0!=0) goto printf_number_buffer::@8
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (byte)0 in 
Successful SSA optimization PassNSimplifyConstantZero
Eliminating unused constant RADIX_BINARY_VALUES
Eliminating unused constant RADIX_OCTAL_VALUES
Eliminating unused constant RADIX_HEXADECIMAL_VALUES
Eliminating unused constant printf_padding::length#0
Successful SSA optimization PassNEliminateUnusedVars
Eliminating variable printf_padding::i#2 from unused block printf_padding::@1
Eliminating variable printf_padding::i#1 from unused block printf_padding::@3
Removing unused procedure printf_padding
Removing unused procedure block printf_padding
Removing PHI-reference to removed block (printf_padding) in block printf_padding::@1
Removing unused procedure block printf_padding::@1
Removing unused procedure block printf_padding::@2
Removing unused procedure block printf_padding::@3
Removing unused procedure block printf_padding::@return
Removing unused block printf_number_buffer::@8
Removing unused block printf_number_buffer::@16
Successful SSA optimization Pass2EliminateUnusedBlocks
Constant inlined utoa::$4 = 5-1
Successful SSA optimization Pass2ConstantInlining
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 2
Finalized unsigned number type (word) $100
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $18
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) $18
Finalized unsigned number type (byte) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Simplifying constant integer cast $18-1
Successful SSA optimization PassNCastSimplification
Added new block during phi lifting utoa::@17(between utoa::@16 and utoa::@13)
Added new block during phi lifting main::@40(between main::@24 and main::@1)
Added new block during phi lifting main::@41(between main::@27 and main::@1)
Added new block during phi lifting main::@42(between main::@7 and main::@9)
Added new block during phi lifting main::@43(between main::@17 and main::@19)
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of clrscr::@2
Adding NOP phi() at start of printf_uint::@2
Adding NOP phi() at start of printf_uint::@5
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of gotoxy::@1
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cputc::convertToScreenCode1_@return
Adding NOP phi() at start of cputc::@7
Adding NOP phi() at start of cputc::@5
Adding NOP phi() at start of cputc::@12
Adding NOP phi() at start of cputc::@11
Adding NOP phi() at start of cputc::@9
Adding NOP phi() at start of cputc::@8
Adding NOP phi() at start of utoa
Adding NOP phi() at start of utoa::@1
Adding NOP phi() at start of printf_number_buffer
Adding NOP phi() at start of printf_number_buffer::@1
Adding NOP phi() at start of printf_number_buffer::@23
Adding NOP phi() at start of printf_number_buffer::@22
Adding NOP phi() at start of printf_number_buffer::@17
Adding NOP phi() at start of printf_number_buffer::@3
Adding NOP phi() at start of printf_number_buffer::@4
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of printf_number_buffer::@19
Adding NOP phi() at start of putchar::@2
Adding NOP phi() at start of newline::@2
Adding NOP phi() at start of newline::@4
Adding NOP phi() at start of newline::@1
Adding NOP phi() at start of newline::@7
Adding NOP phi() at start of memcpy::@3
CALL GRAPH
Calls in [main] to clrscr:1 cputs:6 printf_uint:9 cputs:11 printf_uint:14 cputs:16 cputs:32 cputs:40 
Calls in [clrscr] to memset:86 gotoxy:88 
Calls in [cputs] to cputc:99 
Calls in [printf_uint] to utoa:105 printf_number_buffer:107 
Calls in [gotoxy] to setcursor:123 
Calls in [cputc] to putchar:133 setcursor:137 newline:141 newline:144 setcursor:147 
Calls in [utoa] to utoa_append:175 
Calls in [printf_number_buffer] to cputc:187 cputs:192 
Calls in [setcursor] to cursorLocation:196 
Calls in [putchar] to cursorLocation:207 setcursor:213 
Calls in [newline] to memcpy:224 memset:227 setcursor:230 

Created 30 initial phi equivalence classes
Coalesced [8] printf_uint::uvalue#6 = printf_uint::uvalue#0
Coalesced [13] printf_uint::uvalue#7 = printf_uint::uvalue#1
Coalesced [21] main::pass#37 = main::pass#1
Coalesced (already) [22] main::valid#35 = main::valid#10
Coalesced (already) [23] main::total#37 = main::total#10
Coalesced [33] main::valid#38 = main::valid#10
Coalesced [36] main::pass#35 = main::pass#3
Coalesced (already) [37] main::valid#33 = main::valid#8
Coalesced [38] main::total#35 = main::total#1
Coalesced [41] main::valid#37 = main::valid#1
Coalesced [44] main::num_found#8 = main::num_found#1
Coalesced [48] main::i#6 = main::i#1
Coalesced [49] main::num_found#7 = main::num_found#6
Coalesced (already) [50] main::num_found#9 = main::num_found#2
Coalesced [51] main::pass#38 = main::pass#11
Coalesced (already) [52] main::valid#36 = main::valid#10
Coalesced (already) [53] main::total#38 = main::total#10
Coalesced [58] main::pass#39 = main::pass#4
Coalesced [64] main::pass#40 = main::pass#5
Coalesced [65] main::pass#36 = main::pass#14
Coalesced (already) [66] main::valid#34 = main::valid#10
Coalesced (already) [67] main::total#36 = main::total#10
Coalesced [75] main::tag_idx#11 = main::tag_idx#1
Coalesced [76] main::required_tag#10 = main::required_tag#1
Coalesced [79] main::match#9 = main::match#1
Coalesced [82] main::i1#6 = main::i1#1
Coalesced [83] main::match#7 = main::match#6
Coalesced (already) [84] main::match#8 = main::match#2
Coalesced [92] cputs::s#11 = cputs::s#8
Coalesced [100] cputs::s#12 = cputs::s#0
Coalesced [120] memset::dst#5 = memset::dst#1
Coalesced [151] utoa::value#17 = utoa::value#1
Coalesced [163] utoa::value#18 = utoa::value#2
Coalesced [164] utoa::started#6 = utoa::started#2
Coalesced [165] utoa::buffer#23 = utoa::buffer#11
Coalesced [168] utoa::digit#7 = utoa::digit#1
Coalesced (already) [169] utoa::value#16 = utoa::value#6
Coalesced (already) [170] utoa::started#5 = utoa::started#4
Coalesced (already) [171] utoa::buffer#22 = utoa::buffer#14
Coalesced [179] utoa::value#19 = utoa::value#0
Coalesced [180] utoa::buffer#24 = utoa::buffer#4
Coalesced [233] utoa_append::value#6 = utoa_append::value#0
Coalesced [240] utoa_append::value#7 = utoa_append::value#1
Coalesced [241] utoa_append::digit#5 = utoa_append::digit#1
Coalesced [259] memcpy::src#5 = memcpy::src#1
Coalesced [260] memcpy::dst#5 = memcpy::dst#1
Coalesced down to 22 phi equivalence classes
Culled Empty Block label main::@30
Culled Empty Block label main::@35
Culled Empty Block label main::@37
Culled Empty Block label main::@36
Culled Empty Block label main::@42
Culled Empty Block label main::@41
Culled Empty Block label main::@5
Culled Empty Block label main::@40
Culled Empty Block label main::@15
Culled Empty Block label main::@43
Culled Empty Block label clrscr::@2
Culled Empty Block label cputs::@3
Culled Empty Block label printf_uint::@2
Culled Empty Block label printf_uint::@5
Culled Empty Block label memset::@1
Culled Empty Block label gotoxy::@1
Culled Empty Block label cputc::@4
Culled Empty Block label cputc::convertToScreenCode1_@return
Culled Empty Block label cputc::@12
Culled Empty Block label cputc::@11
Culled Empty Block label cputc::@9
Culled Empty Block label cputc::@8
Culled Empty Block label utoa::@1
Culled Empty Block label utoa::@5
Culled Empty Block label utoa::@17
Culled Empty Block label printf_number_buffer::@1
Culled Empty Block label printf_number_buffer::@23
Culled Empty Block label printf_number_buffer::@22
Culled Empty Block label printf_number_buffer::@17
Culled Empty Block label printf_number_buffer::@3
Culled Empty Block label printf_number_buffer::@4
Culled Empty Block label printf_number_buffer::@19
Culled Empty Block label putchar::@2
Culled Empty Block label newline::@2
Culled Empty Block label newline::@4
Culled Empty Block label newline::@7
Culled Empty Block label memcpy::@3
Renumbering block memset::@2 to memset::@1
Renumbering block memset::@3 to memset::@2
Renumbering block memset::@4 to memset::@3
Renumbering block utoa::@10 to utoa::@1
Renumbering block utoa::@11 to utoa::@2
Renumbering block utoa::@12 to utoa::@3
Renumbering block utoa::@13 to utoa::@4
Renumbering block utoa::@14 to utoa::@5
Renumbering block utoa::@15 to utoa::@6
Renumbering block utoa::@16 to utoa::@7
Renumbering block cputc::@5 to cputc::@4
Renumbering block cputc::@6 to cputc::@5
Renumbering block cputc::@7 to cputc::@6
Renumbering block cputc::@10 to cputc::@7
Renumbering block cputc::@13 to cputc::@8
Renumbering block newline::@5 to newline::@2
Renumbering block newline::@6 to newline::@3
Renumbering block newline::@9 to newline::@4
Renumbering block newline::@10 to newline::@5
Renumbering block setcursor::@2 to setcursor::@1
Renumbering block setcursor::@3 to setcursor::@2
Renumbering block setcursor::@4 to setcursor::@3
Renumbering block printf_uint::@3 to printf_uint::@1
Renumbering block printf_uint::@4 to printf_uint::@2
Renumbering block printf_number_buffer::@2 to printf_number_buffer::@1
Renumbering block printf_number_buffer::@5 to printf_number_buffer::@2
Renumbering block printf_number_buffer::@9 to printf_number_buffer::@3
Renumbering block main::@6 to main::@5
Renumbering block main::@7 to main::@6
Renumbering block main::@8 to main::@7
Renumbering block main::@9 to main::@8
Renumbering block main::@10 to main::@9
Renumbering block main::@11 to main::@10
Renumbering block main::@12 to main::@11
Renumbering block main::@13 to main::@12
Renumbering block main::@14 to main::@13
Renumbering block main::@16 to main::@14
Renumbering block main::@17 to main::@15
Renumbering block main::@18 to main::@16
Renumbering block main::@19 to main::@17
Renumbering block main::@20 to main::@18
Renumbering block main::@21 to main::@19
Renumbering block main::@22 to main::@20
Renumbering block main::@23 to main::@21
Renumbering block main::@24 to main::@22
Renumbering block main::@25 to main::@23
Renumbering block main::@26 to main::@24
Renumbering block main::@27 to main::@25
Renumbering block main::@28 to main::@26
Renumbering block main::@29 to main::@27
Renumbering block main::@31 to main::@28
Renumbering block main::@32 to main::@29
Renumbering block main::@33 to main::@30
Renumbering block main::@34 to main::@31
Renumbering block main::@38 to main::@32
Renumbering block main::@39 to main::@33
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of cputc::@6
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of utoa
Adding NOP phi() at start of printf_number_buffer
Adding NOP phi() at start of printf_number_buffer::@2
Adding NOP phi() at start of newline::@1
Adding NOP phi() at start of utoa_append

FINAL CONTROL FLOW GRAPH

void main()
main: scope:[main]  from
  [0] phi()
  [1] call clrscr 
  to:main::@1
main::@1: scope:[main]  from main main::@12 main::@22 main::@24 main::@25 main::@32 main::@33
  [2] main::total#10 = phi( main::@12/main::total#1, main::@22/main::total#10, main::@24/main::total#10, main::@25/main::total#10, main/0 )
  [2] main::valid#10 = phi( main::@12/main::valid#8, main::@22/main::valid#10, main::@24/main::valid#10, main::@25/main::valid#10, main/0 )
  [2] main::pass#10 = phi( main::@12/main::pass#3, main::@22/main::pass#14, main::@24/main::pass#1, main::@25/main::pass#11, main/passports )
  [3] if(0!=*main::pass#10) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [4] phi()
  [5] call cputs 
  to:main::@28
main::@28: scope:[main]  from main::@3
  [6] printf_uint::uvalue#0 = main::valid#10
  [7] call printf_uint 
  to:main::@29
main::@29: scope:[main]  from main::@28
  [8] phi()
  [9] call cputs 
  to:main::@30
main::@30: scope:[main]  from main::@29
  [10] printf_uint::uvalue#1 = main::total#10
  [11] call printf_uint 
  to:main::@31
main::@31: scope:[main]  from main::@30
  [12] phi()
  [13] call cputs 
  to:main::@27
main::@27: scope:[main]  from main::@27 main::@31
  [14] phi()
  to:main::@27
main::@2: scope:[main]  from main::@1
  [15] if(*main::pass#10!=' 'at) goto main::@4
  to:main::@24
main::@24: scope:[main]  from main::@2
  [16] main::pass#1 = ++ main::pass#10
  to:main::@1
main::@4: scope:[main]  from main::@2
  [17] if(*main::pass#10!='
'at) goto main::@13
  to:main::@25
main::@25: scope:[main]  from main::@4
  [18] main::pass#11 = ++ main::pass#10
  [19] if(*main::pass#11!='
'at) goto main::@1
  to:main::@26
main::@26: scope:[main]  from main::@25
  [20] main::pass#3 = ++ main::pass#11
  to:main::@5
main::@5: scope:[main]  from main::@26 main::@8
  [21] main::num_found#2 = phi( main::@26/0, main::@8/main::num_found#6 )
  [21] main::i#2 = phi( main::@26/0, main::@8/main::i#1 )
  [22] if(main::i#2<7) goto main::@6
  to:main::@7
main::@7: scope:[main]  from main::@5
  [23] if(main::num_found#2==7) goto main::@11
  to:main::@10
main::@10: scope:[main]  from main::@7
  [24] phi()
  [25] call cputs 
  to:main::@12
main::@12: scope:[main]  from main::@10 main::@11
  [26] main::valid#8 = phi( main::@11/main::valid#1, main::@10/main::valid#10 )
  [27] main::total#1 = ++ main::total#10
  to:main::@1
main::@11: scope:[main]  from main::@7
  [28] main::valid#1 = ++ main::valid#10
  [29] call cputs 
  to:main::@12
main::@6: scope:[main]  from main::@5
  [30] if(0==main::tags_found[main::i#2]) goto main::@8
  to:main::@9
main::@9: scope:[main]  from main::@6
  [31] main::num_found#1 = ++ main::num_found#2
  to:main::@8
main::@8: scope:[main]  from main::@6 main::@9
  [32] main::num_found#6 = phi( main::@9/main::num_found#1, main::@6/main::num_found#2 )
  [33] main::tags_found[main::i#2] = 0
  [34] main::i#1 = ++ main::i#2
  to:main::@5
main::@13: scope:[main]  from main::@20 main::@4
  [35] main::required_tag#6 = phi( main::@20/main::required_tag#1, main::@4/required_tags )
  [35] main::tag_idx#2 = phi( main::@20/main::tag_idx#1, main::@4/0 )
  [36] if(main::tag_idx#2<7) goto main::@14
  to:main::@21
main::@21: scope:[main]  from main::@13 main::@19
  [37] main::pass#4 = main::pass#10 + 3
  to:main::@22
main::@22: scope:[main]  from main::@21 main::@23
  [38] main::pass#14 = phi( main::@21/main::pass#4, main::@23/main::pass#5 )
  [39] if(0==*main::pass#14) goto main::@1
  to:main::@33
main::@33: scope:[main]  from main::@22
  [40] if(*main::pass#14==' 'at) goto main::@1
  to:main::@32
main::@32: scope:[main]  from main::@33
  [41] if(*main::pass#14!='
'at) goto main::@23
  to:main::@1
main::@23: scope:[main]  from main::@32
  [42] main::pass#5 = ++ main::pass#14
  to:main::@22
main::@14: scope:[main]  from main::@13 main::@17
  [43] main::match#2 = phi( main::@13/0, main::@17/main::match#6 )
  [43] main::i1#2 = phi( main::@13/0, main::@17/main::i1#1 )
  [44] if(main::i1#2<3) goto main::@15
  to:main::@16
main::@16: scope:[main]  from main::@14
  [45] if(main::match#2!=3) goto main::@20
  to:main::@19
main::@19: scope:[main]  from main::@16
  [46] main::tags_found[main::tag_idx#2] = 1
  to:main::@21
main::@20: scope:[main]  from main::@16
  [47] main::required_tag#1 = main::required_tag#6 + 3
  [48] main::tag_idx#1 = ++ main::tag_idx#2
  to:main::@13
main::@15: scope:[main]  from main::@14
  [49] if(main::required_tag#6[main::i1#2]!=main::pass#10[main::i1#2]) goto main::@17
  to:main::@18
main::@18: scope:[main]  from main::@15
  [50] main::match#1 = ++ main::match#2
  to:main::@17
main::@17: scope:[main]  from main::@15 main::@18
  [51] main::match#6 = phi( main::@15/main::match#2, main::@18/main::match#1 )
  [52] main::i1#1 = ++ main::i1#2
  to:main::@14

void clrscr()
clrscr: scope:[clrscr]  from main
  [53] memset::str#7 = (void*)*SAVMSC
  [54] call memset 
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr
  [55] *OLDCHR = 0
  [56] call gotoxy 
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@1
  [57] return 
  to:@return

void cputs(to_nomodify byte* cputs::s)
cputs: scope:[cputs]  from main::@10 main::@11 main::@29 main::@3 main::@31 printf_number_buffer::@2
  [58] cputs::s#8 = phi( main::@10/main::s4, main::@11/main::s3, main::@3/main::s, main::@29/main::s1, main::@31/main::s2, printf_number_buffer::@2/printf_number_buffer::buffer_digits#0 )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [59] cputs::s#7 = phi( cputs/cputs::s#8, cputs::@2/cputs::s#0 )
  [60] cputs::c#1 = *cputs::s#7
  [61] cputs::s#0 = ++ cputs::s#7
  [62] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [63] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [64] cputc::c = cputs::c#1
  [65] call cputc 
  to:cputs::@1

void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@28 main::@30
  [66] printf_uint::uvalue#2 = phi( main::@28/printf_uint::uvalue#0, main::@30/printf_uint::uvalue#1 )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [67] *((byte*)&printf_buffer) = 0
  [68] utoa::value#1 = printf_uint::uvalue#2
  [69] call utoa 
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [70] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer)
  [71] call printf_number_buffer 
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [72] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from clrscr newline::@4
  [73] memset::str#3 = phi( clrscr/memset::str#7, newline::@4/memset::str#8 )
  [73] memset::num#2 = phi( clrscr/(word)$28*$18, newline::@4/$28 )
  [74] if(memset::num#2<=0) goto memset::@return
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [75] memset::end#0 = (byte*)memset::str#3 + memset::num#2
  [76] memset::dst#4 = (byte*)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [77] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [78] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset memset::@2
  [79] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [80] *memset::dst#2 = 0
  [81] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from clrscr::@1
  [82] *COLCRS = gotoxy::x#1
  [83] *ROWCRS = gotoxy::y#1
  [84] call setcursor 
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy
  [85] return 
  to:@return

void cputc(volatile byte cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@3
  [86] if(cputc::c==''at) goto cputc::@1
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc
  [87] if(cputc::c=='
'at) goto cputc::@2
  to:cputc::@8
cputc::@8: scope:[cputc]  from cputc::@3
  [88] if(cputc::c==$9b) goto cputc::@2
  to:cputc::convertToScreenCode1
cputc::convertToScreenCode1: scope:[cputc]  from cputc::@8
  [89] cputc::convertToScreenCode1_return#0 = rawmap[*cputc::convertToScreenCode1_v#0]
  to:cputc::@6
cputc::@6: scope:[cputc]  from cputc::convertToScreenCode1
  [90] phi()
  [91] call putchar 
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc::@6
  [92] *COLCRS = ++ *COLCRS
  [93] if(*COLCRS==$28) goto cputc::@5
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@7
  [94] phi()
  [95] call setcursor 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@4 cputc::@5
  [96] return 
  to:@return
cputc::@5: scope:[cputc]  from cputc::@7
  [97] *COLCRS = 0
  [98] call newline 
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc::@3 cputc::@8
  [99] *COLCRS = 0
  [100] call newline 
  to:cputc::@return
cputc::@1: scope:[cputc]  from cputc
  [101] *COLCRS = 0
  [102] call setcursor 
  to:cputc::@return

void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
utoa: scope:[utoa]  from printf_uint::@1
  [103] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [104] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [104] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [104] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/utoa::value#1 )
  [104] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [105] if(utoa::digit#2<5-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [106] utoa::$11 = (byte)utoa::value#2
  [107] *utoa::buffer#11 = DIGITS[utoa::$11]
  [108] utoa::buffer#3 = ++ utoa::buffer#11
  [109] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [110] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [111] utoa::$10 = utoa::digit#2 << 1
  [112] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [113] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [114] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [115] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [115] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [115] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [116] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [117] utoa_append::buffer#0 = utoa::buffer#11
  [118] utoa_append::value#0 = utoa::value#2
  [119] utoa_append::sub#0 = utoa::digit_value#0
  [120] call utoa_append 
  [121] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [122] utoa::value#0 = utoa_append::return#0
  [123] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uint::@2
  [124] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer
  [125] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [126] cputc::c = printf_number_buffer::buffer_sign#0
  [127] call cputc 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@3
  [128] phi()
  [129] call cputs 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [130] return 
  to:@return

void setcursor()
setcursor: scope:[setcursor]  from cputc::@1 cputc::@4 gotoxy newline::@1 putchar::@1
  [131] *(*OLDADR) = *OLDCHR
  [132] call cursorLocation 
  [133] cursorLocation::return#3 = cursorLocation::return#1
  to:setcursor::@3
setcursor::@3: scope:[setcursor]  from setcursor
  [134] setcursor::loc#0 = cursorLocation::return#3
  [135] setcursor::c#0 = *setcursor::loc#0
  [136] *OLDCHR = setcursor::c#0
  [137] *OLDADR = setcursor::loc#0
  to:setcursor::@2
setcursor::@2: scope:[setcursor]  from setcursor::@3
  [138] *CRSINH = 0
  [139] setcursor::c#1 = setcursor::c#0 ^ $80
  to:setcursor::@1
setcursor::@1: scope:[setcursor]  from setcursor::@2
  [140] *(*OLDADR) = setcursor::c#1
  to:setcursor::@return
setcursor::@return: scope:[setcursor]  from setcursor::@1
  [141] return 
  to:@return

void putchar(byte putchar::code)
putchar: scope:[putchar]  from cputc::@6
  [142] *(*OLDADR) = *OLDCHR
  [143] call cursorLocation 
  [144] cursorLocation::return#0 = cursorLocation::return#1
  to:putchar::@1
putchar::@1: scope:[putchar]  from putchar
  [145] putchar::loc#0 = cursorLocation::return#0
  [146] putchar::newChar#0 = cputc::convertToScreenCode1_return#0
  [147] *putchar::loc#0 = putchar::newChar#0
  [148] *OLDCHR = putchar::newChar#0
  [149] call setcursor 
  to:putchar::@return
putchar::@return: scope:[putchar]  from putchar::@1
  [150] return 
  to:@return

void newline()
newline: scope:[newline]  from cputc::@2 cputc::@5
  [151] *ROWCRS = ++ *ROWCRS
  [152] if(*ROWCRS!=$18) goto newline::@1
  to:newline::@3
newline::@3: scope:[newline]  from newline
  [153] *(*OLDADR) = *(*OLDADR) ^ $80
  to:newline::@2
newline::@2: scope:[newline]  from newline::@3
  [154] newline::start#0 = *SAVMSC
  [155] memcpy::source#0 = newline::start#0 + $28
  [156] memcpy::destination#0 = (void*)newline::start#0
  [157] call memcpy 
  to:newline::@4
newline::@4: scope:[newline]  from newline::@2
  [158] memset::str#0 = newline::start#0 + (word)$28*$17
  [159] memset::str#8 = (void*)memset::str#0
  [160] call memset 
  to:newline::@5
newline::@5: scope:[newline]  from newline::@4
  [161] *ROWCRS = $18-1
  to:newline::@1
newline::@1: scope:[newline]  from newline newline::@5
  [162] phi()
  [163] call setcursor 
  to:newline::@return
newline::@return: scope:[newline]  from newline::@1
  [164] return 
  to:@return

word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [165] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [166] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [166] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [167] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [168] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [169] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [170] utoa_append::digit#1 = ++ utoa_append::digit#2
  [171] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

byte* cursorLocation()
cursorLocation: scope:[cursorLocation]  from putchar setcursor
  [172] cursorLocation::$3 = (word)*ROWCRS
  [173] cursorLocation::$4 = cursorLocation::$3 << 2
  [174] cursorLocation::$5 = cursorLocation::$4 + cursorLocation::$3
  [175] cursorLocation::$0 = cursorLocation::$5 << 3
  [176] cursorLocation::$1 = *SAVMSC + cursorLocation::$0
  [177] cursorLocation::return#1 = cursorLocation::$1 + *COLCRS
  to:cursorLocation::@return
cursorLocation::@return: scope:[cursorLocation]  from cursorLocation
  [178] return 
  to:@return

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from newline::@2
  [179] memcpy::src_end#0 = (byte*)(void*)memcpy::source#0 + memcpy::num#0
  [180] memcpy::src#4 = (byte*)(void*)memcpy::source#0
  [181] memcpy::dst#4 = (byte*)memcpy::destination#0
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [182] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [182] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [183] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [184] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [185] *memcpy::dst#2 = *memcpy::src#2
  [186] memcpy::dst#1 = ++ memcpy::dst#2
  [187] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1


VARIABLE REGISTER WEIGHTS
void clrscr()
void cputc(volatile byte cputc::c)
volatile byte cputc::c loadstore 775026.25
byte cputc::convertToScreenCode1_return
byte cputc::convertToScreenCode1_return#0 1833333.6666666665
byte* cputc::convertToScreenCode1_v
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 100001.0
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 50000.5
to_nomodify byte* cputs::s#7 150502.0
to_nomodify byte* cputs::s#8 1001.0
byte* cursorLocation()
word~ cursorLocation::$0 2.000000002E9
byte*~ cursorLocation::$1 2.000000002E9
word~ cursorLocation::$3 1.5000000015E9
word~ cursorLocation::$4 2.000000002E9
word~ cursorLocation::$5 2.000000002E9
byte* cursorLocation::return
byte* cursorLocation::return#0 2.0000002E7
byte* cursorLocation::return#1 2.7750000075E8
byte* cursorLocation::return#3 2.00000002E8
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte gotoxy::x
byte gotoxy::y
void main()
byte main::i
byte main::i#1 202.0
byte main::i#2 84.16666666666666
byte main::i1
byte main::i1#1 20002.0
byte main::i1#2 10001.0
byte main::match
byte main::match#1 20002.0
byte main::match#2 10334.666666666666
byte main::match#6 15001.5
byte main::num_found
byte main::num_found#1 202.0
byte main::num_found#2 104.66666666666666
byte main::num_found#6 101.0
byte* main::pass
byte* main::pass#1 22.0
byte* main::pass#10 716.3125
byte* main::pass#11 22.0
byte* main::pass#14 1526.75
byte* main::pass#3 1.4666666666666666
byte* main::pass#4 202.0
byte* main::pass#5 2002.0
byte* main::required_tag
byte* main::required_tag#1 1001.0
byte* main::required_tag#6 1333.6666666666665
byte main::tag_idx
byte main::tag_idx#1 2002.0
byte main::tag_idx#2 310.4
word main::total
word main::total#1 22.0
word main::total#10 46.0
word main::valid
word main::valid#1 11.0
word main::valid#10 54.76315789473685
word main::valid#8 16.5
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#0 3333333.6666666665
byte* memcpy::dst
byte* memcpy::dst#1 1.00000000001E11
byte* memcpy::dst#2 1.0003333333466667E11
byte* memcpy::dst#4 2.00000002E8
word memcpy::num
void* memcpy::return
void* memcpy::source
byte* memcpy::source#0 3333333.6666666665
byte* memcpy::src
byte* memcpy::src#1 2.00000000002E11
byte* memcpy::src#2 1.0002500000125E11
byte* memcpy::src#4 1.00000001E8
byte* memcpy::src_end
byte* memcpy::src_end#0 1.251250000025E10
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte* memset::dst
byte* memset::dst#1 2.00000000002E11
byte* memset::dst#2 1.3336666666833334E11
byte* memset::dst#4 2.00000002E8
byte* memset::end
byte* memset::end#0 1.6683333333666668E10
word memset::num
word memset::num#2 1.00000001E8
void* memset::return
void* memset::str
byte* memset::str#0 1.0000001E7
void* memset::str#3 3333337.333333333
void* memset::str#7 22.0
void* memset::str#8 2.0000002E7
void newline()
byte* newline::start
byte* newline::start#0 7500000.75
struct printf_buffer_number printf_buffer loadstore = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 71.0
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_zero_padding
signed byte printf_number_buffer::len
signed byte printf_number_buffer::padding
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
byte printf_uint::format_min_length
byte printf_uint::format_radix
byte printf_uint::format_sign_always
byte printf_uint::format_upper_case
byte printf_uint::format_zero_padding
word printf_uint::uvalue
word printf_uint::uvalue#0 4.0
word printf_uint::uvalue#1 4.0
word printf_uint::uvalue#2 7.5
void putchar(byte putchar::code)
byte putchar::code
byte* putchar::loc
byte* putchar::loc#0 1.0000001E7
byte putchar::newChar
byte putchar::newChar#0 1.50000015E7
void setcursor()
byte setcursor::c
byte setcursor::c#0 7.500000075E7
byte setcursor::c#1 2.00000002E8
byte* setcursor::loc
byte* setcursor::loc#0 1.00000001E8
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
byte~ utoa::$10 2002.0
byte~ utoa::$11 202.0
byte* utoa::buffer
byte* utoa::buffer#11 300.42857142857144
byte* utoa::buffer#14 1501.5
byte* utoa::buffer#3 202.0
byte* utoa::buffer#4 2002.0
byte utoa::digit
byte utoa::digit#1 2002.0
byte utoa::digit#2 286.0
word utoa::digit_value
word utoa::digit_value#0 600.5999999999999
word* utoa::digit_values
byte utoa::max_digits
byte utoa::radix
byte utoa::started
byte utoa::started#2 500.5
byte utoa::started#4 1001.0
word utoa::value
word utoa::value#0 1001.0
word utoa::value#1 56.0
word utoa::value#2 586.4285714285714
word utoa::value#6 1501.5
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
byte* utoa_append::buffer
byte* utoa_append::buffer#0 1375.25
byte utoa_append::digit
byte utoa_append::digit#1 1000001.0
byte utoa_append::digit#2 1005001.5
word utoa_append::return
word utoa_append::return#0 2002.0
word utoa_append::sub
word utoa_append::sub#0 333500.5
word utoa_append::value
word utoa_append::value#0 3667.333333333333
word utoa_append::value#1 2000002.0
word utoa_append::value#2 501834.16666666674

Initial phi equivalence classes
[ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ]
[ main::valid#10 main::valid#8 main::valid#1 ]
[ main::total#10 main::total#1 ]
[ main::i#2 main::i#1 ]
[ main::num_found#2 main::num_found#6 main::num_found#1 ]
[ main::tag_idx#2 main::tag_idx#1 ]
[ main::required_tag#6 main::required_tag#1 ]
[ main::i1#2 main::i1#1 ]
[ main::match#2 main::match#6 main::match#1 ]
[ cputs::s#7 cputs::s#8 cputs::s#0 ]
[ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ]
[ memset::num#2 ]
[ memset::str#3 memset::str#7 memset::str#8 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Added variable cputs::c#1 to live range equivalence class [ cputs::c#1 ]
Added variable cputc::c to live range equivalence class [ cputc::c ]
Added variable printf_number_buffer::buffer_sign#0 to live range equivalence class [ printf_number_buffer::buffer_sign#0 ]
Added variable memset::end#0 to live range equivalence class [ memset::end#0 ]
Added variable cputc::convertToScreenCode1_return#0 to live range equivalence class [ cputc::convertToScreenCode1_return#0 ]
Added variable utoa::$11 to live range equivalence class [ utoa::$11 ]
Added variable utoa::buffer#3 to live range equivalence class [ utoa::buffer#3 ]
Added variable utoa::$10 to live range equivalence class [ utoa::$10 ]
Added variable utoa::digit_value#0 to live range equivalence class [ utoa::digit_value#0 ]
Added variable utoa_append::buffer#0 to live range equivalence class [ utoa_append::buffer#0 ]
Added variable utoa_append::sub#0 to live range equivalence class [ utoa_append::sub#0 ]
Added variable utoa_append::return#0 to live range equivalence class [ utoa_append::return#0 ]
Added variable cursorLocation::return#3 to live range equivalence class [ cursorLocation::return#3 ]
Added variable setcursor::loc#0 to live range equivalence class [ setcursor::loc#0 ]
Added variable setcursor::c#0 to live range equivalence class [ setcursor::c#0 ]
Added variable setcursor::c#1 to live range equivalence class [ setcursor::c#1 ]
Added variable cursorLocation::return#0 to live range equivalence class [ cursorLocation::return#0 ]
Added variable putchar::loc#0 to live range equivalence class [ putchar::loc#0 ]
Added variable putchar::newChar#0 to live range equivalence class [ putchar::newChar#0 ]
Added variable newline::start#0 to live range equivalence class [ newline::start#0 ]
Added variable memcpy::source#0 to live range equivalence class [ memcpy::source#0 ]
Added variable memcpy::destination#0 to live range equivalence class [ memcpy::destination#0 ]
Added variable memset::str#0 to live range equivalence class [ memset::str#0 ]
Added variable cursorLocation::$3 to live range equivalence class [ cursorLocation::$3 ]
Added variable cursorLocation::$4 to live range equivalence class [ cursorLocation::$4 ]
Added variable cursorLocation::$5 to live range equivalence class [ cursorLocation::$5 ]
Added variable cursorLocation::$0 to live range equivalence class [ cursorLocation::$0 ]
Added variable cursorLocation::$1 to live range equivalence class [ cursorLocation::$1 ]
Added variable cursorLocation::return#1 to live range equivalence class [ cursorLocation::return#1 ]
Added variable memcpy::src_end#0 to live range equivalence class [ memcpy::src_end#0 ]
Added variable printf_buffer to live range equivalence class [ printf_buffer ]
Complete equivalence classes
[ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ]
[ main::valid#10 main::valid#8 main::valid#1 ]
[ main::total#10 main::total#1 ]
[ main::i#2 main::i#1 ]
[ main::num_found#2 main::num_found#6 main::num_found#1 ]
[ main::tag_idx#2 main::tag_idx#1 ]
[ main::required_tag#6 main::required_tag#1 ]
[ main::i1#2 main::i1#1 ]
[ main::match#2 main::match#6 main::match#1 ]
[ cputs::s#7 cputs::s#8 cputs::s#0 ]
[ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ]
[ memset::num#2 ]
[ memset::str#3 memset::str#7 memset::str#8 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ cputs::c#1 ]
[ cputc::c ]
[ printf_number_buffer::buffer_sign#0 ]
[ memset::end#0 ]
[ cputc::convertToScreenCode1_return#0 ]
[ utoa::$11 ]
[ utoa::buffer#3 ]
[ utoa::$10 ]
[ utoa::digit_value#0 ]
[ utoa_append::buffer#0 ]
[ utoa_append::sub#0 ]
[ utoa_append::return#0 ]
[ cursorLocation::return#3 ]
[ setcursor::loc#0 ]
[ setcursor::c#0 ]
[ setcursor::c#1 ]
[ cursorLocation::return#0 ]
[ putchar::loc#0 ]
[ putchar::newChar#0 ]
[ newline::start#0 ]
[ memcpy::source#0 ]
[ memcpy::destination#0 ]
[ memset::str#0 ]
[ cursorLocation::$3 ]
[ cursorLocation::$4 ]
[ cursorLocation::$5 ]
[ cursorLocation::$0 ]
[ cursorLocation::$1 ]
[ cursorLocation::return#1 ]
[ memcpy::src_end#0 ]
[ printf_buffer ]
Allocated zp[2]:128 [ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ]
Allocated zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 ]
Allocated zp[2]:132 [ main::total#10 main::total#1 ]
Allocated zp[1]:134 [ main::i#2 main::i#1 ]
Allocated zp[1]:135 [ main::num_found#2 main::num_found#6 main::num_found#1 ]
Allocated zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ]
Allocated zp[2]:137 [ main::required_tag#6 main::required_tag#1 ]
Allocated zp[1]:139 [ main::i1#2 main::i1#1 ]
Allocated zp[1]:140 [ main::match#2 main::match#6 main::match#1 ]
Allocated zp[2]:141 [ cputs::s#7 cputs::s#8 cputs::s#0 ]
Allocated zp[2]:143 [ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ]
Allocated zp[2]:145 [ memset::num#2 ]
Allocated zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 ]
Allocated zp[2]:149 [ memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated zp[1]:151 [ utoa::digit#2 utoa::digit#1 ]
Allocated zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
Allocated zp[1]:154 [ utoa::started#2 utoa::started#4 ]
Allocated zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
Allocated zp[2]:157 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
Allocated zp[1]:159 [ utoa_append::digit#2 utoa_append::digit#1 ]
Allocated zp[2]:160 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated zp[2]:162 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated zp[1]:164 [ cputs::c#1 ]
Allocated zp[1]:165 [ cputc::c ]
Allocated zp[1]:166 [ printf_number_buffer::buffer_sign#0 ]
Allocated zp[2]:167 [ memset::end#0 ]
Allocated zp[1]:169 [ cputc::convertToScreenCode1_return#0 ]
Allocated zp[1]:170 [ utoa::$11 ]
Allocated zp[2]:171 [ utoa::buffer#3 ]
Allocated zp[1]:173 [ utoa::$10 ]
Allocated zp[2]:174 [ utoa::digit_value#0 ]
Allocated zp[2]:176 [ utoa_append::buffer#0 ]
Allocated zp[2]:178 [ utoa_append::sub#0 ]
Allocated zp[2]:180 [ utoa_append::return#0 ]
Allocated zp[2]:182 [ cursorLocation::return#3 ]
Allocated zp[2]:184 [ setcursor::loc#0 ]
Allocated zp[1]:186 [ setcursor::c#0 ]
Allocated zp[1]:187 [ setcursor::c#1 ]
Allocated zp[2]:188 [ cursorLocation::return#0 ]
Allocated zp[2]:190 [ putchar::loc#0 ]
Allocated zp[1]:192 [ putchar::newChar#0 ]
Allocated zp[2]:193 [ newline::start#0 ]
Allocated zp[2]:195 [ memcpy::source#0 ]
Allocated zp[2]:197 [ memcpy::destination#0 ]
Allocated zp[2]:199 [ memset::str#0 ]
Allocated zp[2]:201 [ cursorLocation::$3 ]
Allocated zp[2]:203 [ cursorLocation::$4 ]
Allocated zp[2]:205 [ cursorLocation::$5 ]
Allocated zp[2]:207 [ cursorLocation::$0 ]
Allocated zp[2]:209 [ cursorLocation::$1 ]
Allocated zp[2]:211 [ cursorLocation::return#1 ]
Allocated zp[2]:213 [ memcpy::src_end#0 ]
Allocated mem[12] [ printf_buffer ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [3] if(0!=*main::pass#10) goto main::@2 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [6] printf_uint::uvalue#0 = main::valid#10 [ main::total#10 printf_uint::uvalue#0 printf_buffer ] (  [ main::total#10 printf_uint::uvalue#0 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } }  ) always clobbers reg byte a 
Statement [10] printf_uint::uvalue#1 = main::total#10 [ printf_uint::uvalue#1 printf_buffer ] (  [ printf_uint::uvalue#1 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } }  ) always clobbers reg byte a 
Statement [15] if(*main::pass#10!=' 'at) goto main::@4 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [17] if(*main::pass#10!='
'at) goto main::@13 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [19] if(*main::pass#11!='
'at) goto main::@1 [ main::valid#10 main::total#10 main::pass#11 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#11 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [30] if(0==main::tags_found[main::i#2]) goto main::@8 [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#2 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#2 printf_buffer ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:134 [ main::i#2 main::i#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:135 [ main::num_found#2 main::num_found#6 main::num_found#1 ]
Statement [33] main::tags_found[main::i#2] = 0 [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#6 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#6 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [37] main::pass#4 = main::pass#10 + 3 [ main::valid#10 main::total#10 main::pass#4 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#4 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [39] if(0==*main::pass#14) goto main::@1 [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [40] if(*main::pass#14==' 'at) goto main::@1 [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [41] if(*main::pass#14!='
'at) goto main::@23 [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [46] main::tags_found[main::tag_idx#2] = 1 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [47] main::required_tag#1 = main::required_tag#6 + 3 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#1 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#1 printf_buffer ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ]
Statement [49] if(main::required_tag#6[main::i1#2]!=main::pass#10[main::i1#2]) goto main::@17 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 main::i1#2 main::match#2 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 main::i1#2 main::match#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte x reg byte y 
Removing always clobbered register reg byte x as potential for zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:139 [ main::i1#2 main::i1#1 ]
Removing always clobbered register reg byte x as potential for zp[1]:139 [ main::i1#2 main::i1#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:139 [ main::i1#2 main::i1#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:140 [ main::match#2 main::match#6 main::match#1 ]
Removing always clobbered register reg byte x as potential for zp[1]:140 [ main::match#2 main::match#6 main::match#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:140 [ main::match#2 main::match#6 main::match#1 ]
Statement [53] memset::str#7 = (void*)*SAVMSC [ memset::str#7 ] ( clrscr:1 [ printf_buffer memset::str#7 ] { { memset::str#3 = memset::str#7 } }  ) always clobbers reg byte a 
Statement [55] *OLDCHR = 0 [ ] ( clrscr:1 [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [60] cputs::c#1 = *cputs::s#7 [ cputs::s#7 cputs::c#1 ] ( cputs:5 [ main::valid#10 main::total#10 printf_buffer cputs::s#7 cputs::c#1 ] { }  cputs:9 [ main::total#10 printf_buffer cputs::s#7 cputs::c#1 ] { }  cputs:13 [ cputs::s#7 cputs::c#1 ] { }  cputs:25 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#7 cputs::c#1 ] { }  cputs:29 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#7 cputs::c#1 ] { }  printf_uint:7::printf_number_buffer:71::cputs:129 [ main::total#10 printf_buffer cputs::s#7 cputs::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } }  printf_uint:11::printf_number_buffer:71::cputs:129 [ printf_buffer cputs::s#7 cputs::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [67] *((byte*)&printf_buffer) = 0 [ printf_uint::uvalue#2 printf_buffer ] ( printf_uint:7 [ main::total#10 printf_uint::uvalue#2 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11 [ printf_uint::uvalue#2 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [68] utoa::value#1 = printf_uint::uvalue#2 [ printf_buffer utoa::value#1 ] ( printf_uint:7 [ main::total#10 printf_buffer utoa::value#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11 [ printf_buffer utoa::value#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [74] if(memset::num#2<=0) goto memset::@return [ memset::num#2 memset::str#3 ] ( clrscr:1::memset:54 [ printf_buffer memset::num#2 memset::str#3 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [75] memset::end#0 = (byte*)memset::str#3 + memset::num#2 [ memset::str#3 memset::end#0 ] ( clrscr:1::memset:54 [ printf_buffer memset::str#3 memset::end#0 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [76] memset::dst#4 = (byte*)memset::str#3 [ memset::end#0 memset::dst#4 ] ( clrscr:1::memset:54 [ printf_buffer memset::end#0 memset::dst#4 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [78] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::end#0 memset::dst#2 ] ( clrscr:1::memset:54 [ printf_buffer memset::end#0 memset::dst#2 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [80] *memset::dst#2 = 0 [ memset::end#0 memset::dst#2 ] ( clrscr:1::memset:54 [ printf_buffer memset::end#0 memset::dst#2 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a reg byte y 
Statement [82] *COLCRS = gotoxy::x#1 [ ] ( clrscr:1::gotoxy:56 [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [83] *ROWCRS = gotoxy::y#1 [ ] ( clrscr:1::gotoxy:56 [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [86] if(cputc::c==''at) goto cputc::@1 [ cputc::c ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [87] if(cputc::c=='
'at) goto cputc::@2 [ cputc::c ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [88] if(cputc::c==$9b) goto cputc::@2 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [89] cputc::convertToScreenCode1_return#0 = rawmap[*cputc::convertToScreenCode1_v#0] [ cputc::convertToScreenCode1_return#0 ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte y 
Statement [93] if(*COLCRS==$28) goto cputc::@5 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [97] *COLCRS = 0 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [99] *COLCRS = 0 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [101] *COLCRS = 0 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [106] utoa::$11 = (byte)utoa::value#2 [ printf_buffer utoa::buffer#11 utoa::$11 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::buffer#11 utoa::$11 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::buffer#11 utoa::$11 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [107] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [108] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [109] *utoa::buffer#3 = 0 [ printf_buffer ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [111] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:151 [ utoa::digit#2 utoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:154 [ utoa::started#2 utoa::started#4 ]
Statement [112] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [114] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [117] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [118] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [119] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [121] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [122] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [131] *(*OLDADR) = *OLDCHR [ ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [133] cursorLocation::return#3 = cursorLocation::return#1 [ cursorLocation::return#3 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer cursorLocation::return#3 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  ) always clobbers reg byte a 
Statement [134] setcursor::loc#0 = cursorLocation::return#3 [ setcursor::loc#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::loc#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [135] setcursor::c#0 = *setcursor::loc#0 [ setcursor::loc#0 setcursor::c#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a reg byte y 
Statement [137] *OLDADR = setcursor::loc#0 [ setcursor::c#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::c#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:186 [ setcursor::c#0 ]
Statement [138] *CRSINH = 0 [ setcursor::c#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::c#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [139] setcursor::c#1 = setcursor::c#0 ^ $80 [ setcursor::c#1 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::c#1 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [140] *(*OLDADR) = setcursor::c#1 [ ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte y 
Statement [142] *(*OLDADR) = *OLDCHR [ cputc::convertToScreenCode1_return#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp[1]:169 [ cputc::convertToScreenCode1_return#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:169 [ cputc::convertToScreenCode1_return#0 ]
Statement [144] cursorLocation::return#0 = cursorLocation::return#1 [ cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [145] putchar::loc#0 = cursorLocation::return#0 [ cputc::convertToScreenCode1_return#0 putchar::loc#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [147] *putchar::loc#0 = putchar::newChar#0 [ putchar::newChar#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 putchar::newChar#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 putchar::newChar#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer putchar::newChar#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer putchar::newChar#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:192 [ putchar::newChar#0 ]
Statement [152] if(*ROWCRS!=$18) goto newline::@1 [ ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [153] *(*OLDADR) = *(*OLDADR) ^ $80 [ ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a reg byte y 
Statement [154] newline::start#0 = *SAVMSC [ newline::start#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [155] memcpy::source#0 = newline::start#0 + $28 [ newline::start#0 memcpy::source#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [156] memcpy::destination#0 = (void*)newline::start#0 [ newline::start#0 memcpy::source#0 memcpy::destination#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [158] memset::str#0 = newline::start#0 + (word)$28*$17 [ memset::str#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [159] memset::str#8 = (void*)memset::str#0 [ memset::str#8 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [161] *ROWCRS = $18-1 [ ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [167] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( printf_uint:7::utoa:69::utoa_append:120 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69::utoa_append:120 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:159 [ utoa_append::digit#2 utoa_append::digit#1 ]
Statement [168] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( printf_uint:7::utoa:69::utoa_append:120 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69::utoa_append:120 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:151 [ utoa::digit#2 utoa::digit#1 ]
Statement [171] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( printf_uint:7::utoa:69::utoa_append:120 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69::utoa_append:120 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [172] cursorLocation::$3 = (word)*ROWCRS [ cursorLocation::$3 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [173] cursorLocation::$4 = cursorLocation::$3 << 2 [ cursorLocation::$3 cursorLocation::$4 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [174] cursorLocation::$5 = cursorLocation::$4 + cursorLocation::$3 [ cursorLocation::$5 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [175] cursorLocation::$0 = cursorLocation::$5 << 3 [ cursorLocation::$0 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [176] cursorLocation::$1 = *SAVMSC + cursorLocation::$0 [ cursorLocation::$1 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [177] cursorLocation::return#1 = cursorLocation::$1 + *COLCRS [ cursorLocation::return#1 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [179] memcpy::src_end#0 = (byte*)(void*)memcpy::source#0 + memcpy::num#0 [ memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [180] memcpy::src#4 = (byte*)(void*)memcpy::source#0 [ memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [181] memcpy::dst#4 = (byte*)memcpy::destination#0 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [183] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [185] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a reg byte y 
Statement [3] if(0!=*main::pass#10) goto main::@2 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [6] printf_uint::uvalue#0 = main::valid#10 [ main::total#10 printf_uint::uvalue#0 printf_buffer ] (  [ main::total#10 printf_uint::uvalue#0 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } }  ) always clobbers reg byte a 
Statement [10] printf_uint::uvalue#1 = main::total#10 [ printf_uint::uvalue#1 printf_buffer ] (  [ printf_uint::uvalue#1 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } }  ) always clobbers reg byte a 
Statement [15] if(*main::pass#10!=' 'at) goto main::@4 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [17] if(*main::pass#10!='
'at) goto main::@13 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [19] if(*main::pass#11!='
'at) goto main::@1 [ main::valid#10 main::total#10 main::pass#11 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#11 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [30] if(0==main::tags_found[main::i#2]) goto main::@8 [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#2 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#2 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [33] main::tags_found[main::i#2] = 0 [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#6 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#3 main::i#2 main::num_found#6 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [36] if(main::tag_idx#2<7) goto main::@14 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [37] main::pass#4 = main::pass#10 + 3 [ main::valid#10 main::total#10 main::pass#4 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#4 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [39] if(0==*main::pass#14) goto main::@1 [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [40] if(*main::pass#14==' 'at) goto main::@1 [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [41] if(*main::pass#14!='
'at) goto main::@23 [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] (  [ main::valid#10 main::total#10 main::pass#14 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [44] if(main::i1#2<3) goto main::@15 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 main::i1#2 main::match#2 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 main::i1#2 main::match#2 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [45] if(main::match#2!=3) goto main::@20 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [46] main::tags_found[main::tag_idx#2] = 1 [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [47] main::required_tag#1 = main::required_tag#6 + 3 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#1 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#1 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [49] if(main::required_tag#6[main::i1#2]!=main::pass#10[main::i1#2]) goto main::@17 [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 main::i1#2 main::match#2 printf_buffer ] (  [ main::pass#10 main::valid#10 main::total#10 main::tag_idx#2 main::required_tag#6 main::i1#2 main::match#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte x reg byte y 
Statement [53] memset::str#7 = (void*)*SAVMSC [ memset::str#7 ] ( clrscr:1 [ printf_buffer memset::str#7 ] { { memset::str#3 = memset::str#7 } }  ) always clobbers reg byte a 
Statement [55] *OLDCHR = 0 [ ] ( clrscr:1 [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [60] cputs::c#1 = *cputs::s#7 [ cputs::s#7 cputs::c#1 ] ( cputs:5 [ main::valid#10 main::total#10 printf_buffer cputs::s#7 cputs::c#1 ] { }  cputs:9 [ main::total#10 printf_buffer cputs::s#7 cputs::c#1 ] { }  cputs:13 [ cputs::s#7 cputs::c#1 ] { }  cputs:25 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#7 cputs::c#1 ] { }  cputs:29 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#7 cputs::c#1 ] { }  printf_uint:7::printf_number_buffer:71::cputs:129 [ main::total#10 printf_buffer cputs::s#7 cputs::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } }  printf_uint:11::printf_number_buffer:71::cputs:129 [ printf_buffer cputs::s#7 cputs::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [67] *((byte*)&printf_buffer) = 0 [ printf_uint::uvalue#2 printf_buffer ] ( printf_uint:7 [ main::total#10 printf_uint::uvalue#2 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11 [ printf_uint::uvalue#2 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [68] utoa::value#1 = printf_uint::uvalue#2 [ printf_buffer utoa::value#1 ] ( printf_uint:7 [ main::total#10 printf_buffer utoa::value#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11 [ printf_buffer utoa::value#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [74] if(memset::num#2<=0) goto memset::@return [ memset::num#2 memset::str#3 ] ( clrscr:1::memset:54 [ printf_buffer memset::num#2 memset::str#3 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::num#2 memset::str#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [75] memset::end#0 = (byte*)memset::str#3 + memset::num#2 [ memset::str#3 memset::end#0 ] ( clrscr:1::memset:54 [ printf_buffer memset::str#3 memset::end#0 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::str#3 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [76] memset::dst#4 = (byte*)memset::str#3 [ memset::end#0 memset::dst#4 ] ( clrscr:1::memset:54 [ printf_buffer memset::end#0 memset::dst#4 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [78] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::end#0 memset::dst#2 ] ( clrscr:1::memset:54 [ printf_buffer memset::end#0 memset::dst#2 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [80] *memset::dst#2 = 0 [ memset::end#0 memset::dst#2 ] ( clrscr:1::memset:54 [ printf_buffer memset::end#0 memset::dst#2 ] { { memset::str#3 = memset::str#7 } }  cputs:5::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100::memset:160 [ cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100::memset:160 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100::memset:160 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ main::total#10 printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memset:160 [ printf_buffer cputs::s#0 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ main::total#10 printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memset:160 [ printf_buffer memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a reg byte y 
Statement [82] *COLCRS = gotoxy::x#1 [ ] ( clrscr:1::gotoxy:56 [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [83] *ROWCRS = gotoxy::y#1 [ ] ( clrscr:1::gotoxy:56 [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [86] if(cputc::c==''at) goto cputc::@1 [ cputc::c ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [87] if(cputc::c=='
'at) goto cputc::@2 [ cputc::c ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::c ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer cputc::c ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer cputc::c ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [88] if(cputc::c==$9b) goto cputc::@2 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [89] cputc::convertToScreenCode1_return#0 = rawmap[*cputc::convertToScreenCode1_v#0] [ cputc::convertToScreenCode1_return#0 ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte y 
Statement [93] if(*COLCRS==$28) goto cputc::@5 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [97] *COLCRS = 0 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [99] *COLCRS = 0 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [101] *COLCRS = 0 [ ] ( cputs:5::cputc:65 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [106] utoa::$11 = (byte)utoa::value#2 [ printf_buffer utoa::buffer#11 utoa::$11 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::buffer#11 utoa::$11 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::buffer#11 utoa::$11 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [107] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [108] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [109] *utoa::buffer#3 = 0 [ printf_buffer ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [111] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [112] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [114] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [117] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [118] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [119] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [121] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [122] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( printf_uint:7::utoa:69 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } }  printf_uint:11::utoa:69 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [131] *(*OLDADR) = *OLDCHR [ ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [133] cursorLocation::return#3 = cursorLocation::return#1 [ cursorLocation::return#3 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer cursorLocation::return#3 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer cursorLocation::return#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  ) always clobbers reg byte a 
Statement [134] setcursor::loc#0 = cursorLocation::return#3 [ setcursor::loc#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::loc#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [135] setcursor::c#0 = *setcursor::loc#0 [ setcursor::loc#0 setcursor::c#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::loc#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a reg byte y 
Statement [137] *OLDADR = setcursor::loc#0 [ setcursor::c#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::c#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [138] *CRSINH = 0 [ setcursor::c#0 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::c#0 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [139] setcursor::c#1 = setcursor::c#0 ^ $80 [ setcursor::c#1 ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer setcursor::c#1 ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 setcursor::c#1 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer setcursor::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [140] *(*OLDADR) = setcursor::c#1 [ ] ( clrscr:1::gotoxy:56::setcursor:84 [ printf_buffer ] { }  cputs:5::cputc:65::setcursor:95 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:95 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:95 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:95 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::setcursor:102 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::setcursor:102 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::setcursor:102 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::setcursor:102 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91::setcursor:149 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91::setcursor:149 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91::setcursor:149 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::setcursor:163 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::setcursor:163 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::setcursor:163 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte y 
Statement [142] *(*OLDADR) = *OLDCHR [ cputc::convertToScreenCode1_return#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer cputc::convertToScreenCode1_return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a reg byte y 
Statement [144] cursorLocation::return#0 = cursorLocation::return#1 [ cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [145] putchar::loc#0 = cursorLocation::return#0 [ cputc::convertToScreenCode1_return#0 putchar::loc#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer cputc::convertToScreenCode1_return#0 putchar::loc#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [147] *putchar::loc#0 = putchar::newChar#0 [ putchar::newChar#0 ] ( cputs:5::cputc:65::putchar:91 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::putchar:91 [ cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::putchar:91 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::putchar:91 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 putchar::newChar#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ main::total#10 printf_buffer cputs::s#0 putchar::newChar#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91 [ printf_buffer cputs::s#0 putchar::newChar#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91 [ main::total#10 printf_buffer putchar::newChar#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91 [ printf_buffer putchar::newChar#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte y 
Statement [152] if(*ROWCRS!=$18) goto newline::@1 [ ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [153] *(*OLDADR) = *(*OLDADR) ^ $80 [ ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a reg byte y 
Statement [154] newline::start#0 = *SAVMSC [ newline::start#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer newline::start#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer newline::start#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [155] memcpy::source#0 = newline::start#0 + $28 [ newline::start#0 memcpy::source#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer newline::start#0 memcpy::source#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [156] memcpy::destination#0 = (void*)newline::start#0 [ newline::start#0 memcpy::source#0 memcpy::destination#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [158] memset::str#0 = newline::start#0 + (word)$28*$17 [ memset::str#0 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#0 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer memset::str#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer memset::str#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [159] memset::str#8 = (void*)memset::str#0 [ memset::str#8 ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 memset::str#8 ] { { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer memset::str#8 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer memset::str#8 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { memset::str#3 = memset::str#8 } }  ) always clobbers reg byte a 
Statement [161] *ROWCRS = $18-1 [ ] ( cputs:5::cputc:65::newline:98 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100 [ cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ main::total#10 printf_buffer cputs::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100 [ printf_buffer cputs::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100 [ main::total#10 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100 [ printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [167] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( printf_uint:7::utoa:69::utoa_append:120 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69::utoa_append:120 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [168] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( printf_uint:7::utoa:69::utoa_append:120 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69::utoa_append:120 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [171] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( printf_uint:7::utoa:69::utoa_append:120 [ main::total#10 printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  printf_uint:11::utoa:69::utoa_append:120 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [172] cursorLocation::$3 = (word)*ROWCRS [ cursorLocation::$3 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [173] cursorLocation::$4 = cursorLocation::$3 << 2 [ cursorLocation::$3 cursorLocation::$4 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$3 cursorLocation::$4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [174] cursorLocation::$5 = cursorLocation::$4 + cursorLocation::$3 [ cursorLocation::$5 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$5 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [175] cursorLocation::$0 = cursorLocation::$5 << 3 [ cursorLocation::$0 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [176] cursorLocation::$1 = *SAVMSC + cursorLocation::$0 [ cursorLocation::$1 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::$1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [177] cursorLocation::return#1 = cursorLocation::$1 + *COLCRS [ cursorLocation::return#1 ] ( clrscr:1::gotoxy:56::setcursor:84::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:95::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:95::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:95::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:95::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::setcursor:102::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::setcursor:102::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::setcursor:102::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::setcursor:102::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::setcursor:149::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:9::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:13::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:25::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:29::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cputs::s#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ main::total#10 printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::setcursor:163::cursorLocation:132 [ printf_buffer cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#1 = cursorLocation::return#3 } }  cputs:5::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:9::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:13::cputc:65::putchar:91::cursorLocation:143 [ cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:25::cputc:65::putchar:91::cursorLocation:143 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  cputs:29::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::putchar:91::cursorLocation:143 [ printf_buffer cputs::s#0 cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:7::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ main::total#10 printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  printf_uint:11::printf_number_buffer:71::cputc:127::putchar:91::cursorLocation:143 [ printf_buffer cputc::convertToScreenCode1_return#0 cursorLocation::return#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } { cursorLocation::return#0 = cursorLocation::return#1 } }  ) always clobbers reg byte a 
Statement [179] memcpy::src_end#0 = (byte*)(void*)memcpy::source#0 + memcpy::num#0 [ memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::source#0 memcpy::destination#0 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [180] memcpy::src#4 = (byte*)(void*)memcpy::source#0 [ memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::destination#0 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [181] memcpy::dst#4 = (byte*)memcpy::destination#0 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [183] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a 
Statement [185] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputs:5::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:98::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:98::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:98::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:98::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:98::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  cputs:5::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:9::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:13::cputc:65::newline:100::memcpy:157 [ cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:25::cputc:65::newline:100::memcpy:157 [ main::valid#10 main::total#10 main::pass#3 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  cputs:29::cputc:65::newline:100::memcpy:157 [ main::total#10 main::pass#3 main::valid#1 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ main::total#10 printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { cputs::c#1 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputs:129::cputc:65::newline:100::memcpy:157 [ printf_buffer cputs::s#0 newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { cputs::c#1 = cputc::c } }  printf_uint:7::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ main::total#10 printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#2 main::valid#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  printf_uint:11::printf_number_buffer:71::cputc:127::newline:100::memcpy:157 [ printf_buffer newline::start#0 memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#2 main::total#10 } { printf_number_buffer::buffer_sign#0 = cputc::c } }  ) always clobbers reg byte a reg byte y 
Potential registers zp[2]:128 [ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ] : zp[2]:128 , 
Potential registers zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 ] : zp[2]:130 , 
Potential registers zp[2]:132 [ main::total#10 main::total#1 ] : zp[2]:132 , 
Potential registers zp[1]:134 [ main::i#2 main::i#1 ] : zp[1]:134 , reg byte x , reg byte y , 
Potential registers zp[1]:135 [ main::num_found#2 main::num_found#6 main::num_found#1 ] : zp[1]:135 , reg byte x , reg byte y , 
Potential registers zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ] : zp[1]:136 , 
Potential registers zp[2]:137 [ main::required_tag#6 main::required_tag#1 ] : zp[2]:137 , 
Potential registers zp[1]:139 [ main::i1#2 main::i1#1 ] : zp[1]:139 , 
Potential registers zp[1]:140 [ main::match#2 main::match#6 main::match#1 ] : zp[1]:140 , 
Potential registers zp[2]:141 [ cputs::s#7 cputs::s#8 cputs::s#0 ] : zp[2]:141 , 
Potential registers zp[2]:143 [ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ] : zp[2]:143 , 
Potential registers zp[2]:145 [ memset::num#2 ] : zp[2]:145 , 
Potential registers zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 ] : zp[2]:147 , 
Potential registers zp[2]:149 [ memset::dst#2 memset::dst#4 memset::dst#1 ] : zp[2]:149 , 
Potential registers zp[1]:151 [ utoa::digit#2 utoa::digit#1 ] : zp[1]:151 , reg byte x , 
Potential registers zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] : zp[2]:152 , 
Potential registers zp[1]:154 [ utoa::started#2 utoa::started#4 ] : zp[1]:154 , reg byte x , reg byte y , 
Potential registers zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] : zp[2]:155 , 
Potential registers zp[2]:157 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] : zp[2]:157 , 
Potential registers zp[1]:159 [ utoa_append::digit#2 utoa_append::digit#1 ] : zp[1]:159 , reg byte x , reg byte y , 
Potential registers zp[2]:160 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] : zp[2]:160 , 
Potential registers zp[2]:162 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] : zp[2]:162 , 
Potential registers zp[1]:164 [ cputs::c#1 ] : zp[1]:164 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:165 [ cputc::c ] : zp[1]:165 , 
Potential registers zp[1]:166 [ printf_number_buffer::buffer_sign#0 ] : zp[1]:166 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:167 [ memset::end#0 ] : zp[2]:167 , 
Potential registers zp[1]:169 [ cputc::convertToScreenCode1_return#0 ] : zp[1]:169 , reg byte x , 
Potential registers zp[1]:170 [ utoa::$11 ] : zp[1]:170 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:171 [ utoa::buffer#3 ] : zp[2]:171 , 
Potential registers zp[1]:173 [ utoa::$10 ] : zp[1]:173 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:174 [ utoa::digit_value#0 ] : zp[2]:174 , 
Potential registers zp[2]:176 [ utoa_append::buffer#0 ] : zp[2]:176 , 
Potential registers zp[2]:178 [ utoa_append::sub#0 ] : zp[2]:178 , 
Potential registers zp[2]:180 [ utoa_append::return#0 ] : zp[2]:180 , 
Potential registers zp[2]:182 [ cursorLocation::return#3 ] : zp[2]:182 , 
Potential registers zp[2]:184 [ setcursor::loc#0 ] : zp[2]:184 , 
Potential registers zp[1]:186 [ setcursor::c#0 ] : zp[1]:186 , reg byte x , reg byte y , 
Potential registers zp[1]:187 [ setcursor::c#1 ] : zp[1]:187 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:188 [ cursorLocation::return#0 ] : zp[2]:188 , 
Potential registers zp[2]:190 [ putchar::loc#0 ] : zp[2]:190 , 
Potential registers zp[1]:192 [ putchar::newChar#0 ] : zp[1]:192 , reg byte a , reg byte x , 
Potential registers zp[2]:193 [ newline::start#0 ] : zp[2]:193 , 
Potential registers zp[2]:195 [ memcpy::source#0 ] : zp[2]:195 , 
Potential registers zp[2]:197 [ memcpy::destination#0 ] : zp[2]:197 , 
Potential registers zp[2]:199 [ memset::str#0 ] : zp[2]:199 , 
Potential registers zp[2]:201 [ cursorLocation::$3 ] : zp[2]:201 , 
Potential registers zp[2]:203 [ cursorLocation::$4 ] : zp[2]:203 , 
Potential registers zp[2]:205 [ cursorLocation::$5 ] : zp[2]:205 , 
Potential registers zp[2]:207 [ cursorLocation::$0 ] : zp[2]:207 , 
Potential registers zp[2]:209 [ cursorLocation::$1 ] : zp[2]:209 , 
Potential registers zp[2]:211 [ cursorLocation::return#1 ] : zp[2]:211 , 
Potential registers zp[2]:213 [ memcpy::src_end#0 ] : zp[2]:213 , 
Potential registers mem[12] [ printf_buffer ] : mem[12] , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy] 300,125,000,004.25: zp[2]:160 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] 200,233,333,337.67: zp[2]:162 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] 12,512,500,000.25: zp[2]:213 [ memcpy::src_end#0 ] 3,333,333.67: zp[2]:195 [ memcpy::source#0 ] 3,333,333.67: zp[2]:197 [ memcpy::destination#0 ] 
Uplift Scope [memset] 333,566,666,672.33: zp[2]:149 [ memset::dst#2 memset::dst#4 memset::dst#1 ] 16,683,333,333.67: zp[2]:167 [ memset::end#0 ] 100,000,001: zp[2]:145 [ memset::num#2 ] 23,333,361.33: zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 ] 10,000,001: zp[2]:199 [ memset::str#0 ] 
Uplift Scope [cursorLocation] 2,000,000,002: zp[2]:203 [ cursorLocation::$4 ] 2,000,000,002: zp[2]:205 [ cursorLocation::$5 ] 2,000,000,002: zp[2]:207 [ cursorLocation::$0 ] 2,000,000,002: zp[2]:209 [ cursorLocation::$1 ] 1,500,000,001.5: zp[2]:201 [ cursorLocation::$3 ] 277,500,000.75: zp[2]:211 [ cursorLocation::return#1 ] 200,000,002: zp[2]:182 [ cursorLocation::return#3 ] 20,000,002: zp[2]:188 [ cursorLocation::return#0 ] 
Uplift Scope [setcursor] 200,000,002: zp[1]:187 [ setcursor::c#1 ] 100,000,001: zp[2]:184 [ setcursor::loc#0 ] 75,000,000.75: zp[1]:186 [ setcursor::c#0 ] 
Uplift Scope [putchar] 15,000,001.5: zp[1]:192 [ putchar::newChar#0 ] 10,000,001: zp[2]:190 [ putchar::loc#0 ] 
Uplift Scope [newline] 7,500,000.75: zp[2]:193 [ newline::start#0 ] 
Uplift Scope [utoa_append] 2,505,503.5: zp[2]:157 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] 2,005,002.5: zp[1]:159 [ utoa_append::digit#2 utoa_append::digit#1 ] 333,500.5: zp[2]:178 [ utoa_append::sub#0 ] 2,002: zp[2]:180 [ utoa_append::return#0 ] 1,375.25: zp[2]:176 [ utoa_append::buffer#0 ] 
Uplift Scope [cputc] 1,833,333.67: zp[1]:169 [ cputc::convertToScreenCode1_return#0 ] 775,026.25: zp[1]:165 [ cputc::c ] 
Uplift Scope [cputs] 201,503.5: zp[2]:141 [ cputs::s#7 cputs::s#8 cputs::s#0 ] 100,001: zp[1]:164 [ cputs::c#1 ] 
Uplift Scope [main] 45,338.17: zp[1]:140 [ main::match#2 main::match#6 main::match#1 ] 30,003: zp[1]:139 [ main::i1#2 main::i1#1 ] 4,492.53: zp[2]:128 [ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ] 2,334.67: zp[2]:137 [ main::required_tag#6 main::required_tag#1 ] 2,312.4: zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ] 407.67: zp[1]:135 [ main::num_found#2 main::num_found#6 main::num_found#1 ] 286.17: zp[1]:134 [ main::i#2 main::i#1 ] 82.26: zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 ] 68: zp[2]:132 [ main::total#10 main::total#1 ] 
Uplift Scope [utoa] 3,803.93: zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] 3,144.93: zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] 2,288: zp[1]:151 [ utoa::digit#2 utoa::digit#1 ] 2,002: zp[1]:173 [ utoa::$10 ] 1,501.5: zp[1]:154 [ utoa::started#2 utoa::started#4 ] 600.6: zp[2]:174 [ utoa::digit_value#0 ] 202: zp[1]:170 [ utoa::$11 ] 202: zp[2]:171 [ utoa::buffer#3 ] 
Uplift Scope [printf_number_buffer] 71: zp[1]:166 [ printf_number_buffer::buffer_sign#0 ] 
Uplift Scope [printf_uint] 15.5: zp[2]:143 [ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ] 
Uplift Scope [RADIX] 
Uplift Scope [ATARI_ANTIC] 
Uplift Scope [ATARI_GTIA_READ] 
Uplift Scope [ATARI_GTIA_WRITE] 
Uplift Scope [ATARI_POKEY_READ] 
Uplift Scope [ATARI_POKEY_WRITE] 
Uplift Scope [gotoxy] 
Uplift Scope [clrscr] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_format_string] 
Uplift Scope [] 0: mem[12] [ printf_buffer ] 

Uplifting [memcpy] best 965776 combination zp[2]:160 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] zp[2]:162 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] zp[2]:213 [ memcpy::src_end#0 ] zp[2]:195 [ memcpy::source#0 ] zp[2]:197 [ memcpy::destination#0 ] 
Uplifting [memset] best 965776 combination zp[2]:149 [ memset::dst#2 memset::dst#4 memset::dst#1 ] zp[2]:167 [ memset::end#0 ] zp[2]:145 [ memset::num#2 ] zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 ] zp[2]:199 [ memset::str#0 ] 
Uplifting [cursorLocation] best 965776 combination zp[2]:203 [ cursorLocation::$4 ] zp[2]:205 [ cursorLocation::$5 ] zp[2]:207 [ cursorLocation::$0 ] zp[2]:209 [ cursorLocation::$1 ] zp[2]:201 [ cursorLocation::$3 ] zp[2]:211 [ cursorLocation::return#1 ] zp[2]:182 [ cursorLocation::return#3 ] zp[2]:188 [ cursorLocation::return#0 ] 
Uplifting [setcursor] best 965765 combination reg byte a [ setcursor::c#1 ] zp[2]:184 [ setcursor::loc#0 ] reg byte x [ setcursor::c#0 ] 
Uplifting [putchar] best 965756 combination reg byte a [ putchar::newChar#0 ] zp[2]:190 [ putchar::loc#0 ] 
Uplifting [newline] best 965756 combination zp[2]:193 [ newline::start#0 ] 
Uplifting [utoa_append] best 965153 combination zp[2]:157 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ] zp[2]:178 [ utoa_append::sub#0 ] zp[2]:180 [ utoa_append::return#0 ] zp[2]:176 [ utoa_append::buffer#0 ] 
Uplifting [cputc] best 965149 combination reg byte x [ cputc::convertToScreenCode1_return#0 ] zp[1]:165 [ cputc::c ] 
Uplifting [cputs] best 964249 combination zp[2]:141 [ cputs::s#7 cputs::s#8 cputs::s#0 ] reg byte a [ cputs::c#1 ] 
Uplifting [main] best 962119 combination zp[1]:140 [ main::match#2 main::match#6 main::match#1 ] zp[1]:139 [ main::i1#2 main::i1#1 ] zp[2]:128 [ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ] zp[2]:137 [ main::required_tag#6 main::required_tag#1 ] zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ] reg byte y [ main::num_found#2 main::num_found#6 main::num_found#1 ] reg byte x [ main::i#2 main::i#1 ] zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 ] zp[2]:132 [ main::total#10 main::total#1 ] 
Uplifting [utoa] best 961985 combination zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] zp[1]:151 [ utoa::digit#2 utoa::digit#1 ] reg byte a [ utoa::$10 ] reg byte x [ utoa::started#2 utoa::started#4 ] zp[2]:174 [ utoa::digit_value#0 ] reg byte a [ utoa::$11 ] zp[2]:171 [ utoa::buffer#3 ] 
Uplifting [printf_number_buffer] best 961976 combination reg byte a [ printf_number_buffer::buffer_sign#0 ] 
Uplifting [printf_uint] best 961976 combination zp[2]:143 [ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ] 
Uplifting [RADIX] best 961976 combination 
Uplifting [ATARI_ANTIC] best 961976 combination 
Uplifting [ATARI_GTIA_READ] best 961976 combination 
Uplifting [ATARI_GTIA_WRITE] best 961976 combination 
Uplifting [ATARI_POKEY_READ] best 961976 combination 
Uplifting [ATARI_POKEY_WRITE] best 961976 combination 
Uplifting [gotoxy] best 961976 combination 
Uplifting [clrscr] best 961976 combination 
Uplifting [printf_format_number] best 961976 combination 
Uplifting [printf_buffer_number] best 961976 combination 
Uplifting [printf_format_string] best 961976 combination 
Uplifting [] best 961976 combination mem[12] [ printf_buffer ] 
Attempting to uplift remaining variables inzp[1]:165 [ cputc::c ]
Uplifting [cputc] best 961976 combination zp[1]:165 [ cputc::c ] 
Attempting to uplift remaining variables inzp[1]:140 [ main::match#2 main::match#6 main::match#1 ]
Uplifting [main] best 961976 combination zp[1]:140 [ main::match#2 main::match#6 main::match#1 ] 
Attempting to uplift remaining variables inzp[1]:139 [ main::i1#2 main::i1#1 ]
Uplifting [main] best 961976 combination zp[1]:139 [ main::i1#2 main::i1#1 ] 
Attempting to uplift remaining variables inzp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ]
Uplifting [main] best 961976 combination zp[1]:136 [ main::tag_idx#2 main::tag_idx#1 ] 
Attempting to uplift remaining variables inzp[1]:151 [ utoa::digit#2 utoa::digit#1 ]
Uplifting [utoa] best 961976 combination zp[1]:151 [ utoa::digit#2 utoa::digit#1 ] 
Coalescing zero page register [ zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 ] ] with [ zp[2]:143 [ printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:145 [ memset::num#2 ] ] with [ zp[2]:167 [ memset::end#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 ] ] with [ zp[2]:149 [ memset::dst#2 memset::dst#4 memset::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 memset::dst#2 memset::dst#4 memset::dst#1 ] ] with [ zp[2]:199 [ memset::str#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] ] with [ zp[2]:157 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] with [ zp[2]:180 [ utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] ] with [ zp[2]:171 [ utoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 ] ] with [ zp[2]:176 [ utoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:160 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] with [ zp[2]:195 [ memcpy::source#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:162 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] with [ zp[2]:197 [ memcpy::destination#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:174 [ utoa::digit_value#0 ] ] with [ zp[2]:178 [ utoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:182 [ cursorLocation::return#3 ] ] with [ zp[2]:184 [ setcursor::loc#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:182 [ cursorLocation::return#3 setcursor::loc#0 ] ] with [ zp[2]:211 [ cursorLocation::return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:188 [ cursorLocation::return#0 ] ] with [ zp[2]:190 [ putchar::loc#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:201 [ cursorLocation::$3 ] ] with [ zp[2]:205 [ cursorLocation::$5 ] ] - score: 1
Coalescing zero page register [ zp[2]:207 [ cursorLocation::$0 ] ] with [ zp[2]:209 [ cursorLocation::$1 ] ] - score: 1
Coalescing zero page register [ zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 ] ] with [ zp[2]:152 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 memset::dst#2 memset::dst#4 memset::dst#1 memset::str#0 ] ] with [ zp[2]:193 [ newline::start#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:182 [ cursorLocation::return#3 setcursor::loc#0 cursorLocation::return#1 ] ] with [ zp[2]:188 [ cursorLocation::return#0 putchar::loc#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:182 [ cursorLocation::return#3 setcursor::loc#0 cursorLocation::return#1 cursorLocation::return#0 putchar::loc#0 ] ] with [ zp[2]:207 [ cursorLocation::$0 cursorLocation::$1 ] ] - score: 1
Coalescing zero page register [ zp[2]:182 [ cursorLocation::return#3 setcursor::loc#0 cursorLocation::return#1 cursorLocation::return#0 putchar::loc#0 cursorLocation::$0 cursorLocation::$1 ] ] with [ zp[2]:201 [ cursorLocation::$3 cursorLocation::$5 ] ] - score: 1
Coalescing zero page register [ zp[2]:155 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ] with [ zp[2]:141 [ cputs::s#7 cputs::s#8 cputs::s#0 ] ]
Coalescing zero page register [ zp[2]:160 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 memcpy::source#0 ] ] with [ zp[2]:145 [ memset::num#2 memset::end#0 ] ]
Coalescing zero page register [ zp[2]:174 [ utoa::digit_value#0 utoa_append::sub#0 ] ] with [ zp[2]:147 [ memset::str#3 memset::str#7 memset::str#8 memset::dst#2 memset::dst#4 memset::dst#1 memset::str#0 newline::start#0 ] ]
Coalescing zero page register [ zp[2]:182 [ cursorLocation::return#3 setcursor::loc#0 cursorLocation::return#1 cursorLocation::return#0 putchar::loc#0 cursorLocation::$0 cursorLocation::$1 cursorLocation::$3 cursorLocation::$5 ] ] with [ zp[2]:162 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 memcpy::destination#0 ] ]
Coalescing zero page register [ zp[2]:213 [ memcpy::src_end#0 ] ] with [ zp[2]:203 [ cursorLocation::$4 ] ]
Allocated (was zp[1]:136) zp[1]:134 [ main::tag_idx#2 main::tag_idx#1 ]
Allocated (was zp[2]:137) zp[2]:135 [ main::required_tag#6 main::required_tag#1 ]
Allocated (was zp[1]:139) zp[1]:137 [ main::i1#2 main::i1#1 ]
Allocated (was zp[1]:140) zp[1]:138 [ main::match#2 main::match#6 main::match#1 ]
Allocated (was zp[1]:151) zp[1]:139 [ utoa::digit#2 utoa::digit#1 ]
Allocated (was zp[2]:155) zp[2]:140 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 cputs::s#7 cputs::s#8 cputs::s#0 ]
Allocated (was zp[2]:160) zp[2]:142 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 memcpy::source#0 memset::num#2 memset::end#0 ]
Allocated (was zp[1]:165) zp[1]:144 [ cputc::c ]
Allocated (was zp[2]:174) zp[2]:145 [ utoa::digit_value#0 utoa_append::sub#0 memset::str#3 memset::str#7 memset::str#8 memset::dst#2 memset::dst#4 memset::dst#1 memset::str#0 newline::start#0 ]
Allocated (was zp[2]:182) zp[2]:147 [ cursorLocation::return#3 setcursor::loc#0 cursorLocation::return#1 cursorLocation::return#0 putchar::loc#0 cursorLocation::$0 cursorLocation::$1 cursorLocation::$3 cursorLocation::$5 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 memcpy::destination#0 ]
Allocated (was zp[2]:213) zp[2]:149 [ memcpy::src_end#0 cursorLocation::$4 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// https://adventofcode.com/2020/day/3
  // Upstart
  // Atari XL/XE executable XEX file with a single segment
// https://www.atarimax.com/jindroush.atari.org/afmtexe.html
.plugin "dk.camelot64.kickass.xexplugin.AtariXex"
.file [name="2020-04.xex", type="bin", segments="XexFile"]
.segmentdef XexFile [segments="Program", modify="XexFormat", _RunAddr=main]
.segmentdef Program [segments="Code, Data"]
.segmentdef Code [start=$2000]
.segmentdef Data [startAfter="Code"]
  // Global Constants & labels
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  // 2-byte saved memory scan counter
  .label SAVMSC = $58
  // data under cursor
  .label OLDCHR = $5d
  // 2-byte saved cursor memory address
  .label OLDADR = $5e
  // Cursor inhibit flag, 0 turns on, any other number turns off. Cursor doesn't change until it moves next.
  .label CRSINH = $2f0
  // Atari ZP registers
  // 1-byte cursor row
  .label ROWCRS = $54
  // 2-byte cursor column
  .label COLCRS = $55
.segment Code
  // main
main: {
    .label pass = $80
    .label valid = $82
    .label total = $84
    .label i1 = $89
    .label match = $8a
    // Read a tag - and examine whether it is one of the required tags
    .label required_tag = $87
    .label tag_idx = $86
    // [1] call clrscr 
    jsr clrscr
    // [2] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    // [2] phi main::total#10 = 0 [phi:main->main::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z total
    lda #>0
    sta.z total+1
    // [2] phi main::valid#10 = 0 [phi:main->main::@1#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z valid
    lda #>0
    sta.z valid+1
    // [2] phi main::pass#10 = passports [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<passports
    sta.z pass
    lda #>passports
    sta.z pass+1
    jmp __b1
    // [2] phi from main::@12 main::@22 main::@24 main::@25 to main::@1 [phi:main::@12/main::@22/main::@24/main::@25->main::@1]
  __b1_from___b12:
  __b1_from___b22:
  __b1_from___b24:
  __b1_from___b25:
    // [2] phi main::total#10 = main::total#1 [phi:main::@12/main::@22/main::@24/main::@25->main::@1#0] -- register_copy 
    // [2] phi main::valid#10 = main::valid#8 [phi:main::@12/main::@22/main::@24/main::@25->main::@1#1] -- register_copy 
    // [2] phi main::pass#10 = main::pass#3 [phi:main::@12/main::@22/main::@24/main::@25->main::@1#2] -- register_copy 
    jmp __b1
    // [2] phi from main::@32 main::@33 to main::@1 [phi:main::@32/main::@33->main::@1]
  __b1_from___b32:
  __b1_from___b33:
    jmp __b1
    // main::@1
  __b1:
    // [3] if(0!=*main::pass#10) goto main::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (pass),y
    cmp #0
    bne __b2
    // [4] phi from main::@1 to main::@3 [phi:main::@1->main::@3]
  __b3_from___b1:
    jmp __b3
    // main::@3
  __b3:
    // [5] call cputs 
    // [58] phi from main::@3 to cputs [phi:main::@3->cputs]
  cputs_from___b3:
    // [58] phi cputs::s#8 = main::s [phi:main::@3->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    jmp __b28
    // main::@28
  __b28:
    // [6] printf_uint::uvalue#0 = main::valid#10
    // [7] call printf_uint 
    // [66] phi from main::@28 to printf_uint [phi:main::@28->printf_uint]
  printf_uint_from___b28:
    // [66] phi printf_uint::uvalue#2 = printf_uint::uvalue#0 [phi:main::@28->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [8] phi from main::@28 to main::@29 [phi:main::@28->main::@29]
  __b29_from___b28:
    jmp __b29
    // main::@29
  __b29:
    // [9] call cputs 
    // [58] phi from main::@29 to cputs [phi:main::@29->cputs]
  cputs_from___b29:
    // [58] phi cputs::s#8 = main::s1 [phi:main::@29->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    jmp __b30
    // main::@30
  __b30:
    // [10] printf_uint::uvalue#1 = main::total#10 -- vwuz1=vwuz2 
    lda.z total
    sta.z printf_uint.uvalue
    lda.z total+1
    sta.z printf_uint.uvalue+1
    // [11] call printf_uint 
    // [66] phi from main::@30 to printf_uint [phi:main::@30->printf_uint]
  printf_uint_from___b30:
    // [66] phi printf_uint::uvalue#2 = printf_uint::uvalue#1 [phi:main::@30->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [12] phi from main::@30 to main::@31 [phi:main::@30->main::@31]
  __b31_from___b30:
    jmp __b31
    // main::@31
  __b31:
    // [13] call cputs 
    // [58] phi from main::@31 to cputs [phi:main::@31->cputs]
  cputs_from___b31:
    // [58] phi cputs::s#8 = main::s2 [phi:main::@31->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    // [14] phi from main::@27 main::@31 to main::@27 [phi:main::@27/main::@31->main::@27]
  __b27_from___b27:
  __b27_from___b31:
    jmp __b27
    // main::@27
  __b27:
    jmp __b27_from___b27
    // main::@2
  __b2:
    // [15] if(*main::pass#10!=' 'at) goto main::@4 -- _deref_pbuz1_neq_vbuc1_then_la1 
  .encoding "ascii"
    ldy #0
    lda (pass),y
    cmp #' '
    bne __b4
    jmp __b24
    // main::@24
  __b24:
    // [16] main::pass#1 = ++ main::pass#10 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    jmp __b1_from___b24
    // main::@4
  __b4:
    // [17] if(*main::pass#10!=' 'at) goto main::@13 -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (pass),y
    cmp #'\$9b'
    bne __b13_from___b4
    jmp __b25
    // main::@25
  __b25:
    // [18] main::pass#11 = ++ main::pass#10 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    // [19] if(*main::pass#11!=' 'at) goto main::@1 -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (pass),y
    cmp #'\$9b'
    bne __b1_from___b25
    jmp __b26
    // main::@26
  __b26:
    // [20] main::pass#3 = ++ main::pass#11 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    // [21] phi from main::@26 to main::@5 [phi:main::@26->main::@5]
  __b5_from___b26:
    // [21] phi main::num_found#2 = 0 [phi:main::@26->main::@5#0] -- vbuyy=vbuc1 
    ldy #0
    // [21] phi main::i#2 = 0 [phi:main::@26->main::@5#1] -- vbuxx=vbuc1 
    ldx #0
    jmp __b5
    // main::@5
  __b5:
    // [22] if(main::i#2<7) goto main::@6 -- vbuxx_lt_vbuc1_then_la1 
    cpx #7
    bcc __b6
    jmp __b7
    // main::@7
  __b7:
    // [23] if(main::num_found#2==7) goto main::@11 -- vbuyy_eq_vbuc1_then_la1 
    cpy #7
    beq __b11
    // [24] phi from main::@7 to main::@10 [phi:main::@7->main::@10]
  __b10_from___b7:
    jmp __b10
    // main::@10
  __b10:
    // [25] call cputs 
    // [58] phi from main::@10 to cputs [phi:main::@10->cputs]
  cputs_from___b10:
    // [58] phi cputs::s#8 = main::s4 [phi:main::@10->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // [26] phi from main::@10 main::@11 to main::@12 [phi:main::@10/main::@11->main::@12]
  __b12_from___b10:
  __b12_from___b11:
    // [26] phi main::valid#8 = main::valid#10 [phi:main::@10/main::@11->main::@12#0] -- register_copy 
    jmp __b12
    // main::@12
  __b12:
    // [27] main::total#1 = ++ main::total#10 -- vwuz1=_inc_vwuz1 
    inc.z total
    bne !+
    inc.z total+1
  !:
    jmp __b1_from___b12
    // main::@11
  __b11:
    // [28] main::valid#1 = ++ main::valid#10 -- vwuz1=_inc_vwuz1 
    inc.z valid
    bne !+
    inc.z valid+1
  !:
    // [29] call cputs 
    // [58] phi from main::@11 to cputs [phi:main::@11->cputs]
  cputs_from___b11:
    // [58] phi cputs::s#8 = main::s3 [phi:main::@11->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    jmp __b12_from___b11
    // main::@6
  __b6:
    // [30] if(0==main::tags_found[main::i#2]) goto main::@8 -- 0_eq_pbuc1_derefidx_vbuxx_then_la1 
    lda tags_found,x
    cmp #0
    beq __b8_from___b6
    jmp __b9
    // main::@9
  __b9:
    // [31] main::num_found#1 = ++ main::num_found#2 -- vbuyy=_inc_vbuyy 
    iny
    // [32] phi from main::@6 main::@9 to main::@8 [phi:main::@6/main::@9->main::@8]
  __b8_from___b6:
  __b8_from___b9:
    // [32] phi main::num_found#6 = main::num_found#2 [phi:main::@6/main::@9->main::@8#0] -- register_copy 
    jmp __b8
    // main::@8
  __b8:
    // [33] main::tags_found[main::i#2] = 0 -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #0
    sta tags_found,x
    // [34] main::i#1 = ++ main::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [21] phi from main::@8 to main::@5 [phi:main::@8->main::@5]
  __b5_from___b8:
    // [21] phi main::num_found#2 = main::num_found#6 [phi:main::@8->main::@5#0] -- register_copy 
    // [21] phi main::i#2 = main::i#1 [phi:main::@8->main::@5#1] -- register_copy 
    jmp __b5
    // [35] phi from main::@4 to main::@13 [phi:main::@4->main::@13]
  __b13_from___b4:
    // [35] phi main::required_tag#6 = required_tags [phi:main::@4->main::@13#0] -- pbuz1=pbuc1 
    lda #<required_tags
    sta.z required_tag
    lda #>required_tags
    sta.z required_tag+1
    // [35] phi main::tag_idx#2 = 0 [phi:main::@4->main::@13#1] -- vbuz1=vbuc1 
    lda #0
    sta.z tag_idx
    jmp __b13
    // main::@13
  __b13:
    // [36] if(main::tag_idx#2<7) goto main::@14 -- vbuz1_lt_vbuc1_then_la1 
    lda.z tag_idx
    cmp #7
    bcc __b14_from___b13
    jmp __b21
    // main::@21
  __b21:
    // [37] main::pass#4 = main::pass#10 + 3 -- pbuz1=pbuz1_plus_vbuc1 
    lda #3
    clc
    adc.z pass
    sta.z pass
    bcc !+
    inc.z pass+1
  !:
    // [38] phi from main::@21 main::@23 to main::@22 [phi:main::@21/main::@23->main::@22]
  __b22_from___b21:
  __b22_from___b23:
    // [38] phi main::pass#14 = main::pass#4 [phi:main::@21/main::@23->main::@22#0] -- register_copy 
    jmp __b22
  // Skip letters until we hit another whitespace
    // main::@22
  __b22:
    // [39] if(0==*main::pass#14) goto main::@1 -- 0_eq__deref_pbuz1_then_la1 
    ldy #0
    lda (pass),y
    cmp #0
    beq __b1_from___b22
    jmp __b33
    // main::@33
  __b33:
    // [40] if(*main::pass#14==' 'at) goto main::@1 -- _deref_pbuz1_eq_vbuc1_then_la1 
    lda #' '
    ldy #0
    cmp (pass),y
    beq __b1_from___b33
    jmp __b32
    // main::@32
  __b32:
    // [41] if(*main::pass#14!=' 'at) goto main::@23 -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (pass),y
    cmp #'\$9b'
    bne __b23
    jmp __b1_from___b32
    // main::@23
  __b23:
    // [42] main::pass#5 = ++ main::pass#14 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    jmp __b22_from___b23
    // [43] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
  __b14_from___b13:
    // [43] phi main::match#2 = 0 [phi:main::@13->main::@14#0] -- vbuz1=vbuc1 
    lda #0
    sta.z match
    // [43] phi main::i1#2 = 0 [phi:main::@13->main::@14#1] -- vbuz1=vbuc1 
    lda #0
    sta.z i1
    jmp __b14
    // main::@14
  __b14:
    // [44] if(main::i1#2<3) goto main::@15 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i1
    cmp #3
    bcc __b15
    jmp __b16
    // main::@16
  __b16:
    // [45] if(main::match#2!=3) goto main::@20 -- vbuz1_neq_vbuc1_then_la1 
    lda #3
    cmp.z match
    bne __b20
    jmp __b19
    // main::@19
  __b19:
    // [46] main::tags_found[main::tag_idx#2] = 1 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #1
    ldy.z tag_idx
    sta tags_found,y
    jmp __b21
    // main::@20
  __b20:
    // [47] main::required_tag#1 = main::required_tag#6 + 3 -- pbuz1=pbuz1_plus_vbuc1 
    lda #3
    clc
    adc.z required_tag
    sta.z required_tag
    bcc !+
    inc.z required_tag+1
  !:
    // [48] main::tag_idx#1 = ++ main::tag_idx#2 -- vbuz1=_inc_vbuz1 
    inc.z tag_idx
    // [35] phi from main::@20 to main::@13 [phi:main::@20->main::@13]
  __b13_from___b20:
    // [35] phi main::required_tag#6 = main::required_tag#1 [phi:main::@20->main::@13#0] -- register_copy 
    // [35] phi main::tag_idx#2 = main::tag_idx#1 [phi:main::@20->main::@13#1] -- register_copy 
    jmp __b13
    // main::@15
  __b15:
    // [49] if(main::required_tag#6[main::i1#2]!=main::pass#10[main::i1#2]) goto main::@17 -- pbuz1_derefidx_vbuz2_neq_pbuz3_derefidx_vbuz2_then_la1 
    ldy.z i1
    lda (required_tag),y
    tax
    lda (pass),y
    tay
    stx.z $ff
    cpy.z $ff
    bne __b17_from___b15
    jmp __b18
    // main::@18
  __b18:
    // [50] main::match#1 = ++ main::match#2 -- vbuz1=_inc_vbuz1 
    inc.z match
    // [51] phi from main::@15 main::@18 to main::@17 [phi:main::@15/main::@18->main::@17]
  __b17_from___b15:
  __b17_from___b18:
    // [51] phi main::match#6 = main::match#2 [phi:main::@15/main::@18->main::@17#0] -- register_copy 
    jmp __b17
    // main::@17
  __b17:
    // [52] main::i1#1 = ++ main::i1#2 -- vbuz1=_inc_vbuz1 
    inc.z i1
    // [43] phi from main::@17 to main::@14 [phi:main::@17->main::@14]
  __b14_from___b17:
    // [43] phi main::match#2 = main::match#6 [phi:main::@17->main::@14#0] -- register_copy 
    // [43] phi main::i1#2 = main::i1#1 [phi:main::@17->main::@14#1] -- register_copy 
    jmp __b14
  .segment Data
    tags_found: .fill 7, 0
    s: .text @"\$9bValid "
    .byte 0
    s1: .text " Total "
    .byte 0
    s2: .text @"\$9b"
    .byte 0
    s3: .text "+"
    .byte 0
    s4: .text "."
    .byte 0
}
.segment Code
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    // [53] memset::str#7 = (void*)*SAVMSC -- pvoz1=_deref_qvoc1 
    lda SAVMSC
    sta.z memset.str
    lda SAVMSC+1
    sta.z memset.str+1
    // [54] call memset 
  // Fill entire screen with spaces
    // [73] phi from clrscr to memset [phi:clrscr->memset]
  memset_from_clrscr:
    // [73] phi memset::str#3 = memset::str#7 [phi:clrscr->memset#0] -- register_copy 
    // [73] phi memset::num#2 = (word)$28*$18 [phi:clrscr->memset#1] -- vwuz1=vwuc1 
    lda #<$28*$18
    sta.z memset.num
    lda #>$28*$18
    sta.z memset.num+1
    jsr memset
    jmp __b1
    // clrscr::@1
  __b1:
    // [55] *OLDCHR = 0 -- _deref_pbuc1=vbuc2 
    // 0x00 is screencode for space character
    // set the old character to a space so the cursor doesn't reappear at the last position it was at
    lda #0
    sta OLDCHR
    // [56] call gotoxy 
    jsr gotoxy
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [57] return 
    rts
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp($8c) s)
cputs: {
    .label s = $8c
    // [59] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
  __b1_from_cputs:
  __b1_from___b2:
    // [59] phi cputs::s#7 = cputs::s#8 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
    // cputs::@1
  __b1:
    // [60] cputs::c#1 = *cputs::s#7 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [61] cputs::s#0 = ++ cputs::s#7 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [62] if(0!=cputs::c#1) goto cputs::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [63] return 
    rts
    // cputs::@2
  __b2:
    // [64] cputc::c = cputs::c#1 -- vbuz1=vbuaa 
    sta.z cputc.c
    // [65] call cputc 
    jsr cputc
    jmp __b1_from___b2
}
  // printf_uint
// Print an unsigned int using a specific format
// printf_uint(word zp($82) uvalue)
printf_uint: {
    .label uvalue = $82
    jmp __b1
    // printf_uint::@1
  __b1:
    // [67] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [68] utoa::value#1 = printf_uint::uvalue#2
    // [69] call utoa 
  // Format number into buffer
    // [103] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
  utoa_from___b1:
    jsr utoa
    jmp __b2
    // printf_uint::@2
  __b2:
    // [70] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer) -- vbuaa=_deref_pbuc1 
    lda printf_buffer
    // [71] call printf_number_buffer 
  // Print using format
    // [124] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    jsr printf_number_buffer
    jmp __breturn
    // printf_uint::@return
  __breturn:
    // [72] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(byte* zp($91) str, word zp($8e) num)
memset: {
    .label end = $8e
    .label dst = $91
    .label str = $91
    .label num = $8e
    // [74] if(memset::num#2<=0) goto memset::@return -- vwuz1_le_0_then_la1 
    lda.z num
    bne !+
    lda.z num+1
    beq __breturn
  !:
    jmp __b1
    // memset::@1
  __b1:
    // [75] memset::end#0 = (byte*)memset::str#3 + memset::num#2 -- pbuz1=pbuz2_plus_vwuz1 
    lda.z end
    clc
    adc.z str
    sta.z end
    lda.z end+1
    adc.z str+1
    sta.z end+1
    // [76] memset::dst#4 = (byte*)memset::str#3
    // [77] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [77] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [78] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [79] return 
    rts
    // memset::@3
  __b3:
    // [80] *memset::dst#2 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (dst),y
    // [81] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // gotoxy
// Set the cursor to the specified position
gotoxy: {
    .const x = 0
    .const y = 0
    // [82] *COLCRS = gotoxy::x#1 -- _deref_pwuc1=vbuc2 
    lda #0
    sta COLCRS+1
    lda #<x
    sta COLCRS
    // [83] *ROWCRS = gotoxy::y#1 -- _deref_pbuc1=vbuc2 
    lda #y
    sta ROWCRS
    // [84] call setcursor 
    jsr setcursor
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [85] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($90) c)
cputc: {
    .label convertToScreenCode1_v = c
    .label c = $90
    // [86] if(cputc::c==' 'at) goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\r'
    cmp.z c
    beq __b1
    jmp __b3
    // cputc::@3
  __b3:
    // [87] if(cputc::c==' 'at) goto cputc::@2 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\$9b'
    cmp.z c
    beq __b2
    jmp __b8
    // cputc::@8
  __b8:
    // [88] if(cputc::c==$9b) goto cputc::@2 -- vbuz1_eq_vbuc1_then_la1 
    lda #$9b
    cmp.z c
    beq __b2
    jmp convertToScreenCode1
    // cputc::convertToScreenCode1
  convertToScreenCode1:
    // [89] cputc::convertToScreenCode1_return#0 = rawmap[*cputc::convertToScreenCode1_v#0] -- vbuxx=pbuc1_derefidx_(_deref_pbuc2) 
    ldy.z convertToScreenCode1_v
    ldx rawmap,y
    // [90] phi from cputc::convertToScreenCode1 to cputc::@6 [phi:cputc::convertToScreenCode1->cputc::@6]
  __b6_from_convertToScreenCode1:
    jmp __b6
    // cputc::@6
  __b6:
    // [91] call putchar 
    jsr putchar
    jmp __b7
    // cputc::@7
  __b7:
    // [92] *COLCRS = ++ *COLCRS -- _deref_pwuc1=_inc__deref_pwuc1 
    inc COLCRS
    bne !+
    inc COLCRS+1
  !:
    // [93] if(*COLCRS==$28) goto cputc::@5 -- _deref_pwuc1_eq_vbuc2_then_la1 
    lda COLCRS+1
    bne !+
    lda COLCRS
    cmp #$28
    beq __b5
  !:
    // [94] phi from cputc::@7 to cputc::@4 [phi:cputc::@7->cputc::@4]
  __b4_from___b7:
    jmp __b4
    // cputc::@4
  __b4:
    // [95] call setcursor 
    jsr setcursor
    jmp __breturn
    // cputc::@return
  __breturn:
    // [96] return 
    rts
    // cputc::@5
  __b5:
    // [97] *COLCRS = 0 -- _deref_pwuc1=vbuc2 
    lda #0
    sta COLCRS+1
    lda #<0
    sta COLCRS
    // [98] call newline 
    jsr newline
    jmp __breturn
    // cputc::@2
  __b2:
    // [99] *COLCRS = 0 -- _deref_pwuc1=vbuc2 
    // 0x0a LF, or atascii EOL
    lda #0
    sta COLCRS+1
    lda #<0
    sta COLCRS
    // [100] call newline 
    jsr newline
    jmp __breturn
    // cputc::@1
  __b1:
    // [101] *COLCRS = 0 -- _deref_pwuc1=vbuc2 
    // 0x0d, CR = just set the cursor x value to 0
    lda #0
    sta COLCRS+1
    lda #<0
    sta COLCRS
    // [102] call setcursor 
    jsr setcursor
    jmp __breturn
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp($82) value, byte* zp($8c) buffer)
utoa: {
    .label digit_value = $91
    .label buffer = $8c
    .label digit = $8b
    .label value = $82
    // [104] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
  __b1_from_utoa:
    // [104] phi utoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [104] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [104] phi utoa::value#2 = utoa::value#1 [phi:utoa->utoa::@1#2] -- register_copy 
    // [104] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // utoa::@1
  __b1:
    // [105] if(utoa::digit#2<5-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #5-1
    bcc __b2
    jmp __b3
    // utoa::@3
  __b3:
    // [106] utoa::$11 = (byte)utoa::value#2 -- vbuaa=_byte_vwuz1 
    lda.z value
    // [107] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // [108] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [109] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa::@return
  __breturn:
    // [110] return 
    rts
    // utoa::@2
  __b2:
    // [111] utoa::$10 = utoa::digit#2 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [112] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // [113] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    jmp __b7
    // utoa::@7
  __b7:
    // [114] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [115] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
  __b4_from___b7:
    // [115] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [115] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [115] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    jmp __b4
    // utoa::@4
  __b4:
    // [116] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [104] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
  __b1_from___b4:
    // [104] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [104] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [104] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [104] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // [117] utoa_append::buffer#0 = utoa::buffer#11
    // [118] utoa_append::value#0 = utoa::value#2
    // [119] utoa_append::sub#0 = utoa::digit_value#0
    // [120] call utoa_append 
    // [165] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
  utoa_append_from___b5:
    jsr utoa_append
    // [121] utoa_append::return#0 = utoa_append::value#2
    jmp __b6
    // utoa::@6
  __b6:
    // [122] utoa::value#0 = utoa_append::return#0
    // [123] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [115] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
  __b4_from___b6:
    // [115] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [115] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [115] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte register(A) buffer_sign)
printf_number_buffer: {
    .label buffer_digits = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    jmp __b1
    // printf_number_buffer::@1
  __b1:
    // [125] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2_from___b1
    jmp __b3
    // printf_number_buffer::@3
  __b3:
    // [126] cputc::c = printf_number_buffer::buffer_sign#0 -- vbuz1=vbuaa 
    sta.z cputc.c
    // [127] call cputc 
    jsr cputc
    // [128] phi from printf_number_buffer::@1 printf_number_buffer::@3 to printf_number_buffer::@2 [phi:printf_number_buffer::@1/printf_number_buffer::@3->printf_number_buffer::@2]
  __b2_from___b1:
  __b2_from___b3:
    jmp __b2
    // printf_number_buffer::@2
  __b2:
    // [129] call cputs 
    // [58] phi from printf_number_buffer::@2 to cputs [phi:printf_number_buffer::@2->cputs]
  cputs_from___b2:
    // [58] phi cputs::s#8 = printf_number_buffer::buffer_digits#0 [phi:printf_number_buffer::@2->cputs#0] -- pbuz1=pbuc1 
    lda #<buffer_digits
    sta.z cputs.s
    lda #>buffer_digits
    sta.z cputs.s+1
    jsr cputs
    jmp __breturn
    // printf_number_buffer::@return
  __breturn:
    // [130] return 
    rts
}
  // setcursor
// Handles cursor movement, displaying it if required, and inverting character it is over if there is one (and enabled)
setcursor: {
    .label loc = $93
    // [131] *(*OLDADR) = *OLDCHR -- _deref_(_deref_qbuc1)=_deref_pbuc2 
    // save the current oldchr into oldadr
    lda OLDCHR
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    sta ($fe),y
    // [132] call cursorLocation 
    jsr cursorLocation
    // [133] cursorLocation::return#3 = cursorLocation::return#1
    jmp __b3
    // setcursor::@3
  __b3:
    // [134] setcursor::loc#0 = cursorLocation::return#3
    // [135] setcursor::c#0 = *setcursor::loc#0 -- vbuxx=_deref_pbuz1 
    ldy #0
    lda (loc),y
    tax
    // [136] *OLDCHR = setcursor::c#0 -- _deref_pbuc1=vbuxx 
    stx OLDCHR
    // [137] *OLDADR = setcursor::loc#0 -- _deref_qbuc1=pbuz1 
    lda.z loc
    sta OLDADR
    lda.z loc+1
    sta OLDADR+1
    jmp __b2
    // setcursor::@2
  __b2:
    // [138] *CRSINH = 0 -- _deref_pbuc1=vbuc2 
    // cursor is on, so invert the inverse bit and turn cursor on
    lda #0
    sta CRSINH
    // [139] setcursor::c#1 = setcursor::c#0 ^ $80 -- vbuaa=vbuxx_bxor_vbuc1 
    txa
    eor #$80
    jmp __b1
    // setcursor::@1
  __b1:
    // [140] *(*OLDADR) = setcursor::c#1 -- _deref_(_deref_qbuc1)=vbuaa 
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    sta ($fe),y
    jmp __breturn
    // setcursor::@return
  __breturn:
    // [141] return 
    rts
}
  // putchar
// Puts a character to the screen a the current location. Uses internal screencode. Deals with storing the old cursor value
putchar: {
    .label loc = $93
    // [142] *(*OLDADR) = *OLDCHR -- _deref_(_deref_qbuc1)=_deref_pbuc2 
    lda OLDCHR
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    sta ($fe),y
    // [143] call cursorLocation 
    jsr cursorLocation
    // [144] cursorLocation::return#0 = cursorLocation::return#1
    jmp __b1
    // putchar::@1
  __b1:
    // [145] putchar::loc#0 = cursorLocation::return#0
    // [146] putchar::newChar#0 = cputc::convertToScreenCode1_return#0 -- vbuaa=vbuxx 
    txa
    // [147] *putchar::loc#0 = putchar::newChar#0 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (loc),y
    // [148] *OLDCHR = putchar::newChar#0 -- _deref_pbuc1=vbuaa 
    sta OLDCHR
    // [149] call setcursor 
    jsr setcursor
    jmp __breturn
    // putchar::@return
  __breturn:
    // [150] return 
    rts
}
  // newline
newline: {
    .label start = $91
    // [151] *ROWCRS = ++ *ROWCRS -- _deref_pbuc1=_inc__deref_pbuc1 
    inc ROWCRS
    // [152] if(*ROWCRS!=$18) goto newline::@1 -- _deref_pbuc1_neq_vbuc2_then_la1 
    lda #$18
    cmp ROWCRS
    bne __b1_from_newline
    jmp __b3
    // newline::@3
  __b3:
    // [153] *(*OLDADR) = *(*OLDADR) ^ $80 -- _deref_(_deref_qbuc1)=_deref_(_deref_qbuc1)_bxor_vbuc2 
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    lda ($fe),y
    eor #$80
    sta ($fe),y
    jmp __b2
    // newline::@2
  __b2:
    // [154] newline::start#0 = *SAVMSC -- pbuz1=_deref_qbuc1 
    // move screen up 1 line
    lda SAVMSC
    sta.z start
    lda SAVMSC+1
    sta.z start+1
    // [155] memcpy::source#0 = newline::start#0 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z start
    sta.z memcpy.source
    lda #0
    adc.z start+1
    sta.z memcpy.source+1
    // [156] memcpy::destination#0 = (void*)newline::start#0 -- pvoz1=pvoz2 
    lda.z start
    sta.z memcpy.destination
    lda.z start+1
    sta.z memcpy.destination+1
    // [157] call memcpy 
    jsr memcpy
    jmp __b4
    // newline::@4
  __b4:
    // [158] memset::str#0 = newline::start#0 + (word)$28*$17 -- pbuz1=pbuz1_plus_vwuc1 
    clc
    lda.z memset.str
    adc #<$28*$17
    sta.z memset.str
    lda.z memset.str+1
    adc #>$28*$17
    sta.z memset.str+1
    // [159] memset::str#8 = (void*)memset::str#0
    // [160] call memset 
    // [73] phi from newline::@4 to memset [phi:newline::@4->memset]
  memset_from___b4:
    // [73] phi memset::str#3 = memset::str#8 [phi:newline::@4->memset#0] -- register_copy 
    // [73] phi memset::num#2 = $28 [phi:newline::@4->memset#1] -- vwuz1=vbuc1 
    lda #<$28
    sta.z memset.num
    lda #>$28
    sta.z memset.num+1
    jsr memset
    jmp __b5
    // newline::@5
  __b5:
    // [161] *ROWCRS = $18-1 -- _deref_pbuc1=vbuc2 
    lda #$18-1
    sta ROWCRS
    // [162] phi from newline newline::@5 to newline::@1 [phi:newline/newline::@5->newline::@1]
  __b1_from_newline:
  __b1_from___b5:
    jmp __b1
    // newline::@1
  __b1:
    // [163] call setcursor 
    jsr setcursor
    jmp __breturn
    // newline::@return
  __breturn:
    // [164] return 
    rts
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp($8c) buffer, word zp($82) value, word zp($91) sub)
utoa_append: {
    .label buffer = $8c
    .label value = $82
    .label sub = $91
    .label return = $82
    // [166] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
  __b1_from_utoa_append:
    // [166] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [166] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    jmp __b1
    // utoa_append::@1
  __b1:
    // [167] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    jmp __b3
    // utoa_append::@3
  __b3:
    // [168] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa_append::@return
  __breturn:
    // [169] return 
    rts
    // utoa_append::@2
  __b2:
    // [170] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // [171] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [166] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
  __b1_from___b2:
    // [166] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [166] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // cursorLocation
// Return a pointer to the location of the cursor
cursorLocation: {
    .label __0 = $93
    .label __1 = $93
    .label __3 = $93
    .label return = $93
    .label __4 = $95
    .label __5 = $93
    // [172] cursorLocation::$3 = (word)*ROWCRS -- vwuz1=_word__deref_pbuc1 
    lda ROWCRS
    sta.z __3
    lda #0
    sta.z __3+1
    // [173] cursorLocation::$4 = cursorLocation::$3 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __3
    asl
    sta.z __4
    lda.z __3+1
    rol
    sta.z __4+1
    asl.z __4
    rol.z __4+1
    // [174] cursorLocation::$5 = cursorLocation::$4 + cursorLocation::$3 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __5
    clc
    adc.z __4
    sta.z __5
    lda.z __5+1
    adc.z __4+1
    sta.z __5+1
    // [175] cursorLocation::$0 = cursorLocation::$5 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z __0
    rol.z __0+1
    asl.z __0
    rol.z __0+1
    asl.z __0
    rol.z __0+1
    // [176] cursorLocation::$1 = *SAVMSC + cursorLocation::$0 -- pbuz1=_deref_qbuc1_plus_vwuz1 
    clc
    lda.z __1
    adc SAVMSC
    sta.z __1
    lda.z __1+1
    adc SAVMSC+1
    sta.z __1+1
    // [177] cursorLocation::return#1 = cursorLocation::$1 + *COLCRS -- pbuz1=pbuz1_plus__deref_pwuc1 
    clc
    lda COLCRS
    adc.z return
    sta.z return
    lda COLCRS+1
    adc.z return+1
    sta.z return+1
    jmp __breturn
    // cursorLocation::@return
  __breturn:
    // [178] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($93) destination, byte* zp($8e) source)
memcpy: {
    .const num = $28*$17
    .label src_end = $95
    .label dst = $93
    .label src = $8e
    .label destination = $93
    .label source = $8e
    // [179] memcpy::src_end#0 = (byte*)(void*)memcpy::source#0 + memcpy::num#0 -- pbuz1=pbuz2_plus_vwuc1 
    clc
    lda.z source
    adc #<num
    sta.z src_end
    lda.z source+1
    adc #>num
    sta.z src_end+1
    // [180] memcpy::src#4 = (byte*)(void*)memcpy::source#0
    // [181] memcpy::dst#4 = (byte*)memcpy::destination#0
    // [182] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [182] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [182] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [183] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [184] return 
    rts
    // memcpy::@2
  __b2:
    // [185] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [186] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [187] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  // create a static table to map char value to screen value
  // use KickAsm functions to create a table of code -> screen code values, using cc65 algorithm
rawmap:
.var ht = Hashtable().put(0,64, 1,0, 2,32, 3,96) // the table for converting bit 6,7 into ora value
	.for(var i=0; i<256; i++) {
		.var idx = (i & $60) / 32
		.var mask = i & $9f
		.byte mask | ht.get(idx)
	}

  // The required tags
  required_tags: .text "byriyreyrhgthcleclpid"
  .byte 0
  passports: .text @"ecl:grn\$9bcid:315 iyr:2012 hgt:192cm eyr:2023 pid:873355140 byr:1925 hcl:#cb2c03\$9b\$9bbyr:2027 hcl:ec0cfd ecl:blu cid:120\$9beyr:1937 pid:106018766 iyr:2010 hgt:154cm\$9b\$9bbyr:1965 eyr:2028 hgt:157cm\$9bcid:236 iyr:2018 ecl:brn\$9bhcl:#cfa07d pid:584111467\$9b\$9beyr:2029 ecl:hzl\$9biyr:1972 byr:1966\$9bpid:2898897192\$9bhgt:59cm hcl:z\$9b\$9bpid:231652013 hcl:#602927 hgt:166\$9becl:grn eyr:2025\$9bbyr:2008 iyr:1986\$9b\$9bbyr:1928 hgt:167cm\$9bhcl:#18171d iyr:2012\$9becl:oth pid:237657808 eyr:1944\$9b\$9bhgt:73in ecl:grn byr:1931 pid:358388825 iyr:2020\$9bhcl:#602927 eyr:2020\$9b\$9bhcl:#efcc98 eyr:2024 ecl:hzl\$9bbyr:2030 hgt:192cm\$9biyr:2013 pid:7479289410\$9b\$9bpid:053467220 iyr:2012 hgt:169cm\$9bcid:149 hcl:#866857\$9beyr:2030\$9bbyr:1995 ecl:oth\$9b\$9bhgt:162cm hcl:#efcc98 ecl:grn byr:1985 pid:419840766\$9beyr:2022\$9biyr:2020\$9b\$9bpid:22086957 hcl:c69235 ecl:#c458c5 eyr:1986 byr:2014 hgt:72cm iyr:1934\$9b\$9bhcl:#866857\$9becl:brn eyr:2024\$9biyr:2017\$9bpid:505225484 cid:144\$9bbyr:1980\$9bhgt:170cm\$9b\$9bhcl:#866857 ecl:gry\$9bbyr:1972 iyr:2019 eyr:2023\$9bcid:234 pid:721290041 hgt:191cm\$9b\$9bpid:346301363\$9beyr:2020\$9bhcl:#733820 iyr:2019 hgt:177cm\$9bbyr:1998\$9b\$9bhgt:157cm byr:1963\$9bpid:898055805\$9bhcl:#fffffd ecl:blu iyr:2017 cid:87\$9beyr:2030\$9b\$9bpid:605900764 iyr:2011\$9bhgt:73in ecl:hzl eyr:2024\$9bhcl:#888785\$9bcid:281\$9b\$9biyr:2010 eyr:2026 hcl:#4f7e76 pid:883386029 byr:1946 ecl:brn\$9b\$9bhcl:z\$9biyr:2020 pid:9121928466 byr:2014 ecl:zzz eyr:2025\$9bhgt:172in\$9b\$9bhgt:151cm cid:163 pid:670884417 iyr:2012\$9becl:oth hcl:#ceb3a1\$9beyr:2028\$9b\$9bhcl:z cid:92 hgt:69cm\$9bbyr:2008 pid:492284612\$9beyr:2020 iyr:2023\$9becl:hzl\$9b\$9bbyr:1933\$9bhcl:#7d3b0c eyr:2020 hgt:170cm\$9bpid:949064511 iyr:2010\$9becl:oth\$9b\$9beyr:2025 byr:1989 ecl:oth cid:100 hgt:182cm\$9bpid:629190040 iyr:2017 hcl:#b6652a\$9b\$9becl:hzl cid:76 hcl:#e71392 eyr:2021 iyr:2013 byr:1995\$9bpid:762177473\$9bhgt:179cm\$9b\$9bpid:198500564 eyr:2029 hcl:#733820 cid:51 iyr:2012\$9bhgt:70in byr:1938 ecl:oth\$9b\$9bhgt:190cm ecl:brn byr:1952 iyr:2015 hcl:#623a2f\$9beyr:2023\$9b\$9bhgt:169cm hcl:#602927 byr:2001 pid:823979592 iyr:2016 eyr:2029\$9b\$9biyr:2010 ecl:gry\$9beyr:2022 hgt:156cm byr:1953 pid:434063393\$9bhcl:#733820\$9b\$9bpid:091724580 hcl:a7069e eyr:1984 ecl:#95d01e byr:2012 iyr:2005\$9b\$9beyr:2022 byr:1972 hcl:#866857 ecl:hzl pid:227453248\$9bhgt:153cm cid:324 iyr:2018\$9b\$9bcid:195 pid:049871343\$9beyr:2024 hgt:169cm\$9bbyr:1952 iyr:2010 ecl:grn\$9b\$9beyr:2035 pid:189cm\$9bhgt:77 iyr:1973 ecl:#dc83d5\$9bhcl:z byr:2004\$9b\$9bbyr:2027\$9bpid:89338932 hcl:1de39e ecl:grn hgt:159in eyr:2034 iyr:1937\$9b\$9bpid:076534920\$9bhgt:152cm\$9bbyr:1969\$9becl:blu\$9bhcl:#866857 iyr:2011 eyr:2024\$9b\$9biyr:2019 eyr:2028\$9becl:blu hgt:169cm\$9bhcl:#888785 pid:332202163 byr:1923\$9b\$9bhgt:65in byr:1964 iyr:2019\$9bpid:287612987 ecl:hzl cid:213 eyr:2023 hcl:#ceb3a1\$9b\$9bhcl:#623a2f pid:182484027\$9biyr:2016 ecl:brn byr:1943\$9bhgt:71in eyr:2021 cid:344\$9b\$9bhcl:#cdee64 iyr:2011 ecl:brn eyr:2026 hgt:176cm\$9bbyr:1985 pid:978641227\$9b\$9beyr:2029 ecl:brn hgt:173cm byr:1920 cid:211\$9bhcl:#866857\$9biyr:2016 pid:289769625\$9b\$9bhcl:#7d3b0c pid:770938833 iyr:2010 byr:1941 ecl:oth eyr:2029 hgt:161cm\$9b\$9bhgt:172cm iyr:2015 ecl:gry byr:1948\$9beyr:2029\$9bpid:466359109 hcl:#341e13\$9b\$9bcid:74 pid:405199325 ecl:blu\$9bhcl:#6b5442\$9beyr:1980 byr:2024 hgt:174cm iyr:2011\$9b\$9bhgt:183cm pid:075760048 cid:78 byr:1960 ecl:hzl eyr:2030 hcl:#6b5442 iyr:2014\$9b\$9bcid:264 hcl:#7d3b0c\$9becl:blu iyr:2011 eyr:2020 hgt:182cm\$9bbyr:1929\$9b\$9bpid:435338286 byr:1931\$9bhcl:z ecl:amb iyr:2013 hgt:73in\$9bcid:165 eyr:2027\$9b\$9bpid:511898552 eyr:2025 hgt:184cm hcl:#602927\$9biyr:2018 byr:1989 ecl:hzl\$9b\$9biyr:2016\$9bhgt:168in\$9bhcl:#623a2f\$9beyr:2025 pid:310738569 ecl:#0c3039\$9bbyr:2027\$9b\$9bpid:158cm byr:1946 ecl:grt\$9biyr:1920 cid:189\$9bhcl:389bce hgt:165cm\$9b\$9bpid:973732906 hcl:#cfa07d iyr:2010 eyr:2020 hgt:180cm\$9bbyr:1930\$9becl:brn\$9b\$9bpid:930994364 byr:1967 hgt:151cm\$9biyr:2011 eyr:2022\$9b\$9beyr:1968 hgt:75cm cid:241\$9biyr:2011 pid:5493866745\$9becl:grt\$9bbyr:1976 hcl:#a97842\$9b\$9beyr:2026 ecl:oth\$9biyr:2016 hcl:#c0946f\$9bbyr:1929\$9bhgt:175cm\$9bpid:9421898537\$9b\$9beyr:2028 iyr:2016 byr:1962\$9becl:grn hgt:186cm hcl:#cfa07d pid:432962396\$9b\$9biyr:2010 byr:1934 eyr:2023 hgt:180cm hcl:#cfa07d ecl:gry\$9b\$9bcid:168\$9bbyr:1978\$9beyr:2027 hgt:189cm pid:802710287\$9bhcl:#2f980b iyr:2014\$9becl:grn\$9b\$9beyr:1970\$9bpid:576329104\$9becl:xry iyr:1954 hcl:#341e13 byr:2026\$9bhgt:74in\$9b\$9beyr:2027 hgt:153cm\$9becl:oth\$9bhcl:#866857\$9bpid:290407832 byr:1956 iyr:2017\$9b\$9biyr:2011\$9bcid:128\$9becl:amb hcl:#7d3b0c hgt:68in pid:743606119 eyr:2020\$9b\$9becl:oth hcl:#cfa07d\$9bbyr:2016 pid:#de98ae iyr:1984 cid:194\$9bhgt:170cm\$9beyr:2034\$9b\$9bpid:526098672 hgt:168cm\$9bhcl:#7d3b0c cid:167 byr:1923 ecl:blu iyr:2016\$9beyr:2030\$9b\$9bpid:495569197 hcl:#866857 hgt:193cm\$9biyr:2013 eyr:2021 byr:1921 ecl:amb\$9b\$9becl:amb\$9bhcl:#a97842 pid:862249915 iyr:2012 byr:1964\$9bcid:325\$9beyr:2021\$9b\$9biyr:1958\$9bbyr:2003\$9bhgt:160 hcl:#18171d\$9becl:hzl eyr:2020\$9b\$9biyr:2019 byr:1997 ecl:brn\$9bpid:342735713 hcl:#efcc98\$9bhgt:181cm cid:307\$9beyr:2027\$9b\$9bpid:817121616 eyr:2020\$9biyr:2012\$9bhgt:185cm\$9bhcl:#18171d byr:1969 ecl:hzl\$9b\$9bpid:381399203\$9becl:oth byr:1930\$9biyr:2014 hcl:#6b5442 hgt:71in cid:156 eyr:2025\$9b\$9bbyr:2002 hcl:#18171d iyr:2017\$9bpid:398245854 hgt:64in ecl:gry eyr:2025 cid:127\$9b\$9beyr:2028 hcl:#341e13\$9becl:amb iyr:2012\$9bpid:079796480 hgt:69cm\$9bbyr:1995\$9b\$9bcid:315 iyr:2028\$9bpid:775929239\$9bhgt:162cm ecl:dne byr:1940 eyr:1952 hcl:#c0946f\$9b\$9biyr:2015\$9bhgt:154cm byr:1997\$9becl:grn\$9bcid:125 eyr:2024 pid:834780229\$9bhcl:#18171d\$9b\$9becl:hzl hcl:#a97842 pid:553710574 eyr:2028\$9bhgt:183cm cid:196\$9biyr:2014\$9b\$9bpid:377912488 hgt:159cm ecl:amb eyr:2024 byr:1974\$9biyr:2014\$9bhcl:#ceb3a1\$9b\$9beyr:2024\$9bbyr:1947 hgt:63in ecl:brn\$9bcid:69\$9bpid:185228911 hcl:#b6652a iyr:2016\$9b\$9beyr:2024\$9bhgt:168cm hcl:#602927\$9biyr:2013\$9bbyr:1993\$9bpid:681091728 ecl:gry cid:203\$9b\$9bpid:037922164 iyr:2020\$9bbyr:1990 hgt:156cm eyr:2023 hcl:#866857\$9bcid:97 ecl:grn\$9b\$9bhgt:170cm pid:980455250\$9biyr:2011 ecl:hzl byr:1957\$9beyr:2030 hcl:#cfa07d\$9b\$9bhgt:158cm\$9bhcl:#602927\$9bbyr:2002 ecl:hzl iyr:2013\$9bcid:99\$9beyr:2020 pid:48646993\$9b\$9bbyr:1955 pid:814033843 eyr:2030 hcl:#a97842\$9bhgt:191cm iyr:2019\$9b\$9bpid:111196491 hgt:191cm iyr:2012 ecl:blu hcl:#a97842\$9beyr:2026 cid:131 byr:1979\$9b\$9bhcl:#fffffd hgt:68in\$9bcid:121 ecl:oth eyr:2024 pid:343836937\$9bbyr:1955\$9biyr:2020\$9b\$9beyr:2025 byr:1954\$9bpid:737517118\$9bcid:343 hcl:#b6652a\$9biyr:2017 ecl:hzl\$9bhgt:175cm\$9b\$9becl:brn\$9biyr:2011 hgt:171cm cid:102 pid:066348279 byr:1981\$9b\$9becl:oth iyr:2018 byr:1975\$9beyr:2029\$9bhgt:185cm cid:226\$9bpid:978243407 hcl:#341e13\$9b\$9biyr:2015 pid:918017915 hcl:#3e52b7\$9bbyr:1999 ecl:brn cid:314\$9beyr:2025 hgt:192cm\$9b\$9bhcl:#19d1fa byr:1984 ecl:dne hgt:76in\$9biyr:2015 cid:118 pid:417075672\$9beyr:2020\$9b\$9biyr:2019\$9bcid:120 hgt:186cm\$9bhcl:#733820 eyr:2024 pid:423238982 ecl:brn byr:1968\$9b\$9bhgt:70cm cid:173 pid:767014975\$9bhcl:#866857 eyr:2039 ecl:brn byr:1985\$9b\$9bpid:340424924\$9beyr:2027 hcl:#7d3b0c\$9bhgt:168cm ecl:hzl iyr:2016\$9bbyr:1994\$9b\$9becl:hzl byr:1933 pid:580425691\$9biyr:2010 hcl:#c0946f eyr:2024\$9bhgt:64in\$9b\$9bhcl:#9fe6b0 pid:913184461 ecl:grn eyr:2030\$9bcid:262 iyr:2014\$9b\$9becl:amb pid:640007768 eyr:2030 byr:2017 iyr:1988 hcl:z\$9b\$9bbyr:1977 cid:54\$9beyr:1939 pid:882762394 iyr:2030 hcl:#ceb3a1 ecl:blu\$9b\$9biyr:2011 hcl:#7d3b0c byr:1928\$9bpid:340969354 cid:199 hgt:168cm eyr:2029 ecl:hzl\$9b\$9bpid:729464282\$9biyr:2012 hcl:baae60\$9beyr:2026 ecl:hzl hgt:166cm byr:2019\$9b\$9bpid:930997801 iyr:2019 eyr:2030\$9bhcl:#866857 ecl:oth byr:1960 cid:235 hgt:73in\$9b\$9becl:brn\$9bbyr:1988 hgt:179cm iyr:2017\$9bpid:864768439 cid:305 hcl:#c0946f\$9beyr:2029\$9b\$9bhcl:#7d3b0c ecl:grn\$9bhgt:182cm eyr:2021 pid:719891314\$9bbyr:1920 iyr:2017\$9b\$9bhgt:62cm\$9bcid:71 ecl:brn hcl:#fffffd iyr:2025 eyr:1997\$9bpid:175cm byr:2022\$9b\$9bhcl:#cfa07d cid:239 eyr:2025 ecl:hzl hgt:189in byr:1980 iyr:2020\$9bpid:703047050\$9b\$9bbyr:1951\$9beyr:2030\$9becl:hzl\$9bpid:130992467 hgt:157cm hcl:#341e13\$9b\$9bhgt:175cm\$9bhcl:#623a2f\$9bcid:68 eyr:2025\$9bbyr:2001 ecl:oth pid:253618704 iyr:2016\$9b\$9bhcl:#fffffd pid:379344553 ecl:grn\$9beyr:2026\$9bhgt:72in byr:1974 iyr:2013\$9b\$9becl:#b4e952 byr:1970 hcl:z\$9beyr:2039 pid:6056894636 iyr:2021 hgt:165cm\$9bcid:328\$9b\$9bhcl:#602927 iyr:2014 pid:890429537 byr:1957 hgt:68in eyr:2020 ecl:hzl\$9b\$9bcid:265 byr:1961 hcl:#ceb3a1 eyr:2022 iyr:2016 hgt:184cm pid:921615309\$9b\$9bbyr:1951 eyr:2024\$9bhcl:#341e13\$9becl:amb pid:414644982\$9biyr:2010 hgt:159cm\$9b\$9biyr:2015 cid:319\$9beyr:2029 ecl:brn pid:380237898\$9bhcl:#efcc98 hgt:157cm byr:1972\$9b\$9bpid:237156579 ecl:#312a91\$9bhgt:167cm iyr:2011 hcl:#c0946f eyr:2021 byr:1953\$9b\$9becl:hzl iyr:2015 pid:10160221 eyr:2025 hgt:175cm hcl:z byr:1939\$9b\$9bhgt:59in hcl:#18171d byr:1962 ecl:hzl\$9biyr:2019 eyr:2025\$9bcid:337 pid:491938615\$9b\$9becl:utc hgt:82 pid:51674655 byr:2020\$9beyr:1954 iyr:2029 hcl:z\$9b\$9bpid:119530189\$9bcid:103\$9biyr:2010 byr:1979\$9bhgt:168cm hcl:#a97842 ecl:brn eyr:2029\$9b\$9bhgt:177cm ecl:brn\$9bbyr:1990\$9bpid:015089628 eyr:2028 hcl:#733820 iyr:2020\$9b\$9becl:blu iyr:2020 hgt:189cm\$9bhcl:#efcc98 byr:1982 pid:346500376 eyr:2021 cid:160\$9b\$9becl:brn hgt:173cm iyr:2011 cid:259 hcl:#6b5442 eyr:2026\$9bbyr:1995\$9bpid:654875035\$9b\$9becl:grn eyr:2025 pid:147155222 byr:1942\$9bcid:341 hcl:#602927\$9bhgt:165cm\$9biyr:2016\$9b\$9bpid:543171646\$9bhgt:153cm\$9biyr:2019 hcl:#fffffd byr:1985 cid:266\$9beyr:2027\$9becl:hzl\$9b\$9becl:blu\$9beyr:2022\$9bpid:667939101 byr:1974\$9bcid:259 hcl:#888785\$9b\$9beyr:2030 byr:2016 iyr:2022\$9bpid:86902982\$9becl:zzz hgt:72 hcl:ceb867\$9b\$9bhcl:#fffffd\$9becl:grn pid:046978329\$9bbyr:1924\$9beyr:2025 hgt:158cm iyr:2011\$9b\$9bhgt:150cm eyr:2028 byr:1985 ecl:gry hcl:#866857 pid:340615189\$9biyr:2017\$9bcid:50\$9b\$9bcid:171 hcl:#18171d pid:009562218 byr:1981 hgt:175cm eyr:2024 ecl:oth iyr:2017\$9b\$9biyr:2019\$9beyr:2022\$9becl:brn hcl:#cfa07d pid:050270380 cid:159\$9bhgt:151cm\$9bbyr:1951\$9b\$9bhcl:#7d3b0c hgt:176cm iyr:2015 byr:1923 pid:348188421 ecl:blu eyr:2029\$9b\$9bbyr:1997 hgt:162cm eyr:2023 pid:445685977\$9biyr:2012 ecl:amb hcl:#efcc98\$9b\$9biyr:2017 ecl:oth eyr:2028 pid:791977055 hgt:170cm byr:1991\$9bhcl:#623a2f\$9b\$9bbyr:1998 hcl:#fffffd\$9beyr:2020\$9becl:gry pid:039483695 hgt:163cm iyr:2020\$9bcid:165\$9b\$9becl:hzl hgt:74in iyr:2016 pid:026214321\$9bcid:152 hcl:#a1f179\$9beyr:2036 byr:2001\$9b\$9bpid:257900949 cid:80 byr:1956 iyr:2012 hgt:165cm eyr:2030\$9b\$9bpid:918371363\$9becl:xry\$9biyr:2012\$9bbyr:2012 hgt:65cm\$9beyr:2029\$9b\$9bpid:041789006 iyr:2018 byr:1945 eyr:2024 ecl:blu\$9bhcl:#5ab31e hgt:171cm\$9b\$9becl:gry\$9bbyr:1956 cid:318 iyr:2020 hcl:#623a2f\$9beyr:2030 pid:020576506 hgt:184cm\$9b\$9bhgt:173cm iyr:2025\$9beyr:2023\$9becl:amb pid:958983168 hcl:#866857 byr:1935\$9b\$9bbyr:1974\$9beyr:2040 pid:57104308 iyr:1980 hcl:z\$9bhgt:192in cid:295 ecl:amb\$9b\$9bpid:180cm hcl:1109f7 eyr:2039 byr:2020\$9becl:dne hgt:189in iyr:1921\$9b\$9biyr:2013 byr:1961\$9bhcl:#866857\$9beyr:2025 hgt:158cm ecl:gry\$9b\$9becl:brn iyr:2013 eyr:2021 pid:978650418 byr:1980\$9bhcl:#ceb3a1 cid:110\$9bhgt:166cm\$9b\$9bpid:864880558 ecl:hzl hcl:#c0946f byr:1955 eyr:2027 hgt:169cm iyr:2011\$9b\$9beyr:2023 hgt:191cm hcl:#866857\$9bpid:454509887\$9becl:grn byr:1938 iyr:2015\$9b\$9bpid:793008846 eyr:2025 ecl:grn hcl:#341e13\$9bhgt:187cm\$9bbyr:1973 cid:224\$9biyr:2013\$9b\$9bhcl:#866857 eyr:2022 pid:802335395 hgt:171cm ecl:amb\$9biyr:2015 byr:1991\$9b\$9bhcl:#888785 pid:768625886\$9bhgt:180cm\$9beyr:2026 ecl:oth cid:178 byr:1958\$9b\$9bpid:921387245 cid:82 hgt:190cm hcl:#c0946f ecl:grn\$9biyr:2015 eyr:2023\$9b\$9bpid:0704550258 hcl:1ba8f6 iyr:2010 byr:1978 cid:130\$9beyr:2030 ecl:dne hgt:66cm\$9b\$9bpid:626293279 hcl:#7d3b0c hgt:185cm ecl:oth\$9beyr:2020 byr:1937 iyr:2012\$9b\$9bhgt:175\$9beyr:1933 ecl:gry\$9bhcl:#7d3b0c byr:2003 pid:#5d8fcc\$9biyr:2012\$9b\$9beyr:2027\$9bbyr:1927 cid:154\$9becl:gry pid:683668809 hgt:164cm\$9bhcl:#a97842 iyr:2011\$9b\$9bbyr:1940 iyr:2014 hgt:172cm eyr:2024 pid:033678324 hcl:#10fded\$9bcid:292 ecl:oth\$9b\$9biyr:1970 ecl:#201515 pid:#4cd485 eyr:2034 hgt:162\$9bbyr:2005 cid:67\$9bhcl:#c0946f\$9b\$9bcid:306\$9bbyr:1948\$9bhcl:#efcc98\$9beyr:2024 hgt:171cm pid:440657854 iyr:2015 ecl:brn\$9b\$9bhgt:172cm ecl:brn byr:1958 pid:054926969 hcl:#4b8065 iyr:2019\$9b\$9bpid:45977569 ecl:amb byr:2002 hgt:71cm hcl:z iyr:1983\$9b\$9bpid:811407848 hcl:#866857 cid:112 hgt:180cm byr:1986\$9becl:brn eyr:2026\$9b\$9becl:amb\$9bbyr:1992\$9bcid:288 pid:417117245 hcl:#623a2f\$9biyr:2011 hgt:181cm\$9beyr:2021\$9b\$9bbyr:1974 hgt:192cm cid:172\$9beyr:2022\$9becl:blu\$9bhcl:#cfa07d iyr:2014\$9b\$9beyr:2024 ecl:gry\$9bpid:874569675 byr:1960 iyr:2017 hgt:186cm\$9bhcl:#6b5442\$9b\$9bbyr:1988 eyr:2024 iyr:2020 ecl:oth hcl:#866857 pid:227304269 hgt:170cm\$9b\$9becl:grn iyr:2019 byr:2002 cid:150 hcl:#efcc98\$9bpid:600740993\$9bhgt:167cm eyr:2027\$9b\$9bpid:553824537 iyr:2019 ecl:blu eyr:2025 hcl:#e21269 hgt:193cm\$9bbyr:1923\$9b\$9bbyr:2030 iyr:2019 ecl:#cb0911\$9bhcl:#cfa07d hgt:74in eyr:2012\$9bpid:7647207386\$9b\$9bcid:289 hgt:128 pid:178cm iyr:2025 ecl:#4ad977 byr:2020 eyr:2036 hcl:#efcc98\$9b\$9bcid:119 hgt:150in\$9bhcl:z\$9biyr:2012\$9becl:brn eyr:1975\$9bbyr:2007 pid:#0dcd32\$9b\$9bhcl:8a1ce7 pid:0434291854\$9beyr:2034 iyr:2005\$9bhgt:62cm byr:2029 ecl:utc\$9b\$9becl:gry hcl:#ceb3a1 byr:1976 eyr:2024 iyr:2010 hgt:188cm\$9bpid:636312902\$9b\$9bhcl:#888785 byr:2027 hgt:178in iyr:2017 pid:973095872 eyr:1952\$9b\$9bhgt:179cm iyr:2015 hcl:#ceb3a1\$9bbyr:1944 pid:182079308 cid:317\$9beyr:2025 ecl:hzl\$9b\$9bhcl:#6b5442 ecl:grn eyr:2023 hgt:71in pid:829794667 byr:2000\$9biyr:2014 cid:192\$9b\$9biyr:2014 pid:096659610 hcl:#c0946f ecl:oth byr:1991 cid:180\$9bhgt:177cm\$9beyr:2023\$9b\$9bbyr:2017\$9beyr:2036 iyr:1933\$9bcid:225 ecl:gmt hgt:179in\$9bhcl:b5c44d pid:99932231\$9b\$9bhcl:#18171d\$9bhgt:187cm eyr:2023 byr:1934 cid:286 pid:878541119 iyr:2020 ecl:amb\$9b\$9bhgt:185cm\$9bpid:754207134 ecl:oth eyr:2023\$9bhcl:#a97842 cid:313 byr:1966\$9biyr:2015\$9b\$9bhcl:#ceb3a1 byr:1921 eyr:2022 pid:799265846 cid:285\$9bhgt:67in iyr:2015\$9b\$9biyr:2011 byr:1941\$9bhcl:#341e13 cid:65 pid:413556937\$9bhgt:169cm\$9becl:amb eyr:2020\$9b\$9biyr:2016\$9bhgt:158cm ecl:grn byr:1931 hcl:#7d3b0c\$9b\$9bpid:574299170 iyr:2013 byr:1961 ecl:hzl hcl:#866857 hgt:168cm eyr:2022\$9b\$9beyr:2022 pid:245416405\$9biyr:2019 hgt:173cm hcl:#c0946f\$9becl:brn\$9bbyr:1965\$9b\$9bbyr:1980 hgt:162cm ecl:brn pid:239318191\$9bhcl:#fffffd\$9bcid:58 eyr:2025 iyr:2020\$9b\$9bpid:892646915\$9biyr:2012 hcl:#733820 byr:1991 eyr:2021\$9bhgt:157cm ecl:oth\$9b\$9bpid:310597466 eyr:2025\$9bhcl:#cfa07d byr:1944 iyr:2018 ecl:oth\$9bhgt:183cm\$9b\$9biyr:2010 hgt:187cm ecl:oth\$9bpid:975763328\$9bhcl:#866857 eyr:2023 cid:283 byr:1997\$9b\$9biyr:2020 cid:225 hcl:#efcc98 pid:424680047 ecl:blu\$9bhgt:154cm\$9bbyr:1968 eyr:2027\$9b\$9becl:oth eyr:2020 hgt:183cm hcl:#623a2f\$9bpid:771851807\$9bbyr:1990\$9biyr:2017\$9b\$9bhcl:#efcc98 ecl:blu byr:1991 hgt:191cm pid:266021118\$9bcid:124\$9beyr:2025\$9b\$9bbyr:1993\$9becl:hzl eyr:2020\$9bhgt:163cm\$9biyr:2015 pid:831538073 hcl:#18171d\$9b\$9bhgt:74in hcl:#420afb eyr:2028\$9becl:grn pid:264469103\$9bbyr:1993\$9b\$9beyr:2020\$9bcid:79\$9bbyr:1972\$9bpid:084953331 hcl:#a97842 ecl:brn iyr:2010\$9bhgt:170cm\$9b\$9biyr:2014 ecl:gry pid:094812116 eyr:2026 hgt:190cm byr:1965 hcl:#944667\$9b\$9bhcl:#fffffd byr:1953 iyr:2014 ecl:hzl hgt:164cm\$9bcid:123 eyr:2023 pid:546394433\$9b\$9biyr:2012 hgt:155cm byr:1998 pid:#2c9be6 eyr:2023 hcl:#ceb3a1 ecl:gry\$9b\$9beyr:2029 ecl:gry pid:752489331 iyr:2015 hgt:167cm hcl:#18171d cid:70 byr:2002\$9b\$9bbyr:1938\$9becl:gry\$9bpid:764937909 iyr:2014\$9bhcl:#7d3b0c\$9beyr:2022 cid:145 hgt:184cm\$9b\$9bcid:340\$9bbyr:1924 hgt:169cm eyr:2026\$9biyr:2013 ecl:amb\$9bpid:499844992 hcl:#18171d\$9b\$9bpid:838417672 hgt:175cm\$9becl:grt iyr:2017 eyr:2025 hcl:17aa1a\$9b\$9beyr:2020\$9bbyr:1925 hcl:#341e13\$9becl:brn cid:342 pid:047426814 hgt:156cm iyr:2012\$9b\$9biyr:2011 hcl:#341e13 byr:1959\$9becl:amb pid:969679865\$9b\$9bbyr:1978 cid:320 hgt:180cm hcl:#435ceb pid:363518544 eyr:2023 iyr:2016 ecl:blu\$9b\$9biyr:2010 eyr:2028\$9bpid:183cm byr:1948\$9becl:oth cid:133\$9bhcl:#8d3298 hgt:190cm\$9b\$9bhcl:#6b5442 byr:1929 iyr:2019 pid:207713865 eyr:2029\$9bhgt:166cm ecl:gry\$9b\$9becl:blu iyr:2019\$9bbyr:1985 eyr:2030 hcl:#866857 hgt:155cm pid:659180287\$9b\$9becl:hzl\$9beyr:2020 iyr:2016 pid:440624039\$9bcid:147\$9bhgt:61in byr:1976 hcl:#733820\$9b\$9bhcl:#341e13 pid:178082907 eyr:2023\$9biyr:2015 byr:1956\$9becl:amb hgt:163cm\$9b\$9beyr:2023\$9biyr:2011 hcl:#cfa07d hgt:164cm\$9bpid:291621559 byr:1960 ecl:gry\$9b\$9bhcl:#efcc98 byr:1976\$9biyr:2017 pid:394566091 cid:248\$9bhgt:176cm ecl:hzl eyr:2026\$9b\$9biyr:2013 eyr:2029 hgt:152cm ecl:gry byr:1984 hcl:#623a2f pid:511780941\$9b\$9bpid:953716819 iyr:2010 hgt:156cm ecl:amb\$9bbyr:1947\$9bhcl:#18171d eyr:2025\$9b\$9beyr:2025 ecl:amb\$9biyr:2016\$9bhcl:#cfa07d byr:1925 pid:322787273 hgt:168cm\$9b\$9bhgt:59in iyr:2012\$9bpid:916978929 byr:1959\$9bhcl:#c0946f eyr:2021\$9becl:brn\$9b\$9bbyr:2018 eyr:1929 hgt:187in\$9bhcl:z\$9biyr:2003 pid:0377361331 ecl:utc\$9b\$9bbyr:1949 hcl:#fffffd pid:071791776 eyr:2030 iyr:2015 hgt:71in ecl:hzl\$9b\$9bhcl:#341e13\$9bhgt:154cm byr:1927 eyr:2023 ecl:blu iyr:2017\$9bpid:639867283\$9b\$9bhcl:z pid:315276249 byr:2026\$9bhgt:151cm\$9biyr:2028 eyr:2020\$9becl:hzl\$9b\$9bhcl:#341e13 eyr:2027 byr:1981 cid:342 pid:999898177 hgt:187cm\$9becl:blu iyr:2011\$9b\$9bbyr:2009\$9bhgt:73cm iyr:1921 hcl:z\$9bpid:181cm\$9becl:xry\$9b\$9becl:hzl\$9bbyr:1925\$9bpid:034183103 hcl:#341e13 hgt:158cm eyr:2029 iyr:2010\$9b\$9bbyr:1976\$9biyr:2011 hgt:177cm pid:833479839 hcl:#dcab9d ecl:blu eyr:2020\$9b\$9bcid:230 hcl:#7d3b0c byr:1954\$9biyr:2014 eyr:2026 pid:122150889\$9becl:brn hgt:182cm\$9b\$9bhcl:#a97842\$9becl:brn hgt:187cm\$9beyr:2028\$9bpid:427631634 iyr:2002 byr:2004\$9b\$9bpid:912516995 ecl:hzl iyr:2017 hcl:#ceb3a1 byr:1929 eyr:2028\$9bhgt:155cm\$9b\$9bpid:019809181\$9bcid:128 iyr:2013 hcl:#f5b9f7 byr:1931\$9bhgt:161cm\$9becl:amb\$9b\$9bhgt:64in byr:1924\$9biyr:2016 eyr:2029 ecl:hzl pid:474940085 hcl:#c0946f\$9b\$9bpid:172419213\$9becl:grn\$9bhgt:193cm iyr:2010 byr:1973 hcl:#6b5442\$9beyr:2027\$9b\$9becl:#7b5cfd iyr:2019\$9bbyr:2016\$9beyr:2040 hgt:191in\$9bcid:187 hcl:z pid:#c61084\$9b\$9beyr:2032 iyr:2014 pid:430247344 byr:1967\$9bhcl:#ceb3a1\$9bcid:241\$9becl:brn hgt:178in\$9b\$9bhcl:#623a2f iyr:2017 cid:235\$9beyr:2020 byr:1978 ecl:blu hgt:175cm\$9b\$9biyr:2013 ecl:amb hgt:174cm hcl:#866857 pid:285533942 byr:1954\$9b\$9bhgt:152cm ecl:blu pid:952587262 eyr:2024\$9biyr:2019 cid:268 hcl:#602927 byr:1947\$9b\$9bhgt:176in cid:245 byr:2011 iyr:2018\$9beyr:1987\$9bhcl:z\$9bpid:346518170\$9becl:utc\$9b\$9bhgt:180cm\$9biyr:2015 ecl:brn eyr:2027 pid:807494368 cid:324 byr:1980\$9b\$9bbyr:1936 hcl:#866857 ecl:blu\$9beyr:2021 hgt:187cm\$9biyr:2016 pid:244556968\$9b\$9bbyr:1950 cid:125\$9biyr:2020 hgt:168cm hcl:#c0946f eyr:2030 pid:758313758 ecl:blu\$9b\$9beyr:2021\$9bpid:618915663 hcl:#cfa07d iyr:2018 byr:2002\$9bhgt:157cm ecl:blu\$9b\$9bbyr:1967\$9becl:brn hcl:#c0946f pid:200495802 eyr:2021 iyr:2020\$9bcid:335\$9bhgt:181cm\$9b\$9bbyr:1996\$9becl:brn iyr:2015\$9beyr:2030\$9bhcl:#fffffd cid:207\$9bpid:022460311 hgt:158cm\$9b\$9beyr:2022 hgt:59cm iyr:2023\$9bbyr:1974 pid:354098699 hcl:b244f7\$9becl:#219505\$9b\$9bhcl:#866857 eyr:2025\$9bpid:370874666\$9bbyr:1947\$9bcid:162 ecl:oth hgt:186cm iyr:2011\$9b\$9becl:hzl eyr:2029\$9bbyr:1981\$9biyr:2012 pid:433430792 cid:252\$9bhgt:171cm\$9b\$9bpid:512473844 hgt:186cm iyr:2012 eyr:2028 byr:1949 ecl:hzl hcl:#18171d\$9b\$9bhgt:60cm iyr:1934\$9becl:#4a4017 pid:3067366202 hcl:1161df\$9beyr:1938 byr:2008\$9b\$9bpid:119509757 hcl:#cfa07d eyr:2022 hgt:174cm byr:1983\$9biyr:2015\$9becl:blu\$9b\$9bbyr:1955 eyr:2023\$9bcid:114\$9bhcl:f1aa8a pid:609049659 ecl:grn hgt:177cm\$9biyr:2015\$9b\$9beyr:2027 cid:284\$9bpid:654627982 byr:1964 iyr:2018 hgt:168cm\$9bhcl:#fffffd ecl:oth\$9b\$9biyr:1988\$9bhgt:191cm hcl:b87a62 byr:1990 ecl:xry\$9bpid:996624367 eyr:1960\$9b\$9bpid:641466821 eyr:2028 hcl:#7d3b0c\$9biyr:2010 hgt:175cm ecl:gry\$9b\$9bhcl:#b6652a\$9becl:oth\$9bbyr:1926 eyr:2030 iyr:2019 hgt:183cm\$9bpid:057196056\$9b\$9biyr:2017\$9beyr:2022 pid:936841429\$9becl:blu hcl:#6b5442 cid:179 byr:1927 hgt:161cm\$9b\$9beyr:2021\$9bcid:289 hgt:174cm iyr:2013\$9becl:grn pid:329574701 byr:1970\$9b\$9beyr:2021 byr:1939 ecl:gry pid:933505139 iyr:2014 hgt:173cm hcl:#7d3b0c\$9b\$9bcid:116 hcl:045bff eyr:2030 iyr:1920\$9becl:brn\$9bbyr:2030\$9bpid:#38f7f3\$9bhgt:155in\$9b\$9beyr:2028\$9bpid:225829241 byr:1928 hcl:#cfa07d iyr:2019\$9becl:oth\$9bhgt:166cm\$9b\$9bcid:80 byr:1936\$9biyr:2017\$9bhgt:94 hcl:#2e7503 ecl:oth eyr:2030\$9bpid:597284996\$9b\$9becl:oth\$9biyr:2019 hgt:76in\$9bbyr:1956 pid:821874039\$9b\$9beyr:2026 hgt:168cm\$9bpid:019015588\$9biyr:2010\$9becl:amb byr:2009 hcl:#623a2f cid:159\$9b\$9biyr:1980 hgt:167in\$9bpid:380644909 eyr:1966 ecl:blu byr:2004 hcl:z\$9b\$9beyr:2020 iyr:2013\$9bhcl:#08ad66 pid:540886868\$9becl:oth byr:1980 hgt:158cm\$9b\$9beyr:2026 hgt:186cm byr:1995\$9bcid:275\$9bhcl:z iyr:1958 ecl:blu\$9b\$9beyr:2026 iyr:2012\$9bhgt:61in byr:1936 pid:390833536 cid:298 ecl:grn hcl:#623a2f\$9b\$9bpid:393878498 eyr:2023 ecl:gry byr:1943 iyr:2010 hcl:#888785 hgt:158cm\$9b\$9bhgt:191cm cid:197 iyr:2014 byr:1945\$9bhcl:#fffffd\$9beyr:2020\$9bpid:183948344 ecl:amb\$9b\$9becl:gmt hgt:88\$9bcid:260 iyr:2024 byr:2022 eyr:2031 hcl:z pid:#532c6e\$9b\$9bhcl:#a97842\$9bhgt:160cm eyr:2024 ecl:blu iyr:2015 byr:1970\$9b\$9bbyr:1964 hgt:178cm\$9beyr:2025\$9bpid:813643223 ecl:brn iyr:2014\$9bhcl:#ceb3a1\$9b\$9bbyr:1965 eyr:2024 iyr:2018\$9bhgt:165cm hcl:#18171d ecl:grn pid:475669993\$9b\$9bhgt:116\$9biyr:2024 eyr:1974 hcl:504345 byr:2010 cid:206 pid:166cm ecl:zzz\$9b\$9biyr:2014 eyr:2020 pid:096460673 byr:1948\$9bhgt:153cm\$9becl:blu hcl:#341e13\$9b\$9bhcl:#ceb3a1\$9biyr:2017 hgt:67cm\$9bpid:178cm byr:2028 ecl:brn\$9bcid:293\$9b\$9bhgt:157cm\$9bhcl:#602927 byr:1941\$9biyr:2012 pid:611003211 eyr:2029\$9b\$9biyr:2019 byr:2000 pid:083917767 eyr:2024 hgt:172cm\$9bcid:248 hcl:#7e4d15\$9b\$9bbyr:1946\$9bhgt:160cm iyr:2020 hcl:#559278 pid:989139577\$9becl:amb eyr:2020\$9b\$9bpid:165cm byr:1927 cid:178 hcl:#733820 iyr:2017 hgt:156in\$9beyr:2029 ecl:brn\$9b\$9bhcl:#18171d hgt:163cm eyr:2022 byr:1962 pid:639124940 cid:258 ecl:hzl\$9biyr:2015\$9b\$9bcid:123 pid:4542006033\$9beyr:1987 byr:2010 iyr:2029 ecl:amb\$9bhgt:191cm hcl:#18171d\$9b\$9bhcl:z\$9bbyr:1928 iyr:1965\$9beyr:2022 hgt:75 ecl:oth pid:400765046\$9b\$9bhcl:#c0946f hgt:62in\$9becl:blu byr:1978 iyr:1923\$9bcid:260 eyr:2021 pid:404628742\$9b\$9bpid:#bf1611 ecl:grn\$9biyr:2018 cid:146 byr:1948\$9beyr:2025 hcl:#fffffd hgt:87\$9b\$9bpid:767547618\$9biyr:2018 hcl:#b6652a eyr:2029 hgt:165cm ecl:hzl byr:1937\$9b\$9becl:blu iyr:2019 pid:960083875 eyr:2027 hgt:71in hcl:#c0946f\$9bbyr:1921\$9b\$9biyr:2011\$9bpid:9562042482\$9bhcl:z hgt:59cm\$9beyr:1994 cid:258 ecl:#6c1bcc byr:2025\$9b\$9beyr:2028 pid:494999718 byr:1928 hgt:176cm\$9biyr:2015 ecl:oth hcl:#733820\$9b\$9bcid:78 eyr:2020 hgt:160cm byr:1947 ecl:blu\$9bhcl:#b6652a iyr:2016 pid:069457741\$9b\$9bhcl:#6b5442 iyr:2010\$9bbyr:1971\$9beyr:2028 hgt:169cm ecl:brn pid:528961949\$9b\$9beyr:2028\$9bhcl:#7d3b0c\$9bbyr:1952\$9becl:hzl\$9bcid:317 iyr:2016\$9bpid:832169844\$9b\$9bhcl:#c0946f\$9becl:brn\$9biyr:2017 eyr:2028\$9bpid:161390075 byr:1993 cid:50\$9bhgt:171cm\$9b\$9becl:#ae12d3 hgt:74cm cid:239 hcl:z pid:345439730 iyr:1924 byr:2029 eyr:2031\$9b\$9b"
  .byte 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b28
Removing instruction jmp __b29
Removing instruction jmp __b30
Removing instruction jmp __b31
Removing instruction jmp __b27
Removing instruction jmp __b24
Removing instruction jmp __b25
Removing instruction jmp __b26
Removing instruction jmp __b5
Removing instruction jmp __b7
Removing instruction jmp __b10
Removing instruction jmp __b12
Removing instruction jmp __b9
Removing instruction jmp __b8
Removing instruction jmp __b13
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __b33
Removing instruction jmp __b32
Removing instruction jmp __b14
Removing instruction jmp __b16
Removing instruction jmp __b19
Removing instruction jmp __b18
Removing instruction jmp __b17
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b8
Removing instruction jmp convertToScreenCode1
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #0
Replacing instruction ldy #0 with TAY
Removing instruction lda #<0
Removing instruction lda #<0
Removing instruction lda #<0
Replacing instruction lda #0 with TXA
Replacing instruction ldy #0 with TAY
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b27_from___b27 with __b27
Replacing label __b1_from___b24 with __b1_from___b25
Replacing label __b1_from___b12 with __b1_from___b25
Replacing label __b12_from___b11 with __b12
Replacing label __b8_from___b6 with __b8
Replacing label __b1_from___b22 with __b1_from___b25
Replacing label __b1_from___b33 with __b1
Replacing label __b1_from___b32 with __b1
Replacing label __b17_from___b15 with __b17
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b3 with __b2
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from_newline with __b1
Replacing label __b1_from___b2 with __b1
Removing instruction __b1_from___b12:
Removing instruction __b1_from___b22:
Removing instruction __b1_from___b24:
Removing instruction __b1_from___b32:
Removing instruction __b1_from___b33:
Removing instruction __b3_from___b1:
Removing instruction cputs_from___b3:
Removing instruction printf_uint_from___b28:
Removing instruction __b29_from___b28:
Removing instruction cputs_from___b29:
Removing instruction __b31_from___b30:
Removing instruction cputs_from___b31:
Removing instruction __b27_from___b27:
Removing instruction __b27_from___b31:
Removing instruction __b10_from___b7:
Removing instruction cputs_from___b10:
Removing instruction __b12_from___b10:
Removing instruction __b12_from___b11:
Removing instruction __b8_from___b6:
Removing instruction __b8_from___b9:
Removing instruction __b22_from___b21:
Removing instruction __b17_from___b15:
Removing instruction __b17_from___b18:
Removing instruction __b1_from_cputs:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Removing instruction __b6_from_convertToScreenCode1:
Removing instruction __b4_from___b7:
Removing instruction __b4_from___b7:
Removing instruction utoa_append_from___b5:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Removing instruction cputs_from___b2:
Removing instruction __b1_from_newline:
Removing instruction __b1_from___b5:
Removing instruction __b1_from_memcpy:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __b1_from_main:
Removing instruction __b3:
Removing instruction __b28:
Removing instruction __b29:
Removing instruction __b30:
Removing instruction printf_uint_from___b30:
Removing instruction __b31:
Removing instruction __b24:
Removing instruction __b25:
Removing instruction __b26:
Removing instruction __b5_from___b26:
Removing instruction __b7:
Removing instruction __b10:
Removing instruction cputs_from___b11:
Removing instruction __b9:
Removing instruction __b5_from___b8:
Removing instruction __b22:
Removing instruction __b33:
Removing instruction __b32:
Removing instruction __b16:
Removing instruction __b19:
Removing instruction __b13_from___b20:
Removing instruction __b18:
Removing instruction __b14_from___b17:
Removing instruction memset_from_clrscr:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction utoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b8:
Removing instruction convertToScreenCode1:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b4:
Removing instruction __b1_from_utoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __b1:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b2:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b2:
Removing instruction __b4:
Removing instruction memset_from___b4:
Removing instruction __b5:
Removing instruction __breturn:
Removing instruction __b1_from_utoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Skipping double jump to __b1 in jmp __b1_from___b25
Skipping double jump to __b1 in bne __b1_from___b25
Skipping double jump to __b1 in jmp __b1_from___b25
Skipping double jump to __b1 in beq __b1_from___b25
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b1_from___b25 to __b3
Relabelling long label __b13_from___b4 to __b7
Relabelling long label __b22_from___b23 to __b9
Relabelling long label __b14_from___b13 to __b10
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction lda.z digit_value+1
Replacing instruction lda #0 with TYA
Replacing instruction lda #0 with TYA
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction __b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Removing instruction jmp __b1
Succesful ASM optimization Pass5NextJumpElimination
Fixing long branch [163] beq __b1 to bne
Fixing long branch [168] beq __b1 to bne

FINAL SYMBOL TABLE
const word* COLCRS = (word*) 85
const nomodify byte* CRSINH = (byte*) 752
const byte* DIGITS[]  = "0123456789abcdef"atz
const byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
const nomodify byte** OLDADR = (byte**) 94
const nomodify byte* OLDCHR = (byte*) 93
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const word* RADIX_DECIMAL_VALUES[]  = { $2710, $3e8, $64, $a }
const byte* ROWCRS = (byte*) 84
const nomodify byte** SAVMSC = (byte**) 88
const byte SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
void clrscr()
void cputc(volatile byte cputc::c)
volatile byte cputc::c loadstore zp[1]:144 775026.25
byte cputc::convertToScreenCode1_return
byte cputc::convertToScreenCode1_return#0 reg byte x 1833333.6666666665
byte* cputc::convertToScreenCode1_v
const byte* cputc::convertToScreenCode1_v#0 convertToScreenCode1_v = &cputc::c
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 100001.0
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 s zp[2]:140 50000.5
to_nomodify byte* cputs::s#7 s zp[2]:140 150502.0
to_nomodify byte* cputs::s#8 s zp[2]:140 1001.0
byte* cursorLocation()
word~ cursorLocation::$0 zp[2]:147 2.000000002E9
byte*~ cursorLocation::$1 zp[2]:147 2.000000002E9
word~ cursorLocation::$3 zp[2]:147 1.5000000015E9
word~ cursorLocation::$4 zp[2]:149 2.000000002E9
word~ cursorLocation::$5 zp[2]:147 2.000000002E9
byte* cursorLocation::return
byte* cursorLocation::return#0 return zp[2]:147 2.0000002E7
byte* cursorLocation::return#1 return zp[2]:147 2.7750000075E8
byte* cursorLocation::return#3 return zp[2]:147 2.00000002E8
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte gotoxy::x
const byte gotoxy::x#1 x = 0
byte gotoxy::y
const byte gotoxy::y#1 y = 0
void main()
byte main::i
byte main::i#1 reg byte x 202.0
byte main::i#2 reg byte x 84.16666666666666
byte main::i1
byte main::i1#1 i1 zp[1]:137 20002.0
byte main::i1#2 i1 zp[1]:137 10001.0
byte main::match
byte main::match#1 match zp[1]:138 20002.0
byte main::match#2 match zp[1]:138 10334.666666666666
byte main::match#6 match zp[1]:138 15001.5
byte main::num_found
byte main::num_found#1 reg byte y 202.0
byte main::num_found#2 reg byte y 104.66666666666666
byte main::num_found#6 reg byte y 101.0
byte* main::pass
byte* main::pass#1 pass zp[2]:128 22.0
byte* main::pass#10 pass zp[2]:128 716.3125
byte* main::pass#11 pass zp[2]:128 22.0
byte* main::pass#14 pass zp[2]:128 1526.75
byte* main::pass#3 pass zp[2]:128 1.4666666666666666
byte* main::pass#4 pass zp[2]:128 202.0
byte* main::pass#5 pass zp[2]:128 2002.0
byte* main::required_tag
byte* main::required_tag#1 required_tag zp[2]:135 1001.0
byte* main::required_tag#6 required_tag zp[2]:135 1333.6666666666665
const byte* main::s[8]  = "
Valid "at
const byte* main::s1[8]  = " Total "at
const byte* main::s2[2]  = "
"at
const byte* main::s3[2]  = "+"at
const byte* main::s4[2]  = "."at
byte main::tag_idx
byte main::tag_idx#1 tag_idx zp[1]:134 2002.0
byte main::tag_idx#2 tag_idx zp[1]:134 310.4
const byte* main::tags_found[7]  = { fill( 7, 0) }
word main::total
word main::total#1 total zp[2]:132 22.0
word main::total#10 total zp[2]:132 46.0
word main::valid
word main::valid#1 valid zp[2]:130 11.0
word main::valid#10 valid zp[2]:130 54.76315789473685
word main::valid#8 valid zp[2]:130 16.5
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#0 destination zp[2]:147 3333333.6666666665
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:147 1.00000000001E11
byte* memcpy::dst#2 dst zp[2]:147 1.0003333333466667E11
byte* memcpy::dst#4 dst zp[2]:147 2.00000002E8
word memcpy::num
const word memcpy::num#0 num = (word)$28*$17
void* memcpy::return
void* memcpy::source
byte* memcpy::source#0 source zp[2]:142 3333333.6666666665
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:142 2.00000000002E11
byte* memcpy::src#2 src zp[2]:142 1.0002500000125E11
byte* memcpy::src#4 src zp[2]:142 1.00000001E8
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:149 1.251250000025E10
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte* memset::dst
byte* memset::dst#1 dst zp[2]:145 2.00000000002E11
byte* memset::dst#2 dst zp[2]:145 1.3336666666833334E11
byte* memset::dst#4 dst zp[2]:145 2.00000002E8
byte* memset::end
byte* memset::end#0 end zp[2]:142 1.6683333333666668E10
word memset::num
word memset::num#2 num zp[2]:142 1.00000001E8
void* memset::return
void* memset::str
byte* memset::str#0 str zp[2]:145 1.0000001E7
void* memset::str#3 str zp[2]:145 3333337.333333333
void* memset::str#7 str zp[2]:145 22.0
void* memset::str#8 str zp[2]:145 2.0000002E7
void newline()
byte* newline::start
byte* newline::start#0 start zp[2]:145 7500000.75
const byte* passports = "ecl:grn
cid:315 iyr:2012 hgt:192cm eyr:2023 pid:873355140 byr:1925 hcl:#cb2c03

byr:2027 hcl:ec0cfd ecl:blu cid:120
eyr:1937 pid:106018766 iyr:2010 hgt:154cm

byr:1965 eyr:2028 hgt:157cm
cid:236 iyr:2018 ecl:brn
hcl:#cfa07d pid:584111467

eyr:2029 ecl:hzl
iyr:1972 byr:1966
pid:2898897192
hgt:59cm hcl:z

pid:231652013 hcl:#602927 hgt:166
ecl:grn eyr:2025
byr:2008 iyr:1986

byr:1928 hgt:167cm
hcl:#18171d iyr:2012
ecl:oth pid:237657808 eyr:1944

hgt:73in ecl:grn byr:1931 pid:358388825 iyr:2020
hcl:#602927 eyr:2020

hcl:#efcc98 eyr:2024 ecl:hzl
byr:2030 hgt:192cm
iyr:2013 pid:7479289410

pid:053467220 iyr:2012 hgt:169cm
cid:149 hcl:#866857
eyr:2030
byr:1995 ecl:oth

hgt:162cm hcl:#efcc98 ecl:grn byr:1985 pid:419840766
eyr:2022
iyr:2020

pid:22086957 hcl:c69235 ecl:#c458c5 eyr:1986 byr:2014 hgt:72cm iyr:1934

hcl:#866857
ecl:brn eyr:2024
iyr:2017
pid:505225484 cid:144
byr:1980
hgt:170cm

hcl:#866857 ecl:gry
byr:1972 iyr:2019 eyr:2023
cid:234 pid:721290041 hgt:191cm

pid:346301363
eyr:2020
hcl:#733820 iyr:2019 hgt:177cm
byr:1998

hgt:157cm byr:1963
pid:898055805
hcl:#fffffd ecl:blu iyr:2017 cid:87
eyr:2030

pid:605900764 iyr:2011
hgt:73in ecl:hzl eyr:2024
hcl:#888785
cid:281

iyr:2010 eyr:2026 hcl:#4f7e76 pid:883386029 byr:1946 ecl:brn

hcl:z
iyr:2020 pid:9121928466 byr:2014 ecl:zzz eyr:2025
hgt:172in

hgt:151cm cid:163 pid:670884417 iyr:2012
ecl:oth hcl:#ceb3a1
eyr:2028

hcl:z cid:92 hgt:69cm
byr:2008 pid:492284612
eyr:2020 iyr:2023
ecl:hzl

byr:1933
hcl:#7d3b0c eyr:2020 hgt:170cm
pid:949064511 iyr:2010
ecl:oth

eyr:2025 byr:1989 ecl:oth cid:100 hgt:182cm
pid:629190040 iyr:2017 hcl:#b6652a

ecl:hzl cid:76 hcl:#e71392 eyr:2021 iyr:2013 byr:1995
pid:762177473
hgt:179cm

pid:198500564 eyr:2029 hcl:#733820 cid:51 iyr:2012
hgt:70in byr:1938 ecl:oth

hgt:190cm ecl:brn byr:1952 iyr:2015 hcl:#623a2f
eyr:2023

hgt:169cm hcl:#602927 byr:2001 pid:823979592 iyr:2016 eyr:2029

iyr:2010 ecl:gry
eyr:2022 hgt:156cm byr:1953 pid:434063393
hcl:#733820

pid:091724580 hcl:a7069e eyr:1984 ecl:#95d01e byr:2012 iyr:2005

eyr:2022 byr:1972 hcl:#866857 ecl:hzl pid:227453248
hgt:153cm cid:324 iyr:2018

cid:195 pid:049871343
eyr:2024 hgt:169cm
byr:1952 iyr:2010 ecl:grn

eyr:2035 pid:189cm
hgt:77 iyr:1973 ecl:#dc83d5
hcl:z byr:2004

byr:2027
pid:89338932 hcl:1de39e ecl:grn hgt:159in eyr:2034 iyr:1937

pid:076534920
hgt:152cm
byr:1969
ecl:blu
hcl:#866857 iyr:2011 eyr:2024

iyr:2019 eyr:2028
ecl:blu hgt:169cm
hcl:#888785 pid:332202163 byr:1923

hgt:65in byr:1964 iyr:2019
pid:287612987 ecl:hzl cid:213 eyr:2023 hcl:#ceb3a1

hcl:#623a2f pid:182484027
iyr:2016 ecl:brn byr:1943
hgt:71in eyr:2021 cid:344

hcl:#cdee64 iyr:2011 ecl:brn eyr:2026 hgt:176cm
byr:1985 pid:978641227

eyr:2029 ecl:brn hgt:173cm byr:1920 cid:211
hcl:#866857
iyr:2016 pid:289769625

hcl:#7d3b0c pid:770938833 iyr:2010 byr:1941 ecl:oth eyr:2029 hgt:161cm

hgt:172cm iyr:2015 ecl:gry byr:1948
eyr:2029
pid:466359109 hcl:#341e13

cid:74 pid:405199325 ecl:blu
hcl:#6b5442
eyr:1980 byr:2024 hgt:174cm iyr:2011

hgt:183cm pid:075760048 cid:78 byr:1960 ecl:hzl eyr:2030 hcl:#6b5442 iyr:2014

cid:264 hcl:#7d3b0c
ecl:blu iyr:2011 eyr:2020 hgt:182cm
byr:1929

pid:435338286 byr:1931
hcl:z ecl:amb iyr:2013 hgt:73in
cid:165 eyr:2027

pid:511898552 eyr:2025 hgt:184cm hcl:#602927
iyr:2018 byr:1989 ecl:hzl

iyr:2016
hgt:168in
hcl:#623a2f
eyr:2025 pid:310738569 ecl:#0c3039
byr:2027

pid:158cm byr:1946 ecl:grt
iyr:1920 cid:189
hcl:389bce hgt:165cm

pid:973732906 hcl:#cfa07d iyr:2010 eyr:2020 hgt:180cm
byr:1930
ecl:brn

pid:930994364 byr:1967 hgt:151cm
iyr:2011 eyr:2022

eyr:1968 hgt:75cm cid:241
iyr:2011 pid:5493866745
ecl:grt
byr:1976 hcl:#a97842

eyr:2026 ecl:oth
iyr:2016 hcl:#c0946f
byr:1929
hgt:175cm
pid:9421898537

eyr:2028 iyr:2016 byr:1962
ecl:grn hgt:186cm hcl:#cfa07d pid:432962396

iyr:2010 byr:1934 eyr:2023 hgt:180cm hcl:#cfa07d ecl:gry

cid:168
byr:1978
eyr:2027 hgt:189cm pid:802710287
hcl:#2f980b iyr:2014
ecl:grn

eyr:1970
pid:576329104
ecl:xry iyr:1954 hcl:#341e13 byr:2026
hgt:74in

eyr:2027 hgt:153cm
ecl:oth
hcl:#866857
pid:290407832 byr:1956 iyr:2017

iyr:2011
cid:128
ecl:amb hcl:#7d3b0c hgt:68in pid:743606119 eyr:2020

ecl:oth hcl:#cfa07d
byr:2016 pid:#de98ae iyr:1984 cid:194
hgt:170cm
eyr:2034

pid:526098672 hgt:168cm
hcl:#7d3b0c cid:167 byr:1923 ecl:blu iyr:2016
eyr:2030

pid:495569197 hcl:#866857 hgt:193cm
iyr:2013 eyr:2021 byr:1921 ecl:amb

ecl:amb
hcl:#a97842 pid:862249915 iyr:2012 byr:1964
cid:325
eyr:2021

iyr:1958
byr:2003
hgt:160 hcl:#18171d
ecl:hzl eyr:2020

iyr:2019 byr:1997 ecl:brn
pid:342735713 hcl:#efcc98
hgt:181cm cid:307
eyr:2027

pid:817121616 eyr:2020
iyr:2012
hgt:185cm
hcl:#18171d byr:1969 ecl:hzl

pid:381399203
ecl:oth byr:1930
iyr:2014 hcl:#6b5442 hgt:71in cid:156 eyr:2025

byr:2002 hcl:#18171d iyr:2017
pid:398245854 hgt:64in ecl:gry eyr:2025 cid:127

eyr:2028 hcl:#341e13
ecl:amb iyr:2012
pid:079796480 hgt:69cm
byr:1995

cid:315 iyr:2028
pid:775929239
hgt:162cm ecl:dne byr:1940 eyr:1952 hcl:#c0946f

iyr:2015
hgt:154cm byr:1997
ecl:grn
cid:125 eyr:2024 pid:834780229
hcl:#18171d

ecl:hzl hcl:#a97842 pid:553710574 eyr:2028
hgt:183cm cid:196
iyr:2014

pid:377912488 hgt:159cm ecl:amb eyr:2024 byr:1974
iyr:2014
hcl:#ceb3a1

eyr:2024
byr:1947 hgt:63in ecl:brn
cid:69
pid:185228911 hcl:#b6652a iyr:2016

eyr:2024
hgt:168cm hcl:#602927
iyr:2013
byr:1993
pid:681091728 ecl:gry cid:203

pid:037922164 iyr:2020
byr:1990 hgt:156cm eyr:2023 hcl:#866857
cid:97 ecl:grn

hgt:170cm pid:980455250
iyr:2011 ecl:hzl byr:1957
eyr:2030 hcl:#cfa07d

hgt:158cm
hcl:#602927
byr:2002 ecl:hzl iyr:2013
cid:99
eyr:2020 pid:48646993

byr:1955 pid:814033843 eyr:2030 hcl:#a97842
hgt:191cm iyr:2019

pid:111196491 hgt:191cm iyr:2012 ecl:blu hcl:#a97842
eyr:2026 cid:131 byr:1979

hcl:#fffffd hgt:68in
cid:121 ecl:oth eyr:2024 pid:343836937
byr:1955
iyr:2020

eyr:2025 byr:1954
pid:737517118
cid:343 hcl:#b6652a
iyr:2017 ecl:hzl
hgt:175cm

ecl:brn
iyr:2011 hgt:171cm cid:102 pid:066348279 byr:1981

ecl:oth iyr:2018 byr:1975
eyr:2029
hgt:185cm cid:226
pid:978243407 hcl:#341e13

iyr:2015 pid:918017915 hcl:#3e52b7
byr:1999 ecl:brn cid:314
eyr:2025 hgt:192cm

hcl:#19d1fa byr:1984 ecl:dne hgt:76in
iyr:2015 cid:118 pid:417075672
eyr:2020

iyr:2019
cid:120 hgt:186cm
hcl:#733820 eyr:2024 pid:423238982 ecl:brn byr:1968

hgt:70cm cid:173 pid:767014975
hcl:#866857 eyr:2039 ecl:brn byr:1985

pid:340424924
eyr:2027 hcl:#7d3b0c
hgt:168cm ecl:hzl iyr:2016
byr:1994

ecl:hzl byr:1933 pid:580425691
iyr:2010 hcl:#c0946f eyr:2024
hgt:64in

hcl:#9fe6b0 pid:913184461 ecl:grn eyr:2030
cid:262 iyr:2014

ecl:amb pid:640007768 eyr:2030 byr:2017 iyr:1988 hcl:z

byr:1977 cid:54
eyr:1939 pid:882762394 iyr:2030 hcl:#ceb3a1 ecl:blu

iyr:2011 hcl:#7d3b0c byr:1928
pid:340969354 cid:199 hgt:168cm eyr:2029 ecl:hzl

pid:729464282
iyr:2012 hcl:baae60
eyr:2026 ecl:hzl hgt:166cm byr:2019

pid:930997801 iyr:2019 eyr:2030
hcl:#866857 ecl:oth byr:1960 cid:235 hgt:73in

ecl:brn
byr:1988 hgt:179cm iyr:2017
pid:864768439 cid:305 hcl:#c0946f
eyr:2029

hcl:#7d3b0c ecl:grn
hgt:182cm eyr:2021 pid:719891314
byr:1920 iyr:2017

hgt:62cm
cid:71 ecl:brn hcl:#fffffd iyr:2025 eyr:1997
pid:175cm byr:2022

hcl:#cfa07d cid:239 eyr:2025 ecl:hzl hgt:189in byr:1980 iyr:2020
pid:703047050

byr:1951
eyr:2030
ecl:hzl
pid:130992467 hgt:157cm hcl:#341e13

hgt:175cm
hcl:#623a2f
cid:68 eyr:2025
byr:2001 ecl:oth pid:253618704 iyr:2016

hcl:#fffffd pid:379344553 ecl:grn
eyr:2026
hgt:72in byr:1974 iyr:2013

ecl:#b4e952 byr:1970 hcl:z
eyr:2039 pid:6056894636 iyr:2021 hgt:165cm
cid:328

hcl:#602927 iyr:2014 pid:890429537 byr:1957 hgt:68in eyr:2020 ecl:hzl

cid:265 byr:1961 hcl:#ceb3a1 eyr:2022 iyr:2016 hgt:184cm pid:921615309

byr:1951 eyr:2024
hcl:#341e13
ecl:amb pid:414644982
iyr:2010 hgt:159cm

iyr:2015 cid:319
eyr:2029 ecl:brn pid:380237898
hcl:#efcc98 hgt:157cm byr:1972

pid:237156579 ecl:#312a91
hgt:167cm iyr:2011 hcl:#c0946f eyr:2021 byr:1953

ecl:hzl iyr:2015 pid:10160221 eyr:2025 hgt:175cm hcl:z byr:1939

hgt:59in hcl:#18171d byr:1962 ecl:hzl
iyr:2019 eyr:2025
cid:337 pid:491938615

ecl:utc hgt:82 pid:51674655 byr:2020
eyr:1954 iyr:2029 hcl:z

pid:119530189
cid:103
iyr:2010 byr:1979
hgt:168cm hcl:#a97842 ecl:brn eyr:2029

hgt:177cm ecl:brn
byr:1990
pid:015089628 eyr:2028 hcl:#733820 iyr:2020

ecl:blu iyr:2020 hgt:189cm
hcl:#efcc98 byr:1982 pid:346500376 eyr:2021 cid:160

ecl:brn hgt:173cm iyr:2011 cid:259 hcl:#6b5442 eyr:2026
byr:1995
pid:654875035

ecl:grn eyr:2025 pid:147155222 byr:1942
cid:341 hcl:#602927
hgt:165cm
iyr:2016

pid:543171646
hgt:153cm
iyr:2019 hcl:#fffffd byr:1985 cid:266
eyr:2027
ecl:hzl

ecl:blu
eyr:2022
pid:667939101 byr:1974
cid:259 hcl:#888785

eyr:2030 byr:2016 iyr:2022
pid:86902982
ecl:zzz hgt:72 hcl:ceb867

hcl:#fffffd
ecl:grn pid:046978329
byr:1924
eyr:2025 hgt:158cm iyr:2011

hgt:150cm eyr:2028 byr:1985 ecl:gry hcl:#866857 pid:340615189
iyr:2017
cid:50

cid:171 hcl:#18171d pid:009562218 byr:1981 hgt:175cm eyr:2024 ecl:oth iyr:2017

iyr:2019
eyr:2022
ecl:brn hcl:#cfa07d pid:050270380 cid:159
hgt:151cm
byr:1951

hcl:#7d3b0c hgt:176cm iyr:2015 byr:1923 pid:348188421 ecl:blu eyr:2029

byr:1997 hgt:162cm eyr:2023 pid:445685977
iyr:2012 ecl:amb hcl:#efcc98

iyr:2017 ecl:oth eyr:2028 pid:791977055 hgt:170cm byr:1991
hcl:#623a2f

byr:1998 hcl:#fffffd
eyr:2020
ecl:gry pid:039483695 hgt:163cm iyr:2020
cid:165

ecl:hzl hgt:74in iyr:2016 pid:026214321
cid:152 hcl:#a1f179
eyr:2036 byr:2001

pid:257900949 cid:80 byr:1956 iyr:2012 hgt:165cm eyr:2030

pid:918371363
ecl:xry
iyr:2012
byr:2012 hgt:65cm
eyr:2029

pid:041789006 iyr:2018 byr:1945 eyr:2024 ecl:blu
hcl:#5ab31e hgt:171cm

ecl:gry
byr:1956 cid:318 iyr:2020 hcl:#623a2f
eyr:2030 pid:020576506 hgt:184cm

hgt:173cm iyr:2025
eyr:2023
ecl:amb pid:958983168 hcl:#866857 byr:1935

byr:1974
eyr:2040 pid:57104308 iyr:1980 hcl:z
hgt:192in cid:295 ecl:amb

pid:180cm hcl:1109f7 eyr:2039 byr:2020
ecl:dne hgt:189in iyr:1921

iyr:2013 byr:1961
hcl:#866857
eyr:2025 hgt:158cm ecl:gry

ecl:brn iyr:2013 eyr:2021 pid:978650418 byr:1980
hcl:#ceb3a1 cid:110
hgt:166cm

pid:864880558 ecl:hzl hcl:#c0946f byr:1955 eyr:2027 hgt:169cm iyr:2011

eyr:2023 hgt:191cm hcl:#866857
pid:454509887
ecl:grn byr:1938 iyr:2015

pid:793008846 eyr:2025 ecl:grn hcl:#341e13
hgt:187cm
byr:1973 cid:224
iyr:2013

hcl:#866857 eyr:2022 pid:802335395 hgt:171cm ecl:amb
iyr:2015 byr:1991

hcl:#888785 pid:768625886
hgt:180cm
eyr:2026 ecl:oth cid:178 byr:1958

pid:921387245 cid:82 hgt:190cm hcl:#c0946f ecl:grn
iyr:2015 eyr:2023

pid:0704550258 hcl:1ba8f6 iyr:2010 byr:1978 cid:130
eyr:2030 ecl:dne hgt:66cm

pid:626293279 hcl:#7d3b0c hgt:185cm ecl:oth
eyr:2020 byr:1937 iyr:2012

hgt:175
eyr:1933 ecl:gry
hcl:#7d3b0c byr:2003 pid:#5d8fcc
iyr:2012

eyr:2027
byr:1927 cid:154
ecl:gry pid:683668809 hgt:164cm
hcl:#a97842 iyr:2011

byr:1940 iyr:2014 hgt:172cm eyr:2024 pid:033678324 hcl:#10fded
cid:292 ecl:oth

iyr:1970 ecl:#201515 pid:#4cd485 eyr:2034 hgt:162
byr:2005 cid:67
hcl:#c0946f

cid:306
byr:1948
hcl:#efcc98
eyr:2024 hgt:171cm pid:440657854 iyr:2015 ecl:brn

hgt:172cm ecl:brn byr:1958 pid:054926969 hcl:#4b8065 iyr:2019

pid:45977569 ecl:amb byr:2002 hgt:71cm hcl:z iyr:1983

pid:811407848 hcl:#866857 cid:112 hgt:180cm byr:1986
ecl:brn eyr:2026

ecl:amb
byr:1992
cid:288 pid:417117245 hcl:#623a2f
iyr:2011 hgt:181cm
eyr:2021

byr:1974 hgt:192cm cid:172
eyr:2022
ecl:blu
hcl:#cfa07d iyr:2014

eyr:2024 ecl:gry
pid:874569675 byr:1960 iyr:2017 hgt:186cm
hcl:#6b5442

byr:1988 eyr:2024 iyr:2020 ecl:oth hcl:#866857 pid:227304269 hgt:170cm

ecl:grn iyr:2019 byr:2002 cid:150 hcl:#efcc98
pid:600740993
hgt:167cm eyr:2027

pid:553824537 iyr:2019 ecl:blu eyr:2025 hcl:#e21269 hgt:193cm
byr:1923

byr:2030 iyr:2019 ecl:#cb0911
hcl:#cfa07d hgt:74in eyr:2012
pid:7647207386

cid:289 hgt:128 pid:178cm iyr:2025 ecl:#4ad977 byr:2020 eyr:2036 hcl:#efcc98

cid:119 hgt:150in
hcl:z
iyr:2012
ecl:brn eyr:1975
byr:2007 pid:#0dcd32

hcl:8a1ce7 pid:0434291854
eyr:2034 iyr:2005
hgt:62cm byr:2029 ecl:utc

ecl:gry hcl:#ceb3a1 byr:1976 eyr:2024 iyr:2010 hgt:188cm
pid:636312902

hcl:#888785 byr:2027 hgt:178in iyr:2017 pid:973095872 eyr:1952

hgt:179cm iyr:2015 hcl:#ceb3a1
byr:1944 pid:182079308 cid:317
eyr:2025 ecl:hzl

hcl:#6b5442 ecl:grn eyr:2023 hgt:71in pid:829794667 byr:2000
iyr:2014 cid:192

iyr:2014 pid:096659610 hcl:#c0946f ecl:oth byr:1991 cid:180
hgt:177cm
eyr:2023

byr:2017
eyr:2036 iyr:1933
cid:225 ecl:gmt hgt:179in
hcl:b5c44d pid:99932231

hcl:#18171d
hgt:187cm eyr:2023 byr:1934 cid:286 pid:878541119 iyr:2020 ecl:amb

hgt:185cm
pid:754207134 ecl:oth eyr:2023
hcl:#a97842 cid:313 byr:1966
iyr:2015

hcl:#ceb3a1 byr:1921 eyr:2022 pid:799265846 cid:285
hgt:67in iyr:2015

iyr:2011 byr:1941
hcl:#341e13 cid:65 pid:413556937
hgt:169cm
ecl:amb eyr:2020

iyr:2016
hgt:158cm ecl:grn byr:1931 hcl:#7d3b0c

pid:574299170 iyr:2013 byr:1961 ecl:hzl hcl:#866857 hgt:168cm eyr:2022

eyr:2022 pid:245416405
iyr:2019 hgt:173cm hcl:#c0946f
ecl:brn
byr:1965

byr:1980 hgt:162cm ecl:brn pid:239318191
hcl:#fffffd
cid:58 eyr:2025 iyr:2020

pid:892646915
iyr:2012 hcl:#733820 byr:1991 eyr:2021
hgt:157cm ecl:oth

pid:310597466 eyr:2025
hcl:#cfa07d byr:1944 iyr:2018 ecl:oth
hgt:183cm

iyr:2010 hgt:187cm ecl:oth
pid:975763328
hcl:#866857 eyr:2023 cid:283 byr:1997

iyr:2020 cid:225 hcl:#efcc98 pid:424680047 ecl:blu
hgt:154cm
byr:1968 eyr:2027

ecl:oth eyr:2020 hgt:183cm hcl:#623a2f
pid:771851807
byr:1990
iyr:2017

hcl:#efcc98 ecl:blu byr:1991 hgt:191cm pid:266021118
cid:124
eyr:2025

byr:1993
ecl:hzl eyr:2020
hgt:163cm
iyr:2015 pid:831538073 hcl:#18171d

hgt:74in hcl:#420afb eyr:2028
ecl:grn pid:264469103
byr:1993

eyr:2020
cid:79
byr:1972
pid:084953331 hcl:#a97842 ecl:brn iyr:2010
hgt:170cm

iyr:2014 ecl:gry pid:094812116 eyr:2026 hgt:190cm byr:1965 hcl:#944667

hcl:#fffffd byr:1953 iyr:2014 ecl:hzl hgt:164cm
cid:123 eyr:2023 pid:546394433

iyr:2012 hgt:155cm byr:1998 pid:#2c9be6 eyr:2023 hcl:#ceb3a1 ecl:gry

eyr:2029 ecl:gry pid:752489331 iyr:2015 hgt:167cm hcl:#18171d cid:70 byr:2002

byr:1938
ecl:gry
pid:764937909 iyr:2014
hcl:#7d3b0c
eyr:2022 cid:145 hgt:184cm

cid:340
byr:1924 hgt:169cm eyr:2026
iyr:2013 ecl:amb
pid:499844992 hcl:#18171d

pid:838417672 hgt:175cm
ecl:grt iyr:2017 eyr:2025 hcl:17aa1a

eyr:2020
byr:1925 hcl:#341e13
ecl:brn cid:342 pid:047426814 hgt:156cm iyr:2012

iyr:2011 hcl:#341e13 byr:1959
ecl:amb pid:969679865

byr:1978 cid:320 hgt:180cm hcl:#435ceb pid:363518544 eyr:2023 iyr:2016 ecl:blu

iyr:2010 eyr:2028
pid:183cm byr:1948
ecl:oth cid:133
hcl:#8d3298 hgt:190cm

hcl:#6b5442 byr:1929 iyr:2019 pid:207713865 eyr:2029
hgt:166cm ecl:gry

ecl:blu iyr:2019
byr:1985 eyr:2030 hcl:#866857 hgt:155cm pid:659180287

ecl:hzl
eyr:2020 iyr:2016 pid:440624039
cid:147
hgt:61in byr:1976 hcl:#733820

hcl:#341e13 pid:178082907 eyr:2023
iyr:2015 byr:1956
ecl:amb hgt:163cm

eyr:2023
iyr:2011 hcl:#cfa07d hgt:164cm
pid:291621559 byr:1960 ecl:gry

hcl:#efcc98 byr:1976
iyr:2017 pid:394566091 cid:248
hgt:176cm ecl:hzl eyr:2026

iyr:2013 eyr:2029 hgt:152cm ecl:gry byr:1984 hcl:#623a2f pid:511780941

pid:953716819 iyr:2010 hgt:156cm ecl:amb
byr:1947
hcl:#18171d eyr:2025

eyr:2025 ecl:amb
iyr:2016
hcl:#cfa07d byr:1925 pid:322787273 hgt:168cm

hgt:59in iyr:2012
pid:916978929 byr:1959
hcl:#c0946f eyr:2021
ecl:brn

byr:2018 eyr:1929 hgt:187in
hcl:z
iyr:2003 pid:0377361331 ecl:utc

byr:1949 hcl:#fffffd pid:071791776 eyr:2030 iyr:2015 hgt:71in ecl:hzl

hcl:#341e13
hgt:154cm byr:1927 eyr:2023 ecl:blu iyr:2017
pid:639867283

hcl:z pid:315276249 byr:2026
hgt:151cm
iyr:2028 eyr:2020
ecl:hzl

hcl:#341e13 eyr:2027 byr:1981 cid:342 pid:999898177 hgt:187cm
ecl:blu iyr:2011

byr:2009
hgt:73cm iyr:1921 hcl:z
pid:181cm
ecl:xry

ecl:hzl
byr:1925
pid:034183103 hcl:#341e13 hgt:158cm eyr:2029 iyr:2010

byr:1976
iyr:2011 hgt:177cm pid:833479839 hcl:#dcab9d ecl:blu eyr:2020

cid:230 hcl:#7d3b0c byr:1954
iyr:2014 eyr:2026 pid:122150889
ecl:brn hgt:182cm

hcl:#a97842
ecl:brn hgt:187cm
eyr:2028
pid:427631634 iyr:2002 byr:2004

pid:912516995 ecl:hzl iyr:2017 hcl:#ceb3a1 byr:1929 eyr:2028
hgt:155cm

pid:019809181
cid:128 iyr:2013 hcl:#f5b9f7 byr:1931
hgt:161cm
ecl:amb

hgt:64in byr:1924
iyr:2016 eyr:2029 ecl:hzl pid:474940085 hcl:#c0946f

pid:172419213
ecl:grn
hgt:193cm iyr:2010 byr:1973 hcl:#6b5442
eyr:2027

ecl:#7b5cfd iyr:2019
byr:2016
eyr:2040 hgt:191in
cid:187 hcl:z pid:#c61084

eyr:2032 iyr:2014 pid:430247344 byr:1967
hcl:#ceb3a1
cid:241
ecl:brn hgt:178in

hcl:#623a2f iyr:2017 cid:235
eyr:2020 byr:1978 ecl:blu hgt:175cm

iyr:2013 ecl:amb hgt:174cm hcl:#866857 pid:285533942 byr:1954

hgt:152cm ecl:blu pid:952587262 eyr:2024
iyr:2019 cid:268 hcl:#602927 byr:1947

hgt:176in cid:245 byr:2011 iyr:2018
eyr:1987
hcl:z
pid:346518170
ecl:utc

hgt:180cm
iyr:2015 ecl:brn eyr:2027 pid:807494368 cid:324 byr:1980

byr:1936 hcl:#866857 ecl:blu
eyr:2021 hgt:187cm
iyr:2016 pid:244556968

byr:1950 cid:125
iyr:2020 hgt:168cm hcl:#c0946f eyr:2030 pid:758313758 ecl:blu

eyr:2021
pid:618915663 hcl:#cfa07d iyr:2018 byr:2002
hgt:157cm ecl:blu

byr:1967
ecl:brn hcl:#c0946f pid:200495802 eyr:2021 iyr:2020
cid:335
hgt:181cm

byr:1996
ecl:brn iyr:2015
eyr:2030
hcl:#fffffd cid:207
pid:022460311 hgt:158cm

eyr:2022 hgt:59cm iyr:2023
byr:1974 pid:354098699 hcl:b244f7
ecl:#219505

hcl:#866857 eyr:2025
pid:370874666
byr:1947
cid:162 ecl:oth hgt:186cm iyr:2011

ecl:hzl eyr:2029
byr:1981
iyr:2012 pid:433430792 cid:252
hgt:171cm

pid:512473844 hgt:186cm iyr:2012 eyr:2028 byr:1949 ecl:hzl hcl:#18171d

hgt:60cm iyr:1934
ecl:#4a4017 pid:3067366202 hcl:1161df
eyr:1938 byr:2008

pid:119509757 hcl:#cfa07d eyr:2022 hgt:174cm byr:1983
iyr:2015
ecl:blu

byr:1955 eyr:2023
cid:114
hcl:f1aa8a pid:609049659 ecl:grn hgt:177cm
iyr:2015

eyr:2027 cid:284
pid:654627982 byr:1964 iyr:2018 hgt:168cm
hcl:#fffffd ecl:oth

iyr:1988
hgt:191cm hcl:b87a62 byr:1990 ecl:xry
pid:996624367 eyr:1960

pid:641466821 eyr:2028 hcl:#7d3b0c
iyr:2010 hgt:175cm ecl:gry

hcl:#b6652a
ecl:oth
byr:1926 eyr:2030 iyr:2019 hgt:183cm
pid:057196056

iyr:2017
eyr:2022 pid:936841429
ecl:blu hcl:#6b5442 cid:179 byr:1927 hgt:161cm

eyr:2021
cid:289 hgt:174cm iyr:2013
ecl:grn pid:329574701 byr:1970

eyr:2021 byr:1939 ecl:gry pid:933505139 iyr:2014 hgt:173cm hcl:#7d3b0c

cid:116 hcl:045bff eyr:2030 iyr:1920
ecl:brn
byr:2030
pid:#38f7f3
hgt:155in

eyr:2028
pid:225829241 byr:1928 hcl:#cfa07d iyr:2019
ecl:oth
hgt:166cm

cid:80 byr:1936
iyr:2017
hgt:94 hcl:#2e7503 ecl:oth eyr:2030
pid:597284996

ecl:oth
iyr:2019 hgt:76in
byr:1956 pid:821874039

eyr:2026 hgt:168cm
pid:019015588
iyr:2010
ecl:amb byr:2009 hcl:#623a2f cid:159

iyr:1980 hgt:167in
pid:380644909 eyr:1966 ecl:blu byr:2004 hcl:z

eyr:2020 iyr:2013
hcl:#08ad66 pid:540886868
ecl:oth byr:1980 hgt:158cm

eyr:2026 hgt:186cm byr:1995
cid:275
hcl:z iyr:1958 ecl:blu

eyr:2026 iyr:2012
hgt:61in byr:1936 pid:390833536 cid:298 ecl:grn hcl:#623a2f

pid:393878498 eyr:2023 ecl:gry byr:1943 iyr:2010 hcl:#888785 hgt:158cm

hgt:191cm cid:197 iyr:2014 byr:1945
hcl:#fffffd
eyr:2020
pid:183948344 ecl:amb

ecl:gmt hgt:88
cid:260 iyr:2024 byr:2022 eyr:2031 hcl:z pid:#532c6e

hcl:#a97842
hgt:160cm eyr:2024 ecl:blu iyr:2015 byr:1970

byr:1964 hgt:178cm
eyr:2025
pid:813643223 ecl:brn iyr:2014
hcl:#ceb3a1

byr:1965 eyr:2024 iyr:2018
hgt:165cm hcl:#18171d ecl:grn pid:475669993

hgt:116
iyr:2024 eyr:1974 hcl:504345 byr:2010 cid:206 pid:166cm ecl:zzz

iyr:2014 eyr:2020 pid:096460673 byr:1948
hgt:153cm
ecl:blu hcl:#341e13

hcl:#ceb3a1
iyr:2017 hgt:67cm
pid:178cm byr:2028 ecl:brn
cid:293

hgt:157cm
hcl:#602927 byr:1941
iyr:2012 pid:611003211 eyr:2029

iyr:2019 byr:2000 pid:083917767 eyr:2024 hgt:172cm
cid:248 hcl:#7e4d15

byr:1946
hgt:160cm iyr:2020 hcl:#559278 pid:989139577
ecl:amb eyr:2020

pid:165cm byr:1927 cid:178 hcl:#733820 iyr:2017 hgt:156in
eyr:2029 ecl:brn

hcl:#18171d hgt:163cm eyr:2022 byr:1962 pid:639124940 cid:258 ecl:hzl
iyr:2015

cid:123 pid:4542006033
eyr:1987 byr:2010 iyr:2029 ecl:amb
hgt:191cm hcl:#18171d

hcl:z
byr:1928 iyr:1965
eyr:2022 hgt:75 ecl:oth pid:400765046

hcl:#c0946f hgt:62in
ecl:blu byr:1978 iyr:1923
cid:260 eyr:2021 pid:404628742

pid:#bf1611 ecl:grn
iyr:2018 cid:146 byr:1948
eyr:2025 hcl:#fffffd hgt:87

pid:767547618
iyr:2018 hcl:#b6652a eyr:2029 hgt:165cm ecl:hzl byr:1937

ecl:blu iyr:2019 pid:960083875 eyr:2027 hgt:71in hcl:#c0946f
byr:1921

iyr:2011
pid:9562042482
hcl:z hgt:59cm
eyr:1994 cid:258 ecl:#6c1bcc byr:2025

eyr:2028 pid:494999718 byr:1928 hgt:176cm
iyr:2015 ecl:oth hcl:#733820

cid:78 eyr:2020 hgt:160cm byr:1947 ecl:blu
hcl:#b6652a iyr:2016 pid:069457741

hcl:#6b5442 iyr:2010
byr:1971
eyr:2028 hgt:169cm ecl:brn pid:528961949

eyr:2028
hcl:#7d3b0c
byr:1952
ecl:hzl
cid:317 iyr:2016
pid:832169844

hcl:#c0946f
ecl:brn
iyr:2017 eyr:2028
pid:161390075 byr:1993 cid:50
hgt:171cm

ecl:#ae12d3 hgt:74cm cid:239 hcl:z pid:345439730 iyr:1924 byr:2029 eyr:2031

"at
struct printf_buffer_number printf_buffer loadstore mem[12] = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
const byte* printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 reg byte a 71.0
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_zero_padding
signed byte printf_number_buffer::len
signed byte printf_number_buffer::padding
void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
struct printf_format_number printf_uint::format
byte printf_uint::format_justify_left
byte printf_uint::format_min_length
byte printf_uint::format_radix
byte printf_uint::format_sign_always
byte printf_uint::format_upper_case
byte printf_uint::format_zero_padding
word printf_uint::uvalue
word printf_uint::uvalue#0 uvalue zp[2]:130 4.0
word printf_uint::uvalue#1 uvalue zp[2]:130 4.0
word printf_uint::uvalue#2 uvalue zp[2]:130 7.5
void putchar(byte putchar::code)
byte putchar::code
byte* putchar::loc
byte* putchar::loc#0 loc zp[2]:147 1.0000001E7
byte putchar::newChar
byte putchar::newChar#0 reg byte a 1.50000015E7
const byte* rawmap[$100]  = kickasm {{ .var ht = Hashtable().put(0,64, 1,0, 2,32, 3,96) // the table for converting bit 6,7 into ora value
	.for(var i=0; i<256; i++) {
		.var idx = (i & $60) / 32
		.var mask = i & $9f
		.byte mask | ht.get(idx)
	}
 }}
const byte* required_tags[]  = "byriyreyrhgthcleclpid"at
void setcursor()
byte setcursor::c
byte setcursor::c#0 reg byte x 7.500000075E7
byte setcursor::c#1 reg byte a 2.00000002E8
byte* setcursor::loc
byte* setcursor::loc#0 loc zp[2]:147 1.00000001E8
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
byte~ utoa::$10 reg byte a 2002.0
byte~ utoa::$11 reg byte a 202.0
byte* utoa::buffer
byte* utoa::buffer#11 buffer zp[2]:140 300.42857142857144
byte* utoa::buffer#14 buffer zp[2]:140 1501.5
byte* utoa::buffer#3 buffer zp[2]:140 202.0
byte* utoa::buffer#4 buffer zp[2]:140 2002.0
byte utoa::digit
byte utoa::digit#1 digit zp[1]:139 2002.0
byte utoa::digit#2 digit zp[1]:139 286.0
word utoa::digit_value
word utoa::digit_value#0 digit_value zp[2]:145 600.5999999999999
word* utoa::digit_values
byte utoa::max_digits
byte utoa::radix
byte utoa::started
byte utoa::started#2 reg byte x 500.5
byte utoa::started#4 reg byte x 1001.0
word utoa::value
word utoa::value#0 value zp[2]:130 1001.0
word utoa::value#1 value zp[2]:130 56.0
word utoa::value#2 value zp[2]:130 586.4285714285714
word utoa::value#6 value zp[2]:130 1501.5
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
byte* utoa_append::buffer
byte* utoa_append::buffer#0 buffer zp[2]:140 1375.25
byte utoa_append::digit
byte utoa_append::digit#1 reg byte x 1000001.0
byte utoa_append::digit#2 reg byte x 1005001.5
word utoa_append::return
word utoa_append::return#0 return zp[2]:130 2002.0
word utoa_append::sub
word utoa_append::sub#0 sub zp[2]:145 333500.5
word utoa_append::value
word utoa_append::value#0 value zp[2]:130 3667.333333333333
word utoa_append::value#1 value zp[2]:130 2000002.0
word utoa_append::value#2 value zp[2]:130 501834.16666666674

zp[2]:128 [ main::pass#10 main::pass#3 main::pass#14 main::pass#1 main::pass#11 main::pass#4 main::pass#5 ]
zp[2]:130 [ main::valid#10 main::valid#8 main::valid#1 printf_uint::uvalue#2 printf_uint::uvalue#0 printf_uint::uvalue#1 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ]
zp[2]:132 [ main::total#10 main::total#1 ]
reg byte x [ main::i#2 main::i#1 ]
reg byte y [ main::num_found#2 main::num_found#6 main::num_found#1 ]
zp[1]:134 [ main::tag_idx#2 main::tag_idx#1 ]
zp[2]:135 [ main::required_tag#6 main::required_tag#1 ]
zp[1]:137 [ main::i1#2 main::i1#1 ]
zp[1]:138 [ main::match#2 main::match#6 main::match#1 ]
zp[1]:139 [ utoa::digit#2 utoa::digit#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
zp[2]:140 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 cputs::s#7 cputs::s#8 cputs::s#0 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:142 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 memcpy::source#0 memset::num#2 memset::end#0 ]
reg byte a [ cputs::c#1 ]
zp[1]:144 [ cputc::c ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte x [ cputc::convertToScreenCode1_return#0 ]
reg byte a [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:145 [ utoa::digit_value#0 utoa_append::sub#0 memset::str#3 memset::str#7 memset::str#8 memset::dst#2 memset::dst#4 memset::dst#1 memset::str#0 newline::start#0 ]
zp[2]:147 [ cursorLocation::return#3 setcursor::loc#0 cursorLocation::return#1 cursorLocation::return#0 putchar::loc#0 cursorLocation::$0 cursorLocation::$1 cursorLocation::$3 cursorLocation::$5 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 memcpy::destination#0 ]
reg byte x [ setcursor::c#0 ]
reg byte a [ setcursor::c#1 ]
reg byte a [ putchar::newChar#0 ]
zp[2]:149 [ memcpy::src_end#0 cursorLocation::$4 ]
mem[12] [ printf_buffer ]


FINAL ASSEMBLER
Score: 786279

  // File Comments
// https://adventofcode.com/2020/day/3
  // Upstart
  // Atari XL/XE executable XEX file with a single segment
// https://www.atarimax.com/jindroush.atari.org/afmtexe.html
.plugin "dk.camelot64.kickass.xexplugin.AtariXex"
.file [name="2020-04.xex", type="bin", segments="XexFile"]
.segmentdef XexFile [segments="Program", modify="XexFormat", _RunAddr=main]
.segmentdef Program [segments="Code, Data"]
.segmentdef Code [start=$2000]
.segmentdef Data [startAfter="Code"]
  // Global Constants & labels
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  // 2-byte saved memory scan counter
  .label SAVMSC = $58
  // data under cursor
  .label OLDCHR = $5d
  // 2-byte saved cursor memory address
  .label OLDADR = $5e
  // Cursor inhibit flag, 0 turns on, any other number turns off. Cursor doesn't change until it moves next.
  .label CRSINH = $2f0
  // Atari ZP registers
  // 1-byte cursor row
  .label ROWCRS = $54
  // 2-byte cursor column
  .label COLCRS = $55
.segment Code
  // main
main: {
    .label pass = $80
    .label valid = $82
    .label total = $84
    .label i1 = $89
    .label match = $8a
    // Read a tag - and examine whether it is one of the required tags
    .label required_tag = $87
    .label tag_idx = $86
    // clrscr()
    // [1] call clrscr 
    jsr clrscr
    // [2] phi from main to main::@1 [phi:main->main::@1]
    // [2] phi main::total#10 = 0 [phi:main->main::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z total
    sta.z total+1
    // [2] phi main::valid#10 = 0 [phi:main->main::@1#1] -- vwuz1=vwuc1 
    sta.z valid
    sta.z valid+1
    // [2] phi main::pass#10 = passports [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<passports
    sta.z pass
    lda #>passports
    sta.z pass+1
    // [2] phi from main::@12 main::@22 main::@24 main::@25 to main::@1 [phi:main::@12/main::@22/main::@24/main::@25->main::@1]
    // [2] phi main::total#10 = main::total#1 [phi:main::@12/main::@22/main::@24/main::@25->main::@1#0] -- register_copy 
    // [2] phi main::valid#10 = main::valid#8 [phi:main::@12/main::@22/main::@24/main::@25->main::@1#1] -- register_copy 
    // [2] phi main::pass#10 = main::pass#3 [phi:main::@12/main::@22/main::@24/main::@25->main::@1#2] -- register_copy 
    // [2] phi from main::@32 main::@33 to main::@1 [phi:main::@32/main::@33->main::@1]
    // main::@1
  __b1:
    // while(*pass)
    // [3] if(0!=*main::pass#10) goto main::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (pass),y
    cmp #0
    bne __b2
    // [4] phi from main::@1 to main::@3 [phi:main::@1->main::@3]
    // main::@3
    // printf("\nValid %u Total %u\n", valid, total)
    // [5] call cputs 
    // [58] phi from main::@3 to cputs [phi:main::@3->cputs]
    // [58] phi cputs::s#8 = main::s [phi:main::@3->cputs#0] -- pbuz1=pbuc1 
    lda #<s
    sta.z cputs.s
    lda #>s
    sta.z cputs.s+1
    jsr cputs
    // main::@28
    // printf("\nValid %u Total %u\n", valid, total)
    // [6] printf_uint::uvalue#0 = main::valid#10
    // [7] call printf_uint 
    // [66] phi from main::@28 to printf_uint [phi:main::@28->printf_uint]
    // [66] phi printf_uint::uvalue#2 = printf_uint::uvalue#0 [phi:main::@28->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [8] phi from main::@28 to main::@29 [phi:main::@28->main::@29]
    // main::@29
    // printf("\nValid %u Total %u\n", valid, total)
    // [9] call cputs 
    // [58] phi from main::@29 to cputs [phi:main::@29->cputs]
    // [58] phi cputs::s#8 = main::s1 [phi:main::@29->cputs#0] -- pbuz1=pbuc1 
    lda #<s1
    sta.z cputs.s
    lda #>s1
    sta.z cputs.s+1
    jsr cputs
    // main::@30
    // printf("\nValid %u Total %u\n", valid, total)
    // [10] printf_uint::uvalue#1 = main::total#10 -- vwuz1=vwuz2 
    lda.z total
    sta.z printf_uint.uvalue
    lda.z total+1
    sta.z printf_uint.uvalue+1
    // [11] call printf_uint 
    // [66] phi from main::@30 to printf_uint [phi:main::@30->printf_uint]
    // [66] phi printf_uint::uvalue#2 = printf_uint::uvalue#1 [phi:main::@30->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [12] phi from main::@30 to main::@31 [phi:main::@30->main::@31]
    // main::@31
    // printf("\nValid %u Total %u\n", valid, total)
    // [13] call cputs 
    // [58] phi from main::@31 to cputs [phi:main::@31->cputs]
    // [58] phi cputs::s#8 = main::s2 [phi:main::@31->cputs#0] -- pbuz1=pbuc1 
    lda #<s2
    sta.z cputs.s
    lda #>s2
    sta.z cputs.s+1
    jsr cputs
    // [14] phi from main::@27 main::@31 to main::@27 [phi:main::@27/main::@31->main::@27]
    // main::@27
  __b27:
    jmp __b27
    // main::@2
  __b2:
    // if(*pass==' ')
    // [15] if(*main::pass#10!=' 'at) goto main::@4 -- _deref_pbuz1_neq_vbuc1_then_la1 
  .encoding "ascii"
    ldy #0
    lda (pass),y
    cmp #' '
    bne __b4
    // main::@24
    // pass++;
    // [16] main::pass#1 = ++ main::pass#10 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    jmp __b1
    // main::@4
  __b4:
    // if(*pass=='\n')
    // [17] if(*main::pass#10!=' 'at) goto main::@13 -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (pass),y
    cmp #'\$9b'
    bne __b7
    // main::@25
    // pass++;
    // [18] main::pass#11 = ++ main::pass#10 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    // if(*pass=='\n')
    // [19] if(*main::pass#11!=' 'at) goto main::@1 -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (pass),y
    cmp #'\$9b'
    bne __b1
    // main::@26
    // pass++;
    // [20] main::pass#3 = ++ main::pass#11 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    // [21] phi from main::@26 to main::@5 [phi:main::@26->main::@5]
    // [21] phi main::num_found#2 = 0 [phi:main::@26->main::@5#0] -- vbuyy=vbuc1 
    ldy #0
    // [21] phi main::i#2 = 0 [phi:main::@26->main::@5#1] -- vbuxx=vbuc1 
    ldx #0
    // main::@5
  __b5:
    // for(char i=0;i<NUM_REQUIRED_TAGS;i++)
    // [22] if(main::i#2<7) goto main::@6 -- vbuxx_lt_vbuc1_then_la1 
    cpx #7
    bcc __b6
    // main::@7
    // if(num_found==NUM_REQUIRED_TAGS)
    // [23] if(main::num_found#2==7) goto main::@11 -- vbuyy_eq_vbuc1_then_la1 
    cpy #7
    beq __b11
    // [24] phi from main::@7 to main::@10 [phi:main::@7->main::@10]
    // main::@10
    // printf(".")
    // [25] call cputs 
    // [58] phi from main::@10 to cputs [phi:main::@10->cputs]
    // [58] phi cputs::s#8 = main::s4 [phi:main::@10->cputs#0] -- pbuz1=pbuc1 
    lda #<s4
    sta.z cputs.s
    lda #>s4
    sta.z cputs.s+1
    jsr cputs
    // [26] phi from main::@10 main::@11 to main::@12 [phi:main::@10/main::@11->main::@12]
    // [26] phi main::valid#8 = main::valid#10 [phi:main::@10/main::@11->main::@12#0] -- register_copy 
    // main::@12
  __b12:
    // total++;
    // [27] main::total#1 = ++ main::total#10 -- vwuz1=_inc_vwuz1 
    inc.z total
    bne !+
    inc.z total+1
  !:
    jmp __b1
    // main::@11
  __b11:
    // valid++;
    // [28] main::valid#1 = ++ main::valid#10 -- vwuz1=_inc_vwuz1 
    inc.z valid
    bne !+
    inc.z valid+1
  !:
    // printf("+")
    // [29] call cputs 
    // [58] phi from main::@11 to cputs [phi:main::@11->cputs]
    // [58] phi cputs::s#8 = main::s3 [phi:main::@11->cputs#0] -- pbuz1=pbuc1 
    lda #<s3
    sta.z cputs.s
    lda #>s3
    sta.z cputs.s+1
    jsr cputs
    jmp __b12
    // main::@6
  __b6:
    // if(tags_found[i])
    // [30] if(0==main::tags_found[main::i#2]) goto main::@8 -- 0_eq_pbuc1_derefidx_vbuxx_then_la1 
    lda tags_found,x
    cmp #0
    beq __b8
    // main::@9
    // num_found++;
    // [31] main::num_found#1 = ++ main::num_found#2 -- vbuyy=_inc_vbuyy 
    iny
    // [32] phi from main::@6 main::@9 to main::@8 [phi:main::@6/main::@9->main::@8]
    // [32] phi main::num_found#6 = main::num_found#2 [phi:main::@6/main::@9->main::@8#0] -- register_copy 
    // main::@8
  __b8:
    // tags_found[i] = 0
    // [33] main::tags_found[main::i#2] = 0 -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #0
    sta tags_found,x
    // for(char i=0;i<NUM_REQUIRED_TAGS;i++)
    // [34] main::i#1 = ++ main::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [21] phi from main::@8 to main::@5 [phi:main::@8->main::@5]
    // [21] phi main::num_found#2 = main::num_found#6 [phi:main::@8->main::@5#0] -- register_copy 
    // [21] phi main::i#2 = main::i#1 [phi:main::@8->main::@5#1] -- register_copy 
    jmp __b5
    // [35] phi from main::@4 to main::@13 [phi:main::@4->main::@13]
  __b7:
    // [35] phi main::required_tag#6 = required_tags [phi:main::@4->main::@13#0] -- pbuz1=pbuc1 
    lda #<required_tags
    sta.z required_tag
    lda #>required_tags
    sta.z required_tag+1
    // [35] phi main::tag_idx#2 = 0 [phi:main::@4->main::@13#1] -- vbuz1=vbuc1 
    lda #0
    sta.z tag_idx
    // main::@13
  __b13:
    // for(char tag_idx=0;tag_idx<NUM_REQUIRED_TAGS;tag_idx++)
    // [36] if(main::tag_idx#2<7) goto main::@14 -- vbuz1_lt_vbuc1_then_la1 
    lda.z tag_idx
    cmp #7
    bcc __b10
    // main::@21
  __b21:
    // pass +=3
    // [37] main::pass#4 = main::pass#10 + 3 -- pbuz1=pbuz1_plus_vbuc1 
    lda #3
    clc
    adc.z pass
    sta.z pass
    bcc !+
    inc.z pass+1
  !:
    // [38] phi from main::@21 main::@23 to main::@22 [phi:main::@21/main::@23->main::@22]
  __b9:
    // [38] phi main::pass#14 = main::pass#4 [phi:main::@21/main::@23->main::@22#0] -- register_copy 
  // Skip letters until we hit another whitespace
    // main::@22
    // while(*pass && *pass!=' ' && *pass!='\n')
    // [39] if(0==*main::pass#14) goto main::@1 -- 0_eq__deref_pbuz1_then_la1 
    ldy #0
    lda (pass),y
    cmp #0
    bne !__b1+
    jmp __b1
  !__b1:
    // main::@33
    // [40] if(*main::pass#14==' 'at) goto main::@1 -- _deref_pbuz1_eq_vbuc1_then_la1 
    lda #' '
    cmp (pass),y
    bne !__b1+
    jmp __b1
  !__b1:
    // main::@32
    // [41] if(*main::pass#14!=' 'at) goto main::@23 -- _deref_pbuz1_neq_vbuc1_then_la1 
    lda (pass),y
    cmp #'\$9b'
    bne __b23
    jmp __b1
    // main::@23
  __b23:
    // pass++;
    // [42] main::pass#5 = ++ main::pass#14 -- pbuz1=_inc_pbuz1 
    inc.z pass
    bne !+
    inc.z pass+1
  !:
    jmp __b9
    // [43] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
  __b10:
    // [43] phi main::match#2 = 0 [phi:main::@13->main::@14#0] -- vbuz1=vbuc1 
    lda #0
    sta.z match
    // [43] phi main::i1#2 = 0 [phi:main::@13->main::@14#1] -- vbuz1=vbuc1 
    sta.z i1
    // main::@14
  __b14:
    // for(char i=0;i<3;i++)
    // [44] if(main::i1#2<3) goto main::@15 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i1
    cmp #3
    bcc __b15
    // main::@16
    // if(match==3)
    // [45] if(main::match#2!=3) goto main::@20 -- vbuz1_neq_vbuc1_then_la1 
    lda #3
    cmp.z match
    bne __b20
    // main::@19
    // tags_found[tag_idx] = 1
    // [46] main::tags_found[main::tag_idx#2] = 1 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #1
    ldy.z tag_idx
    sta tags_found,y
    jmp __b21
    // main::@20
  __b20:
    // required_tag += 3
    // [47] main::required_tag#1 = main::required_tag#6 + 3 -- pbuz1=pbuz1_plus_vbuc1 
    lda #3
    clc
    adc.z required_tag
    sta.z required_tag
    bcc !+
    inc.z required_tag+1
  !:
    // for(char tag_idx=0;tag_idx<NUM_REQUIRED_TAGS;tag_idx++)
    // [48] main::tag_idx#1 = ++ main::tag_idx#2 -- vbuz1=_inc_vbuz1 
    inc.z tag_idx
    // [35] phi from main::@20 to main::@13 [phi:main::@20->main::@13]
    // [35] phi main::required_tag#6 = main::required_tag#1 [phi:main::@20->main::@13#0] -- register_copy 
    // [35] phi main::tag_idx#2 = main::tag_idx#1 [phi:main::@20->main::@13#1] -- register_copy 
    jmp __b13
    // main::@15
  __b15:
    // if(required_tag[i]==pass[i])
    // [49] if(main::required_tag#6[main::i1#2]!=main::pass#10[main::i1#2]) goto main::@17 -- pbuz1_derefidx_vbuz2_neq_pbuz3_derefidx_vbuz2_then_la1 
    ldy.z i1
    lda (required_tag),y
    tax
    lda (pass),y
    tay
    stx.z $ff
    cpy.z $ff
    bne __b17
    // main::@18
    // match++;
    // [50] main::match#1 = ++ main::match#2 -- vbuz1=_inc_vbuz1 
    inc.z match
    // [51] phi from main::@15 main::@18 to main::@17 [phi:main::@15/main::@18->main::@17]
    // [51] phi main::match#6 = main::match#2 [phi:main::@15/main::@18->main::@17#0] -- register_copy 
    // main::@17
  __b17:
    // for(char i=0;i<3;i++)
    // [52] main::i1#1 = ++ main::i1#2 -- vbuz1=_inc_vbuz1 
    inc.z i1
    // [43] phi from main::@17 to main::@14 [phi:main::@17->main::@14]
    // [43] phi main::match#2 = main::match#6 [phi:main::@17->main::@14#0] -- register_copy 
    // [43] phi main::i1#2 = main::i1#1 [phi:main::@17->main::@14#1] -- register_copy 
    jmp __b14
  .segment Data
    tags_found: .fill 7, 0
    s: .text @"\$9bValid "
    .byte 0
    s1: .text " Total "
    .byte 0
    s2: .text @"\$9b"
    .byte 0
    s3: .text "+"
    .byte 0
    s4: .text "."
    .byte 0
}
.segment Code
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    // [53] memset::str#7 = (void*)*SAVMSC -- pvoz1=_deref_qvoc1 
    lda SAVMSC
    sta.z memset.str
    lda SAVMSC+1
    sta.z memset.str+1
    // memset(*SAVMSC, 0x00, CONIO_WIDTH * CONIO_HEIGHT)
    // [54] call memset 
  // Fill entire screen with spaces
    // [73] phi from clrscr to memset [phi:clrscr->memset]
    // [73] phi memset::str#3 = memset::str#7 [phi:clrscr->memset#0] -- register_copy 
    // [73] phi memset::num#2 = (word)$28*$18 [phi:clrscr->memset#1] -- vwuz1=vwuc1 
    lda #<$28*$18
    sta.z memset.num
    lda #>$28*$18
    sta.z memset.num+1
    jsr memset
    // clrscr::@1
    // *OLDCHR = 0x00
    // [55] *OLDCHR = 0 -- _deref_pbuc1=vbuc2 
    // 0x00 is screencode for space character
    // set the old character to a space so the cursor doesn't reappear at the last position it was at
    lda #0
    sta OLDCHR
    // gotoxy(0,0)
    // [56] call gotoxy 
    jsr gotoxy
    // clrscr::@return
    // }
    // [57] return 
    rts
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp($8c) s)
cputs: {
    .label s = $8c
    // [59] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
    // [59] phi cputs::s#7 = cputs::s#8 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    // cputs::@1
  __b1:
    // while (c = *s++)
    // [60] cputs::c#1 = *cputs::s#7 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [61] cputs::s#0 = ++ cputs::s#7 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [62] if(0!=cputs::c#1) goto cputs::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // cputs::@return
    // }
    // [63] return 
    rts
    // cputs::@2
  __b2:
    // cputc(c)
    // [64] cputc::c = cputs::c#1 -- vbuz1=vbuaa 
    sta.z cputc.c
    // [65] call cputc 
    jsr cputc
    jmp __b1
}
  // printf_uint
// Print an unsigned int using a specific format
// printf_uint(word zp($82) uvalue)
printf_uint: {
    .label uvalue = $82
    // printf_uint::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [67] *((byte*)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // utoa(uvalue, printf_buffer.digits, format.radix)
    // [68] utoa::value#1 = printf_uint::uvalue#2
    // [69] call utoa 
  // Format number into buffer
    // [103] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
    jsr utoa
    // printf_uint::@2
    // printf_number_buffer(printf_buffer, format)
    // [70] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer) -- vbuaa=_deref_pbuc1 
    lda printf_buffer
    // [71] call printf_number_buffer 
  // Print using format
    // [124] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
    jsr printf_number_buffer
    // printf_uint::@return
    // }
    // [72] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(byte* zp($91) str, word zp($8e) num)
memset: {
    .label end = $8e
    .label dst = $91
    .label str = $91
    .label num = $8e
    // if(num>0)
    // [74] if(memset::num#2<=0) goto memset::@return -- vwuz1_le_0_then_la1 
    lda.z num
    bne !+
    lda.z num+1
    beq __breturn
  !:
    // memset::@1
    // end = (char*)str + num
    // [75] memset::end#0 = (byte*)memset::str#3 + memset::num#2 -- pbuz1=pbuz2_plus_vwuz1 
    lda.z end
    clc
    adc.z str
    sta.z end
    lda.z end+1
    adc.z str+1
    sta.z end+1
    // [76] memset::dst#4 = (byte*)memset::str#3
    // [77] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
    // [77] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    // memset::@2
  __b2:
    // for(char* dst = str; dst!=end; dst++)
    // [78] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    // memset::@return
  __breturn:
    // }
    // [79] return 
    rts
    // memset::@3
  __b3:
    // *dst = c
    // [80] *memset::dst#2 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [81] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2
}
  // gotoxy
// Set the cursor to the specified position
gotoxy: {
    .const x = 0
    .const y = 0
    // *COLCRS = x
    // [82] *COLCRS = gotoxy::x#1 -- _deref_pwuc1=vbuc2 
    lda #0
    sta COLCRS+1
    lda #<x
    sta COLCRS
    // *ROWCRS = y
    // [83] *ROWCRS = gotoxy::y#1 -- _deref_pbuc1=vbuc2 
    lda #y
    sta ROWCRS
    // setcursor()
    // [84] call setcursor 
    jsr setcursor
    // gotoxy::@return
    // }
    // [85] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($90) c)
cputc: {
    .label convertToScreenCode1_v = c
    .label c = $90
    // if (c == '\r')
    // [86] if(cputc::c==' 'at) goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\r'
    cmp.z c
    beq __b1
    // cputc::@3
    // if(c == '\n' || c == 0x9b)
    // [87] if(cputc::c==' 'at) goto cputc::@2 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\$9b'
    cmp.z c
    beq __b2
    // cputc::@8
    // [88] if(cputc::c==$9b) goto cputc::@2 -- vbuz1_eq_vbuc1_then_la1 
    lda #$9b
    cmp.z c
    beq __b2
    // cputc::convertToScreenCode1
    // return rawmap[*v];
    // [89] cputc::convertToScreenCode1_return#0 = rawmap[*cputc::convertToScreenCode1_v#0] -- vbuxx=pbuc1_derefidx_(_deref_pbuc2) 
    ldy.z convertToScreenCode1_v
    ldx rawmap,y
    // [90] phi from cputc::convertToScreenCode1 to cputc::@6 [phi:cputc::convertToScreenCode1->cputc::@6]
    // cputc::@6
    // putchar(convertToScreenCode(&c))
    // [91] call putchar 
    jsr putchar
    // cputc::@7
    // (*COLCRS)++;
    // [92] *COLCRS = ++ *COLCRS -- _deref_pwuc1=_inc__deref_pwuc1 
    inc COLCRS
    bne !+
    inc COLCRS+1
  !:
    // if (*COLCRS == CONIO_WIDTH)
    // [93] if(*COLCRS==$28) goto cputc::@5 -- _deref_pwuc1_eq_vbuc2_then_la1 
    lda COLCRS+1
    bne !+
    lda COLCRS
    cmp #$28
    beq __b5
  !:
    // [94] phi from cputc::@7 to cputc::@4 [phi:cputc::@7->cputc::@4]
    // cputc::@4
    // setcursor()
    // [95] call setcursor 
    jsr setcursor
    // cputc::@return
    // }
    // [96] return 
    rts
    // cputc::@5
  __b5:
    // *COLCRS = 0
    // [97] *COLCRS = 0 -- _deref_pwuc1=vbuc2 
    lda #0
    sta COLCRS+1
    sta COLCRS
    // newline()
    // [98] call newline 
    jsr newline
    rts
    // cputc::@2
  __b2:
    // *COLCRS = 0
    // [99] *COLCRS = 0 -- _deref_pwuc1=vbuc2 
    // 0x0a LF, or atascii EOL
    lda #0
    sta COLCRS+1
    sta COLCRS
    // newline()
    // [100] call newline 
    jsr newline
    rts
    // cputc::@1
  __b1:
    // *COLCRS = 0
    // [101] *COLCRS = 0 -- _deref_pwuc1=vbuc2 
    // 0x0d, CR = just set the cursor x value to 0
    lda #0
    sta COLCRS+1
    sta COLCRS
    // setcursor()
    // [102] call setcursor 
    jsr setcursor
    rts
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp($82) value, byte* zp($8c) buffer)
utoa: {
    .label digit_value = $91
    .label buffer = $8c
    .label digit = $8b
    .label value = $82
    // [104] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
    // [104] phi utoa::buffer#11 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [104] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [104] phi utoa::value#2 = utoa::value#1 [phi:utoa->utoa::@1#2] -- register_copy 
    // [104] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    txa
    sta.z digit
    // utoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [105] if(utoa::digit#2<5-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #5-1
    bcc __b2
    // utoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [106] utoa::$11 = (byte)utoa::value#2 -- vbuaa=_byte_vwuz1 
    lda.z value
    // [107] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [108] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [109] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // utoa::@return
    // }
    // [110] return 
    rts
    // utoa::@2
  __b2:
    // digit_value = digit_values[digit]
    // [111] utoa::$10 = utoa::digit#2 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [112] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // if (started || value >= digit_value)
    // [113] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    // utoa::@7
    // [114] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [115] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
    // [115] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [115] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [115] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    // utoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [116] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [104] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
    // [104] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [104] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [104] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [104] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // utoa_append(buffer++, value, digit_value)
    // [117] utoa_append::buffer#0 = utoa::buffer#11
    // [118] utoa_append::value#0 = utoa::value#2
    // [119] utoa_append::sub#0 = utoa::digit_value#0
    // [120] call utoa_append 
    // [165] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
    jsr utoa_append
    // utoa_append(buffer++, value, digit_value)
    // [121] utoa_append::return#0 = utoa_append::value#2
    // utoa::@6
    // value = utoa_append(buffer++, value, digit_value)
    // [122] utoa::value#0 = utoa_append::return#0
    // value = utoa_append(buffer++, value, digit_value);
    // [123] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [115] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
    // [115] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [115] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [115] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte register(A) buffer_sign)
printf_number_buffer: {
    .label buffer_digits = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    // printf_number_buffer::@1
    // if(buffer.sign)
    // [125] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2
    // printf_number_buffer::@3
    // cputc(buffer.sign)
    // [126] cputc::c = printf_number_buffer::buffer_sign#0 -- vbuz1=vbuaa 
    sta.z cputc.c
    // [127] call cputc 
    jsr cputc
    // [128] phi from printf_number_buffer::@1 printf_number_buffer::@3 to printf_number_buffer::@2 [phi:printf_number_buffer::@1/printf_number_buffer::@3->printf_number_buffer::@2]
    // printf_number_buffer::@2
  __b2:
    // cputs(buffer.digits)
    // [129] call cputs 
    // [58] phi from printf_number_buffer::@2 to cputs [phi:printf_number_buffer::@2->cputs]
    // [58] phi cputs::s#8 = printf_number_buffer::buffer_digits#0 [phi:printf_number_buffer::@2->cputs#0] -- pbuz1=pbuc1 
    lda #<buffer_digits
    sta.z cputs.s
    lda #>buffer_digits
    sta.z cputs.s+1
    jsr cputs
    // printf_number_buffer::@return
    // }
    // [130] return 
    rts
}
  // setcursor
// Handles cursor movement, displaying it if required, and inverting character it is over if there is one (and enabled)
setcursor: {
    .label loc = $93
    // **OLDADR = *OLDCHR
    // [131] *(*OLDADR) = *OLDCHR -- _deref_(_deref_qbuc1)=_deref_pbuc2 
    // save the current oldchr into oldadr
    lda OLDCHR
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    sta ($fe),y
    // cursorLocation()
    // [132] call cursorLocation 
    jsr cursorLocation
    // [133] cursorLocation::return#3 = cursorLocation::return#1
    // setcursor::@3
    // loc = cursorLocation()
    // [134] setcursor::loc#0 = cursorLocation::return#3
    // c = *loc
    // [135] setcursor::c#0 = *setcursor::loc#0 -- vbuxx=_deref_pbuz1 
    ldy #0
    lda (loc),y
    tax
    // *OLDCHR = c
    // [136] *OLDCHR = setcursor::c#0 -- _deref_pbuc1=vbuxx 
    stx OLDCHR
    // *OLDADR = loc
    // [137] *OLDADR = setcursor::loc#0 -- _deref_qbuc1=pbuz1 
    lda.z loc
    sta OLDADR
    lda.z loc+1
    sta OLDADR+1
    // setcursor::@2
    // *CRSINH = 0
    // [138] *CRSINH = 0 -- _deref_pbuc1=vbuc2 
    // cursor is on, so invert the inverse bit and turn cursor on
    tya
    sta CRSINH
    // c = c ^ 0x80
    // [139] setcursor::c#1 = setcursor::c#0 ^ $80 -- vbuaa=vbuxx_bxor_vbuc1 
    txa
    eor #$80
    // setcursor::@1
    // **OLDADR = c
    // [140] *(*OLDADR) = setcursor::c#1 -- _deref_(_deref_qbuc1)=vbuaa 
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    sta ($fe),y
    // setcursor::@return
    // }
    // [141] return 
    rts
}
  // putchar
// Puts a character to the screen a the current location. Uses internal screencode. Deals with storing the old cursor value
putchar: {
    .label loc = $93
    // **OLDADR = *OLDCHR
    // [142] *(*OLDADR) = *OLDCHR -- _deref_(_deref_qbuc1)=_deref_pbuc2 
    lda OLDCHR
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    sta ($fe),y
    // cursorLocation()
    // [143] call cursorLocation 
    jsr cursorLocation
    // [144] cursorLocation::return#0 = cursorLocation::return#1
    // putchar::@1
    // loc = cursorLocation()
    // [145] putchar::loc#0 = cursorLocation::return#0
    // newChar = code | conio_reverse_value
    // [146] putchar::newChar#0 = cputc::convertToScreenCode1_return#0 -- vbuaa=vbuxx 
    txa
    // *loc = newChar
    // [147] *putchar::loc#0 = putchar::newChar#0 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (loc),y
    // *OLDCHR = newChar
    // [148] *OLDCHR = putchar::newChar#0 -- _deref_pbuc1=vbuaa 
    sta OLDCHR
    // setcursor()
    // [149] call setcursor 
    jsr setcursor
    // putchar::@return
    // }
    // [150] return 
    rts
}
  // newline
newline: {
    .label start = $91
    // if ((*ROWCRS)++ == CONIO_HEIGHT)
    // [151] *ROWCRS = ++ *ROWCRS -- _deref_pbuc1=_inc__deref_pbuc1 
    inc ROWCRS
    // [152] if(*ROWCRS!=$18) goto newline::@1 -- _deref_pbuc1_neq_vbuc2_then_la1 
    lda #$18
    cmp ROWCRS
    bne __b1
    // newline::@3
    // **OLDADR ^= 0x80
    // [153] *(*OLDADR) = *(*OLDADR) ^ $80 -- _deref_(_deref_qbuc1)=_deref_(_deref_qbuc1)_bxor_vbuc2 
    ldy OLDADR
    sty.z $fe
    ldy OLDADR+1
    sty.z $ff
    ldy #0
    lda ($fe),y
    eor #$80
    sta ($fe),y
    // newline::@2
    // start = *SAVMSC
    // [154] newline::start#0 = *SAVMSC -- pbuz1=_deref_qbuc1 
    // move screen up 1 line
    lda SAVMSC
    sta.z start
    lda SAVMSC+1
    sta.z start+1
    // start + CONIO_WIDTH
    // [155] memcpy::source#0 = newline::start#0 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z start
    sta.z memcpy.source
    tya
    adc.z start+1
    sta.z memcpy.source+1
    // memcpy(start, start + CONIO_WIDTH, CONIO_WIDTH * 23)
    // [156] memcpy::destination#0 = (void*)newline::start#0 -- pvoz1=pvoz2 
    lda.z start
    sta.z memcpy.destination
    lda.z start+1
    sta.z memcpy.destination+1
    // [157] call memcpy 
    jsr memcpy
    // newline::@4
    // start + CONIO_WIDTH * 23
    // [158] memset::str#0 = newline::start#0 + (word)$28*$17 -- pbuz1=pbuz1_plus_vwuc1 
    clc
    lda.z memset.str
    adc #<$28*$17
    sta.z memset.str
    lda.z memset.str+1
    adc #>$28*$17
    sta.z memset.str+1
    // [159] memset::str#8 = (void*)memset::str#0
    // memset(start + CONIO_WIDTH * 23, 0x00, CONIO_WIDTH)
    // [160] call memset 
    // [73] phi from newline::@4 to memset [phi:newline::@4->memset]
    // [73] phi memset::str#3 = memset::str#8 [phi:newline::@4->memset#0] -- register_copy 
    // [73] phi memset::num#2 = $28 [phi:newline::@4->memset#1] -- vwuz1=vbuc1 
    lda #<$28
    sta.z memset.num
    lda #>$28
    sta.z memset.num+1
    jsr memset
    // newline::@5
    // *ROWCRS = CONIO_HEIGHT - 1
    // [161] *ROWCRS = $18-1 -- _deref_pbuc1=vbuc2 
    lda #$18-1
    sta ROWCRS
    // [162] phi from newline newline::@5 to newline::@1 [phi:newline/newline::@5->newline::@1]
    // newline::@1
  __b1:
    // setcursor()
    // [163] call setcursor 
    jsr setcursor
    // newline::@return
    // }
    // [164] return 
    rts
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp($8c) buffer, word zp($82) value, word zp($91) sub)
utoa_append: {
    .label buffer = $8c
    .label value = $82
    .label sub = $91
    .label return = $82
    // [166] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
    // [166] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [166] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    // utoa_append::@1
  __b1:
    // while (value >= sub)
    // [167] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    // utoa_append::@3
    // *buffer = DIGITS[digit]
    // [168] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // utoa_append::@return
    // }
    // [169] return 
    rts
    // utoa_append::@2
  __b2:
    // digit++;
    // [170] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // value -= sub
    // [171] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [166] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
    // [166] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [166] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // cursorLocation
// Return a pointer to the location of the cursor
cursorLocation: {
    .label __0 = $93
    .label __1 = $93
    .label __3 = $93
    .label return = $93
    .label __4 = $95
    .label __5 = $93
    // (word)(*ROWCRS)*CONIO_WIDTH
    // [172] cursorLocation::$3 = (word)*ROWCRS -- vwuz1=_word__deref_pbuc1 
    lda ROWCRS
    sta.z __3
    lda #0
    sta.z __3+1
    // [173] cursorLocation::$4 = cursorLocation::$3 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __3
    asl
    sta.z __4
    lda.z __3+1
    rol
    sta.z __4+1
    asl.z __4
    rol.z __4+1
    // [174] cursorLocation::$5 = cursorLocation::$4 + cursorLocation::$3 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __5
    clc
    adc.z __4
    sta.z __5
    lda.z __5+1
    adc.z __4+1
    sta.z __5+1
    // [175] cursorLocation::$0 = cursorLocation::$5 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z __0
    rol.z __0+1
    asl.z __0
    rol.z __0+1
    asl.z __0
    rol.z __0+1
    // *SAVMSC + (word)(*ROWCRS)*CONIO_WIDTH
    // [176] cursorLocation::$1 = *SAVMSC + cursorLocation::$0 -- pbuz1=_deref_qbuc1_plus_vwuz1 
    clc
    lda.z __1
    adc SAVMSC
    sta.z __1
    lda.z __1+1
    adc SAVMSC+1
    sta.z __1+1
    // *SAVMSC + (word)(*ROWCRS)*CONIO_WIDTH + *COLCRS
    // [177] cursorLocation::return#1 = cursorLocation::$1 + *COLCRS -- pbuz1=pbuz1_plus__deref_pwuc1 
    clc
    lda COLCRS
    adc.z return
    sta.z return
    lda COLCRS+1
    adc.z return+1
    sta.z return+1
    // cursorLocation::@return
    // }
    // [178] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($93) destination, byte* zp($8e) source)
memcpy: {
    .const num = $28*$17
    .label src_end = $95
    .label dst = $93
    .label src = $8e
    .label destination = $93
    .label source = $8e
    // src_end = (char*)source+num
    // [179] memcpy::src_end#0 = (byte*)(void*)memcpy::source#0 + memcpy::num#0 -- pbuz1=pbuz2_plus_vwuc1 
    clc
    lda.z source
    adc #<num
    sta.z src_end
    lda.z source+1
    adc #>num
    sta.z src_end+1
    // [180] memcpy::src#4 = (byte*)(void*)memcpy::source#0
    // [181] memcpy::dst#4 = (byte*)memcpy::destination#0
    // [182] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
    // [182] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [182] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    // memcpy::@1
  __b1:
    // while(src!=src_end)
    // [183] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    // memcpy::@return
    // }
    // [184] return 
    rts
    // memcpy::@2
  __b2:
    // *dst++ = *src++
    // [185] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta (dst),y
    // *dst++ = *src++;
    // [186] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [187] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  // create a static table to map char value to screen value
  // use KickAsm functions to create a table of code -> screen code values, using cc65 algorithm
rawmap:
.var ht = Hashtable().put(0,64, 1,0, 2,32, 3,96) // the table for converting bit 6,7 into ora value
	.for(var i=0; i<256; i++) {
		.var idx = (i & $60) / 32
		.var mask = i & $9f
		.byte mask | ht.get(idx)
	}

  // The required tags
  required_tags: .text "byriyreyrhgthcleclpid"
  .byte 0
  passports: .text @"ecl:grn\$9bcid:315 iyr:2012 hgt:192cm eyr:2023 pid:873355140 byr:1925 hcl:#cb2c03\$9b\$9bbyr:2027 hcl:ec0cfd ecl:blu cid:120\$9beyr:1937 pid:106018766 iyr:2010 hgt:154cm\$9b\$9bbyr:1965 eyr:2028 hgt:157cm\$9bcid:236 iyr:2018 ecl:brn\$9bhcl:#cfa07d pid:584111467\$9b\$9beyr:2029 ecl:hzl\$9biyr:1972 byr:1966\$9bpid:2898897192\$9bhgt:59cm hcl:z\$9b\$9bpid:231652013 hcl:#602927 hgt:166\$9becl:grn eyr:2025\$9bbyr:2008 iyr:1986\$9b\$9bbyr:1928 hgt:167cm\$9bhcl:#18171d iyr:2012\$9becl:oth pid:237657808 eyr:1944\$9b\$9bhgt:73in ecl:grn byr:1931 pid:358388825 iyr:2020\$9bhcl:#602927 eyr:2020\$9b\$9bhcl:#efcc98 eyr:2024 ecl:hzl\$9bbyr:2030 hgt:192cm\$9biyr:2013 pid:7479289410\$9b\$9bpid:053467220 iyr:2012 hgt:169cm\$9bcid:149 hcl:#866857\$9beyr:2030\$9bbyr:1995 ecl:oth\$9b\$9bhgt:162cm hcl:#efcc98 ecl:grn byr:1985 pid:419840766\$9beyr:2022\$9biyr:2020\$9b\$9bpid:22086957 hcl:c69235 ecl:#c458c5 eyr:1986 byr:2014 hgt:72cm iyr:1934\$9b\$9bhcl:#866857\$9becl:brn eyr:2024\$9biyr:2017\$9bpid:505225484 cid:144\$9bbyr:1980\$9bhgt:170cm\$9b\$9bhcl:#866857 ecl:gry\$9bbyr:1972 iyr:2019 eyr:2023\$9bcid:234 pid:721290041 hgt:191cm\$9b\$9bpid:346301363\$9beyr:2020\$9bhcl:#733820 iyr:2019 hgt:177cm\$9bbyr:1998\$9b\$9bhgt:157cm byr:1963\$9bpid:898055805\$9bhcl:#fffffd ecl:blu iyr:2017 cid:87\$9beyr:2030\$9b\$9bpid:605900764 iyr:2011\$9bhgt:73in ecl:hzl eyr:2024\$9bhcl:#888785\$9bcid:281\$9b\$9biyr:2010 eyr:2026 hcl:#4f7e76 pid:883386029 byr:1946 ecl:brn\$9b\$9bhcl:z\$9biyr:2020 pid:9121928466 byr:2014 ecl:zzz eyr:2025\$9bhgt:172in\$9b\$9bhgt:151cm cid:163 pid:670884417 iyr:2012\$9becl:oth hcl:#ceb3a1\$9beyr:2028\$9b\$9bhcl:z cid:92 hgt:69cm\$9bbyr:2008 pid:492284612\$9beyr:2020 iyr:2023\$9becl:hzl\$9b\$9bbyr:1933\$9bhcl:#7d3b0c eyr:2020 hgt:170cm\$9bpid:949064511 iyr:2010\$9becl:oth\$9b\$9beyr:2025 byr:1989 ecl:oth cid:100 hgt:182cm\$9bpid:629190040 iyr:2017 hcl:#b6652a\$9b\$9becl:hzl cid:76 hcl:#e71392 eyr:2021 iyr:2013 byr:1995\$9bpid:762177473\$9bhgt:179cm\$9b\$9bpid:198500564 eyr:2029 hcl:#733820 cid:51 iyr:2012\$9bhgt:70in byr:1938 ecl:oth\$9b\$9bhgt:190cm ecl:brn byr:1952 iyr:2015 hcl:#623a2f\$9beyr:2023\$9b\$9bhgt:169cm hcl:#602927 byr:2001 pid:823979592 iyr:2016 eyr:2029\$9b\$9biyr:2010 ecl:gry\$9beyr:2022 hgt:156cm byr:1953 pid:434063393\$9bhcl:#733820\$9b\$9bpid:091724580 hcl:a7069e eyr:1984 ecl:#95d01e byr:2012 iyr:2005\$9b\$9beyr:2022 byr:1972 hcl:#866857 ecl:hzl pid:227453248\$9bhgt:153cm cid:324 iyr:2018\$9b\$9bcid:195 pid:049871343\$9beyr:2024 hgt:169cm\$9bbyr:1952 iyr:2010 ecl:grn\$9b\$9beyr:2035 pid:189cm\$9bhgt:77 iyr:1973 ecl:#dc83d5\$9bhcl:z byr:2004\$9b\$9bbyr:2027\$9bpid:89338932 hcl:1de39e ecl:grn hgt:159in eyr:2034 iyr:1937\$9b\$9bpid:076534920\$9bhgt:152cm\$9bbyr:1969\$9becl:blu\$9bhcl:#866857 iyr:2011 eyr:2024\$9b\$9biyr:2019 eyr:2028\$9becl:blu hgt:169cm\$9bhcl:#888785 pid:332202163 byr:1923\$9b\$9bhgt:65in byr:1964 iyr:2019\$9bpid:287612987 ecl:hzl cid:213 eyr:2023 hcl:#ceb3a1\$9b\$9bhcl:#623a2f pid:182484027\$9biyr:2016 ecl:brn byr:1943\$9bhgt:71in eyr:2021 cid:344\$9b\$9bhcl:#cdee64 iyr:2011 ecl:brn eyr:2026 hgt:176cm\$9bbyr:1985 pid:978641227\$9b\$9beyr:2029 ecl:brn hgt:173cm byr:1920 cid:211\$9bhcl:#866857\$9biyr:2016 pid:289769625\$9b\$9bhcl:#7d3b0c pid:770938833 iyr:2010 byr:1941 ecl:oth eyr:2029 hgt:161cm\$9b\$9bhgt:172cm iyr:2015 ecl:gry byr:1948\$9beyr:2029\$9bpid:466359109 hcl:#341e13\$9b\$9bcid:74 pid:405199325 ecl:blu\$9bhcl:#6b5442\$9beyr:1980 byr:2024 hgt:174cm iyr:2011\$9b\$9bhgt:183cm pid:075760048 cid:78 byr:1960 ecl:hzl eyr:2030 hcl:#6b5442 iyr:2014\$9b\$9bcid:264 hcl:#7d3b0c\$9becl:blu iyr:2011 eyr:2020 hgt:182cm\$9bbyr:1929\$9b\$9bpid:435338286 byr:1931\$9bhcl:z ecl:amb iyr:2013 hgt:73in\$9bcid:165 eyr:2027\$9b\$9bpid:511898552 eyr:2025 hgt:184cm hcl:#602927\$9biyr:2018 byr:1989 ecl:hzl\$9b\$9biyr:2016\$9bhgt:168in\$9bhcl:#623a2f\$9beyr:2025 pid:310738569 ecl:#0c3039\$9bbyr:2027\$9b\$9bpid:158cm byr:1946 ecl:grt\$9biyr:1920 cid:189\$9bhcl:389bce hgt:165cm\$9b\$9bpid:973732906 hcl:#cfa07d iyr:2010 eyr:2020 hgt:180cm\$9bbyr:1930\$9becl:brn\$9b\$9bpid:930994364 byr:1967 hgt:151cm\$9biyr:2011 eyr:2022\$9b\$9beyr:1968 hgt:75cm cid:241\$9biyr:2011 pid:5493866745\$9becl:grt\$9bbyr:1976 hcl:#a97842\$9b\$9beyr:2026 ecl:oth\$9biyr:2016 hcl:#c0946f\$9bbyr:1929\$9bhgt:175cm\$9bpid:9421898537\$9b\$9beyr:2028 iyr:2016 byr:1962\$9becl:grn hgt:186cm hcl:#cfa07d pid:432962396\$9b\$9biyr:2010 byr:1934 eyr:2023 hgt:180cm hcl:#cfa07d ecl:gry\$9b\$9bcid:168\$9bbyr:1978\$9beyr:2027 hgt:189cm pid:802710287\$9bhcl:#2f980b iyr:2014\$9becl:grn\$9b\$9beyr:1970\$9bpid:576329104\$9becl:xry iyr:1954 hcl:#341e13 byr:2026\$9bhgt:74in\$9b\$9beyr:2027 hgt:153cm\$9becl:oth\$9bhcl:#866857\$9bpid:290407832 byr:1956 iyr:2017\$9b\$9biyr:2011\$9bcid:128\$9becl:amb hcl:#7d3b0c hgt:68in pid:743606119 eyr:2020\$9b\$9becl:oth hcl:#cfa07d\$9bbyr:2016 pid:#de98ae iyr:1984 cid:194\$9bhgt:170cm\$9beyr:2034\$9b\$9bpid:526098672 hgt:168cm\$9bhcl:#7d3b0c cid:167 byr:1923 ecl:blu iyr:2016\$9beyr:2030\$9b\$9bpid:495569197 hcl:#866857 hgt:193cm\$9biyr:2013 eyr:2021 byr:1921 ecl:amb\$9b\$9becl:amb\$9bhcl:#a97842 pid:862249915 iyr:2012 byr:1964\$9bcid:325\$9beyr:2021\$9b\$9biyr:1958\$9bbyr:2003\$9bhgt:160 hcl:#18171d\$9becl:hzl eyr:2020\$9b\$9biyr:2019 byr:1997 ecl:brn\$9bpid:342735713 hcl:#efcc98\$9bhgt:181cm cid:307\$9beyr:2027\$9b\$9bpid:817121616 eyr:2020\$9biyr:2012\$9bhgt:185cm\$9bhcl:#18171d byr:1969 ecl:hzl\$9b\$9bpid:381399203\$9becl:oth byr:1930\$9biyr:2014 hcl:#6b5442 hgt:71in cid:156 eyr:2025\$9b\$9bbyr:2002 hcl:#18171d iyr:2017\$9bpid:398245854 hgt:64in ecl:gry eyr:2025 cid:127\$9b\$9beyr:2028 hcl:#341e13\$9becl:amb iyr:2012\$9bpid:079796480 hgt:69cm\$9bbyr:1995\$9b\$9bcid:315 iyr:2028\$9bpid:775929239\$9bhgt:162cm ecl:dne byr:1940 eyr:1952 hcl:#c0946f\$9b\$9biyr:2015\$9bhgt:154cm byr:1997\$9becl:grn\$9bcid:125 eyr:2024 pid:834780229\$9bhcl:#18171d\$9b\$9becl:hzl hcl:#a97842 pid:553710574 eyr:2028\$9bhgt:183cm cid:196\$9biyr:2014\$9b\$9bpid:377912488 hgt:159cm ecl:amb eyr:2024 byr:1974\$9biyr:2014\$9bhcl:#ceb3a1\$9b\$9beyr:2024\$9bbyr:1947 hgt:63in ecl:brn\$9bcid:69\$9bpid:185228911 hcl:#b6652a iyr:2016\$9b\$9beyr:2024\$9bhgt:168cm hcl:#602927\$9biyr:2013\$9bbyr:1993\$9bpid:681091728 ecl:gry cid:203\$9b\$9bpid:037922164 iyr:2020\$9bbyr:1990 hgt:156cm eyr:2023 hcl:#866857\$9bcid:97 ecl:grn\$9b\$9bhgt:170cm pid:980455250\$9biyr:2011 ecl:hzl byr:1957\$9beyr:2030 hcl:#cfa07d\$9b\$9bhgt:158cm\$9bhcl:#602927\$9bbyr:2002 ecl:hzl iyr:2013\$9bcid:99\$9beyr:2020 pid:48646993\$9b\$9bbyr:1955 pid:814033843 eyr:2030 hcl:#a97842\$9bhgt:191cm iyr:2019\$9b\$9bpid:111196491 hgt:191cm iyr:2012 ecl:blu hcl:#a97842\$9beyr:2026 cid:131 byr:1979\$9b\$9bhcl:#fffffd hgt:68in\$9bcid:121 ecl:oth eyr:2024 pid:343836937\$9bbyr:1955\$9biyr:2020\$9b\$9beyr:2025 byr:1954\$9bpid:737517118\$9bcid:343 hcl:#b6652a\$9biyr:2017 ecl:hzl\$9bhgt:175cm\$9b\$9becl:brn\$9biyr:2011 hgt:171cm cid:102 pid:066348279 byr:1981\$9b\$9becl:oth iyr:2018 byr:1975\$9beyr:2029\$9bhgt:185cm cid:226\$9bpid:978243407 hcl:#341e13\$9b\$9biyr:2015 pid:918017915 hcl:#3e52b7\$9bbyr:1999 ecl:brn cid:314\$9beyr:2025 hgt:192cm\$9b\$9bhcl:#19d1fa byr:1984 ecl:dne hgt:76in\$9biyr:2015 cid:118 pid:417075672\$9beyr:2020\$9b\$9biyr:2019\$9bcid:120 hgt:186cm\$9bhcl:#733820 eyr:2024 pid:423238982 ecl:brn byr:1968\$9b\$9bhgt:70cm cid:173 pid:767014975\$9bhcl:#866857 eyr:2039 ecl:brn byr:1985\$9b\$9bpid:340424924\$9beyr:2027 hcl:#7d3b0c\$9bhgt:168cm ecl:hzl iyr:2016\$9bbyr:1994\$9b\$9becl:hzl byr:1933 pid:580425691\$9biyr:2010 hcl:#c0946f eyr:2024\$9bhgt:64in\$9b\$9bhcl:#9fe6b0 pid:913184461 ecl:grn eyr:2030\$9bcid:262 iyr:2014\$9b\$9becl:amb pid:640007768 eyr:2030 byr:2017 iyr:1988 hcl:z\$9b\$9bbyr:1977 cid:54\$9beyr:1939 pid:882762394 iyr:2030 hcl:#ceb3a1 ecl:blu\$9b\$9biyr:2011 hcl:#7d3b0c byr:1928\$9bpid:340969354 cid:199 hgt:168cm eyr:2029 ecl:hzl\$9b\$9bpid:729464282\$9biyr:2012 hcl:baae60\$9beyr:2026 ecl:hzl hgt:166cm byr:2019\$9b\$9bpid:930997801 iyr:2019 eyr:2030\$9bhcl:#866857 ecl:oth byr:1960 cid:235 hgt:73in\$9b\$9becl:brn\$9bbyr:1988 hgt:179cm iyr:2017\$9bpid:864768439 cid:305 hcl:#c0946f\$9beyr:2029\$9b\$9bhcl:#7d3b0c ecl:grn\$9bhgt:182cm eyr:2021 pid:719891314\$9bbyr:1920 iyr:2017\$9b\$9bhgt:62cm\$9bcid:71 ecl:brn hcl:#fffffd iyr:2025 eyr:1997\$9bpid:175cm byr:2022\$9b\$9bhcl:#cfa07d cid:239 eyr:2025 ecl:hzl hgt:189in byr:1980 iyr:2020\$9bpid:703047050\$9b\$9bbyr:1951\$9beyr:2030\$9becl:hzl\$9bpid:130992467 hgt:157cm hcl:#341e13\$9b\$9bhgt:175cm\$9bhcl:#623a2f\$9bcid:68 eyr:2025\$9bbyr:2001 ecl:oth pid:253618704 iyr:2016\$9b\$9bhcl:#fffffd pid:379344553 ecl:grn\$9beyr:2026\$9bhgt:72in byr:1974 iyr:2013\$9b\$9becl:#b4e952 byr:1970 hcl:z\$9beyr:2039 pid:6056894636 iyr:2021 hgt:165cm\$9bcid:328\$9b\$9bhcl:#602927 iyr:2014 pid:890429537 byr:1957 hgt:68in eyr:2020 ecl:hzl\$9b\$9bcid:265 byr:1961 hcl:#ceb3a1 eyr:2022 iyr:2016 hgt:184cm pid:921615309\$9b\$9bbyr:1951 eyr:2024\$9bhcl:#341e13\$9becl:amb pid:414644982\$9biyr:2010 hgt:159cm\$9b\$9biyr:2015 cid:319\$9beyr:2029 ecl:brn pid:380237898\$9bhcl:#efcc98 hgt:157cm byr:1972\$9b\$9bpid:237156579 ecl:#312a91\$9bhgt:167cm iyr:2011 hcl:#c0946f eyr:2021 byr:1953\$9b\$9becl:hzl iyr:2015 pid:10160221 eyr:2025 hgt:175cm hcl:z byr:1939\$9b\$9bhgt:59in hcl:#18171d byr:1962 ecl:hzl\$9biyr:2019 eyr:2025\$9bcid:337 pid:491938615\$9b\$9becl:utc hgt:82 pid:51674655 byr:2020\$9beyr:1954 iyr:2029 hcl:z\$9b\$9bpid:119530189\$9bcid:103\$9biyr:2010 byr:1979\$9bhgt:168cm hcl:#a97842 ecl:brn eyr:2029\$9b\$9bhgt:177cm ecl:brn\$9bbyr:1990\$9bpid:015089628 eyr:2028 hcl:#733820 iyr:2020\$9b\$9becl:blu iyr:2020 hgt:189cm\$9bhcl:#efcc98 byr:1982 pid:346500376 eyr:2021 cid:160\$9b\$9becl:brn hgt:173cm iyr:2011 cid:259 hcl:#6b5442 eyr:2026\$9bbyr:1995\$9bpid:654875035\$9b\$9becl:grn eyr:2025 pid:147155222 byr:1942\$9bcid:341 hcl:#602927\$9bhgt:165cm\$9biyr:2016\$9b\$9bpid:543171646\$9bhgt:153cm\$9biyr:2019 hcl:#fffffd byr:1985 cid:266\$9beyr:2027\$9becl:hzl\$9b\$9becl:blu\$9beyr:2022\$9bpid:667939101 byr:1974\$9bcid:259 hcl:#888785\$9b\$9beyr:2030 byr:2016 iyr:2022\$9bpid:86902982\$9becl:zzz hgt:72 hcl:ceb867\$9b\$9bhcl:#fffffd\$9becl:grn pid:046978329\$9bbyr:1924\$9beyr:2025 hgt:158cm iyr:2011\$9b\$9bhgt:150cm eyr:2028 byr:1985 ecl:gry hcl:#866857 pid:340615189\$9biyr:2017\$9bcid:50\$9b\$9bcid:171 hcl:#18171d pid:009562218 byr:1981 hgt:175cm eyr:2024 ecl:oth iyr:2017\$9b\$9biyr:2019\$9beyr:2022\$9becl:brn hcl:#cfa07d pid:050270380 cid:159\$9bhgt:151cm\$9bbyr:1951\$9b\$9bhcl:#7d3b0c hgt:176cm iyr:2015 byr:1923 pid:348188421 ecl:blu eyr:2029\$9b\$9bbyr:1997 hgt:162cm eyr:2023 pid:445685977\$9biyr:2012 ecl:amb hcl:#efcc98\$9b\$9biyr:2017 ecl:oth eyr:2028 pid:791977055 hgt:170cm byr:1991\$9bhcl:#623a2f\$9b\$9bbyr:1998 hcl:#fffffd\$9beyr:2020\$9becl:gry pid:039483695 hgt:163cm iyr:2020\$9bcid:165\$9b\$9becl:hzl hgt:74in iyr:2016 pid:026214321\$9bcid:152 hcl:#a1f179\$9beyr:2036 byr:2001\$9b\$9bpid:257900949 cid:80 byr:1956 iyr:2012 hgt:165cm eyr:2030\$9b\$9bpid:918371363\$9becl:xry\$9biyr:2012\$9bbyr:2012 hgt:65cm\$9beyr:2029\$9b\$9bpid:041789006 iyr:2018 byr:1945 eyr:2024 ecl:blu\$9bhcl:#5ab31e hgt:171cm\$9b\$9becl:gry\$9bbyr:1956 cid:318 iyr:2020 hcl:#623a2f\$9beyr:2030 pid:020576506 hgt:184cm\$9b\$9bhgt:173cm iyr:2025\$9beyr:2023\$9becl:amb pid:958983168 hcl:#866857 byr:1935\$9b\$9bbyr:1974\$9beyr:2040 pid:57104308 iyr:1980 hcl:z\$9bhgt:192in cid:295 ecl:amb\$9b\$9bpid:180cm hcl:1109f7 eyr:2039 byr:2020\$9becl:dne hgt:189in iyr:1921\$9b\$9biyr:2013 byr:1961\$9bhcl:#866857\$9beyr:2025 hgt:158cm ecl:gry\$9b\$9becl:brn iyr:2013 eyr:2021 pid:978650418 byr:1980\$9bhcl:#ceb3a1 cid:110\$9bhgt:166cm\$9b\$9bpid:864880558 ecl:hzl hcl:#c0946f byr:1955 eyr:2027 hgt:169cm iyr:2011\$9b\$9beyr:2023 hgt:191cm hcl:#866857\$9bpid:454509887\$9becl:grn byr:1938 iyr:2015\$9b\$9bpid:793008846 eyr:2025 ecl:grn hcl:#341e13\$9bhgt:187cm\$9bbyr:1973 cid:224\$9biyr:2013\$9b\$9bhcl:#866857 eyr:2022 pid:802335395 hgt:171cm ecl:amb\$9biyr:2015 byr:1991\$9b\$9bhcl:#888785 pid:768625886\$9bhgt:180cm\$9beyr:2026 ecl:oth cid:178 byr:1958\$9b\$9bpid:921387245 cid:82 hgt:190cm hcl:#c0946f ecl:grn\$9biyr:2015 eyr:2023\$9b\$9bpid:0704550258 hcl:1ba8f6 iyr:2010 byr:1978 cid:130\$9beyr:2030 ecl:dne hgt:66cm\$9b\$9bpid:626293279 hcl:#7d3b0c hgt:185cm ecl:oth\$9beyr:2020 byr:1937 iyr:2012\$9b\$9bhgt:175\$9beyr:1933 ecl:gry\$9bhcl:#7d3b0c byr:2003 pid:#5d8fcc\$9biyr:2012\$9b\$9beyr:2027\$9bbyr:1927 cid:154\$9becl:gry pid:683668809 hgt:164cm\$9bhcl:#a97842 iyr:2011\$9b\$9bbyr:1940 iyr:2014 hgt:172cm eyr:2024 pid:033678324 hcl:#10fded\$9bcid:292 ecl:oth\$9b\$9biyr:1970 ecl:#201515 pid:#4cd485 eyr:2034 hgt:162\$9bbyr:2005 cid:67\$9bhcl:#c0946f\$9b\$9bcid:306\$9bbyr:1948\$9bhcl:#efcc98\$9beyr:2024 hgt:171cm pid:440657854 iyr:2015 ecl:brn\$9b\$9bhgt:172cm ecl:brn byr:1958 pid:054926969 hcl:#4b8065 iyr:2019\$9b\$9bpid:45977569 ecl:amb byr:2002 hgt:71cm hcl:z iyr:1983\$9b\$9bpid:811407848 hcl:#866857 cid:112 hgt:180cm byr:1986\$9becl:brn eyr:2026\$9b\$9becl:amb\$9bbyr:1992\$9bcid:288 pid:417117245 hcl:#623a2f\$9biyr:2011 hgt:181cm\$9beyr:2021\$9b\$9bbyr:1974 hgt:192cm cid:172\$9beyr:2022\$9becl:blu\$9bhcl:#cfa07d iyr:2014\$9b\$9beyr:2024 ecl:gry\$9bpid:874569675 byr:1960 iyr:2017 hgt:186cm\$9bhcl:#6b5442\$9b\$9bbyr:1988 eyr:2024 iyr:2020 ecl:oth hcl:#866857 pid:227304269 hgt:170cm\$9b\$9becl:grn iyr:2019 byr:2002 cid:150 hcl:#efcc98\$9bpid:600740993\$9bhgt:167cm eyr:2027\$9b\$9bpid:553824537 iyr:2019 ecl:blu eyr:2025 hcl:#e21269 hgt:193cm\$9bbyr:1923\$9b\$9bbyr:2030 iyr:2019 ecl:#cb0911\$9bhcl:#cfa07d hgt:74in eyr:2012\$9bpid:7647207386\$9b\$9bcid:289 hgt:128 pid:178cm iyr:2025 ecl:#4ad977 byr:2020 eyr:2036 hcl:#efcc98\$9b\$9bcid:119 hgt:150in\$9bhcl:z\$9biyr:2012\$9becl:brn eyr:1975\$9bbyr:2007 pid:#0dcd32\$9b\$9bhcl:8a1ce7 pid:0434291854\$9beyr:2034 iyr:2005\$9bhgt:62cm byr:2029 ecl:utc\$9b\$9becl:gry hcl:#ceb3a1 byr:1976 eyr:2024 iyr:2010 hgt:188cm\$9bpid:636312902\$9b\$9bhcl:#888785 byr:2027 hgt:178in iyr:2017 pid:973095872 eyr:1952\$9b\$9bhgt:179cm iyr:2015 hcl:#ceb3a1\$9bbyr:1944 pid:182079308 cid:317\$9beyr:2025 ecl:hzl\$9b\$9bhcl:#6b5442 ecl:grn eyr:2023 hgt:71in pid:829794667 byr:2000\$9biyr:2014 cid:192\$9b\$9biyr:2014 pid:096659610 hcl:#c0946f ecl:oth byr:1991 cid:180\$9bhgt:177cm\$9beyr:2023\$9b\$9bbyr:2017\$9beyr:2036 iyr:1933\$9bcid:225 ecl:gmt hgt:179in\$9bhcl:b5c44d pid:99932231\$9b\$9bhcl:#18171d\$9bhgt:187cm eyr:2023 byr:1934 cid:286 pid:878541119 iyr:2020 ecl:amb\$9b\$9bhgt:185cm\$9bpid:754207134 ecl:oth eyr:2023\$9bhcl:#a97842 cid:313 byr:1966\$9biyr:2015\$9b\$9bhcl:#ceb3a1 byr:1921 eyr:2022 pid:799265846 cid:285\$9bhgt:67in iyr:2015\$9b\$9biyr:2011 byr:1941\$9bhcl:#341e13 cid:65 pid:413556937\$9bhgt:169cm\$9becl:amb eyr:2020\$9b\$9biyr:2016\$9bhgt:158cm ecl:grn byr:1931 hcl:#7d3b0c\$9b\$9bpid:574299170 iyr:2013 byr:1961 ecl:hzl hcl:#866857 hgt:168cm eyr:2022\$9b\$9beyr:2022 pid:245416405\$9biyr:2019 hgt:173cm hcl:#c0946f\$9becl:brn\$9bbyr:1965\$9b\$9bbyr:1980 hgt:162cm ecl:brn pid:239318191\$9bhcl:#fffffd\$9bcid:58 eyr:2025 iyr:2020\$9b\$9bpid:892646915\$9biyr:2012 hcl:#733820 byr:1991 eyr:2021\$9bhgt:157cm ecl:oth\$9b\$9bpid:310597466 eyr:2025\$9bhcl:#cfa07d byr:1944 iyr:2018 ecl:oth\$9bhgt:183cm\$9b\$9biyr:2010 hgt:187cm ecl:oth\$9bpid:975763328\$9bhcl:#866857 eyr:2023 cid:283 byr:1997\$9b\$9biyr:2020 cid:225 hcl:#efcc98 pid:424680047 ecl:blu\$9bhgt:154cm\$9bbyr:1968 eyr:2027\$9b\$9becl:oth eyr:2020 hgt:183cm hcl:#623a2f\$9bpid:771851807\$9bbyr:1990\$9biyr:2017\$9b\$9bhcl:#efcc98 ecl:blu byr:1991 hgt:191cm pid:266021118\$9bcid:124\$9beyr:2025\$9b\$9bbyr:1993\$9becl:hzl eyr:2020\$9bhgt:163cm\$9biyr:2015 pid:831538073 hcl:#18171d\$9b\$9bhgt:74in hcl:#420afb eyr:2028\$9becl:grn pid:264469103\$9bbyr:1993\$9b\$9beyr:2020\$9bcid:79\$9bbyr:1972\$9bpid:084953331 hcl:#a97842 ecl:brn iyr:2010\$9bhgt:170cm\$9b\$9biyr:2014 ecl:gry pid:094812116 eyr:2026 hgt:190cm byr:1965 hcl:#944667\$9b\$9bhcl:#fffffd byr:1953 iyr:2014 ecl:hzl hgt:164cm\$9bcid:123 eyr:2023 pid:546394433\$9b\$9biyr:2012 hgt:155cm byr:1998 pid:#2c9be6 eyr:2023 hcl:#ceb3a1 ecl:gry\$9b\$9beyr:2029 ecl:gry pid:752489331 iyr:2015 hgt:167cm hcl:#18171d cid:70 byr:2002\$9b\$9bbyr:1938\$9becl:gry\$9bpid:764937909 iyr:2014\$9bhcl:#7d3b0c\$9beyr:2022 cid:145 hgt:184cm\$9b\$9bcid:340\$9bbyr:1924 hgt:169cm eyr:2026\$9biyr:2013 ecl:amb\$9bpid:499844992 hcl:#18171d\$9b\$9bpid:838417672 hgt:175cm\$9becl:grt iyr:2017 eyr:2025 hcl:17aa1a\$9b\$9beyr:2020\$9bbyr:1925 hcl:#341e13\$9becl:brn cid:342 pid:047426814 hgt:156cm iyr:2012\$9b\$9biyr:2011 hcl:#341e13 byr:1959\$9becl:amb pid:969679865\$9b\$9bbyr:1978 cid:320 hgt:180cm hcl:#435ceb pid:363518544 eyr:2023 iyr:2016 ecl:blu\$9b\$9biyr:2010 eyr:2028\$9bpid:183cm byr:1948\$9becl:oth cid:133\$9bhcl:#8d3298 hgt:190cm\$9b\$9bhcl:#6b5442 byr:1929 iyr:2019 pid:207713865 eyr:2029\$9bhgt:166cm ecl:gry\$9b\$9becl:blu iyr:2019\$9bbyr:1985 eyr:2030 hcl:#866857 hgt:155cm pid:659180287\$9b\$9becl:hzl\$9beyr:2020 iyr:2016 pid:440624039\$9bcid:147\$9bhgt:61in byr:1976 hcl:#733820\$9b\$9bhcl:#341e13 pid:178082907 eyr:2023\$9biyr:2015 byr:1956\$9becl:amb hgt:163cm\$9b\$9beyr:2023\$9biyr:2011 hcl:#cfa07d hgt:164cm\$9bpid:291621559 byr:1960 ecl:gry\$9b\$9bhcl:#efcc98 byr:1976\$9biyr:2017 pid:394566091 cid:248\$9bhgt:176cm ecl:hzl eyr:2026\$9b\$9biyr:2013 eyr:2029 hgt:152cm ecl:gry byr:1984 hcl:#623a2f pid:511780941\$9b\$9bpid:953716819 iyr:2010 hgt:156cm ecl:amb\$9bbyr:1947\$9bhcl:#18171d eyr:2025\$9b\$9beyr:2025 ecl:amb\$9biyr:2016\$9bhcl:#cfa07d byr:1925 pid:322787273 hgt:168cm\$9b\$9bhgt:59in iyr:2012\$9bpid:916978929 byr:1959\$9bhcl:#c0946f eyr:2021\$9becl:brn\$9b\$9bbyr:2018 eyr:1929 hgt:187in\$9bhcl:z\$9biyr:2003 pid:0377361331 ecl:utc\$9b\$9bbyr:1949 hcl:#fffffd pid:071791776 eyr:2030 iyr:2015 hgt:71in ecl:hzl\$9b\$9bhcl:#341e13\$9bhgt:154cm byr:1927 eyr:2023 ecl:blu iyr:2017\$9bpid:639867283\$9b\$9bhcl:z pid:315276249 byr:2026\$9bhgt:151cm\$9biyr:2028 eyr:2020\$9becl:hzl\$9b\$9bhcl:#341e13 eyr:2027 byr:1981 cid:342 pid:999898177 hgt:187cm\$9becl:blu iyr:2011\$9b\$9bbyr:2009\$9bhgt:73cm iyr:1921 hcl:z\$9bpid:181cm\$9becl:xry\$9b\$9becl:hzl\$9bbyr:1925\$9bpid:034183103 hcl:#341e13 hgt:158cm eyr:2029 iyr:2010\$9b\$9bbyr:1976\$9biyr:2011 hgt:177cm pid:833479839 hcl:#dcab9d ecl:blu eyr:2020\$9b\$9bcid:230 hcl:#7d3b0c byr:1954\$9biyr:2014 eyr:2026 pid:122150889\$9becl:brn hgt:182cm\$9b\$9bhcl:#a97842\$9becl:brn hgt:187cm\$9beyr:2028\$9bpid:427631634 iyr:2002 byr:2004\$9b\$9bpid:912516995 ecl:hzl iyr:2017 hcl:#ceb3a1 byr:1929 eyr:2028\$9bhgt:155cm\$9b\$9bpid:019809181\$9bcid:128 iyr:2013 hcl:#f5b9f7 byr:1931\$9bhgt:161cm\$9becl:amb\$9b\$9bhgt:64in byr:1924\$9biyr:2016 eyr:2029 ecl:hzl pid:474940085 hcl:#c0946f\$9b\$9bpid:172419213\$9becl:grn\$9bhgt:193cm iyr:2010 byr:1973 hcl:#6b5442\$9beyr:2027\$9b\$9becl:#7b5cfd iyr:2019\$9bbyr:2016\$9beyr:2040 hgt:191in\$9bcid:187 hcl:z pid:#c61084\$9b\$9beyr:2032 iyr:2014 pid:430247344 byr:1967\$9bhcl:#ceb3a1\$9bcid:241\$9becl:brn hgt:178in\$9b\$9bhcl:#623a2f iyr:2017 cid:235\$9beyr:2020 byr:1978 ecl:blu hgt:175cm\$9b\$9biyr:2013 ecl:amb hgt:174cm hcl:#866857 pid:285533942 byr:1954\$9b\$9bhgt:152cm ecl:blu pid:952587262 eyr:2024\$9biyr:2019 cid:268 hcl:#602927 byr:1947\$9b\$9bhgt:176in cid:245 byr:2011 iyr:2018\$9beyr:1987\$9bhcl:z\$9bpid:346518170\$9becl:utc\$9b\$9bhgt:180cm\$9biyr:2015 ecl:brn eyr:2027 pid:807494368 cid:324 byr:1980\$9b\$9bbyr:1936 hcl:#866857 ecl:blu\$9beyr:2021 hgt:187cm\$9biyr:2016 pid:244556968\$9b\$9bbyr:1950 cid:125\$9biyr:2020 hgt:168cm hcl:#c0946f eyr:2030 pid:758313758 ecl:blu\$9b\$9beyr:2021\$9bpid:618915663 hcl:#cfa07d iyr:2018 byr:2002\$9bhgt:157cm ecl:blu\$9b\$9bbyr:1967\$9becl:brn hcl:#c0946f pid:200495802 eyr:2021 iyr:2020\$9bcid:335\$9bhgt:181cm\$9b\$9bbyr:1996\$9becl:brn iyr:2015\$9beyr:2030\$9bhcl:#fffffd cid:207\$9bpid:022460311 hgt:158cm\$9b\$9beyr:2022 hgt:59cm iyr:2023\$9bbyr:1974 pid:354098699 hcl:b244f7\$9becl:#219505\$9b\$9bhcl:#866857 eyr:2025\$9bpid:370874666\$9bbyr:1947\$9bcid:162 ecl:oth hgt:186cm iyr:2011\$9b\$9becl:hzl eyr:2029\$9bbyr:1981\$9biyr:2012 pid:433430792 cid:252\$9bhgt:171cm\$9b\$9bpid:512473844 hgt:186cm iyr:2012 eyr:2028 byr:1949 ecl:hzl hcl:#18171d\$9b\$9bhgt:60cm iyr:1934\$9becl:#4a4017 pid:3067366202 hcl:1161df\$9beyr:1938 byr:2008\$9b\$9bpid:119509757 hcl:#cfa07d eyr:2022 hgt:174cm byr:1983\$9biyr:2015\$9becl:blu\$9b\$9bbyr:1955 eyr:2023\$9bcid:114\$9bhcl:f1aa8a pid:609049659 ecl:grn hgt:177cm\$9biyr:2015\$9b\$9beyr:2027 cid:284\$9bpid:654627982 byr:1964 iyr:2018 hgt:168cm\$9bhcl:#fffffd ecl:oth\$9b\$9biyr:1988\$9bhgt:191cm hcl:b87a62 byr:1990 ecl:xry\$9bpid:996624367 eyr:1960\$9b\$9bpid:641466821 eyr:2028 hcl:#7d3b0c\$9biyr:2010 hgt:175cm ecl:gry\$9b\$9bhcl:#b6652a\$9becl:oth\$9bbyr:1926 eyr:2030 iyr:2019 hgt:183cm\$9bpid:057196056\$9b\$9biyr:2017\$9beyr:2022 pid:936841429\$9becl:blu hcl:#6b5442 cid:179 byr:1927 hgt:161cm\$9b\$9beyr:2021\$9bcid:289 hgt:174cm iyr:2013\$9becl:grn pid:329574701 byr:1970\$9b\$9beyr:2021 byr:1939 ecl:gry pid:933505139 iyr:2014 hgt:173cm hcl:#7d3b0c\$9b\$9bcid:116 hcl:045bff eyr:2030 iyr:1920\$9becl:brn\$9bbyr:2030\$9bpid:#38f7f3\$9bhgt:155in\$9b\$9beyr:2028\$9bpid:225829241 byr:1928 hcl:#cfa07d iyr:2019\$9becl:oth\$9bhgt:166cm\$9b\$9bcid:80 byr:1936\$9biyr:2017\$9bhgt:94 hcl:#2e7503 ecl:oth eyr:2030\$9bpid:597284996\$9b\$9becl:oth\$9biyr:2019 hgt:76in\$9bbyr:1956 pid:821874039\$9b\$9beyr:2026 hgt:168cm\$9bpid:019015588\$9biyr:2010\$9becl:amb byr:2009 hcl:#623a2f cid:159\$9b\$9biyr:1980 hgt:167in\$9bpid:380644909 eyr:1966 ecl:blu byr:2004 hcl:z\$9b\$9beyr:2020 iyr:2013\$9bhcl:#08ad66 pid:540886868\$9becl:oth byr:1980 hgt:158cm\$9b\$9beyr:2026 hgt:186cm byr:1995\$9bcid:275\$9bhcl:z iyr:1958 ecl:blu\$9b\$9beyr:2026 iyr:2012\$9bhgt:61in byr:1936 pid:390833536 cid:298 ecl:grn hcl:#623a2f\$9b\$9bpid:393878498 eyr:2023 ecl:gry byr:1943 iyr:2010 hcl:#888785 hgt:158cm\$9b\$9bhgt:191cm cid:197 iyr:2014 byr:1945\$9bhcl:#fffffd\$9beyr:2020\$9bpid:183948344 ecl:amb\$9b\$9becl:gmt hgt:88\$9bcid:260 iyr:2024 byr:2022 eyr:2031 hcl:z pid:#532c6e\$9b\$9bhcl:#a97842\$9bhgt:160cm eyr:2024 ecl:blu iyr:2015 byr:1970\$9b\$9bbyr:1964 hgt:178cm\$9beyr:2025\$9bpid:813643223 ecl:brn iyr:2014\$9bhcl:#ceb3a1\$9b\$9bbyr:1965 eyr:2024 iyr:2018\$9bhgt:165cm hcl:#18171d ecl:grn pid:475669993\$9b\$9bhgt:116\$9biyr:2024 eyr:1974 hcl:504345 byr:2010 cid:206 pid:166cm ecl:zzz\$9b\$9biyr:2014 eyr:2020 pid:096460673 byr:1948\$9bhgt:153cm\$9becl:blu hcl:#341e13\$9b\$9bhcl:#ceb3a1\$9biyr:2017 hgt:67cm\$9bpid:178cm byr:2028 ecl:brn\$9bcid:293\$9b\$9bhgt:157cm\$9bhcl:#602927 byr:1941\$9biyr:2012 pid:611003211 eyr:2029\$9b\$9biyr:2019 byr:2000 pid:083917767 eyr:2024 hgt:172cm\$9bcid:248 hcl:#7e4d15\$9b\$9bbyr:1946\$9bhgt:160cm iyr:2020 hcl:#559278 pid:989139577\$9becl:amb eyr:2020\$9b\$9bpid:165cm byr:1927 cid:178 hcl:#733820 iyr:2017 hgt:156in\$9beyr:2029 ecl:brn\$9b\$9bhcl:#18171d hgt:163cm eyr:2022 byr:1962 pid:639124940 cid:258 ecl:hzl\$9biyr:2015\$9b\$9bcid:123 pid:4542006033\$9beyr:1987 byr:2010 iyr:2029 ecl:amb\$9bhgt:191cm hcl:#18171d\$9b\$9bhcl:z\$9bbyr:1928 iyr:1965\$9beyr:2022 hgt:75 ecl:oth pid:400765046\$9b\$9bhcl:#c0946f hgt:62in\$9becl:blu byr:1978 iyr:1923\$9bcid:260 eyr:2021 pid:404628742\$9b\$9bpid:#bf1611 ecl:grn\$9biyr:2018 cid:146 byr:1948\$9beyr:2025 hcl:#fffffd hgt:87\$9b\$9bpid:767547618\$9biyr:2018 hcl:#b6652a eyr:2029 hgt:165cm ecl:hzl byr:1937\$9b\$9becl:blu iyr:2019 pid:960083875 eyr:2027 hgt:71in hcl:#c0946f\$9bbyr:1921\$9b\$9biyr:2011\$9bpid:9562042482\$9bhcl:z hgt:59cm\$9beyr:1994 cid:258 ecl:#6c1bcc byr:2025\$9b\$9beyr:2028 pid:494999718 byr:1928 hgt:176cm\$9biyr:2015 ecl:oth hcl:#733820\$9b\$9bcid:78 eyr:2020 hgt:160cm byr:1947 ecl:blu\$9bhcl:#b6652a iyr:2016 pid:069457741\$9b\$9bhcl:#6b5442 iyr:2010\$9bbyr:1971\$9beyr:2028 hgt:169cm ecl:brn pid:528961949\$9b\$9beyr:2028\$9bhcl:#7d3b0c\$9bbyr:1952\$9becl:hzl\$9bcid:317 iyr:2016\$9bpid:832169844\$9b\$9bhcl:#c0946f\$9becl:brn\$9biyr:2017 eyr:2028\$9bpid:161390075 byr:1993 cid:50\$9bhgt:171cm\$9b\$9becl:#ae12d3 hgt:74cm cid:239 hcl:z pid:345439730 iyr:1924 byr:2029 eyr:2031\$9b\$9b"
  .byte 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

