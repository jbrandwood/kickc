@begin: scope:[]  from
  [0] phi()
  to:@3
@3: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @3
  [3] phi()
main: scope:[main]  from @3
  [4] *((const byte*) SCREEN#0) ← (byte) '0'
  [5] call d 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call b 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [8] return 
  to:@return
b: scope:[b]  from main::@1
  [9] phi()
  to:b::@1
b::@1: scope:[b]  from b b::@3
  [10] (byte) b::i#2 ← phi( b/(byte/signed byte/word/signed word/dword/signed dword) 0 b::@3/(byte) b::i#1 )
  [11] call d 
  to:b::@3
b::@3: scope:[b]  from b::@1
  [12] (byte) b::i#1 ← ++ (byte) b::i#2
  [13] if((byte) b::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto b::@1
  to:b::@return
b::@return: scope:[b]  from b::@3
  [14] return 
  to:@return
d: scope:[d]  from b::@1 main
  [15] *((const byte*) SCREEN#0) ← ++ *((const byte*) SCREEN#0)
  to:d::@return
d::@return: scope:[d]  from d
  [16] return 
  to:@return
