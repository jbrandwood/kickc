(label) @1
(label) @begin
(label) @end
(const nomodify byte*) CHARGEN = (byte*) 53248
(const nomodify struct MOS6526_CIA*) CIA1 = (struct MOS6526_CIA*) 56320
(const nomodify byte) KEY_0 = (byte) $23
(const nomodify byte) KEY_1 = (byte) $38
(const nomodify byte) KEY_2 = (byte) $3b
(const nomodify byte) KEY_3 = (byte) 8
(const nomodify byte) KEY_4 = (byte) $b
(const nomodify byte) KEY_5 = (byte) $10
(const nomodify byte) KEY_6 = (byte) $13
(const nomodify byte) KEY_7 = (byte) $18
(const nomodify byte) KEY_8 = (byte) $1b
(const nomodify byte) KEY_9 = (byte) $20
(const nomodify byte) KEY_A = (byte) $a
(const nomodify byte) KEY_ARROW_LEFT = (byte) $39
(const nomodify byte) KEY_ARROW_UP = (byte) $36
(const nomodify byte) KEY_ASTERISK = (byte) $31
(const nomodify byte) KEY_AT = (byte) $2e
(const nomodify byte) KEY_B = (byte) $1c
(const nomodify byte) KEY_C = (byte) $14
(const nomodify byte) KEY_COLON = (byte) $2d
(const nomodify byte) KEY_COMMA = (byte) $2f
(const nomodify byte) KEY_D = (byte) $12
(const nomodify byte) KEY_DOT = (byte) $2c
(const nomodify byte) KEY_E = (byte) $e
(const nomodify byte) KEY_EQUALS = (byte) $35
(const nomodify byte) KEY_F = (byte) $15
(const nomodify byte) KEY_F1 = (byte) 4
(const nomodify byte) KEY_F3 = (byte) 5
(const nomodify byte) KEY_F5 = (byte) 6
(const nomodify byte) KEY_F7 = (byte) 3
(const nomodify byte) KEY_G = (byte) $1a
(const nomodify byte) KEY_H = (byte) $1d
(const nomodify byte) KEY_I = (byte) $21
(const nomodify byte) KEY_J = (byte) $22
(const nomodify byte) KEY_K = (byte) $25
(const nomodify byte) KEY_L = (byte) $2a
(const nomodify byte) KEY_LSHIFT = (byte) $f
(const nomodify byte) KEY_M = (byte) $24
(const nomodify byte) KEY_MINUS = (byte) $2b
(const nomodify byte) KEY_N = (byte) $27
(const nomodify byte) KEY_O = (byte) $26
(const nomodify byte) KEY_P = (byte) $29
(const nomodify byte) KEY_PLUS = (byte) $28
(const nomodify byte) KEY_POUND = (byte) $30
(const nomodify byte) KEY_Q = (byte) $3e
(const nomodify byte) KEY_R = (byte) $11
(const nomodify byte) KEY_S = (byte) $d
(const nomodify byte) KEY_SEMICOLON = (byte) $32
(const nomodify byte) KEY_SLASH = (byte) $37
(const nomodify byte) KEY_SPACE = (byte) $3c
(const nomodify byte) KEY_T = (byte) $16
(const nomodify byte) KEY_U = (byte) $1e
(const nomodify byte) KEY_V = (byte) $1f
(const nomodify byte) KEY_W = (byte) 9
(const nomodify byte) KEY_X = (byte) $17
(const nomodify byte) KEY_Y = (byte) $19
(const nomodify byte) KEY_Z = (byte) $c
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_B = (byte) 1
(const nomodify byte*) PROCPORT = (byte*) 1
(const byte*) SCREEN = (byte*) 1024
(const to_nomodify byte*) keyboard_char_keycodes[]  = { (const nomodify byte) KEY_AT, (const nomodify byte) KEY_A, (const nomodify byte) KEY_B, (const nomodify byte) KEY_C, (const nomodify byte) KEY_D, (const nomodify byte) KEY_E, (const nomodify byte) KEY_F, (const nomodify byte) KEY_G, (const nomodify byte) KEY_H, (const nomodify byte) KEY_I, (const nomodify byte) KEY_J, (const nomodify byte) KEY_K, (const nomodify byte) KEY_L, (const nomodify byte) KEY_M, (const nomodify byte) KEY_N, (const nomodify byte) KEY_O, (const nomodify byte) KEY_P, (const nomodify byte) KEY_Q, (const nomodify byte) KEY_R, (const nomodify byte) KEY_S, (const nomodify byte) KEY_T, (const nomodify byte) KEY_U, (const nomodify byte) KEY_V, (const nomodify byte) KEY_W, (const nomodify byte) KEY_X, (const nomodify byte) KEY_Y, (const nomodify byte) KEY_Z, (byte) $3f, (const nomodify byte) KEY_POUND, (byte) $3f, (const nomodify byte) KEY_ARROW_UP, (const nomodify byte) KEY_ARROW_LEFT, (const nomodify byte) KEY_SPACE, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (const nomodify byte) KEY_ASTERISK, (const nomodify byte) KEY_PLUS, (const nomodify byte) KEY_COMMA, (const nomodify byte) KEY_MINUS, (const nomodify byte) KEY_DOT, (const nomodify byte) KEY_SLASH, (const nomodify byte) KEY_0, (const nomodify byte) KEY_1, (const nomodify byte) KEY_2, (const nomodify byte) KEY_3, (const nomodify byte) KEY_4, (const nomodify byte) KEY_5, (const nomodify byte) KEY_6, (const nomodify byte) KEY_7, (const nomodify byte) KEY_8, (const nomodify byte) KEY_9, (const nomodify byte) KEY_COLON, (const nomodify byte) KEY_SEMICOLON, (byte) $3f, (const nomodify byte) KEY_EQUALS, (byte) $3f, (byte) $3f }
(byte()) keyboard_get_keycode((byte) keyboard_get_keycode::ch)
(label) keyboard_get_keycode::@return
(byte) keyboard_get_keycode::ch
(byte) keyboard_get_keycode::ch#0 reg byte x 11002.0
(byte) keyboard_get_keycode::return
(byte) keyboard_get_keycode::return#0 reg byte a 3667.333333333333
(byte) keyboard_get_keycode::return#2 reg byte a 2002.0
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 reg byte a 20002.0
(label) keyboard_key_pressed::@1
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0 reg byte y 3333.6666666666665
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#5 reg byte x 2002.0
(byte) keyboard_key_pressed::key#6 reg byte x 10501.5
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 reg byte a 1438.375
(byte) keyboard_key_pressed::return#10 reg byte a 202.0
(byte) keyboard_key_pressed::return#11 reg byte a 202.0
(byte) keyboard_key_pressed::return#12 reg byte a 202.0
(byte) keyboard_key_pressed::return#13 reg byte a 202.0
(byte) keyboard_key_pressed::return#14 reg byte a 2002.0
(byte) keyboard_key_pressed::return#2 reg byte a 202.0
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0 reg byte a 20002.0
(const byte*) keyboard_matrix_col_bitmask[(number) 8]  = { (byte) 1, (byte) 2, (byte) 4, (byte) 8, (byte) $10, (byte) $20, (byte) $40, (byte) $80 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 reg byte a 36667.33333333333
(byte) keyboard_matrix_read::return#2 reg byte a 20002.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0 reg byte x 110002.0
(const byte*) keyboard_matrix_row_bitmask[(number) 8]  = { (byte) $fe, (byte) $fd, (byte) $fb, (byte) $f7, (byte) $ef, (byte) $df, (byte) $bf, (byte) $7f }
(void()) main()
(byte~) main::$15 reg byte a 202.0
(byte~) main::$18 reg byte a 202.0
(byte~) main::$21 reg byte a 202.0
(byte~) main::$24 reg byte a 202.0
(byte~) main::$27 reg byte a 202.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@3
(label) main::@30
(label) main::@31
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::ch
(byte) main::ch#1 ch zp[1]:7 1501.5
(byte) main::ch#2 ch zp[1]:7 250.25
(byte) main::cur_pos
(byte) main::cur_pos#11 cur_pos zp[1]:5 84.12
(byte) main::cur_pos#18 cur_pos zp[1]:5 33.666666666666664
(byte) main::cur_pos#20 cur_pos zp[1]:5 33.666666666666664
(byte) main::cur_pos#22 cur_pos zp[1]:5 33.666666666666664
(byte) main::cur_pos#24 cur_pos zp[1]:5 183.66666666666669
(byte) main::i
(byte) main::i#1 i zp[1]:4 151.5
(byte) main::i#2 i zp[1]:4 101.0
(byte) main::key
(byte) main::key#0 reg byte a 1501.5
(byte) main::pressed
(byte) main::pressed#1 reg byte a 2002.0
(byte) main::pressed#2 reg byte a 2002.0
(byte*) main::sc
(byte*) main::sc#1 sc zp[2]:2 202.0
(byte*) main::sc#2 sc zp[2]:2 134.66666666666666
(byte) main::shift
(byte) main::shift#9 shift zp[1]:6 52.68421052631579
(const byte*) main::str[(byte) 3]  = (byte*) "f1"
(const byte*) main::str1[(byte) 3]  = (byte*) "f3"
(const byte*) main::str2[(byte) 3]  = (byte*) "f5"
(const byte*) main::str3[(byte) 3]  = (byte*) "f7"
(void()) plot_chargen((byte) plot_chargen::pos , (byte) plot_chargen::ch , (byte) plot_chargen::shift)
(word~) plot_chargen::$0 zp[2]:10 20002.0
(word~) plot_chargen::$15 zp[2]:10 20002.0
(byte~) plot_chargen::$16 reg byte a 20002.0
(byte~) plot_chargen::$17 reg byte a 20002.0
(byte~) plot_chargen::$5 reg byte a 20002.0
(byte~) plot_chargen::$8 reg byte a 2.00000002E8
(label) plot_chargen::@1
(label) plot_chargen::@2
(label) plot_chargen::@3
(label) plot_chargen::@4
(label) plot_chargen::@5
(label) plot_chargen::@6
(label) plot_chargen::@7
(label) plot_chargen::@8
(label) plot_chargen::@return
(byte) plot_chargen::bits
(byte) plot_chargen::bits#0 bits zp[1]:9 2.0000002E7
(byte) plot_chargen::bits#1 bits zp[1]:9 6.6666667333333336E7
(byte) plot_chargen::bits#2 bits zp[1]:9 4.428571485714286E7
(byte) plot_chargen::c
(byte) plot_chargen::c#2 reg byte a 1.00000001E8
(byte) plot_chargen::ch
(byte) plot_chargen::ch#1 reg byte a 1001.0
(byte) plot_chargen::ch#2 reg byte a 500.5
(byte*) plot_chargen::chargen
(byte*) plot_chargen::chargen#0 chargen zp[2]:10 15001.5
(byte*) plot_chargen::chargen#1 chargen zp[2]:10 20002.0
(byte*) plot_chargen::chargen#4 chargen zp[2]:10 477143.0
(byte) plot_chargen::pos
(byte) plot_chargen::pos#0 reg byte y 202.0
(byte) plot_chargen::pos#1 reg byte y 667.3333333333334
(byte) plot_chargen::pos#2 reg byte y 2110.4
(byte*) plot_chargen::sc
(byte*) plot_chargen::sc#0 sc zp[2]:12 20002.0
(byte*) plot_chargen::sc#1 sc zp[2]:12 5.250000075E7
(byte*) plot_chargen::sc#2 sc zp[2]:12 6666667.333333333
(byte*) plot_chargen::sc#3 sc zp[2]:12 5.1666667333333336E7
(byte*) plot_chargen::sc#7 sc zp[2]:12 1.00050015E7
(byte) plot_chargen::shift
(byte) plot_chargen::shift#1 reg byte x 2002.0
(byte) plot_chargen::shift#2 reg byte x 2200.4
(byte) plot_chargen::x
(byte) plot_chargen::x#1 reg byte x 1.500000015E8
(byte) plot_chargen::x#2 reg byte x 2.500000025E7
(byte) plot_chargen::y
(byte) plot_chargen::y#1 y zp[1]:8 1.50000015E7
(byte) plot_chargen::y#2 y zp[1]:8 2307692.5384615385
(void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
(label) print_str_at::@1
(label) print_str_at::@2
(label) print_str_at::@return
(byte*) print_str_at::at
(byte*) print_str_at::at#4 at zp[2]:12 1001.0
(byte*) print_str_at::at#5 at zp[2]:12 1034.6666666666667
(byte*) print_str_at::at#7 at zp[2]:12 101.0
(byte*) print_str_at::str
(byte*) print_str_at::str#4 str zp[2]:10 2002.0
(byte*) print_str_at::str#5 str zp[2]:10 1026.25
(byte*) print_str_at::str#7 str zp[2]:10 101.0

zp[2]:2 [ main::sc#2 main::sc#1 ]
zp[1]:4 [ main::i#2 main::i#1 ]
zp[1]:5 [ main::cur_pos#18 main::cur_pos#20 main::cur_pos#22 main::cur_pos#24 main::cur_pos#11 ]
zp[1]:6 [ main::shift#9 ]
zp[1]:7 [ main::ch#2 main::ch#1 ]
reg byte a [ main::pressed#2 main::pressed#1 ]
reg byte a [ plot_chargen::ch#2 plot_chargen::ch#1 ]
reg byte x [ plot_chargen::shift#2 plot_chargen::shift#1 ]
reg byte y [ plot_chargen::pos#2 plot_chargen::pos#1 plot_chargen::pos#0 ]
zp[1]:8 [ plot_chargen::y#2 plot_chargen::y#1 ]
zp[1]:9 [ plot_chargen::bits#2 plot_chargen::bits#0 plot_chargen::bits#1 ]
reg byte x [ plot_chargen::x#2 plot_chargen::x#1 ]
reg byte a [ plot_chargen::c#2 ]
reg byte x [ keyboard_key_pressed::key#6 keyboard_key_pressed::key#5 ]
zp[2]:10 [ print_str_at::str#5 print_str_at::str#7 print_str_at::str#4 plot_chargen::chargen#4 plot_chargen::chargen#0 plot_chargen::chargen#1 plot_chargen::$0 plot_chargen::$15 ]
zp[2]:12 [ print_str_at::at#5 print_str_at::at#7 print_str_at::at#4 plot_chargen::sc#3 plot_chargen::sc#7 plot_chargen::sc#0 plot_chargen::sc#2 plot_chargen::sc#1 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$15 ]
reg byte a [ keyboard_key_pressed::return#10 ]
reg byte a [ main::$18 ]
reg byte a [ keyboard_key_pressed::return#11 ]
reg byte a [ main::$21 ]
reg byte a [ keyboard_key_pressed::return#12 ]
reg byte a [ main::$24 ]
reg byte a [ keyboard_key_pressed::return#13 ]
reg byte a [ main::$27 ]
reg byte x [ keyboard_get_keycode::ch#0 ]
reg byte a [ keyboard_get_keycode::return#2 ]
reg byte a [ main::key#0 ]
reg byte a [ keyboard_key_pressed::return#14 ]
reg byte a [ plot_chargen::$16 ]
reg byte a [ plot_chargen::$17 ]
reg byte a [ plot_chargen::$5 ]
reg byte a [ plot_chargen::$8 ]
reg byte y [ keyboard_key_pressed::colidx#0 ]
reg byte a [ keyboard_key_pressed::rowidx#0 ]
reg byte x [ keyboard_matrix_read::rowid#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ keyboard_get_keycode::return#0 ]
