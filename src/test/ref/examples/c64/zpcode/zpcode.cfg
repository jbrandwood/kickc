
void zpLoop()
zpLoop: scope:[zpLoop]  from main::@5
  [0] phi()
  to:zpLoop::@1
zpLoop::@1: scope:[zpLoop]  from zpLoop zpLoop::@1
  [1] zpLoop::i#2 = phi( zpLoop/0, zpLoop::@1/zpLoop::i#1 )
  [2] *BG_COLOR = ++ *BG_COLOR
  [3] zpLoop::i#1 = ++ zpLoop::i#2
  [4] if(zpLoop::i#1!=$65) goto zpLoop::@1
  to:zpLoop::@return
zpLoop::@return: scope:[zpLoop]  from zpLoop::@1
  [5] return 
  to:@return

void main()
main: scope:[main]  from
  asm { sei  }
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [7] main::i#2 = phi( main/0, main::@2/main::i#1 )
  [8] if(main::i#2<$14) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@3 main::@6
  [9] if(*RASTER!=$ff) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  [10] phi()
  [11] call loop 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [12] phi()
  [13] call zpLoop 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [14] *BG_COLOR = 0
  to:main::@3
main::@2: scope:[main]  from main::@1
  [15] main::zpCode[main::i#2] = zpCodeData[main::i#2]
  [16] main::i#1 = ++ main::i#2
  to:main::@1

void loop()
loop: scope:[loop]  from main::@4
  [17] phi()
  to:loop::@1
loop::@1: scope:[loop]  from loop loop::@1
  [18] loop::i#2 = phi( loop/0, loop::@1/loop::i#1 )
  [19] *BG_COLOR = -- *BG_COLOR
  [20] loop::i#1 = ++ loop::i#2
  [21] if(loop::i#1!=$65) goto loop::@1
  to:loop::@return
loop::@return: scope:[loop]  from loop::@1
  [22] return 
  to:@return
