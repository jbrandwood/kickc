const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*) 56320
const nomodify byte* COLORRAM = (byte*) 55296
const nomodify byte* DEFAULT_SCREEN = (byte*) 1024
const nomodify byte LIGHT_BLUE = $e
const byte OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
const byte OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
const byte OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = 8
const byte OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = $b
const byte OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = $a
const byte OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = 9
const byte OFFSET_STRUCT_TIME_OF_DAY_HOURS = 3
const byte OFFSET_STRUCT_TIME_OF_DAY_MIN = 2
const byte OFFSET_STRUCT_TIME_OF_DAY_SEC = 1
struct TIME_OF_DAY TOD_ZERO loadstore mem[4] = { TENTHS: 0, SEC: 0, MIN: 0, HOURS: 0 }
void __start()
byte conio_cursor_x loadstore zp[1]:10 405432.6756756756
byte conio_cursor_y loadstore zp[1]:11 6037754.867924528
byte* conio_line_color loadstore zp[2]:8 4333353.098039215
byte* conio_line_text loadstore zp[2]:6 4250019.384615384
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 1050001.5
void cputln()
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 100001.0
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 s zp[2]:2 50000.5
to_nomodify byte* cputs::s#2 s zp[2]:2 150001.5
void cscroll()
void gotoxy(byte gotoxy::x , byte gotoxy::y)
word gotoxy::line_offset
byte gotoxy::x
const byte gotoxy::x#2 x = 0
byte gotoxy::y
const byte gotoxy::y#2 y = 0
void main()
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:17
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:17 1.000000000001E12
byte* memcpy::dst#2 dst zp[2]:17 1.0003333333346667E12
byte* memcpy::dst#4 dst zp[2]:17 2.000000002E9
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:4
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:4 2.000000000002E12
byte* memcpy::src#2 src zp[2]:4 1.00025000000125E12
byte* memcpy::src#4 src zp[2]:4 1.000000001E9
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:15 1.2512500000025E11
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 1.428571428572857E11
byte* memset::dst
byte* memset::dst#1 dst zp[2]:4 2.000000000002E12
byte* memset::dst#2 dst zp[2]:4 1.3336666666683335E12
byte* memset::dst#4 dst zp[2]:4 2.000000002E9
byte* memset::end
byte* memset::end#0 end zp[2]:17 1.668333333336667E11
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:4
const byte* tod_buffer[]  = "00:00:00:00"
void tod_init(byte tod_init::tod_TENTHS , byte tod_init::tod_SEC , byte tod_init::tod_MIN , byte tod_init::tod_HOURS)
struct TIME_OF_DAY tod_init::tod
byte tod_init::tod_HOURS
byte tod_init::tod_HOURS#0 reg byte y 37.33333333333333
byte tod_init::tod_MIN
byte tod_init::tod_MIN#0 reg byte x 22.4
byte tod_init::tod_SEC
byte tod_init::tod_SEC#0 tod_SEC zp[1]:11 16.0
byte tod_init::tod_TENTHS
byte tod_init::tod_TENTHS#0 tod_TENTHS zp[1]:10 12.444444444444443
struct TIME_OF_DAY tod_read()
byte tod_read::hours
byte tod_read::mins
struct TIME_OF_DAY tod_read::return
byte tod_read::return_HOURS
byte tod_read::return_HOURS#0 return_HOURS zp[1]:14 122.44444444444446
byte tod_read::return_HOURS#2 reg byte a 50.5
byte tod_read::return_MIN
byte tod_read::return_MIN#0 reg byte a 157.42857142857142
byte tod_read::return_MIN#2 return_MIN zp[1]:12 50.5
byte tod_read::return_SEC
byte tod_read::return_SEC#0 reg byte x 220.39999999999998
byte tod_read::return_SEC#2 reg byte x 50.5
byte tod_read::return_TENTHS
byte tod_read::return_TENTHS#0 reg byte y 367.33333333333337
byte tod_read::return_TENTHS#2 reg byte y 50.5
byte tod_read::secs
byte tod_read::tenths
byte tod_read::tod_HOURS
byte tod_read::tod_MIN
byte tod_read::tod_SEC
byte tod_read::tod_TENTHS
byte* tod_str(byte tod_str::tod_TENTHS , byte tod_str::tod_SEC , byte tod_str::tod_MIN , byte tod_str::tod_HOURS)
byte~ tod_str::$0 reg byte a 2002.0
byte~ tod_str::$1 reg byte a 2002.0
byte~ tod_str::$10 reg byte a 2002.0
byte~ tod_str::$11 reg byte a 2002.0
byte~ tod_str::$12 reg byte a 2002.0
byte~ tod_str::$13 reg byte a 2002.0
byte~ tod_str::$14 reg byte a 2002.0
byte~ tod_str::$15 reg byte a 2002.0
byte~ tod_str::$2 reg byte a 2002.0
byte~ tod_str::$3 reg byte a 2002.0
byte~ tod_str::$4 reg byte a 2002.0
byte~ tod_str::$5 reg byte a 2002.0
byte~ tod_str::$6 reg byte a 2002.0
byte~ tod_str::$7 reg byte a 2002.0
byte~ tod_str::$8 reg byte a 2002.0
byte~ tod_str::$9 reg byte a 2002.0
byte* tod_str::return
struct TIME_OF_DAY tod_str::tod
byte tod_str::tod_HOURS
byte tod_str::tod_HOURS#0 reg byte x 525.75
byte tod_str::tod_MIN
byte tod_str::tod_MIN#0 reg byte y 191.1818181818182
byte tod_str::tod_SEC
byte tod_str::tod_SEC#0 tod_SEC zp[1]:13 116.83333333333334
byte tod_str::tod_TENTHS
byte tod_str::tod_TENTHS#0 tod_TENTHS zp[1]:14 84.12

zp[2]:2 [ cputs::s#2 cputs::s#0 ]
zp[2]:4 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
zp[2]:6 [ conio_line_text ]
zp[2]:8 [ conio_line_color ]
zp[1]:10 [ tod_init::tod_TENTHS#0 conio_cursor_x ]
zp[1]:11 [ tod_init::tod_SEC#0 conio_cursor_y ]
reg byte x [ tod_init::tod_MIN#0 ]
reg byte y [ tod_init::tod_HOURS#0 ]
reg byte y [ tod_read::return_TENTHS#2 ]
reg byte x [ tod_read::return_SEC#2 ]
zp[1]:12 [ tod_read::return_MIN#2 ]
reg byte a [ tod_read::return_HOURS#2 ]
zp[1]:13 [ tod_str::tod_SEC#0 ]
reg byte y [ tod_str::tod_MIN#0 ]
reg byte x [ tod_str::tod_HOURS#0 ]
zp[1]:14 [ tod_read::return_HOURS#0 tod_str::tod_TENTHS#0 ]
reg byte a [ tod_read::return_MIN#0 ]
reg byte x [ tod_read::return_SEC#0 ]
reg byte y [ tod_read::return_TENTHS#0 ]
reg byte a [ tod_str::$0 ]
reg byte a [ tod_str::$1 ]
reg byte a [ tod_str::$2 ]
reg byte a [ tod_str::$3 ]
reg byte a [ tod_str::$4 ]
reg byte a [ tod_str::$5 ]
reg byte a [ tod_str::$6 ]
reg byte a [ tod_str::$7 ]
reg byte a [ tod_str::$8 ]
reg byte a [ tod_str::$9 ]
reg byte a [ tod_str::$10 ]
reg byte a [ tod_str::$11 ]
reg byte a [ tod_str::$12 ]
reg byte a [ tod_str::$13 ]
reg byte a [ tod_str::$14 ]
reg byte a [ tod_str::$15 ]
reg byte a [ cputs::c#1 ]
reg byte a [ cputc::c#0 ]
zp[2]:15 [ memcpy::src_end#0 ]
zp[2]:17 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[4] [ TOD_ZERO ]
