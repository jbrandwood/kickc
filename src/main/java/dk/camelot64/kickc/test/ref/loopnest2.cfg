@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@3
@3: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @3
  [3] phi() [ ] ( )
main: scope:[main]  from @3
  [4] phi() [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::i#5 ← phi( main/(byte/signed byte/word/signed word) 100 main::@3/(byte) main::i#1 ) [ main::i#5 ] ( main:2 [ main::i#5 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@5
  [6] (byte) main::j#2 ← phi( main::@1/(byte/signed byte/word/signed word) 100 main::@5/(byte) main::j#1 ) [ main::i#5 main::j#2 ] ( main:2 [ main::i#5 main::j#2 ] )
  [7] call nest1 param-assignment [ main::i#5 main::j#2 ] ( main:2 [ main::i#5 main::j#2 ] )
  to:main::@5
main::@5: scope:[main]  from main::@2
  [8] (byte) main::j#1 ← -- (byte) main::j#2 [ main::i#5 main::j#1 ] ( main:2 [ main::i#5 main::j#1 ] )
  [9] if((byte) main::j#1>(byte/signed byte/word/signed word) 0) goto main::@2 [ main::i#5 main::j#1 ] ( main:2 [ main::i#5 main::j#1 ] )
  to:main::@3
main::@3: scope:[main]  from main::@5
  [10] (byte) main::i#1 ← -- (byte) main::i#5 [ main::i#1 ] ( main:2 [ main::i#1 ] )
  [11] if((byte) main::i#1>(byte/signed byte/word/signed word) 0) goto main::@1 [ main::i#1 ] ( main:2 [ main::i#1 ] )
  to:main::@return
main::@return: scope:[main]  from main::@3
  [12] return  [ ] ( main:2 [ ] )
  to:@return
nest1: scope:[nest1]  from main::@2
  [13] phi() [ ] ( main:2::nest1:7 [ main::i#5 main::j#2 ] )
  to:nest1::@1
nest1::@1: scope:[nest1]  from nest1 nest1::@3
  [14] (byte) nest1::i#5 ← phi( nest1/(byte/signed byte/word/signed word) 100 nest1::@3/(byte) nest1::i#1 ) [ nest1::i#5 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#5 ] )
  to:nest1::@2
nest1::@2: scope:[nest1]  from nest1::@1 nest1::@5
  [15] (byte) nest1::j#2 ← phi( nest1::@1/(byte/signed byte/word/signed word) 100 nest1::@5/(byte) nest1::j#1 ) [ nest1::i#5 nest1::j#2 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 ] )
  [16] call nest2 param-assignment [ nest1::i#5 nest1::j#2 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 ] )
  to:nest1::@5
nest1::@5: scope:[nest1]  from nest1::@2
  [17] (byte) nest1::j#1 ← -- (byte) nest1::j#2 [ nest1::i#5 nest1::j#1 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#5 nest1::j#1 ] )
  [18] if((byte) nest1::j#1>(byte/signed byte/word/signed word) 0) goto nest1::@2 [ nest1::i#5 nest1::j#1 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#5 nest1::j#1 ] )
  to:nest1::@3
nest1::@3: scope:[nest1]  from nest1::@5
  [19] (byte) nest1::i#1 ← -- (byte) nest1::i#5 [ nest1::i#1 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#1 ] )
  [20] if((byte) nest1::i#1>(byte/signed byte/word/signed word) 0) goto nest1::@1 [ nest1::i#1 ] ( main:2::nest1:7 [ main::i#5 main::j#2 nest1::i#1 ] )
  to:nest1::@return
nest1::@return: scope:[nest1]  from nest1::@3
  [21] return  [ ] ( main:2::nest1:7 [ main::i#5 main::j#2 ] )
  to:@return
nest2: scope:[nest2]  from nest1::@2
  [22] phi() [ ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 ] )
  to:nest2::@1
nest2::@1: scope:[nest2]  from nest2 nest2::@3
  [23] (byte) nest2::i#4 ← phi( nest2/(byte/signed byte/word/signed word) 100 nest2::@3/(byte) nest2::i#1 ) [ nest2::i#4 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#4 ] )
  to:nest2::@2
nest2::@2: scope:[nest2]  from nest2::@1 nest2::@2
  [24] (byte) nest2::j#2 ← phi( nest2::@1/(byte/signed byte/word/signed word) 100 nest2::@2/(byte) nest2::j#1 ) [ nest2::i#4 nest2::j#2 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#4 nest2::j#2 ] )
  [25] *((const byte*) SCREEN#0) ← (byte) nest2::j#2 [ nest2::i#4 nest2::j#2 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#4 nest2::j#2 ] )
  [26] (byte) nest2::j#1 ← -- (byte) nest2::j#2 [ nest2::i#4 nest2::j#1 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#4 nest2::j#1 ] )
  [27] if((byte) nest2::j#1>(byte/signed byte/word/signed word) 0) goto nest2::@2 [ nest2::i#4 nest2::j#1 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#4 nest2::j#1 ] )
  to:nest2::@3
nest2::@3: scope:[nest2]  from nest2::@2
  [28] (byte) nest2::i#1 ← -- (byte) nest2::i#4 [ nest2::i#1 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#1 ] )
  [29] if((byte) nest2::i#1>(byte/signed byte/word/signed word) 0) goto nest2::@1 [ nest2::i#1 ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 nest2::i#1 ] )
  to:nest2::@return
nest2::@return: scope:[nest2]  from nest2::@3
  [30] return  [ ] ( main:2::nest1:7::nest2:16 [ main::i#5 main::j#2 nest1::i#5 nest1::j#2 ] )
  to:@return
