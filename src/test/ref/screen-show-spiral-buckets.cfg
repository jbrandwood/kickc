@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call malloc 
  to:@4
@4: scope:[]  from @1
  [3] (void*) SCREEN_DIST#0 ← (void*)(byte*) malloc::mem#0
  [4] call malloc 
  to:@2
@2: scope:[]  from @4
  [5] phi()
  [6] call malloc 
  to:@5
@5: scope:[]  from @2
  [7] (void*) BUCKET_SIZES#0 ← (void*)(byte*) malloc::mem#0
  to:@3
@3: scope:[]  from @5
  [8] phi()
  [9] call main 
  to:@end
@end: scope:[]  from @3
  [10] phi()
main: scope:[main]  from @3
  [11] phi()
  [12] call init_dist_screen 
  to:main::@1
main::@1: scope:[main]  from main
  [13] phi()
  [14] call init_angle_screen 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [15] phi()
  [16] call init_buckets 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [17] return 
  to:@return
init_buckets: scope:[init_buckets]  from main::@2
  [18] phi()
  to:init_buckets::@1
init_buckets::@1: scope:[init_buckets]  from init_buckets init_buckets::@1
  [19] (byte) init_buckets::i#2 ← phi( init_buckets/(byte) 0 init_buckets::@1/(byte) init_buckets::i#1 )
  [20] (byte~) init_buckets::$2 ← (byte) init_buckets::i#2 << (byte) 1
  [21] *((word*)(void*) BUCKET_SIZES#0 + (byte~) init_buckets::$2) ← (byte) 0
  [22] (byte) init_buckets::i#1 ← ++ (byte) init_buckets::i#2
  [23] if((byte) init_buckets::i#1!=(byte) $80) goto init_buckets::@1
  to:init_buckets::@2
init_buckets::@2: scope:[init_buckets]  from init_buckets::@1
  [24] (byte*) init_buckets::dist#0 ← (byte*)(void*) SCREEN_DIST#0
  to:init_buckets::@3
init_buckets::@3: scope:[init_buckets]  from init_buckets::@2 init_buckets::@3
  [25] (word) init_buckets::i1#2 ← phi( init_buckets::@2/(word) 0 init_buckets::@3/(word) init_buckets::i1#1 )
  [25] (byte*) init_buckets::dist#2 ← phi( init_buckets::@2/(byte*) init_buckets::dist#0 init_buckets::@3/(byte*) init_buckets::dist#1 )
  [26] (byte~) init_buckets::$3 ← *((byte*) init_buckets::dist#2) << (byte) 1
  [27] *((word*)(void*) BUCKET_SIZES#0 + (byte~) init_buckets::$3) ← ++ *((word*)(void*) BUCKET_SIZES#0 + (byte~) init_buckets::$3)
  [28] (byte*) init_buckets::dist#1 ← ++ (byte*) init_buckets::dist#2
  [29] (word) init_buckets::i1#1 ← ++ (word) init_buckets::i1#2
  [30] if((word) init_buckets::i1#1!=(word) $3e8) goto init_buckets::@3
  to:init_buckets::@return
init_buckets::@return: scope:[init_buckets]  from init_buckets::@3
  [31] return 
  to:@return
init_angle_screen: scope:[init_angle_screen]  from main::@1
  [32] phi()
  to:init_angle_screen::@return
init_angle_screen::@return: scope:[init_angle_screen]  from init_angle_screen
  [33] return 
  to:@return
init_dist_screen: scope:[init_dist_screen]  from main
  [34] phi()
  to:init_dist_screen::@return
init_dist_screen::@return: scope:[init_dist_screen]  from init_dist_screen
  [35] return 
  to:@return
malloc: scope:[malloc]  from @1 @2 @4
  [36] (word) malloc::size#3 ← phi( @4/(word) $3e8 @1/(word) $3e8 @2/(byte) $80*(const byte) SIZEOF_WORD )
  [36] (byte*) heap_head#6 ← phi( @4/(byte*) heap_head#1 @1/(const byte*) HEAP_START#0 @2/(byte*) heap_head#1 )
  [37] (byte*) malloc::mem#0 ← (byte*) heap_head#6
  [38] (byte*) heap_head#1 ← (byte*) heap_head#6 + (word) malloc::size#3
  to:malloc::@return
malloc::@return: scope:[malloc]  from malloc
  [39] return 
  to:@return
