Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Added struct type cast to parameter value list (void~) main::$1 ← call printf_schar (number) -$4d (struct printf_format_number){ (number) 6, (number) 0, (number) 0, (number) 0, (number) 0, (const byte) DECIMAL } 
Added struct type cast to parameter value list (void~) main::$3 ← call printf_schar (number) $63 (struct printf_format_number){ (number) 6, (number) 0, (number) 1, (number) 1, (number) 0, (const byte) OCTAL } 
Added struct type cast to parameter value list (void~) main::$5 ← call printf_uint (number) $d80 (struct printf_format_number){ (number) $a, (number) 1, (number) 0, (number) 0, (number) 1, (const byte) HEXADECIMAL } 
Inlined call (byte~) vicSelectGfxBank::$0 ← call toDd00 (byte*) vicSelectGfxBank::gfx 
Inlined call call _init 

CONTROL FLOW GRAPH SSA

(byte()) toupper((byte) toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  (byte) toupper::ch#1 ← phi( strupr::@2/(byte) toupper::ch#0 )
  (bool~) toupper::$0 ← (byte) toupper::ch#1 >= (byte) 'a'
  (bool~) toupper::$1 ← (byte) toupper::ch#1 <= (byte) 'z'
  (bool~) toupper::$2 ← (bool~) toupper::$0 && (bool~) toupper::$1
  if((bool~) toupper::$2) goto toupper::@1
  to:toupper::@2
toupper::@1: scope:[toupper]  from toupper
  (byte) toupper::ch#2 ← phi( toupper/(byte) toupper::ch#1 )
  (byte~) toupper::$3 ← (byte) toupper::ch#2 + (byte) 'A'-(byte) 'a'
  (byte) toupper::return#0 ← (byte~) toupper::$3
  to:toupper::@return
toupper::@2: scope:[toupper]  from toupper
  (byte) toupper::ch#3 ← phi( toupper/(byte) toupper::ch#1 )
  (byte) toupper::return#1 ← (byte) toupper::ch#3
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper::@1 toupper::@2
  (byte) toupper::return#4 ← phi( toupper::@1/(byte) toupper::return#0 toupper::@2/(byte) toupper::return#1 )
  (byte) toupper::return#2 ← (byte) toupper::return#4
  return 
  to:@return

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  (word) memcpy::num#2 ← phi( cscroll::@3/(word) memcpy::num#0 cscroll::@4/(word) memcpy::num#1 )
  (void*) memcpy::destination#2 ← phi( cscroll::@3/(void*) memcpy::destination#0 cscroll::@4/(void*) memcpy::destination#1 )
  (void*) memcpy::source#2 ← phi( cscroll::@3/(void*) memcpy::source#0 cscroll::@4/(void*) memcpy::source#1 )
  (byte*) memcpy::src#0 ← ((byte*)) (void*) memcpy::source#2
  (byte*) memcpy::dst#0 ← ((byte*)) (void*) memcpy::destination#2
  (byte*~) memcpy::$2 ← (byte*)(void*) memcpy::source#2
  (byte*~) memcpy::$0 ← (byte*~) memcpy::$2 + (word) memcpy::num#2
  (byte*) memcpy::src_end#0 ← (byte*~) memcpy::$0
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  (void*) memcpy::destination#4 ← phi( memcpy/(void*) memcpy::destination#2 memcpy::@2/(void*) memcpy::destination#5 )
  (byte*) memcpy::dst#3 ← phi( memcpy/(byte*) memcpy::dst#0 memcpy::@2/(byte*) memcpy::dst#1 )
  (byte*) memcpy::src_end#1 ← phi( memcpy/(byte*) memcpy::src_end#0 memcpy::@2/(byte*) memcpy::src_end#2 )
  (byte*) memcpy::src#2 ← phi( memcpy/(byte*) memcpy::src#0 memcpy::@2/(byte*) memcpy::src#1 )
  (bool~) memcpy::$1 ← (byte*) memcpy::src#2 != (byte*) memcpy::src_end#1
  if((bool~) memcpy::$1) goto memcpy::@2
  to:memcpy::@3
memcpy::@2: scope:[memcpy]  from memcpy::@1
  (void*) memcpy::destination#5 ← phi( memcpy::@1/(void*) memcpy::destination#4 )
  (byte*) memcpy::src_end#2 ← phi( memcpy::@1/(byte*) memcpy::src_end#1 )
  (byte*) memcpy::dst#2 ← phi( memcpy::@1/(byte*) memcpy::dst#3 )
  (byte*) memcpy::src#3 ← phi( memcpy::@1/(byte*) memcpy::src#2 )
  *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#3)
  (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#3
  to:memcpy::@1
memcpy::@3: scope:[memcpy]  from memcpy::@1
  (void*) memcpy::destination#3 ← phi( memcpy::@1/(void*) memcpy::destination#4 )
  (void*) memcpy::return#0 ← (void*) memcpy::destination#3
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@3
  (void*) memcpy::return#4 ← phi( memcpy::@3/(void*) memcpy::return#0 )
  (void*) memcpy::return#1 ← (void*) memcpy::return#4
  return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  (byte) memset::c#5 ← phi( cscroll::@5/(byte) memset::c#0 cscroll::@6/(byte) memset::c#1 )
  (void*) memset::str#4 ← phi( cscroll::@5/(void*) memset::str#0 cscroll::@6/(void*) memset::str#1 )
  (word) memset::num#2 ← phi( cscroll::@5/(word) memset::num#0 cscroll::@6/(word) memset::num#1 )
  (bool~) memset::$0 ← (word) memset::num#2 > (number) 0
  (bool~) memset::$1 ← ! (bool~) memset::$0
  if((bool~) memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  (void*) memset::str#2 ← phi( memset/(void*) memset::str#4 memset::@3/(void*) memset::str#5 )
  (void*) memset::return#0 ← (void*) memset::str#2
  to:memset::@return
memset::@2: scope:[memset]  from memset
  (byte) memset::c#4 ← phi( memset/(byte) memset::c#5 )
  (word) memset::num#3 ← phi( memset/(word) memset::num#2 )
  (void*) memset::str#3 ← phi( memset/(void*) memset::str#4 )
  (byte*~) memset::$4 ← (byte*)(void*) memset::str#3
  (byte*~) memset::$2 ← (byte*~) memset::$4 + (word) memset::num#3
  (byte*) memset::end#0 ← (byte*~) memset::$2
  (byte*) memset::dst#0 ← ((byte*)) (void*) memset::str#3
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  (byte) memset::c#3 ← phi( memset::@2/(byte) memset::c#4 memset::@4/(byte) memset::c#2 )
  (void*) memset::str#5 ← phi( memset::@2/(void*) memset::str#3 memset::@4/(void*) memset::str#6 )
  (byte*) memset::end#1 ← phi( memset::@2/(byte*) memset::end#0 memset::@4/(byte*) memset::end#2 )
  (byte*) memset::dst#2 ← phi( memset::@2/(byte*) memset::dst#0 memset::@4/(byte*) memset::dst#1 )
  (bool~) memset::$3 ← (byte*) memset::dst#2 != (byte*) memset::end#1
  if((bool~) memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  (void*) memset::str#6 ← phi( memset::@3/(void*) memset::str#5 )
  (byte*) memset::end#2 ← phi( memset::@3/(byte*) memset::end#1 )
  (byte*) memset::dst#3 ← phi( memset::@3/(byte*) memset::dst#2 )
  (byte) memset::c#2 ← phi( memset::@3/(byte) memset::c#3 )
  *((byte*) memset::dst#3) ← (byte) memset::c#2
  (byte*) memset::dst#1 ← ++ (byte*) memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  (void*) memset::return#4 ← phi( memset::@1/(void*) memset::return#0 )
  (void*) memset::return#1 ← (void*) memset::return#4
  return 
  to:@return

(byte*()) strupr((byte*) strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  (byte*) strupr::str#1 ← phi( printf_number_buffer::@11/(byte*) strupr::str#0 )
  (byte*) strupr::src#0 ← (byte*) strupr::str#1
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@4
  (byte*) strupr::str#3 ← phi( strupr/(byte*) strupr::str#1 strupr::@4/(byte*) strupr::str#4 )
  (byte*) strupr::src#2 ← phi( strupr/(byte*) strupr::src#0 strupr::@4/(byte*) strupr::src#1 )
  (bool~) strupr::$1 ← (number) 0 != *((byte*) strupr::src#2)
  if((bool~) strupr::$1) goto strupr::@2
  to:strupr::@3
strupr::@2: scope:[strupr]  from strupr::@1
  (byte*) strupr::str#5 ← phi( strupr::@1/(byte*) strupr::str#3 )
  (byte*) strupr::src#3 ← phi( strupr::@1/(byte*) strupr::src#2 )
  (byte) toupper::ch#0 ← *((byte*) strupr::src#3)
  call toupper 
  (byte) toupper::return#3 ← (byte) toupper::return#2
  to:strupr::@4
strupr::@4: scope:[strupr]  from strupr::@2
  (byte*) strupr::str#4 ← phi( strupr::@2/(byte*) strupr::str#5 )
  (byte*) strupr::src#4 ← phi( strupr::@2/(byte*) strupr::src#3 )
  (byte) toupper::return#5 ← phi( strupr::@2/(byte) toupper::return#3 )
  (byte~) strupr::$0 ← (byte) toupper::return#5
  *((byte*) strupr::src#4) ← (byte~) strupr::$0
  (byte*) strupr::src#1 ← ++ (byte*) strupr::src#4
  to:strupr::@1
strupr::@3: scope:[strupr]  from strupr::@1
  (byte*) strupr::str#2 ← phi( strupr::@1/(byte*) strupr::str#3 )
  (byte*) strupr::return#0 ← (byte*) strupr::str#2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@3
  (byte*) strupr::return#3 ← phi( strupr::@3/(byte*) strupr::return#0 )
  (byte*) strupr::return#1 ← (byte*) strupr::return#3
  return 
  to:@return

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  (byte*) strlen::str#4 ← phi( printf_number_buffer::@6/(byte*) strlen::str#1 )
  (word) strlen::len#0 ← (word) 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  (word) strlen::len#4 ← phi( strlen/(word) strlen::len#0 strlen::@2/(word) strlen::len#1 )
  (byte*) strlen::str#2 ← phi( strlen/(byte*) strlen::str#4 strlen::@2/(byte*) strlen::str#0 )
  (bool~) strlen::$0 ← (number) 0 != *((byte*) strlen::str#2)
  if((bool~) strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  (byte*) strlen::str#3 ← phi( strlen::@1/(byte*) strlen::str#2 )
  (word) strlen::len#2 ← phi( strlen::@1/(word) strlen::len#4 )
  (word) strlen::len#1 ← ++ (word) strlen::len#2
  (byte*) strlen::str#0 ← ++ (byte*) strlen::str#3
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  (word) strlen::len#3 ← phi( strlen::@1/(word) strlen::len#4 )
  (word) strlen::return#0 ← (word) strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  (word) strlen::return#3 ← phi( strlen::@3/(word) strlen::return#0 )
  (word) strlen::return#1 ← (word) strlen::return#3
  return 
  to:@return

(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
uctoa: scope:[uctoa]  from printf_schar::@2
  (byte*) uctoa::buffer#21 ← phi( printf_schar::@2/(byte*) uctoa::buffer#5 )
  (byte) uctoa::value#12 ← phi( printf_schar::@2/(byte) uctoa::value#1 )
  (byte) uctoa::radix#1 ← phi( printf_schar::@2/(byte) uctoa::radix#0 )
  (byte) uctoa::max_digits#0 ← (byte) 0
  (byte*) uctoa::digit_values#0 ← (byte*) 0
  (bool~) uctoa::$0 ← (byte) uctoa::radix#1 == (const byte) DECIMAL
  if((bool~) uctoa::$0) goto uctoa::@1
  to:uctoa::@6
uctoa::@1: scope:[uctoa]  from uctoa
  (byte*) uctoa::buffer#17 ← phi( uctoa/(byte*) uctoa::buffer#21 )
  (byte) uctoa::value#8 ← phi( uctoa/(byte) uctoa::value#12 )
  (byte) uctoa::max_digits#1 ← (number) 3
  (byte*) uctoa::digit_values#1 ← (const byte*) RADIX_DECIMAL_VALUES_CHAR
  to:uctoa::@5
uctoa::@6: scope:[uctoa]  from uctoa
  (byte) uctoa::value#13 ← phi( uctoa/(byte) uctoa::value#12 )
  (byte*) uctoa::buffer#16 ← phi( uctoa/(byte*) uctoa::buffer#21 )
  (byte) uctoa::radix#2 ← phi( uctoa/(byte) uctoa::radix#1 )
  (bool~) uctoa::$1 ← (byte) uctoa::radix#2 == (const byte) HEXADECIMAL
  if((bool~) uctoa::$1) goto uctoa::@2
  to:uctoa::@7
uctoa::@2: scope:[uctoa]  from uctoa::@6
  (byte*) uctoa::buffer#18 ← phi( uctoa::@6/(byte*) uctoa::buffer#16 )
  (byte) uctoa::value#9 ← phi( uctoa::@6/(byte) uctoa::value#13 )
  (byte) uctoa::max_digits#2 ← (number) 2
  (byte*) uctoa::digit_values#2 ← (const byte*) RADIX_HEXADECIMAL_VALUES_CHAR
  to:uctoa::@5
uctoa::@7: scope:[uctoa]  from uctoa::@6
  (byte) uctoa::value#14 ← phi( uctoa::@6/(byte) uctoa::value#13 )
  (byte*) uctoa::buffer#13 ← phi( uctoa::@6/(byte*) uctoa::buffer#16 )
  (byte) uctoa::radix#3 ← phi( uctoa::@6/(byte) uctoa::radix#2 )
  (bool~) uctoa::$2 ← (byte) uctoa::radix#3 == (const byte) OCTAL
  if((bool~) uctoa::$2) goto uctoa::@3
  to:uctoa::@8
uctoa::@3: scope:[uctoa]  from uctoa::@7
  (byte*) uctoa::buffer#19 ← phi( uctoa::@7/(byte*) uctoa::buffer#13 )
  (byte) uctoa::value#10 ← phi( uctoa::@7/(byte) uctoa::value#14 )
  (byte) uctoa::max_digits#3 ← (number) 3
  (byte*) uctoa::digit_values#3 ← (const byte*) RADIX_OCTAL_VALUES_CHAR
  to:uctoa::@5
uctoa::@8: scope:[uctoa]  from uctoa::@7
  (byte) uctoa::value#15 ← phi( uctoa::@7/(byte) uctoa::value#14 )
  (byte*) uctoa::buffer#10 ← phi( uctoa::@7/(byte*) uctoa::buffer#13 )
  (byte) uctoa::radix#4 ← phi( uctoa::@7/(byte) uctoa::radix#3 )
  (bool~) uctoa::$3 ← (byte) uctoa::radix#4 == (const byte) BINARY
  if((bool~) uctoa::$3) goto uctoa::@4
  to:uctoa::@9
uctoa::@4: scope:[uctoa]  from uctoa::@8
  (byte*) uctoa::buffer#20 ← phi( uctoa::@8/(byte*) uctoa::buffer#10 )
  (byte) uctoa::value#11 ← phi( uctoa::@8/(byte) uctoa::value#15 )
  (byte) uctoa::max_digits#4 ← (number) 8
  (byte*) uctoa::digit_values#4 ← (const byte*) RADIX_BINARY_VALUES_CHAR
  to:uctoa::@5
uctoa::@9: scope:[uctoa]  from uctoa::@8
  (byte*) uctoa::buffer#6 ← phi( uctoa::@8/(byte*) uctoa::buffer#10 )
  *((byte*) uctoa::buffer#6) ← (byte) 'e'
  (byte*) uctoa::buffer#0 ← ++ (byte*) uctoa::buffer#6
  *((byte*) uctoa::buffer#0) ← (byte) 'r'
  (byte*) uctoa::buffer#1 ← ++ (byte*) uctoa::buffer#0
  *((byte*) uctoa::buffer#1) ← (byte) 'r'
  (byte*) uctoa::buffer#2 ← ++ (byte*) uctoa::buffer#1
  *((byte*) uctoa::buffer#2) ← (number) 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@12 uctoa::@9
  return 
  to:@return
uctoa::@5: scope:[uctoa]  from uctoa::@1 uctoa::@2 uctoa::@3 uctoa::@4
  (byte*) uctoa::buffer#15 ← phi( uctoa::@1/(byte*) uctoa::buffer#17 uctoa::@2/(byte*) uctoa::buffer#18 uctoa::@3/(byte*) uctoa::buffer#19 uctoa::@4/(byte*) uctoa::buffer#20 )
  (byte) uctoa::value#7 ← phi( uctoa::@1/(byte) uctoa::value#8 uctoa::@2/(byte) uctoa::value#9 uctoa::@3/(byte) uctoa::value#10 uctoa::@4/(byte) uctoa::value#11 )
  (byte*) uctoa::digit_values#8 ← phi( uctoa::@1/(byte*) uctoa::digit_values#1 uctoa::@2/(byte*) uctoa::digit_values#2 uctoa::@3/(byte*) uctoa::digit_values#3 uctoa::@4/(byte*) uctoa::digit_values#4 )
  (byte) uctoa::max_digits#7 ← phi( uctoa::@1/(byte) uctoa::max_digits#1 uctoa::@2/(byte) uctoa::max_digits#2 uctoa::@3/(byte) uctoa::max_digits#3 uctoa::@4/(byte) uctoa::max_digits#4 )
  (byte) uctoa::started#0 ← (byte) 0
  (byte) uctoa::digit#0 ← (byte) 0
  to:uctoa::@10
uctoa::@10: scope:[uctoa]  from uctoa::@13 uctoa::@5
  (byte*) uctoa::buffer#11 ← phi( uctoa::@13/(byte*) uctoa::buffer#14 uctoa::@5/(byte*) uctoa::buffer#15 )
  (byte) uctoa::started#3 ← phi( uctoa::@13/(byte) uctoa::started#4 uctoa::@5/(byte) uctoa::started#0 )
  (byte) uctoa::value#5 ← phi( uctoa::@13/(byte) uctoa::value#6 uctoa::@5/(byte) uctoa::value#7 )
  (byte*) uctoa::digit_values#6 ← phi( uctoa::@13/(byte*) uctoa::digit_values#7 uctoa::@5/(byte*) uctoa::digit_values#8 )
  (byte) uctoa::digit#2 ← phi( uctoa::@13/(byte) uctoa::digit#1 uctoa::@5/(byte) uctoa::digit#0 )
  (byte) uctoa::max_digits#5 ← phi( uctoa::@13/(byte) uctoa::max_digits#6 uctoa::@5/(byte) uctoa::max_digits#7 )
  (number~) uctoa::$4 ← (byte) uctoa::max_digits#5 - (number) 1
  (bool~) uctoa::$5 ← (byte) uctoa::digit#2 < (number~) uctoa::$4
  if((bool~) uctoa::$5) goto uctoa::@11
  to:uctoa::@12
uctoa::@11: scope:[uctoa]  from uctoa::@10
  (byte) uctoa::max_digits#8 ← phi( uctoa::@10/(byte) uctoa::max_digits#5 )
  (byte*) uctoa::buffer#12 ← phi( uctoa::@10/(byte*) uctoa::buffer#11 )
  (byte) uctoa::started#2 ← phi( uctoa::@10/(byte) uctoa::started#3 )
  (byte) uctoa::value#2 ← phi( uctoa::@10/(byte) uctoa::value#5 )
  (byte) uctoa::digit#3 ← phi( uctoa::@10/(byte) uctoa::digit#2 )
  (byte*) uctoa::digit_values#5 ← phi( uctoa::@10/(byte*) uctoa::digit_values#6 )
  (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#5 + (byte) uctoa::digit#3)
  (bool~) uctoa::$6 ← (byte) uctoa::value#2 >= (byte) uctoa::digit_value#0
  (bool~) uctoa::$7 ← (byte) uctoa::started#2 || (bool~) uctoa::$6
  (bool~) uctoa::$8 ← ! (bool~) uctoa::$7
  if((bool~) uctoa::$8) goto uctoa::@13
  to:uctoa::@14
uctoa::@12: scope:[uctoa]  from uctoa::@10
  (byte*) uctoa::buffer#7 ← phi( uctoa::@10/(byte*) uctoa::buffer#11 )
  (byte) uctoa::value#3 ← phi( uctoa::@10/(byte) uctoa::value#5 )
  (byte~) uctoa::$10 ← (byte)(byte) uctoa::value#3
  *((byte*) uctoa::buffer#7) ← *((const byte*) DIGITS + (byte~) uctoa::$10)
  (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#7
  *((byte*) uctoa::buffer#3) ← (number) 0
  to:uctoa::@return
uctoa::@13: scope:[uctoa]  from uctoa::@11 uctoa::@15
  (byte*) uctoa::buffer#14 ← phi( uctoa::@11/(byte*) uctoa::buffer#12 uctoa::@15/(byte*) uctoa::buffer#4 )
  (byte) uctoa::started#4 ← phi( uctoa::@11/(byte) uctoa::started#2 uctoa::@15/(byte) uctoa::started#1 )
  (byte) uctoa::value#6 ← phi( uctoa::@11/(byte) uctoa::value#2 uctoa::@15/(byte) uctoa::value#0 )
  (byte*) uctoa::digit_values#7 ← phi( uctoa::@11/(byte*) uctoa::digit_values#5 uctoa::@15/(byte*) uctoa::digit_values#9 )
  (byte) uctoa::max_digits#6 ← phi( uctoa::@11/(byte) uctoa::max_digits#8 uctoa::@15/(byte) uctoa::max_digits#9 )
  (byte) uctoa::digit#4 ← phi( uctoa::@11/(byte) uctoa::digit#3 uctoa::@15/(byte) uctoa::digit#5 )
  (byte) uctoa::digit#1 ← ++ (byte) uctoa::digit#4
  to:uctoa::@10
uctoa::@14: scope:[uctoa]  from uctoa::@11
  (byte*) uctoa::digit_values#10 ← phi( uctoa::@11/(byte*) uctoa::digit_values#5 )
  (byte) uctoa::max_digits#10 ← phi( uctoa::@11/(byte) uctoa::max_digits#8 )
  (byte) uctoa::digit#6 ← phi( uctoa::@11/(byte) uctoa::digit#3 )
  (byte) uctoa::digit_value#1 ← phi( uctoa::@11/(byte) uctoa::digit_value#0 )
  (byte) uctoa::value#4 ← phi( uctoa::@11/(byte) uctoa::value#2 )
  (byte*) uctoa::buffer#8 ← phi( uctoa::@11/(byte*) uctoa::buffer#12 )
  (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#8
  (byte) uctoa_append::value#0 ← (byte) uctoa::value#4
  (byte) uctoa_append::sub#0 ← (byte) uctoa::digit_value#1
  call uctoa_append 
  (byte) uctoa_append::return#0 ← (byte) uctoa_append::return#2
  to:uctoa::@15
uctoa::@15: scope:[uctoa]  from uctoa::@14
  (byte*) uctoa::digit_values#9 ← phi( uctoa::@14/(byte*) uctoa::digit_values#10 )
  (byte) uctoa::max_digits#9 ← phi( uctoa::@14/(byte) uctoa::max_digits#10 )
  (byte) uctoa::digit#5 ← phi( uctoa::@14/(byte) uctoa::digit#6 )
  (byte*) uctoa::buffer#9 ← phi( uctoa::@14/(byte*) uctoa::buffer#8 )
  (byte) uctoa_append::return#3 ← phi( uctoa::@14/(byte) uctoa_append::return#0 )
  (byte~) uctoa::$9 ← (byte) uctoa_append::return#3
  (byte) uctoa::value#0 ← (byte~) uctoa::$9
  (byte*) uctoa::buffer#4 ← ++ (byte*) uctoa::buffer#9
  (byte) uctoa::started#1 ← (number) 1
  to:uctoa::@13

(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@14
  (byte*) uctoa_append::buffer#3 ← phi( uctoa::@14/(byte*) uctoa_append::buffer#0 )
  (byte) uctoa_append::sub#3 ← phi( uctoa::@14/(byte) uctoa_append::sub#0 )
  (byte) uctoa_append::value#5 ← phi( uctoa::@14/(byte) uctoa_append::value#0 )
  (byte) uctoa_append::digit#0 ← (byte) 0
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  (byte*) uctoa_append::buffer#2 ← phi( uctoa_append/(byte*) uctoa_append::buffer#3 uctoa_append::@2/(byte*) uctoa_append::buffer#4 )
  (byte) uctoa_append::digit#4 ← phi( uctoa_append/(byte) uctoa_append::digit#0 uctoa_append::@2/(byte) uctoa_append::digit#1 )
  (byte) uctoa_append::sub#1 ← phi( uctoa_append/(byte) uctoa_append::sub#3 uctoa_append::@2/(byte) uctoa_append::sub#2 )
  (byte) uctoa_append::value#2 ← phi( uctoa_append/(byte) uctoa_append::value#5 uctoa_append::@2/(byte) uctoa_append::value#1 )
  (bool~) uctoa_append::$0 ← (byte) uctoa_append::value#2 >= (byte) uctoa_append::sub#1
  if((bool~) uctoa_append::$0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  (byte*) uctoa_append::buffer#4 ← phi( uctoa_append::@1/(byte*) uctoa_append::buffer#2 )
  (byte) uctoa_append::sub#2 ← phi( uctoa_append::@1/(byte) uctoa_append::sub#1 )
  (byte) uctoa_append::value#3 ← phi( uctoa_append::@1/(byte) uctoa_append::value#2 )
  (byte) uctoa_append::digit#2 ← phi( uctoa_append::@1/(byte) uctoa_append::digit#4 )
  (byte) uctoa_append::digit#1 ← ++ (byte) uctoa_append::digit#2
  (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#3 - (byte) uctoa_append::sub#2
  to:uctoa_append::@1
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  (byte) uctoa_append::value#4 ← phi( uctoa_append::@1/(byte) uctoa_append::value#2 )
  (byte*) uctoa_append::buffer#1 ← phi( uctoa_append::@1/(byte*) uctoa_append::buffer#2 )
  (byte) uctoa_append::digit#3 ← phi( uctoa_append::@1/(byte) uctoa_append::digit#4 )
  *((byte*) uctoa_append::buffer#1) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#3)
  (byte) uctoa_append::return#1 ← (byte) uctoa_append::value#4
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  (byte) uctoa_append::return#4 ← phi( uctoa_append::@3/(byte) uctoa_append::return#1 )
  (byte) uctoa_append::return#2 ← (byte) uctoa_append::return#4
  return 
  to:@return

(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
utoa: scope:[utoa]  from printf_uint::@3
  (byte*) utoa::buffer#21 ← phi( printf_uint::@3/(byte*) utoa::buffer#5 )
  (word) utoa::value#12 ← phi( printf_uint::@3/(word) utoa::value#1 )
  (byte) utoa::radix#1 ← phi( printf_uint::@3/(byte) utoa::radix#0 )
  (byte) utoa::max_digits#0 ← (byte) 0
  (word*) utoa::digit_values#0 ← (word*) 0
  (bool~) utoa::$0 ← (byte) utoa::radix#1 == (const byte) DECIMAL
  if((bool~) utoa::$0) goto utoa::@1
  to:utoa::@6
utoa::@1: scope:[utoa]  from utoa
  (byte*) utoa::buffer#17 ← phi( utoa/(byte*) utoa::buffer#21 )
  (word) utoa::value#8 ← phi( utoa/(word) utoa::value#12 )
  (byte) utoa::max_digits#1 ← (number) 5
  (word*) utoa::digit_values#1 ← (const word*) RADIX_DECIMAL_VALUES
  to:utoa::@5
utoa::@6: scope:[utoa]  from utoa
  (word) utoa::value#13 ← phi( utoa/(word) utoa::value#12 )
  (byte*) utoa::buffer#16 ← phi( utoa/(byte*) utoa::buffer#21 )
  (byte) utoa::radix#2 ← phi( utoa/(byte) utoa::radix#1 )
  (bool~) utoa::$1 ← (byte) utoa::radix#2 == (const byte) HEXADECIMAL
  if((bool~) utoa::$1) goto utoa::@2
  to:utoa::@7
utoa::@2: scope:[utoa]  from utoa::@6
  (byte*) utoa::buffer#18 ← phi( utoa::@6/(byte*) utoa::buffer#16 )
  (word) utoa::value#9 ← phi( utoa::@6/(word) utoa::value#13 )
  (byte) utoa::max_digits#2 ← (number) 4
  (word*) utoa::digit_values#2 ← (const word*) RADIX_HEXADECIMAL_VALUES
  to:utoa::@5
utoa::@7: scope:[utoa]  from utoa::@6
  (word) utoa::value#14 ← phi( utoa::@6/(word) utoa::value#13 )
  (byte*) utoa::buffer#13 ← phi( utoa::@6/(byte*) utoa::buffer#16 )
  (byte) utoa::radix#3 ← phi( utoa::@6/(byte) utoa::radix#2 )
  (bool~) utoa::$2 ← (byte) utoa::radix#3 == (const byte) OCTAL
  if((bool~) utoa::$2) goto utoa::@3
  to:utoa::@8
utoa::@3: scope:[utoa]  from utoa::@7
  (byte*) utoa::buffer#19 ← phi( utoa::@7/(byte*) utoa::buffer#13 )
  (word) utoa::value#10 ← phi( utoa::@7/(word) utoa::value#14 )
  (byte) utoa::max_digits#3 ← (number) 6
  (word*) utoa::digit_values#3 ← (const word*) RADIX_OCTAL_VALUES
  to:utoa::@5
utoa::@8: scope:[utoa]  from utoa::@7
  (word) utoa::value#15 ← phi( utoa::@7/(word) utoa::value#14 )
  (byte*) utoa::buffer#10 ← phi( utoa::@7/(byte*) utoa::buffer#13 )
  (byte) utoa::radix#4 ← phi( utoa::@7/(byte) utoa::radix#3 )
  (bool~) utoa::$3 ← (byte) utoa::radix#4 == (const byte) BINARY
  if((bool~) utoa::$3) goto utoa::@4
  to:utoa::@9
utoa::@4: scope:[utoa]  from utoa::@8
  (byte*) utoa::buffer#20 ← phi( utoa::@8/(byte*) utoa::buffer#10 )
  (word) utoa::value#11 ← phi( utoa::@8/(word) utoa::value#15 )
  (byte) utoa::max_digits#4 ← (number) $10
  (word*) utoa::digit_values#4 ← (const word*) RADIX_BINARY_VALUES
  to:utoa::@5
utoa::@9: scope:[utoa]  from utoa::@8
  (byte*) utoa::buffer#6 ← phi( utoa::@8/(byte*) utoa::buffer#10 )
  *((byte*) utoa::buffer#6) ← (byte) 'e'
  (byte*) utoa::buffer#0 ← ++ (byte*) utoa::buffer#6
  *((byte*) utoa::buffer#0) ← (byte) 'r'
  (byte*) utoa::buffer#1 ← ++ (byte*) utoa::buffer#0
  *((byte*) utoa::buffer#1) ← (byte) 'r'
  (byte*) utoa::buffer#2 ← ++ (byte*) utoa::buffer#1
  *((byte*) utoa::buffer#2) ← (number) 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@12 utoa::@9
  return 
  to:@return
utoa::@5: scope:[utoa]  from utoa::@1 utoa::@2 utoa::@3 utoa::@4
  (byte*) utoa::buffer#15 ← phi( utoa::@1/(byte*) utoa::buffer#17 utoa::@2/(byte*) utoa::buffer#18 utoa::@3/(byte*) utoa::buffer#19 utoa::@4/(byte*) utoa::buffer#20 )
  (word) utoa::value#7 ← phi( utoa::@1/(word) utoa::value#8 utoa::@2/(word) utoa::value#9 utoa::@3/(word) utoa::value#10 utoa::@4/(word) utoa::value#11 )
  (word*) utoa::digit_values#8 ← phi( utoa::@1/(word*) utoa::digit_values#1 utoa::@2/(word*) utoa::digit_values#2 utoa::@3/(word*) utoa::digit_values#3 utoa::@4/(word*) utoa::digit_values#4 )
  (byte) utoa::max_digits#7 ← phi( utoa::@1/(byte) utoa::max_digits#1 utoa::@2/(byte) utoa::max_digits#2 utoa::@3/(byte) utoa::max_digits#3 utoa::@4/(byte) utoa::max_digits#4 )
  (byte) utoa::started#0 ← (byte) 0
  (byte) utoa::digit#0 ← (byte) 0
  to:utoa::@10
utoa::@10: scope:[utoa]  from utoa::@13 utoa::@5
  (byte*) utoa::buffer#11 ← phi( utoa::@13/(byte*) utoa::buffer#14 utoa::@5/(byte*) utoa::buffer#15 )
  (byte) utoa::started#3 ← phi( utoa::@13/(byte) utoa::started#4 utoa::@5/(byte) utoa::started#0 )
  (word) utoa::value#5 ← phi( utoa::@13/(word) utoa::value#6 utoa::@5/(word) utoa::value#7 )
  (word*) utoa::digit_values#6 ← phi( utoa::@13/(word*) utoa::digit_values#7 utoa::@5/(word*) utoa::digit_values#8 )
  (byte) utoa::digit#2 ← phi( utoa::@13/(byte) utoa::digit#1 utoa::@5/(byte) utoa::digit#0 )
  (byte) utoa::max_digits#5 ← phi( utoa::@13/(byte) utoa::max_digits#6 utoa::@5/(byte) utoa::max_digits#7 )
  (number~) utoa::$4 ← (byte) utoa::max_digits#5 - (number) 1
  (bool~) utoa::$5 ← (byte) utoa::digit#2 < (number~) utoa::$4
  if((bool~) utoa::$5) goto utoa::@11
  to:utoa::@12
utoa::@11: scope:[utoa]  from utoa::@10
  (byte) utoa::max_digits#8 ← phi( utoa::@10/(byte) utoa::max_digits#5 )
  (byte*) utoa::buffer#12 ← phi( utoa::@10/(byte*) utoa::buffer#11 )
  (byte) utoa::started#2 ← phi( utoa::@10/(byte) utoa::started#3 )
  (word) utoa::value#2 ← phi( utoa::@10/(word) utoa::value#5 )
  (word*) utoa::digit_values#5 ← phi( utoa::@10/(word*) utoa::digit_values#6 )
  (byte) utoa::digit#3 ← phi( utoa::@10/(byte) utoa::digit#2 )
  (byte~) utoa::$10 ← (byte) utoa::digit#3 * (const byte) SIZEOF_WORD
  (word) utoa::digit_value#0 ← *((word*) utoa::digit_values#5 + (byte~) utoa::$10)
  (bool~) utoa::$6 ← (word) utoa::value#2 >= (word) utoa::digit_value#0
  (bool~) utoa::$7 ← (byte) utoa::started#2 || (bool~) utoa::$6
  (bool~) utoa::$8 ← ! (bool~) utoa::$7
  if((bool~) utoa::$8) goto utoa::@13
  to:utoa::@14
utoa::@12: scope:[utoa]  from utoa::@10
  (byte*) utoa::buffer#7 ← phi( utoa::@10/(byte*) utoa::buffer#11 )
  (word) utoa::value#3 ← phi( utoa::@10/(word) utoa::value#5 )
  (byte~) utoa::$11 ← (byte)(word) utoa::value#3
  *((byte*) utoa::buffer#7) ← *((const byte*) DIGITS + (byte~) utoa::$11)
  (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#7
  *((byte*) utoa::buffer#3) ← (number) 0
  to:utoa::@return
utoa::@13: scope:[utoa]  from utoa::@11 utoa::@15
  (byte*) utoa::buffer#14 ← phi( utoa::@11/(byte*) utoa::buffer#12 utoa::@15/(byte*) utoa::buffer#4 )
  (byte) utoa::started#4 ← phi( utoa::@11/(byte) utoa::started#2 utoa::@15/(byte) utoa::started#1 )
  (word) utoa::value#6 ← phi( utoa::@11/(word) utoa::value#2 utoa::@15/(word) utoa::value#0 )
  (word*) utoa::digit_values#7 ← phi( utoa::@11/(word*) utoa::digit_values#5 utoa::@15/(word*) utoa::digit_values#9 )
  (byte) utoa::max_digits#6 ← phi( utoa::@11/(byte) utoa::max_digits#8 utoa::@15/(byte) utoa::max_digits#9 )
  (byte) utoa::digit#4 ← phi( utoa::@11/(byte) utoa::digit#3 utoa::@15/(byte) utoa::digit#5 )
  (byte) utoa::digit#1 ← ++ (byte) utoa::digit#4
  to:utoa::@10
utoa::@14: scope:[utoa]  from utoa::@11
  (word*) utoa::digit_values#10 ← phi( utoa::@11/(word*) utoa::digit_values#5 )
  (byte) utoa::max_digits#10 ← phi( utoa::@11/(byte) utoa::max_digits#8 )
  (byte) utoa::digit#6 ← phi( utoa::@11/(byte) utoa::digit#3 )
  (word) utoa::digit_value#1 ← phi( utoa::@11/(word) utoa::digit_value#0 )
  (word) utoa::value#4 ← phi( utoa::@11/(word) utoa::value#2 )
  (byte*) utoa::buffer#8 ← phi( utoa::@11/(byte*) utoa::buffer#12 )
  (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#8
  (word) utoa_append::value#0 ← (word) utoa::value#4
  (word) utoa_append::sub#0 ← (word) utoa::digit_value#1
  call utoa_append 
  (word) utoa_append::return#0 ← (word) utoa_append::return#2
  to:utoa::@15
utoa::@15: scope:[utoa]  from utoa::@14
  (word*) utoa::digit_values#9 ← phi( utoa::@14/(word*) utoa::digit_values#10 )
  (byte) utoa::max_digits#9 ← phi( utoa::@14/(byte) utoa::max_digits#10 )
  (byte) utoa::digit#5 ← phi( utoa::@14/(byte) utoa::digit#6 )
  (byte*) utoa::buffer#9 ← phi( utoa::@14/(byte*) utoa::buffer#8 )
  (word) utoa_append::return#3 ← phi( utoa::@14/(word) utoa_append::return#0 )
  (word~) utoa::$9 ← (word) utoa_append::return#3
  (word) utoa::value#0 ← (word~) utoa::$9
  (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#9
  (byte) utoa::started#1 ← (number) 1
  to:utoa::@13

(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@14
  (byte*) utoa_append::buffer#3 ← phi( utoa::@14/(byte*) utoa_append::buffer#0 )
  (word) utoa_append::sub#3 ← phi( utoa::@14/(word) utoa_append::sub#0 )
  (word) utoa_append::value#5 ← phi( utoa::@14/(word) utoa_append::value#0 )
  (byte) utoa_append::digit#0 ← (byte) 0
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  (byte*) utoa_append::buffer#2 ← phi( utoa_append/(byte*) utoa_append::buffer#3 utoa_append::@2/(byte*) utoa_append::buffer#4 )
  (byte) utoa_append::digit#4 ← phi( utoa_append/(byte) utoa_append::digit#0 utoa_append::@2/(byte) utoa_append::digit#1 )
  (word) utoa_append::sub#1 ← phi( utoa_append/(word) utoa_append::sub#3 utoa_append::@2/(word) utoa_append::sub#2 )
  (word) utoa_append::value#2 ← phi( utoa_append/(word) utoa_append::value#5 utoa_append::@2/(word) utoa_append::value#1 )
  (bool~) utoa_append::$0 ← (word) utoa_append::value#2 >= (word) utoa_append::sub#1
  if((bool~) utoa_append::$0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  (byte*) utoa_append::buffer#4 ← phi( utoa_append::@1/(byte*) utoa_append::buffer#2 )
  (word) utoa_append::sub#2 ← phi( utoa_append::@1/(word) utoa_append::sub#1 )
  (word) utoa_append::value#3 ← phi( utoa_append::@1/(word) utoa_append::value#2 )
  (byte) utoa_append::digit#2 ← phi( utoa_append::@1/(byte) utoa_append::digit#4 )
  (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2
  (word) utoa_append::value#1 ← (word) utoa_append::value#3 - (word) utoa_append::sub#2
  to:utoa_append::@1
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  (word) utoa_append::value#4 ← phi( utoa_append::@1/(word) utoa_append::value#2 )
  (byte*) utoa_append::buffer#1 ← phi( utoa_append::@1/(byte*) utoa_append::buffer#2 )
  (byte) utoa_append::digit#3 ← phi( utoa_append::@1/(byte) utoa_append::digit#4 )
  *((byte*) utoa_append::buffer#1) ← *((const byte*) DIGITS + (byte) utoa_append::digit#3)
  (word) utoa_append::return#1 ← (word) utoa_append::value#4
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  (word) utoa_append::return#4 ← phi( utoa_append::@3/(word) utoa_append::return#1 )
  (word) utoa_append::return#2 ← (word) utoa_append::return#4
  return 
  to:@return

(void()) clrscr()
clrscr: scope:[clrscr]  from main
  (byte*) clrscr::line_text#0 ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) clrscr::line_cols#0 ← (const nomodify byte*) CONIO_SCREEN_COLORS
  (byte) clrscr::l#0 ← (byte) 0
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@6
  (byte*) clrscr::line_cols#6 ← phi( clrscr/(byte*) clrscr::line_cols#0 clrscr::@6/(byte*) clrscr::line_cols#1 )
  (byte*) clrscr::line_text#6 ← phi( clrscr/(byte*) clrscr::line_text#0 clrscr::@6/(byte*) clrscr::line_text#1 )
  (byte) clrscr::l#2 ← phi( clrscr/(byte) clrscr::l#0 clrscr::@6/(byte) clrscr::l#1 )
  (bool~) clrscr::$0 ← (byte) clrscr::l#2 < (number) $19
  if((bool~) clrscr::$0) goto clrscr::@2
  to:clrscr::@3
clrscr::@2: scope:[clrscr]  from clrscr::@1
  (byte) clrscr::l#5 ← phi( clrscr::@1/(byte) clrscr::l#2 )
  (byte*) clrscr::line_cols#5 ← phi( clrscr::@1/(byte*) clrscr::line_cols#6 )
  (byte*) clrscr::line_text#5 ← phi( clrscr::@1/(byte*) clrscr::line_text#6 )
  (byte) clrscr::c#0 ← (byte) 0
  to:clrscr::@4
clrscr::@3: scope:[clrscr]  from clrscr::@1
  (byte) conio_cursor_x ← (number) 0
  (byte) conio_cursor_y ← (number) 0
  (byte*) conio_line_text ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) conio_line_color ← (const nomodify byte*) CONIO_SCREEN_COLORS
  to:clrscr::@return
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  (byte) clrscr::l#4 ← phi( clrscr::@2/(byte) clrscr::l#5 clrscr::@5/(byte) clrscr::l#6 )
  (byte*) clrscr::line_cols#4 ← phi( clrscr::@2/(byte*) clrscr::line_cols#5 clrscr::@5/(byte*) clrscr::line_cols#2 )
  (byte*) clrscr::line_text#4 ← phi( clrscr::@2/(byte*) clrscr::line_text#5 clrscr::@5/(byte*) clrscr::line_text#2 )
  (byte) clrscr::c#2 ← phi( clrscr::@2/(byte) clrscr::c#0 clrscr::@5/(byte) clrscr::c#1 )
  (bool~) clrscr::$1 ← (byte) clrscr::c#2 < (number) $28
  if((bool~) clrscr::$1) goto clrscr::@5
  to:clrscr::@6
clrscr::@5: scope:[clrscr]  from clrscr::@4
  (byte) clrscr::l#6 ← phi( clrscr::@4/(byte) clrscr::l#4 )
  (byte*) clrscr::line_cols#2 ← phi( clrscr::@4/(byte*) clrscr::line_cols#4 )
  (byte) clrscr::c#3 ← phi( clrscr::@4/(byte) clrscr::c#2 )
  (byte*) clrscr::line_text#2 ← phi( clrscr::@4/(byte*) clrscr::line_text#4 )
  *((byte*) clrscr::line_text#2 + (byte) clrscr::c#3) ← (byte) ' '
  *((byte*) clrscr::line_cols#2 + (byte) clrscr::c#3) ← (byte) conio_textcolor
  (byte) clrscr::c#1 ← ++ (byte) clrscr::c#3
  to:clrscr::@4
clrscr::@6: scope:[clrscr]  from clrscr::@4
  (byte) clrscr::l#3 ← phi( clrscr::@4/(byte) clrscr::l#4 )
  (byte*) clrscr::line_cols#3 ← phi( clrscr::@4/(byte*) clrscr::line_cols#4 )
  (byte*) clrscr::line_text#3 ← phi( clrscr::@4/(byte*) clrscr::line_text#4 )
  (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#3 + (number) $28
  (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#3 + (number) $28
  (byte) clrscr::l#1 ← ++ (byte) clrscr::l#3
  to:clrscr::@1
clrscr::@return: scope:[clrscr]  from clrscr::@3
  return 
  to:@return

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cscroll::@2
  (byte) gotoxy::x#4 ← phi( cscroll::@2/(byte) gotoxy::x#1 )
  (byte) gotoxy::y#2 ← phi( cscroll::@2/(byte) gotoxy::y#1 )
  (bool~) gotoxy::$0 ← (byte) gotoxy::y#2 > (number) $19
  (bool~) gotoxy::$1 ← ! (bool~) gotoxy::$0
  if((bool~) gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  (byte) gotoxy::y#4 ← phi( gotoxy/(byte) gotoxy::y#2 gotoxy::@3/(byte) gotoxy::y#0 )
  (byte) gotoxy::x#2 ← phi( gotoxy/(byte) gotoxy::x#4 gotoxy::@3/(byte) gotoxy::x#5 )
  (bool~) gotoxy::$2 ← (byte) gotoxy::x#2 >= (number) $28
  (bool~) gotoxy::$3 ← ! (bool~) gotoxy::$2
  if((bool~) gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  (byte) gotoxy::x#5 ← phi( gotoxy/(byte) gotoxy::x#4 )
  (byte) gotoxy::y#0 ← (number) 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  (byte) gotoxy::y#3 ← phi( gotoxy::@1/(byte) gotoxy::y#4 gotoxy::@4/(byte) gotoxy::y#5 )
  (byte) gotoxy::x#3 ← phi( gotoxy::@1/(byte) gotoxy::x#2 gotoxy::@4/(byte) gotoxy::x#0 )
  (byte) conio_cursor_x ← (byte) gotoxy::x#3
  (byte) conio_cursor_y ← (byte) gotoxy::y#3
  (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#3
  (number~) gotoxy::$4 ← (word~) gotoxy::$7 * (number) $28
  (word) gotoxy::line_offset#0 ← (number~) gotoxy::$4
  (byte*~) gotoxy::$5 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::line_offset#0
  (byte*) conio_line_text ← (byte*~) gotoxy::$5
  (byte*~) gotoxy::$6 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::line_offset#0
  (byte*) conio_line_color ← (byte*~) gotoxy::$6
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  (byte) gotoxy::y#5 ← phi( gotoxy::@1/(byte) gotoxy::y#4 )
  (byte) gotoxy::x#0 ← (number) 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@9 printf_padding::@2
  (byte) cputc::c#3 ← phi( cputs::@2/(byte) cputc::c#0 printf_number_buffer::@9/(byte) cputc::c#2 printf_padding::@2/(byte) cputc::c#1 )
  (bool~) cputc::$0 ← (byte) cputc::c#3 == (byte) '
'
  if((bool~) cputc::$0) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc
  call cputln 
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc
  (byte) cputc::c#4 ← phi( cputc/(byte) cputc::c#3 )
  *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#4
  *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor
  (byte) conio_cursor_x ← ++ (byte) conio_cursor_x
  (bool~) cputc::$1 ← (byte) conio_cursor_x == (number) $28
  (bool~) cputc::$2 ← ! (bool~) cputc::$1
  if((bool~) cputc::$2) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  call cputln 
  to:cputc::@5
cputc::@5: scope:[cputc]  from cputc::@3
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@2 cputc::@4 cputc::@5
  return 
  to:@return

(void()) cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3 main::@2 main::@4 main::@6
  (byte*) conio_line_text ← (byte*) conio_line_text + (number) $28
  (byte*) conio_line_color ← (byte*) conio_line_color + (number) $28
  (byte) conio_cursor_x ← (number) 0
  (byte) conio_cursor_y ← ++ (byte) conio_cursor_y
  call cscroll 
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

(void()) cscroll()
cscroll: scope:[cscroll]  from cputln
  (bool~) cscroll::$0 ← (byte) conio_cursor_y == (number) $19
  (bool~) cscroll::$1 ← ! (bool~) cscroll::$0
  if((bool~) cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  (bool~) cscroll::$7 ← (number) 0 != (byte) conio_scroll_enable
  if((bool~) cscroll::$7) goto cscroll::@3
  to:cscroll::@2
cscroll::@3: scope:[cscroll]  from cscroll::@1
  (void*) memcpy::destination#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT
  (void*) memcpy::source#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $28
  (word) memcpy::num#0 ← (number) $19*(number) $28-(number) $28
  call memcpy 
  (void*) memcpy::return#2 ← (void*) memcpy::return#1
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  (void*) memcpy::destination#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS
  (void*) memcpy::source#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $28
  (word) memcpy::num#1 ← (number) $19*(number) $28-(number) $28
  call memcpy 
  (void*) memcpy::return#3 ← (void*) memcpy::return#1
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  (void*) memset::str#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $19*(number) $28-(number) $28
  (byte) memset::c#0 ← (byte) ' '
  (word) memset::num#0 ← (number) $28
  call memset 
  (void*) memset::return#2 ← (void*) memset::return#1
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  (void*) memset::str#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $19*(number) $28-(number) $28
  (byte) memset::c#1 ← (byte) conio_textcolor
  (word) memset::num#1 ← (number) $28
  call memset 
  (void*) memset::return#3 ← (void*) memset::return#1
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  (byte*) conio_line_text ← (byte*) conio_line_text - (number) $28
  (byte*) conio_line_color ← (byte*) conio_line_color - (number) $28
  (byte) conio_cursor_y ← -- (byte) conio_cursor_y
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  (byte) gotoxy::x#1 ← (number) 0
  (byte) gotoxy::y#1 ← (number) 0
  call gotoxy 
  to:cscroll::@8
cscroll::@8: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@7 cscroll::@8
  return 
  to:@return

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from printf_number_buffer::@5
  (to_nomodify byte*) cputs::s#3 ← phi( printf_number_buffer::@5/(to_nomodify byte*) cputs::s#1 )
  (byte) cputs::c#0 ← (byte) 0
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@3
  (to_nomodify byte*) cputs::s#2 ← phi( cputs/(to_nomodify byte*) cputs::s#3 cputs::@3/(to_nomodify byte*) cputs::s#4 )
  (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  (bool~) cputs::$1 ← (number) 0 != (byte) cputs::c#1
  if((bool~) cputs::$1) goto cputs::@2
  to:cputs::@return
cputs::@2: scope:[cputs]  from cputs::@1
  (to_nomodify byte*) cputs::s#5 ← phi( cputs::@1/(to_nomodify byte*) cputs::s#0 )
  (byte) cputs::c#2 ← phi( cputs::@1/(byte) cputs::c#1 )
  (byte) cputc::c#0 ← (byte) cputs::c#2
  call cputc 
  to:cputs::@3
cputs::@3: scope:[cputs]  from cputs::@2
  (to_nomodify byte*) cputs::s#4 ← phi( cputs::@2/(to_nomodify byte*) cputs::s#5 )
  to:cputs::@1
cputs::@return: scope:[cputs]  from cputs::@1
  return 
  to:@return

(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  (byte) printf_padding::pad#5 ← phi( printf_number_buffer::@10/(byte) printf_padding::pad#1 printf_number_buffer::@12/(byte) printf_padding::pad#2 printf_number_buffer::@8/(byte) printf_padding::pad#0 )
  (byte) printf_padding::length#4 ← phi( printf_number_buffer::@10/(byte) printf_padding::length#1 printf_number_buffer::@12/(byte) printf_padding::length#2 printf_number_buffer::@8/(byte) printf_padding::length#0 )
  (byte) printf_padding::i#0 ← (byte) 0
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  (byte) printf_padding::pad#4 ← phi( printf_padding/(byte) printf_padding::pad#5 printf_padding::@3/(byte) printf_padding::pad#6 )
  (byte) printf_padding::length#3 ← phi( printf_padding/(byte) printf_padding::length#4 printf_padding::@3/(byte) printf_padding::length#5 )
  (byte) printf_padding::i#2 ← phi( printf_padding/(byte) printf_padding::i#0 printf_padding::@3/(byte) printf_padding::i#1 )
  (bool~) printf_padding::$0 ← (byte) printf_padding::i#2 < (byte) printf_padding::length#3
  if((bool~) printf_padding::$0) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  (byte) printf_padding::length#6 ← phi( printf_padding::@1/(byte) printf_padding::length#3 )
  (byte) printf_padding::i#4 ← phi( printf_padding::@1/(byte) printf_padding::i#2 )
  (byte) printf_padding::pad#3 ← phi( printf_padding::@1/(byte) printf_padding::pad#4 )
  (byte) cputc::c#1 ← (byte) printf_padding::pad#3
  call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  (byte) printf_padding::pad#6 ← phi( printf_padding::@2/(byte) printf_padding::pad#3 )
  (byte) printf_padding::length#5 ← phi( printf_padding::@2/(byte) printf_padding::length#6 )
  (byte) printf_padding::i#3 ← phi( printf_padding::@2/(byte) printf_padding::i#4 )
  (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#3
  to:printf_padding::@1
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  return 
  to:@return

(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@5
  (byte) printf_uint::format_upper_case#5 ← phi( main::@5/(byte) printf_uint::format_upper_case#0 )
  (byte) printf_uint::format_zero_padding#5 ← phi( main::@5/(byte) printf_uint::format_zero_padding#0 )
  (byte) printf_uint::format_justify_left#5 ← phi( main::@5/(byte) printf_uint::format_justify_left#0 )
  (byte) printf_uint::format_min_length#5 ← phi( main::@5/(byte) printf_uint::format_min_length#0 )
  (byte) printf_uint::format_radix#5 ← phi( main::@5/(byte) printf_uint::format_radix#0 )
  (word) printf_uint::uvalue#4 ← phi( main::@5/(word) printf_uint::uvalue#0 )
  (byte) printf_uint::format_sign_always#1 ← phi( main::@5/(byte) printf_uint::format_sign_always#0 )
  (bool~) printf_uint::$5 ← (number) 0 != (byte) printf_uint::format_sign_always#1
  if((bool~) printf_uint::$5) goto printf_uint::@1
  to:printf_uint::@2
printf_uint::@1: scope:[printf_uint]  from printf_uint
  (byte) printf_uint::format_upper_case#3 ← phi( printf_uint/(byte) printf_uint::format_upper_case#5 )
  (byte) printf_uint::format_zero_padding#3 ← phi( printf_uint/(byte) printf_uint::format_zero_padding#5 )
  (byte) printf_uint::format_sign_always#4 ← phi( printf_uint/(byte) printf_uint::format_sign_always#1 )
  (byte) printf_uint::format_justify_left#3 ← phi( printf_uint/(byte) printf_uint::format_justify_left#5 )
  (byte) printf_uint::format_min_length#3 ← phi( printf_uint/(byte) printf_uint::format_min_length#5 )
  (byte) printf_uint::format_radix#3 ← phi( printf_uint/(byte) printf_uint::format_radix#5 )
  (word) printf_uint::uvalue#2 ← phi( printf_uint/(word) printf_uint::uvalue#4 )
  (byte~) printf_uint::$1 ← (byte) '+'
  to:printf_uint::@3
printf_uint::@2: scope:[printf_uint]  from printf_uint
  (byte) printf_uint::format_upper_case#4 ← phi( printf_uint/(byte) printf_uint::format_upper_case#5 )
  (byte) printf_uint::format_zero_padding#4 ← phi( printf_uint/(byte) printf_uint::format_zero_padding#5 )
  (byte) printf_uint::format_sign_always#5 ← phi( printf_uint/(byte) printf_uint::format_sign_always#1 )
  (byte) printf_uint::format_justify_left#4 ← phi( printf_uint/(byte) printf_uint::format_justify_left#5 )
  (byte) printf_uint::format_min_length#4 ← phi( printf_uint/(byte) printf_uint::format_min_length#5 )
  (byte) printf_uint::format_radix#4 ← phi( printf_uint/(byte) printf_uint::format_radix#5 )
  (word) printf_uint::uvalue#3 ← phi( printf_uint/(word) printf_uint::uvalue#4 )
  (number~) printf_uint::$0 ← (number) 0
  to:printf_uint::@3
printf_uint::@3: scope:[printf_uint]  from printf_uint::@1 printf_uint::@2
  (byte) printf_uint::format_upper_case#2 ← phi( printf_uint::@1/(byte) printf_uint::format_upper_case#3 printf_uint::@2/(byte) printf_uint::format_upper_case#4 )
  (byte) printf_uint::format_zero_padding#2 ← phi( printf_uint::@1/(byte) printf_uint::format_zero_padding#3 printf_uint::@2/(byte) printf_uint::format_zero_padding#4 )
  (byte) printf_uint::format_sign_always#3 ← phi( printf_uint::@1/(byte) printf_uint::format_sign_always#4 printf_uint::@2/(byte) printf_uint::format_sign_always#5 )
  (byte) printf_uint::format_justify_left#2 ← phi( printf_uint::@1/(byte) printf_uint::format_justify_left#3 printf_uint::@2/(byte) printf_uint::format_justify_left#4 )
  (byte) printf_uint::format_min_length#2 ← phi( printf_uint::@1/(byte) printf_uint::format_min_length#3 printf_uint::@2/(byte) printf_uint::format_min_length#4 )
  (byte) printf_uint::format_radix#1 ← phi( printf_uint::@1/(byte) printf_uint::format_radix#3 printf_uint::@2/(byte) printf_uint::format_radix#4 )
  (word) printf_uint::uvalue#1 ← phi( printf_uint::@1/(word) printf_uint::uvalue#2 printf_uint::@2/(word) printf_uint::uvalue#3 )
  (number~) printf_uint::$2 ← phi( printf_uint::@1/(byte~) printf_uint::$1 printf_uint::@2/(number~) printf_uint::$0 )
  *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (number~) printf_uint::$2
  (word) utoa::value#1 ← (word) printf_uint::uvalue#1
  (byte*) utoa::buffer#5 ← (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  (byte) utoa::radix#0 ← (byte) printf_uint::format_radix#1
  call utoa 
  to:printf_uint::@4
printf_uint::@4: scope:[printf_uint]  from printf_uint::@3
  (byte) printf_uint::format_radix#2 ← phi( printf_uint::@3/(byte) printf_uint::format_radix#1 )
  (byte) printf_uint::format_upper_case#1 ← phi( printf_uint::@3/(byte) printf_uint::format_upper_case#2 )
  (byte) printf_uint::format_zero_padding#1 ← phi( printf_uint::@3/(byte) printf_uint::format_zero_padding#2 )
  (byte) printf_uint::format_sign_always#2 ← phi( printf_uint::@3/(byte) printf_uint::format_sign_always#3 )
  (byte) printf_uint::format_justify_left#1 ← phi( printf_uint::@3/(byte) printf_uint::format_justify_left#2 )
  (byte) printf_uint::format_min_length#1 ← phi( printf_uint::@3/(byte) printf_uint::format_min_length#2 )
  (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  (byte*) printf_number_buffer::buffer_digits#0 ← (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  (byte) printf_number_buffer::format_min_length#0 ← (byte) printf_uint::format_min_length#1
  (byte) printf_number_buffer::format_justify_left#0 ← (byte) printf_uint::format_justify_left#1
  (byte) printf_number_buffer::format_sign_always#0 ← (byte) printf_uint::format_sign_always#2
  (byte) printf_number_buffer::format_zero_padding#0 ← (byte) printf_uint::format_zero_padding#1
  (byte) printf_number_buffer::format_upper_case#0 ← (byte) printf_uint::format_upper_case#1
  (byte) printf_number_buffer::format_radix#0 ← (byte) printf_uint::format_radix#2
  call printf_number_buffer 
  to:printf_uint::@5
printf_uint::@5: scope:[printf_uint]  from printf_uint::@4
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@5
  return 
  to:@return

(void()) printf_schar((signed byte) printf_schar::value , (byte) printf_schar::format_min_length , (byte) printf_schar::format_justify_left , (byte) printf_schar::format_sign_always , (byte) printf_schar::format_zero_padding , (byte) printf_schar::format_upper_case , (byte) printf_schar::format_radix)
printf_schar: scope:[printf_schar]  from main::@1 main::@3
  (byte) printf_schar::format_upper_case#7 ← phi( main::@1/(byte) printf_schar::format_upper_case#0 main::@3/(byte) printf_schar::format_upper_case#1 )
  (byte) printf_schar::format_zero_padding#7 ← phi( main::@1/(byte) printf_schar::format_zero_padding#0 main::@3/(byte) printf_schar::format_zero_padding#1 )
  (byte) printf_schar::format_justify_left#7 ← phi( main::@1/(byte) printf_schar::format_justify_left#0 main::@3/(byte) printf_schar::format_justify_left#1 )
  (byte) printf_schar::format_min_length#7 ← phi( main::@1/(byte) printf_schar::format_min_length#0 main::@3/(byte) printf_schar::format_min_length#1 )
  (byte) printf_schar::format_radix#7 ← phi( main::@1/(byte) printf_schar::format_radix#0 main::@3/(byte) printf_schar::format_radix#1 )
  (byte) printf_schar::format_sign_always#4 ← phi( main::@1/(byte) printf_schar::format_sign_always#0 main::@3/(byte) printf_schar::format_sign_always#1 )
  (signed byte) printf_schar::value#3 ← phi( main::@1/(signed byte) printf_schar::value#1 main::@3/(signed byte) printf_schar::value#2 )
  *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (number) 0
  (bool~) printf_schar::$0 ← (signed byte) printf_schar::value#3 < (number) 0
  if((bool~) printf_schar::$0) goto printf_schar::@1
  to:printf_schar::@3
printf_schar::@1: scope:[printf_schar]  from printf_schar
  (byte) printf_schar::format_upper_case#4 ← phi( printf_schar/(byte) printf_schar::format_upper_case#7 )
  (byte) printf_schar::format_zero_padding#4 ← phi( printf_schar/(byte) printf_schar::format_zero_padding#7 )
  (byte) printf_schar::format_sign_always#6 ← phi( printf_schar/(byte) printf_schar::format_sign_always#4 )
  (byte) printf_schar::format_justify_left#4 ← phi( printf_schar/(byte) printf_schar::format_justify_left#7 )
  (byte) printf_schar::format_min_length#4 ← phi( printf_schar/(byte) printf_schar::format_min_length#7 )
  (byte) printf_schar::format_radix#4 ← phi( printf_schar/(byte) printf_schar::format_radix#7 )
  (signed byte) printf_schar::value#4 ← phi( printf_schar/(signed byte) printf_schar::value#3 )
  (signed byte~) printf_schar::$4 ← - (signed byte) printf_schar::value#4
  (signed byte) printf_schar::value#0 ← (signed byte~) printf_schar::$4
  *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (byte) '-'
  to:printf_schar::@2
printf_schar::@3: scope:[printf_schar]  from printf_schar
  (byte) printf_schar::format_upper_case#5 ← phi( printf_schar/(byte) printf_schar::format_upper_case#7 )
  (byte) printf_schar::format_zero_padding#5 ← phi( printf_schar/(byte) printf_schar::format_zero_padding#7 )
  (byte) printf_schar::format_justify_left#5 ← phi( printf_schar/(byte) printf_schar::format_justify_left#7 )
  (byte) printf_schar::format_min_length#5 ← phi( printf_schar/(byte) printf_schar::format_min_length#7 )
  (byte) printf_schar::format_radix#5 ← phi( printf_schar/(byte) printf_schar::format_radix#7 )
  (signed byte) printf_schar::value#6 ← phi( printf_schar/(signed byte) printf_schar::value#3 )
  (byte) printf_schar::format_sign_always#2 ← phi( printf_schar/(byte) printf_schar::format_sign_always#4 )
  (bool~) printf_schar::$5 ← (number) 0 != (byte) printf_schar::format_sign_always#2
  (bool~) printf_schar::$3 ← ! (bool~) printf_schar::$5
  if((bool~) printf_schar::$3) goto printf_schar::@2
  to:printf_schar::@4
printf_schar::@4: scope:[printf_schar]  from printf_schar::@3
  (byte) printf_schar::format_upper_case#6 ← phi( printf_schar::@3/(byte) printf_schar::format_upper_case#5 )
  (byte) printf_schar::format_zero_padding#6 ← phi( printf_schar::@3/(byte) printf_schar::format_zero_padding#5 )
  (byte) printf_schar::format_sign_always#7 ← phi( printf_schar::@3/(byte) printf_schar::format_sign_always#2 )
  (byte) printf_schar::format_justify_left#6 ← phi( printf_schar::@3/(byte) printf_schar::format_justify_left#5 )
  (byte) printf_schar::format_min_length#6 ← phi( printf_schar::@3/(byte) printf_schar::format_min_length#5 )
  (byte) printf_schar::format_radix#6 ← phi( printf_schar::@3/(byte) printf_schar::format_radix#5 )
  (signed byte) printf_schar::value#7 ← phi( printf_schar::@3/(signed byte) printf_schar::value#6 )
  *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (byte) '+'
  to:printf_schar::@2
printf_schar::@2: scope:[printf_schar]  from printf_schar::@1 printf_schar::@3 printf_schar::@4
  (byte) printf_schar::format_upper_case#3 ← phi( printf_schar::@1/(byte) printf_schar::format_upper_case#4 printf_schar::@3/(byte) printf_schar::format_upper_case#5 printf_schar::@4/(byte) printf_schar::format_upper_case#6 )
  (byte) printf_schar::format_zero_padding#3 ← phi( printf_schar::@1/(byte) printf_schar::format_zero_padding#4 printf_schar::@3/(byte) printf_schar::format_zero_padding#5 printf_schar::@4/(byte) printf_schar::format_zero_padding#6 )
  (byte) printf_schar::format_sign_always#5 ← phi( printf_schar::@1/(byte) printf_schar::format_sign_always#6 printf_schar::@3/(byte) printf_schar::format_sign_always#2 printf_schar::@4/(byte) printf_schar::format_sign_always#7 )
  (byte) printf_schar::format_justify_left#3 ← phi( printf_schar::@1/(byte) printf_schar::format_justify_left#4 printf_schar::@3/(byte) printf_schar::format_justify_left#5 printf_schar::@4/(byte) printf_schar::format_justify_left#6 )
  (byte) printf_schar::format_min_length#3 ← phi( printf_schar::@1/(byte) printf_schar::format_min_length#4 printf_schar::@3/(byte) printf_schar::format_min_length#5 printf_schar::@4/(byte) printf_schar::format_min_length#6 )
  (byte) printf_schar::format_radix#2 ← phi( printf_schar::@1/(byte) printf_schar::format_radix#4 printf_schar::@3/(byte) printf_schar::format_radix#5 printf_schar::@4/(byte) printf_schar::format_radix#6 )
  (signed byte) printf_schar::value#5 ← phi( printf_schar::@1/(signed byte) printf_schar::value#0 printf_schar::@3/(signed byte) printf_schar::value#6 printf_schar::@4/(signed byte) printf_schar::value#7 )
  (byte) printf_schar::uvalue#0 ← (byte)(signed byte) printf_schar::value#5
  (byte) uctoa::value#1 ← (byte) printf_schar::uvalue#0
  (byte*) uctoa::buffer#5 ← (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  (byte) uctoa::radix#0 ← (byte) printf_schar::format_radix#2
  call uctoa 
  to:printf_schar::@5
printf_schar::@5: scope:[printf_schar]  from printf_schar::@2
  (byte) printf_schar::format_radix#3 ← phi( printf_schar::@2/(byte) printf_schar::format_radix#2 )
  (byte) printf_schar::format_upper_case#2 ← phi( printf_schar::@2/(byte) printf_schar::format_upper_case#3 )
  (byte) printf_schar::format_zero_padding#2 ← phi( printf_schar::@2/(byte) printf_schar::format_zero_padding#3 )
  (byte) printf_schar::format_sign_always#3 ← phi( printf_schar::@2/(byte) printf_schar::format_sign_always#5 )
  (byte) printf_schar::format_justify_left#2 ← phi( printf_schar::@2/(byte) printf_schar::format_justify_left#3 )
  (byte) printf_schar::format_min_length#2 ← phi( printf_schar::@2/(byte) printf_schar::format_min_length#3 )
  (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  (byte*) printf_number_buffer::buffer_digits#1 ← (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  (byte) printf_number_buffer::format_min_length#1 ← (byte) printf_schar::format_min_length#2
  (byte) printf_number_buffer::format_justify_left#1 ← (byte) printf_schar::format_justify_left#2
  (byte) printf_number_buffer::format_sign_always#1 ← (byte) printf_schar::format_sign_always#3
  (byte) printf_number_buffer::format_zero_padding#1 ← (byte) printf_schar::format_zero_padding#2
  (byte) printf_number_buffer::format_upper_case#1 ← (byte) printf_schar::format_upper_case#2
  (byte) printf_number_buffer::format_radix#1 ← (byte) printf_schar::format_radix#3
  call printf_number_buffer 
  to:printf_schar::@6
printf_schar::@6: scope:[printf_schar]  from printf_schar::@5
  to:printf_schar::@return
printf_schar::@return: scope:[printf_schar]  from printf_schar::@6
  return 
  to:@return

(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_schar::@5 printf_uint::@4
  (byte) printf_number_buffer::format_upper_case#11 ← phi( printf_schar::@5/(byte) printf_number_buffer::format_upper_case#1 printf_uint::@4/(byte) printf_number_buffer::format_upper_case#0 )
  (byte) printf_number_buffer::buffer_sign#8 ← phi( printf_schar::@5/(byte) printf_number_buffer::buffer_sign#1 printf_uint::@4/(byte) printf_number_buffer::buffer_sign#0 )
  (byte*) printf_number_buffer::buffer_digits#5 ← phi( printf_schar::@5/(byte*) printf_number_buffer::buffer_digits#1 printf_uint::@4/(byte*) printf_number_buffer::buffer_digits#0 )
  (byte) printf_number_buffer::format_zero_padding#5 ← phi( printf_schar::@5/(byte) printf_number_buffer::format_zero_padding#1 printf_uint::@4/(byte) printf_number_buffer::format_zero_padding#0 )
  (byte) printf_number_buffer::format_justify_left#4 ← phi( printf_schar::@5/(byte) printf_number_buffer::format_justify_left#1 printf_uint::@4/(byte) printf_number_buffer::format_justify_left#0 )
  (byte) printf_number_buffer::format_min_length#2 ← phi( printf_schar::@5/(byte) printf_number_buffer::format_min_length#1 printf_uint::@4/(byte) printf_number_buffer::format_min_length#0 )
  (signed byte) printf_number_buffer::padding#0 ← (signed byte) 0
  (bool~) printf_number_buffer::$26 ← (number) 0 != (byte) printf_number_buffer::format_min_length#2
  (bool~) printf_number_buffer::$0 ← ! (bool~) printf_number_buffer::$26
  if((bool~) printf_number_buffer::$0) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@14
  (byte*) printf_number_buffer::buffer_digits#13 ← phi( printf_number_buffer/(byte*) printf_number_buffer::buffer_digits#5 printf_number_buffer::@13/(byte*) printf_number_buffer::buffer_digits#16 printf_number_buffer::@14/(byte*) printf_number_buffer::buffer_digits#17 )
  (byte) printf_number_buffer::format_upper_case#8 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_upper_case#11 printf_number_buffer::@13/(byte) printf_number_buffer::format_upper_case#12 printf_number_buffer::@14/(byte) printf_number_buffer::format_upper_case#13 )
  (byte) printf_number_buffer::buffer_sign#6 ← phi( printf_number_buffer/(byte) printf_number_buffer::buffer_sign#8 printf_number_buffer::@13/(byte) printf_number_buffer::buffer_sign#9 printf_number_buffer::@14/(byte) printf_number_buffer::buffer_sign#10 )
  (signed byte) printf_number_buffer::padding#3 ← phi( printf_number_buffer/(signed byte) printf_number_buffer::padding#0 printf_number_buffer::@13/(signed byte) printf_number_buffer::padding#1 printf_number_buffer::@14/(signed byte) printf_number_buffer::padding#2 )
  (byte) printf_number_buffer::format_zero_padding#2 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_zero_padding#5 printf_number_buffer::@13/(byte) printf_number_buffer::format_zero_padding#6 printf_number_buffer::@14/(byte) printf_number_buffer::format_zero_padding#7 )
  (byte) printf_number_buffer::format_justify_left#2 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_justify_left#4 printf_number_buffer::@13/(byte) printf_number_buffer::format_justify_left#5 printf_number_buffer::@14/(byte) printf_number_buffer::format_justify_left#6 )
  (bool~) printf_number_buffer::$27 ← (number) 0 != (byte) printf_number_buffer::format_justify_left#2
  (bool~) printf_number_buffer::$1 ← ! (bool~) printf_number_buffer::$27
  (bool~) printf_number_buffer::$28 ← (number) 0 != (byte) printf_number_buffer::format_zero_padding#2
  (bool~) printf_number_buffer::$2 ← ! (bool~) printf_number_buffer::$28
  (bool~) printf_number_buffer::$3 ← (bool~) printf_number_buffer::$1 && (bool~) printf_number_buffer::$2
  (bool~) printf_number_buffer::$4 ← (bool~) printf_number_buffer::$3 && (signed byte) printf_number_buffer::padding#3
  (bool~) printf_number_buffer::$5 ← ! (bool~) printf_number_buffer::$4
  if((bool~) printf_number_buffer::$5) goto printf_number_buffer::@2
  to:printf_number_buffer::@8
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  (byte) printf_number_buffer::format_upper_case#17 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_upper_case#11 )
  (byte) printf_number_buffer::format_zero_padding#17 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_zero_padding#5 )
  (byte) printf_number_buffer::format_justify_left#12 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_justify_left#4 )
  (byte) printf_number_buffer::format_min_length#6 ← phi( printf_number_buffer/(byte) printf_number_buffer::format_min_length#2 )
  (byte) printf_number_buffer::buffer_sign#5 ← phi( printf_number_buffer/(byte) printf_number_buffer::buffer_sign#8 )
  (byte*) printf_number_buffer::buffer_digits#2 ← phi( printf_number_buffer/(byte*) printf_number_buffer::buffer_digits#5 )
  (byte*) strlen::str#1 ← (byte*) printf_number_buffer::buffer_digits#2
  call strlen 
  (word) strlen::return#2 ← (word) strlen::return#1
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@6
  (byte*) printf_number_buffer::buffer_digits#19 ← phi( printf_number_buffer::@6/(byte*) printf_number_buffer::buffer_digits#2 )
  (byte) printf_number_buffer::format_upper_case#15 ← phi( printf_number_buffer::@6/(byte) printf_number_buffer::format_upper_case#17 )
  (byte) printf_number_buffer::format_zero_padding#11 ← phi( printf_number_buffer::@6/(byte) printf_number_buffer::format_zero_padding#17 )
  (byte) printf_number_buffer::format_justify_left#8 ← phi( printf_number_buffer::@6/(byte) printf_number_buffer::format_justify_left#12 )
  (byte) printf_number_buffer::format_min_length#4 ← phi( printf_number_buffer::@6/(byte) printf_number_buffer::format_min_length#6 )
  (byte) printf_number_buffer::buffer_sign#2 ← phi( printf_number_buffer::@6/(byte) printf_number_buffer::buffer_sign#5 )
  (word) strlen::return#4 ← phi( printf_number_buffer::@6/(word) strlen::return#2 )
  (word~) printf_number_buffer::$19 ← (word) strlen::return#4
  (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19
  (bool~) printf_number_buffer::$29 ← (number) 0 != (byte) printf_number_buffer::buffer_sign#2
  (bool~) printf_number_buffer::$20 ← ! (bool~) printf_number_buffer::$29
  if((bool~) printf_number_buffer::$20) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@15 printf_number_buffer::@7
  (byte*) printf_number_buffer::buffer_digits#16 ← phi( printf_number_buffer::@15/(byte*) printf_number_buffer::buffer_digits#19 printf_number_buffer::@7/(byte*) printf_number_buffer::buffer_digits#20 )
  (byte) printf_number_buffer::format_upper_case#12 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_upper_case#15 printf_number_buffer::@7/(byte) printf_number_buffer::format_upper_case#16 )
  (byte) printf_number_buffer::buffer_sign#9 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::buffer_sign#2 printf_number_buffer::@7/(byte) printf_number_buffer::buffer_sign#12 )
  (byte) printf_number_buffer::format_zero_padding#6 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_zero_padding#11 printf_number_buffer::@7/(byte) printf_number_buffer::format_zero_padding#12 )
  (byte) printf_number_buffer::format_justify_left#5 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_justify_left#8 printf_number_buffer::@7/(byte) printf_number_buffer::format_justify_left#9 )
  (signed byte) printf_number_buffer::len#2 ← phi( printf_number_buffer::@15/(signed byte) printf_number_buffer::len#0 printf_number_buffer::@7/(signed byte) printf_number_buffer::len#1 )
  (byte) printf_number_buffer::format_min_length#3 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_min_length#4 printf_number_buffer::@7/(byte) printf_number_buffer::format_min_length#5 )
  (signed byte~) printf_number_buffer::$25 ← (signed byte)(byte) printf_number_buffer::format_min_length#3
  (signed byte~) printf_number_buffer::$21 ← (signed byte~) printf_number_buffer::$25 - (signed byte) printf_number_buffer::len#2
  (signed byte) printf_number_buffer::padding#1 ← (signed byte~) printf_number_buffer::$21
  (bool~) printf_number_buffer::$22 ← (signed byte) printf_number_buffer::padding#1 < (number) 0
  (bool~) printf_number_buffer::$23 ← ! (bool~) printf_number_buffer::$22
  if((bool~) printf_number_buffer::$23) goto printf_number_buffer::@1
  to:printf_number_buffer::@14
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@15
  (byte*) printf_number_buffer::buffer_digits#20 ← phi( printf_number_buffer::@15/(byte*) printf_number_buffer::buffer_digits#19 )
  (byte) printf_number_buffer::format_upper_case#16 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_upper_case#15 )
  (byte) printf_number_buffer::buffer_sign#12 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::buffer_sign#2 )
  (byte) printf_number_buffer::format_zero_padding#12 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_zero_padding#11 )
  (byte) printf_number_buffer::format_justify_left#9 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_justify_left#8 )
  (byte) printf_number_buffer::format_min_length#5 ← phi( printf_number_buffer::@15/(byte) printf_number_buffer::format_min_length#4 )
  (signed byte) printf_number_buffer::len#3 ← phi( printf_number_buffer::@15/(signed byte) printf_number_buffer::len#0 )
  (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#3
  to:printf_number_buffer::@13
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@13
  (byte*) printf_number_buffer::buffer_digits#17 ← phi( printf_number_buffer::@13/(byte*) printf_number_buffer::buffer_digits#16 )
  (byte) printf_number_buffer::format_upper_case#13 ← phi( printf_number_buffer::@13/(byte) printf_number_buffer::format_upper_case#12 )
  (byte) printf_number_buffer::buffer_sign#10 ← phi( printf_number_buffer::@13/(byte) printf_number_buffer::buffer_sign#9 )
  (byte) printf_number_buffer::format_zero_padding#7 ← phi( printf_number_buffer::@13/(byte) printf_number_buffer::format_zero_padding#6 )
  (byte) printf_number_buffer::format_justify_left#6 ← phi( printf_number_buffer::@13/(byte) printf_number_buffer::format_justify_left#5 )
  (signed byte) printf_number_buffer::padding#2 ← (number) 0
  to:printf_number_buffer::@1
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16
  (byte) printf_number_buffer::format_justify_left#17 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::format_justify_left#2 printf_number_buffer::@16/(byte) printf_number_buffer::format_justify_left#19 )
  (byte*) printf_number_buffer::buffer_digits#11 ← phi( printf_number_buffer::@1/(byte*) printf_number_buffer::buffer_digits#13 printf_number_buffer::@16/(byte*) printf_number_buffer::buffer_digits#14 )
  (byte) printf_number_buffer::format_upper_case#6 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::format_upper_case#8 printf_number_buffer::@16/(byte) printf_number_buffer::format_upper_case#9 )
  (signed byte) printf_number_buffer::padding#10 ← phi( printf_number_buffer::@1/(signed byte) printf_number_buffer::padding#3 printf_number_buffer::@16/(signed byte) printf_number_buffer::padding#12 )
  (byte) printf_number_buffer::format_zero_padding#9 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::format_zero_padding#2 printf_number_buffer::@16/(byte) printf_number_buffer::format_zero_padding#13 )
  (byte) printf_number_buffer::buffer_sign#3 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::buffer_sign#6 printf_number_buffer::@16/(byte) printf_number_buffer::buffer_sign#7 )
  (bool~) printf_number_buffer::$30 ← (number) 0 != (byte) printf_number_buffer::buffer_sign#3
  (bool~) printf_number_buffer::$7 ← ! (bool~) printf_number_buffer::$30
  if((bool~) printf_number_buffer::$7) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@1
  (byte) printf_number_buffer::format_justify_left#21 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::format_justify_left#2 )
  (byte*) printf_number_buffer::buffer_digits#18 ← phi( printf_number_buffer::@1/(byte*) printf_number_buffer::buffer_digits#13 )
  (byte) printf_number_buffer::format_upper_case#14 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::format_upper_case#8 )
  (byte) printf_number_buffer::format_zero_padding#18 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::format_zero_padding#2 )
  (byte) printf_number_buffer::buffer_sign#11 ← phi( printf_number_buffer::@1/(byte) printf_number_buffer::buffer_sign#6 )
  (signed byte) printf_number_buffer::padding#4 ← phi( printf_number_buffer::@1/(signed byte) printf_number_buffer::padding#3 )
  (byte) printf_padding::pad#0 ← (byte) ' '
  (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#4
  call printf_padding 
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@8
  (byte) printf_number_buffer::format_justify_left#19 ← phi( printf_number_buffer::@8/(byte) printf_number_buffer::format_justify_left#21 )
  (byte*) printf_number_buffer::buffer_digits#14 ← phi( printf_number_buffer::@8/(byte*) printf_number_buffer::buffer_digits#18 )
  (byte) printf_number_buffer::format_upper_case#9 ← phi( printf_number_buffer::@8/(byte) printf_number_buffer::format_upper_case#14 )
  (signed byte) printf_number_buffer::padding#12 ← phi( printf_number_buffer::@8/(signed byte) printf_number_buffer::padding#4 )
  (byte) printf_number_buffer::format_zero_padding#13 ← phi( printf_number_buffer::@8/(byte) printf_number_buffer::format_zero_padding#18 )
  (byte) printf_number_buffer::buffer_sign#7 ← phi( printf_number_buffer::@8/(byte) printf_number_buffer::buffer_sign#11 )
  to:printf_number_buffer::@2
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@17 printf_number_buffer::@2
  (byte) printf_number_buffer::format_justify_left#14 ← phi( printf_number_buffer::@17/(byte) printf_number_buffer::format_justify_left#16 printf_number_buffer::@2/(byte) printf_number_buffer::format_justify_left#17 )
  (byte*) printf_number_buffer::buffer_digits#9 ← phi( printf_number_buffer::@17/(byte*) printf_number_buffer::buffer_digits#10 printf_number_buffer::@2/(byte*) printf_number_buffer::buffer_digits#11 )
  (byte) printf_number_buffer::format_upper_case#4 ← phi( printf_number_buffer::@17/(byte) printf_number_buffer::format_upper_case#5 printf_number_buffer::@2/(byte) printf_number_buffer::format_upper_case#6 )
  (signed byte) printf_number_buffer::padding#5 ← phi( printf_number_buffer::@17/(signed byte) printf_number_buffer::padding#9 printf_number_buffer::@2/(signed byte) printf_number_buffer::padding#10 )
  (byte) printf_number_buffer::format_zero_padding#3 ← phi( printf_number_buffer::@17/(byte) printf_number_buffer::format_zero_padding#8 printf_number_buffer::@2/(byte) printf_number_buffer::format_zero_padding#9 )
  (bool~) printf_number_buffer::$9 ← (byte) printf_number_buffer::format_zero_padding#3 && (signed byte) printf_number_buffer::padding#5
  (bool~) printf_number_buffer::$10 ← ! (bool~) printf_number_buffer::$9
  if((bool~) printf_number_buffer::$10) goto printf_number_buffer::@4
  to:printf_number_buffer::@10
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  (byte) printf_number_buffer::format_justify_left#20 ← phi( printf_number_buffer::@2/(byte) printf_number_buffer::format_justify_left#17 )
  (byte*) printf_number_buffer::buffer_digits#15 ← phi( printf_number_buffer::@2/(byte*) printf_number_buffer::buffer_digits#11 )
  (byte) printf_number_buffer::format_upper_case#10 ← phi( printf_number_buffer::@2/(byte) printf_number_buffer::format_upper_case#6 )
  (signed byte) printf_number_buffer::padding#13 ← phi( printf_number_buffer::@2/(signed byte) printf_number_buffer::padding#10 )
  (byte) printf_number_buffer::format_zero_padding#14 ← phi( printf_number_buffer::@2/(byte) printf_number_buffer::format_zero_padding#9 )
  (byte) printf_number_buffer::buffer_sign#4 ← phi( printf_number_buffer::@2/(byte) printf_number_buffer::buffer_sign#3 )
  (byte) cputc::c#2 ← (byte) printf_number_buffer::buffer_sign#4
  call cputc 
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@9
  (byte) printf_number_buffer::format_justify_left#16 ← phi( printf_number_buffer::@9/(byte) printf_number_buffer::format_justify_left#20 )
  (byte*) printf_number_buffer::buffer_digits#10 ← phi( printf_number_buffer::@9/(byte*) printf_number_buffer::buffer_digits#15 )
  (byte) printf_number_buffer::format_upper_case#5 ← phi( printf_number_buffer::@9/(byte) printf_number_buffer::format_upper_case#10 )
  (signed byte) printf_number_buffer::padding#9 ← phi( printf_number_buffer::@9/(signed byte) printf_number_buffer::padding#13 )
  (byte) printf_number_buffer::format_zero_padding#8 ← phi( printf_number_buffer::@9/(byte) printf_number_buffer::format_zero_padding#14 )
  to:printf_number_buffer::@3
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@18 printf_number_buffer::@3
  (signed byte) printf_number_buffer::padding#15 ← phi( printf_number_buffer::@18/(signed byte) printf_number_buffer::padding#16 printf_number_buffer::@3/(signed byte) printf_number_buffer::padding#5 )
  (byte) printf_number_buffer::format_justify_left#11 ← phi( printf_number_buffer::@18/(byte) printf_number_buffer::format_justify_left#13 printf_number_buffer::@3/(byte) printf_number_buffer::format_justify_left#14 )
  (byte) printf_number_buffer::format_zero_padding#16 ← phi( printf_number_buffer::@18/(byte) printf_number_buffer::format_zero_padding#19 printf_number_buffer::@3/(byte) printf_number_buffer::format_zero_padding#3 )
  (byte*) printf_number_buffer::buffer_digits#7 ← phi( printf_number_buffer::@18/(byte*) printf_number_buffer::buffer_digits#8 printf_number_buffer::@3/(byte*) printf_number_buffer::buffer_digits#9 )
  (byte) printf_number_buffer::format_upper_case#2 ← phi( printf_number_buffer::@18/(byte) printf_number_buffer::format_upper_case#3 printf_number_buffer::@3/(byte) printf_number_buffer::format_upper_case#4 )
  (bool~) printf_number_buffer::$31 ← (number) 0 != (byte) printf_number_buffer::format_upper_case#2
  (bool~) printf_number_buffer::$12 ← ! (bool~) printf_number_buffer::$31
  if((bool~) printf_number_buffer::$12) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@3
  (byte) printf_number_buffer::format_justify_left#18 ← phi( printf_number_buffer::@3/(byte) printf_number_buffer::format_justify_left#14 )
  (byte) printf_number_buffer::format_zero_padding#21 ← phi( printf_number_buffer::@3/(byte) printf_number_buffer::format_zero_padding#3 )
  (byte*) printf_number_buffer::buffer_digits#12 ← phi( printf_number_buffer::@3/(byte*) printf_number_buffer::buffer_digits#9 )
  (byte) printf_number_buffer::format_upper_case#7 ← phi( printf_number_buffer::@3/(byte) printf_number_buffer::format_upper_case#4 )
  (signed byte) printf_number_buffer::padding#6 ← phi( printf_number_buffer::@3/(signed byte) printf_number_buffer::padding#5 )
  (byte) printf_padding::pad#1 ← (byte) '0'
  (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#6
  call printf_padding 
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@10
  (signed byte) printf_number_buffer::padding#16 ← phi( printf_number_buffer::@10/(signed byte) printf_number_buffer::padding#6 )
  (byte) printf_number_buffer::format_justify_left#13 ← phi( printf_number_buffer::@10/(byte) printf_number_buffer::format_justify_left#18 )
  (byte) printf_number_buffer::format_zero_padding#19 ← phi( printf_number_buffer::@10/(byte) printf_number_buffer::format_zero_padding#21 )
  (byte*) printf_number_buffer::buffer_digits#8 ← phi( printf_number_buffer::@10/(byte*) printf_number_buffer::buffer_digits#12 )
  (byte) printf_number_buffer::format_upper_case#3 ← phi( printf_number_buffer::@10/(byte) printf_number_buffer::format_upper_case#7 )
  to:printf_number_buffer::@4
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@20 printf_number_buffer::@4
  (signed byte) printf_number_buffer::padding#11 ← phi( printf_number_buffer::@20/(signed byte) printf_number_buffer::padding#14 printf_number_buffer::@4/(signed byte) printf_number_buffer::padding#15 )
  (byte) printf_number_buffer::format_justify_left#7 ← phi( printf_number_buffer::@20/(byte) printf_number_buffer::format_justify_left#10 printf_number_buffer::@4/(byte) printf_number_buffer::format_justify_left#11 )
  (byte) printf_number_buffer::format_zero_padding#10 ← phi( printf_number_buffer::@20/(byte) printf_number_buffer::format_zero_padding#15 printf_number_buffer::@4/(byte) printf_number_buffer::format_zero_padding#16 )
  (byte*) printf_number_buffer::buffer_digits#3 ← phi( printf_number_buffer::@20/(byte*) printf_number_buffer::buffer_digits#6 printf_number_buffer::@4/(byte*) printf_number_buffer::buffer_digits#7 )
  (to_nomodify byte*) cputs::s#1 ← (byte*) printf_number_buffer::buffer_digits#3
  call cputs 
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@5
  (signed byte) printf_number_buffer::padding#7 ← phi( printf_number_buffer::@5/(signed byte) printf_number_buffer::padding#11 )
  (byte) printf_number_buffer::format_justify_left#3 ← phi( printf_number_buffer::@5/(byte) printf_number_buffer::format_justify_left#7 )
  (byte) printf_number_buffer::format_zero_padding#4 ← phi( printf_number_buffer::@5/(byte) printf_number_buffer::format_zero_padding#10 )
  (bool~) printf_number_buffer::$32 ← (number) 0 != (byte) printf_number_buffer::format_zero_padding#4
  (bool~) printf_number_buffer::$14 ← ! (bool~) printf_number_buffer::$32
  (bool~) printf_number_buffer::$15 ← (byte) printf_number_buffer::format_justify_left#3 && (bool~) printf_number_buffer::$14
  (bool~) printf_number_buffer::$16 ← (bool~) printf_number_buffer::$15 && (signed byte) printf_number_buffer::padding#7
  (bool~) printf_number_buffer::$17 ← ! (bool~) printf_number_buffer::$16
  if((bool~) printf_number_buffer::$17) goto printf_number_buffer::@return
  to:printf_number_buffer::@12
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  (signed byte) printf_number_buffer::padding#17 ← phi( printf_number_buffer::@4/(signed byte) printf_number_buffer::padding#15 )
  (byte) printf_number_buffer::format_justify_left#15 ← phi( printf_number_buffer::@4/(byte) printf_number_buffer::format_justify_left#11 )
  (byte) printf_number_buffer::format_zero_padding#20 ← phi( printf_number_buffer::@4/(byte) printf_number_buffer::format_zero_padding#16 )
  (byte*) printf_number_buffer::buffer_digits#4 ← phi( printf_number_buffer::@4/(byte*) printf_number_buffer::buffer_digits#7 )
  (byte*) strupr::str#0 ← (byte*) printf_number_buffer::buffer_digits#4
  call strupr 
  (byte*) strupr::return#2 ← (byte*) strupr::return#1
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@11
  (signed byte) printf_number_buffer::padding#14 ← phi( printf_number_buffer::@11/(signed byte) printf_number_buffer::padding#17 )
  (byte) printf_number_buffer::format_justify_left#10 ← phi( printf_number_buffer::@11/(byte) printf_number_buffer::format_justify_left#15 )
  (byte) printf_number_buffer::format_zero_padding#15 ← phi( printf_number_buffer::@11/(byte) printf_number_buffer::format_zero_padding#20 )
  (byte*) printf_number_buffer::buffer_digits#6 ← phi( printf_number_buffer::@11/(byte*) printf_number_buffer::buffer_digits#4 )
  to:printf_number_buffer::@5
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  (signed byte) printf_number_buffer::padding#8 ← phi( printf_number_buffer::@19/(signed byte) printf_number_buffer::padding#7 )
  (byte) printf_padding::pad#2 ← (byte) ' '
  (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#8
  call printf_padding 
  to:printf_number_buffer::@21
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@19 printf_number_buffer::@21
  return 
  to:@return

(void()) main()
main: scope:[main]  from _start::@1
  call clrscr 
  to:main::@1
main::@1: scope:[main]  from main
  (signed byte) printf_schar::value#1 ← (number) -$4d
  (byte) printf_schar::format_min_length#0 ← (number) 6
  (byte) printf_schar::format_justify_left#0 ← (number) 0
  (byte) printf_schar::format_sign_always#0 ← (number) 0
  (byte) printf_schar::format_zero_padding#0 ← (number) 0
  (byte) printf_schar::format_upper_case#0 ← (number) 0
  (byte) printf_schar::format_radix#0 ← (const byte) DECIMAL
  call printf_schar 
  to:main::@2
main::@2: scope:[main]  from main::@1
  call cputln 
  to:main::@3
main::@3: scope:[main]  from main::@2
  (signed byte) printf_schar::value#2 ← (number) $63
  (byte) printf_schar::format_min_length#1 ← (number) 6
  (byte) printf_schar::format_justify_left#1 ← (number) 0
  (byte) printf_schar::format_sign_always#1 ← (number) 1
  (byte) printf_schar::format_zero_padding#1 ← (number) 1
  (byte) printf_schar::format_upper_case#1 ← (number) 0
  (byte) printf_schar::format_radix#1 ← (const byte) OCTAL
  call printf_schar 
  to:main::@4
main::@4: scope:[main]  from main::@3
  call cputln 
  to:main::@5
main::@5: scope:[main]  from main::@4
  (word) printf_uint::uvalue#0 ← (number) $d80
  (byte) printf_uint::format_min_length#0 ← (number) $a
  (byte) printf_uint::format_justify_left#0 ← (number) 1
  (byte) printf_uint::format_sign_always#0 ← (number) 0
  (byte) printf_uint::format_zero_padding#0 ← (number) 0
  (byte) printf_uint::format_upper_case#0 ← (number) 1
  (byte) printf_uint::format_radix#0 ← (const byte) HEXADECIMAL
  call printf_uint 
  to:main::@6
main::@6: scope:[main]  from main::@5
  call cputln 
  to:main::@7
main::@7: scope:[main]  from main::@6
  to:main::@return
main::@return: scope:[main]  from main::@7
  return 
  to:@return

(void()) _start()
_start: scope:[_start]  from
  to:_start::_init1
_start::_init1: scope:[_start]  from _start
  (byte) conio_cursor_x ← (byte) 0
  (byte) conio_cursor_y ← (byte) 0
  (byte*) conio_line_text ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) conio_line_color ← (const nomodify byte*) CONIO_SCREEN_COLORS
  (byte) conio_textcolor ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  (byte) conio_scroll_enable ← (byte) 1
  to:_start::@1
_start::@1: scope:[_start]  from _start::_init1
  call main 
  to:_start::@2
_start::@2: scope:[_start]  from _start::@1
  to:_start::@return
_start::@return: scope:[_start]  from _start::@2
  return 
  to:@return

SYMBOL TABLE SSA
(const byte) BINARY = (number) 2
(const nomodify byte*) COLORRAM = (byte*)(number) $d800
(const nomodify byte*) CONIO_SCREEN_COLORS = (const nomodify byte*) COLORRAM
(const nomodify byte*) CONIO_SCREEN_TEXT = (const nomodify byte*) DEFAULT_SCREEN
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (const nomodify byte) LIGHT_BLUE
(const byte) DECIMAL = (number) $a
(const nomodify byte*) DEFAULT_SCREEN = (byte*)(number) $400
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(const byte) HEXADECIMAL = (number) $10
(const nomodify byte) LIGHT_BLUE = (byte) $e
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OCTAL = (number) 8
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = (byte) 1
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN = (byte) 0
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const word*) RADIX_BINARY_VALUES[]  = { (word) $8000, (word) $4000, (word) $2000, (word) $1000, (word) $800, (word) $400, (word) $200, (word) $100, (word) $80, (word) $40, (word) $20, (word) $10, (word) 8, (word) 4, (word) 2 }
(const byte*) RADIX_BINARY_VALUES_CHAR[]  = { (byte) $80, (byte) $40, (byte) $20, (byte) $10, (byte) 8, (byte) 4, (byte) 2 }
(const word*) RADIX_DECIMAL_VALUES[]  = { (word) $2710, (word) $3e8, (word) $64, (word) $a }
(const byte*) RADIX_DECIMAL_VALUES_CHAR[]  = { (byte) $64, (byte) $a }
(const word*) RADIX_HEXADECIMAL_VALUES[]  = { (word) $1000, (word) $100, (word) $10 }
(const byte*) RADIX_HEXADECIMAL_VALUES_CHAR[]  = { (byte) $10 }
(const word*) RADIX_OCTAL_VALUES[]  = { (word) $8000, (word) $1000, (word) $200, (word) $40, (word) 8 }
(const byte*) RADIX_OCTAL_VALUES_CHAR[]  = { (byte) $40, (byte) 8 }
(const byte) SIZEOF_WORD = (byte) 2
(void()) _start()
(label) _start::@1
(label) _start::@2
(label) _start::@return
(label) _start::_init1
(void()) clrscr()
(bool~) clrscr::$0
(bool~) clrscr::$1
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@5
(label) clrscr::@6
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#0
(byte) clrscr::c#1
(byte) clrscr::c#2
(byte) clrscr::c#3
(byte) clrscr::l
(byte) clrscr::l#0
(byte) clrscr::l#1
(byte) clrscr::l#2
(byte) clrscr::l#3
(byte) clrscr::l#4
(byte) clrscr::l#5
(byte) clrscr::l#6
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#0
(byte*) clrscr::line_cols#1
(byte*) clrscr::line_cols#2
(byte*) clrscr::line_cols#3
(byte*) clrscr::line_cols#4
(byte*) clrscr::line_cols#5
(byte*) clrscr::line_cols#6
(byte*) clrscr::line_text
(byte*) clrscr::line_text#0
(byte*) clrscr::line_text#1
(byte*) clrscr::line_text#2
(byte*) clrscr::line_text#3
(byte*) clrscr::line_text#4
(byte*) clrscr::line_text#5
(byte*) clrscr::line_text#6
(byte) conio_cursor_x loadstore
(byte) conio_cursor_y loadstore
(byte*) conio_line_color loadstore
(byte*) conio_line_text loadstore
(byte) conio_scroll_enable loadstore
(byte) conio_textcolor loadstore
(void()) cputc((byte) cputc::c)
(bool~) cputc::$0
(bool~) cputc::$1
(bool~) cputc::$2
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@4
(label) cputc::@5
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0
(byte) cputc::c#1
(byte) cputc::c#2
(byte) cputc::c#3
(byte) cputc::c#4
(void()) cputln()
(label) cputln::@1
(label) cputln::@return
(void()) cputs((to_nomodify byte*) cputs::s)
(bool~) cputs::$1
(label) cputs::@1
(label) cputs::@2
(label) cputs::@3
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#0
(byte) cputs::c#1
(byte) cputs::c#2
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0
(to_nomodify byte*) cputs::s#1
(to_nomodify byte*) cputs::s#2
(to_nomodify byte*) cputs::s#3
(to_nomodify byte*) cputs::s#4
(to_nomodify byte*) cputs::s#5
(void()) cscroll()
(bool~) cscroll::$0
(bool~) cscroll::$1
(bool~) cscroll::$7
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@6
(label) cscroll::@7
(label) cscroll::@8
(label) cscroll::@return
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(bool~) gotoxy::$0
(bool~) gotoxy::$1
(bool~) gotoxy::$2
(bool~) gotoxy::$3
(number~) gotoxy::$4
(byte*~) gotoxy::$5
(byte*~) gotoxy::$6
(word~) gotoxy::$7
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@4
(label) gotoxy::@return
(word) gotoxy::line_offset
(word) gotoxy::line_offset#0
(byte) gotoxy::x
(byte) gotoxy::x#0
(byte) gotoxy::x#1
(byte) gotoxy::x#2
(byte) gotoxy::x#3
(byte) gotoxy::x#4
(byte) gotoxy::x#5
(byte) gotoxy::y
(byte) gotoxy::y#0
(byte) gotoxy::y#1
(byte) gotoxy::y#2
(byte) gotoxy::y#3
(byte) gotoxy::y#4
(byte) gotoxy::y#5
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@return
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(byte*~) memcpy::$0
(bool~) memcpy::$1
(byte*~) memcpy::$2
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@3
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#0
(void*) memcpy::destination#1
(void*) memcpy::destination#2
(void*) memcpy::destination#3
(void*) memcpy::destination#4
(void*) memcpy::destination#5
(byte*) memcpy::dst
(byte*) memcpy::dst#0
(byte*) memcpy::dst#1
(byte*) memcpy::dst#2
(byte*) memcpy::dst#3
(word) memcpy::num
(word) memcpy::num#0
(word) memcpy::num#1
(word) memcpy::num#2
(void*) memcpy::return
(void*) memcpy::return#0
(void*) memcpy::return#1
(void*) memcpy::return#2
(void*) memcpy::return#3
(void*) memcpy::return#4
(void*) memcpy::source
(void*) memcpy::source#0
(void*) memcpy::source#1
(void*) memcpy::source#2
(byte*) memcpy::src
(byte*) memcpy::src#0
(byte*) memcpy::src#1
(byte*) memcpy::src#2
(byte*) memcpy::src#3
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0
(byte*) memcpy::src_end#1
(byte*) memcpy::src_end#2
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(bool~) memset::$0
(bool~) memset::$1
(byte*~) memset::$2
(bool~) memset::$3
(byte*~) memset::$4
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@4
(label) memset::@return
(byte) memset::c
(byte) memset::c#0
(byte) memset::c#1
(byte) memset::c#2
(byte) memset::c#3
(byte) memset::c#4
(byte) memset::c#5
(byte*) memset::dst
(byte*) memset::dst#0
(byte*) memset::dst#1
(byte*) memset::dst#2
(byte*) memset::dst#3
(byte*) memset::end
(byte*) memset::end#0
(byte*) memset::end#1
(byte*) memset::end#2
(word) memset::num
(word) memset::num#0
(word) memset::num#1
(word) memset::num#2
(word) memset::num#3
(void*) memset::return
(void*) memset::return#0
(void*) memset::return#1
(void*) memset::return#2
(void*) memset::return#3
(void*) memset::return#4
(void*) memset::str
(void*) memset::str#0
(void*) memset::str#1
(void*) memset::str#2
(void*) memset::str#3
(void*) memset::str#4
(void*) memset::str#5
(void*) memset::str#6
(struct printf_buffer_number) printf_buffer loadstore = {}
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(bool~) printf_number_buffer::$0
(bool~) printf_number_buffer::$1
(bool~) printf_number_buffer::$10
(bool~) printf_number_buffer::$12
(bool~) printf_number_buffer::$14
(bool~) printf_number_buffer::$15
(bool~) printf_number_buffer::$16
(bool~) printf_number_buffer::$17
(word~) printf_number_buffer::$19
(bool~) printf_number_buffer::$2
(bool~) printf_number_buffer::$20
(signed byte~) printf_number_buffer::$21
(bool~) printf_number_buffer::$22
(bool~) printf_number_buffer::$23
(signed byte~) printf_number_buffer::$25
(bool~) printf_number_buffer::$26
(bool~) printf_number_buffer::$27
(bool~) printf_number_buffer::$28
(bool~) printf_number_buffer::$29
(bool~) printf_number_buffer::$3
(bool~) printf_number_buffer::$30
(bool~) printf_number_buffer::$31
(bool~) printf_number_buffer::$32
(bool~) printf_number_buffer::$4
(bool~) printf_number_buffer::$5
(bool~) printf_number_buffer::$7
(bool~) printf_number_buffer::$9
(label) printf_number_buffer::@1
(label) printf_number_buffer::@10
(label) printf_number_buffer::@11
(label) printf_number_buffer::@12
(label) printf_number_buffer::@13
(label) printf_number_buffer::@14
(label) printf_number_buffer::@15
(label) printf_number_buffer::@16
(label) printf_number_buffer::@17
(label) printf_number_buffer::@18
(label) printf_number_buffer::@19
(label) printf_number_buffer::@2
(label) printf_number_buffer::@20
(label) printf_number_buffer::@21
(label) printf_number_buffer::@3
(label) printf_number_buffer::@4
(label) printf_number_buffer::@5
(label) printf_number_buffer::@6
(label) printf_number_buffer::@7
(label) printf_number_buffer::@8
(label) printf_number_buffer::@9
(label) printf_number_buffer::@return
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(byte*) printf_number_buffer::buffer_digits#0
(byte*) printf_number_buffer::buffer_digits#1
(byte*) printf_number_buffer::buffer_digits#10
(byte*) printf_number_buffer::buffer_digits#11
(byte*) printf_number_buffer::buffer_digits#12
(byte*) printf_number_buffer::buffer_digits#13
(byte*) printf_number_buffer::buffer_digits#14
(byte*) printf_number_buffer::buffer_digits#15
(byte*) printf_number_buffer::buffer_digits#16
(byte*) printf_number_buffer::buffer_digits#17
(byte*) printf_number_buffer::buffer_digits#18
(byte*) printf_number_buffer::buffer_digits#19
(byte*) printf_number_buffer::buffer_digits#2
(byte*) printf_number_buffer::buffer_digits#20
(byte*) printf_number_buffer::buffer_digits#3
(byte*) printf_number_buffer::buffer_digits#4
(byte*) printf_number_buffer::buffer_digits#5
(byte*) printf_number_buffer::buffer_digits#6
(byte*) printf_number_buffer::buffer_digits#7
(byte*) printf_number_buffer::buffer_digits#8
(byte*) printf_number_buffer::buffer_digits#9
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0
(byte) printf_number_buffer::buffer_sign#1
(byte) printf_number_buffer::buffer_sign#10
(byte) printf_number_buffer::buffer_sign#11
(byte) printf_number_buffer::buffer_sign#12
(byte) printf_number_buffer::buffer_sign#2
(byte) printf_number_buffer::buffer_sign#3
(byte) printf_number_buffer::buffer_sign#4
(byte) printf_number_buffer::buffer_sign#5
(byte) printf_number_buffer::buffer_sign#6
(byte) printf_number_buffer::buffer_sign#7
(byte) printf_number_buffer::buffer_sign#8
(byte) printf_number_buffer::buffer_sign#9
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_justify_left#0
(byte) printf_number_buffer::format_justify_left#1
(byte) printf_number_buffer::format_justify_left#10
(byte) printf_number_buffer::format_justify_left#11
(byte) printf_number_buffer::format_justify_left#12
(byte) printf_number_buffer::format_justify_left#13
(byte) printf_number_buffer::format_justify_left#14
(byte) printf_number_buffer::format_justify_left#15
(byte) printf_number_buffer::format_justify_left#16
(byte) printf_number_buffer::format_justify_left#17
(byte) printf_number_buffer::format_justify_left#18
(byte) printf_number_buffer::format_justify_left#19
(byte) printf_number_buffer::format_justify_left#2
(byte) printf_number_buffer::format_justify_left#20
(byte) printf_number_buffer::format_justify_left#21
(byte) printf_number_buffer::format_justify_left#3
(byte) printf_number_buffer::format_justify_left#4
(byte) printf_number_buffer::format_justify_left#5
(byte) printf_number_buffer::format_justify_left#6
(byte) printf_number_buffer::format_justify_left#7
(byte) printf_number_buffer::format_justify_left#8
(byte) printf_number_buffer::format_justify_left#9
(byte) printf_number_buffer::format_min_length
(byte) printf_number_buffer::format_min_length#0
(byte) printf_number_buffer::format_min_length#1
(byte) printf_number_buffer::format_min_length#2
(byte) printf_number_buffer::format_min_length#3
(byte) printf_number_buffer::format_min_length#4
(byte) printf_number_buffer::format_min_length#5
(byte) printf_number_buffer::format_min_length#6
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_radix#0
(byte) printf_number_buffer::format_radix#1
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_sign_always#0
(byte) printf_number_buffer::format_sign_always#1
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_upper_case#0
(byte) printf_number_buffer::format_upper_case#1
(byte) printf_number_buffer::format_upper_case#10
(byte) printf_number_buffer::format_upper_case#11
(byte) printf_number_buffer::format_upper_case#12
(byte) printf_number_buffer::format_upper_case#13
(byte) printf_number_buffer::format_upper_case#14
(byte) printf_number_buffer::format_upper_case#15
(byte) printf_number_buffer::format_upper_case#16
(byte) printf_number_buffer::format_upper_case#17
(byte) printf_number_buffer::format_upper_case#2
(byte) printf_number_buffer::format_upper_case#3
(byte) printf_number_buffer::format_upper_case#4
(byte) printf_number_buffer::format_upper_case#5
(byte) printf_number_buffer::format_upper_case#6
(byte) printf_number_buffer::format_upper_case#7
(byte) printf_number_buffer::format_upper_case#8
(byte) printf_number_buffer::format_upper_case#9
(byte) printf_number_buffer::format_zero_padding
(byte) printf_number_buffer::format_zero_padding#0
(byte) printf_number_buffer::format_zero_padding#1
(byte) printf_number_buffer::format_zero_padding#10
(byte) printf_number_buffer::format_zero_padding#11
(byte) printf_number_buffer::format_zero_padding#12
(byte) printf_number_buffer::format_zero_padding#13
(byte) printf_number_buffer::format_zero_padding#14
(byte) printf_number_buffer::format_zero_padding#15
(byte) printf_number_buffer::format_zero_padding#16
(byte) printf_number_buffer::format_zero_padding#17
(byte) printf_number_buffer::format_zero_padding#18
(byte) printf_number_buffer::format_zero_padding#19
(byte) printf_number_buffer::format_zero_padding#2
(byte) printf_number_buffer::format_zero_padding#20
(byte) printf_number_buffer::format_zero_padding#21
(byte) printf_number_buffer::format_zero_padding#3
(byte) printf_number_buffer::format_zero_padding#4
(byte) printf_number_buffer::format_zero_padding#5
(byte) printf_number_buffer::format_zero_padding#6
(byte) printf_number_buffer::format_zero_padding#7
(byte) printf_number_buffer::format_zero_padding#8
(byte) printf_number_buffer::format_zero_padding#9
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::len#0
(signed byte) printf_number_buffer::len#1
(signed byte) printf_number_buffer::len#2
(signed byte) printf_number_buffer::len#3
(signed byte) printf_number_buffer::padding
(signed byte) printf_number_buffer::padding#0
(signed byte) printf_number_buffer::padding#1
(signed byte) printf_number_buffer::padding#10
(signed byte) printf_number_buffer::padding#11
(signed byte) printf_number_buffer::padding#12
(signed byte) printf_number_buffer::padding#13
(signed byte) printf_number_buffer::padding#14
(signed byte) printf_number_buffer::padding#15
(signed byte) printf_number_buffer::padding#16
(signed byte) printf_number_buffer::padding#17
(signed byte) printf_number_buffer::padding#2
(signed byte) printf_number_buffer::padding#3
(signed byte) printf_number_buffer::padding#4
(signed byte) printf_number_buffer::padding#5
(signed byte) printf_number_buffer::padding#6
(signed byte) printf_number_buffer::padding#7
(signed byte) printf_number_buffer::padding#8
(signed byte) printf_number_buffer::padding#9
(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
(bool~) printf_padding::$0
(label) printf_padding::@1
(label) printf_padding::@2
(label) printf_padding::@3
(label) printf_padding::@return
(byte) printf_padding::i
(byte) printf_padding::i#0
(byte) printf_padding::i#1
(byte) printf_padding::i#2
(byte) printf_padding::i#3
(byte) printf_padding::i#4
(byte) printf_padding::length
(byte) printf_padding::length#0
(byte) printf_padding::length#1
(byte) printf_padding::length#2
(byte) printf_padding::length#3
(byte) printf_padding::length#4
(byte) printf_padding::length#5
(byte) printf_padding::length#6
(byte) printf_padding::pad
(byte) printf_padding::pad#0
(byte) printf_padding::pad#1
(byte) printf_padding::pad#2
(byte) printf_padding::pad#3
(byte) printf_padding::pad#4
(byte) printf_padding::pad#5
(byte) printf_padding::pad#6
(void()) printf_schar((signed byte) printf_schar::value , (byte) printf_schar::format_min_length , (byte) printf_schar::format_justify_left , (byte) printf_schar::format_sign_always , (byte) printf_schar::format_zero_padding , (byte) printf_schar::format_upper_case , (byte) printf_schar::format_radix)
(bool~) printf_schar::$0
(bool~) printf_schar::$3
(signed byte~) printf_schar::$4
(bool~) printf_schar::$5
(label) printf_schar::@1
(label) printf_schar::@2
(label) printf_schar::@3
(label) printf_schar::@4
(label) printf_schar::@5
(label) printf_schar::@6
(label) printf_schar::@return
(struct printf_format_number) printf_schar::format
(byte) printf_schar::format_justify_left
(byte) printf_schar::format_justify_left#0
(byte) printf_schar::format_justify_left#1
(byte) printf_schar::format_justify_left#2
(byte) printf_schar::format_justify_left#3
(byte) printf_schar::format_justify_left#4
(byte) printf_schar::format_justify_left#5
(byte) printf_schar::format_justify_left#6
(byte) printf_schar::format_justify_left#7
(byte) printf_schar::format_min_length
(byte) printf_schar::format_min_length#0
(byte) printf_schar::format_min_length#1
(byte) printf_schar::format_min_length#2
(byte) printf_schar::format_min_length#3
(byte) printf_schar::format_min_length#4
(byte) printf_schar::format_min_length#5
(byte) printf_schar::format_min_length#6
(byte) printf_schar::format_min_length#7
(byte) printf_schar::format_radix
(byte) printf_schar::format_radix#0
(byte) printf_schar::format_radix#1
(byte) printf_schar::format_radix#2
(byte) printf_schar::format_radix#3
(byte) printf_schar::format_radix#4
(byte) printf_schar::format_radix#5
(byte) printf_schar::format_radix#6
(byte) printf_schar::format_radix#7
(byte) printf_schar::format_sign_always
(byte) printf_schar::format_sign_always#0
(byte) printf_schar::format_sign_always#1
(byte) printf_schar::format_sign_always#2
(byte) printf_schar::format_sign_always#3
(byte) printf_schar::format_sign_always#4
(byte) printf_schar::format_sign_always#5
(byte) printf_schar::format_sign_always#6
(byte) printf_schar::format_sign_always#7
(byte) printf_schar::format_upper_case
(byte) printf_schar::format_upper_case#0
(byte) printf_schar::format_upper_case#1
(byte) printf_schar::format_upper_case#2
(byte) printf_schar::format_upper_case#3
(byte) printf_schar::format_upper_case#4
(byte) printf_schar::format_upper_case#5
(byte) printf_schar::format_upper_case#6
(byte) printf_schar::format_upper_case#7
(byte) printf_schar::format_zero_padding
(byte) printf_schar::format_zero_padding#0
(byte) printf_schar::format_zero_padding#1
(byte) printf_schar::format_zero_padding#2
(byte) printf_schar::format_zero_padding#3
(byte) printf_schar::format_zero_padding#4
(byte) printf_schar::format_zero_padding#5
(byte) printf_schar::format_zero_padding#6
(byte) printf_schar::format_zero_padding#7
(byte) printf_schar::uvalue
(byte) printf_schar::uvalue#0
(signed byte) printf_schar::value
(signed byte) printf_schar::value#0
(signed byte) printf_schar::value#1
(signed byte) printf_schar::value#2
(signed byte) printf_schar::value#3
(signed byte) printf_schar::value#4
(signed byte) printf_schar::value#5
(signed byte) printf_schar::value#6
(signed byte) printf_schar::value#7
(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
(number~) printf_uint::$0
(byte~) printf_uint::$1
(number~) printf_uint::$2
(bool~) printf_uint::$5
(label) printf_uint::@1
(label) printf_uint::@2
(label) printf_uint::@3
(label) printf_uint::@4
(label) printf_uint::@5
(label) printf_uint::@return
(struct printf_format_number) printf_uint::format
(byte) printf_uint::format_justify_left
(byte) printf_uint::format_justify_left#0
(byte) printf_uint::format_justify_left#1
(byte) printf_uint::format_justify_left#2
(byte) printf_uint::format_justify_left#3
(byte) printf_uint::format_justify_left#4
(byte) printf_uint::format_justify_left#5
(byte) printf_uint::format_min_length
(byte) printf_uint::format_min_length#0
(byte) printf_uint::format_min_length#1
(byte) printf_uint::format_min_length#2
(byte) printf_uint::format_min_length#3
(byte) printf_uint::format_min_length#4
(byte) printf_uint::format_min_length#5
(byte) printf_uint::format_radix
(byte) printf_uint::format_radix#0
(byte) printf_uint::format_radix#1
(byte) printf_uint::format_radix#2
(byte) printf_uint::format_radix#3
(byte) printf_uint::format_radix#4
(byte) printf_uint::format_radix#5
(byte) printf_uint::format_sign_always
(byte) printf_uint::format_sign_always#0
(byte) printf_uint::format_sign_always#1
(byte) printf_uint::format_sign_always#2
(byte) printf_uint::format_sign_always#3
(byte) printf_uint::format_sign_always#4
(byte) printf_uint::format_sign_always#5
(byte) printf_uint::format_upper_case
(byte) printf_uint::format_upper_case#0
(byte) printf_uint::format_upper_case#1
(byte) printf_uint::format_upper_case#2
(byte) printf_uint::format_upper_case#3
(byte) printf_uint::format_upper_case#4
(byte) printf_uint::format_upper_case#5
(byte) printf_uint::format_zero_padding
(byte) printf_uint::format_zero_padding#0
(byte) printf_uint::format_zero_padding#1
(byte) printf_uint::format_zero_padding#2
(byte) printf_uint::format_zero_padding#3
(byte) printf_uint::format_zero_padding#4
(byte) printf_uint::format_zero_padding#5
(word) printf_uint::uvalue
(word) printf_uint::uvalue#0
(word) printf_uint::uvalue#1
(word) printf_uint::uvalue#2
(word) printf_uint::uvalue#3
(word) printf_uint::uvalue#4
(word()) strlen((byte*) strlen::str)
(bool~) strlen::$0
(label) strlen::@1
(label) strlen::@2
(label) strlen::@3
(label) strlen::@return
(word) strlen::len
(word) strlen::len#0
(word) strlen::len#1
(word) strlen::len#2
(word) strlen::len#3
(word) strlen::len#4
(word) strlen::return
(word) strlen::return#0
(word) strlen::return#1
(word) strlen::return#2
(word) strlen::return#3
(word) strlen::return#4
(byte*) strlen::str
(byte*) strlen::str#0
(byte*) strlen::str#1
(byte*) strlen::str#2
(byte*) strlen::str#3
(byte*) strlen::str#4
(byte*()) strupr((byte*) strupr::str)
(byte~) strupr::$0
(bool~) strupr::$1
(label) strupr::@1
(label) strupr::@2
(label) strupr::@3
(label) strupr::@4
(label) strupr::@return
(byte*) strupr::return
(byte*) strupr::return#0
(byte*) strupr::return#1
(byte*) strupr::return#2
(byte*) strupr::return#3
(byte*) strupr::src
(byte*) strupr::src#0
(byte*) strupr::src#1
(byte*) strupr::src#2
(byte*) strupr::src#3
(byte*) strupr::src#4
(byte*) strupr::str
(byte*) strupr::str#0
(byte*) strupr::str#1
(byte*) strupr::str#2
(byte*) strupr::str#3
(byte*) strupr::str#4
(byte*) strupr::str#5
(byte()) toupper((byte) toupper::ch)
(bool~) toupper::$0
(bool~) toupper::$1
(bool~) toupper::$2
(byte~) toupper::$3
(label) toupper::@1
(label) toupper::@2
(label) toupper::@return
(byte) toupper::ch
(byte) toupper::ch#0
(byte) toupper::ch#1
(byte) toupper::ch#2
(byte) toupper::ch#3
(byte) toupper::return
(byte) toupper::return#0
(byte) toupper::return#1
(byte) toupper::return#2
(byte) toupper::return#3
(byte) toupper::return#4
(byte) toupper::return#5
(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
(bool~) uctoa::$0
(bool~) uctoa::$1
(byte~) uctoa::$10
(bool~) uctoa::$2
(bool~) uctoa::$3
(number~) uctoa::$4
(bool~) uctoa::$5
(bool~) uctoa::$6
(bool~) uctoa::$7
(bool~) uctoa::$8
(byte~) uctoa::$9
(label) uctoa::@1
(label) uctoa::@10
(label) uctoa::@11
(label) uctoa::@12
(label) uctoa::@13
(label) uctoa::@14
(label) uctoa::@15
(label) uctoa::@2
(label) uctoa::@3
(label) uctoa::@4
(label) uctoa::@5
(label) uctoa::@6
(label) uctoa::@7
(label) uctoa::@8
(label) uctoa::@9
(label) uctoa::@return
(byte*) uctoa::buffer
(byte*) uctoa::buffer#0
(byte*) uctoa::buffer#1
(byte*) uctoa::buffer#10
(byte*) uctoa::buffer#11
(byte*) uctoa::buffer#12
(byte*) uctoa::buffer#13
(byte*) uctoa::buffer#14
(byte*) uctoa::buffer#15
(byte*) uctoa::buffer#16
(byte*) uctoa::buffer#17
(byte*) uctoa::buffer#18
(byte*) uctoa::buffer#19
(byte*) uctoa::buffer#2
(byte*) uctoa::buffer#20
(byte*) uctoa::buffer#21
(byte*) uctoa::buffer#3
(byte*) uctoa::buffer#4
(byte*) uctoa::buffer#5
(byte*) uctoa::buffer#6
(byte*) uctoa::buffer#7
(byte*) uctoa::buffer#8
(byte*) uctoa::buffer#9
(byte) uctoa::digit
(byte) uctoa::digit#0
(byte) uctoa::digit#1
(byte) uctoa::digit#2
(byte) uctoa::digit#3
(byte) uctoa::digit#4
(byte) uctoa::digit#5
(byte) uctoa::digit#6
(byte) uctoa::digit_value
(byte) uctoa::digit_value#0
(byte) uctoa::digit_value#1
(byte*) uctoa::digit_values
(byte*) uctoa::digit_values#0
(byte*) uctoa::digit_values#1
(byte*) uctoa::digit_values#10
(byte*) uctoa::digit_values#2
(byte*) uctoa::digit_values#3
(byte*) uctoa::digit_values#4
(byte*) uctoa::digit_values#5
(byte*) uctoa::digit_values#6
(byte*) uctoa::digit_values#7
(byte*) uctoa::digit_values#8
(byte*) uctoa::digit_values#9
(byte) uctoa::max_digits
(byte) uctoa::max_digits#0
(byte) uctoa::max_digits#1
(byte) uctoa::max_digits#10
(byte) uctoa::max_digits#2
(byte) uctoa::max_digits#3
(byte) uctoa::max_digits#4
(byte) uctoa::max_digits#5
(byte) uctoa::max_digits#6
(byte) uctoa::max_digits#7
(byte) uctoa::max_digits#8
(byte) uctoa::max_digits#9
(byte) uctoa::radix
(byte) uctoa::radix#0
(byte) uctoa::radix#1
(byte) uctoa::radix#2
(byte) uctoa::radix#3
(byte) uctoa::radix#4
(byte) uctoa::started
(byte) uctoa::started#0
(byte) uctoa::started#1
(byte) uctoa::started#2
(byte) uctoa::started#3
(byte) uctoa::started#4
(byte) uctoa::value
(byte) uctoa::value#0
(byte) uctoa::value#1
(byte) uctoa::value#10
(byte) uctoa::value#11
(byte) uctoa::value#12
(byte) uctoa::value#13
(byte) uctoa::value#14
(byte) uctoa::value#15
(byte) uctoa::value#2
(byte) uctoa::value#3
(byte) uctoa::value#4
(byte) uctoa::value#5
(byte) uctoa::value#6
(byte) uctoa::value#7
(byte) uctoa::value#8
(byte) uctoa::value#9
(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
(bool~) uctoa_append::$0
(label) uctoa_append::@1
(label) uctoa_append::@2
(label) uctoa_append::@3
(label) uctoa_append::@return
(byte*) uctoa_append::buffer
(byte*) uctoa_append::buffer#0
(byte*) uctoa_append::buffer#1
(byte*) uctoa_append::buffer#2
(byte*) uctoa_append::buffer#3
(byte*) uctoa_append::buffer#4
(byte) uctoa_append::digit
(byte) uctoa_append::digit#0
(byte) uctoa_append::digit#1
(byte) uctoa_append::digit#2
(byte) uctoa_append::digit#3
(byte) uctoa_append::digit#4
(byte) uctoa_append::return
(byte) uctoa_append::return#0
(byte) uctoa_append::return#1
(byte) uctoa_append::return#2
(byte) uctoa_append::return#3
(byte) uctoa_append::return#4
(byte) uctoa_append::sub
(byte) uctoa_append::sub#0
(byte) uctoa_append::sub#1
(byte) uctoa_append::sub#2
(byte) uctoa_append::sub#3
(byte) uctoa_append::value
(byte) uctoa_append::value#0
(byte) uctoa_append::value#1
(byte) uctoa_append::value#2
(byte) uctoa_append::value#3
(byte) uctoa_append::value#4
(byte) uctoa_append::value#5
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(bool~) utoa::$0
(bool~) utoa::$1
(byte~) utoa::$10
(byte~) utoa::$11
(bool~) utoa::$2
(bool~) utoa::$3
(number~) utoa::$4
(bool~) utoa::$5
(bool~) utoa::$6
(bool~) utoa::$7
(bool~) utoa::$8
(word~) utoa::$9
(label) utoa::@1
(label) utoa::@10
(label) utoa::@11
(label) utoa::@12
(label) utoa::@13
(label) utoa::@14
(label) utoa::@15
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@8
(label) utoa::@9
(label) utoa::@return
(byte*) utoa::buffer
(byte*) utoa::buffer#0
(byte*) utoa::buffer#1
(byte*) utoa::buffer#10
(byte*) utoa::buffer#11
(byte*) utoa::buffer#12
(byte*) utoa::buffer#13
(byte*) utoa::buffer#14
(byte*) utoa::buffer#15
(byte*) utoa::buffer#16
(byte*) utoa::buffer#17
(byte*) utoa::buffer#18
(byte*) utoa::buffer#19
(byte*) utoa::buffer#2
(byte*) utoa::buffer#20
(byte*) utoa::buffer#21
(byte*) utoa::buffer#3
(byte*) utoa::buffer#4
(byte*) utoa::buffer#5
(byte*) utoa::buffer#6
(byte*) utoa::buffer#7
(byte*) utoa::buffer#8
(byte*) utoa::buffer#9
(byte) utoa::digit
(byte) utoa::digit#0
(byte) utoa::digit#1
(byte) utoa::digit#2
(byte) utoa::digit#3
(byte) utoa::digit#4
(byte) utoa::digit#5
(byte) utoa::digit#6
(word) utoa::digit_value
(word) utoa::digit_value#0
(word) utoa::digit_value#1
(word*) utoa::digit_values
(word*) utoa::digit_values#0
(word*) utoa::digit_values#1
(word*) utoa::digit_values#10
(word*) utoa::digit_values#2
(word*) utoa::digit_values#3
(word*) utoa::digit_values#4
(word*) utoa::digit_values#5
(word*) utoa::digit_values#6
(word*) utoa::digit_values#7
(word*) utoa::digit_values#8
(word*) utoa::digit_values#9
(byte) utoa::max_digits
(byte) utoa::max_digits#0
(byte) utoa::max_digits#1
(byte) utoa::max_digits#10
(byte) utoa::max_digits#2
(byte) utoa::max_digits#3
(byte) utoa::max_digits#4
(byte) utoa::max_digits#5
(byte) utoa::max_digits#6
(byte) utoa::max_digits#7
(byte) utoa::max_digits#8
(byte) utoa::max_digits#9
(byte) utoa::radix
(byte) utoa::radix#0
(byte) utoa::radix#1
(byte) utoa::radix#2
(byte) utoa::radix#3
(byte) utoa::radix#4
(byte) utoa::started
(byte) utoa::started#0
(byte) utoa::started#1
(byte) utoa::started#2
(byte) utoa::started#3
(byte) utoa::started#4
(word) utoa::value
(word) utoa::value#0
(word) utoa::value#1
(word) utoa::value#10
(word) utoa::value#11
(word) utoa::value#12
(word) utoa::value#13
(word) utoa::value#14
(word) utoa::value#15
(word) utoa::value#2
(word) utoa::value#3
(word) utoa::value#4
(word) utoa::value#5
(word) utoa::value#6
(word) utoa::value#7
(word) utoa::value#8
(word) utoa::value#9
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(bool~) utoa_append::$0
(label) utoa_append::@1
(label) utoa_append::@2
(label) utoa_append::@3
(label) utoa_append::@return
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0
(byte*) utoa_append::buffer#1
(byte*) utoa_append::buffer#2
(byte*) utoa_append::buffer#3
(byte*) utoa_append::buffer#4
(byte) utoa_append::digit
(byte) utoa_append::digit#0
(byte) utoa_append::digit#1
(byte) utoa_append::digit#2
(byte) utoa_append::digit#3
(byte) utoa_append::digit#4
(word) utoa_append::return
(word) utoa_append::return#0
(word) utoa_append::return#1
(word) utoa_append::return#2
(word) utoa_append::return#3
(word) utoa_append::return#4
(word) utoa_append::sub
(word) utoa_append::sub#0
(word) utoa_append::sub#1
(word) utoa_append::sub#2
(word) utoa_append::sub#3
(word) utoa_append::value
(word) utoa_append::value#0
(word) utoa_append::value#1
(word) utoa_append::value#2
(word) utoa_append::value#3
(word) utoa_append::value#4
(word) utoa_append::value#5

Adding number conversion cast (unumber) 0 in (bool~) memset::$0 ← (word) memset::num#2 > (number) 0
Adding number conversion cast (unumber) 0 in (bool~) strupr::$1 ← (number) 0 != *((byte*) strupr::src#2)
Adding number conversion cast (unumber) 0 in (bool~) strlen::$0 ← (number) 0 != *((byte*) strlen::str#2)
Adding number conversion cast (unumber) 3 in (byte) uctoa::max_digits#1 ← (number) 3
Adding number conversion cast (unumber) 2 in (byte) uctoa::max_digits#2 ← (number) 2
Adding number conversion cast (unumber) 3 in (byte) uctoa::max_digits#3 ← (number) 3
Adding number conversion cast (unumber) 8 in (byte) uctoa::max_digits#4 ← (number) 8
Adding number conversion cast (unumber) 0 in *((byte*) uctoa::buffer#2) ← (number) 0
Adding number conversion cast (unumber) 1 in (number~) uctoa::$4 ← (byte) uctoa::max_digits#5 - (number) 1
Adding number conversion cast (unumber) uctoa::$4 in (number~) uctoa::$4 ← (byte) uctoa::max_digits#5 - (unumber)(number) 1
Adding number conversion cast (unumber) 0 in *((byte*) uctoa::buffer#3) ← (number) 0
Adding number conversion cast (unumber) 1 in (byte) uctoa::started#1 ← (number) 1
Adding number conversion cast (unumber) 5 in (byte) utoa::max_digits#1 ← (number) 5
Adding number conversion cast (unumber) 4 in (byte) utoa::max_digits#2 ← (number) 4
Adding number conversion cast (unumber) 6 in (byte) utoa::max_digits#3 ← (number) 6
Adding number conversion cast (unumber) $10 in (byte) utoa::max_digits#4 ← (number) $10
Adding number conversion cast (unumber) 0 in *((byte*) utoa::buffer#2) ← (number) 0
Adding number conversion cast (unumber) 1 in (number~) utoa::$4 ← (byte) utoa::max_digits#5 - (number) 1
Adding number conversion cast (unumber) utoa::$4 in (number~) utoa::$4 ← (byte) utoa::max_digits#5 - (unumber)(number) 1
Adding number conversion cast (unumber) 0 in *((byte*) utoa::buffer#3) ← (number) 0
Adding number conversion cast (unumber) 1 in (byte) utoa::started#1 ← (number) 1
Adding number conversion cast (unumber) $19 in (bool~) clrscr::$0 ← (byte) clrscr::l#2 < (number) $19
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_x ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_y ← (number) 0
Adding number conversion cast (unumber) $28 in (bool~) clrscr::$1 ← (byte) clrscr::c#2 < (number) $28
Adding number conversion cast (unumber) $28 in (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#3 + (number) $28
Adding number conversion cast (unumber) $28 in (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#3 + (number) $28
Adding number conversion cast (unumber) $19 in (bool~) gotoxy::$0 ← (byte) gotoxy::y#2 > (number) $19
Adding number conversion cast (unumber) $28 in (bool~) gotoxy::$2 ← (byte) gotoxy::x#2 >= (number) $28
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#0 ← (number) 0
Adding number conversion cast (unumber) $28 in (number~) gotoxy::$4 ← (word~) gotoxy::$7 * (number) $28
Adding number conversion cast (unumber) gotoxy::$4 in (number~) gotoxy::$4 ← (word~) gotoxy::$7 * (unumber)(number) $28
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#0 ← (number) 0
Adding number conversion cast (unumber) $28 in (bool~) cputc::$1 ← (byte) conio_cursor_x == (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_text ← (byte*) conio_line_text + (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_color ← (byte*) conio_line_color + (number) $28
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_x ← (number) 0
Adding number conversion cast (unumber) $19 in (bool~) cscroll::$0 ← (byte) conio_cursor_y == (number) $19
Adding number conversion cast (unumber) 0 in (bool~) cscroll::$7 ← (number) 0 != (byte) conio_scroll_enable
Adding number conversion cast (unumber) $28 in (void*) memcpy::source#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $28
Adding number conversion cast (unumber) $19*$28-$28 in (word) memcpy::num#0 ← (number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $28 in (void*) memcpy::source#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $28
Adding number conversion cast (unumber) $19*$28-$28 in (word) memcpy::num#1 ← (number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $28 in (void*) memset::str#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $19*$28 in (void*) memset::str#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $19*(number) $28-(unumber)(number) $28
Adding number conversion cast (unumber) $28 in (word) memset::num#0 ← (number) $28
Adding number conversion cast (unumber) $28 in (void*) memset::str#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $19*$28 in (void*) memset::str#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $19*(number) $28-(unumber)(number) $28
Adding number conversion cast (unumber) $28 in (word) memset::num#1 ← (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_text ← (byte*) conio_line_text - (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_color ← (byte*) conio_line_color - (number) $28
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#1 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#1 ← (number) 0
Adding number conversion cast (unumber) 0 in (bool~) cputs::$1 ← (number) 0 != (byte) cputs::c#1
Adding number conversion cast (unumber) 0 in (bool~) printf_uint::$5 ← (number) 0 != (byte) printf_uint::format_sign_always#1
Adding number conversion cast (unumber) printf_uint::$2 in (byte) printf_uint::format_upper_case#2 ← phi( printf_uint::@1/(byte) printf_uint::format_upper_case#3 printf_uint::@2/(byte) printf_uint::format_upper_case#4 )
  (byte) printf_uint::format_zero_padding#2 ← phi( printf_uint::@1/(byte) printf_uint::format_zero_padding#3 printf_uint::@2/(byte) printf_uint::format_zero_padding#4 )
  (byte) printf_uint::format_sign_always#3 ← phi( printf_uint::@1/(byte) printf_uint::format_sign_always#4 printf_uint::@2/(byte) printf_uint::format_sign_always#5 )
  (byte) printf_uint::format_justify_left#2 ← phi( printf_uint::@1/(byte) printf_uint::format_justify_left#3 printf_uint::@2/(byte) printf_uint::format_justify_left#4 )
  (byte) printf_uint::format_min_length#2 ← phi( printf_uint::@1/(byte) printf_uint::format_min_length#3 printf_uint::@2/(byte) printf_uint::format_min_length#4 )
  (byte) printf_uint::format_radix#1 ← phi( printf_uint::@1/(byte) printf_uint::format_radix#3 printf_uint::@2/(byte) printf_uint::format_radix#4 )
  (word) printf_uint::uvalue#1 ← phi( printf_uint::@1/(word) printf_uint::uvalue#2 printf_uint::@2/(word) printf_uint::uvalue#3 )
  (number~) printf_uint::$2 ← phi( printf_uint::@1/(byte~) printf_uint::$1 printf_uint::@2/(number~) printf_uint::$0 )
Adding number conversion cast (unumber) printf_uint::$0 in (byte) printf_uint::format_upper_case#2 ← phi( printf_uint::@1/(byte) printf_uint::format_upper_case#3 printf_uint::@2/(byte) printf_uint::format_upper_case#4 )
  (byte) printf_uint::format_zero_padding#2 ← phi( printf_uint::@1/(byte) printf_uint::format_zero_padding#3 printf_uint::@2/(byte) printf_uint::format_zero_padding#4 )
  (byte) printf_uint::format_sign_always#3 ← phi( printf_uint::@1/(byte) printf_uint::format_sign_always#4 printf_uint::@2/(byte) printf_uint::format_sign_always#5 )
  (byte) printf_uint::format_justify_left#2 ← phi( printf_uint::@1/(byte) printf_uint::format_justify_left#3 printf_uint::@2/(byte) printf_uint::format_justify_left#4 )
  (byte) printf_uint::format_min_length#2 ← phi( printf_uint::@1/(byte) printf_uint::format_min_length#3 printf_uint::@2/(byte) printf_uint::format_min_length#4 )
  (byte) printf_uint::format_radix#1 ← phi( printf_uint::@1/(byte) printf_uint::format_radix#3 printf_uint::@2/(byte) printf_uint::format_radix#4 )
  (word) printf_uint::uvalue#1 ← phi( printf_uint::@1/(word) printf_uint::uvalue#2 printf_uint::@2/(word) printf_uint::uvalue#3 )
  (unumber~) printf_uint::$2 ← phi( printf_uint::@1/(byte~) printf_uint::$1 printf_uint::@2/(number~) printf_uint::$0 )
Adding number conversion cast (unumber) 0 in *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (number) 0
Adding number conversion cast (snumber) 0 in (bool~) printf_schar::$0 ← (signed byte) printf_schar::value#3 < (number) 0
Adding number conversion cast (unumber) 0 in (bool~) printf_schar::$5 ← (number) 0 != (byte) printf_schar::format_sign_always#2
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$26 ← (number) 0 != (byte) printf_number_buffer::format_min_length#2
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$27 ← (number) 0 != (byte) printf_number_buffer::format_justify_left#2
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$28 ← (number) 0 != (byte) printf_number_buffer::format_zero_padding#2
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$29 ← (number) 0 != (byte) printf_number_buffer::buffer_sign#2
Adding number conversion cast (snumber) 0 in (bool~) printf_number_buffer::$22 ← (signed byte) printf_number_buffer::padding#1 < (number) 0
Adding number conversion cast (snumber) 0 in (signed byte) printf_number_buffer::padding#2 ← (number) 0
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$30 ← (number) 0 != (byte) printf_number_buffer::buffer_sign#3
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$31 ← (number) 0 != (byte) printf_number_buffer::format_upper_case#2
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$32 ← (number) 0 != (byte) printf_number_buffer::format_zero_padding#4
Adding number conversion cast (snumber) -$4d in (signed byte) printf_schar::value#1 ← (number) -$4d
Adding number conversion cast (unumber) 6 in (byte) printf_schar::format_min_length#0 ← (number) 6
Adding number conversion cast (unumber) 0 in (byte) printf_schar::format_justify_left#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) printf_schar::format_sign_always#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) printf_schar::format_zero_padding#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) printf_schar::format_upper_case#0 ← (number) 0
Adding number conversion cast (snumber) $63 in (signed byte) printf_schar::value#2 ← (number) $63
Adding number conversion cast (unumber) 6 in (byte) printf_schar::format_min_length#1 ← (number) 6
Adding number conversion cast (unumber) 0 in (byte) printf_schar::format_justify_left#1 ← (number) 0
Adding number conversion cast (unumber) 1 in (byte) printf_schar::format_sign_always#1 ← (number) 1
Adding number conversion cast (unumber) 1 in (byte) printf_schar::format_zero_padding#1 ← (number) 1
Adding number conversion cast (unumber) 0 in (byte) printf_schar::format_upper_case#1 ← (number) 0
Adding number conversion cast (unumber) $d80 in (word) printf_uint::uvalue#0 ← (number) $d80
Adding number conversion cast (unumber) $a in (byte) printf_uint::format_min_length#0 ← (number) $a
Adding number conversion cast (unumber) 1 in (byte) printf_uint::format_justify_left#0 ← (number) 1
Adding number conversion cast (unumber) 0 in (byte) printf_uint::format_sign_always#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) printf_uint::format_zero_padding#0 ← (number) 0
Adding number conversion cast (unumber) 1 in (byte) printf_uint::format_upper_case#0 ← (number) 1
Successful SSA optimization PassNAddNumberTypeConversions
Adding number conversion cast (unumber) 0 in (unumber~) printf_uint::$0 ← (number) 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast (byte*) memcpy::src#0 ← (byte*)(void*) memcpy::source#2
Inlining cast (byte*) memcpy::dst#0 ← (byte*)(void*) memcpy::destination#2
Inlining cast (byte*) memset::dst#0 ← (byte*)(void*) memset::str#3
Inlining cast (byte) uctoa::max_digits#1 ← (unumber)(number) 3
Inlining cast (byte) uctoa::max_digits#2 ← (unumber)(number) 2
Inlining cast (byte) uctoa::max_digits#3 ← (unumber)(number) 3
Inlining cast (byte) uctoa::max_digits#4 ← (unumber)(number) 8
Inlining cast *((byte*) uctoa::buffer#2) ← (unumber)(number) 0
Inlining cast *((byte*) uctoa::buffer#3) ← (unumber)(number) 0
Inlining cast (byte) uctoa::started#1 ← (unumber)(number) 1
Inlining cast (byte) utoa::max_digits#1 ← (unumber)(number) 5
Inlining cast (byte) utoa::max_digits#2 ← (unumber)(number) 4
Inlining cast (byte) utoa::max_digits#3 ← (unumber)(number) 6
Inlining cast (byte) utoa::max_digits#4 ← (unumber)(number) $10
Inlining cast *((byte*) utoa::buffer#2) ← (unumber)(number) 0
Inlining cast *((byte*) utoa::buffer#3) ← (unumber)(number) 0
Inlining cast (byte) utoa::started#1 ← (unumber)(number) 1
Inlining cast (byte) conio_cursor_x ← (unumber)(number) 0
Inlining cast (byte) conio_cursor_y ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#0 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::x#0 ← (unumber)(number) 0
Inlining cast (byte) conio_cursor_x ← (unumber)(number) 0
Inlining cast (word) memcpy::num#0 ← (unumber)(number) $19*(number) $28-(number) $28
Inlining cast (word) memcpy::num#1 ← (unumber)(number) $19*(number) $28-(number) $28
Inlining cast (word) memset::num#0 ← (unumber)(number) $28
Inlining cast (word) memset::num#1 ← (unumber)(number) $28
Inlining cast (byte) gotoxy::x#1 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#1 ← (unumber)(number) 0
Inlining cast (unumber~) printf_uint::$0 ← (unumber)(number) 0
Inlining cast *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (unumber)(number) 0
Inlining cast (signed byte) printf_number_buffer::padding#2 ← (snumber)(number) 0
Inlining cast (signed byte) printf_schar::value#1 ← (snumber)(number) -$4d
Inlining cast (byte) printf_schar::format_min_length#0 ← (unumber)(number) 6
Inlining cast (byte) printf_schar::format_justify_left#0 ← (unumber)(number) 0
Inlining cast (byte) printf_schar::format_sign_always#0 ← (unumber)(number) 0
Inlining cast (byte) printf_schar::format_zero_padding#0 ← (unumber)(number) 0
Inlining cast (byte) printf_schar::format_upper_case#0 ← (unumber)(number) 0
Inlining cast (signed byte) printf_schar::value#2 ← (snumber)(number) $63
Inlining cast (byte) printf_schar::format_min_length#1 ← (unumber)(number) 6
Inlining cast (byte) printf_schar::format_justify_left#1 ← (unumber)(number) 0
Inlining cast (byte) printf_schar::format_sign_always#1 ← (unumber)(number) 1
Inlining cast (byte) printf_schar::format_zero_padding#1 ← (unumber)(number) 1
Inlining cast (byte) printf_schar::format_upper_case#1 ← (unumber)(number) 0
Inlining cast (word) printf_uint::uvalue#0 ← (unumber)(number) $d80
Inlining cast (byte) printf_uint::format_min_length#0 ← (unumber)(number) $a
Inlining cast (byte) printf_uint::format_justify_left#0 ← (unumber)(number) 1
Inlining cast (byte) printf_uint::format_sign_always#0 ← (unumber)(number) 0
Inlining cast (byte) printf_uint::format_zero_padding#0 ← (unumber)(number) 0
Inlining cast (byte) printf_uint::format_upper_case#0 ← (unumber)(number) 1
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 55296
Simplifying constant pointer cast (byte*) 1024
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 3
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Simplifying constant integer cast 8
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast (byte) uctoa::value#3
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 5
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast $10
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $19
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast -$4d
Simplifying constant integer cast 6
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $63
Simplifying constant integer cast 6
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $d80
Simplifying constant integer cast $a
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 5
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) -$4d
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) $63
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (word) $d80
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in (unumber~) uctoa::$4 ← (byte) uctoa::max_digits#5 - (byte) 1
Inferred type updated to byte in (unumber~) utoa::$4 ← (byte) utoa::max_digits#5 - (byte) 1
Inferred type updated to word in (unumber~) gotoxy::$4 ← (word~) gotoxy::$7 * (byte) $28
Inferred type updated to byte in (unumber~) printf_uint::$0 ← (byte) 0
Inferred type updated to byte for (unumber~) printf_uint::$2
Inversing boolean not [33] (bool~) memset::$1 ← (word) memset::num#2 <= (byte) 0 from [32] (bool~) memset::$0 ← (word) memset::num#2 > (byte) 0
Inversing boolean not [269] (bool~) gotoxy::$1 ← (byte) gotoxy::y#2 <= (byte) $19 from [268] (bool~) gotoxy::$0 ← (byte) gotoxy::y#2 > (byte) $19
Inversing boolean not [273] (bool~) gotoxy::$3 ← (byte) gotoxy::x#2 < (byte) $28 from [272] (bool~) gotoxy::$2 ← (byte) gotoxy::x#2 >= (byte) $28
Inversing boolean not [299] (bool~) cputc::$2 ← (byte) conio_cursor_x != (byte) $28 from [298] (bool~) cputc::$1 ← (byte) conio_cursor_x == (byte) $28
Inversing boolean not [310] (bool~) cscroll::$1 ← (byte) conio_cursor_y != (byte) $19 from [309] (bool~) cscroll::$0 ← (byte) conio_cursor_y == (byte) $19
Inversing boolean not [398] (bool~) printf_schar::$3 ← (byte) 0 == (byte) printf_schar::format_sign_always#2 from [397] (bool~) printf_schar::$5 ← (byte) 0 != (byte) printf_schar::format_sign_always#2
Inversing boolean not [422] (bool~) printf_number_buffer::$0 ← (byte) 0 == (byte) printf_number_buffer::format_min_length#2 from [421] (bool~) printf_number_buffer::$26 ← (byte) 0 != (byte) printf_number_buffer::format_min_length#2
Inversing boolean not [426] (bool~) printf_number_buffer::$1 ← (byte) 0 == (byte) printf_number_buffer::format_justify_left#2 from [425] (bool~) printf_number_buffer::$27 ← (byte) 0 != (byte) printf_number_buffer::format_justify_left#2
Inversing boolean not [428] (bool~) printf_number_buffer::$2 ← (byte) 0 == (byte) printf_number_buffer::format_zero_padding#2 from [427] (bool~) printf_number_buffer::$28 ← (byte) 0 != (byte) printf_number_buffer::format_zero_padding#2
Inversing boolean not [441] (bool~) printf_number_buffer::$20 ← (byte) 0 == (byte) printf_number_buffer::buffer_sign#2 from [440] (bool~) printf_number_buffer::$29 ← (byte) 0 != (byte) printf_number_buffer::buffer_sign#2
Inversing boolean not [448] (bool~) printf_number_buffer::$23 ← (signed byte) printf_number_buffer::padding#1 >= (signed byte) 0 from [447] (bool~) printf_number_buffer::$22 ← (signed byte) printf_number_buffer::padding#1 < (signed byte) 0
Inversing boolean not [456] (bool~) printf_number_buffer::$7 ← (byte) 0 == (byte) printf_number_buffer::buffer_sign#3 from [455] (bool~) printf_number_buffer::$30 ← (byte) 0 != (byte) printf_number_buffer::buffer_sign#3
Inversing boolean not [473] (bool~) printf_number_buffer::$12 ← (byte) 0 == (byte) printf_number_buffer::format_upper_case#2 from [472] (bool~) printf_number_buffer::$31 ← (byte) 0 != (byte) printf_number_buffer::format_upper_case#2
Inversing boolean not [485] (bool~) printf_number_buffer::$14 ← (byte) 0 == (byte) printf_number_buffer::format_zero_padding#4 from [484] (bool~) printf_number_buffer::$32 ← (byte) 0 != (byte) printf_number_buffer::format_zero_padding#4
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias toupper::ch#1 = toupper::ch#2 toupper::ch#3 toupper::return#1 
Alias toupper::return#0 = toupper::$3 
Alias toupper::return#2 = toupper::return#4 
Alias memcpy::src_end#0 = memcpy::$0 
Alias memcpy::src#2 = memcpy::src#3 
Alias memcpy::dst#2 = memcpy::dst#3 
Alias memcpy::src_end#1 = memcpy::src_end#2 
Alias memcpy::destination#3 = memcpy::destination#5 memcpy::destination#4 memcpy::return#0 memcpy::return#4 memcpy::return#1 
Alias memset::return#0 = memset::str#2 memset::return#4 memset::return#1 
Alias memset::str#3 = memset::str#4 
Alias memset::num#2 = memset::num#3 
Alias memset::c#4 = memset::c#5 
Alias memset::end#0 = memset::$2 
Alias memset::c#2 = memset::c#3 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#5 = memset::str#6 
Alias strupr::src#0 = strupr::str#1 
Alias strupr::src#2 = strupr::src#3 strupr::src#4 
Alias strupr::str#2 = strupr::str#5 strupr::str#3 strupr::str#4 strupr::return#0 strupr::return#3 strupr::return#1 
Alias toupper::return#3 = toupper::return#5 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#0 strlen::return#3 strlen::return#1 
Alias strlen::str#2 = strlen::str#3 
Alias uctoa::value#10 = uctoa::value#8 uctoa::value#12 uctoa::value#13 uctoa::value#9 uctoa::value#14 uctoa::value#15 uctoa::value#11 
Alias uctoa::buffer#10 = uctoa::buffer#17 uctoa::buffer#21 uctoa::buffer#16 uctoa::buffer#18 uctoa::buffer#13 uctoa::buffer#19 uctoa::buffer#20 uctoa::buffer#6 
Alias uctoa::radix#1 = uctoa::radix#2 uctoa::radix#3 uctoa::radix#4 
Alias uctoa::digit_values#10 = uctoa::digit_values#5 uctoa::digit_values#6 uctoa::digit_values#9 
Alias uctoa::digit#2 = uctoa::digit#3 uctoa::digit#6 uctoa::digit#5 
Alias uctoa::value#2 = uctoa::value#5 uctoa::value#3 uctoa::$10 uctoa::value#4 
Alias uctoa::started#2 = uctoa::started#3 
Alias uctoa::buffer#11 = uctoa::buffer#12 uctoa::buffer#7 uctoa::buffer#8 uctoa::buffer#9 
Alias uctoa::max_digits#10 = uctoa::max_digits#8 uctoa::max_digits#5 uctoa::max_digits#9 
Alias uctoa::digit_value#0 = uctoa::digit_value#1 
Alias uctoa_append::return#0 = uctoa_append::return#3 
Alias uctoa::value#0 = uctoa::$9 
Alias uctoa_append::digit#2 = uctoa_append::digit#4 uctoa_append::digit#3 
Alias uctoa_append::value#2 = uctoa_append::value#3 uctoa_append::value#4 uctoa_append::return#1 uctoa_append::return#4 uctoa_append::return#2 
Alias uctoa_append::sub#1 = uctoa_append::sub#2 
Alias uctoa_append::buffer#1 = uctoa_append::buffer#4 uctoa_append::buffer#2 
Alias utoa::value#10 = utoa::value#8 utoa::value#12 utoa::value#13 utoa::value#9 utoa::value#14 utoa::value#15 utoa::value#11 
Alias utoa::buffer#10 = utoa::buffer#17 utoa::buffer#21 utoa::buffer#16 utoa::buffer#18 utoa::buffer#13 utoa::buffer#19 utoa::buffer#20 utoa::buffer#6 
Alias utoa::radix#1 = utoa::radix#2 utoa::radix#3 utoa::radix#4 
Alias utoa::digit#2 = utoa::digit#3 utoa::digit#6 utoa::digit#5 
Alias utoa::digit_values#10 = utoa::digit_values#5 utoa::digit_values#6 utoa::digit_values#9 
Alias utoa::value#2 = utoa::value#5 utoa::value#3 utoa::value#4 
Alias utoa::started#2 = utoa::started#3 
Alias utoa::buffer#11 = utoa::buffer#12 utoa::buffer#7 utoa::buffer#8 utoa::buffer#9 
Alias utoa::max_digits#10 = utoa::max_digits#8 utoa::max_digits#5 utoa::max_digits#9 
Alias utoa::digit_value#0 = utoa::digit_value#1 
Alias utoa_append::return#0 = utoa_append::return#3 
Alias utoa::value#0 = utoa::$9 
Alias utoa_append::digit#2 = utoa_append::digit#4 utoa_append::digit#3 
Alias utoa_append::value#2 = utoa_append::value#3 utoa_append::value#4 utoa_append::return#1 utoa_append::return#4 utoa_append::return#2 
Alias utoa_append::sub#1 = utoa_append::sub#2 
Alias utoa_append::buffer#1 = utoa_append::buffer#4 utoa_append::buffer#2 
Alias clrscr::line_text#5 = clrscr::line_text#6 
Alias clrscr::line_cols#5 = clrscr::line_cols#6 
Alias clrscr::l#2 = clrscr::l#5 
Alias clrscr::line_text#2 = clrscr::line_text#4 clrscr::line_text#3 
Alias clrscr::c#2 = clrscr::c#3 
Alias clrscr::line_cols#2 = clrscr::line_cols#4 clrscr::line_cols#3 
Alias clrscr::l#3 = clrscr::l#6 clrscr::l#4 
Alias gotoxy::x#4 = gotoxy::x#5 
Alias gotoxy::line_offset#0 = gotoxy::$4 
Alias gotoxy::y#4 = gotoxy::y#5 
Alias cputc::c#3 = cputc::c#4 
Alias cputs::c#1 = cputs::c#2 
Alias cputs::s#0 = cputs::s#5 cputs::s#4 
Alias printf_padding::pad#3 = printf_padding::pad#4 printf_padding::pad#6 
Alias printf_padding::i#2 = printf_padding::i#4 printf_padding::i#3 
Alias printf_padding::length#3 = printf_padding::length#6 printf_padding::length#5 
Alias printf_uint::uvalue#2 = printf_uint::uvalue#4 printf_uint::uvalue#3 
Alias printf_uint::format_radix#3 = printf_uint::format_radix#5 printf_uint::format_radix#4 
Alias printf_uint::format_min_length#3 = printf_uint::format_min_length#5 printf_uint::format_min_length#4 
Alias printf_uint::format_justify_left#3 = printf_uint::format_justify_left#5 printf_uint::format_justify_left#4 
Alias printf_uint::format_sign_always#1 = printf_uint::format_sign_always#4 printf_uint::format_sign_always#5 
Alias printf_uint::format_zero_padding#3 = printf_uint::format_zero_padding#5 printf_uint::format_zero_padding#4 
Alias printf_uint::format_upper_case#3 = printf_uint::format_upper_case#5 printf_uint::format_upper_case#4 
Alias printf_uint::format_min_length#1 = printf_uint::format_min_length#2 
Alias printf_uint::format_justify_left#1 = printf_uint::format_justify_left#2 
Alias printf_uint::format_sign_always#2 = printf_uint::format_sign_always#3 
Alias printf_uint::format_zero_padding#1 = printf_uint::format_zero_padding#2 
Alias printf_uint::format_upper_case#1 = printf_uint::format_upper_case#2 
Alias printf_uint::format_radix#1 = printf_uint::format_radix#2 
Alias printf_schar::value#3 = printf_schar::value#4 printf_schar::value#6 printf_schar::value#7 
Alias printf_schar::format_radix#4 = printf_schar::format_radix#7 printf_schar::format_radix#5 printf_schar::format_radix#6 
Alias printf_schar::format_min_length#4 = printf_schar::format_min_length#7 printf_schar::format_min_length#5 printf_schar::format_min_length#6 
Alias printf_schar::format_justify_left#4 = printf_schar::format_justify_left#7 printf_schar::format_justify_left#5 printf_schar::format_justify_left#6 
Alias printf_schar::format_sign_always#2 = printf_schar::format_sign_always#6 printf_schar::format_sign_always#4 printf_schar::format_sign_always#7 
Alias printf_schar::format_zero_padding#4 = printf_schar::format_zero_padding#7 printf_schar::format_zero_padding#5 printf_schar::format_zero_padding#6 
Alias printf_schar::format_upper_case#4 = printf_schar::format_upper_case#7 printf_schar::format_upper_case#5 printf_schar::format_upper_case#6 
Alias printf_schar::value#0 = printf_schar::$4 
Alias printf_schar::format_min_length#2 = printf_schar::format_min_length#3 
Alias printf_schar::format_justify_left#2 = printf_schar::format_justify_left#3 
Alias printf_schar::format_sign_always#3 = printf_schar::format_sign_always#5 
Alias printf_schar::format_zero_padding#2 = printf_schar::format_zero_padding#3 
Alias printf_schar::format_upper_case#2 = printf_schar::format_upper_case#3 
Alias printf_schar::format_radix#2 = printf_schar::format_radix#3 
Alias printf_number_buffer::buffer_digits#19 = printf_number_buffer::buffer_digits#2 printf_number_buffer::buffer_digits#5 printf_number_buffer::buffer_digits#20 
Alias printf_number_buffer::buffer_sign#12 = printf_number_buffer::buffer_sign#5 printf_number_buffer::buffer_sign#8 printf_number_buffer::buffer_sign#2 
Alias printf_number_buffer::format_min_length#2 = printf_number_buffer::format_min_length#6 printf_number_buffer::format_min_length#4 printf_number_buffer::format_min_length#5 
Alias printf_number_buffer::format_justify_left#12 = printf_number_buffer::format_justify_left#4 printf_number_buffer::format_justify_left#8 printf_number_buffer::format_justify_left#9 
Alias printf_number_buffer::format_zero_padding#11 = printf_number_buffer::format_zero_padding#17 printf_number_buffer::format_zero_padding#5 printf_number_buffer::format_zero_padding#12 
Alias printf_number_buffer::format_upper_case#11 = printf_number_buffer::format_upper_case#17 printf_number_buffer::format_upper_case#15 printf_number_buffer::format_upper_case#16 
Alias strlen::return#2 = strlen::return#4 
Alias printf_number_buffer::padding#1 = printf_number_buffer::$21 
Alias printf_number_buffer::len#0 = printf_number_buffer::len#3 
Alias printf_number_buffer::format_justify_left#5 = printf_number_buffer::format_justify_left#6 
Alias printf_number_buffer::format_zero_padding#6 = printf_number_buffer::format_zero_padding#7 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#9 
Alias printf_number_buffer::format_upper_case#12 = printf_number_buffer::format_upper_case#13 
Alias printf_number_buffer::buffer_digits#16 = printf_number_buffer::buffer_digits#17 
Alias printf_number_buffer::padding#12 = printf_number_buffer::padding#4 printf_number_buffer::padding#3 
Alias printf_number_buffer::buffer_sign#11 = printf_number_buffer::buffer_sign#6 printf_number_buffer::buffer_sign#7 
Alias printf_number_buffer::format_zero_padding#13 = printf_number_buffer::format_zero_padding#18 printf_number_buffer::format_zero_padding#2 
Alias printf_number_buffer::format_upper_case#14 = printf_number_buffer::format_upper_case#8 printf_number_buffer::format_upper_case#9 
Alias printf_number_buffer::buffer_digits#13 = printf_number_buffer::buffer_digits#18 printf_number_buffer::buffer_digits#14 
Alias printf_number_buffer::format_justify_left#19 = printf_number_buffer::format_justify_left#21 printf_number_buffer::format_justify_left#2 
Alias printf_number_buffer::buffer_sign#3 = printf_number_buffer::buffer_sign#4 
Alias printf_number_buffer::format_zero_padding#14 = printf_number_buffer::format_zero_padding#9 printf_number_buffer::format_zero_padding#8 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#13 printf_number_buffer::padding#9 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#6 printf_number_buffer::format_upper_case#5 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#15 printf_number_buffer::buffer_digits#11 
Alias printf_number_buffer::format_justify_left#16 = printf_number_buffer::format_justify_left#20 printf_number_buffer::format_justify_left#17 
Alias printf_number_buffer::padding#16 = printf_number_buffer::padding#6 printf_number_buffer::padding#5 
Alias printf_number_buffer::format_upper_case#3 = printf_number_buffer::format_upper_case#7 printf_number_buffer::format_upper_case#4 
Alias printf_number_buffer::buffer_digits#12 = printf_number_buffer::buffer_digits#9 printf_number_buffer::buffer_digits#8 
Alias printf_number_buffer::format_zero_padding#19 = printf_number_buffer::format_zero_padding#21 printf_number_buffer::format_zero_padding#3 
Alias printf_number_buffer::format_justify_left#13 = printf_number_buffer::format_justify_left#18 printf_number_buffer::format_justify_left#14 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#4 
Alias printf_number_buffer::format_justify_left#3 = printf_number_buffer::format_justify_left#7 
Alias printf_number_buffer::padding#11 = printf_number_buffer::padding#7 printf_number_buffer::padding#8 
Alias printf_number_buffer::buffer_digits#4 = printf_number_buffer::buffer_digits#7 printf_number_buffer::buffer_digits#6 
Alias printf_number_buffer::format_zero_padding#15 = printf_number_buffer::format_zero_padding#20 printf_number_buffer::format_zero_padding#16 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#15 printf_number_buffer::format_justify_left#11 
Alias printf_number_buffer::padding#14 = printf_number_buffer::padding#17 printf_number_buffer::padding#15 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias uctoa::value#10 = uctoa::value#7 
Alias uctoa::buffer#10 = uctoa::buffer#15 
Alias uctoa::digit#2 = uctoa::digit#4 
Alias uctoa::max_digits#10 = uctoa::max_digits#6 
Alias uctoa::digit_values#10 = uctoa::digit_values#7 
Alias utoa::value#10 = utoa::value#7 
Alias utoa::buffer#10 = utoa::buffer#15 
Alias utoa::digit#2 = utoa::digit#4 
Alias utoa::max_digits#10 = utoa::max_digits#6 
Alias utoa::digit_values#10 = utoa::digit_values#7 
Alias gotoxy::x#2 = gotoxy::x#4 
Alias gotoxy::y#3 = gotoxy::y#4 
Alias printf_uint::uvalue#1 = printf_uint::uvalue#2 
Alias printf_uint::format_radix#1 = printf_uint::format_radix#3 
Alias printf_uint::format_min_length#1 = printf_uint::format_min_length#3 
Alias printf_uint::format_justify_left#1 = printf_uint::format_justify_left#3 
Alias printf_uint::format_sign_always#1 = printf_uint::format_sign_always#2 
Alias printf_uint::format_zero_padding#1 = printf_uint::format_zero_padding#3 
Alias printf_uint::format_upper_case#1 = printf_uint::format_upper_case#3 
Alias printf_schar::format_radix#2 = printf_schar::format_radix#4 
Alias printf_schar::format_min_length#2 = printf_schar::format_min_length#4 
Alias printf_schar::format_justify_left#2 = printf_schar::format_justify_left#4 
Alias printf_schar::format_sign_always#2 = printf_schar::format_sign_always#3 
Alias printf_schar::format_zero_padding#2 = printf_schar::format_zero_padding#4 
Alias printf_schar::format_upper_case#2 = printf_schar::format_upper_case#4 
Alias printf_number_buffer::format_min_length#2 = printf_number_buffer::format_min_length#3 
Alias printf_number_buffer::format_justify_left#12 = printf_number_buffer::format_justify_left#5 
Alias printf_number_buffer::format_zero_padding#11 = printf_number_buffer::format_zero_padding#6 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#12 
Alias printf_number_buffer::format_upper_case#11 = printf_number_buffer::format_upper_case#12 
Alias printf_number_buffer::buffer_digits#16 = printf_number_buffer::buffer_digits#19 
Alias printf_number_buffer::buffer_sign#11 = printf_number_buffer::buffer_sign#3 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#14 printf_number_buffer::format_zero_padding#13 printf_number_buffer::format_zero_padding#19 printf_number_buffer::format_zero_padding#15 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#12 printf_number_buffer::padding#16 printf_number_buffer::padding#14 printf_number_buffer::padding#11 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#14 printf_number_buffer::format_upper_case#3 printf_number_buffer::format_upper_case#2 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#13 printf_number_buffer::buffer_digits#12 printf_number_buffer::buffer_digits#4 printf_number_buffer::buffer_digits#3 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#16 printf_number_buffer::format_justify_left#19 printf_number_buffer::format_justify_left#13 printf_number_buffer::format_justify_left#3 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#12 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#11 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#11 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#11 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#16 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values (byte) toupper::ch#1 (byte) toupper::ch#0
Identical Phi Values (byte*) memcpy::src_end#1 (byte*) memcpy::src_end#0
Identical Phi Values (void*) memcpy::destination#3 (void*) memcpy::destination#2
Identical Phi Values (byte*) memset::end#1 (byte*) memset::end#0
Identical Phi Values (void*) memset::str#5 (void*) memset::str#3
Identical Phi Values (byte) memset::c#2 (byte) memset::c#4
Identical Phi Values (byte*) strupr::src#0 (byte*) strupr::str#0
Identical Phi Values (byte*) strupr::str#2 (byte*) strupr::src#0
Identical Phi Values (byte*) strlen::str#4 (byte*) strlen::str#1
Identical Phi Values (byte) uctoa::radix#1 (byte) uctoa::radix#0
Identical Phi Values (byte) uctoa::value#10 (byte) uctoa::value#1
Identical Phi Values (byte*) uctoa::buffer#10 (byte*) uctoa::buffer#5
Identical Phi Values (byte) uctoa::max_digits#10 (byte) uctoa::max_digits#7
Identical Phi Values (byte*) uctoa::digit_values#10 (byte*) uctoa::digit_values#8
Identical Phi Values (byte) uctoa_append::value#5 (byte) uctoa_append::value#0
Identical Phi Values (byte) uctoa_append::sub#3 (byte) uctoa_append::sub#0
Identical Phi Values (byte*) uctoa_append::buffer#3 (byte*) uctoa_append::buffer#0
Identical Phi Values (byte) uctoa_append::sub#1 (byte) uctoa_append::sub#3
Identical Phi Values (byte*) uctoa_append::buffer#1 (byte*) uctoa_append::buffer#3
Identical Phi Values (byte) utoa::radix#1 (byte) utoa::radix#0
Identical Phi Values (word) utoa::value#10 (word) utoa::value#1
Identical Phi Values (byte*) utoa::buffer#10 (byte*) utoa::buffer#5
Identical Phi Values (byte) utoa::max_digits#10 (byte) utoa::max_digits#7
Identical Phi Values (word*) utoa::digit_values#10 (word*) utoa::digit_values#8
Identical Phi Values (word) utoa_append::value#5 (word) utoa_append::value#0
Identical Phi Values (word) utoa_append::sub#3 (word) utoa_append::sub#0
Identical Phi Values (byte*) utoa_append::buffer#3 (byte*) utoa_append::buffer#0
Identical Phi Values (word) utoa_append::sub#1 (word) utoa_append::sub#3
Identical Phi Values (byte*) utoa_append::buffer#1 (byte*) utoa_append::buffer#3
Identical Phi Values (byte*) clrscr::line_text#2 (byte*) clrscr::line_text#5
Identical Phi Values (byte*) clrscr::line_cols#2 (byte*) clrscr::line_cols#5
Identical Phi Values (byte) clrscr::l#3 (byte) clrscr::l#2
Identical Phi Values (byte) gotoxy::y#2 (byte) gotoxy::y#1
Identical Phi Values (byte) gotoxy::x#2 (byte) gotoxy::x#1
Identical Phi Values (to_nomodify byte*) cputs::s#3 (to_nomodify byte*) cputs::s#1
Identical Phi Values (byte) printf_padding::length#3 (byte) printf_padding::length#4
Identical Phi Values (byte) printf_padding::pad#3 (byte) printf_padding::pad#5
Identical Phi Values (byte) printf_uint::format_sign_always#1 (byte) printf_uint::format_sign_always#0
Identical Phi Values (word) printf_uint::uvalue#1 (word) printf_uint::uvalue#0
Identical Phi Values (byte) printf_uint::format_radix#1 (byte) printf_uint::format_radix#0
Identical Phi Values (byte) printf_uint::format_min_length#1 (byte) printf_uint::format_min_length#0
Identical Phi Values (byte) printf_uint::format_justify_left#1 (byte) printf_uint::format_justify_left#0
Identical Phi Values (byte) printf_uint::format_zero_padding#1 (byte) printf_uint::format_zero_padding#0
Identical Phi Values (byte) printf_uint::format_upper_case#1 (byte) printf_uint::format_upper_case#0
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values (void*) memset::return#0 (void*) memset::str#3
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition (bool~) memcpy::$1 [15] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2
Simple Condition (bool~) memset::$1 [22] if((word) memset::num#2<=(byte) 0) goto memset::@1
Simple Condition (bool~) memset::$3 [29] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@4
Simple Condition (bool~) strupr::$1 [36] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2
Simple Condition (bool~) strlen::$0 [48] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2
Simple Condition (bool~) uctoa::$0 [56] if((byte) uctoa::radix#0==(const byte) DECIMAL) goto uctoa::@1
Simple Condition (bool~) uctoa::$1 [60] if((byte) uctoa::radix#0==(const byte) HEXADECIMAL) goto uctoa::@2
Simple Condition (bool~) uctoa::$2 [64] if((byte) uctoa::radix#0==(const byte) OCTAL) goto uctoa::@3
Simple Condition (bool~) uctoa::$3 [68] if((byte) uctoa::radix#0==(const byte) BINARY) goto uctoa::@4
Simple Condition (bool~) uctoa::$5 [85] if((byte) uctoa::digit#2<(byte~) uctoa::$4) goto uctoa::@11
Simple Condition (bool~) uctoa_append::$0 [108] if((byte) uctoa_append::value#2>=(byte) uctoa_append::sub#0) goto uctoa_append::@2
Simple Condition (bool~) utoa::$0 [117] if((byte) utoa::radix#0==(const byte) DECIMAL) goto utoa::@1
Simple Condition (bool~) utoa::$1 [121] if((byte) utoa::radix#0==(const byte) HEXADECIMAL) goto utoa::@2
Simple Condition (bool~) utoa::$2 [125] if((byte) utoa::radix#0==(const byte) OCTAL) goto utoa::@3
Simple Condition (bool~) utoa::$3 [129] if((byte) utoa::radix#0==(const byte) BINARY) goto utoa::@4
Simple Condition (bool~) utoa::$5 [146] if((byte) utoa::digit#2<(byte~) utoa::$4) goto utoa::@11
Simple Condition (bool~) utoa_append::$0 [171] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2
Simple Condition (bool~) clrscr::$0 [181] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@2
Simple Condition (bool~) clrscr::$1 [189] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@5
Simple Condition (bool~) gotoxy::$1 [199] if((byte) gotoxy::y#1<=(byte) $19) goto gotoxy::@1
Simple Condition (bool~) gotoxy::$3 [202] if((byte) gotoxy::x#1<(byte) $28) goto gotoxy::@2
Simple Condition (bool~) cputc::$0 [217] if((byte) cputc::c#3==(byte) '
') goto cputc::@1
Simple Condition (bool~) cputc::$2 [223] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return
Simple Condition (bool~) cscroll::$1 [233] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return
Simple Condition (bool~) cscroll::$7 [235] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3
Simple Condition (bool~) cputs::$1 [269] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
Simple Condition (bool~) printf_padding::$0 [277] if((byte) printf_padding::i#2<(byte) printf_padding::length#4) goto printf_padding::@2
Simple Condition (bool~) printf_uint::$5 [284] if((byte) 0!=(byte) printf_uint::format_sign_always#0) goto printf_uint::@1
Simple Condition (bool~) printf_schar::$0 [306] if((signed byte) printf_schar::value#3<(signed byte) 0) goto printf_schar::@1
Simple Condition (bool~) printf_schar::$3 [310] if((byte) 0==(byte) printf_schar::format_sign_always#2) goto printf_schar::@2
Simple Condition (bool~) printf_number_buffer::$0 [331] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1
Simple Condition (bool~) printf_number_buffer::$20 [345] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
Simple Condition (bool~) printf_number_buffer::$23 [350] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@1
Simple Condition (bool~) printf_number_buffer::$7 [354] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
Simple Condition (bool~) printf_number_buffer::$12 [364] if((byte) 0==(byte) printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
Successful SSA optimization Pass2ConditionalJumpSimplification
Rewriting && if()-condition to two if()s [3] (bool~) toupper::$2 ← (bool~) toupper::$0 && (bool~) toupper::$1
Rewriting ! if()-condition to reversed if() [89] (bool~) uctoa::$8 ← ! (bool~) uctoa::$7
Rewriting || if()-condition to two if()s [88] (bool~) uctoa::$7 ← (byte) uctoa::started#2 || (bool~) uctoa::$6
Rewriting ! if()-condition to reversed if() [151] (bool~) utoa::$8 ← ! (bool~) utoa::$7
Rewriting || if()-condition to two if()s [150] (bool~) utoa::$7 ← (byte) utoa::started#2 || (bool~) utoa::$6
Rewriting ! if()-condition to reversed if() [337] (bool~) printf_number_buffer::$5 ← ! (bool~) printf_number_buffer::$4
Rewriting && if()-condition to two if()s [336] (bool~) printf_number_buffer::$4 ← (bool~) printf_number_buffer::$3 && (signed byte) printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [335] (bool~) printf_number_buffer::$3 ← (bool~) printf_number_buffer::$1 && (bool~) printf_number_buffer::$2
Rewriting ! if()-condition to reversed if() [359] (bool~) printf_number_buffer::$10 ← ! (bool~) printf_number_buffer::$9
Rewriting && if()-condition to two if()s [358] (bool~) printf_number_buffer::$9 ← (byte) printf_number_buffer::format_zero_padding#10 && (signed byte) printf_number_buffer::padding#10
Rewriting ! if()-condition to reversed if() [373] (bool~) printf_number_buffer::$17 ← ! (bool~) printf_number_buffer::$16
Rewriting && if()-condition to two if()s [372] (bool~) printf_number_buffer::$16 ← (bool~) printf_number_buffer::$15 && (signed byte) printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [371] (bool~) printf_number_buffer::$15 ← (byte) printf_number_buffer::format_justify_left#10 && (bool~) printf_number_buffer::$14
Successful SSA optimization Pass2ConditionalAndOrRewriting
Warning! Adding boolean cast to non-boolean condition (byte) uctoa::started#2
Warning! Adding boolean cast to non-boolean condition (byte) utoa::started#2
Warning! Adding boolean cast to non-boolean condition (byte) printf_number_buffer::format_zero_padding#10
Warning! Adding boolean cast to non-boolean condition (byte) printf_number_buffer::format_justify_left#10
Warning! Adding boolean cast to non-boolean condition (signed byte) printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition (signed byte) printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition (signed byte) printf_number_buffer::padding#10
Constant right-side identified [238] (word) memcpy::num#0 ← (unumber)(number) $19*(number) $28-(number) $28
Constant right-side identified [243] (word) memcpy::num#1 ← (unumber)(number) $19*(number) $28-(number) $28
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const word) strlen::len#0 = 0
Constant (const byte) uctoa::max_digits#0 = 0
Constant (const byte*) uctoa::digit_values#0 = (byte*) 0
Constant (const byte) uctoa::max_digits#1 = 3
Constant (const byte*) uctoa::digit_values#1 = RADIX_DECIMAL_VALUES_CHAR
Constant (const byte) uctoa::max_digits#2 = 2
Constant (const byte*) uctoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES_CHAR
Constant (const byte) uctoa::max_digits#3 = 3
Constant (const byte*) uctoa::digit_values#3 = RADIX_OCTAL_VALUES_CHAR
Constant (const byte) uctoa::max_digits#4 = 8
Constant (const byte*) uctoa::digit_values#4 = RADIX_BINARY_VALUES_CHAR
Constant (const byte) uctoa::started#0 = 0
Constant (const byte) uctoa::digit#0 = 0
Constant (const byte) uctoa::started#1 = 1
Constant (const byte) uctoa_append::digit#0 = 0
Constant (const byte) utoa::max_digits#0 = 0
Constant (const word*) utoa::digit_values#0 = (word*) 0
Constant (const byte) utoa::max_digits#1 = 5
Constant (const word*) utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant (const byte) utoa::max_digits#2 = 4
Constant (const word*) utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant (const byte) utoa::max_digits#3 = 6
Constant (const word*) utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant (const byte) utoa::max_digits#4 = $10
Constant (const word*) utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant (const byte) utoa::started#0 = 0
Constant (const byte) utoa::digit#0 = 0
Constant (const byte) utoa::started#1 = 1
Constant (const byte) utoa_append::digit#0 = 0
Constant (const byte*) clrscr::line_text#0 = CONIO_SCREEN_TEXT
Constant (const byte*) clrscr::line_cols#0 = CONIO_SCREEN_COLORS
Constant (const byte) clrscr::l#0 = 0
Constant (const byte) clrscr::c#0 = 0
Constant (const byte) gotoxy::y#0 = 0
Constant (const byte) gotoxy::x#0 = 0
Constant (const void*) memcpy::destination#0 = (void*)CONIO_SCREEN_TEXT
Constant (const void*) memcpy::source#0 = (void*)CONIO_SCREEN_TEXT+$28
Constant (const word) memcpy::num#0 = (unumber)$19*$28-$28
Constant (const void*) memcpy::destination#1 = (void*)CONIO_SCREEN_COLORS
Constant (const void*) memcpy::source#1 = (void*)CONIO_SCREEN_COLORS+$28
Constant (const word) memcpy::num#1 = (unumber)$19*$28-$28
Constant (const void*) memset::str#0 = (void*)CONIO_SCREEN_TEXT+(word)$19*$28-$28
Constant (const byte) memset::c#0 = ' '
Constant (const word) memset::num#0 = $28
Constant (const void*) memset::str#1 = (void*)CONIO_SCREEN_COLORS+(word)$19*$28-$28
Constant (const word) memset::num#1 = $28
Constant (const byte) gotoxy::x#1 = 0
Constant (const byte) gotoxy::y#1 = 0
Constant (const byte) cputs::c#0 = 0
Constant (const byte) printf_padding::i#0 = 0
Constant (const byte) printf_uint::$1 = '+'
Constant (const byte) printf_uint::$0 = 0
Constant (const byte*) utoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant (const byte*) printf_number_buffer::buffer_digits#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant (const byte*) uctoa::buffer#5 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant (const byte*) printf_number_buffer::buffer_digits#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant (const signed byte) printf_number_buffer::padding#0 = 0
Constant (const signed byte) printf_number_buffer::padding#2 = 0
Constant (const byte) printf_padding::pad#0 = ' '
Constant (const byte) printf_padding::pad#1 = '0'
Constant (const byte) printf_padding::pad#2 = ' '
Constant (const signed byte) printf_schar::value#1 = -$4d
Constant (const byte) printf_schar::format_min_length#0 = 6
Constant (const byte) printf_schar::format_justify_left#0 = 0
Constant (const byte) printf_schar::format_sign_always#0 = 0
Constant (const byte) printf_schar::format_zero_padding#0 = 0
Constant (const byte) printf_schar::format_upper_case#0 = 0
Constant (const byte) printf_schar::format_radix#0 = DECIMAL
Constant (const signed byte) printf_schar::value#2 = $63
Constant (const byte) printf_schar::format_min_length#1 = 6
Constant (const byte) printf_schar::format_justify_left#1 = 0
Constant (const byte) printf_schar::format_sign_always#1 = 1
Constant (const byte) printf_schar::format_zero_padding#1 = 1
Constant (const byte) printf_schar::format_upper_case#1 = 0
Constant (const byte) printf_schar::format_radix#1 = OCTAL
Constant (const word) printf_uint::uvalue#0 = $d80
Constant (const byte) printf_uint::format_min_length#0 = $a
Constant (const byte) printf_uint::format_justify_left#0 = 1
Constant (const byte) printf_uint::format_sign_always#0 = 0
Constant (const byte) printf_uint::format_zero_padding#0 = 0
Constant (const byte) printf_uint::format_upper_case#0 = 1
Constant (const byte) printf_uint::format_radix#0 = HEXADECIMAL
Constant (const byte) conio_textcolor = CONIO_TEXTCOLOR_DEFAULT
Constant (const byte) conio_scroll_enable = 1
Successful SSA optimization Pass2ConstantIdentification
Constant (const byte) memset::c#1 = conio_textcolor
Constant (const word) utoa::value#1 = printf_uint::uvalue#0
Constant (const byte) utoa::radix#0 = printf_uint::format_radix#0
Constant (const byte) printf_number_buffer::format_min_length#0 = printf_uint::format_min_length#0
Constant (const byte) printf_number_buffer::format_justify_left#0 = printf_uint::format_justify_left#0
Constant (const byte) printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#0
Constant (const byte) printf_number_buffer::format_zero_padding#0 = printf_uint::format_zero_padding#0
Constant (const byte) printf_number_buffer::format_upper_case#0 = printf_uint::format_upper_case#0
Constant (const byte) printf_number_buffer::format_radix#0 = printf_uint::format_radix#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [117] if((const byte) utoa::radix#0==(const byte) DECIMAL) goto utoa::@1
if() condition always true - replacing block destination [121] if((const byte) utoa::radix#0==(const byte) HEXADECIMAL) goto utoa::@2
if() condition always false - eliminating [125] if((const byte) utoa::radix#0==(const byte) OCTAL) goto utoa::@3
if() condition always false - eliminating [129] if((const byte) utoa::radix#0==(const byte) BINARY) goto utoa::@4
if() condition always true - replacing block destination [199] if((const byte) gotoxy::y#1<=(byte) $19) goto gotoxy::@1
if() condition always true - replacing block destination [202] if((const byte) gotoxy::x#1<(byte) $28) goto gotoxy::@2
if() condition always true - replacing block destination [235] if((byte) 0!=(const byte) conio_scroll_enable) goto cscroll::@3
if() condition always false - eliminating [284] if((byte) 0!=(const byte) printf_uint::format_sign_always#0) goto printf_uint::@1
Successful SSA optimization Pass2ConstantIfs
Simplifying expression containing zero (byte*)&printf_buffer in [288] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (byte~) printf_uint::$2
Simplifying expression containing zero (byte*)&printf_buffer in [293] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Simplifying expression containing zero (byte*)&printf_buffer in [304] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (byte) 0
Simplifying expression containing zero (byte*)&printf_buffer in [308] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (byte) '-'
Simplifying expression containing zero (byte*)&printf_buffer in [311] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) ← (byte) '+'
Simplifying expression containing zero (byte*)&printf_buffer in [318] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused variable (void*) memcpy::return#2 and assignment [158] (void*) memcpy::return#2 ← (void*) memcpy::destination#2
Eliminating unused variable (void*) memcpy::return#3 and assignment [160] (void*) memcpy::return#3 ← (void*) memcpy::destination#2
Eliminating unused variable (void*) memset::return#2 and assignment [162] (void*) memset::return#2 ← (void*) memset::str#3
Eliminating unused variable (void*) memset::return#3 and assignment [164] (void*) memset::return#3 ← (void*) memset::str#3
Eliminating unused variable (byte) printf_number_buffer::format_sign_always#1 and assignment [205] (byte) printf_number_buffer::format_sign_always#1 ← (byte) printf_schar::format_sign_always#2
Eliminating unused variable (byte) printf_number_buffer::format_radix#1 and assignment [208] (byte) printf_number_buffer::format_radix#1 ← (byte) printf_schar::format_radix#2
Eliminating unused variable (byte*) strupr::return#2 and assignment [245] (byte*) strupr::return#2 ← (byte*) strupr::str#0
Eliminating unused constant (const byte) uctoa::max_digits#0
Eliminating unused constant (const byte*) uctoa::digit_values#0
Eliminating unused constant (const byte) utoa::max_digits#0
Eliminating unused constant (const word*) utoa::digit_values#0
Eliminating unused constant (const byte) utoa::radix#0
Eliminating unused constant (const byte) cputs::c#0
Eliminating unused constant (const byte) printf_number_buffer::format_sign_always#0
Eliminating unused constant (const byte) printf_number_buffer::format_radix#0
Eliminating unused constant (const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN
Eliminating unused constant (const byte) conio_scroll_enable
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant (const byte) printf_uint::format_sign_always#0
Eliminating unused constant (const byte) printf_uint::format_radix#0
Successful SSA optimization PassNEliminateUnusedVars
Eliminating variable (byte*) utoa::buffer#0 from unused block utoa::@9
Eliminating variable (byte*) utoa::buffer#1 from unused block utoa::@9
Eliminating variable (byte*) utoa::buffer#2 from unused block utoa::@9
Eliminating variable (byte) gotoxy::y#3 from unused block gotoxy::@1
Eliminating variable (byte) gotoxy::x#3 from unused block gotoxy::@2
Eliminating variable (word~) gotoxy::$7 from unused block gotoxy::@2
Eliminating variable (word) gotoxy::line_offset#0 from unused block gotoxy::@2
Eliminating variable (byte*~) gotoxy::$5 from unused block gotoxy::@2
Eliminating variable (byte*~) gotoxy::$6 from unused block gotoxy::@2
Removing PHI-reference to removed block (utoa::@1) in block utoa::@5
Removing PHI-reference to removed block (utoa::@1) in block utoa::@5
Removing unused block utoa::@1
Removing unused block utoa::@7
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing unused block utoa::@3
Removing unused block utoa::@8
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing unused block utoa::@4
Removing unused block utoa::@9
Removing unused procedure gotoxy
Removing unused procedure block gotoxy
Removing PHI-reference to removed block (gotoxy) in block gotoxy::@1
Removing unused procedure block gotoxy::@1
Removing PHI-reference to removed block (gotoxy::@1) in block gotoxy::@2
Removing unused procedure block gotoxy::@3
Removing unused procedure block gotoxy::@2
Removing unused procedure block gotoxy::@4
Removing unused procedure block gotoxy::@return
Removing unused block cscroll::@2
Removing unused block cscroll::@8
Removing PHI-reference to removed block (printf_uint::@1) in block printf_uint::@3
Removing unused block printf_uint::@1
Successful SSA optimization Pass2EliminateUnusedBlocks
Adding number conversion cast (unumber) 0 in (bool~) uctoa::$11 ← (number) 0 != (byte) uctoa::started#2
Adding number conversion cast (unumber) 0 in (bool~) utoa::$12 ← (number) 0 != (byte) utoa::started#2
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$33 ← (number) 0 != (byte) printf_number_buffer::format_zero_padding#10
Adding number conversion cast (unumber) 0 in (bool~) printf_number_buffer::$34 ← (number) 0 != (byte) printf_number_buffer::format_justify_left#10
Adding number conversion cast (snumber) 0 in (bool~) printf_number_buffer::$35 ← (number) 0 != (signed byte) printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in (bool~) printf_number_buffer::$36 ← (number) 0 != (signed byte) printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in (bool~) printf_number_buffer::$37 ← (number) 0 != (signed byte) printf_number_buffer::padding#10
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Identical Phi Values (byte) utoa::max_digits#7 (const byte) utoa::max_digits#2
Identical Phi Values (word*) utoa::digit_values#8 (const word*) utoa::digit_values#2
Identical Phi Values (byte~) printf_uint::$2 (const byte) printf_uint::$0
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition (bool~) toupper::$0 [2] if((byte) toupper::ch#0>=(byte) 'a') goto toupper::@3
Simple Condition (bool~) uctoa::$11 [60] if((byte) 0!=(byte) uctoa::started#2) goto uctoa::@14
Simple Condition (bool~) utoa::$12 [88] if((byte) 0!=(byte) utoa::started#2) goto utoa::@14
Simple Condition (bool~) printf_number_buffer::$1 [191] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@23
Simple Condition (bool~) printf_number_buffer::$33 [207] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@24
Simple Condition (bool~) printf_number_buffer::$34 [217] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@26
Simple Condition (bool~) toupper::$1 [237] if((byte) toupper::ch#0<=(byte) 'z') goto toupper::@1
Simple Condition (bool~) uctoa::$6 [238] if((byte) uctoa::value#2>=(byte) uctoa::digit_value#0) goto uctoa::@14
Simple Condition (bool~) utoa::$6 [239] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@14
Simple Condition (bool~) printf_number_buffer::$35 [241] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@8
Simple Condition (bool~) printf_number_buffer::$2 [242] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@22
Simple Condition (bool~) printf_number_buffer::$36 [244] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10
Simple Condition (bool~) printf_number_buffer::$37 [246] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@12
Simple Condition (bool~) printf_number_buffer::$14 [247] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@25
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [2] if((byte) toupper::ch#0<(byte) 'a') goto toupper::@2
Negating conditional jump and destination [191] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
Negating conditional jump and destination [207] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
Negating conditional jump and destination [217] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
Negating conditional jump and destination [242] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
Negating conditional jump and destination [247] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [46] (byte*) uctoa::buffer#0 ← ++ (const byte*) uctoa::buffer#5
Constant right-side identified [82] (byte~) utoa::$4 ← (const byte) utoa::max_digits#2 - (byte) 1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte*) uctoa::buffer#0 = ++uctoa::buffer#5
Constant (const byte) utoa::$4 = utoa::max_digits#2-1
Successful SSA optimization Pass2ConstantIdentification
Eliminating unused constant (const byte) utoa::max_digits#1
Eliminating unused constant (const word*) utoa::digit_values#1
Eliminating unused constant (const byte) utoa::max_digits#3
Eliminating unused constant (const word*) utoa::digit_values#3
Eliminating unused constant (const byte) utoa::max_digits#4
Eliminating unused constant (const word*) utoa::digit_values#4
Eliminating unused constant (const byte) printf_uint::$1
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant (const word*) RADIX_BINARY_VALUES
Eliminating unused constant (const word*) RADIX_OCTAL_VALUES
Eliminating unused constant (const word*) RADIX_DECIMAL_VALUES
Successful SSA optimization PassNEliminateUnusedVars
Constant right-side identified [45] (byte*) uctoa::buffer#1 ← ++ (const byte*) uctoa::buffer#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte*) uctoa::buffer#1 = ++uctoa::buffer#0
Successful SSA optimization Pass2ConstantIdentification
Constant right-side identified [46] (byte*) uctoa::buffer#2 ← ++ (const byte*) uctoa::buffer#1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte*) uctoa::buffer#2 = ++uctoa::buffer#1
Successful SSA optimization Pass2ConstantIdentification
Inlining Noop Cast [5] (byte*) memcpy::src#0 ← (byte*)(void*) memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [6] (byte*) memcpy::dst#0 ← (byte*)(void*) memcpy::destination#2 keeping memcpy::destination#2
Inlining Noop Cast [7] (byte*~) memcpy::$2 ← (byte*)(void*) memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [17] (byte*~) memset::$4 ← (byte*)(void*) memset::str#3 keeping memset::str#3
Inlining Noop Cast [19] (byte*) memset::dst#0 ← (byte*)(void*) memset::str#3 keeping memset::str#3
Inlining Noop Cast [163] (byte) printf_schar::uvalue#0 ← (byte)(signed byte) printf_schar::value#5 keeping printf_schar::value#5
Inlining Noop Cast [185] (signed byte~) printf_number_buffer::$25 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 keeping printf_number_buffer::format_min_length#2
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [75] (byte~) utoa::$10 ← (byte) utoa::digit#2 * (const byte) SIZEOF_WORD
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings (const void*) memcpy::destination#0
Inlining constant with var siblings (const void*) memcpy::source#0
Inlining constant with var siblings (const word) memcpy::num#0
Inlining constant with var siblings (const void*) memcpy::destination#1
Inlining constant with var siblings (const void*) memcpy::source#1
Inlining constant with var siblings (const word) memcpy::num#1
Inlining constant with var siblings (const void*) memset::str#0
Inlining constant with var siblings (const byte) memset::c#0
Inlining constant with var siblings (const word) memset::num#0
Inlining constant with var siblings (const void*) memset::str#1
Inlining constant with var siblings (const word) memset::num#1
Inlining constant with var siblings (const byte) memset::c#1
Inlining constant with var siblings (const word) strlen::len#0
Inlining constant with var siblings (const byte) uctoa::max_digits#1
Inlining constant with var siblings (const byte*) uctoa::digit_values#1
Inlining constant with var siblings (const byte) uctoa::max_digits#2
Inlining constant with var siblings (const byte*) uctoa::digit_values#2
Inlining constant with var siblings (const byte) uctoa::max_digits#3
Inlining constant with var siblings (const byte*) uctoa::digit_values#3
Inlining constant with var siblings (const byte) uctoa::max_digits#4
Inlining constant with var siblings (const byte*) uctoa::digit_values#4
Inlining constant with var siblings (const byte) uctoa::started#0
Inlining constant with var siblings (const byte) uctoa::digit#0
Inlining constant with var siblings (const byte) uctoa::started#1
Inlining constant with var siblings (const byte*) uctoa::buffer#5
Inlining constant with var siblings (const byte*) uctoa::buffer#0
Inlining constant with var siblings (const byte*) uctoa::buffer#1
Inlining constant with var siblings (const byte*) uctoa::buffer#2
Inlining constant with var siblings (const byte) uctoa_append::digit#0
Inlining constant with var siblings (const byte) utoa::started#0
Inlining constant with var siblings (const byte) utoa::digit#0
Inlining constant with var siblings (const byte) utoa::started#1
Inlining constant with var siblings (const byte*) utoa::buffer#5
Inlining constant with var siblings (const word) utoa::value#1
Inlining constant with var siblings (const byte) utoa_append::digit#0
Inlining constant with var siblings (const byte*) clrscr::line_text#0
Inlining constant with var siblings (const byte*) clrscr::line_cols#0
Inlining constant with var siblings (const byte) clrscr::l#0
Inlining constant with var siblings (const byte) clrscr::c#0
Inlining constant with var siblings (const byte) printf_padding::i#0
Inlining constant with var siblings (const byte) printf_padding::pad#0
Inlining constant with var siblings (const byte) printf_padding::pad#1
Inlining constant with var siblings (const byte) printf_padding::pad#2
Inlining constant with var siblings (const signed byte) printf_schar::value#1
Inlining constant with var siblings (const byte) printf_schar::format_min_length#0
Inlining constant with var siblings (const byte) printf_schar::format_justify_left#0
Inlining constant with var siblings (const byte) printf_schar::format_sign_always#0
Inlining constant with var siblings (const byte) printf_schar::format_zero_padding#0
Inlining constant with var siblings (const byte) printf_schar::format_upper_case#0
Inlining constant with var siblings (const byte) printf_schar::format_radix#0
Inlining constant with var siblings (const signed byte) printf_schar::value#2
Inlining constant with var siblings (const byte) printf_schar::format_min_length#1
Inlining constant with var siblings (const byte) printf_schar::format_justify_left#1
Inlining constant with var siblings (const byte) printf_schar::format_sign_always#1
Inlining constant with var siblings (const byte) printf_schar::format_zero_padding#1
Inlining constant with var siblings (const byte) printf_schar::format_upper_case#1
Inlining constant with var siblings (const byte) printf_schar::format_radix#1
Inlining constant with var siblings (const byte*) printf_number_buffer::buffer_digits#0
Inlining constant with var siblings (const byte*) printf_number_buffer::buffer_digits#1
Inlining constant with var siblings (const signed byte) printf_number_buffer::padding#0
Inlining constant with var siblings (const signed byte) printf_number_buffer::padding#2
Inlining constant with var siblings (const byte) printf_number_buffer::format_min_length#0
Inlining constant with var siblings (const byte) printf_number_buffer::format_justify_left#0
Inlining constant with var siblings (const byte) printf_number_buffer::format_zero_padding#0
Inlining constant with var siblings (const byte) printf_number_buffer::format_upper_case#0
Constant inlined uctoa_append::digit#0 = (byte) 0
Constant inlined printf_number_buffer::format_justify_left#0 = (const byte) printf_uint::format_justify_left#0
Constant inlined printf_number_buffer::buffer_digits#0 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_number_buffer::buffer_digits#1 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined utoa::digit_values#2 = (const word*) RADIX_HEXADECIMAL_VALUES
Constant inlined conio_textcolor = (const nomodify byte) LIGHT_BLUE
Constant inlined printf_schar::format_min_length#0 = (byte) 6
Constant inlined memset::num#1 = (byte) $28
Constant inlined printf_schar::format_min_length#1 = (byte) 6
Constant inlined memset::num#0 = (byte) $28
Constant inlined clrscr::l#0 = (byte) 0
Constant inlined strlen::len#0 = (word) 0
Constant inlined printf_schar::format_upper_case#1 = (byte) 0
Constant inlined printf_schar::format_sign_always#1 = (byte) 1
Constant inlined printf_schar::format_sign_always#0 = (byte) 0
Constant inlined printf_schar::format_justify_left#0 = (byte) 0
Constant inlined printf_schar::format_justify_left#1 = (byte) 0
Constant inlined CONIO_SCREEN_TEXT = (const nomodify byte*) DEFAULT_SCREEN
Constant inlined utoa::$4 = (const byte) utoa::max_digits#2-(byte) 1
Constant inlined printf_number_buffer::padding#2 = (signed byte) 0
Constant inlined uctoa::digit#0 = (byte) 0
Constant inlined clrscr::line_text#0 = (const nomodify byte*) DEFAULT_SCREEN
Constant inlined memcpy::source#0 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28
Constant inlined printf_schar::format_upper_case#0 = (byte) 0
Constant inlined utoa::buffer#5 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined memset::c#0 = (byte) ' '
Constant inlined memset::c#1 = (const nomodify byte) LIGHT_BLUE
Constant inlined printf_number_buffer::padding#0 = (signed byte) 0
Constant inlined utoa_append::digit#0 = (byte) 0
Constant inlined uctoa::digit_values#2 = (const byte*) RADIX_HEXADECIMAL_VALUES_CHAR
Constant inlined uctoa::started#0 = (byte) 0
Constant inlined uctoa::digit_values#1 = (const byte*) RADIX_DECIMAL_VALUES_CHAR
Constant inlined uctoa::started#1 = (byte) 1
Constant inlined uctoa::digit_values#4 = (const byte*) RADIX_BINARY_VALUES_CHAR
Constant inlined printf_schar::format_radix#1 = (const byte) OCTAL
Constant inlined uctoa::digit_values#3 = (const byte*) RADIX_OCTAL_VALUES_CHAR
Constant inlined printf_schar::format_radix#0 = (const byte) DECIMAL
Constant inlined memcpy::destination#0 = (void*)(const nomodify byte*) DEFAULT_SCREEN
Constant inlined printf_schar::format_zero_padding#1 = (byte) 1
Constant inlined memcpy::destination#1 = (void*)(const nomodify byte*) COLORRAM
Constant inlined printf_schar::format_zero_padding#0 = (byte) 0
Constant inlined uctoa::max_digits#1 = (byte) 3
Constant inlined memcpy::source#1 = (void*)(const nomodify byte*) COLORRAM+(byte) $28
Constant inlined printf_number_buffer::format_upper_case#0 = (const byte) printf_uint::format_upper_case#0
Constant inlined utoa::digit#0 = (byte) 0
Constant inlined printf_number_buffer::format_min_length#0 = (const byte) printf_uint::format_min_length#0
Constant inlined uctoa::max_digits#3 = (byte) 3
Constant inlined printf_number_buffer::format_zero_padding#0 = (const byte) printf_uint::format_zero_padding#0
Constant inlined uctoa::max_digits#2 = (byte) 2
Constant inlined CONIO_TEXTCOLOR_DEFAULT = (const nomodify byte) LIGHT_BLUE
Constant inlined uctoa::max_digits#4 = (byte) 8
Constant inlined uctoa::buffer#1 = ++++(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined memset::str#1 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28
Constant inlined uctoa::buffer#2 = ++++++(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_padding::pad#0 = (byte) ' '
Constant inlined memset::str#0 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28
Constant inlined printf_padding::i#0 = (byte) 0
Constant inlined printf_padding::pad#1 = (byte) '0'
Constant inlined CONIO_SCREEN_COLORS = (const nomodify byte*) COLORRAM
Constant inlined uctoa::buffer#0 = ++(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_padding::pad#2 = (byte) ' '
Constant inlined printf_schar::value#2 = (signed byte) $63
Constant inlined printf_uint::$0 = (byte) 0
Constant inlined printf_schar::value#1 = (signed byte) -$4d
Constant inlined utoa::started#1 = (byte) 1
Constant inlined utoa::started#0 = (byte) 0
Constant inlined uctoa::buffer#5 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined memcpy::num#1 = (word)(number) $19*(number) $28-(number) $28
Constant inlined memcpy::num#0 = (word)(number) $19*(number) $28-(number) $28
Constant inlined clrscr::c#0 = (byte) 0
Constant inlined clrscr::line_cols#0 = (const nomodify byte*) COLORRAM
Constant inlined utoa::value#1 = (const word) printf_uint::uvalue#0
Successful SSA optimization Pass2ConstantInlining
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Successful SSA optimization Pass2ConstantSimplification
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
Successful SSA optimization Pass2ConstantSimplification
Adding number conversion cast (unumber) 1 in [44] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(number) 1) ← (byte) 'r'
Adding number conversion cast (unumber) 2 in [45] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(number) 2) ← (byte) 'r'
Adding number conversion cast (unumber) 3 in [46] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(number) 3) ← (byte) 0
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 3
Successful SSA optimization PassNFinalizeNumberTypeConversions
Identical Phi Values (word) memcpy::num#2 (word)(number) $19*(number) $28-(number) $28
Identical Phi Values (word) memset::num#2 (byte) $28
Identical Phi Values (byte) printf_schar::format_min_length#2 (byte) 6
Identical Phi Values (byte) printf_schar::format_justify_left#2 (byte) 0
Identical Phi Values (byte) printf_schar::format_upper_case#2 (byte) 0
Identical Phi Values (byte*) printf_number_buffer::buffer_digits#10 (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Successful SSA optimization Pass2IdenticalPhiElimination
Constant (const byte) printf_number_buffer::format_min_length#1 = 6
Constant (const byte) printf_number_buffer::format_justify_left#1 = 0
Constant (const byte) printf_number_buffer::format_upper_case#1 = 0
Constant (const byte*) strlen::str#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant (const to_nomodify byte*) cputs::s#1 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant (const byte*) strupr::str#0 = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [13] if((byte) $28<=(byte) 0) goto memset::@1
Successful SSA optimization Pass2ConstantIfs
Eliminating unused constant (const byte) SIZEOF_WORD
Successful SSA optimization PassNEliminateUnusedVars
Inlining constant with var siblings (const byte*) strlen::str#1
Inlining constant with var siblings (const to_nomodify byte*) cputs::s#1
Inlining constant with var siblings (const byte) printf_number_buffer::format_min_length#1
Inlining constant with var siblings (const byte) printf_number_buffer::format_justify_left#1
Inlining constant with var siblings (const byte) printf_number_buffer::format_upper_case#1
Constant inlined cputs::s#1 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_number_buffer::format_upper_case#1 = (byte) 0
Constant inlined printf_number_buffer::format_justify_left#1 = (byte) 0
Constant inlined printf_number_buffer::format_min_length#1 = (byte) 6
Constant inlined strlen::str#1 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Successful SSA optimization Pass2ConstantInlining
Added new block during phi lifting uctoa::@17(between uctoa::@16 and uctoa::@13)
Added new block during phi lifting utoa::@17(between utoa::@16 and utoa::@13)
Added new block during phi lifting printf_schar::@7(between printf_schar::@3 and printf_schar::@2)
Added new block during phi lifting printf_number_buffer::@27(between printf_number_buffer::@13 and printf_number_buffer::@1)
Added new block during phi lifting printf_number_buffer::@28(between printf_number_buffer::@15 and printf_number_buffer::@13)
Adding NOP phi() at start of _start
Adding NOP phi() at start of _start::@1
Adding NOP phi() at start of _start::@2
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@5
Adding NOP phi() at start of cscroll::@6
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of memcpy::@3
Adding NOP phi() at start of printf_uint
Adding NOP phi() at start of printf_uint::@2
Adding NOP phi() at start of printf_uint::@5
Adding NOP phi() at start of printf_number_buffer::@6
Adding NOP phi() at start of printf_number_buffer::@14
Adding NOP phi() at start of printf_number_buffer::@17
Adding NOP phi() at start of printf_number_buffer::@11
Adding NOP phi() at start of printf_number_buffer::@20
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of printf_number_buffer::@21
Adding NOP phi() at start of printf_number_buffer::@18
Adding NOP phi() at start of printf_number_buffer::@16
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@5
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cputs
Adding NOP phi() at start of strupr
Adding NOP phi() at start of strupr::@3
Adding NOP phi() at start of strlen
Adding NOP phi() at start of strlen::@3
Adding NOP phi() at start of utoa
Adding NOP phi() at start of utoa::@6
Adding NOP phi() at start of utoa::@2
Adding NOP phi() at start of utoa::@5
Adding NOP phi() at start of printf_schar::@6
Adding NOP phi() at start of uctoa::@4
Adding NOP phi() at start of uctoa::@3
Adding NOP phi() at start of uctoa::@2
Adding NOP phi() at start of uctoa::@1
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of clrscr::@2
CALL GRAPH
Calls in [_start] to main:6 
Calls in [main] to clrscr:10 printf_schar:12 cputln:14 printf_schar:16 cputln:18 printf_uint:20 cputln:22 
Calls in [cputln] to cscroll:29 
Calls in [cscroll] to memcpy:35 memcpy:37 memset:39 memset:41 
Calls in [printf_uint] to utoa:72 printf_number_buffer:75 
Calls in [printf_number_buffer] to strlen:81 cputc:99 strupr:105 cputs:108 printf_padding:115 printf_padding:119 printf_padding:123 
Calls in [printf_padding] to cputc:133 
Calls in [cputc] to cputln:143 cputln:147 
Calls in [cputs] to cputc:157 
Calls in [strupr] to toupper:165 
Calls in [utoa] to utoa_append:214 
Calls in [printf_schar] to uctoa:238 printf_number_buffer:243 
Calls in [uctoa] to uctoa_append:283 

Created 52 initial phi equivalence classes
Coalesced [55] memset::dst#5 ← memset::dst#1
Coalesced [67] memcpy::src#5 ← memcpy::src#1
Coalesced [68] memcpy::dst#5 ← memcpy::dst#1
Coalesced [74] printf_number_buffer::buffer_sign#14 ← printf_number_buffer::buffer_sign#0
Coalesced [87] printf_number_buffer::len#5 ← printf_number_buffer::len#1
Coalesced [98] cputc::c#6 ← cputc::c#2
Coalesced [114] printf_padding::length#8 ← printf_padding::length#2
Coalesced [118] printf_padding::length#7 ← printf_padding::length#1
Coalesced [122] printf_padding::length#9 ← printf_padding::length#0
Coalesced [125] printf_number_buffer::padding#18 ← printf_number_buffer::padding#1
Coalesced [126] printf_number_buffer::len#4 ← printf_number_buffer::len#0
Coalesced [132] cputc::c#7 ← cputc::c#1
Coalesced [135] printf_padding::i#5 ← printf_padding::i#1
Coalesced [156] cputc::c#5 ← cputc::c#0
Coalesced [158] cputs::s#6 ← cputs::s#0
Coalesced [170] strupr::src#5 ← strupr::src#1
Coalesced [173] toupper::return#7 ← toupper::ch#0
Coalesced [177] toupper::return#6 ← toupper::return#0
Coalesced [185] strlen::str#5 ← strlen::str#0
Coalesced [186] strlen::len#5 ← strlen::len#1
Coalesced [202] utoa::value#17 ← utoa::value#2
Coalesced [203] utoa::started#6 ← utoa::started#2
Coalesced [204] utoa::buffer#23 ← utoa::buffer#11
Coalesced [207] utoa::digit#7 ← utoa::digit#1
Coalesced (already) [208] utoa::value#16 ← utoa::value#6
Coalesced (already) [209] utoa::started#5 ← utoa::started#4
Coalesced (already) [210] utoa::buffer#22 ← utoa::buffer#14
Coalesced [218] utoa::value#18 ← utoa::value#0
Coalesced [219] utoa::buffer#24 ← utoa::buffer#4
Coalesced [220] utoa_append::value#6 ← utoa_append::value#0
Coalesced [227] utoa_append::value#7 ← utoa_append::value#1
Coalesced [228] utoa_append::digit#5 ← utoa_append::digit#1
Coalesced [234] printf_schar::value#10 ← printf_schar::value#3
Coalesced [241] printf_number_buffer::format_zero_padding#22 ← printf_number_buffer::format_zero_padding#1
Coalesced [242] printf_number_buffer::buffer_sign#13 ← printf_number_buffer::buffer_sign#1
Coalesced (already) [246] printf_schar::value#9 ← printf_schar::value#3
Coalesced [249] printf_schar::value#8 ← printf_schar::value#0
Coalesced [261] uctoa::value#17 ← uctoa::value#1
Coalesced [271] uctoa::value#18 ← uctoa::value#2
Coalesced [272] uctoa::started#6 ← uctoa::started#2
Coalesced [273] uctoa::buffer#23 ← uctoa::buffer#11
Coalesced [276] uctoa::digit#7 ← uctoa::digit#1
Coalesced (already) [277] uctoa::value#16 ← uctoa::value#6
Coalesced (already) [278] uctoa::started#5 ← uctoa::started#4
Coalesced (already) [279] uctoa::buffer#22 ← uctoa::buffer#14
Coalesced [287] uctoa::value#19 ← uctoa::value#0
Coalesced [288] uctoa::buffer#24 ← uctoa::buffer#4
Coalesced [292] uctoa_append::value#6 ← uctoa_append::value#0
Coalesced [299] uctoa_append::value#7 ← uctoa_append::value#1
Coalesced [300] uctoa_append::digit#5 ← uctoa_append::digit#1
Coalesced [315] clrscr::l#7 ← clrscr::l#1
Coalesced [316] clrscr::line_text#7 ← clrscr::line_text#1
Coalesced [317] clrscr::line_cols#7 ← clrscr::line_cols#1
Coalesced [321] clrscr::c#4 ← clrscr::c#1
Coalesced down to 45 phi equivalence classes
Culled Empty Block (label) _start::@2
Culled Empty Block (label) main::@7
Culled Empty Block (label) cputln::@1
Culled Empty Block (label) cscroll::@1
Culled Empty Block (label) memset::@1
Culled Empty Block (label) memcpy::@3
Culled Empty Block (label) printf_uint::@2
Culled Empty Block (label) printf_uint::@5
Culled Empty Block (label) printf_number_buffer::@14
Culled Empty Block (label) printf_number_buffer::@17
Culled Empty Block (label) printf_number_buffer::@20
Culled Empty Block (label) printf_number_buffer::@21
Culled Empty Block (label) printf_number_buffer::@18
Culled Empty Block (label) printf_number_buffer::@16
Culled Empty Block (label) printf_number_buffer::@28
Culled Empty Block (label) cputc::@5
Culled Empty Block (label) cputc::@4
Culled Empty Block (label) cputs::@3
Culled Empty Block (label) strupr::@3
Culled Empty Block (label) toupper::@2
Culled Empty Block (label) strlen::@3
Culled Empty Block (label) utoa::@6
Culled Empty Block (label) utoa::@2
Culled Empty Block (label) utoa::@5
Culled Empty Block (label) utoa::@17
Culled Empty Block (label) printf_schar::@6
Culled Empty Block (label) printf_schar::@7
Culled Empty Block (label) uctoa::@4
Culled Empty Block (label) uctoa::@17
Culled Empty Block (label) uctoa::@3
Culled Empty Block (label) uctoa::@2
Culled Empty Block (label) uctoa::@1
Culled Empty Block (label) clrscr::@2
Renumbering block toupper::@3 to toupper::@2
Renumbering block memset::@2 to memset::@1
Renumbering block memset::@3 to memset::@2
Renumbering block memset::@4 to memset::@3
Renumbering block strupr::@4 to strupr::@3
Renumbering block uctoa::@5 to uctoa::@1
Renumbering block uctoa::@6 to uctoa::@2
Renumbering block uctoa::@7 to uctoa::@3
Renumbering block uctoa::@8 to uctoa::@4
Renumbering block uctoa::@9 to uctoa::@5
Renumbering block uctoa::@10 to uctoa::@6
Renumbering block uctoa::@11 to uctoa::@7
Renumbering block uctoa::@12 to uctoa::@8
Renumbering block uctoa::@13 to uctoa::@9
Renumbering block uctoa::@14 to uctoa::@10
Renumbering block uctoa::@15 to uctoa::@11
Renumbering block uctoa::@16 to uctoa::@12
Renumbering block utoa::@10 to utoa::@1
Renumbering block utoa::@11 to utoa::@2
Renumbering block utoa::@12 to utoa::@3
Renumbering block utoa::@13 to utoa::@4
Renumbering block utoa::@14 to utoa::@5
Renumbering block utoa::@15 to utoa::@6
Renumbering block utoa::@16 to utoa::@7
Renumbering block clrscr::@3 to clrscr::@2
Renumbering block clrscr::@4 to clrscr::@3
Renumbering block clrscr::@5 to clrscr::@4
Renumbering block clrscr::@6 to clrscr::@5
Renumbering block cscroll::@3 to cscroll::@1
Renumbering block cscroll::@4 to cscroll::@2
Renumbering block cscroll::@5 to cscroll::@3
Renumbering block cscroll::@6 to cscroll::@4
Renumbering block cscroll::@7 to cscroll::@5
Renumbering block printf_uint::@3 to printf_uint::@1
Renumbering block printf_uint::@4 to printf_uint::@2
Renumbering block printf_number_buffer::@15 to printf_number_buffer::@14
Renumbering block printf_number_buffer::@19 to printf_number_buffer::@15
Renumbering block printf_number_buffer::@22 to printf_number_buffer::@16
Renumbering block printf_number_buffer::@23 to printf_number_buffer::@17
Renumbering block printf_number_buffer::@24 to printf_number_buffer::@18
Renumbering block printf_number_buffer::@25 to printf_number_buffer::@19
Renumbering block printf_number_buffer::@26 to printf_number_buffer::@20
Renumbering block printf_number_buffer::@27 to printf_number_buffer::@21
Adding NOP phi() at start of _start
Adding NOP phi() at start of _start::@1
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@2
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of printf_uint
Adding NOP phi() at start of printf_number_buffer::@6
Adding NOP phi() at start of printf_number_buffer::@21
Adding NOP phi() at start of printf_number_buffer::@11
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputs
Adding NOP phi() at start of strupr
Adding NOP phi() at start of strlen
Adding NOP phi() at start of utoa
Adding NOP phi() at start of utoa_append
Adding NOP phi() at start of uctoa_append
Adding NOP phi() at start of clrscr

FINAL CONTROL FLOW GRAPH

(void()) _start()
_start: scope:[_start]  from
  [0] phi()
  to:_start::_init1
_start::_init1: scope:[_start]  from _start
  [1] (byte) conio_cursor_x ← (byte) 0
  [2] (byte) conio_cursor_y ← (byte) 0
  [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN
  [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM
  to:_start::@1
_start::@1: scope:[_start]  from _start::_init1
  [5] phi()
  [6] call main 
  to:_start::@return
_start::@return: scope:[_start]  from _start::@1
  [7] return 
  to:@return

(void()) main()
main: scope:[main]  from _start::@1
  [8] phi()
  [9] call clrscr 
  to:main::@1
main::@1: scope:[main]  from main
  [10] phi()
  [11] call printf_schar 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [12] phi()
  [13] call cputln 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [14] phi()
  [15] call printf_schar 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [16] phi()
  [17] call cputln 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [18] phi()
  [19] call printf_uint 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [20] phi()
  [21] call cputln 
  to:main::@return
main::@return: scope:[main]  from main::@6
  [22] return 
  to:@return

(void()) cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3 main::@2 main::@4 main::@6
  [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28
  [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28
  [25] (byte) conio_cursor_x ← (byte) 0
  [26] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y
  [27] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [28] return 
  to:@return

(void()) cscroll()
cscroll: scope:[cscroll]  from cputln
  [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [30] phi()
  [31] call memcpy 
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [32] phi()
  [33] call memcpy 
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [34] phi()
  [35] call memset 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [36] phi()
  [37] call memset 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28
  [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28
  [40] (byte) conio_cursor_y ← -- (byte) conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [41] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [42] (byte) memset::c#4 ← phi( cscroll::@3/(byte) ' ' cscroll::@4/(const nomodify byte) LIGHT_BLUE )
  [42] (void*) memset::str#3 ← phi( cscroll::@3/(void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 cscroll::@4/(void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28
  [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [45] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [47] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [48] *((byte*) memset::dst#2) ← (byte) memset::c#4
  [49] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [50] (void*) memcpy::destination#2 ← phi( cscroll::@1/(void*)(const nomodify byte*) DEFAULT_SCREEN cscroll::@2/(void*)(const nomodify byte*) COLORRAM )
  [50] (void*) memcpy::source#2 ← phi( cscroll::@1/(void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 cscroll::@2/(void*)(const nomodify byte*) COLORRAM+(byte) $28 )
  [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28
  [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
  [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [54] (byte*) memcpy::dst#2 ← phi( memcpy/(byte*) memcpy::dst#4 memcpy::@2/(byte*) memcpy::dst#1 )
  [54] (byte*) memcpy::src#2 ← phi( memcpy/(byte*) memcpy::src#4 memcpy::@2/(byte*) memcpy::src#1 )
  [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [56] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2)
  [58] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  [59] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2
  to:memcpy::@1

(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@5
  [60] phi()
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0
  [62] call utoa 
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [63] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer)
  [64] call printf_number_buffer 
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [65] return 
  to:@return

(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_schar::@5 printf_uint::@2
  [66] (byte) printf_number_buffer::format_upper_case#10 ← phi( printf_schar::@5/(byte) 0 printf_uint::@2/(const byte) printf_uint::format_upper_case#0 )
  [66] (byte) printf_number_buffer::buffer_sign#10 ← phi( printf_schar::@5/(byte) printf_number_buffer::buffer_sign#1 printf_uint::@2/(byte) printf_number_buffer::buffer_sign#0 )
  [66] (byte) printf_number_buffer::format_zero_padding#10 ← phi( printf_schar::@5/(byte) printf_number_buffer::format_zero_padding#1 printf_uint::@2/(const byte) printf_uint::format_zero_padding#0 )
  [66] (byte) printf_number_buffer::format_justify_left#10 ← phi( printf_schar::@5/(byte) 0 printf_uint::@2/(const byte) printf_uint::format_justify_left#0 )
  [66] (byte) printf_number_buffer::format_min_length#2 ← phi( printf_schar::@5/(byte) 6 printf_uint::@2/(const byte) printf_uint::format_min_length#0 )
  [67] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  [68] phi()
  [69] call strlen 
  [70] (word) strlen::return#2 ← (word) strlen::len#2
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@6
  [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2
  [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19
  [73] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [74] (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#0
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@7
  [75] (signed byte) printf_number_buffer::len#2 ← phi( printf_number_buffer::@14/(signed byte) printf_number_buffer::len#0 printf_number_buffer::@7/(signed byte) printf_number_buffer::len#1 )
  [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2
  [77] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@21
  to:printf_number_buffer::@1
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [78] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@21
  [79] (signed byte) printf_number_buffer::padding#10 ← phi( printf_number_buffer/(signed byte) 0 printf_number_buffer::@21/(signed byte) printf_number_buffer::padding#1 printf_number_buffer::@13/(signed byte) 0 )
  [80] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [81] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@17
  [82] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@8
  to:printf_number_buffer::@2
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@16
  [83] (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#10
  [84] call printf_padding 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16 printf_number_buffer::@17 printf_number_buffer::@8
  [85] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [86] (byte) cputc::c#2 ← (byte) printf_number_buffer::buffer_sign#10
  [87] call cputc 
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  [88] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [89] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@4
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@18
  [90] (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#10
  [91] call printf_padding 
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@18 printf_number_buffer::@3
  [92] if((byte) 0==(byte) printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [93] phi()
  [94] call strupr 
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@4
  [95] phi()
  [96] call cputs 
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [97] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@15
  [98] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@20
  [99] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  [100] (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#10
  [101] call printf_padding 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@15 printf_number_buffer::@19 printf_number_buffer::@20
  [102] return 
  to:@return

(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  [103] (byte) printf_padding::pad#5 ← phi( printf_number_buffer::@10/(byte) '0' printf_number_buffer::@12/(byte) ' ' printf_number_buffer::@8/(byte) ' ' )
  [103] (byte) printf_padding::length#4 ← phi( printf_number_buffer::@10/(byte) printf_padding::length#1 printf_number_buffer::@12/(byte) printf_padding::length#2 printf_number_buffer::@8/(byte) printf_padding::length#0 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [104] (byte) printf_padding::i#2 ← phi( printf_padding/(byte) 0 printf_padding::@3/(byte) printf_padding::i#1 )
  [105] if((byte) printf_padding::i#2<(byte) printf_padding::length#4) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [106] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [107] (byte) cputc::c#1 ← (byte) printf_padding::pad#5
  [108] call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [109] (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#2
  to:printf_padding::@1

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from cputs::@2 printf_number_buffer::@9 printf_padding::@2
  [110] (byte) cputc::c#3 ← phi( cputs::@2/(byte) cputc::c#0 printf_number_buffer::@9/(byte) cputc::c#2 printf_padding::@2/(byte) cputc::c#1 )
  [111] if((byte) cputc::c#3==(byte) '
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3
  [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE
  [114] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x
  [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [116] phi()
  [117] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [118] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [119] phi()
  [120] call cputln 
  to:cputc::@return

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from printf_number_buffer::@5
  [121] phi()
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [122] (to_nomodify byte*) cputs::s#2 ← phi( cputs/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS cputs::@2/(to_nomodify byte*) cputs::s#0 )
  [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  [124] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  [125] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [126] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [127] (byte) cputc::c#0 ← (byte) cputs::c#1
  [128] call cputc 
  to:cputs::@1

(byte*()) strupr((byte*) strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  [129] phi()
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@3
  [130] (byte*) strupr::src#2 ← phi( strupr/(const byte*) strupr::str#0 strupr::@3/(byte*) strupr::src#1 )
  [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@1
  [132] return 
  to:@return
strupr::@2: scope:[strupr]  from strupr::@1
  [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2)
  [134] call toupper 
  [135] (byte) toupper::return#3 ← (byte) toupper::return#2
  to:strupr::@3
strupr::@3: scope:[strupr]  from strupr::@2
  [136] (byte~) strupr::$0 ← (byte) toupper::return#3
  [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0
  [138] (byte*) strupr::src#1 ← ++ (byte*) strupr::src#2
  to:strupr::@1

(byte()) toupper((byte) toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  [139] if((byte) toupper::ch#0<(byte) 'a') goto toupper::@return
  to:toupper::@2
toupper::@2: scope:[toupper]  from toupper
  [140] if((byte) toupper::ch#0<=(byte) 'z') goto toupper::@1
  to:toupper::@return
toupper::@1: scope:[toupper]  from toupper::@2
  [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a'
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper toupper::@1 toupper::@2
  [142] (byte) toupper::return#2 ← phi( toupper::@1/(byte) toupper::return#0 toupper/(byte) toupper::ch#0 toupper::@2/(byte) toupper::ch#0 )
  [143] return 
  to:@return

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  [144] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [145] (word) strlen::len#2 ← phi( strlen/(word) 0 strlen::@2/(word) strlen::len#1 )
  [145] (byte*) strlen::str#2 ← phi( strlen/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS strlen::@2/(byte*) strlen::str#0 )
  [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [147] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [148] (word) strlen::len#1 ← ++ (word) strlen::len#2
  [149] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2
  to:strlen::@1

(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
utoa: scope:[utoa]  from printf_uint::@1
  [150] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [151] (byte*) utoa::buffer#11 ← phi( utoa::@4/(byte*) utoa::buffer#14 utoa/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [151] (byte) utoa::started#2 ← phi( utoa::@4/(byte) utoa::started#4 utoa/(byte) 0 )
  [151] (word) utoa::value#2 ← phi( utoa::@4/(word) utoa::value#6 utoa/(const word) printf_uint::uvalue#0 )
  [151] (byte) utoa::digit#2 ← phi( utoa::@4/(byte) utoa::digit#1 utoa/(byte) 0 )
  [152] if((byte) utoa::digit#2<(const byte) utoa::max_digits#2-(byte) 1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2
  [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11)
  [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11
  [156] *((byte*) utoa::buffer#3) ← (byte) 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [157] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1
  [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10)
  [160] if((byte) 0!=(byte) utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [162] (byte*) utoa::buffer#14 ← phi( utoa::@7/(byte*) utoa::buffer#11 utoa::@6/(byte*) utoa::buffer#4 )
  [162] (byte) utoa::started#4 ← phi( utoa::@7/(byte) utoa::started#2 utoa::@6/(byte) 1 )
  [162] (word) utoa::value#6 ← phi( utoa::@7/(word) utoa::value#2 utoa::@6/(word) utoa::value#0 )
  [163] (byte) utoa::digit#1 ← ++ (byte) utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11
  [165] (word) utoa_append::value#0 ← (word) utoa::value#2
  [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0
  [167] call utoa_append 
  [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [169] (word) utoa::value#0 ← (word) utoa_append::return#0
  [170] (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#11
  to:utoa::@4

(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [171] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [172] (byte) utoa_append::digit#2 ← phi( utoa_append/(byte) 0 utoa_append::@2/(byte) utoa_append::digit#1 )
  [172] (word) utoa_append::value#2 ← phi( utoa_append/(word) utoa_append::value#0 utoa_append::@2/(word) utoa_append::value#1 )
  [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2)
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [175] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [176] (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2
  [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0
  to:utoa_append::@1

(void()) printf_schar((signed byte) printf_schar::value , (byte) printf_schar::format_min_length , (byte) printf_schar::format_justify_left , (byte) printf_schar::format_sign_always , (byte) printf_schar::format_zero_padding , (byte) printf_schar::format_upper_case , (byte) printf_schar::format_radix)
printf_schar: scope:[printf_schar]  from main::@1 main::@3
  [178] (byte) printf_schar::format_zero_padding#2 ← phi( main::@1/(byte) 0 main::@3/(byte) 1 )
  [178] (byte) printf_schar::format_radix#2 ← phi( main::@1/(const byte) DECIMAL main::@3/(const byte) OCTAL )
  [178] (byte) printf_schar::format_sign_always#2 ← phi( main::@1/(byte) 0 main::@3/(byte) 1 )
  [178] (signed byte) printf_schar::value#3 ← phi( main::@1/(signed byte) -$4d main::@3/(signed byte) $63 )
  [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0
  [180] if((signed byte) printf_schar::value#3<(signed byte) 0) goto printf_schar::@1
  to:printf_schar::@3
printf_schar::@3: scope:[printf_schar]  from printf_schar
  [181] if((byte) 0==(byte) printf_schar::format_sign_always#2) goto printf_schar::@2
  to:printf_schar::@4
printf_schar::@4: scope:[printf_schar]  from printf_schar::@3
  [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+'
  to:printf_schar::@2
printf_schar::@2: scope:[printf_schar]  from printf_schar::@1 printf_schar::@3 printf_schar::@4
  [183] (signed byte) printf_schar::value#5 ← phi( printf_schar::@1/(signed byte) printf_schar::value#0 printf_schar::@3/(signed byte) printf_schar::value#3 printf_schar::@4/(signed byte) printf_schar::value#3 )
  [184] (byte) uctoa::value#1 ← (byte)(signed byte) printf_schar::value#5
  [185] (byte) uctoa::radix#0 ← (byte) printf_schar::format_radix#2
  [186] call uctoa 
  to:printf_schar::@5
printf_schar::@5: scope:[printf_schar]  from printf_schar::@2
  [187] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer)
  [188] (byte) printf_number_buffer::format_zero_padding#1 ← (byte) printf_schar::format_zero_padding#2
  [189] call printf_number_buffer 
  to:printf_schar::@return
printf_schar::@return: scope:[printf_schar]  from printf_schar::@5
  [190] return 
  to:@return
printf_schar::@1: scope:[printf_schar]  from printf_schar
  [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3
  [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-'
  to:printf_schar::@2

(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
uctoa: scope:[uctoa]  from printf_schar::@2
  [193] if((byte) uctoa::radix#0==(const byte) DECIMAL) goto uctoa::@1
  to:uctoa::@2
uctoa::@2: scope:[uctoa]  from uctoa
  [194] if((byte) uctoa::radix#0==(const byte) HEXADECIMAL) goto uctoa::@1
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@2
  [195] if((byte) uctoa::radix#0==(const byte) OCTAL) goto uctoa::@1
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@3
  [196] if((byte) uctoa::radix#0==(const byte) BINARY) goto uctoa::@1
  to:uctoa::@5
uctoa::@5: scope:[uctoa]  from uctoa::@4
  [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e'
  [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r'
  [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r'
  [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@5 uctoa::@8
  [201] return 
  to:@return
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@2 uctoa::@3 uctoa::@4
  [202] (byte*) uctoa::digit_values#8 ← phi( uctoa/(const byte*) RADIX_DECIMAL_VALUES_CHAR uctoa::@2/(const byte*) RADIX_HEXADECIMAL_VALUES_CHAR uctoa::@3/(const byte*) RADIX_OCTAL_VALUES_CHAR uctoa::@4/(const byte*) RADIX_BINARY_VALUES_CHAR )
  [202] (byte) uctoa::max_digits#7 ← phi( uctoa/(byte) 3 uctoa::@2/(byte) 2 uctoa::@3/(byte) 3 uctoa::@4/(byte) 8 )
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@1 uctoa::@9
  [203] (byte*) uctoa::buffer#11 ← phi( uctoa::@9/(byte*) uctoa::buffer#14 uctoa::@1/(byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [203] (byte) uctoa::started#2 ← phi( uctoa::@9/(byte) uctoa::started#4 uctoa::@1/(byte) 0 )
  [203] (byte) uctoa::value#2 ← phi( uctoa::@9/(byte) uctoa::value#6 uctoa::@1/(byte) uctoa::value#1 )
  [203] (byte) uctoa::digit#2 ← phi( uctoa::@9/(byte) uctoa::digit#1 uctoa::@1/(byte) 0 )
  [204] (byte~) uctoa::$4 ← (byte) uctoa::max_digits#7 - (byte) 1
  [205] if((byte) uctoa::digit#2<(byte~) uctoa::$4) goto uctoa::@7
  to:uctoa::@8
uctoa::@8: scope:[uctoa]  from uctoa::@6
  [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2)
  [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11
  [208] *((byte*) uctoa::buffer#3) ← (byte) 0
  to:uctoa::@return
uctoa::@7: scope:[uctoa]  from uctoa::@6
  [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2)
  [210] if((byte) 0!=(byte) uctoa::started#2) goto uctoa::@10
  to:uctoa::@12
uctoa::@12: scope:[uctoa]  from uctoa::@7
  [211] if((byte) uctoa::value#2>=(byte) uctoa::digit_value#0) goto uctoa::@10
  to:uctoa::@9
uctoa::@9: scope:[uctoa]  from uctoa::@11 uctoa::@12
  [212] (byte*) uctoa::buffer#14 ← phi( uctoa::@12/(byte*) uctoa::buffer#11 uctoa::@11/(byte*) uctoa::buffer#4 )
  [212] (byte) uctoa::started#4 ← phi( uctoa::@12/(byte) uctoa::started#2 uctoa::@11/(byte) 1 )
  [212] (byte) uctoa::value#6 ← phi( uctoa::@12/(byte) uctoa::value#2 uctoa::@11/(byte) uctoa::value#0 )
  [213] (byte) uctoa::digit#1 ← ++ (byte) uctoa::digit#2
  to:uctoa::@6
uctoa::@10: scope:[uctoa]  from uctoa::@12 uctoa::@7
  [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11
  [215] (byte) uctoa_append::value#0 ← (byte) uctoa::value#2
  [216] (byte) uctoa_append::sub#0 ← (byte) uctoa::digit_value#0
  [217] call uctoa_append 
  [218] (byte) uctoa_append::return#0 ← (byte) uctoa_append::value#2
  to:uctoa::@11
uctoa::@11: scope:[uctoa]  from uctoa::@10
  [219] (byte) uctoa::value#0 ← (byte) uctoa_append::return#0
  [220] (byte*) uctoa::buffer#4 ← ++ (byte*) uctoa::buffer#11
  to:uctoa::@9

(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@10
  [221] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [222] (byte) uctoa_append::digit#2 ← phi( uctoa_append/(byte) 0 uctoa_append::@2/(byte) uctoa_append::digit#1 )
  [222] (byte) uctoa_append::value#2 ← phi( uctoa_append/(byte) uctoa_append::value#0 uctoa_append::@2/(byte) uctoa_append::value#1 )
  [223] if((byte) uctoa_append::value#2>=(byte) uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2)
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [225] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [226] (byte) uctoa_append::digit#1 ← ++ (byte) uctoa_append::digit#2
  [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0
  to:uctoa_append::@1

(void()) clrscr()
clrscr: scope:[clrscr]  from main
  [228] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [229] (byte*) clrscr::line_cols#5 ← phi( clrscr/(const nomodify byte*) COLORRAM clrscr::@5/(byte*) clrscr::line_cols#1 )
  [229] (byte*) clrscr::line_text#5 ← phi( clrscr/(const nomodify byte*) DEFAULT_SCREEN clrscr::@5/(byte*) clrscr::line_text#1 )
  [229] (byte) clrscr::l#2 ← phi( clrscr/(byte) 0 clrscr::@5/(byte) clrscr::l#1 )
  [230] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [231] (byte) conio_cursor_x ← (byte) 0
  [232] (byte) conio_cursor_y ← (byte) 0
  [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN
  [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [235] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [236] (byte) clrscr::c#2 ← phi( clrscr::@1/(byte) 0 clrscr::@4/(byte) clrscr::c#1 )
  [237] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28
  [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28
  [240] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' '
  [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE
  [243] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2
  to:clrscr::@3

null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: printf_padding::@1 tails: printf_padding::@3 blocks: printf_padding::@3 printf_padding::@2 printf_padding::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc

VARIABLE REGISTER WEIGHTS
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(void()) _start()
(void()) clrscr()
(byte) clrscr::c
(byte) clrscr::c#1 20002.0
(byte) clrscr::c#2 12501.25
(byte) clrscr::l
(byte) clrscr::l#1 2002.0
(byte) clrscr::l#2 333.6666666666667
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 1001.0
(byte*) clrscr::line_cols#5 1500.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 667.3333333333334
(byte*) clrscr::line_text#5 1714.7142857142858
(byte) conio_cursor_x loadstore 164836.36263736262
(byte) conio_cursor_y loadstore 2689076.537815126
(byte*) conio_line_color loadstore 1888889.8119658118
(byte*) conio_line_text loadstore 1872882.2711864407
(void()) cputc((byte) cputc::c)
(byte) cputc::c
(byte) cputc::c#0 200002.0
(byte) cputc::c#1 200002.0
(byte) cputc::c#2 2002.0
(byte) cputc::c#3 1100502.5
(void()) cputln()
(void()) cputs((to_nomodify byte*) cputs::s)
(byte) cputs::c
(byte) cputs::c#1 100001.0
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 50000.5
(to_nomodify byte*) cputs::s#2 150001.5
(void()) cscroll()
(void()) main()
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(void*) memcpy::destination
(void*) memcpy::destination#2
(byte*) memcpy::dst
(byte*) memcpy::dst#1 1.00000000001E11
(byte*) memcpy::dst#2 1.0033333333466667E11
(byte*) memcpy::dst#4 2.000000002E9
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2
(byte*) memcpy::src
(byte*) memcpy::src#1 2.00000000002E11
(byte*) memcpy::src#2 1.0025000000125E11
(byte*) memcpy::src#4 1.000000001E9
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 1.262500000025E10
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(byte) memset::c
(byte) memset::c#4 1.4285714285857143E10
(byte*) memset::dst
(byte*) memset::dst#1 2.00000000002E11
(byte*) memset::dst#2 1.3366666666833334E11
(byte*) memset::dst#4 2.000000002E9
(byte*) memset::end
(byte*) memset::end#0 1.6833333333666668E10
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3
(struct printf_buffer_number) printf_buffer loadstore = {}
(byte) printf_buffer_number::sign
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(word~) printf_number_buffer::$19 1001.0
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0 202.0
(byte) printf_number_buffer::buffer_sign#1 101.0
(byte) printf_number_buffer::buffer_sign#10 160.25
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_justify_left#10 64.58064516129032
(byte) printf_number_buffer::format_min_length
(byte) printf_number_buffer::format_min_length#2 100.1
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_upper_case#10 38.5
(byte) printf_number_buffer::format_zero_padding
(byte) printf_number_buffer::format_zero_padding#1 202.0
(byte) printf_number_buffer::format_zero_padding#10 97.0
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::len#0 1501.5
(signed byte) printf_number_buffer::len#1 2002.0
(signed byte) printf_number_buffer::len#2 3003.0
(signed byte) printf_number_buffer::padding
(signed byte) printf_number_buffer::padding#1 1001.0
(signed byte) printf_number_buffer::padding#10 190.66666666666666
(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
(byte) printf_padding::i
(byte) printf_padding::i#1 200002.0
(byte) printf_padding::i#2 75000.75
(byte) printf_padding::length
(byte) printf_padding::length#0 2002.0
(byte) printf_padding::length#1 2002.0
(byte) printf_padding::length#2 2002.0
(byte) printf_padding::length#4 17167.333333333332
(byte) printf_padding::pad
(byte) printf_padding::pad#5 16666.833333333332
(void()) printf_schar((signed byte) printf_schar::value , (byte) printf_schar::format_min_length , (byte) printf_schar::format_justify_left , (byte) printf_schar::format_sign_always , (byte) printf_schar::format_zero_padding , (byte) printf_schar::format_upper_case , (byte) printf_schar::format_radix)
(struct printf_format_number) printf_schar::format
(byte) printf_schar::format_justify_left
(byte) printf_schar::format_min_length
(byte) printf_schar::format_radix
(byte) printf_schar::format_radix#2 11.222222222222221
(byte) printf_schar::format_sign_always
(byte) printf_schar::format_sign_always#2 33.666666666666664
(byte) printf_schar::format_upper_case
(byte) printf_schar::format_zero_padding
(byte) printf_schar::format_zero_padding#2 8.416666666666666
(byte) printf_schar::uvalue
(signed byte) printf_schar::value
(signed byte) printf_schar::value#0 101.0
(signed byte) printf_schar::value#3 80.8
(signed byte) printf_schar::value#5 303.0
(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
(struct printf_format_number) printf_uint::format
(byte) printf_uint::format_justify_left
(byte) printf_uint::format_min_length
(byte) printf_uint::format_radix
(byte) printf_uint::format_sign_always
(byte) printf_uint::format_upper_case
(byte) printf_uint::format_zero_padding
(word) printf_uint::uvalue
(word()) strlen((byte*) strlen::str)
(word) strlen::len
(word) strlen::len#1 100001.0
(word) strlen::len#2 50250.75
(word) strlen::return
(word) strlen::return#2 2002.0
(byte*) strlen::str
(byte*) strlen::str#0 200002.0
(byte*) strlen::str#2 100001.0
(byte*()) strupr((byte*) strupr::str)
(byte~) strupr::$0 200002.0
(byte*) strupr::return
(byte*) strupr::src
(byte*) strupr::src#1 200002.0
(byte*) strupr::src#2 71429.28571428571
(byte*) strupr::str
(byte()) toupper((byte) toupper::ch)
(byte) toupper::ch
(byte) toupper::ch#0 1700002.0000000002
(byte) toupper::return
(byte) toupper::return#0 2000002.0
(byte) toupper::return#2 1033334.6666666667
(byte) toupper::return#3 200002.0
(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
(byte~) uctoa::$4 20002.0
(byte*) uctoa::buffer
(byte*) uctoa::buffer#11 3231.230769230769
(byte*) uctoa::buffer#14 15001.5
(byte*) uctoa::buffer#3 2002.0
(byte*) uctoa::buffer#4 20002.0
(byte) uctoa::digit
(byte) uctoa::digit#1 20002.0
(byte) uctoa::digit#2 2857.4285714285716
(byte) uctoa::digit_value
(byte) uctoa::digit_value#0 6000.6
(byte*) uctoa::digit_values
(byte*) uctoa::digit_values#8 625.0625
(byte) uctoa::max_digits
(byte) uctoa::max_digits#7 625.0625
(byte) uctoa::radix
(byte) uctoa::radix#0 1026.25
(byte) uctoa::started
(byte) uctoa::started#2 5000.5
(byte) uctoa::started#4 10001.0
(byte) uctoa::value
(byte) uctoa::value#0 10001.0
(byte) uctoa::value#1 157.42857142857142
(byte) uctoa::value#2 6000.857142857143
(byte) uctoa::value#6 15001.5
(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
(byte*) uctoa_append::buffer
(byte*) uctoa_append::buffer#0 13750.25
(byte) uctoa_append::digit
(byte) uctoa_append::digit#1 1.0000001E7
(byte) uctoa_append::digit#2 1.00500015E7
(byte) uctoa_append::return
(byte) uctoa_append::return#0 20002.0
(byte) uctoa_append::sub
(byte) uctoa_append::sub#0 3335000.5
(byte) uctoa_append::value
(byte) uctoa_append::value#0 36667.33333333333
(byte) uctoa_append::value#1 2.0000002E7
(byte) uctoa_append::value#2 5018334.166666666
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(byte~) utoa::$10 20002.0
(byte~) utoa::$11 2002.0
(byte*) utoa::buffer
(byte*) utoa::buffer#11 3000.4285714285716
(byte*) utoa::buffer#14 15001.5
(byte*) utoa::buffer#3 2002.0
(byte*) utoa::buffer#4 20002.0
(byte) utoa::digit
(byte) utoa::digit#1 20002.0
(byte) utoa::digit#2 2857.4285714285716
(word) utoa::digit_value
(word) utoa::digit_value#0 6000.6
(word*) utoa::digit_values
(byte) utoa::max_digits
(byte) utoa::radix
(byte) utoa::started
(byte) utoa::started#2 5000.5
(byte) utoa::started#4 10001.0
(word) utoa::value
(word) utoa::value#0 10001.0
(word) utoa::value#2 5714.857142857143
(word) utoa::value#6 15001.5
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0 13750.25
(byte) utoa_append::digit
(byte) utoa_append::digit#1 1.0000001E7
(byte) utoa_append::digit#2 1.00500015E7
(word) utoa_append::return
(word) utoa_append::return#0 20002.0
(word) utoa_append::sub
(word) utoa_append::sub#0 3335000.5
(word) utoa_append::value
(word) utoa_append::value#0 36667.33333333333
(word) utoa_append::value#1 2.0000002E7
(word) utoa_append::value#2 5018334.166666666

Initial phi equivalence classes
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ printf_number_buffer::format_min_length#2 ]
[ printf_number_buffer::format_justify_left#10 ]
[ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ]
[ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
[ printf_number_buffer::format_upper_case#10 ]
[ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
[ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
[ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
[ printf_padding::pad#5 ]
[ printf_padding::i#2 printf_padding::i#1 ]
[ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
[ cputs::s#2 cputs::s#0 ]
[ strupr::src#2 strupr::src#1 ]
[ toupper::return#2 toupper::return#0 toupper::ch#0 ]
[ strlen::str#2 strlen::str#0 ]
[ strlen::len#2 strlen::len#1 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ printf_schar::format_sign_always#2 ]
[ printf_schar::format_radix#2 ]
[ printf_schar::format_zero_padding#2 ]
[ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ]
[ uctoa::max_digits#7 ]
[ uctoa::digit_values#8 ]
[ uctoa::digit#2 uctoa::digit#1 ]
[ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
[ uctoa::started#2 uctoa::started#4 ]
[ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ]
[ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
[ uctoa_append::digit#2 uctoa_append::digit#1 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
Added variable conio_cursor_x to live range equivalence class [ conio_cursor_x ]
Added variable conio_cursor_y to live range equivalence class [ conio_cursor_y ]
Added variable conio_line_text to live range equivalence class [ conio_line_text ]
Added variable conio_line_color to live range equivalence class [ conio_line_color ]
Added variable memset::end#0 to live range equivalence class [ memset::end#0 ]
Added variable memcpy::src_end#0 to live range equivalence class [ memcpy::src_end#0 ]
Added variable strlen::return#2 to live range equivalence class [ strlen::return#2 ]
Added variable printf_number_buffer::$19 to live range equivalence class [ printf_number_buffer::$19 ]
Added variable cputs::c#1 to live range equivalence class [ cputs::c#1 ]
Added variable toupper::return#3 to live range equivalence class [ toupper::return#3 ]
Added variable strupr::$0 to live range equivalence class [ strupr::$0 ]
Added variable utoa::$11 to live range equivalence class [ utoa::$11 ]
Added variable utoa::buffer#3 to live range equivalence class [ utoa::buffer#3 ]
Added variable utoa::$10 to live range equivalence class [ utoa::$10 ]
Added variable utoa::digit_value#0 to live range equivalence class [ utoa::digit_value#0 ]
Added variable utoa_append::buffer#0 to live range equivalence class [ utoa_append::buffer#0 ]
Added variable utoa_append::sub#0 to live range equivalence class [ utoa_append::sub#0 ]
Added variable utoa_append::return#0 to live range equivalence class [ utoa_append::return#0 ]
Added variable uctoa::radix#0 to live range equivalence class [ uctoa::radix#0 ]
Added variable uctoa::$4 to live range equivalence class [ uctoa::$4 ]
Added variable uctoa::buffer#3 to live range equivalence class [ uctoa::buffer#3 ]
Added variable uctoa::digit_value#0 to live range equivalence class [ uctoa::digit_value#0 ]
Added variable uctoa_append::buffer#0 to live range equivalence class [ uctoa_append::buffer#0 ]
Added variable uctoa_append::sub#0 to live range equivalence class [ uctoa_append::sub#0 ]
Added variable uctoa_append::return#0 to live range equivalence class [ uctoa_append::return#0 ]
Added variable printf_buffer to live range equivalence class [ printf_buffer ]
Complete equivalence classes
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ printf_number_buffer::format_min_length#2 ]
[ printf_number_buffer::format_justify_left#10 ]
[ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ]
[ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
[ printf_number_buffer::format_upper_case#10 ]
[ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
[ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
[ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
[ printf_padding::pad#5 ]
[ printf_padding::i#2 printf_padding::i#1 ]
[ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
[ cputs::s#2 cputs::s#0 ]
[ strupr::src#2 strupr::src#1 ]
[ toupper::return#2 toupper::return#0 toupper::ch#0 ]
[ strlen::str#2 strlen::str#0 ]
[ strlen::len#2 strlen::len#1 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ printf_schar::format_sign_always#2 ]
[ printf_schar::format_radix#2 ]
[ printf_schar::format_zero_padding#2 ]
[ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ]
[ uctoa::max_digits#7 ]
[ uctoa::digit_values#8 ]
[ uctoa::digit#2 uctoa::digit#1 ]
[ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
[ uctoa::started#2 uctoa::started#4 ]
[ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ]
[ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
[ uctoa_append::digit#2 uctoa_append::digit#1 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ conio_cursor_x ]
[ conio_cursor_y ]
[ conio_line_text ]
[ conio_line_color ]
[ memset::end#0 ]
[ memcpy::src_end#0 ]
[ strlen::return#2 ]
[ printf_number_buffer::$19 ]
[ cputs::c#1 ]
[ toupper::return#3 ]
[ strupr::$0 ]
[ utoa::$11 ]
[ utoa::buffer#3 ]
[ utoa::$10 ]
[ utoa::digit_value#0 ]
[ utoa_append::buffer#0 ]
[ utoa_append::sub#0 ]
[ utoa_append::return#0 ]
[ uctoa::radix#0 ]
[ uctoa::$4 ]
[ uctoa::buffer#3 ]
[ uctoa::digit_value#0 ]
[ uctoa_append::buffer#0 ]
[ uctoa_append::sub#0 ]
[ uctoa_append::return#0 ]
[ printf_buffer ]
Allocated zp[2]:2 [ memset::str#3 ]
Allocated zp[1]:4 [ memset::c#4 ]
Allocated zp[2]:5 [ memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated zp[2]:7 [ memcpy::source#2 ]
Allocated zp[2]:9 [ memcpy::destination#2 ]
Allocated zp[2]:11 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated zp[2]:13 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated zp[1]:15 [ printf_number_buffer::format_min_length#2 ]
Allocated zp[1]:16 [ printf_number_buffer::format_justify_left#10 ]
Allocated zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ]
Allocated zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Allocated zp[1]:19 [ printf_number_buffer::format_upper_case#10 ]
Allocated zp[1]:20 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
Allocated zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Allocated zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Allocated zp[1]:23 [ printf_padding::pad#5 ]
Allocated zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ]
Allocated zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
Allocated zp[2]:26 [ cputs::s#2 cputs::s#0 ]
Allocated zp[2]:28 [ strupr::src#2 strupr::src#1 ]
Allocated zp[1]:30 [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
Allocated zp[2]:31 [ strlen::str#2 strlen::str#0 ]
Allocated zp[2]:33 [ strlen::len#2 strlen::len#1 ]
Allocated zp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Allocated zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 ]
Allocated zp[1]:38 [ utoa::started#2 utoa::started#4 ]
Allocated zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
Allocated zp[2]:41 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
Allocated zp[1]:43 [ utoa_append::digit#2 utoa_append::digit#1 ]
Allocated zp[1]:44 [ printf_schar::format_sign_always#2 ]
Allocated zp[1]:45 [ printf_schar::format_radix#2 ]
Allocated zp[1]:46 [ printf_schar::format_zero_padding#2 ]
Allocated zp[1]:47 [ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ]
Allocated zp[1]:48 [ uctoa::max_digits#7 ]
Allocated zp[2]:49 [ uctoa::digit_values#8 ]
Allocated zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ]
Allocated zp[1]:52 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
Allocated zp[1]:53 [ uctoa::started#2 uctoa::started#4 ]
Allocated zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ]
Allocated zp[1]:56 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Allocated zp[1]:57 [ uctoa_append::digit#2 uctoa_append::digit#1 ]
Allocated zp[1]:58 [ clrscr::l#2 clrscr::l#1 ]
Allocated zp[2]:59 [ clrscr::line_text#5 clrscr::line_text#1 ]
Allocated zp[2]:61 [ clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated zp[1]:63 [ clrscr::c#2 clrscr::c#1 ]
Allocated zp[1]:64 [ conio_cursor_x ]
Allocated zp[1]:65 [ conio_cursor_y ]
Allocated zp[2]:66 [ conio_line_text ]
Allocated zp[2]:68 [ conio_line_color ]
Allocated zp[2]:70 [ memset::end#0 ]
Allocated zp[2]:72 [ memcpy::src_end#0 ]
Allocated zp[2]:74 [ strlen::return#2 ]
Allocated zp[2]:76 [ printf_number_buffer::$19 ]
Allocated zp[1]:78 [ cputs::c#1 ]
Allocated zp[1]:79 [ toupper::return#3 ]
Allocated zp[1]:80 [ strupr::$0 ]
Allocated zp[1]:81 [ utoa::$11 ]
Allocated zp[2]:82 [ utoa::buffer#3 ]
Allocated zp[1]:84 [ utoa::$10 ]
Allocated zp[2]:85 [ utoa::digit_value#0 ]
Allocated zp[2]:87 [ utoa_append::buffer#0 ]
Allocated zp[2]:89 [ utoa_append::sub#0 ]
Allocated zp[2]:91 [ utoa_append::return#0 ]
Allocated zp[1]:93 [ uctoa::radix#0 ]
Allocated zp[1]:94 [ uctoa::$4 ]
Allocated zp[2]:95 [ uctoa::buffer#3 ]
Allocated zp[1]:97 [ uctoa::digit_value#0 ]
Allocated zp[2]:98 [ uctoa_append::buffer#0 ]
Allocated zp[1]:100 [ uctoa_append::sub#0 ]
Allocated zp[1]:101 [ uctoa_append::return#0 ]
Allocated mem[12] [ printf_buffer ]

INITIAL ASM
Target platform is c64basic / MOS6502X
  // File Comments
// Tests printf implementation
// Format a number
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(_start)
.pc = $80d "Program"
  // Global Constants & labels
  .const BINARY = 2
  .const OCTAL = 8
  .const DECIMAL = $a
  .const HEXADECIMAL = $10
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $40
  // The current cursor y-position
  .label conio_cursor_y = $41
  // The current text cursor line start
  .label conio_line_text = $42
  // The current color cursor line start
  .label conio_line_color = $44
  // _start
_start: {
    jmp _init1
    // _start::_init1
  _init1:
    // [1] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] phi from _start::_init1 to _start::@1 [phi:_start::_init1->_start::@1]
  __b1_from__init1:
    jmp __b1
    // _start::@1
  __b1:
    // [6] call main 
    // [8] phi from _start::@1 to main [phi:_start::@1->main]
  main_from___b1:
    jsr main
    jmp __breturn
    // _start::@return
  __breturn:
    // [7] return 
    rts
}
  // main
main: {
    // [9] call clrscr 
    // [228] phi from main to clrscr [phi:main->clrscr]
  clrscr_from_main:
    jsr clrscr
    // [10] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    jmp __b1
    // main::@1
  __b1:
    // [11] call printf_schar 
    // [178] phi from main::@1 to printf_schar [phi:main::@1->printf_schar]
  printf_schar_from___b1:
    // [178] phi (byte) printf_schar::format_zero_padding#2 = (byte) 0 [phi:main::@1->printf_schar#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_schar.format_zero_padding
    // [178] phi (byte) printf_schar::format_radix#2 = (const byte) DECIMAL [phi:main::@1->printf_schar#1] -- vbuz1=vbuc1 
    lda #DECIMAL
    sta.z printf_schar.format_radix
    // [178] phi (byte) printf_schar::format_sign_always#2 = (byte) 0 [phi:main::@1->printf_schar#2] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_schar.format_sign_always
    // [178] phi (signed byte) printf_schar::value#3 = (signed byte) -$4d [phi:main::@1->printf_schar#3] -- vbsz1=vbsc1 
    lda #-$4d
    sta.z printf_schar.value
    jsr printf_schar
    // [12] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [13] call cputln 
    jsr cputln
    // [14] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [15] call printf_schar 
    // [178] phi from main::@3 to printf_schar [phi:main::@3->printf_schar]
  printf_schar_from___b3:
    // [178] phi (byte) printf_schar::format_zero_padding#2 = (byte) 1 [phi:main::@3->printf_schar#0] -- vbuz1=vbuc1 
    lda #1
    sta.z printf_schar.format_zero_padding
    // [178] phi (byte) printf_schar::format_radix#2 = (const byte) OCTAL [phi:main::@3->printf_schar#1] -- vbuz1=vbuc1 
    lda #OCTAL
    sta.z printf_schar.format_radix
    // [178] phi (byte) printf_schar::format_sign_always#2 = (byte) 1 [phi:main::@3->printf_schar#2] -- vbuz1=vbuc1 
    lda #1
    sta.z printf_schar.format_sign_always
    // [178] phi (signed byte) printf_schar::value#3 = (signed byte) $63 [phi:main::@3->printf_schar#3] -- vbsz1=vbsc1 
    lda #$63
    sta.z printf_schar.value
    jsr printf_schar
    // [16] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [17] call cputln 
    jsr cputln
    // [18] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [19] call printf_uint 
    // [60] phi from main::@5 to printf_uint [phi:main::@5->printf_uint]
  printf_uint_from___b5:
    jsr printf_uint
    // [20] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [21] call cputln 
    jsr cputln
    jmp __breturn
    // main::@return
  __breturn:
    // [22] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [25] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [26] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [27] call cscroll 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [28] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [30] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
  __b1_from_cscroll:
    jmp __b1
    // cscroll::@1
  __b1:
    // [31] call memcpy 
    // [50] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
  memcpy_from___b1:
    // [50] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [50] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [32] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [33] call memcpy 
    // [50] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
  memcpy_from___b2:
    // [50] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [50] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) COLORRAM+(byte) $28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [34] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    // [35] call memset 
    // [42] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
  memset_from___b3:
    // [42] phi (byte) memset::c#4 = (byte) ' ' [phi:cscroll::@3->memset#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z memset.c
    // [42] phi (void*) memset::str#3 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [36] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [37] call memset 
    // [42] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
  memset_from___b4:
    // [42] phi (byte) memset::c#4 = (const nomodify byte) LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuz1=vbuc1 
    lda #LIGHT_BLUE
    sta.z memset.c
    // [42] phi (void*) memset::str#3 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b5
    // cscroll::@5
  __b5:
    // [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [40] (byte) conio_cursor_y ← -- (byte) conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [41] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp(2) str, byte zp(4) c)
memset: {
    .label end = $46
    .label dst = 5
    .label str = 2
    .label c = 4
    jmp __b1
    // memset::@1
  __b1:
    // [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 -- pbuz1=pbuz2 
    lda.z str
    sta.z dst
    lda.z str+1
    sta.z dst+1
    // [45] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [45] phi (byte*) memset::dst#2 = (byte*) memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [47] return 
    rts
    // memset::@3
  __b3:
    // [48] *((byte*) memset::dst#2) ← (byte) memset::c#4 -- _deref_pbuz1=vbuz2 
    lda.z c
    ldy #0
    sta (dst),y
    // [49] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp(9) destination, void* zp(7) source)
memcpy: {
    .label src_end = $48
    .label dst = $d
    .label src = $b
    .label source = 7
    .label destination = 9
    // [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 -- pbuz1=pbuz2 
    lda.z source
    sta.z src
    lda.z source+1
    sta.z src+1
    // [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 -- pbuz1=pbuz2 
    lda.z destination
    sta.z dst
    lda.z destination+1
    sta.z dst+1
    // [54] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [54] phi (byte*) memcpy::dst#2 = (byte*) memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [54] phi (byte*) memcpy::src#2 = (byte*) memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [56] return 
    rts
    // memcpy::@2
  __b2:
    // [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [58] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [59] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // printf_uint
// Print an unsigned int using a specific format
printf_uint: {
    .const format_min_length = $a
    .const format_justify_left = 1
    .const format_zero_padding = 0
    .const format_upper_case = 1
    .label uvalue = $d80
    jmp __b1
    // printf_uint::@1
  __b1:
    // [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [62] call utoa 
  // Format number into buffer
    // [150] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
  utoa_from___b1:
    jsr utoa
    jmp __b2
    // printf_uint::@2
  __b2:
    // [63] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [64] call printf_number_buffer 
  // Print using format
    // [66] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    // [66] phi (byte) printf_number_buffer::format_upper_case#10 = (const byte) printf_uint::format_upper_case#0 [phi:printf_uint::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #format_upper_case
    sta.z printf_number_buffer.format_upper_case
    // [66] phi (byte) printf_number_buffer::buffer_sign#10 = (byte) printf_number_buffer::buffer_sign#0 [phi:printf_uint::@2->printf_number_buffer#1] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_zero_padding#10 = (const byte) printf_uint::format_zero_padding#0 [phi:printf_uint::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #format_zero_padding
    sta.z printf_number_buffer.format_zero_padding
    // [66] phi (byte) printf_number_buffer::format_justify_left#10 = (const byte) printf_uint::format_justify_left#0 [phi:printf_uint::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #format_justify_left
    sta.z printf_number_buffer.format_justify_left
    // [66] phi (byte) printf_number_buffer::format_min_length#2 = (const byte) printf_uint::format_min_length#0 [phi:printf_uint::@2->printf_number_buffer#4] -- vbuz1=vbuc1 
    lda #format_min_length
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    jmp __breturn
    // printf_uint::@return
  __breturn:
    // [65] return 
    rts
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte zp($12) buffer_sign, byte zp($f) format_min_length, byte zp($10) format_justify_left, byte zp($11) format_zero_padding, byte zp($13) format_upper_case)
printf_number_buffer: {
    .label __19 = $4c
    .label buffer_sign = $12
    .label format_zero_padding = $11
    .label len = $14
    .label padding = $15
    .label format_min_length = $f
    .label format_justify_left = $10
    .label format_upper_case = $13
    // [67] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_min_length
    beq __b1_from_printf_number_buffer
    // [68] phi from printf_number_buffer to printf_number_buffer::@6 [phi:printf_number_buffer->printf_number_buffer::@6]
  __b6_from_printf_number_buffer:
    jmp __b6
    // printf_number_buffer::@6
  __b6:
    // [69] call strlen 
    // [144] phi from printf_number_buffer::@6 to strlen [phi:printf_number_buffer::@6->strlen]
  strlen_from___b6:
    jsr strlen
    // [70] (word) strlen::return#2 ← (word) strlen::len#2 -- vwuz1=vwuz2 
    lda.z strlen.len
    sta.z strlen.return
    lda.z strlen.len+1
    sta.z strlen.return+1
    jmp __b14
    // printf_number_buffer::@14
  __b14:
    // [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2 -- vwuz1=vwuz2 
    lda.z strlen.return
    sta.z __19
    lda.z strlen.return+1
    sta.z __19+1
    // [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19 -- vbsz1=_sbyte_vwuz2 
    // There is a minimum length - work out the padding
    lda.z __19
    sta.z len
    // [73] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z buffer_sign
    beq __b13_from___b14
    jmp __b7
    // printf_number_buffer::@7
  __b7:
    // [74] (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#0 -- vbsz1=_inc_vbsz1 
    inc.z len
    // [75] phi from printf_number_buffer::@14 printf_number_buffer::@7 to printf_number_buffer::@13 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13]
  __b13_from___b14:
  __b13_from___b7:
    // [75] phi (signed byte) printf_number_buffer::len#2 = (signed byte) printf_number_buffer::len#0 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13#0] -- register_copy 
    jmp __b13
    // printf_number_buffer::@13
  __b13:
    // [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2 -- vbsz1=vbsz2_minus_vbsz3 
    lda.z format_min_length
    sec
    sbc.z len
    sta.z padding
    // [77] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@21 -- vbsz1_ge_0_then_la1 
    lda.z padding
    cmp #0
    bpl __b21_from___b13
    // [79] phi from printf_number_buffer printf_number_buffer::@13 to printf_number_buffer::@1 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1]
  __b1_from_printf_number_buffer:
  __b1_from___b13:
    // [79] phi (signed byte) printf_number_buffer::padding#10 = (signed byte) 0 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1#0] -- vbsz1=vbsc1 
    lda #0
    sta.z padding
    jmp __b1
    // [78] phi from printf_number_buffer::@13 to printf_number_buffer::@21 [phi:printf_number_buffer::@13->printf_number_buffer::@21]
  __b21_from___b13:
    jmp __b21
    // printf_number_buffer::@21
  __b21:
    // [79] phi from printf_number_buffer::@21 to printf_number_buffer::@1 [phi:printf_number_buffer::@21->printf_number_buffer::@1]
  __b1_from___b21:
    // [79] phi (signed byte) printf_number_buffer::padding#10 = (signed byte) printf_number_buffer::padding#1 [phi:printf_number_buffer::@21->printf_number_buffer::@1#0] -- register_copy 
    jmp __b1
    // printf_number_buffer::@1
  __b1:
    // [80] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_justify_left
    bne __b2
    jmp __b17
    // printf_number_buffer::@17
  __b17:
    // [81] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    bne __b2
    jmp __b16
    // printf_number_buffer::@16
  __b16:
    // [82] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@8 -- vbsc1_neq_vbsz1_then_la1 
    lda #0
    cmp.z padding
    bne __b8
    jmp __b2
    // printf_number_buffer::@8
  __b8:
    // [83] (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [84] call printf_padding 
    // [103] phi from printf_number_buffer::@8 to printf_padding [phi:printf_number_buffer::@8->printf_padding]
  printf_padding_from___b8:
    // [103] phi (byte) printf_padding::pad#5 = (byte) ' ' [phi:printf_number_buffer::@8->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#0 [phi:printf_number_buffer::@8->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __b2
    // printf_number_buffer::@2
  __b2:
    // [85] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z buffer_sign
    beq __b3
    jmp __b9
    // printf_number_buffer::@9
  __b9:
    // [86] (byte) cputc::c#2 ← (byte) printf_number_buffer::buffer_sign#10 -- vbuz1=vbuz2 
    lda.z buffer_sign
    sta.z cputc.c
    // [87] call cputc 
    // [110] phi from printf_number_buffer::@9 to cputc [phi:printf_number_buffer::@9->cputc]
  cputc_from___b9:
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#2 [phi:printf_number_buffer::@9->cputc#0] -- register_copy 
    jsr cputc
    jmp __b3
    // printf_number_buffer::@3
  __b3:
    // [88] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    beq __b4
    jmp __b18
    // printf_number_buffer::@18
  __b18:
    // [89] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10 -- vbsc1_neq_vbsz1_then_la1 
    lda #0
    cmp.z padding
    bne __b10
    jmp __b4
    // printf_number_buffer::@10
  __b10:
    // [90] (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [91] call printf_padding 
    // [103] phi from printf_number_buffer::@10 to printf_padding [phi:printf_number_buffer::@10->printf_padding]
  printf_padding_from___b10:
    // [103] phi (byte) printf_padding::pad#5 = (byte) '0' [phi:printf_number_buffer::@10->printf_padding#0] -- vbuz1=vbuc1 
    lda #'0'
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#1 [phi:printf_number_buffer::@10->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __b4
    // printf_number_buffer::@4
  __b4:
    // [92] if((byte) 0==(byte) printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_upper_case
    beq __b5_from___b4
    // [93] phi from printf_number_buffer::@4 to printf_number_buffer::@11 [phi:printf_number_buffer::@4->printf_number_buffer::@11]
  __b11_from___b4:
    jmp __b11
    // printf_number_buffer::@11
  __b11:
    // [94] call strupr 
    // [129] phi from printf_number_buffer::@11 to strupr [phi:printf_number_buffer::@11->strupr]
  strupr_from___b11:
    jsr strupr
    // [95] phi from printf_number_buffer::@11 printf_number_buffer::@4 to printf_number_buffer::@5 [phi:printf_number_buffer::@11/printf_number_buffer::@4->printf_number_buffer::@5]
  __b5_from___b11:
  __b5_from___b4:
    jmp __b5
    // printf_number_buffer::@5
  __b5:
    // [96] call cputs 
    // [121] phi from printf_number_buffer::@5 to cputs [phi:printf_number_buffer::@5->cputs]
  cputs_from___b5:
    jsr cputs
    jmp __b15
    // printf_number_buffer::@15
  __b15:
    // [97] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_justify_left
    beq __breturn
    jmp __b20
    // printf_number_buffer::@20
  __b20:
    // [98] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    bne __breturn
    jmp __b19
    // printf_number_buffer::@19
  __b19:
    // [99] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@12 -- vbsc1_neq_vbsz1_then_la1 
    lda #0
    cmp.z padding
    bne __b12
    jmp __breturn
    // printf_number_buffer::@12
  __b12:
    // [100] (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [101] call printf_padding 
    // [103] phi from printf_number_buffer::@12 to printf_padding [phi:printf_number_buffer::@12->printf_padding]
  printf_padding_from___b12:
    // [103] phi (byte) printf_padding::pad#5 = (byte) ' ' [phi:printf_number_buffer::@12->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#2 [phi:printf_number_buffer::@12->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __breturn
    // printf_number_buffer::@return
  __breturn:
    // [102] return 
    rts
}
  // printf_padding
// Print a padding char a number of times
// printf_padding(byte zp($17) pad, byte zp($16) length)
printf_padding: {
    .label i = $18
    .label length = $16
    .label pad = $17
    // [104] phi from printf_padding to printf_padding::@1 [phi:printf_padding->printf_padding::@1]
  __b1_from_printf_padding:
    // [104] phi (byte) printf_padding::i#2 = (byte) 0 [phi:printf_padding->printf_padding::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // printf_padding::@1
  __b1:
    // [105] if((byte) printf_padding::i#2<(byte) printf_padding::length#4) goto printf_padding::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2
    jmp __breturn
    // printf_padding::@return
  __breturn:
    // [106] return 
    rts
    // printf_padding::@2
  __b2:
    // [107] (byte) cputc::c#1 ← (byte) printf_padding::pad#5 -- vbuz1=vbuz2 
    lda.z pad
    sta.z cputc.c
    // [108] call cputc 
    // [110] phi from printf_padding::@2 to cputc [phi:printf_padding::@2->cputc]
  cputc_from___b2:
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#1 [phi:printf_padding::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b3
    // printf_padding::@3
  __b3:
    // [109] (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [104] phi from printf_padding::@3 to printf_padding::@1 [phi:printf_padding::@3->printf_padding::@1]
  __b1_from___b3:
    // [104] phi (byte) printf_padding::i#2 = (byte) printf_padding::i#1 [phi:printf_padding::@3->printf_padding::@1#0] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($19) c)
cputc: {
    .label c = $19
    // [111] if((byte) cputc::c#3==(byte) ' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3 -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z c
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [114] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [116] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [117] call cputln 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [118] return 
    rts
    // [119] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [120] call cputln 
    jsr cputln
    jmp __breturn
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp($1a) s)
cputs: {
    .label c = $4e
    .label s = $1a
    // [122] phi from cputs to cputs::@1 [phi:cputs->cputs::@1]
  __b1_from_cputs:
    // [122] phi (to_nomodify byte*) cputs::s#2 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:cputs->cputs::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z s
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z s+1
    jmp __b1
    // cputs::@1
  __b1:
    // [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (s),y
    sta.z c
    // [124] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [125] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z c
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [126] return 
    rts
    // cputs::@2
  __b2:
    // [127] (byte) cputc::c#0 ← (byte) cputs::c#1 -- vbuz1=vbuz2 
    lda.z c
    sta.z cputc.c
    // [128] call cputc 
    // [110] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
  cputc_from___b2:
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    // [122] phi from cputs::@2 to cputs::@1 [phi:cputs::@2->cputs::@1]
  __b1_from___b2:
    // [122] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#0 [phi:cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
}
  // strupr
// Converts a string to uppercase.
strupr: {
    .label str = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label __0 = $50
    .label src = $1c
    // [130] phi from strupr to strupr::@1 [phi:strupr->strupr::@1]
  __b1_from_strupr:
    // [130] phi (byte*) strupr::src#2 = (const byte*) strupr::str#0 [phi:strupr->strupr::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z src
    lda #>str
    sta.z src+1
    jmp __b1
    // strupr::@1
  __b1:
    // [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (src),y
    cmp #0
    bne __b2
    jmp __breturn
    // strupr::@return
  __breturn:
    // [132] return 
    rts
    // strupr::@2
  __b2:
    // [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta.z toupper.ch
    // [134] call toupper 
    jsr toupper
    // [135] (byte) toupper::return#3 ← (byte) toupper::return#2 -- vbuz1=vbuz2 
    lda.z toupper.return
    sta.z toupper.return_1
    jmp __b3
    // strupr::@3
  __b3:
    // [136] (byte~) strupr::$0 ← (byte) toupper::return#3 -- vbuz1=vbuz2 
    lda.z toupper.return_1
    sta.z __0
    // [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0 -- _deref_pbuz1=vbuz2 
    lda.z __0
    ldy #0
    sta (src),y
    // [138] (byte*) strupr::src#1 ← ++ (byte*) strupr::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    // [130] phi from strupr::@3 to strupr::@1 [phi:strupr::@3->strupr::@1]
  __b1_from___b3:
    // [130] phi (byte*) strupr::src#2 = (byte*) strupr::src#1 [phi:strupr::@3->strupr::@1#0] -- register_copy 
    jmp __b1
}
  // toupper
// Convert lowercase alphabet to uppercase
// Returns uppercase equivalent to c, if such value exists, else c remains unchanged
// toupper(byte zp($1e) ch)
toupper: {
    .label return = $1e
    .label ch = $1e
    .label return_1 = $4f
    // [139] if((byte) toupper::ch#0<(byte) 'a') goto toupper::@return -- vbuz1_lt_vbuc1_then_la1 
    lda.z ch
    cmp #'a'
    bcc __breturn_from_toupper
    jmp __b2
    // toupper::@2
  __b2:
    // [140] if((byte) toupper::ch#0<=(byte) 'z') goto toupper::@1 -- vbuz1_le_vbuc1_then_la1 
    lda #'z'
    cmp.z ch
    bcs __b1
    // [142] phi from toupper toupper::@1 toupper::@2 to toupper::@return [phi:toupper/toupper::@1/toupper::@2->toupper::@return]
  __breturn_from_toupper:
  __breturn_from___b1:
  __breturn_from___b2:
    // [142] phi (byte) toupper::return#2 = (byte) toupper::ch#0 [phi:toupper/toupper::@1/toupper::@2->toupper::@return#0] -- register_copy 
    jmp __breturn
    // toupper::@1
  __b1:
    // [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a' -- vbuz1=vbuz1_plus_vbuc1 
    lax.z return
    axs #-['A'-'a']
    stx.z return
    jmp __breturn_from___b1
    // toupper::@return
  __breturn:
    // [143] return 
    rts
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp($1f) str)
strlen: {
    .label len = $21
    .label str = $1f
    .label return = $4a
    // [145] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
  __b1_from_strlen:
    // [145] phi (word) strlen::len#2 = (word) 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    lda #>0
    sta.z len+1
    // [145] phi (byte*) strlen::str#2 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:strlen->strlen::@1#1] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str+1
    jmp __b1
    // strlen::@1
  __b1:
    // [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // strlen::@return
  __breturn:
    // [147] return 
    rts
    // strlen::@2
  __b2:
    // [148] (word) strlen::len#1 ← ++ (word) strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // [149] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [145] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
  __b1_from___b2:
    // [145] phi (word) strlen::len#2 = (word) strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [145] phi (byte*) strlen::str#2 = (byte*) strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp($24) value, byte* zp($52) buffer)
utoa: {
    .const max_digits = 4
    .label __10 = $54
    .label __11 = $51
    .label digit_value = $55
    .label buffer = $52
    .label digit = $23
    .label value = $24
    .label buffer_1 = $27
    .label started = $26
    // [151] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
  __b1_from_utoa:
    // [151] phi (byte*) utoa::buffer#11 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer_1
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer_1+1
    // [151] phi (byte) utoa::started#2 = (byte) 0 [phi:utoa->utoa::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [151] phi (word) utoa::value#2 = (const word) printf_uint::uvalue#0 [phi:utoa->utoa::@1#2] -- vwuz1=vwuc1 
    lda #<printf_uint.uvalue
    sta.z value
    lda #>printf_uint.uvalue
    sta.z value+1
    // [151] phi (byte) utoa::digit#2 = (byte) 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // utoa::@1
  __b1:
    // [152] if((byte) utoa::digit#2<(const byte) utoa::max_digits#2-(byte) 1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    jmp __b3
    // utoa::@3
  __b3:
    // [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2 -- vbuz1=_byte_vwuz2 
    lda.z value
    sta.z __11
    // [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __11
    lda DIGITS,y
    ldy #0
    sta (buffer_1),y
    // [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11 -- pbuz1=_inc_pbuz2 
    lda.z buffer_1
    clc
    adc #1
    sta.z buffer
    lda.z buffer_1+1
    adc #0
    sta.z buffer+1
    // [156] *((byte*) utoa::buffer#3) ← (byte) 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa::@return
  __breturn:
    // [157] return 
    rts
    // utoa::@2
  __b2:
    // [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1 -- vbuz1=vbuz2_rol_1 
    lda.z digit
    asl
    sta.z __10
    // [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10) -- vwuz1=pwuc1_derefidx_vbuz2 
    ldy.z __10
    lda RADIX_HEXADECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_HEXADECIMAL_VALUES+1,y
    sta.z digit_value+1
    // [160] if((byte) 0!=(byte) utoa::started#2) goto utoa::@5 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z started
    bne __b5
    jmp __b7
    // utoa::@7
  __b7:
    // [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [162] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
  __b4_from___b7:
    // [162] phi (byte*) utoa::buffer#14 = (byte*) utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [162] phi (byte) utoa::started#4 = (byte) utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [162] phi (word) utoa::value#6 = (word) utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    jmp __b4
    // utoa::@4
  __b4:
    // [163] (byte) utoa::digit#1 ← ++ (byte) utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [151] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
  __b1_from___b4:
    // [151] phi (byte*) utoa::buffer#11 = (byte*) utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [151] phi (byte) utoa::started#2 = (byte) utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [151] phi (word) utoa::value#2 = (word) utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [151] phi (byte) utoa::digit#2 = (byte) utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11 -- pbuz1=pbuz2 
    lda.z buffer_1
    sta.z utoa_append.buffer
    lda.z buffer_1+1
    sta.z utoa_append.buffer+1
    // [165] (word) utoa_append::value#0 ← (word) utoa::value#2 -- vwuz1=vwuz2 
    lda.z value
    sta.z utoa_append.value
    lda.z value+1
    sta.z utoa_append.value+1
    // [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0 -- vwuz1=vwuz2 
    lda.z digit_value
    sta.z utoa_append.sub
    lda.z digit_value+1
    sta.z utoa_append.sub+1
    // [167] call utoa_append 
    // [171] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
  utoa_append_from___b5:
    jsr utoa_append
    // [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2 -- vwuz1=vwuz2 
    lda.z utoa_append.value
    sta.z utoa_append.return
    lda.z utoa_append.value+1
    sta.z utoa_append.return+1
    jmp __b6
    // utoa::@6
  __b6:
    // [169] (word) utoa::value#0 ← (word) utoa_append::return#0 -- vwuz1=vwuz2 
    lda.z utoa_append.return
    sta.z value
    lda.z utoa_append.return+1
    sta.z value+1
    // [170] (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer_1
    bne !+
    inc.z buffer_1+1
  !:
    // [162] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
  __b4_from___b6:
    // [162] phi (byte*) utoa::buffer#14 = (byte*) utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [162] phi (byte) utoa::started#4 = (byte) 1 [phi:utoa::@6->utoa::@4#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [162] phi (word) utoa::value#6 = (word) utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp($57) buffer, word zp($29) value, word zp($59) sub)
utoa_append: {
    .label buffer = $57
    .label value = $29
    .label sub = $59
    .label return = $5b
    .label digit = $2b
    // [172] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
  __b1_from_utoa_append:
    // [172] phi (byte) utoa_append::digit#2 = (byte) 0 [phi:utoa_append->utoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [172] phi (word) utoa_append::value#2 = (word) utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    jmp __b1
    // utoa_append::@1
  __b1:
    // [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    jmp __b3
    // utoa_append::@3
  __b3:
    // [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa_append::@return
  __breturn:
    // [175] return 
    rts
    // utoa_append::@2
  __b2:
    // [176] (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [172] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
  __b1_from___b2:
    // [172] phi (byte) utoa_append::digit#2 = (byte) utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [172] phi (word) utoa_append::value#2 = (word) utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // printf_schar
// Print a signed char using a specific format
// printf_schar(signed byte zp($2f) value, byte zp($2c) format_sign_always, byte zp($2e) format_zero_padding, byte zp($2d) format_radix)
printf_schar: {
    .label value = $2f
    .label format_sign_always = $2c
    .label format_radix = $2d
    .label format_zero_padding = $2e
    // [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [180] if((signed byte) printf_schar::value#3<(signed byte) 0) goto printf_schar::@1 -- vbsz1_lt_0_then_la1 
    lda.z value
    bmi __b1
    jmp __b3
    // printf_schar::@3
  __b3:
    // [181] if((byte) 0==(byte) printf_schar::format_sign_always#2) goto printf_schar::@2 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_sign_always
    beq __b2_from___b3
    jmp __b4
    // printf_schar::@4
  __b4:
    // [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+' -- _deref_pbuc1=vbuc2 
    lda #'+'
    sta printf_buffer
    // [183] phi from printf_schar::@1 printf_schar::@3 printf_schar::@4 to printf_schar::@2 [phi:printf_schar::@1/printf_schar::@3/printf_schar::@4->printf_schar::@2]
  __b2_from___b1:
  __b2_from___b3:
  __b2_from___b4:
    // [183] phi (signed byte) printf_schar::value#5 = (signed byte) printf_schar::value#0 [phi:printf_schar::@1/printf_schar::@3/printf_schar::@4->printf_schar::@2#0] -- register_copy 
    jmp __b2
    // printf_schar::@2
  __b2:
    // [184] (byte) uctoa::value#1 ← (byte)(signed byte) printf_schar::value#5 -- vbuz1=vbuz2 
    lda.z value
    sta.z uctoa.value
    // [185] (byte) uctoa::radix#0 ← (byte) printf_schar::format_radix#2 -- vbuz1=vbuz2 
    lda.z format_radix
    sta.z uctoa.radix
    // [186] call uctoa 
    jsr uctoa
    jmp __b5
    // printf_schar::@5
  __b5:
    // [187] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [188] (byte) printf_number_buffer::format_zero_padding#1 ← (byte) printf_schar::format_zero_padding#2 -- vbuz1=vbuz2 
    lda.z format_zero_padding
    sta.z printf_number_buffer.format_zero_padding
    // [189] call printf_number_buffer 
  // Print using format
    // [66] phi from printf_schar::@5 to printf_number_buffer [phi:printf_schar::@5->printf_number_buffer]
  printf_number_buffer_from___b5:
    // [66] phi (byte) printf_number_buffer::format_upper_case#10 = (byte) 0 [phi:printf_schar::@5->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [66] phi (byte) printf_number_buffer::buffer_sign#10 = (byte) printf_number_buffer::buffer_sign#1 [phi:printf_schar::@5->printf_number_buffer#1] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_zero_padding#10 = (byte) printf_number_buffer::format_zero_padding#1 [phi:printf_schar::@5->printf_number_buffer#2] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_justify_left#10 = (byte) 0 [phi:printf_schar::@5->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_justify_left
    // [66] phi (byte) printf_number_buffer::format_min_length#2 = (byte) 6 [phi:printf_schar::@5->printf_number_buffer#4] -- vbuz1=vbuc1 
    lda #6
    sta.z printf_number_buffer.format_min_length
    jsr printf_number_buffer
    jmp __breturn
    // printf_schar::@return
  __breturn:
    // [190] return 
    rts
    // printf_schar::@1
  __b1:
    // [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3 -- vbsz1=_neg_vbsz1 
    lda.z value
    eor #$ff
    clc
    adc #1
    sta.z value
    // [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-' -- _deref_pbuc1=vbuc2 
    lda #'-'
    sta printf_buffer
    jmp __b2_from___b1
}
  // uctoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// uctoa(byte zp($34) value, byte* zp($5f) buffer, byte zp($5d) radix)
uctoa: {
    .label __4 = $5e
    .label digit_value = $61
    .label buffer = $5f
    .label digit = $33
    .label value = $34
    .label buffer_1 = $36
    .label radix = $5d
    .label started = $35
    .label max_digits = $30
    .label digit_values = $31
    // [193] if((byte) uctoa::radix#0==(const byte) DECIMAL) goto uctoa::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #DECIMAL
    cmp.z radix
    beq __b1_from_uctoa
    jmp __b2
    // uctoa::@2
  __b2:
    // [194] if((byte) uctoa::radix#0==(const byte) HEXADECIMAL) goto uctoa::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #HEXADECIMAL
    cmp.z radix
    beq __b1_from___b2
    jmp __b3
    // uctoa::@3
  __b3:
    // [195] if((byte) uctoa::radix#0==(const byte) OCTAL) goto uctoa::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #OCTAL
    cmp.z radix
    beq __b1_from___b3
    jmp __b4
    // uctoa::@4
  __b4:
    // [196] if((byte) uctoa::radix#0==(const byte) BINARY) goto uctoa::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #BINARY
    cmp.z radix
    beq __b1_from___b4
    jmp __b5
    // uctoa::@5
  __b5:
    // [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e' -- _deref_pbuc1=vbuc2 
    // Unknown radix
    lda #'e'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    // [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r' -- _deref_pbuc1=vbuc2 
    lda #'r'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
    // [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r' -- _deref_pbuc1=vbuc2 
    lda #'r'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
    // [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3
    jmp __breturn
    // uctoa::@return
  __breturn:
    // [201] return 
    rts
    // [202] phi from uctoa to uctoa::@1 [phi:uctoa->uctoa::@1]
  __b1_from_uctoa:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_DECIMAL_VALUES_CHAR [phi:uctoa->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_DECIMAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_DECIMAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 3 [phi:uctoa->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #3
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@2 to uctoa::@1 [phi:uctoa::@2->uctoa::@1]
  __b1_from___b2:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_HEXADECIMAL_VALUES_CHAR [phi:uctoa::@2->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_HEXADECIMAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_HEXADECIMAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 2 [phi:uctoa::@2->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #2
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@3 to uctoa::@1 [phi:uctoa::@3->uctoa::@1]
  __b1_from___b3:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_OCTAL_VALUES_CHAR [phi:uctoa::@3->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_OCTAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_OCTAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 3 [phi:uctoa::@3->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #3
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@4 to uctoa::@1 [phi:uctoa::@4->uctoa::@1]
  __b1_from___b4:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_BINARY_VALUES_CHAR [phi:uctoa::@4->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_BINARY_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_BINARY_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 8 [phi:uctoa::@4->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #8
    sta.z max_digits
    jmp __b1
    // uctoa::@1
  __b1:
    // [203] phi from uctoa::@1 to uctoa::@6 [phi:uctoa::@1->uctoa::@6]
  __b6_from___b1:
    // [203] phi (byte*) uctoa::buffer#11 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:uctoa::@1->uctoa::@6#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer_1
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer_1+1
    // [203] phi (byte) uctoa::started#2 = (byte) 0 [phi:uctoa::@1->uctoa::@6#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [203] phi (byte) uctoa::value#2 = (byte) uctoa::value#1 [phi:uctoa::@1->uctoa::@6#2] -- register_copy 
    // [203] phi (byte) uctoa::digit#2 = (byte) 0 [phi:uctoa::@1->uctoa::@6#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b6
    // uctoa::@6
  __b6:
    // [204] (byte~) uctoa::$4 ← (byte) uctoa::max_digits#7 - (byte) 1 -- vbuz1=vbuz2_minus_1 
    ldx.z max_digits
    dex
    stx.z __4
    // [205] if((byte) uctoa::digit#2<(byte~) uctoa::$4) goto uctoa::@7 -- vbuz1_lt_vbuz2_then_la1 
    lda.z digit
    cmp.z __4
    bcc __b7
    jmp __b8
    // uctoa::@8
  __b8:
    // [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z value
    lda DIGITS,y
    ldy #0
    sta (buffer_1),y
    // [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11 -- pbuz1=_inc_pbuz2 
    lda.z buffer_1
    clc
    adc #1
    sta.z buffer
    lda.z buffer_1+1
    adc #0
    sta.z buffer+1
    // [208] *((byte*) uctoa::buffer#3) ← (byte) 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // uctoa::@7
  __b7:
    // [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2) -- vbuz1=pbuz2_derefidx_vbuz3 
    ldy.z digit
    lda (digit_values),y
    sta.z digit_value
    // [210] if((byte) 0!=(byte) uctoa::started#2) goto uctoa::@10 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z started
    bne __b10
    jmp __b12
    // uctoa::@12
  __b12:
    // [211] if((byte) uctoa::value#2>=(byte) uctoa::digit_value#0) goto uctoa::@10 -- vbuz1_ge_vbuz2_then_la1 
    lda.z value
    cmp.z digit_value
    bcs __b10
    // [212] phi from uctoa::@12 to uctoa::@9 [phi:uctoa::@12->uctoa::@9]
  __b9_from___b12:
    // [212] phi (byte*) uctoa::buffer#14 = (byte*) uctoa::buffer#11 [phi:uctoa::@12->uctoa::@9#0] -- register_copy 
    // [212] phi (byte) uctoa::started#4 = (byte) uctoa::started#2 [phi:uctoa::@12->uctoa::@9#1] -- register_copy 
    // [212] phi (byte) uctoa::value#6 = (byte) uctoa::value#2 [phi:uctoa::@12->uctoa::@9#2] -- register_copy 
    jmp __b9
    // uctoa::@9
  __b9:
    // [213] (byte) uctoa::digit#1 ← ++ (byte) uctoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [203] phi from uctoa::@9 to uctoa::@6 [phi:uctoa::@9->uctoa::@6]
  __b6_from___b9:
    // [203] phi (byte*) uctoa::buffer#11 = (byte*) uctoa::buffer#14 [phi:uctoa::@9->uctoa::@6#0] -- register_copy 
    // [203] phi (byte) uctoa::started#2 = (byte) uctoa::started#4 [phi:uctoa::@9->uctoa::@6#1] -- register_copy 
    // [203] phi (byte) uctoa::value#2 = (byte) uctoa::value#6 [phi:uctoa::@9->uctoa::@6#2] -- register_copy 
    // [203] phi (byte) uctoa::digit#2 = (byte) uctoa::digit#1 [phi:uctoa::@9->uctoa::@6#3] -- register_copy 
    jmp __b6
    // uctoa::@10
  __b10:
    // [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11 -- pbuz1=pbuz2 
    lda.z buffer_1
    sta.z uctoa_append.buffer
    lda.z buffer_1+1
    sta.z uctoa_append.buffer+1
    // [215] (byte) uctoa_append::value#0 ← (byte) uctoa::value#2 -- vbuz1=vbuz2 
    lda.z value
    sta.z uctoa_append.value
    // [216] (byte) uctoa_append::sub#0 ← (byte) uctoa::digit_value#0 -- vbuz1=vbuz2 
    lda.z digit_value
    sta.z uctoa_append.sub
    // [217] call uctoa_append 
    // [221] phi from uctoa::@10 to uctoa_append [phi:uctoa::@10->uctoa_append]
  uctoa_append_from___b10:
    jsr uctoa_append
    // [218] (byte) uctoa_append::return#0 ← (byte) uctoa_append::value#2 -- vbuz1=vbuz2 
    lda.z uctoa_append.value
    sta.z uctoa_append.return
    jmp __b11
    // uctoa::@11
  __b11:
    // [219] (byte) uctoa::value#0 ← (byte) uctoa_append::return#0 -- vbuz1=vbuz2 
    lda.z uctoa_append.return
    sta.z value
    // [220] (byte*) uctoa::buffer#4 ← ++ (byte*) uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer_1
    bne !+
    inc.z buffer_1+1
  !:
    // [212] phi from uctoa::@11 to uctoa::@9 [phi:uctoa::@11->uctoa::@9]
  __b9_from___b11:
    // [212] phi (byte*) uctoa::buffer#14 = (byte*) uctoa::buffer#4 [phi:uctoa::@11->uctoa::@9#0] -- register_copy 
    // [212] phi (byte) uctoa::started#4 = (byte) 1 [phi:uctoa::@11->uctoa::@9#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [212] phi (byte) uctoa::value#6 = (byte) uctoa::value#0 [phi:uctoa::@11->uctoa::@9#2] -- register_copy 
    jmp __b9
}
  // uctoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// uctoa_append(byte* zp($62) buffer, byte zp($38) value, byte zp($64) sub)
uctoa_append: {
    .label buffer = $62
    .label value = $38
    .label sub = $64
    .label return = $65
    .label digit = $39
    // [222] phi from uctoa_append to uctoa_append::@1 [phi:uctoa_append->uctoa_append::@1]
  __b1_from_uctoa_append:
    // [222] phi (byte) uctoa_append::digit#2 = (byte) 0 [phi:uctoa_append->uctoa_append::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    // [222] phi (byte) uctoa_append::value#2 = (byte) uctoa_append::value#0 [phi:uctoa_append->uctoa_append::@1#1] -- register_copy 
    jmp __b1
    // uctoa_append::@1
  __b1:
    // [223] if((byte) uctoa_append::value#2>=(byte) uctoa_append::sub#0) goto uctoa_append::@2 -- vbuz1_ge_vbuz2_then_la1 
    lda.z value
    cmp.z sub
    bcs __b2
    jmp __b3
    // uctoa_append::@3
  __b3:
    // [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy.z digit
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    jmp __breturn
    // uctoa_append::@return
  __breturn:
    // [225] return 
    rts
    // uctoa_append::@2
  __b2:
    // [226] (byte) uctoa_append::digit#1 ← ++ (byte) uctoa_append::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0 -- vbuz1=vbuz1_minus_vbuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    // [222] phi from uctoa_append::@2 to uctoa_append::@1 [phi:uctoa_append::@2->uctoa_append::@1]
  __b1_from___b2:
    // [222] phi (byte) uctoa_append::digit#2 = (byte) uctoa_append::digit#1 [phi:uctoa_append::@2->uctoa_append::@1#0] -- register_copy 
    // [222] phi (byte) uctoa_append::value#2 = (byte) uctoa_append::value#1 [phi:uctoa_append::@2->uctoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label c = $3f
    .label line_text = $3b
    .label line_cols = $3d
    .label l = $3a
    // [229] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
  __b1_from_clrscr:
    // [229] phi (byte*) clrscr::line_cols#5 = (const nomodify byte*) COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [229] phi (byte*) clrscr::line_text#5 = (const nomodify byte*) DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [229] phi (byte) clrscr::l#2 = (byte) 0 [phi:clrscr->clrscr::@1#2] -- vbuz1=vbuc1 
    lda #0
    sta.z l
    jmp __b1
    // clrscr::@1
  __b1:
    // [230] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z l
    cmp #$19
    bcc __b3_from___b1
    jmp __b2
    // clrscr::@2
  __b2:
    // [231] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [232] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [235] return 
    rts
    // [236] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b3_from___b1:
    // [236] phi (byte) clrscr::c#2 = (byte) 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta.z c
    jmp __b3
    // clrscr::@3
  __b3:
    // [237] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z c
    cmp #$28
    bcc __b4
    jmp __b5
    // clrscr::@5
  __b5:
    // [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // [240] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2 -- vbuz1=_inc_vbuz1 
    inc.z l
    // [229] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
  __b1_from___b5:
    // [229] phi (byte*) clrscr::line_cols#5 = (byte*) clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [229] phi (byte*) clrscr::line_text#5 = (byte*) clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [229] phi (byte) clrscr::l#2 = (byte) clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #' '
    ldy.z c
    sta (line_text),y
    // [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z c
    sta (line_cols),y
    // [243] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2 -- vbuz1=_inc_vbuz1 
    inc.z c
    // [236] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
  __b3_from___b4:
    // [236] phi (byte) clrscr::c#2 = (byte) clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // File Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of binary digits
  RADIX_BINARY_VALUES_CHAR: .byte $80, $40, $20, $10, 8, 4, 2
  // Values of octal digits
  RADIX_OCTAL_VALUES_CHAR: .byte $40, 8
  // Values of decimal digits
  RADIX_DECIMAL_VALUES_CHAR: .byte $64, $a
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES_CHAR: .byte $10
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES: .word $1000, $100, $10
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] (byte) conio_cursor_x ← (byte) 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] (byte) conio_cursor_y ← (byte) 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:16 [ printf_number_buffer::format_justify_left#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:19 [ printf_number_buffer::format_upper_case#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:23 [ printf_padding::pad#5 ]
Removing always clobbered register reg byte a as potential for zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ]
Statement [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [25] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:4 [ memset::c#4 ]
Statement [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [48] *((byte*) memset::dst#2) ← (byte) memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:4 [ memset::c#4 ]
Removing always clobbered register reg byte y as potential for zp[1]:16 [ printf_number_buffer::format_justify_left#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:19 [ printf_number_buffer::format_upper_case#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:23 [ printf_padding::pad#5 ]
Removing always clobbered register reg byte y as potential for zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ]
Statement [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:6::printf_uint:19 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [70] (word) strlen::return#2 ← (word) strlen::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:15 [ printf_number_buffer::format_min_length#2 ]
Statement [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte y 
Statement [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] ( main:6::printf_uint:19::printf_number_buffer:64::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a reg byte y 
Statement [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2 [ strupr::src#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a reg byte y 
Statement [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2) [ strupr::src#2 toupper::ch#0 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0 [ strupr::src#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte y 
Statement [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a' [ toupper::return#0 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a 
Statement [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 [ printf_buffer strlen::len#2 strlen::str#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:11::printf_number_buffer:189::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:15::printf_number_buffer:189::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:15 [ printf_number_buffer::format_min_length#2 ]
Statement [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2 [ printf_buffer utoa::buffer#11 utoa::$11 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 utoa::$11 ] { }  ) always clobbers reg byte a 
Statement [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11) [ printf_buffer utoa::buffer#11 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { }  ) always clobbers reg byte a 
Statement [156] *((byte*) utoa::buffer#3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:38 [ utoa::started#2 utoa::started#4 ]
Statement [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10) [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [165] (word) utoa_append::value#0 ← (word) utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [169] (word) utoa::value#0 ← (word) utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { }  ) always clobbers reg byte a 
Statement [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:43 [ utoa_append::digit#2 utoa_append::digit#1 ]
Statement [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2) [ utoa_append::value#2 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Statement [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:47 [ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ]
Removing always clobbered register reg byte a as potential for zp[1]:44 [ printf_schar::format_sign_always#2 ]
Removing always clobbered register reg byte a as potential for zp[1]:45 [ printf_schar::format_radix#2 ]
Removing always clobbered register reg byte a as potential for zp[1]:46 [ printf_schar::format_zero_padding#2 ]
Statement [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+' [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  ) always clobbers reg byte a 
Statement [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  ) always clobbers reg byte a 
Statement [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-' [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  ) always clobbers reg byte a 
Statement [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2) [ printf_buffer uctoa::buffer#11 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#11 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#11 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:46 [ printf_schar::format_zero_padding#2 ]
Statement [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11 [ printf_buffer uctoa::buffer#3 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#3 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#3 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [208] *((byte*) uctoa::buffer#3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Statement [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2) [ printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:48 [ uctoa::max_digits#7 ]
Removing always clobbered register reg byte a as potential for zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:52 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:53 [ uctoa::started#2 uctoa::started#4 ]
Statement [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11 [ printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:97 [ uctoa::digit_value#0 ]
Statement [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2) [ uctoa_append::value#2 ] ( main:6::printf_schar:11::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:48 [ uctoa::max_digits#7 ]
Removing always clobbered register reg byte y as potential for zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:56 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:56 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
Statement [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0 [ uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] ( main:6::printf_schar:11::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:100 [ uctoa_append::sub#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:57 [ uctoa_append::digit#2 uctoa_append::digit#1 ]
Statement [231] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [232] (byte) conio_cursor_y ← (byte) 0 [ conio_cursor_x conio_cursor_y ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:58 [ clrscr::l#2 clrscr::l#1 ]
Statement [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:63 [ clrscr::c#2 clrscr::c#1 ]
Statement [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [1] (byte) conio_cursor_x ← (byte) 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] (byte) conio_cursor_y ← (byte) 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [25] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [48] *((byte*) memset::dst#2) ← (byte) memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:6::printf_uint:19 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [70] (word) strlen::return#2 ← (word) strlen::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte y 
Statement [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] ( main:6::printf_uint:19::printf_number_buffer:64::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a reg byte y 
Statement [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2 [ strupr::src#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a reg byte y 
Statement [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2) [ strupr::src#2 toupper::ch#0 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0 [ strupr::src#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte y 
Statement [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a' [ toupper::return#0 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a 
Statement [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 [ printf_buffer strlen::len#2 strlen::str#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:11::printf_number_buffer:189::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:15::printf_number_buffer:189::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2 [ printf_buffer utoa::buffer#11 utoa::$11 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 utoa::$11 ] { }  ) always clobbers reg byte a 
Statement [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11) [ printf_buffer utoa::buffer#11 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { }  ) always clobbers reg byte a 
Statement [156] *((byte*) utoa::buffer#3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { }  ) always clobbers reg byte a 
Statement [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10) [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [165] (word) utoa_append::value#0 ← (word) utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [169] (word) utoa::value#0 ← (word) utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { }  ) always clobbers reg byte a 
Statement [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2) [ utoa_append::value#2 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  ) always clobbers reg byte a 
Statement [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+' [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  ) always clobbers reg byte a 
Statement [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  ) always clobbers reg byte a 
Statement [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-' [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  ) always clobbers reg byte a 
Statement [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2) [ printf_buffer uctoa::buffer#11 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#11 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#11 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Statement [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11 [ printf_buffer uctoa::buffer#3 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#3 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#3 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [208] *((byte*) uctoa::buffer#3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Statement [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2) [ printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:52 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:53 [ uctoa::started#2 uctoa::started#4 ]
Statement [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11 [ printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2) [ uctoa_append::value#2 ] ( main:6::printf_schar:11::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0 [ uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] ( main:6::printf_schar:11::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [231] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [232] (byte) conio_cursor_y ← (byte) 0 [ conio_cursor_x conio_cursor_y ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [1] (byte) conio_cursor_x ← (byte) 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] (byte) conio_cursor_y ← (byte) 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [25] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 [ conio_cursor_y conio_line_text conio_line_color ] ( main:6::cputln:13::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:17::cscroll:27 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::cputln:21::cscroll:27 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [48] *((byte*) memset::dst#2) ← (byte) memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:6::cputln:13::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:35 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:35 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:35 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:35 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:17::cscroll:27::memset:37 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::cputln:21::cscroll:27::memset:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memset:37 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memset:37 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:6::cputln:13::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:31 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:31 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:31 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:31 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::cputln:13::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:17::cscroll:27::memcpy:33 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::cputln:21::cscroll:27::memcpy:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:117::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:117::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_uint:19::printf_number_buffer:64::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108::cputln:120::cscroll:27::memcpy:33 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128::cputln:120::cscroll:27::memcpy:33 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:6::printf_uint:19 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [70] (word) strlen::return#2 ← (word) strlen::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 strlen::return#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::$19 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::len#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] ( main:6::printf_uint:19::printf_number_buffer:64 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a 
Statement [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte y 
Statement [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::printf_uint:19::printf_number_buffer:64::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#0 } }  main:6::printf_schar:11::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputc:87 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { cputc::c#2 = cputc::c#3 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:84::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#0 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:91::cputc:108 [ printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_upper_case#10 printf_number_buffer::padding#10 printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#1 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:11::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_schar:15::printf_number_buffer:189::printf_padding:101::cputc:108 [ printf_buffer printf_padding::length#4 printf_padding::pad#5 printf_padding::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { printf_padding::length#2 = printf_padding::length#4 } { cputc::c#1 = cputc::c#3 printf_padding::pad#5 } }  main:6::printf_uint:19::printf_number_buffer:64::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96::cputc:128 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 printf_buffer cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { cputc::c#0 = cputc::c#3 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] ( main:6::printf_uint:19::printf_number_buffer:64::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::cputs:96 [ printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer cputs::s#2 cputs::c#1 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a reg byte y 
Statement [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2 [ strupr::src#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte a reg byte y 
Statement [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2) [ strupr::src#2 toupper::ch#0 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::ch#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a reg byte y 
Statement [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0 [ strupr::src#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } }  ) always clobbers reg byte y 
Statement [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a' [ toupper::return#0 ] ( main:6::printf_uint:19::printf_number_buffer:64::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:11::printf_number_buffer:189::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  main:6::printf_schar:15::printf_number_buffer:189::strupr:94::toupper:134 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::padding#10 strupr::src#2 toupper::return#0 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { toupper::return#2 = toupper::return#3 } }  ) always clobbers reg byte a 
Statement [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 [ printf_buffer strlen::len#2 strlen::str#2 ] ( main:6::printf_uint:19::printf_number_buffer:64::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::buffer_sign#0 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:11::printf_number_buffer:189::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  main:6::printf_schar:15::printf_number_buffer:189::strlen:69 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_number_buffer::format_min_length#2 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_zero_padding#10 printf_number_buffer::buffer_sign#10 printf_number_buffer::format_upper_case#10 printf_buffer strlen::len#2 strlen::str#2 ] { { printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 printf_schar::format_zero_padding#2 } { printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 } { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2 [ printf_buffer utoa::buffer#11 utoa::$11 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 utoa::$11 ] { }  ) always clobbers reg byte a 
Statement [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11) [ printf_buffer utoa::buffer#11 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { }  ) always clobbers reg byte a 
Statement [156] *((byte*) utoa::buffer#3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { }  ) always clobbers reg byte a 
Statement [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10) [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { }  ) always clobbers reg byte a 
Statement [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [165] (word) utoa_append::value#0 ← (word) utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [169] (word) utoa::value#0 ← (word) utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:6::printf_uint:19::utoa:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { }  ) always clobbers reg byte a 
Statement [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2) [ utoa_append::value#2 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:6::printf_uint:19::utoa:62::utoa_append:167 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_sign_always#2 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  ) always clobbers reg byte a 
Statement [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+' [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::value#3 printf_schar::format_radix#2 printf_schar::format_zero_padding#2 ] { }  ) always clobbers reg byte a 
Statement [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  ) always clobbers reg byte a 
Statement [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-' [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] ( main:6::printf_schar:11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  main:6::printf_schar:15 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer printf_schar::format_radix#2 printf_schar::format_zero_padding#2 printf_schar::value#0 ] { }  ) always clobbers reg byte a 
Statement [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r' [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2) [ printf_buffer uctoa::buffer#11 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#11 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#11 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Statement [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11 [ printf_buffer uctoa::buffer#3 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#3 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::buffer#3 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a 
Statement [208] *((byte*) uctoa::buffer#3) ← (byte) 0 [ printf_buffer ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Statement [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2) [ printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::started#2 uctoa::buffer#11 uctoa::digit_value#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } }  ) always clobbers reg byte a reg byte y 
Statement [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11 [ printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] ( main:6::printf_schar:11::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::value#2 uctoa::buffer#11 uctoa::digit_value#0 uctoa_append::buffer#0 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2) [ uctoa_append::value#2 ] ( main:6::printf_schar:11::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::value#2 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0 [ uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] ( main:6::printf_schar:11::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  main:6::printf_schar:15::uctoa:186::uctoa_append:217 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_schar::format_zero_padding#2 printf_buffer uctoa::max_digits#7 uctoa::digit_values#8 uctoa::digit#2 uctoa::buffer#11 uctoa_append::buffer#0 uctoa_append::sub#0 uctoa_append::value#1 uctoa_append::digit#1 ] { { uctoa::radix#0 = printf_schar::format_radix#2 } { uctoa_append::buffer#0 = uctoa::buffer#11 } { uctoa_append::value#0 = uctoa::value#2 } { uctoa_append::sub#0 = uctoa::digit_value#0 } { uctoa_append::return#0 = uctoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [231] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [232] (byte) conio_cursor_y ← (byte) 0 [ conio_cursor_x conio_cursor_y ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:6::clrscr:9 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:6::clrscr:9 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Potential registers zp[2]:2 [ memset::str#3 ] : zp[2]:2 , 
Potential registers zp[1]:4 [ memset::c#4 ] : zp[1]:4 , reg byte x , 
Potential registers zp[2]:5 [ memset::dst#2 memset::dst#4 memset::dst#1 ] : zp[2]:5 , 
Potential registers zp[2]:7 [ memcpy::source#2 ] : zp[2]:7 , 
Potential registers zp[2]:9 [ memcpy::destination#2 ] : zp[2]:9 , 
Potential registers zp[2]:11 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] : zp[2]:11 , 
Potential registers zp[2]:13 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] : zp[2]:13 , 
Potential registers zp[1]:15 [ printf_number_buffer::format_min_length#2 ] : zp[1]:15 , reg byte x , 
Potential registers zp[1]:16 [ printf_number_buffer::format_justify_left#10 ] : zp[1]:16 , reg byte x , 
Potential registers zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ] : zp[1]:17 , reg byte x , 
Potential registers zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] : zp[1]:18 , reg byte x , 
Potential registers zp[1]:19 [ printf_number_buffer::format_upper_case#10 ] : zp[1]:19 , reg byte x , 
Potential registers zp[1]:20 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] : zp[1]:20 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] : zp[1]:21 , reg byte x , 
Potential registers zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] : zp[1]:22 , reg byte x , 
Potential registers zp[1]:23 [ printf_padding::pad#5 ] : zp[1]:23 , reg byte x , 
Potential registers zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ] : zp[1]:24 , reg byte x , 
Potential registers zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ] : zp[1]:25 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:26 [ cputs::s#2 cputs::s#0 ] : zp[2]:26 , 
Potential registers zp[2]:28 [ strupr::src#2 strupr::src#1 ] : zp[2]:28 , 
Potential registers zp[1]:30 [ toupper::return#2 toupper::return#0 toupper::ch#0 ] : zp[1]:30 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:31 [ strlen::str#2 strlen::str#0 ] : zp[2]:31 , 
Potential registers zp[2]:33 [ strlen::len#2 strlen::len#1 ] : zp[2]:33 , 
Potential registers zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] : zp[1]:35 , reg byte x , 
Potential registers zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 ] : zp[2]:36 , 
Potential registers zp[1]:38 [ utoa::started#2 utoa::started#4 ] : zp[1]:38 , reg byte x , reg byte y , 
Potential registers zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] : zp[2]:39 , 
Potential registers zp[2]:41 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] : zp[2]:41 , 
Potential registers zp[1]:43 [ utoa_append::digit#2 utoa_append::digit#1 ] : zp[1]:43 , reg byte x , reg byte y , 
Potential registers zp[1]:44 [ printf_schar::format_sign_always#2 ] : zp[1]:44 , reg byte x , reg byte y , 
Potential registers zp[1]:45 [ printf_schar::format_radix#2 ] : zp[1]:45 , reg byte x , reg byte y , 
Potential registers zp[1]:46 [ printf_schar::format_zero_padding#2 ] : zp[1]:46 , reg byte x , 
Potential registers zp[1]:47 [ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ] : zp[1]:47 , reg byte x , reg byte y , 
Potential registers zp[1]:48 [ uctoa::max_digits#7 ] : zp[1]:48 , reg byte x , 
Potential registers zp[2]:49 [ uctoa::digit_values#8 ] : zp[2]:49 , 
Potential registers zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ] : zp[1]:51 , reg byte x , 
Potential registers zp[1]:52 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ] : zp[1]:52 , reg byte x , 
Potential registers zp[1]:53 [ uctoa::started#2 uctoa::started#4 ] : zp[1]:53 , reg byte x , 
Potential registers zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] : zp[2]:54 , 
Potential registers zp[1]:56 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] : zp[1]:56 , reg byte x , 
Potential registers zp[1]:57 [ uctoa_append::digit#2 uctoa_append::digit#1 ] : zp[1]:57 , reg byte x , reg byte y , 
Potential registers zp[1]:58 [ clrscr::l#2 clrscr::l#1 ] : zp[1]:58 , reg byte x , reg byte y , 
Potential registers zp[2]:59 [ clrscr::line_text#5 clrscr::line_text#1 ] : zp[2]:59 , 
Potential registers zp[2]:61 [ clrscr::line_cols#5 clrscr::line_cols#1 ] : zp[2]:61 , 
Potential registers zp[1]:63 [ clrscr::c#2 clrscr::c#1 ] : zp[1]:63 , reg byte x , reg byte y , 
Potential registers zp[1]:64 [ conio_cursor_x ] : zp[1]:64 , 
Potential registers zp[1]:65 [ conio_cursor_y ] : zp[1]:65 , 
Potential registers zp[2]:66 [ conio_line_text ] : zp[2]:66 , 
Potential registers zp[2]:68 [ conio_line_color ] : zp[2]:68 , 
Potential registers zp[2]:70 [ memset::end#0 ] : zp[2]:70 , 
Potential registers zp[2]:72 [ memcpy::src_end#0 ] : zp[2]:72 , 
Potential registers zp[2]:74 [ strlen::return#2 ] : zp[2]:74 , 
Potential registers zp[2]:76 [ printf_number_buffer::$19 ] : zp[2]:76 , 
Potential registers zp[1]:78 [ cputs::c#1 ] : zp[1]:78 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:79 [ toupper::return#3 ] : zp[1]:79 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:80 [ strupr::$0 ] : zp[1]:80 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:81 [ utoa::$11 ] : zp[1]:81 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:82 [ utoa::buffer#3 ] : zp[2]:82 , 
Potential registers zp[1]:84 [ utoa::$10 ] : zp[1]:84 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:85 [ utoa::digit_value#0 ] : zp[2]:85 , 
Potential registers zp[2]:87 [ utoa_append::buffer#0 ] : zp[2]:87 , 
Potential registers zp[2]:89 [ utoa_append::sub#0 ] : zp[2]:89 , 
Potential registers zp[2]:91 [ utoa_append::return#0 ] : zp[2]:91 , 
Potential registers zp[1]:93 [ uctoa::radix#0 ] : zp[1]:93 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:94 [ uctoa::$4 ] : zp[1]:94 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:95 [ uctoa::buffer#3 ] : zp[2]:95 , 
Potential registers zp[1]:97 [ uctoa::digit_value#0 ] : zp[1]:97 , reg byte x , reg byte y , 
Potential registers zp[2]:98 [ uctoa_append::buffer#0 ] : zp[2]:98 , 
Potential registers zp[1]:100 [ uctoa_append::sub#0 ] : zp[1]:100 , reg byte x , reg byte y , 
Potential registers zp[1]:101 [ uctoa_append::return#0 ] : zp[1]:101 , reg byte a , reg byte x , reg byte y , 
Potential registers mem[12] [ printf_buffer ] : mem[12] , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy] 301,250,000,004.25: zp[2]:11 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] 202,333,333,337.67: zp[2]:13 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] 12,625,000,000.25: zp[2]:72 [ memcpy::src_end#0 ] 0: zp[2]:7 [ memcpy::source#2 ] 0: zp[2]:9 [ memcpy::destination#2 ] 
Uplift Scope [memset] 335,666,666,672.33: zp[2]:5 [ memset::dst#2 memset::dst#4 memset::dst#1 ] 16,833,333,333.67: zp[2]:70 [ memset::end#0 ] 14,285,714,285.86: zp[1]:4 [ memset::c#4 ] 0: zp[2]:2 [ memset::str#3 ] 
Uplift Scope [uctoa_append] 25,055,003.5: zp[1]:56 [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] 20,050,002.5: zp[1]:57 [ uctoa_append::digit#2 uctoa_append::digit#1 ] 3,335,000.5: zp[1]:100 [ uctoa_append::sub#0 ] 20,002: zp[1]:101 [ uctoa_append::return#0 ] 13,750.25: zp[2]:98 [ uctoa_append::buffer#0 ] 
Uplift Scope [utoa_append] 25,055,003.5: zp[2]:41 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] 20,050,002.5: zp[1]:43 [ utoa_append::digit#2 utoa_append::digit#1 ] 3,335,000.5: zp[2]:89 [ utoa_append::sub#0 ] 20,002: zp[2]:91 [ utoa_append::return#0 ] 13,750.25: zp[2]:87 [ utoa_append::buffer#0 ] 
Uplift Scope [] 2,689,076.54: zp[1]:65 [ conio_cursor_y ] 1,888,889.81: zp[2]:68 [ conio_line_color ] 1,872,882.27: zp[2]:66 [ conio_line_text ] 164,836.36: zp[1]:64 [ conio_cursor_x ] 0: mem[12] [ printf_buffer ] 
Uplift Scope [toupper] 4,733,338.67: zp[1]:30 [ toupper::return#2 toupper::return#0 toupper::ch#0 ] 200,002: zp[1]:79 [ toupper::return#3 ] 
Uplift Scope [cputc] 1,502,508.5: zp[1]:25 [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ] 
Uplift Scope [strupr] 271,431.29: zp[2]:28 [ strupr::src#2 strupr::src#1 ] 200,002: zp[1]:80 [ strupr::$0 ] 
Uplift Scope [strlen] 300,003: zp[2]:31 [ strlen::str#2 strlen::str#0 ] 150,251.75: zp[2]:33 [ strlen::len#2 strlen::len#1 ] 2,002: zp[2]:74 [ strlen::return#2 ] 
Uplift Scope [printf_padding] 275,002.75: zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ] 23,173.33: zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] 16,666.83: zp[1]:23 [ printf_padding::pad#5 ] 
Uplift Scope [cputs] 200,002: zp[2]:26 [ cputs::s#2 cputs::s#0 ] 100,001: zp[1]:78 [ cputs::c#1 ] 
Uplift Scope [uctoa] 38,234.73: zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] 31,160.79: zp[1]:52 [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ] 22,859.43: zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ] 20,002: zp[1]:94 [ uctoa::$4 ] 15,001.5: zp[1]:53 [ uctoa::started#2 uctoa::started#4 ] 6,000.6: zp[1]:97 [ uctoa::digit_value#0 ] 2,002: zp[2]:95 [ uctoa::buffer#3 ] 1,026.25: zp[1]:93 [ uctoa::radix#0 ] 625.06: zp[1]:48 [ uctoa::max_digits#7 ] 625.06: zp[2]:49 [ uctoa::digit_values#8 ] 
Uplift Scope [utoa] 38,003.93: zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] 30,717.36: zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 ] 22,859.43: zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] 20,002: zp[1]:84 [ utoa::$10 ] 15,001.5: zp[1]:38 [ utoa::started#2 utoa::started#4 ] 6,000.6: zp[2]:85 [ utoa::digit_value#0 ] 2,002: zp[1]:81 [ utoa::$11 ] 2,002: zp[2]:82 [ utoa::buffer#3 ] 
Uplift Scope [clrscr] 32,503.25: zp[1]:63 [ clrscr::c#2 clrscr::c#1 ] 2,501.38: zp[2]:61 [ clrscr::line_cols#5 clrscr::line_cols#1 ] 2,382.05: zp[2]:59 [ clrscr::line_text#5 clrscr::line_text#1 ] 2,335.67: zp[1]:58 [ clrscr::l#2 clrscr::l#1 ] 
Uplift Scope [printf_number_buffer] 6,506.5: zp[1]:20 [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] 1,191.67: zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] 1,001: zp[2]:76 [ printf_number_buffer::$19 ] 463.25: zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] 299: zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ] 100.1: zp[1]:15 [ printf_number_buffer::format_min_length#2 ] 64.58: zp[1]:16 [ printf_number_buffer::format_justify_left#10 ] 38.5: zp[1]:19 [ printf_number_buffer::format_upper_case#10 ] 
Uplift Scope [printf_schar] 484.8: zp[1]:47 [ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ] 33.67: zp[1]:44 [ printf_schar::format_sign_always#2 ] 11.22: zp[1]:45 [ printf_schar::format_radix#2 ] 8.42: zp[1]:46 [ printf_schar::format_zero_padding#2 ] 
Uplift Scope [RADIX] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [MOS6569_VICII] 
Uplift Scope [MOS6581_SID] 
Uplift Scope [cputln] 
Uplift Scope [cscroll] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_format_string] 
Uplift Scope [printf_uint] 
Uplift Scope [main] 
Uplift Scope [_start] 

Uplifting [memcpy] best 34278 combination zp[2]:11 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] zp[2]:13 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] zp[2]:72 [ memcpy::src_end#0 ] zp[2]:7 [ memcpy::source#2 ] zp[2]:9 [ memcpy::destination#2 ] 
Uplifting [memset] best 34172 combination zp[2]:5 [ memset::dst#2 memset::dst#4 memset::dst#1 ] zp[2]:70 [ memset::end#0 ] reg byte x [ memset::c#4 ] zp[2]:2 [ memset::str#3 ] 
Uplifting [uctoa_append] best 32949 combination reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ] reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ] zp[1]:100 [ uctoa_append::sub#0 ] reg byte x [ uctoa_append::return#0 ] zp[2]:98 [ uctoa_append::buffer#0 ] 
Uplifting [utoa_append] best 32346 combination zp[2]:41 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ] zp[2]:89 [ utoa_append::sub#0 ] zp[2]:91 [ utoa_append::return#0 ] zp[2]:87 [ utoa_append::buffer#0 ] 
Uplifting [] best 32346 combination zp[1]:65 [ conio_cursor_y ] zp[2]:68 [ conio_line_color ] zp[2]:66 [ conio_line_text ] zp[1]:64 [ conio_cursor_x ] mem[12] [ printf_buffer ] 
Uplifting [toupper] best 32219 combination reg byte a [ toupper::return#2 toupper::return#0 toupper::ch#0 ] reg byte a [ toupper::return#3 ] 
Uplifting [cputc] best 32150 combination reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ] 
Uplifting [strupr] best 32090 combination zp[2]:28 [ strupr::src#2 strupr::src#1 ] reg byte a [ strupr::$0 ] 
Uplifting [strlen] best 32090 combination zp[2]:31 [ strlen::str#2 strlen::str#0 ] zp[2]:33 [ strlen::len#2 strlen::len#1 ] zp[2]:74 [ strlen::return#2 ] 
Uplifting [printf_padding] best 32090 combination zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ] zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] zp[1]:23 [ printf_padding::pad#5 ] 
Uplifting [cputs] best 32000 combination zp[2]:26 [ cputs::s#2 cputs::s#0 ] reg byte a [ cputs::c#1 ] 
Uplifting [uctoa] best 31879 combination zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ] zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ] reg byte a [ uctoa::$4 ] zp[1]:53 [ uctoa::started#2 uctoa::started#4 ] reg byte y [ uctoa::digit_value#0 ] zp[2]:95 [ uctoa::buffer#3 ] zp[1]:93 [ uctoa::radix#0 ] zp[1]:48 [ uctoa::max_digits#7 ] zp[2]:49 [ uctoa::digit_values#8 ] 
Limited combination testing to 100 combinations of 768 possible.
Uplifting [utoa] best 31745 combination zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 ] zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] reg byte a [ utoa::$10 ] reg byte x [ utoa::started#2 utoa::started#4 ] zp[2]:85 [ utoa::digit_value#0 ] reg byte a [ utoa::$11 ] zp[2]:82 [ utoa::buffer#3 ] 
Uplifting [clrscr] best 30155 combination reg byte y [ clrscr::c#2 clrscr::c#1 ] zp[2]:61 [ clrscr::line_cols#5 clrscr::line_cols#1 ] zp[2]:59 [ clrscr::line_text#5 clrscr::line_text#1 ] reg byte x [ clrscr::l#2 clrscr::l#1 ] 
Uplifting [printf_number_buffer] best 30144 combination reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ] zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] zp[2]:76 [ printf_number_buffer::$19 ] zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ] reg byte x [ printf_number_buffer::format_min_length#2 ] zp[1]:16 [ printf_number_buffer::format_justify_left#10 ] zp[1]:19 [ printf_number_buffer::format_upper_case#10 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [printf_schar] best 30123 combination reg byte x [ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ] reg byte y [ printf_schar::format_sign_always#2 ] zp[1]:45 [ printf_schar::format_radix#2 ] zp[1]:46 [ printf_schar::format_zero_padding#2 ] 
Uplifting [RADIX] best 30123 combination 
Uplifting [MOS6526_CIA] best 30123 combination 
Uplifting [MOS6569_VICII] best 30123 combination 
Uplifting [MOS6581_SID] best 30123 combination 
Uplifting [cputln] best 30123 combination 
Uplifting [cscroll] best 30123 combination 
Uplifting [printf_format_number] best 30123 combination 
Uplifting [printf_buffer_number] best 30123 combination 
Uplifting [printf_format_string] best 30123 combination 
Uplifting [printf_uint] best 30123 combination 
Uplifting [main] best 30123 combination 
Uplifting [_start] best 30123 combination 
Attempting to uplift remaining variables inzp[1]:100 [ uctoa_append::sub#0 ]
Uplifting [uctoa_append] best 30123 combination zp[1]:100 [ uctoa_append::sub#0 ] 
Attempting to uplift remaining variables inzp[1]:65 [ conio_cursor_y ]
Uplifting [] best 30123 combination zp[1]:65 [ conio_cursor_y ] 
Attempting to uplift remaining variables inzp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ]
Uplifting [printf_padding] best 30123 combination zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ] 
Attempting to uplift remaining variables inzp[1]:64 [ conio_cursor_x ]
Uplifting [] best 30123 combination zp[1]:64 [ conio_cursor_x ] 
Attempting to uplift remaining variables inzp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Uplifting [printf_padding] best 30123 combination zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] 
Attempting to uplift remaining variables inzp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Uplifting [utoa] best 30123 combination zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] 
Attempting to uplift remaining variables inzp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ]
Uplifting [uctoa] best 30123 combination zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ] 
Attempting to uplift remaining variables inzp[1]:23 [ printf_padding::pad#5 ]
Uplifting [printf_padding] best 30123 combination zp[1]:23 [ printf_padding::pad#5 ] 
Attempting to uplift remaining variables inzp[1]:53 [ uctoa::started#2 uctoa::started#4 ]
Uplifting [uctoa] best 30123 combination zp[1]:53 [ uctoa::started#2 uctoa::started#4 ] 
Attempting to uplift remaining variables inzp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Uplifting [printf_number_buffer] best 30123 combination zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] 
Attempting to uplift remaining variables inzp[1]:93 [ uctoa::radix#0 ]
Uplifting [uctoa] best 30108 combination reg byte a [ uctoa::radix#0 ] 
Attempting to uplift remaining variables inzp[1]:48 [ uctoa::max_digits#7 ]
Uplifting [uctoa] best 30108 combination zp[1]:48 [ uctoa::max_digits#7 ] 
Attempting to uplift remaining variables inzp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Uplifting [printf_number_buffer] best 30108 combination zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] 
Attempting to uplift remaining variables inzp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ]
Uplifting [printf_number_buffer] best 30108 combination zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ] 
Attempting to uplift remaining variables inzp[1]:16 [ printf_number_buffer::format_justify_left#10 ]
Uplifting [printf_number_buffer] best 30108 combination zp[1]:16 [ printf_number_buffer::format_justify_left#10 ] 
Attempting to uplift remaining variables inzp[1]:19 [ printf_number_buffer::format_upper_case#10 ]
Uplifting [printf_number_buffer] best 30108 combination zp[1]:19 [ printf_number_buffer::format_upper_case#10 ] 
Attempting to uplift remaining variables inzp[1]:45 [ printf_schar::format_radix#2 ]
Uplifting [printf_schar] best 30108 combination zp[1]:45 [ printf_schar::format_radix#2 ] 
Attempting to uplift remaining variables inzp[1]:46 [ printf_schar::format_zero_padding#2 ]
Uplifting [printf_schar] best 30108 combination zp[1]:46 [ printf_schar::format_zero_padding#2 ] 
Coalescing zero page register [ zp[2]:2 [ memset::str#3 ] ] with [ zp[2]:5 [ memset::dst#2 memset::dst#4 memset::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:7 [ memcpy::source#2 ] ] with [ zp[2]:11 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:9 [ memcpy::destination#2 ] ] with [ zp[2]:13 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[1]:17 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 ] ] with [ zp[1]:46 [ printf_schar::format_zero_padding#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:33 [ strlen::len#2 strlen::len#1 ] ] with [ zp[2]:74 [ strlen::return#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 ] ] with [ zp[2]:41 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] with [ zp[2]:91 [ utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] ] with [ zp[2]:82 [ utoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 ] ] with [ zp[2]:87 [ utoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 ] ] with [ zp[2]:95 [ uctoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 ] ] with [ zp[2]:98 [ uctoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:85 [ utoa::digit_value#0 ] ] with [ zp[2]:89 [ utoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:33 [ strlen::len#2 strlen::len#1 strlen::return#2 ] ] with [ zp[2]:76 [ printf_number_buffer::$19 ] ] - score: 1
Coalescing zero page register [ zp[2]:7 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] with [ zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ] ]
Coalescing zero page register [ zp[2]:28 [ strupr::src#2 strupr::src#1 ] ] with [ zp[2]:9 [ memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ]
Coalescing zero page register [ zp[2]:31 [ strlen::str#2 strlen::str#0 ] ] with [ zp[2]:26 [ cputs::s#2 cputs::s#0 ] ]
Coalescing zero page register [ zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] ] with [ zp[1]:16 [ printf_number_buffer::format_justify_left#10 ] ]
Coalescing zero page register [ zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ] ] with [ zp[2]:33 [ strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ] ]
Coalescing zero page register [ zp[1]:45 [ printf_schar::format_radix#2 ] ] with [ zp[1]:18 [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ] ]
Coalescing zero page register [ zp[1]:48 [ uctoa::max_digits#7 ] ] with [ zp[1]:19 [ printf_number_buffer::format_upper_case#10 ] ]
Coalescing zero page register [ zp[2]:49 [ uctoa::digit_values#8 ] ] with [ zp[2]:39 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ]
Coalescing zero page register [ zp[1]:51 [ uctoa::digit#2 uctoa::digit#1 ] ] with [ zp[1]:21 [ printf_number_buffer::padding#10 printf_number_buffer::padding#1 ] ]
Coalescing zero page register [ zp[1]:53 [ uctoa::started#2 uctoa::started#4 ] ] with [ zp[1]:22 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ] ]
Coalescing zero page register [ zp[2]:59 [ clrscr::line_text#5 clrscr::line_text#1 ] ] with [ zp[2]:54 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 ] ]
Coalescing zero page register [ zp[2]:66 [ conio_line_text ] ] with [ zp[2]:61 [ clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Coalescing zero page register [ zp[2]:72 [ memcpy::src_end#0 ] ] with [ zp[2]:70 [ memset::end#0 ] ]
Coalescing zero page register [ zp[1]:100 [ uctoa_append::sub#0 ] ] with [ zp[1]:23 [ printf_padding::pad#5 ] ]
Coalescing zero page register [ zp[2]:36 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 ] ] with [ zp[2]:7 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ] ]
Coalescing zero page register [ zp[2]:49 [ uctoa::digit_values#8 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ] with [ zp[2]:28 [ strupr::src#2 strupr::src#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ]
Coalescing zero page register [ zp[2]:59 [ clrscr::line_text#5 clrscr::line_text#1 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 ] ] with [ zp[2]:31 [ strlen::str#2 strlen::str#0 cputs::s#2 cputs::s#0 ] ]
Coalescing zero page register [ zp[2]:85 [ utoa::digit_value#0 utoa_append::sub#0 ] ] with [ zp[2]:72 [ memcpy::src_end#0 memset::end#0 ] ]
Allocated (was zp[1]:17) zp[1]:2 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 printf_schar::format_zero_padding#2 ]
Allocated (was zp[1]:24) zp[1]:3 [ printf_padding::i#2 printf_padding::i#1 ]
Allocated (was zp[1]:35) zp[1]:4 [ utoa::digit#2 utoa::digit#1 printf_number_buffer::format_justify_left#10 ]
Allocated (was zp[2]:36) zp[2]:5 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated (was zp[1]:45) zp[1]:7 [ printf_schar::format_radix#2 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
Allocated (was zp[1]:48) zp[1]:8 [ uctoa::max_digits#7 printf_number_buffer::format_upper_case#10 ]
Allocated (was zp[2]:49) zp[2]:9 [ uctoa::digit_values#8 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 strupr::src#2 strupr::src#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated (was zp[1]:51) zp[1]:11 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
Allocated (was zp[1]:53) zp[1]:12 [ uctoa::started#2 uctoa::started#4 printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
Allocated (was zp[2]:59) zp[2]:13 [ clrscr::line_text#5 clrscr::line_text#1 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 strlen::str#2 strlen::str#0 cputs::s#2 cputs::s#0 ]
Allocated (was zp[1]:64) zp[1]:15 [ conio_cursor_x ]
Allocated (was zp[1]:65) zp[1]:16 [ conio_cursor_y ]
Allocated (was zp[2]:66) zp[2]:17 [ conio_line_text clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated (was zp[2]:68) zp[2]:19 [ conio_line_color ]
Allocated (was zp[2]:85) zp[2]:21 [ utoa::digit_value#0 utoa_append::sub#0 memcpy::src_end#0 memset::end#0 ]
Allocated (was zp[1]:100) zp[1]:23 [ uctoa_append::sub#0 printf_padding::pad#5 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Tests printf implementation
// Format a number
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(_start)
.pc = $80d "Program"
  // Global Constants & labels
  .const BINARY = 2
  .const OCTAL = 8
  .const DECIMAL = $a
  .const HEXADECIMAL = $10
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $f
  // The current cursor y-position
  .label conio_cursor_y = $10
  // The current text cursor line start
  .label conio_line_text = $11
  // The current color cursor line start
  .label conio_line_color = $13
  // _start
_start: {
    jmp _init1
    // _start::_init1
  _init1:
    // [1] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] phi from _start::_init1 to _start::@1 [phi:_start::_init1->_start::@1]
  __b1_from__init1:
    jmp __b1
    // _start::@1
  __b1:
    // [6] call main 
    // [8] phi from _start::@1 to main [phi:_start::@1->main]
  main_from___b1:
    jsr main
    jmp __breturn
    // _start::@return
  __breturn:
    // [7] return 
    rts
}
  // main
main: {
    // [9] call clrscr 
    // [228] phi from main to clrscr [phi:main->clrscr]
  clrscr_from_main:
    jsr clrscr
    // [10] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    jmp __b1
    // main::@1
  __b1:
    // [11] call printf_schar 
    // [178] phi from main::@1 to printf_schar [phi:main::@1->printf_schar]
  printf_schar_from___b1:
    // [178] phi (byte) printf_schar::format_zero_padding#2 = (byte) 0 [phi:main::@1->printf_schar#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_schar.format_zero_padding
    // [178] phi (byte) printf_schar::format_radix#2 = (const byte) DECIMAL [phi:main::@1->printf_schar#1] -- vbuz1=vbuc1 
    lda #DECIMAL
    sta.z printf_schar.format_radix
    // [178] phi (byte) printf_schar::format_sign_always#2 = (byte) 0 [phi:main::@1->printf_schar#2] -- vbuyy=vbuc1 
    ldy #0
    // [178] phi (signed byte) printf_schar::value#3 = (signed byte) -$4d [phi:main::@1->printf_schar#3] -- vbsxx=vbsc1 
    ldx #-$4d
    jsr printf_schar
    // [12] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [13] call cputln 
    jsr cputln
    // [14] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [15] call printf_schar 
    // [178] phi from main::@3 to printf_schar [phi:main::@3->printf_schar]
  printf_schar_from___b3:
    // [178] phi (byte) printf_schar::format_zero_padding#2 = (byte) 1 [phi:main::@3->printf_schar#0] -- vbuz1=vbuc1 
    lda #1
    sta.z printf_schar.format_zero_padding
    // [178] phi (byte) printf_schar::format_radix#2 = (const byte) OCTAL [phi:main::@3->printf_schar#1] -- vbuz1=vbuc1 
    lda #OCTAL
    sta.z printf_schar.format_radix
    // [178] phi (byte) printf_schar::format_sign_always#2 = (byte) 1 [phi:main::@3->printf_schar#2] -- vbuyy=vbuc1 
    ldy #1
    // [178] phi (signed byte) printf_schar::value#3 = (signed byte) $63 [phi:main::@3->printf_schar#3] -- vbsxx=vbsc1 
    ldx #$63
    jsr printf_schar
    // [16] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [17] call cputln 
    jsr cputln
    // [18] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [19] call printf_uint 
    // [60] phi from main::@5 to printf_uint [phi:main::@5->printf_uint]
  printf_uint_from___b5:
    jsr printf_uint
    // [20] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [21] call cputln 
    jsr cputln
    jmp __breturn
    // main::@return
  __breturn:
    // [22] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [25] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [26] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [27] call cscroll 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [28] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [30] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
  __b1_from_cscroll:
    jmp __b1
    // cscroll::@1
  __b1:
    // [31] call memcpy 
    // [50] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
  memcpy_from___b1:
    // [50] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [50] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [32] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [33] call memcpy 
    // [50] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
  memcpy_from___b2:
    // [50] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [50] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) COLORRAM+(byte) $28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [34] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    // [35] call memset 
    // [42] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
  memset_from___b3:
    // [42] phi (byte) memset::c#4 = (byte) ' ' [phi:cscroll::@3->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [42] phi (void*) memset::str#3 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [36] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [37] call memset 
    // [42] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
  memset_from___b4:
    // [42] phi (byte) memset::c#4 = (const nomodify byte) LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuxx=vbuc1 
    ldx #LIGHT_BLUE
    // [42] phi (void*) memset::str#3 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b5
    // cscroll::@5
  __b5:
    // [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [40] (byte) conio_cursor_y ← -- (byte) conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [41] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp(5) str, byte register(X) c)
memset: {
    .label end = $15
    .label dst = 5
    .label str = 5
    jmp __b1
    // memset::@1
  __b1:
    // [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
    // [45] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [45] phi (byte*) memset::dst#2 = (byte*) memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [47] return 
    rts
    // memset::@3
  __b3:
    // [48] *((byte*) memset::dst#2) ← (byte) memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // [49] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp(9) destination, void* zp(5) source)
memcpy: {
    .label src_end = $15
    .label dst = 9
    .label src = 5
    .label source = 5
    .label destination = 9
    // [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
    // [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
    // [54] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [54] phi (byte*) memcpy::dst#2 = (byte*) memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [54] phi (byte*) memcpy::src#2 = (byte*) memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [56] return 
    rts
    // memcpy::@2
  __b2:
    // [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [58] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [59] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // printf_uint
// Print an unsigned int using a specific format
printf_uint: {
    .const format_min_length = $a
    .const format_justify_left = 1
    .const format_zero_padding = 0
    .const format_upper_case = 1
    .label uvalue = $d80
    jmp __b1
    // printf_uint::@1
  __b1:
    // [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [62] call utoa 
  // Format number into buffer
    // [150] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
  utoa_from___b1:
    jsr utoa
    jmp __b2
    // printf_uint::@2
  __b2:
    // [63] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [64] call printf_number_buffer 
  // Print using format
    // [66] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    // [66] phi (byte) printf_number_buffer::format_upper_case#10 = (const byte) printf_uint::format_upper_case#0 [phi:printf_uint::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #format_upper_case
    sta.z printf_number_buffer.format_upper_case
    // [66] phi (byte) printf_number_buffer::buffer_sign#10 = (byte) printf_number_buffer::buffer_sign#0 [phi:printf_uint::@2->printf_number_buffer#1] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_zero_padding#10 = (const byte) printf_uint::format_zero_padding#0 [phi:printf_uint::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #format_zero_padding
    sta.z printf_number_buffer.format_zero_padding
    // [66] phi (byte) printf_number_buffer::format_justify_left#10 = (const byte) printf_uint::format_justify_left#0 [phi:printf_uint::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #format_justify_left
    sta.z printf_number_buffer.format_justify_left
    // [66] phi (byte) printf_number_buffer::format_min_length#2 = (const byte) printf_uint::format_min_length#0 [phi:printf_uint::@2->printf_number_buffer#4] -- vbuxx=vbuc1 
    ldx #format_min_length
    jsr printf_number_buffer
    jmp __breturn
    // printf_uint::@return
  __breturn:
    // [65] return 
    rts
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte zp(7) buffer_sign, byte register(X) format_min_length, byte zp(4) format_justify_left, byte zp(2) format_zero_padding, byte zp(8) format_upper_case)
printf_number_buffer: {
    .label __19 = 5
    .label buffer_sign = 7
    .label format_zero_padding = 2
    .label padding = $b
    .label format_justify_left = 4
    .label format_upper_case = 8
    // [67] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1 -- vbuc1_eq_vbuxx_then_la1 
    cpx #0
    beq __b1_from_printf_number_buffer
    // [68] phi from printf_number_buffer to printf_number_buffer::@6 [phi:printf_number_buffer->printf_number_buffer::@6]
  __b6_from_printf_number_buffer:
    jmp __b6
    // printf_number_buffer::@6
  __b6:
    // [69] call strlen 
    // [144] phi from printf_number_buffer::@6 to strlen [phi:printf_number_buffer::@6->strlen]
  strlen_from___b6:
    jsr strlen
    // [70] (word) strlen::return#2 ← (word) strlen::len#2
    jmp __b14
    // printf_number_buffer::@14
  __b14:
    // [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2
    // [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19 -- vbsyy=_sbyte_vwuz1 
    // There is a minimum length - work out the padding
    lda.z __19
    tay
    // [73] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z buffer_sign
    beq __b13_from___b14
    jmp __b7
    // printf_number_buffer::@7
  __b7:
    // [74] (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#0 -- vbsyy=_inc_vbsyy 
    iny
    // [75] phi from printf_number_buffer::@14 printf_number_buffer::@7 to printf_number_buffer::@13 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13]
  __b13_from___b14:
  __b13_from___b7:
    // [75] phi (signed byte) printf_number_buffer::len#2 = (signed byte) printf_number_buffer::len#0 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13#0] -- register_copy 
    jmp __b13
    // printf_number_buffer::@13
  __b13:
    // [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2 -- vbsz1=vbsxx_minus_vbsyy 
    txa
    sty.z $ff
    sec
    sbc.z $ff
    sta.z padding
    // [77] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@21 -- vbsz1_ge_0_then_la1 
    lda.z padding
    cmp #0
    bpl __b21_from___b13
    // [79] phi from printf_number_buffer printf_number_buffer::@13 to printf_number_buffer::@1 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1]
  __b1_from_printf_number_buffer:
  __b1_from___b13:
    // [79] phi (signed byte) printf_number_buffer::padding#10 = (signed byte) 0 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1#0] -- vbsz1=vbsc1 
    lda #0
    sta.z padding
    jmp __b1
    // [78] phi from printf_number_buffer::@13 to printf_number_buffer::@21 [phi:printf_number_buffer::@13->printf_number_buffer::@21]
  __b21_from___b13:
    jmp __b21
    // printf_number_buffer::@21
  __b21:
    // [79] phi from printf_number_buffer::@21 to printf_number_buffer::@1 [phi:printf_number_buffer::@21->printf_number_buffer::@1]
  __b1_from___b21:
    // [79] phi (signed byte) printf_number_buffer::padding#10 = (signed byte) printf_number_buffer::padding#1 [phi:printf_number_buffer::@21->printf_number_buffer::@1#0] -- register_copy 
    jmp __b1
    // printf_number_buffer::@1
  __b1:
    // [80] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_justify_left
    bne __b2
    jmp __b17
    // printf_number_buffer::@17
  __b17:
    // [81] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    bne __b2
    jmp __b16
    // printf_number_buffer::@16
  __b16:
    // [82] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@8 -- vbsc1_neq_vbsz1_then_la1 
    lda #0
    cmp.z padding
    bne __b8
    jmp __b2
    // printf_number_buffer::@8
  __b8:
    // [83] (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [84] call printf_padding 
    // [103] phi from printf_number_buffer::@8 to printf_padding [phi:printf_number_buffer::@8->printf_padding]
  printf_padding_from___b8:
    // [103] phi (byte) printf_padding::pad#5 = (byte) ' ' [phi:printf_number_buffer::@8->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#0 [phi:printf_number_buffer::@8->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __b2
    // printf_number_buffer::@2
  __b2:
    // [85] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z buffer_sign
    beq __b3
    jmp __b9
    // printf_number_buffer::@9
  __b9:
    // [86] (byte) cputc::c#2 ← (byte) printf_number_buffer::buffer_sign#10 -- vbuaa=vbuz1 
    lda.z buffer_sign
    // [87] call cputc 
    // [110] phi from printf_number_buffer::@9 to cputc [phi:printf_number_buffer::@9->cputc]
  cputc_from___b9:
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#2 [phi:printf_number_buffer::@9->cputc#0] -- register_copy 
    jsr cputc
    jmp __b3
    // printf_number_buffer::@3
  __b3:
    // [88] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    beq __b4
    jmp __b18
    // printf_number_buffer::@18
  __b18:
    // [89] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10 -- vbsc1_neq_vbsz1_then_la1 
    lda #0
    cmp.z padding
    bne __b10
    jmp __b4
    // printf_number_buffer::@10
  __b10:
    // [90] (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [91] call printf_padding 
    // [103] phi from printf_number_buffer::@10 to printf_padding [phi:printf_number_buffer::@10->printf_padding]
  printf_padding_from___b10:
    // [103] phi (byte) printf_padding::pad#5 = (byte) '0' [phi:printf_number_buffer::@10->printf_padding#0] -- vbuz1=vbuc1 
    lda #'0'
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#1 [phi:printf_number_buffer::@10->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __b4
    // printf_number_buffer::@4
  __b4:
    // [92] if((byte) 0==(byte) printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_upper_case
    beq __b5_from___b4
    // [93] phi from printf_number_buffer::@4 to printf_number_buffer::@11 [phi:printf_number_buffer::@4->printf_number_buffer::@11]
  __b11_from___b4:
    jmp __b11
    // printf_number_buffer::@11
  __b11:
    // [94] call strupr 
    // [129] phi from printf_number_buffer::@11 to strupr [phi:printf_number_buffer::@11->strupr]
  strupr_from___b11:
    jsr strupr
    // [95] phi from printf_number_buffer::@11 printf_number_buffer::@4 to printf_number_buffer::@5 [phi:printf_number_buffer::@11/printf_number_buffer::@4->printf_number_buffer::@5]
  __b5_from___b11:
  __b5_from___b4:
    jmp __b5
    // printf_number_buffer::@5
  __b5:
    // [96] call cputs 
    // [121] phi from printf_number_buffer::@5 to cputs [phi:printf_number_buffer::@5->cputs]
  cputs_from___b5:
    jsr cputs
    jmp __b15
    // printf_number_buffer::@15
  __b15:
    // [97] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_justify_left
    beq __breturn
    jmp __b20
    // printf_number_buffer::@20
  __b20:
    // [98] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    bne __breturn
    jmp __b19
    // printf_number_buffer::@19
  __b19:
    // [99] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@12 -- vbsc1_neq_vbsz1_then_la1 
    lda #0
    cmp.z padding
    bne __b12
    jmp __breturn
    // printf_number_buffer::@12
  __b12:
    // [100] (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [101] call printf_padding 
    // [103] phi from printf_number_buffer::@12 to printf_padding [phi:printf_number_buffer::@12->printf_padding]
  printf_padding_from___b12:
    // [103] phi (byte) printf_padding::pad#5 = (byte) ' ' [phi:printf_number_buffer::@12->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#2 [phi:printf_number_buffer::@12->printf_padding#1] -- register_copy 
    jsr printf_padding
    jmp __breturn
    // printf_number_buffer::@return
  __breturn:
    // [102] return 
    rts
}
  // printf_padding
// Print a padding char a number of times
// printf_padding(byte zp($17) pad, byte zp($c) length)
printf_padding: {
    .label i = 3
    .label length = $c
    .label pad = $17
    // [104] phi from printf_padding to printf_padding::@1 [phi:printf_padding->printf_padding::@1]
  __b1_from_printf_padding:
    // [104] phi (byte) printf_padding::i#2 = (byte) 0 [phi:printf_padding->printf_padding::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // printf_padding::@1
  __b1:
    // [105] if((byte) printf_padding::i#2<(byte) printf_padding::length#4) goto printf_padding::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2
    jmp __breturn
    // printf_padding::@return
  __breturn:
    // [106] return 
    rts
    // printf_padding::@2
  __b2:
    // [107] (byte) cputc::c#1 ← (byte) printf_padding::pad#5 -- vbuaa=vbuz1 
    lda.z pad
    // [108] call cputc 
    // [110] phi from printf_padding::@2 to cputc [phi:printf_padding::@2->cputc]
  cputc_from___b2:
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#1 [phi:printf_padding::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b3
    // printf_padding::@3
  __b3:
    // [109] (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [104] phi from printf_padding::@3 to printf_padding::@1 [phi:printf_padding::@3->printf_padding::@1]
  __b1_from___b3:
    // [104] phi (byte) printf_padding::i#2 = (byte) printf_padding::i#1 [phi:printf_padding::@3->printf_padding::@1#0] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte register(A) c)
cputc: {
    // [111] if((byte) cputc::c#3==(byte) ' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [114] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [116] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [117] call cputln 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [118] return 
    rts
    // [119] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [120] call cputln 
    jsr cputln
    jmp __breturn
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp($d) s)
cputs: {
    .label s = $d
    // [122] phi from cputs to cputs::@1 [phi:cputs->cputs::@1]
  __b1_from_cputs:
    // [122] phi (to_nomodify byte*) cputs::s#2 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:cputs->cputs::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z s
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z s+1
    jmp __b1
    // cputs::@1
  __b1:
    // [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [124] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [125] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [126] return 
    rts
    // cputs::@2
  __b2:
    // [127] (byte) cputc::c#0 ← (byte) cputs::c#1
    // [128] call cputc 
    // [110] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
  cputc_from___b2:
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    // [122] phi from cputs::@2 to cputs::@1 [phi:cputs::@2->cputs::@1]
  __b1_from___b2:
    // [122] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#0 [phi:cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
}
  // strupr
// Converts a string to uppercase.
strupr: {
    .label str = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label src = 9
    // [130] phi from strupr to strupr::@1 [phi:strupr->strupr::@1]
  __b1_from_strupr:
    // [130] phi (byte*) strupr::src#2 = (const byte*) strupr::str#0 [phi:strupr->strupr::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z src
    lda #>str
    sta.z src+1
    jmp __b1
    // strupr::@1
  __b1:
    // [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (src),y
    cmp #0
    bne __b2
    jmp __breturn
    // strupr::@return
  __breturn:
    // [132] return 
    rts
    // strupr::@2
  __b2:
    // [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (src),y
    // [134] call toupper 
    jsr toupper
    // [135] (byte) toupper::return#3 ← (byte) toupper::return#2
    jmp __b3
    // strupr::@3
  __b3:
    // [136] (byte~) strupr::$0 ← (byte) toupper::return#3
    // [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (src),y
    // [138] (byte*) strupr::src#1 ← ++ (byte*) strupr::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    // [130] phi from strupr::@3 to strupr::@1 [phi:strupr::@3->strupr::@1]
  __b1_from___b3:
    // [130] phi (byte*) strupr::src#2 = (byte*) strupr::src#1 [phi:strupr::@3->strupr::@1#0] -- register_copy 
    jmp __b1
}
  // toupper
// Convert lowercase alphabet to uppercase
// Returns uppercase equivalent to c, if such value exists, else c remains unchanged
// toupper(byte register(A) ch)
toupper: {
    // [139] if((byte) toupper::ch#0<(byte) 'a') goto toupper::@return -- vbuaa_lt_vbuc1_then_la1 
    cmp #'a'
    bcc __breturn_from_toupper
    jmp __b2
    // toupper::@2
  __b2:
    // [140] if((byte) toupper::ch#0<=(byte) 'z') goto toupper::@1 -- vbuaa_le_vbuc1_then_la1 
    cmp #'z'
    bcc __b1
    beq __b1
    // [142] phi from toupper toupper::@1 toupper::@2 to toupper::@return [phi:toupper/toupper::@1/toupper::@2->toupper::@return]
  __breturn_from_toupper:
  __breturn_from___b1:
  __breturn_from___b2:
    // [142] phi (byte) toupper::return#2 = (byte) toupper::ch#0 [phi:toupper/toupper::@1/toupper::@2->toupper::@return#0] -- register_copy 
    jmp __breturn
    // toupper::@1
  __b1:
    // [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a' -- vbuaa=vbuaa_plus_vbuc1 
    clc
    adc #'A'-'a'
    jmp __breturn_from___b1
    // toupper::@return
  __breturn:
    // [143] return 
    rts
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp($d) str)
strlen: {
    .label len = 5
    .label str = $d
    .label return = 5
    // [145] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
  __b1_from_strlen:
    // [145] phi (word) strlen::len#2 = (word) 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    lda #>0
    sta.z len+1
    // [145] phi (byte*) strlen::str#2 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:strlen->strlen::@1#1] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str+1
    jmp __b1
    // strlen::@1
  __b1:
    // [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // strlen::@return
  __breturn:
    // [147] return 
    rts
    // strlen::@2
  __b2:
    // [148] (word) strlen::len#1 ← ++ (word) strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // [149] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [145] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
  __b1_from___b2:
    // [145] phi (word) strlen::len#2 = (word) strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [145] phi (byte*) strlen::str#2 = (byte*) strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp(5) value, byte* zp(9) buffer)
utoa: {
    .const max_digits = 4
    .label digit_value = $15
    .label buffer = 9
    .label digit = 4
    .label value = 5
    // [151] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
  __b1_from_utoa:
    // [151] phi (byte*) utoa::buffer#11 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [151] phi (byte) utoa::started#2 = (byte) 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [151] phi (word) utoa::value#2 = (const word) printf_uint::uvalue#0 [phi:utoa->utoa::@1#2] -- vwuz1=vwuc1 
    lda #<printf_uint.uvalue
    sta.z value
    lda #>printf_uint.uvalue
    sta.z value+1
    // [151] phi (byte) utoa::digit#2 = (byte) 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // utoa::@1
  __b1:
    // [152] if((byte) utoa::digit#2<(const byte) utoa::max_digits#2-(byte) 1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    jmp __b3
    // utoa::@3
  __b3:
    // [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2 -- vbuaa=_byte_vwuz1 
    lda.z value
    // [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11) -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [156] *((byte*) utoa::buffer#3) ← (byte) 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa::@return
  __breturn:
    // [157] return 
    rts
    // utoa::@2
  __b2:
    // [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10) -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_HEXADECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_HEXADECIMAL_VALUES+1,y
    sta.z digit_value+1
    // [160] if((byte) 0!=(byte) utoa::started#2) goto utoa::@5 -- vbuc1_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    jmp __b7
    // utoa::@7
  __b7:
    // [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [162] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
  __b4_from___b7:
    // [162] phi (byte*) utoa::buffer#14 = (byte*) utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [162] phi (byte) utoa::started#4 = (byte) utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [162] phi (word) utoa::value#6 = (word) utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    jmp __b4
    // utoa::@4
  __b4:
    // [163] (byte) utoa::digit#1 ← ++ (byte) utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [151] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
  __b1_from___b4:
    // [151] phi (byte*) utoa::buffer#11 = (byte*) utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [151] phi (byte) utoa::started#2 = (byte) utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [151] phi (word) utoa::value#2 = (word) utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [151] phi (byte) utoa::digit#2 = (byte) utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11
    // [165] (word) utoa_append::value#0 ← (word) utoa::value#2
    // [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0
    // [167] call utoa_append 
    // [171] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
  utoa_append_from___b5:
    jsr utoa_append
    // [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2
    jmp __b6
    // utoa::@6
  __b6:
    // [169] (word) utoa::value#0 ← (word) utoa_append::return#0
    // [170] (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [162] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
  __b4_from___b6:
    // [162] phi (byte*) utoa::buffer#14 = (byte*) utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [162] phi (byte) utoa::started#4 = (byte) 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [162] phi (word) utoa::value#6 = (word) utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp(9) buffer, word zp(5) value, word zp($15) sub)
utoa_append: {
    .label buffer = 9
    .label value = 5
    .label sub = $15
    .label return = 5
    // [172] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
  __b1_from_utoa_append:
    // [172] phi (byte) utoa_append::digit#2 = (byte) 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [172] phi (word) utoa_append::value#2 = (word) utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    jmp __b1
    // utoa_append::@1
  __b1:
    // [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    jmp __b3
    // utoa_append::@3
  __b3:
    // [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa_append::@return
  __breturn:
    // [175] return 
    rts
    // utoa_append::@2
  __b2:
    // [176] (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [172] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
  __b1_from___b2:
    // [172] phi (byte) utoa_append::digit#2 = (byte) utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [172] phi (word) utoa_append::value#2 = (word) utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // printf_schar
// Print a signed char using a specific format
// printf_schar(signed byte register(X) value, byte register(Y) format_sign_always, byte zp(2) format_zero_padding, byte zp(7) format_radix)
printf_schar: {
    .label format_radix = 7
    .label format_zero_padding = 2
    // [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [180] if((signed byte) printf_schar::value#3<(signed byte) 0) goto printf_schar::@1 -- vbsxx_lt_0_then_la1 
    cpx #0
    bmi __b1
    jmp __b3
    // printf_schar::@3
  __b3:
    // [181] if((byte) 0==(byte) printf_schar::format_sign_always#2) goto printf_schar::@2 -- vbuc1_eq_vbuyy_then_la1 
    cpy #0
    beq __b2_from___b3
    jmp __b4
    // printf_schar::@4
  __b4:
    // [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+' -- _deref_pbuc1=vbuc2 
    lda #'+'
    sta printf_buffer
    // [183] phi from printf_schar::@1 printf_schar::@3 printf_schar::@4 to printf_schar::@2 [phi:printf_schar::@1/printf_schar::@3/printf_schar::@4->printf_schar::@2]
  __b2_from___b1:
  __b2_from___b3:
  __b2_from___b4:
    // [183] phi (signed byte) printf_schar::value#5 = (signed byte) printf_schar::value#0 [phi:printf_schar::@1/printf_schar::@3/printf_schar::@4->printf_schar::@2#0] -- register_copy 
    jmp __b2
    // printf_schar::@2
  __b2:
    // [184] (byte) uctoa::value#1 ← (byte)(signed byte) printf_schar::value#5
    // [185] (byte) uctoa::radix#0 ← (byte) printf_schar::format_radix#2 -- vbuaa=vbuz1 
    lda.z format_radix
    // [186] call uctoa 
    jsr uctoa
    jmp __b5
    // printf_schar::@5
  __b5:
    // [187] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [188] (byte) printf_number_buffer::format_zero_padding#1 ← (byte) printf_schar::format_zero_padding#2
    // [189] call printf_number_buffer 
  // Print using format
    // [66] phi from printf_schar::@5 to printf_number_buffer [phi:printf_schar::@5->printf_number_buffer]
  printf_number_buffer_from___b5:
    // [66] phi (byte) printf_number_buffer::format_upper_case#10 = (byte) 0 [phi:printf_schar::@5->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [66] phi (byte) printf_number_buffer::buffer_sign#10 = (byte) printf_number_buffer::buffer_sign#1 [phi:printf_schar::@5->printf_number_buffer#1] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_zero_padding#10 = (byte) printf_number_buffer::format_zero_padding#1 [phi:printf_schar::@5->printf_number_buffer#2] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_justify_left#10 = (byte) 0 [phi:printf_schar::@5->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_justify_left
    // [66] phi (byte) printf_number_buffer::format_min_length#2 = (byte) 6 [phi:printf_schar::@5->printf_number_buffer#4] -- vbuxx=vbuc1 
    ldx #6
    jsr printf_number_buffer
    jmp __breturn
    // printf_schar::@return
  __breturn:
    // [190] return 
    rts
    // printf_schar::@1
  __b1:
    // [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3 -- vbsxx=_neg_vbsxx 
    txa
    eor #$ff
    clc
    adc #1
    tax
    // [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-' -- _deref_pbuc1=vbuc2 
    lda #'-'
    sta printf_buffer
    jmp __b2_from___b1
}
  // uctoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// uctoa(byte register(X) value, byte* zp($d) buffer, byte register(A) radix)
uctoa: {
    .label buffer = $d
    .label digit = $b
    .label started = $c
    .label max_digits = 8
    .label digit_values = 9
    // [193] if((byte) uctoa::radix#0==(const byte) DECIMAL) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #DECIMAL
    beq __b1_from_uctoa
    jmp __b2
    // uctoa::@2
  __b2:
    // [194] if((byte) uctoa::radix#0==(const byte) HEXADECIMAL) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #HEXADECIMAL
    beq __b1_from___b2
    jmp __b3
    // uctoa::@3
  __b3:
    // [195] if((byte) uctoa::radix#0==(const byte) OCTAL) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #OCTAL
    beq __b1_from___b3
    jmp __b4
    // uctoa::@4
  __b4:
    // [196] if((byte) uctoa::radix#0==(const byte) BINARY) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #BINARY
    beq __b1_from___b4
    jmp __b5
    // uctoa::@5
  __b5:
    // [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e' -- _deref_pbuc1=vbuc2 
    // Unknown radix
    lda #'e'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    // [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r' -- _deref_pbuc1=vbuc2 
    lda #'r'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
    // [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r' -- _deref_pbuc1=vbuc2 
    lda #'r'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
    // [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3
    jmp __breturn
    // uctoa::@return
  __breturn:
    // [201] return 
    rts
    // [202] phi from uctoa to uctoa::@1 [phi:uctoa->uctoa::@1]
  __b1_from_uctoa:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_DECIMAL_VALUES_CHAR [phi:uctoa->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_DECIMAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_DECIMAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 3 [phi:uctoa->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #3
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@2 to uctoa::@1 [phi:uctoa::@2->uctoa::@1]
  __b1_from___b2:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_HEXADECIMAL_VALUES_CHAR [phi:uctoa::@2->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_HEXADECIMAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_HEXADECIMAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 2 [phi:uctoa::@2->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #2
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@3 to uctoa::@1 [phi:uctoa::@3->uctoa::@1]
  __b1_from___b3:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_OCTAL_VALUES_CHAR [phi:uctoa::@3->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_OCTAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_OCTAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 3 [phi:uctoa::@3->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #3
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@4 to uctoa::@1 [phi:uctoa::@4->uctoa::@1]
  __b1_from___b4:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_BINARY_VALUES_CHAR [phi:uctoa::@4->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_BINARY_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_BINARY_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 8 [phi:uctoa::@4->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #8
    sta.z max_digits
    jmp __b1
    // uctoa::@1
  __b1:
    // [203] phi from uctoa::@1 to uctoa::@6 [phi:uctoa::@1->uctoa::@6]
  __b6_from___b1:
    // [203] phi (byte*) uctoa::buffer#11 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:uctoa::@1->uctoa::@6#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [203] phi (byte) uctoa::started#2 = (byte) 0 [phi:uctoa::@1->uctoa::@6#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [203] phi (byte) uctoa::value#2 = (byte) uctoa::value#1 [phi:uctoa::@1->uctoa::@6#2] -- register_copy 
    // [203] phi (byte) uctoa::digit#2 = (byte) 0 [phi:uctoa::@1->uctoa::@6#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b6
    // uctoa::@6
  __b6:
    // [204] (byte~) uctoa::$4 ← (byte) uctoa::max_digits#7 - (byte) 1 -- vbuaa=vbuz1_minus_1 
    lda.z max_digits
    sec
    sbc #1
    // [205] if((byte) uctoa::digit#2<(byte~) uctoa::$4) goto uctoa::@7 -- vbuz1_lt_vbuaa_then_la1 
    cmp.z digit
    beq !+
    bcs __b7
  !:
    jmp __b8
    // uctoa::@8
  __b8:
    // [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [208] *((byte*) uctoa::buffer#3) ← (byte) 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // uctoa::@7
  __b7:
    // [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2) -- vbuyy=pbuz1_derefidx_vbuz2 
    ldy.z digit
    lda (digit_values),y
    tay
    // [210] if((byte) 0!=(byte) uctoa::started#2) goto uctoa::@10 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z started
    bne __b10
    jmp __b12
    // uctoa::@12
  __b12:
    // [211] if((byte) uctoa::value#2>=(byte) uctoa::digit_value#0) goto uctoa::@10 -- vbuxx_ge_vbuyy_then_la1 
    sty.z $ff
    cpx.z $ff
    bcs __b10
    // [212] phi from uctoa::@12 to uctoa::@9 [phi:uctoa::@12->uctoa::@9]
  __b9_from___b12:
    // [212] phi (byte*) uctoa::buffer#14 = (byte*) uctoa::buffer#11 [phi:uctoa::@12->uctoa::@9#0] -- register_copy 
    // [212] phi (byte) uctoa::started#4 = (byte) uctoa::started#2 [phi:uctoa::@12->uctoa::@9#1] -- register_copy 
    // [212] phi (byte) uctoa::value#6 = (byte) uctoa::value#2 [phi:uctoa::@12->uctoa::@9#2] -- register_copy 
    jmp __b9
    // uctoa::@9
  __b9:
    // [213] (byte) uctoa::digit#1 ← ++ (byte) uctoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [203] phi from uctoa::@9 to uctoa::@6 [phi:uctoa::@9->uctoa::@6]
  __b6_from___b9:
    // [203] phi (byte*) uctoa::buffer#11 = (byte*) uctoa::buffer#14 [phi:uctoa::@9->uctoa::@6#0] -- register_copy 
    // [203] phi (byte) uctoa::started#2 = (byte) uctoa::started#4 [phi:uctoa::@9->uctoa::@6#1] -- register_copy 
    // [203] phi (byte) uctoa::value#2 = (byte) uctoa::value#6 [phi:uctoa::@9->uctoa::@6#2] -- register_copy 
    // [203] phi (byte) uctoa::digit#2 = (byte) uctoa::digit#1 [phi:uctoa::@9->uctoa::@6#3] -- register_copy 
    jmp __b6
    // uctoa::@10
  __b10:
    // [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11
    // [215] (byte) uctoa_append::value#0 ← (byte) uctoa::value#2
    // [216] (byte) uctoa_append::sub#0 ← (byte) uctoa::digit_value#0 -- vbuz1=vbuyy 
    sty.z uctoa_append.sub
    // [217] call uctoa_append 
    // [221] phi from uctoa::@10 to uctoa_append [phi:uctoa::@10->uctoa_append]
  uctoa_append_from___b10:
    jsr uctoa_append
    // [218] (byte) uctoa_append::return#0 ← (byte) uctoa_append::value#2
    jmp __b11
    // uctoa::@11
  __b11:
    // [219] (byte) uctoa::value#0 ← (byte) uctoa_append::return#0
    // [220] (byte*) uctoa::buffer#4 ← ++ (byte*) uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [212] phi from uctoa::@11 to uctoa::@9 [phi:uctoa::@11->uctoa::@9]
  __b9_from___b11:
    // [212] phi (byte*) uctoa::buffer#14 = (byte*) uctoa::buffer#4 [phi:uctoa::@11->uctoa::@9#0] -- register_copy 
    // [212] phi (byte) uctoa::started#4 = (byte) 1 [phi:uctoa::@11->uctoa::@9#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [212] phi (byte) uctoa::value#6 = (byte) uctoa::value#0 [phi:uctoa::@11->uctoa::@9#2] -- register_copy 
    jmp __b9
}
  // uctoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// uctoa_append(byte* zp($d) buffer, byte register(X) value, byte zp($17) sub)
uctoa_append: {
    .label buffer = $d
    .label sub = $17
    // [222] phi from uctoa_append to uctoa_append::@1 [phi:uctoa_append->uctoa_append::@1]
  __b1_from_uctoa_append:
    // [222] phi (byte) uctoa_append::digit#2 = (byte) 0 [phi:uctoa_append->uctoa_append::@1#0] -- vbuyy=vbuc1 
    ldy #0
    // [222] phi (byte) uctoa_append::value#2 = (byte) uctoa_append::value#0 [phi:uctoa_append->uctoa_append::@1#1] -- register_copy 
    jmp __b1
    // uctoa_append::@1
  __b1:
    // [223] if((byte) uctoa_append::value#2>=(byte) uctoa_append::sub#0) goto uctoa_append::@2 -- vbuxx_ge_vbuz1_then_la1 
    cpx.z sub
    bcs __b2
    jmp __b3
    // uctoa_append::@3
  __b3:
    // [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2) -- _deref_pbuz1=pbuc1_derefidx_vbuyy 
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    jmp __breturn
    // uctoa_append::@return
  __breturn:
    // [225] return 
    rts
    // uctoa_append::@2
  __b2:
    // [226] (byte) uctoa_append::digit#1 ← ++ (byte) uctoa_append::digit#2 -- vbuyy=_inc_vbuyy 
    iny
    // [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0 -- vbuxx=vbuxx_minus_vbuz1 
    txa
    sec
    sbc.z sub
    tax
    // [222] phi from uctoa_append::@2 to uctoa_append::@1 [phi:uctoa_append::@2->uctoa_append::@1]
  __b1_from___b2:
    // [222] phi (byte) uctoa_append::digit#2 = (byte) uctoa_append::digit#1 [phi:uctoa_append::@2->uctoa_append::@1#0] -- register_copy 
    // [222] phi (byte) uctoa_append::value#2 = (byte) uctoa_append::value#1 [phi:uctoa_append::@2->uctoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label line_text = $d
    .label line_cols = $11
    // [229] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
  __b1_from_clrscr:
    // [229] phi (byte*) clrscr::line_cols#5 = (const nomodify byte*) COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [229] phi (byte*) clrscr::line_text#5 = (const nomodify byte*) DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [229] phi (byte) clrscr::l#2 = (byte) 0 [phi:clrscr->clrscr::@1#2] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // clrscr::@1
  __b1:
    // [230] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b3_from___b1
    jmp __b2
    // clrscr::@2
  __b2:
    // [231] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [232] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [235] return 
    rts
    // [236] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b3_from___b1:
    // [236] phi (byte) clrscr::c#2 = (byte) 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuyy=vbuc1 
    ldy #0
    jmp __b3
    // clrscr::@3
  __b3:
    // [237] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4 -- vbuyy_lt_vbuc1_then_la1 
    cpy #$28
    bcc __b4
    jmp __b5
    // clrscr::@5
  __b5:
    // [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // [240] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [229] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
  __b1_from___b5:
    // [229] phi (byte*) clrscr::line_cols#5 = (byte*) clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [229] phi (byte*) clrscr::line_text#5 = (byte*) clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [229] phi (byte) clrscr::l#2 = (byte) clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #' '
    sta (line_text),y
    // [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #LIGHT_BLUE
    sta (line_cols),y
    // [243] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [236] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
  __b3_from___b4:
    // [236] phi (byte) clrscr::c#2 = (byte) clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // File Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of binary digits
  RADIX_BINARY_VALUES_CHAR: .byte $80, $40, $20, $10, 8, 4, 2
  // Values of octal digits
  RADIX_OCTAL_VALUES_CHAR: .byte $40, 8
  // Values of decimal digits
  RADIX_DECIMAL_VALUES_CHAR: .byte $64, $a
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES_CHAR: .byte $10
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES: .word $1000, $100, $10
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp _init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b6
Removing instruction jmp __b14
Removing instruction jmp __b7
Removing instruction jmp __b13
Removing instruction jmp __b21
Removing instruction jmp __b1
Removing instruction jmp __b17
Removing instruction jmp __b16
Removing instruction jmp __b2
Removing instruction jmp __b9
Removing instruction jmp __b3
Removing instruction jmp __b18
Removing instruction jmp __b4
Removing instruction jmp __b11
Removing instruction jmp __b5
Removing instruction jmp __b15
Removing instruction jmp __b20
Removing instruction jmp __b19
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b2
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b6
Removing instruction jmp __b8
Removing instruction jmp __b12
Removing instruction jmp __b9
Removing instruction jmp __b11
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b5
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction ldy #0
Removing instruction lda.z padding
Removing instruction ldy.z conio_cursor_x
Removing instruction lda #>0
Replacing instruction lda #0 with TXA
Replacing instruction ldy #0 with TAY
Removing instruction lda #0
Removing instruction lda #'r'
Removing instruction lda #0
Replacing instruction ldy #0 with TAY
Removing instruction lda #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b2_from___b3 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from_printf_number_buffer with __b1_from___b13
Replacing label __b13_from___b14 with __b13
Replacing label __b21_from___b13 with __b1
Replacing label __b5_from___b4 with __b5
Replacing label __b1_from_cputc with __b1
Replacing label __breturn_from_toupper with __breturn_from___b2
Replacing label __breturn_from___b1 with __breturn_from___b2
Replacing label __b2_from___b3 with __b2
Replacing label __b2_from___b1 with __b2
Removing instruction __b1_from__init1:
Removing instruction main_from___b1:
Removing instruction __b1_from_main:
Removing instruction printf_schar_from___b1:
Removing instruction __b2_from___b1:
Removing instruction __b3_from___b2:
Removing instruction printf_schar_from___b3:
Removing instruction __b4_from___b3:
Removing instruction __b5_from___b4:
Removing instruction printf_uint_from___b5:
Removing instruction __b6_from___b5:
Removing instruction __b1_from_cscroll:
Removing instruction memcpy_from___b1:
Removing instruction __b2_from___b1:
Removing instruction memcpy_from___b2:
Removing instruction __b3_from___b2:
Removing instruction memset_from___b3:
Removing instruction __b4_from___b3:
Removing instruction memset_from___b4:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Removing instruction __b1_from_memcpy:
Removing instruction __b1_from___b2:
Removing instruction __b6_from_printf_number_buffer:
Removing instruction strlen_from___b6:
Removing instruction __b13_from___b14:
Removing instruction __b13_from___b7:
Removing instruction __b1_from_printf_number_buffer:
Removing instruction __b21_from___b13:
Removing instruction __b21:
Removing instruction __b1_from___b21:
Removing instruction __b11_from___b4:
Removing instruction strupr_from___b11:
Removing instruction __b5_from___b11:
Removing instruction __b5_from___b4:
Removing instruction cputs_from___b5:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_cputc:
Removing instruction cputc_from___b2:
Removing instruction __breturn_from_toupper:
Removing instruction __breturn_from___b1:
Removing instruction __b4_from___b7:
Removing instruction utoa_append_from___b5:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction __b6_from___b1:
Removing instruction __b9_from___b12:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction _init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction clrscr_from_main:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction utoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b6:
Removing instruction __b14:
Removing instruction __b7:
Removing instruction __b17:
Removing instruction __b16:
Removing instruction printf_padding_from___b8:
Removing instruction __b9:
Removing instruction cputc_from___b9:
Removing instruction __b18:
Removing instruction printf_padding_from___b10:
Removing instruction __b11:
Removing instruction __b15:
Removing instruction __b20:
Removing instruction __b19:
Removing instruction printf_padding_from___b12:
Removing instruction __b1_from_printf_padding:
Removing instruction __breturn:
Removing instruction cputc_from___b2:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b1_from_cputs:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_strupr:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b2:
Removing instruction __b1_from_strlen:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_utoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __b1_from_utoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction printf_number_buffer_from___b5:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b8:
Removing instruction __b12:
Removing instruction __b6_from___b9:
Removing instruction uctoa_append_from___b10:
Removing instruction __b11:
Removing instruction __b9_from___b11:
Removing instruction __b1_from_uctoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_clrscr:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b5:
Removing instruction __b1_from___b5:
Removing instruction __b3_from___b4:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Skipping double jump to __breturn in bcc __breturn_from___b2
Replacing jump to rts with rts in jmp __breturn
Skipping double jump to __breturn in jmp __breturn_from___b2
Replacing jump to rts with rts in jmp __breturn
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b1_from___b13 to __b6
Relabelling long label __breturn_from___b2 to __b2
Relabelling long label __b1_from_uctoa to __b2
Relabelling long label __b1_from___b2 to __b3
Relabelling long label __b1_from___b3 to __b4
Relabelling long label __b1_from___b4 to __b5
Relabelling long label __b3_from___b1 to __b2
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda.z digit_value+1
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction __b2:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
(const byte) BINARY = (number) 2
(const nomodify byte*) COLORRAM = (byte*) 55296
(const byte) DECIMAL = (number) $a
(const nomodify byte*) DEFAULT_SCREEN = (byte*) 1024
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(const byte) HEXADECIMAL = (number) $10
(const nomodify byte) LIGHT_BLUE = (byte) $e
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OCTAL = (number) 8
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = (byte) 1
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte*) RADIX_BINARY_VALUES_CHAR[]  = { (byte) $80, (byte) $40, (byte) $20, (byte) $10, (byte) 8, (byte) 4, (byte) 2 }
(const byte*) RADIX_DECIMAL_VALUES_CHAR[]  = { (byte) $64, (byte) $a }
(const word*) RADIX_HEXADECIMAL_VALUES[]  = { (word) $1000, (word) $100, (word) $10 }
(const byte*) RADIX_HEXADECIMAL_VALUES_CHAR[]  = { (byte) $10 }
(const byte*) RADIX_OCTAL_VALUES_CHAR[]  = { (byte) $40, (byte) 8 }
(const byte) SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = (byte) $c
(void()) _start()
(label) _start::@1
(label) _start::@return
(label) _start::_init1
(void()) clrscr()
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@5
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#1 reg byte y 20002.0
(byte) clrscr::c#2 reg byte y 12501.25
(byte) clrscr::l
(byte) clrscr::l#1 reg byte x 2002.0
(byte) clrscr::l#2 reg byte x 333.6666666666667
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 line_cols zp[2]:17 1001.0
(byte*) clrscr::line_cols#5 line_cols zp[2]:17 1500.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 line_text zp[2]:13 667.3333333333334
(byte*) clrscr::line_text#5 line_text zp[2]:13 1714.7142857142858
(byte) conio_cursor_x loadstore zp[1]:15 164836.36263736262
(byte) conio_cursor_y loadstore zp[1]:16 2689076.537815126
(byte*) conio_line_color loadstore zp[2]:19 1888889.8119658118
(byte*) conio_line_text loadstore zp[2]:17 1872882.2711864407
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 200002.0
(byte) cputc::c#1 reg byte a 200002.0
(byte) cputc::c#2 reg byte a 2002.0
(byte) cputc::c#3 reg byte a 1100502.5
(void()) cputln()
(label) cputln::@return
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 100001.0
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:13 50000.5
(to_nomodify byte*) cputs::s#2 s zp[2]:13 150001.5
(void()) cscroll()
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@return
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@return
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#2 destination zp[2]:9
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:9 1.00000000001E11
(byte*) memcpy::dst#2 dst zp[2]:9 1.0033333333466667E11
(byte*) memcpy::dst#4 dst zp[2]:9 2.000000002E9
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2 source zp[2]:5
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:5 2.00000000002E11
(byte*) memcpy::src#2 src zp[2]:5 1.0025000000125E11
(byte*) memcpy::src#4 src zp[2]:5 1.000000001E9
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 src_end zp[2]:21 1.262500000025E10
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1.4285714285857143E10
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:5 2.00000000002E11
(byte*) memset::dst#2 dst zp[2]:5 1.3366666666833334E11
(byte*) memset::dst#4 dst zp[2]:5 2.000000002E9
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:21 1.6833333333666668E10
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:5
(struct printf_buffer_number) printf_buffer loadstore mem[12] = {}
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(word~) printf_number_buffer::$19 zp[2]:5 1001.0
(label) printf_number_buffer::@1
(label) printf_number_buffer::@10
(label) printf_number_buffer::@11
(label) printf_number_buffer::@12
(label) printf_number_buffer::@13
(label) printf_number_buffer::@14
(label) printf_number_buffer::@15
(label) printf_number_buffer::@16
(label) printf_number_buffer::@17
(label) printf_number_buffer::@18
(label) printf_number_buffer::@19
(label) printf_number_buffer::@2
(label) printf_number_buffer::@20
(label) printf_number_buffer::@21
(label) printf_number_buffer::@3
(label) printf_number_buffer::@4
(label) printf_number_buffer::@5
(label) printf_number_buffer::@6
(label) printf_number_buffer::@7
(label) printf_number_buffer::@8
(label) printf_number_buffer::@9
(label) printf_number_buffer::@return
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0 buffer_sign zp[1]:7 202.0
(byte) printf_number_buffer::buffer_sign#1 buffer_sign zp[1]:7 101.0
(byte) printf_number_buffer::buffer_sign#10 buffer_sign zp[1]:7 160.25
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_justify_left#10 format_justify_left zp[1]:4 64.58064516129032
(byte) printf_number_buffer::format_min_length
(byte) printf_number_buffer::format_min_length#2 reg byte x 100.1
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_upper_case#10 format_upper_case zp[1]:8 38.5
(byte) printf_number_buffer::format_zero_padding
(byte) printf_number_buffer::format_zero_padding#1 format_zero_padding zp[1]:2 202.0
(byte) printf_number_buffer::format_zero_padding#10 format_zero_padding zp[1]:2 97.0
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::len#0 reg byte y 1501.5
(signed byte) printf_number_buffer::len#1 reg byte y 2002.0
(signed byte) printf_number_buffer::len#2 reg byte y 3003.0
(signed byte) printf_number_buffer::padding
(signed byte) printf_number_buffer::padding#1 padding zp[1]:11 1001.0
(signed byte) printf_number_buffer::padding#10 padding zp[1]:11 190.66666666666666
(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
(label) printf_padding::@1
(label) printf_padding::@2
(label) printf_padding::@3
(label) printf_padding::@return
(byte) printf_padding::i
(byte) printf_padding::i#1 i zp[1]:3 200002.0
(byte) printf_padding::i#2 i zp[1]:3 75000.75
(byte) printf_padding::length
(byte) printf_padding::length#0 length zp[1]:12 2002.0
(byte) printf_padding::length#1 length zp[1]:12 2002.0
(byte) printf_padding::length#2 length zp[1]:12 2002.0
(byte) printf_padding::length#4 length zp[1]:12 17167.333333333332
(byte) printf_padding::pad
(byte) printf_padding::pad#5 pad zp[1]:23 16666.833333333332
(void()) printf_schar((signed byte) printf_schar::value , (byte) printf_schar::format_min_length , (byte) printf_schar::format_justify_left , (byte) printf_schar::format_sign_always , (byte) printf_schar::format_zero_padding , (byte) printf_schar::format_upper_case , (byte) printf_schar::format_radix)
(label) printf_schar::@1
(label) printf_schar::@2
(label) printf_schar::@3
(label) printf_schar::@4
(label) printf_schar::@5
(label) printf_schar::@return
(struct printf_format_number) printf_schar::format
(byte) printf_schar::format_justify_left
(byte) printf_schar::format_min_length
(byte) printf_schar::format_radix
(byte) printf_schar::format_radix#2 format_radix zp[1]:7 11.222222222222221
(byte) printf_schar::format_sign_always
(byte) printf_schar::format_sign_always#2 reg byte y 33.666666666666664
(byte) printf_schar::format_upper_case
(byte) printf_schar::format_zero_padding
(byte) printf_schar::format_zero_padding#2 format_zero_padding zp[1]:2 8.416666666666666
(byte) printf_schar::uvalue
(signed byte) printf_schar::value
(signed byte) printf_schar::value#0 reg byte x 101.0
(signed byte) printf_schar::value#3 reg byte x 80.8
(signed byte) printf_schar::value#5 reg byte x 303.0
(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
(label) printf_uint::@1
(label) printf_uint::@2
(label) printf_uint::@return
(struct printf_format_number) printf_uint::format
(byte) printf_uint::format_justify_left
(const byte) printf_uint::format_justify_left#0 format_justify_left = (byte) 1
(byte) printf_uint::format_min_length
(const byte) printf_uint::format_min_length#0 format_min_length = (byte) $a
(byte) printf_uint::format_radix
(byte) printf_uint::format_sign_always
(byte) printf_uint::format_upper_case
(const byte) printf_uint::format_upper_case#0 format_upper_case = (byte) 1
(byte) printf_uint::format_zero_padding
(const byte) printf_uint::format_zero_padding#0 format_zero_padding = (byte) 0
(word) printf_uint::uvalue
(const word) printf_uint::uvalue#0 uvalue = (word) $d80
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:5 100001.0
(word) strlen::len#2 len zp[2]:5 50250.75
(word) strlen::return
(word) strlen::return#2 return zp[2]:5 2002.0
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:13 200002.0
(byte*) strlen::str#2 str zp[2]:13 100001.0
(byte*()) strupr((byte*) strupr::str)
(byte~) strupr::$0 reg byte a 200002.0
(label) strupr::@1
(label) strupr::@2
(label) strupr::@3
(label) strupr::@return
(byte*) strupr::return
(byte*) strupr::src
(byte*) strupr::src#1 src zp[2]:9 200002.0
(byte*) strupr::src#2 src zp[2]:9 71429.28571428571
(byte*) strupr::str
(const byte*) strupr::str#0 str = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
(byte()) toupper((byte) toupper::ch)
(label) toupper::@1
(label) toupper::@2
(label) toupper::@return
(byte) toupper::ch
(byte) toupper::ch#0 reg byte a 1700002.0000000002
(byte) toupper::return
(byte) toupper::return#0 reg byte a 2000002.0
(byte) toupper::return#2 reg byte a 1033334.6666666667
(byte) toupper::return#3 reg byte a 200002.0
(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
(byte~) uctoa::$4 reg byte a 20002.0
(label) uctoa::@1
(label) uctoa::@10
(label) uctoa::@11
(label) uctoa::@12
(label) uctoa::@2
(label) uctoa::@3
(label) uctoa::@4
(label) uctoa::@5
(label) uctoa::@6
(label) uctoa::@7
(label) uctoa::@8
(label) uctoa::@9
(label) uctoa::@return
(byte*) uctoa::buffer
(byte*) uctoa::buffer#11 buffer zp[2]:13 3231.230769230769
(byte*) uctoa::buffer#14 buffer zp[2]:13 15001.5
(byte*) uctoa::buffer#3 buffer zp[2]:13 2002.0
(byte*) uctoa::buffer#4 buffer zp[2]:13 20002.0
(byte) uctoa::digit
(byte) uctoa::digit#1 digit zp[1]:11 20002.0
(byte) uctoa::digit#2 digit zp[1]:11 2857.4285714285716
(byte) uctoa::digit_value
(byte) uctoa::digit_value#0 reg byte y 6000.6
(byte*) uctoa::digit_values
(byte*) uctoa::digit_values#8 digit_values zp[2]:9 625.0625
(byte) uctoa::max_digits
(byte) uctoa::max_digits#7 max_digits zp[1]:8 625.0625
(byte) uctoa::radix
(byte) uctoa::radix#0 reg byte a 1026.25
(byte) uctoa::started
(byte) uctoa::started#2 started zp[1]:12 5000.5
(byte) uctoa::started#4 started zp[1]:12 10001.0
(byte) uctoa::value
(byte) uctoa::value#0 reg byte x 10001.0
(byte) uctoa::value#1 reg byte x 157.42857142857142
(byte) uctoa::value#2 reg byte x 6000.857142857143
(byte) uctoa::value#6 reg byte x 15001.5
(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
(label) uctoa_append::@1
(label) uctoa_append::@2
(label) uctoa_append::@3
(label) uctoa_append::@return
(byte*) uctoa_append::buffer
(byte*) uctoa_append::buffer#0 buffer zp[2]:13 13750.25
(byte) uctoa_append::digit
(byte) uctoa_append::digit#1 reg byte y 1.0000001E7
(byte) uctoa_append::digit#2 reg byte y 1.00500015E7
(byte) uctoa_append::return
(byte) uctoa_append::return#0 reg byte x 20002.0
(byte) uctoa_append::sub
(byte) uctoa_append::sub#0 sub zp[1]:23 3335000.5
(byte) uctoa_append::value
(byte) uctoa_append::value#0 reg byte x 36667.33333333333
(byte) uctoa_append::value#1 reg byte x 2.0000002E7
(byte) uctoa_append::value#2 reg byte x 5018334.166666666
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(byte~) utoa::$10 reg byte a 20002.0
(byte~) utoa::$11 reg byte a 2002.0
(label) utoa::@1
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@return
(byte*) utoa::buffer
(byte*) utoa::buffer#11 buffer zp[2]:9 3000.4285714285716
(byte*) utoa::buffer#14 buffer zp[2]:9 15001.5
(byte*) utoa::buffer#3 buffer zp[2]:9 2002.0
(byte*) utoa::buffer#4 buffer zp[2]:9 20002.0
(byte) utoa::digit
(byte) utoa::digit#1 digit zp[1]:4 20002.0
(byte) utoa::digit#2 digit zp[1]:4 2857.4285714285716
(word) utoa::digit_value
(word) utoa::digit_value#0 digit_value zp[2]:21 6000.6
(word*) utoa::digit_values
(byte) utoa::max_digits
(const byte) utoa::max_digits#2 max_digits = (byte) 4
(byte) utoa::radix
(byte) utoa::started
(byte) utoa::started#2 reg byte x 5000.5
(byte) utoa::started#4 reg byte x 10001.0
(word) utoa::value
(word) utoa::value#0 value zp[2]:5 10001.0
(word) utoa::value#2 value zp[2]:5 5714.857142857143
(word) utoa::value#6 value zp[2]:5 15001.5
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(label) utoa_append::@1
(label) utoa_append::@2
(label) utoa_append::@3
(label) utoa_append::@return
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0 buffer zp[2]:9 13750.25
(byte) utoa_append::digit
(byte) utoa_append::digit#1 reg byte x 1.0000001E7
(byte) utoa_append::digit#2 reg byte x 1.00500015E7
(word) utoa_append::return
(word) utoa_append::return#0 return zp[2]:5 20002.0
(word) utoa_append::sub
(word) utoa_append::sub#0 sub zp[2]:21 3335000.5
(word) utoa_append::value
(word) utoa_append::value#0 value zp[2]:5 36667.33333333333
(word) utoa_append::value#1 value zp[2]:5 2.0000002E7
(word) utoa_append::value#2 value zp[2]:5 5018334.166666666

reg byte x [ memset::c#4 ]
reg byte x [ printf_number_buffer::format_min_length#2 ]
zp[1]:2 [ printf_number_buffer::format_zero_padding#10 printf_number_buffer::format_zero_padding#1 printf_schar::format_zero_padding#2 ]
reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
zp[1]:3 [ printf_padding::i#2 printf_padding::i#1 ]
reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
reg byte a [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
zp[1]:4 [ utoa::digit#2 utoa::digit#1 printf_number_buffer::format_justify_left#10 ]
zp[2]:5 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
reg byte y [ printf_schar::format_sign_always#2 ]
zp[1]:7 [ printf_schar::format_radix#2 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
reg byte x [ printf_schar::value#5 printf_schar::value#0 printf_schar::value#3 ]
zp[1]:8 [ uctoa::max_digits#7 printf_number_buffer::format_upper_case#10 ]
zp[2]:9 [ uctoa::digit_values#8 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 strupr::src#2 strupr::src#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
zp[1]:11 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:12 [ uctoa::started#2 uctoa::started#4 printf_padding::length#4 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
zp[2]:13 [ clrscr::line_text#5 clrscr::line_text#1 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 strlen::str#2 strlen::str#0 cputs::s#2 cputs::s#0 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:15 [ conio_cursor_x ]
zp[1]:16 [ conio_cursor_y ]
zp[2]:17 [ conio_line_text clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[2]:19 [ conio_line_color ]
reg byte a [ cputs::c#1 ]
reg byte a [ toupper::return#3 ]
reg byte a [ strupr::$0 ]
reg byte a [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:21 [ utoa::digit_value#0 utoa_append::sub#0 memcpy::src_end#0 memset::end#0 ]
reg byte a [ uctoa::radix#0 ]
reg byte a [ uctoa::$4 ]
reg byte y [ uctoa::digit_value#0 ]
zp[1]:23 [ uctoa_append::sub#0 printf_padding::pad#5 ]
reg byte x [ uctoa_append::return#0 ]
mem[12] [ printf_buffer ]


FINAL ASSEMBLER
Score: 25128

  // File Comments
// Tests printf implementation
// Format a number
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(_start)
.pc = $80d "Program"
  // Global Constants & labels
  .const BINARY = 2
  .const OCTAL = 8
  .const DECIMAL = $a
  .const HEXADECIMAL = $10
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $f
  // The current cursor y-position
  .label conio_cursor_y = $10
  // The current text cursor line start
  .label conio_line_text = $11
  // The current color cursor line start
  .label conio_line_color = $13
  // _start
_start: {
    // _start::_init1
    // conio_cursor_x = 0
    // [1] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = 0
    // [2] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // conio_line_text = CONIO_SCREEN_TEXT
    // [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // conio_line_color = CONIO_SCREEN_COLORS
    // [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] phi from _start::_init1 to _start::@1 [phi:_start::_init1->_start::@1]
    // _start::@1
    // [6] call main 
    // [8] phi from _start::@1 to main [phi:_start::@1->main]
    jsr main
    // _start::@return
    // [7] return 
    rts
}
  // main
main: {
    // clrscr()
    // [9] call clrscr 
    // [228] phi from main to clrscr [phi:main->clrscr]
    jsr clrscr
    // [10] phi from main to main::@1 [phi:main->main::@1]
    // main::@1
    // printf_schar(-77, { 6, 0, 0, 0, 0, DECIMAL})
    // [11] call printf_schar 
    // [178] phi from main::@1 to printf_schar [phi:main::@1->printf_schar]
    // [178] phi (byte) printf_schar::format_zero_padding#2 = (byte) 0 [phi:main::@1->printf_schar#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_schar.format_zero_padding
    // [178] phi (byte) printf_schar::format_radix#2 = (const byte) DECIMAL [phi:main::@1->printf_schar#1] -- vbuz1=vbuc1 
    lda #DECIMAL
    sta.z printf_schar.format_radix
    // [178] phi (byte) printf_schar::format_sign_always#2 = (byte) 0 [phi:main::@1->printf_schar#2] -- vbuyy=vbuc1 
    ldy #0
    // [178] phi (signed byte) printf_schar::value#3 = (signed byte) -$4d [phi:main::@1->printf_schar#3] -- vbsxx=vbsc1 
    ldx #-$4d
    jsr printf_schar
    // [12] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
    // main::@2
    // cputln()
    // [13] call cputln 
    jsr cputln
    // [14] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // printf_schar(99, {6, 0, 1, 1, 0, OCTAL})
    // [15] call printf_schar 
    // [178] phi from main::@3 to printf_schar [phi:main::@3->printf_schar]
    // [178] phi (byte) printf_schar::format_zero_padding#2 = (byte) 1 [phi:main::@3->printf_schar#0] -- vbuz1=vbuc1 
    lda #1
    sta.z printf_schar.format_zero_padding
    // [178] phi (byte) printf_schar::format_radix#2 = (const byte) OCTAL [phi:main::@3->printf_schar#1] -- vbuz1=vbuc1 
    lda #OCTAL
    sta.z printf_schar.format_radix
    // [178] phi (byte) printf_schar::format_sign_always#2 = (byte) 1 [phi:main::@3->printf_schar#2] -- vbuyy=vbuc1 
    ldy #1
    // [178] phi (signed byte) printf_schar::value#3 = (signed byte) $63 [phi:main::@3->printf_schar#3] -- vbsxx=vbsc1 
    ldx #$63
    jsr printf_schar
    // [16] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
    // main::@4
    // cputln()
    // [17] call cputln 
    jsr cputln
    // [18] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
    // main::@5
    // printf_uint(3456, {10, 1, 0, 0, 1, HEXADECIMAL})
    // [19] call printf_uint 
    // [60] phi from main::@5 to printf_uint [phi:main::@5->printf_uint]
    jsr printf_uint
    // [20] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
    // main::@6
    // cputln()
    // [21] call cputln 
    jsr cputln
    // main::@return
    // }
    // [22] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // conio_line_text +=  CONIO_WIDTH
    // [23] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // conio_line_color += CONIO_WIDTH
    // [24] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // conio_cursor_x = 0
    // [25] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y++;
    // [26] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // cscroll()
    // [27] call cscroll 
    jsr cscroll
    // cputln::@return
    // }
    // [28] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y==CONIO_HEIGHT)
    // [29] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [30] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
    // cscroll::@1
    // memcpy(CONIO_SCREEN_TEXT, CONIO_SCREEN_TEXT+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [31] call memcpy 
    // [50] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
    // [50] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [50] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [32] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
    // cscroll::@2
    // memcpy(CONIO_SCREEN_COLORS, CONIO_SCREEN_COLORS+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [33] call memcpy 
    // [50] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
    // [50] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [50] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) COLORRAM+(byte) $28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [34] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
    // cscroll::@3
    // memset(CONIO_SCREEN_TEXT+CONIO_BYTES-CONIO_WIDTH, ' ', CONIO_WIDTH)
    // [35] call memset 
    // [42] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
    // [42] phi (byte) memset::c#4 = (byte) ' ' [phi:cscroll::@3->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [42] phi (void*) memset::str#3 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [36] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
    // cscroll::@4
    // memset(CONIO_SCREEN_COLORS+CONIO_BYTES-CONIO_WIDTH, conio_textcolor, CONIO_WIDTH)
    // [37] call memset 
    // [42] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
    // [42] phi (byte) memset::c#4 = (const nomodify byte) LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuxx=vbuc1 
    ldx #LIGHT_BLUE
    // [42] phi (void*) memset::str#3 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // cscroll::@5
    // conio_line_text -= CONIO_WIDTH
    // [38] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // conio_line_color -= CONIO_WIDTH
    // [39] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // conio_cursor_y--;
    // [40] (byte) conio_cursor_y ← -- (byte) conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    // cscroll::@return
  __breturn:
    // }
    // [41] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp(5) str, byte register(X) c)
memset: {
    .label end = $15
    .label dst = 5
    .label str = 5
    // memset::@1
    // end = (char*)str + num
    // [43] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [44] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
    // [45] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
    // [45] phi (byte*) memset::dst#2 = (byte*) memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    // memset::@2
  __b2:
    // for(char* dst = str; dst!=end; dst++)
    // [46] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    // memset::@return
    // }
    // [47] return 
    rts
    // memset::@3
  __b3:
    // *dst = c
    // [48] *((byte*) memset::dst#2) ← (byte) memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [49] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp(9) destination, void* zp(5) source)
memcpy: {
    .label src_end = $15
    .label dst = 9
    .label src = 5
    .label source = 5
    .label destination = 9
    // src_end = (char*)source+num
    // [51] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [52] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
    // [53] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
    // [54] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
    // [54] phi (byte*) memcpy::dst#2 = (byte*) memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [54] phi (byte*) memcpy::src#2 = (byte*) memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    // memcpy::@1
  __b1:
    // while(src!=src_end)
    // [55] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    // memcpy::@return
    // }
    // [56] return 
    rts
    // memcpy::@2
  __b2:
    // *dst++ = *src++
    // [57] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta (dst),y
    // *dst++ = *src++;
    // [58] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [59] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1
}
  // printf_uint
// Print an unsigned int using a specific format
printf_uint: {
    .const format_min_length = $a
    .const format_justify_left = 1
    .const format_zero_padding = 0
    .const format_upper_case = 1
    .label uvalue = $d80
    // printf_uint::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [61] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // utoa(uvalue, printf_buffer.digits, format.radix)
    // [62] call utoa 
  // Format number into buffer
    // [150] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
    jsr utoa
    // printf_uint::@2
    // printf_number_buffer(printf_buffer, format)
    // [63] (byte) printf_number_buffer::buffer_sign#0 ← *((byte*)&(struct printf_buffer_number) printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [64] call printf_number_buffer 
  // Print using format
    // [66] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
    // [66] phi (byte) printf_number_buffer::format_upper_case#10 = (const byte) printf_uint::format_upper_case#0 [phi:printf_uint::@2->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #format_upper_case
    sta.z printf_number_buffer.format_upper_case
    // [66] phi (byte) printf_number_buffer::buffer_sign#10 = (byte) printf_number_buffer::buffer_sign#0 [phi:printf_uint::@2->printf_number_buffer#1] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_zero_padding#10 = (const byte) printf_uint::format_zero_padding#0 [phi:printf_uint::@2->printf_number_buffer#2] -- vbuz1=vbuc1 
    lda #format_zero_padding
    sta.z printf_number_buffer.format_zero_padding
    // [66] phi (byte) printf_number_buffer::format_justify_left#10 = (const byte) printf_uint::format_justify_left#0 [phi:printf_uint::@2->printf_number_buffer#3] -- vbuz1=vbuc1 
    lda #format_justify_left
    sta.z printf_number_buffer.format_justify_left
    // [66] phi (byte) printf_number_buffer::format_min_length#2 = (const byte) printf_uint::format_min_length#0 [phi:printf_uint::@2->printf_number_buffer#4] -- vbuxx=vbuc1 
    ldx #format_min_length
    jsr printf_number_buffer
    // printf_uint::@return
    // }
    // [65] return 
    rts
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// printf_number_buffer(byte zp(7) buffer_sign, byte register(X) format_min_length, byte zp(4) format_justify_left, byte zp(2) format_zero_padding, byte zp(8) format_upper_case)
printf_number_buffer: {
    .label __19 = 5
    .label buffer_sign = 7
    .label format_zero_padding = 2
    .label padding = $b
    .label format_justify_left = 4
    .label format_upper_case = 8
    // if(format.min_length)
    // [67] if((byte) 0==(byte) printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1 -- vbuc1_eq_vbuxx_then_la1 
    cpx #0
    beq __b6
    // [68] phi from printf_number_buffer to printf_number_buffer::@6 [phi:printf_number_buffer->printf_number_buffer::@6]
    // printf_number_buffer::@6
    // strlen(buffer.digits)
    // [69] call strlen 
    // [144] phi from printf_number_buffer::@6 to strlen [phi:printf_number_buffer::@6->strlen]
    jsr strlen
    // strlen(buffer.digits)
    // [70] (word) strlen::return#2 ← (word) strlen::len#2
    // printf_number_buffer::@14
    // [71] (word~) printf_number_buffer::$19 ← (word) strlen::return#2
    // len = (signed char)strlen(buffer.digits)
    // [72] (signed byte) printf_number_buffer::len#0 ← (signed byte)(word~) printf_number_buffer::$19 -- vbsyy=_sbyte_vwuz1 
    // There is a minimum length - work out the padding
    lda.z __19
    tay
    // if(buffer.sign)
    // [73] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z buffer_sign
    beq __b13
    // printf_number_buffer::@7
    // len++;
    // [74] (signed byte) printf_number_buffer::len#1 ← ++ (signed byte) printf_number_buffer::len#0 -- vbsyy=_inc_vbsyy 
    iny
    // [75] phi from printf_number_buffer::@14 printf_number_buffer::@7 to printf_number_buffer::@13 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13]
    // [75] phi (signed byte) printf_number_buffer::len#2 = (signed byte) printf_number_buffer::len#0 [phi:printf_number_buffer::@14/printf_number_buffer::@7->printf_number_buffer::@13#0] -- register_copy 
    // printf_number_buffer::@13
  __b13:
    // padding = (signed char)format.min_length - len
    // [76] (signed byte) printf_number_buffer::padding#1 ← (signed byte)(byte) printf_number_buffer::format_min_length#2 - (signed byte) printf_number_buffer::len#2 -- vbsz1=vbsxx_minus_vbsyy 
    txa
    sty.z $ff
    sec
    sbc.z $ff
    sta.z padding
    // if(padding<0)
    // [77] if((signed byte) printf_number_buffer::padding#1>=(signed byte) 0) goto printf_number_buffer::@21 -- vbsz1_ge_0_then_la1 
    cmp #0
    bpl __b1
    // [79] phi from printf_number_buffer printf_number_buffer::@13 to printf_number_buffer::@1 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1]
  __b6:
    // [79] phi (signed byte) printf_number_buffer::padding#10 = (signed byte) 0 [phi:printf_number_buffer/printf_number_buffer::@13->printf_number_buffer::@1#0] -- vbsz1=vbsc1 
    lda #0
    sta.z padding
    // [78] phi from printf_number_buffer::@13 to printf_number_buffer::@21 [phi:printf_number_buffer::@13->printf_number_buffer::@21]
    // printf_number_buffer::@21
    // [79] phi from printf_number_buffer::@21 to printf_number_buffer::@1 [phi:printf_number_buffer::@21->printf_number_buffer::@1]
    // [79] phi (signed byte) printf_number_buffer::padding#10 = (signed byte) printf_number_buffer::padding#1 [phi:printf_number_buffer::@21->printf_number_buffer::@1#0] -- register_copy 
    // printf_number_buffer::@1
  __b1:
    // if(!format.justify_left && !format.zero_padding && padding)
    // [80] if((byte) 0!=(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z format_justify_left
    bne __b2
    // printf_number_buffer::@17
    // [81] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2 -- vbuc1_neq_vbuz1_then_la1 
    cmp.z format_zero_padding
    bne __b2
    // printf_number_buffer::@16
    // [82] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@8 -- vbsc1_neq_vbsz1_then_la1 
    cmp.z padding
    bne __b8
    jmp __b2
    // printf_number_buffer::@8
  __b8:
    // printf_padding(' ',(char)padding)
    // [83] (byte) printf_padding::length#0 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [84] call printf_padding 
    // [103] phi from printf_number_buffer::@8 to printf_padding [phi:printf_number_buffer::@8->printf_padding]
    // [103] phi (byte) printf_padding::pad#5 = (byte) ' ' [phi:printf_number_buffer::@8->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#0 [phi:printf_number_buffer::@8->printf_padding#1] -- register_copy 
    jsr printf_padding
    // printf_number_buffer::@2
  __b2:
    // if(buffer.sign)
    // [85] if((byte) 0==(byte) printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z buffer_sign
    beq __b3
    // printf_number_buffer::@9
    // cputc(buffer.sign)
    // [86] (byte) cputc::c#2 ← (byte) printf_number_buffer::buffer_sign#10 -- vbuaa=vbuz1 
    lda.z buffer_sign
    // [87] call cputc 
    // [110] phi from printf_number_buffer::@9 to cputc [phi:printf_number_buffer::@9->cputc]
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#2 [phi:printf_number_buffer::@9->cputc#0] -- register_copy 
    jsr cputc
    // printf_number_buffer::@3
  __b3:
    // if(format.zero_padding && padding)
    // [88] if((byte) 0==(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_zero_padding
    beq __b4
    // printf_number_buffer::@18
    // [89] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@10 -- vbsc1_neq_vbsz1_then_la1 
    cmp.z padding
    bne __b10
    jmp __b4
    // printf_number_buffer::@10
  __b10:
    // printf_padding('0',(char)padding)
    // [90] (byte) printf_padding::length#1 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [91] call printf_padding 
    // [103] phi from printf_number_buffer::@10 to printf_padding [phi:printf_number_buffer::@10->printf_padding]
    // [103] phi (byte) printf_padding::pad#5 = (byte) '0' [phi:printf_number_buffer::@10->printf_padding#0] -- vbuz1=vbuc1 
    lda #'0'
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#1 [phi:printf_number_buffer::@10->printf_padding#1] -- register_copy 
    jsr printf_padding
    // printf_number_buffer::@4
  __b4:
    // if(format.upper_case)
    // [92] if((byte) 0==(byte) printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_upper_case
    beq __b5
    // [93] phi from printf_number_buffer::@4 to printf_number_buffer::@11 [phi:printf_number_buffer::@4->printf_number_buffer::@11]
    // printf_number_buffer::@11
    // strupr(buffer.digits)
    // [94] call strupr 
    // [129] phi from printf_number_buffer::@11 to strupr [phi:printf_number_buffer::@11->strupr]
    jsr strupr
    // [95] phi from printf_number_buffer::@11 printf_number_buffer::@4 to printf_number_buffer::@5 [phi:printf_number_buffer::@11/printf_number_buffer::@4->printf_number_buffer::@5]
    // printf_number_buffer::@5
  __b5:
    // cputs(buffer.digits)
    // [96] call cputs 
    // [121] phi from printf_number_buffer::@5 to cputs [phi:printf_number_buffer::@5->cputs]
    jsr cputs
    // printf_number_buffer::@15
    // if(format.justify_left && !format.zero_padding && padding)
    // [97] if((byte) 0==(byte) printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z format_justify_left
    beq __breturn
    // printf_number_buffer::@20
    // [98] if((byte) 0!=(byte) printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return -- vbuc1_neq_vbuz1_then_la1 
    cmp.z format_zero_padding
    bne __breturn
    // printf_number_buffer::@19
    // [99] if((signed byte) 0!=(signed byte) printf_number_buffer::padding#10) goto printf_number_buffer::@12 -- vbsc1_neq_vbsz1_then_la1 
    cmp.z padding
    bne __b12
    rts
    // printf_number_buffer::@12
  __b12:
    // printf_padding(' ',(char)padding)
    // [100] (byte) printf_padding::length#2 ← (byte)(signed byte) printf_number_buffer::padding#10 -- vbuz1=vbuz2 
    lda.z padding
    sta.z printf_padding.length
    // [101] call printf_padding 
    // [103] phi from printf_number_buffer::@12 to printf_padding [phi:printf_number_buffer::@12->printf_padding]
    // [103] phi (byte) printf_padding::pad#5 = (byte) ' ' [phi:printf_number_buffer::@12->printf_padding#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z printf_padding.pad
    // [103] phi (byte) printf_padding::length#4 = (byte) printf_padding::length#2 [phi:printf_number_buffer::@12->printf_padding#1] -- register_copy 
    jsr printf_padding
    // printf_number_buffer::@return
  __breturn:
    // }
    // [102] return 
    rts
}
  // printf_padding
// Print a padding char a number of times
// printf_padding(byte zp($17) pad, byte zp($c) length)
printf_padding: {
    .label i = 3
    .label length = $c
    .label pad = $17
    // [104] phi from printf_padding to printf_padding::@1 [phi:printf_padding->printf_padding::@1]
    // [104] phi (byte) printf_padding::i#2 = (byte) 0 [phi:printf_padding->printf_padding::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // printf_padding::@1
  __b1:
    // for(char i=0;i<length; i++)
    // [105] if((byte) printf_padding::i#2<(byte) printf_padding::length#4) goto printf_padding::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2
    // printf_padding::@return
    // }
    // [106] return 
    rts
    // printf_padding::@2
  __b2:
    // cputc(pad)
    // [107] (byte) cputc::c#1 ← (byte) printf_padding::pad#5 -- vbuaa=vbuz1 
    lda.z pad
    // [108] call cputc 
    // [110] phi from printf_padding::@2 to cputc [phi:printf_padding::@2->cputc]
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#1 [phi:printf_padding::@2->cputc#0] -- register_copy 
    jsr cputc
    // printf_padding::@3
    // for(char i=0;i<length; i++)
    // [109] (byte) printf_padding::i#1 ← ++ (byte) printf_padding::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [104] phi from printf_padding::@3 to printf_padding::@1 [phi:printf_padding::@3->printf_padding::@1]
    // [104] phi (byte) printf_padding::i#2 = (byte) printf_padding::i#1 [phi:printf_padding::@3->printf_padding::@1#0] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte register(A) c)
cputc: {
    // if(c=='\n')
    // [111] if((byte) cputc::c#3==(byte) ' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1
    // cputc::@2
    // conio_line_text[conio_cursor_x] = c
    // [112] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#3 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // conio_line_color[conio_cursor_x] = conio_textcolor
    // [113] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (const nomodify byte) LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    sta (conio_line_color),y
    // if(++conio_cursor_x==CONIO_WIDTH)
    // [114] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [115] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [116] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
    // cputc::@3
    // cputln()
    // [117] call cputln 
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [118] return 
    rts
    // [119] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [120] call cputln 
    jsr cputln
    rts
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp($d) s)
cputs: {
    .label s = $d
    // [122] phi from cputs to cputs::@1 [phi:cputs->cputs::@1]
    // [122] phi (to_nomodify byte*) cputs::s#2 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:cputs->cputs::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z s
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z s+1
    // cputs::@1
  __b1:
    // c=*s++
    // [123] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // while(c=*s++)
    // [124] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [125] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // cputs::@return
    // }
    // [126] return 
    rts
    // cputs::@2
  __b2:
    // cputc(c)
    // [127] (byte) cputc::c#0 ← (byte) cputs::c#1
    // [128] call cputc 
    // [110] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
    // [110] phi (byte) cputc::c#3 = (byte) cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    // [122] phi from cputs::@2 to cputs::@1 [phi:cputs::@2->cputs::@1]
    // [122] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#0 [phi:cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
}
  // strupr
// Converts a string to uppercase.
strupr: {
    .label str = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label src = 9
    // [130] phi from strupr to strupr::@1 [phi:strupr->strupr::@1]
    // [130] phi (byte*) strupr::src#2 = (const byte*) strupr::str#0 [phi:strupr->strupr::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z src
    lda #>str
    sta.z src+1
    // strupr::@1
  __b1:
    // while(*src)
    // [131] if((byte) 0!=*((byte*) strupr::src#2)) goto strupr::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (src),y
    cmp #0
    bne __b2
    // strupr::@return
    // }
    // [132] return 
    rts
    // strupr::@2
  __b2:
    // toupper(*src)
    // [133] (byte) toupper::ch#0 ← *((byte*) strupr::src#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (src),y
    // [134] call toupper 
    jsr toupper
    // [135] (byte) toupper::return#3 ← (byte) toupper::return#2
    // strupr::@3
    // [136] (byte~) strupr::$0 ← (byte) toupper::return#3
    // *src = toupper(*src)
    // [137] *((byte*) strupr::src#2) ← (byte~) strupr::$0 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (src),y
    // src++;
    // [138] (byte*) strupr::src#1 ← ++ (byte*) strupr::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    // [130] phi from strupr::@3 to strupr::@1 [phi:strupr::@3->strupr::@1]
    // [130] phi (byte*) strupr::src#2 = (byte*) strupr::src#1 [phi:strupr::@3->strupr::@1#0] -- register_copy 
    jmp __b1
}
  // toupper
// Convert lowercase alphabet to uppercase
// Returns uppercase equivalent to c, if such value exists, else c remains unchanged
// toupper(byte register(A) ch)
toupper: {
    // if(ch>='a' && ch<='z')
    // [139] if((byte) toupper::ch#0<(byte) 'a') goto toupper::@return -- vbuaa_lt_vbuc1_then_la1 
    cmp #'a'
    bcc __breturn
    // toupper::@2
    // [140] if((byte) toupper::ch#0<=(byte) 'z') goto toupper::@1 -- vbuaa_le_vbuc1_then_la1 
    cmp #'z'
    bcc __b1
    beq __b1
    // [142] phi from toupper toupper::@1 toupper::@2 to toupper::@return [phi:toupper/toupper::@1/toupper::@2->toupper::@return]
    // [142] phi (byte) toupper::return#2 = (byte) toupper::ch#0 [phi:toupper/toupper::@1/toupper::@2->toupper::@return#0] -- register_copy 
    rts
    // toupper::@1
  __b1:
    // return ch + ('A'-'a');
    // [141] (byte) toupper::return#0 ← (byte) toupper::ch#0 + (byte) 'A'-(byte) 'a' -- vbuaa=vbuaa_plus_vbuc1 
    clc
    adc #'A'-'a'
    // toupper::@return
  __breturn:
    // }
    // [143] return 
    rts
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp($d) str)
strlen: {
    .label len = 5
    .label str = $d
    .label return = 5
    // [145] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
    // [145] phi (word) strlen::len#2 = (word) 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    sta.z len+1
    // [145] phi (byte*) strlen::str#2 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:strlen->strlen::@1#1] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z str+1
    // strlen::@1
  __b1:
    // while(*str)
    // [146] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // strlen::@return
    // }
    // [147] return 
    rts
    // strlen::@2
  __b2:
    // len++;
    // [148] (word) strlen::len#1 ← ++ (word) strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // str++;
    // [149] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [145] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
    // [145] phi (word) strlen::len#2 = (word) strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [145] phi (byte*) strlen::str#2 = (byte*) strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// utoa(word zp(5) value, byte* zp(9) buffer)
utoa: {
    .const max_digits = 4
    .label digit_value = $15
    .label buffer = 9
    .label digit = 4
    .label value = 5
    // [151] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
    // [151] phi (byte*) utoa::buffer#11 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [151] phi (byte) utoa::started#2 = (byte) 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [151] phi (word) utoa::value#2 = (const word) printf_uint::uvalue#0 [phi:utoa->utoa::@1#2] -- vwuz1=vwuc1 
    lda #<printf_uint.uvalue
    sta.z value
    lda #>printf_uint.uvalue
    sta.z value+1
    // [151] phi (byte) utoa::digit#2 = (byte) 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    txa
    sta.z digit
    // utoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [152] if((byte) utoa::digit#2<(const byte) utoa::max_digits#2-(byte) 1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    // utoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [153] (byte~) utoa::$11 ← (byte)(word) utoa::value#2 -- vbuaa=_byte_vwuz1 
    lda.z value
    // [154] *((byte*) utoa::buffer#11) ← *((const byte*) DIGITS + (byte~) utoa::$11) -- _deref_pbuz1=pbuc1_derefidx_vbuaa 
    tay
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [155] (byte*) utoa::buffer#3 ← ++ (byte*) utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [156] *((byte*) utoa::buffer#3) ← (byte) 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // utoa::@return
    // }
    // [157] return 
    rts
    // utoa::@2
  __b2:
    // digit_value = digit_values[digit]
    // [158] (byte~) utoa::$10 ← (byte) utoa::digit#2 << (byte) 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [159] (word) utoa::digit_value#0 ← *((const word*) RADIX_HEXADECIMAL_VALUES + (byte~) utoa::$10) -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_HEXADECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_HEXADECIMAL_VALUES+1,y
    sta.z digit_value+1
    // if (started || value >= digit_value)
    // [160] if((byte) 0!=(byte) utoa::started#2) goto utoa::@5 -- vbuc1_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    // utoa::@7
    // [161] if((word) utoa::value#2>=(word) utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [162] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
    // [162] phi (byte*) utoa::buffer#14 = (byte*) utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [162] phi (byte) utoa::started#4 = (byte) utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [162] phi (word) utoa::value#6 = (word) utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    // utoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [163] (byte) utoa::digit#1 ← ++ (byte) utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [151] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
    // [151] phi (byte*) utoa::buffer#11 = (byte*) utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [151] phi (byte) utoa::started#2 = (byte) utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [151] phi (word) utoa::value#2 = (word) utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [151] phi (byte) utoa::digit#2 = (byte) utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // utoa_append(buffer++, value, digit_value)
    // [164] (byte*) utoa_append::buffer#0 ← (byte*) utoa::buffer#11
    // [165] (word) utoa_append::value#0 ← (word) utoa::value#2
    // [166] (word) utoa_append::sub#0 ← (word) utoa::digit_value#0
    // [167] call utoa_append 
    // [171] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
    jsr utoa_append
    // utoa_append(buffer++, value, digit_value)
    // [168] (word) utoa_append::return#0 ← (word) utoa_append::value#2
    // utoa::@6
    // value = utoa_append(buffer++, value, digit_value)
    // [169] (word) utoa::value#0 ← (word) utoa_append::return#0
    // value = utoa_append(buffer++, value, digit_value);
    // [170] (byte*) utoa::buffer#4 ← ++ (byte*) utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [162] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
    // [162] phi (byte*) utoa::buffer#14 = (byte*) utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [162] phi (byte) utoa::started#4 = (byte) 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [162] phi (word) utoa::value#6 = (word) utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// utoa_append(byte* zp(9) buffer, word zp(5) value, word zp($15) sub)
utoa_append: {
    .label buffer = 9
    .label value = 5
    .label sub = $15
    .label return = 5
    // [172] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
    // [172] phi (byte) utoa_append::digit#2 = (byte) 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [172] phi (word) utoa_append::value#2 = (word) utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    // utoa_append::@1
  __b1:
    // while (value >= sub)
    // [173] if((word) utoa_append::value#2>=(word) utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    // utoa_append::@3
    // *buffer = DIGITS[digit]
    // [174] *((byte*) utoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) utoa_append::digit#2) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // utoa_append::@return
    // }
    // [175] return 
    rts
    // utoa_append::@2
  __b2:
    // digit++;
    // [176] (byte) utoa_append::digit#1 ← ++ (byte) utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // value -= sub
    // [177] (word) utoa_append::value#1 ← (word) utoa_append::value#2 - (word) utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [172] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
    // [172] phi (byte) utoa_append::digit#2 = (byte) utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [172] phi (word) utoa_append::value#2 = (word) utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // printf_schar
// Print a signed char using a specific format
// printf_schar(signed byte register(X) value, byte register(Y) format_sign_always, byte zp(2) format_zero_padding, byte zp(7) format_radix)
printf_schar: {
    .label format_radix = 7
    .label format_zero_padding = 2
    // printf_buffer.sign = 0
    // [179] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // if(value<0)
    // [180] if((signed byte) printf_schar::value#3<(signed byte) 0) goto printf_schar::@1 -- vbsxx_lt_0_then_la1 
    cpx #0
    bmi __b1
    // printf_schar::@3
    // if(format.sign_always)
    // [181] if((byte) 0==(byte) printf_schar::format_sign_always#2) goto printf_schar::@2 -- vbuc1_eq_vbuyy_then_la1 
    cpy #0
    beq __b2
    // printf_schar::@4
    // printf_buffer.sign = '+'
    // [182] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '+' -- _deref_pbuc1=vbuc2 
    lda #'+'
    sta printf_buffer
    // [183] phi from printf_schar::@1 printf_schar::@3 printf_schar::@4 to printf_schar::@2 [phi:printf_schar::@1/printf_schar::@3/printf_schar::@4->printf_schar::@2]
    // [183] phi (signed byte) printf_schar::value#5 = (signed byte) printf_schar::value#0 [phi:printf_schar::@1/printf_schar::@3/printf_schar::@4->printf_schar::@2#0] -- register_copy 
    // printf_schar::@2
  __b2:
    // uctoa(uvalue, printf_buffer.digits, format.radix)
    // [184] (byte) uctoa::value#1 ← (byte)(signed byte) printf_schar::value#5
    // [185] (byte) uctoa::radix#0 ← (byte) printf_schar::format_radix#2 -- vbuaa=vbuz1 
    lda.z format_radix
    // [186] call uctoa 
    jsr uctoa
    // printf_schar::@5
    // printf_number_buffer(printf_buffer, format)
    // [187] (byte) printf_number_buffer::buffer_sign#1 ← *((byte*)&(struct printf_buffer_number) printf_buffer) -- vbuz1=_deref_pbuc1 
    lda printf_buffer
    sta.z printf_number_buffer.buffer_sign
    // [188] (byte) printf_number_buffer::format_zero_padding#1 ← (byte) printf_schar::format_zero_padding#2
    // [189] call printf_number_buffer 
  // Print using format
    // [66] phi from printf_schar::@5 to printf_number_buffer [phi:printf_schar::@5->printf_number_buffer]
    // [66] phi (byte) printf_number_buffer::format_upper_case#10 = (byte) 0 [phi:printf_schar::@5->printf_number_buffer#0] -- vbuz1=vbuc1 
    lda #0
    sta.z printf_number_buffer.format_upper_case
    // [66] phi (byte) printf_number_buffer::buffer_sign#10 = (byte) printf_number_buffer::buffer_sign#1 [phi:printf_schar::@5->printf_number_buffer#1] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_zero_padding#10 = (byte) printf_number_buffer::format_zero_padding#1 [phi:printf_schar::@5->printf_number_buffer#2] -- register_copy 
    // [66] phi (byte) printf_number_buffer::format_justify_left#10 = (byte) 0 [phi:printf_schar::@5->printf_number_buffer#3] -- vbuz1=vbuc1 
    sta.z printf_number_buffer.format_justify_left
    // [66] phi (byte) printf_number_buffer::format_min_length#2 = (byte) 6 [phi:printf_schar::@5->printf_number_buffer#4] -- vbuxx=vbuc1 
    ldx #6
    jsr printf_number_buffer
    // printf_schar::@return
    // }
    // [190] return 
    rts
    // printf_schar::@1
  __b1:
    // value = -value
    // [191] (signed byte) printf_schar::value#0 ← - (signed byte) printf_schar::value#3 -- vbsxx=_neg_vbsxx 
    txa
    eor #$ff
    clc
    adc #1
    tax
    // printf_buffer.sign = '-'
    // [192] *((byte*)&(struct printf_buffer_number) printf_buffer) ← (byte) '-' -- _deref_pbuc1=vbuc2 
    lda #'-'
    sta printf_buffer
    jmp __b2
}
  // uctoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// uctoa(byte register(X) value, byte* zp($d) buffer, byte register(A) radix)
uctoa: {
    .label buffer = $d
    .label digit = $b
    .label started = $c
    .label max_digits = 8
    .label digit_values = 9
    // if(radix==DECIMAL)
    // [193] if((byte) uctoa::radix#0==(const byte) DECIMAL) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #DECIMAL
    beq __b2
    // uctoa::@2
    // if(radix==HEXADECIMAL)
    // [194] if((byte) uctoa::radix#0==(const byte) HEXADECIMAL) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #HEXADECIMAL
    beq __b3
    // uctoa::@3
    // if(radix==OCTAL)
    // [195] if((byte) uctoa::radix#0==(const byte) OCTAL) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #OCTAL
    beq __b4
    // uctoa::@4
    // if(radix==BINARY)
    // [196] if((byte) uctoa::radix#0==(const byte) BINARY) goto uctoa::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #BINARY
    beq __b5
    // uctoa::@5
    // *buffer++ = 'e'
    // [197] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) ← (byte) 'e' -- _deref_pbuc1=vbuc2 
    // Unknown radix
    lda #'e'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    // *buffer++ = 'r'
    // [198] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 1) ← (byte) 'r' -- _deref_pbuc1=vbuc2 
    lda #'r'
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
    // [199] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 2) ← (byte) 'r' -- _deref_pbuc1=vbuc2 
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
    // *buffer = 0
    // [200] *((byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+(byte) 3) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3
    // uctoa::@return
    // }
    // [201] return 
    rts
    // [202] phi from uctoa to uctoa::@1 [phi:uctoa->uctoa::@1]
  __b2:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_DECIMAL_VALUES_CHAR [phi:uctoa->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_DECIMAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_DECIMAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 3 [phi:uctoa->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #3
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@2 to uctoa::@1 [phi:uctoa::@2->uctoa::@1]
  __b3:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_HEXADECIMAL_VALUES_CHAR [phi:uctoa::@2->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_HEXADECIMAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_HEXADECIMAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 2 [phi:uctoa::@2->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #2
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@3 to uctoa::@1 [phi:uctoa::@3->uctoa::@1]
  __b4:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_OCTAL_VALUES_CHAR [phi:uctoa::@3->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_OCTAL_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_OCTAL_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 3 [phi:uctoa::@3->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #3
    sta.z max_digits
    jmp __b1
    // [202] phi from uctoa::@4 to uctoa::@1 [phi:uctoa::@4->uctoa::@1]
  __b5:
    // [202] phi (byte*) uctoa::digit_values#8 = (const byte*) RADIX_BINARY_VALUES_CHAR [phi:uctoa::@4->uctoa::@1#0] -- pbuz1=pbuc1 
    lda #<RADIX_BINARY_VALUES_CHAR
    sta.z digit_values
    lda #>RADIX_BINARY_VALUES_CHAR
    sta.z digit_values+1
    // [202] phi (byte) uctoa::max_digits#7 = (byte) 8 [phi:uctoa::@4->uctoa::@1#1] -- vbuz1=vbuc1 
    lda #8
    sta.z max_digits
    // uctoa::@1
  __b1:
    // [203] phi from uctoa::@1 to uctoa::@6 [phi:uctoa::@1->uctoa::@6]
    // [203] phi (byte*) uctoa::buffer#11 = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:uctoa::@1->uctoa::@6#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [203] phi (byte) uctoa::started#2 = (byte) 0 [phi:uctoa::@1->uctoa::@6#1] -- vbuz1=vbuc1 
    lda #0
    sta.z started
    // [203] phi (byte) uctoa::value#2 = (byte) uctoa::value#1 [phi:uctoa::@1->uctoa::@6#2] -- register_copy 
    // [203] phi (byte) uctoa::digit#2 = (byte) 0 [phi:uctoa::@1->uctoa::@6#3] -- vbuz1=vbuc1 
    sta.z digit
    // uctoa::@6
  __b6:
    // max_digits-1
    // [204] (byte~) uctoa::$4 ← (byte) uctoa::max_digits#7 - (byte) 1 -- vbuaa=vbuz1_minus_1 
    lda.z max_digits
    sec
    sbc #1
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [205] if((byte) uctoa::digit#2<(byte~) uctoa::$4) goto uctoa::@7 -- vbuz1_lt_vbuaa_then_la1 
    cmp.z digit
    beq !+
    bcs __b7
  !:
    // uctoa::@8
    // *buffer++ = DIGITS[(char)value]
    // [206] *((byte*) uctoa::buffer#11) ← *((const byte*) DIGITS + (byte) uctoa::value#2) -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [207] (byte*) uctoa::buffer#3 ← ++ (byte*) uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [208] *((byte*) uctoa::buffer#3) ← (byte) 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    rts
    // uctoa::@7
  __b7:
    // digit_value = digit_values[digit]
    // [209] (byte) uctoa::digit_value#0 ← *((byte*) uctoa::digit_values#8 + (byte) uctoa::digit#2) -- vbuyy=pbuz1_derefidx_vbuz2 
    ldy.z digit
    lda (digit_values),y
    tay
    // if (started || value >= digit_value)
    // [210] if((byte) 0!=(byte) uctoa::started#2) goto uctoa::@10 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z started
    bne __b10
    // uctoa::@12
    // [211] if((byte) uctoa::value#2>=(byte) uctoa::digit_value#0) goto uctoa::@10 -- vbuxx_ge_vbuyy_then_la1 
    sty.z $ff
    cpx.z $ff
    bcs __b10
    // [212] phi from uctoa::@12 to uctoa::@9 [phi:uctoa::@12->uctoa::@9]
    // [212] phi (byte*) uctoa::buffer#14 = (byte*) uctoa::buffer#11 [phi:uctoa::@12->uctoa::@9#0] -- register_copy 
    // [212] phi (byte) uctoa::started#4 = (byte) uctoa::started#2 [phi:uctoa::@12->uctoa::@9#1] -- register_copy 
    // [212] phi (byte) uctoa::value#6 = (byte) uctoa::value#2 [phi:uctoa::@12->uctoa::@9#2] -- register_copy 
    // uctoa::@9
  __b9:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [213] (byte) uctoa::digit#1 ← ++ (byte) uctoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [203] phi from uctoa::@9 to uctoa::@6 [phi:uctoa::@9->uctoa::@6]
    // [203] phi (byte*) uctoa::buffer#11 = (byte*) uctoa::buffer#14 [phi:uctoa::@9->uctoa::@6#0] -- register_copy 
    // [203] phi (byte) uctoa::started#2 = (byte) uctoa::started#4 [phi:uctoa::@9->uctoa::@6#1] -- register_copy 
    // [203] phi (byte) uctoa::value#2 = (byte) uctoa::value#6 [phi:uctoa::@9->uctoa::@6#2] -- register_copy 
    // [203] phi (byte) uctoa::digit#2 = (byte) uctoa::digit#1 [phi:uctoa::@9->uctoa::@6#3] -- register_copy 
    jmp __b6
    // uctoa::@10
  __b10:
    // uctoa_append(buffer++, value, digit_value)
    // [214] (byte*) uctoa_append::buffer#0 ← (byte*) uctoa::buffer#11
    // [215] (byte) uctoa_append::value#0 ← (byte) uctoa::value#2
    // [216] (byte) uctoa_append::sub#0 ← (byte) uctoa::digit_value#0 -- vbuz1=vbuyy 
    sty.z uctoa_append.sub
    // [217] call uctoa_append 
    // [221] phi from uctoa::@10 to uctoa_append [phi:uctoa::@10->uctoa_append]
    jsr uctoa_append
    // uctoa_append(buffer++, value, digit_value)
    // [218] (byte) uctoa_append::return#0 ← (byte) uctoa_append::value#2
    // uctoa::@11
    // value = uctoa_append(buffer++, value, digit_value)
    // [219] (byte) uctoa::value#0 ← (byte) uctoa_append::return#0
    // value = uctoa_append(buffer++, value, digit_value);
    // [220] (byte*) uctoa::buffer#4 ← ++ (byte*) uctoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [212] phi from uctoa::@11 to uctoa::@9 [phi:uctoa::@11->uctoa::@9]
    // [212] phi (byte*) uctoa::buffer#14 = (byte*) uctoa::buffer#4 [phi:uctoa::@11->uctoa::@9#0] -- register_copy 
    // [212] phi (byte) uctoa::started#4 = (byte) 1 [phi:uctoa::@11->uctoa::@9#1] -- vbuz1=vbuc1 
    lda #1
    sta.z started
    // [212] phi (byte) uctoa::value#6 = (byte) uctoa::value#0 [phi:uctoa::@11->uctoa::@9#2] -- register_copy 
    jmp __b9
}
  // uctoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// uctoa_append(byte* zp($d) buffer, byte register(X) value, byte zp($17) sub)
uctoa_append: {
    .label buffer = $d
    .label sub = $17
    // [222] phi from uctoa_append to uctoa_append::@1 [phi:uctoa_append->uctoa_append::@1]
    // [222] phi (byte) uctoa_append::digit#2 = (byte) 0 [phi:uctoa_append->uctoa_append::@1#0] -- vbuyy=vbuc1 
    ldy #0
    // [222] phi (byte) uctoa_append::value#2 = (byte) uctoa_append::value#0 [phi:uctoa_append->uctoa_append::@1#1] -- register_copy 
    // uctoa_append::@1
  __b1:
    // while (value >= sub)
    // [223] if((byte) uctoa_append::value#2>=(byte) uctoa_append::sub#0) goto uctoa_append::@2 -- vbuxx_ge_vbuz1_then_la1 
    cpx.z sub
    bcs __b2
    // uctoa_append::@3
    // *buffer = DIGITS[digit]
    // [224] *((byte*) uctoa_append::buffer#0) ← *((const byte*) DIGITS + (byte) uctoa_append::digit#2) -- _deref_pbuz1=pbuc1_derefidx_vbuyy 
    lda DIGITS,y
    ldy #0
    sta (buffer),y
    // uctoa_append::@return
    // }
    // [225] return 
    rts
    // uctoa_append::@2
  __b2:
    // digit++;
    // [226] (byte) uctoa_append::digit#1 ← ++ (byte) uctoa_append::digit#2 -- vbuyy=_inc_vbuyy 
    iny
    // value -= sub
    // [227] (byte) uctoa_append::value#1 ← (byte) uctoa_append::value#2 - (byte) uctoa_append::sub#0 -- vbuxx=vbuxx_minus_vbuz1 
    txa
    sec
    sbc.z sub
    tax
    // [222] phi from uctoa_append::@2 to uctoa_append::@1 [phi:uctoa_append::@2->uctoa_append::@1]
    // [222] phi (byte) uctoa_append::digit#2 = (byte) uctoa_append::digit#1 [phi:uctoa_append::@2->uctoa_append::@1#0] -- register_copy 
    // [222] phi (byte) uctoa_append::value#2 = (byte) uctoa_append::value#1 [phi:uctoa_append::@2->uctoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label line_text = $d
    .label line_cols = $11
    // [229] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
    // [229] phi (byte*) clrscr::line_cols#5 = (const nomodify byte*) COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [229] phi (byte*) clrscr::line_text#5 = (const nomodify byte*) DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [229] phi (byte) clrscr::l#2 = (byte) 0 [phi:clrscr->clrscr::@1#2] -- vbuxx=vbuc1 
    ldx #0
    // clrscr::@1
  __b1:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [230] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b2
    // clrscr::@2
    // conio_cursor_x = 0
    // [231] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = 0
    // [232] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // conio_line_text = CONIO_SCREEN_TEXT
    // [233] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // conio_line_color = CONIO_SCREEN_COLORS
    // [234] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // clrscr::@return
    // }
    // [235] return 
    rts
    // [236] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b2:
    // [236] phi (byte) clrscr::c#2 = (byte) 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuyy=vbuc1 
    ldy #0
    // clrscr::@3
  __b3:
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [237] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4 -- vbuyy_lt_vbuc1_then_la1 
    cpy #$28
    bcc __b4
    // clrscr::@5
    // line_text += CONIO_WIDTH
    // [238] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // line_cols += CONIO_WIDTH
    // [239] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [240] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [229] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
    // [229] phi (byte*) clrscr::line_cols#5 = (byte*) clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [229] phi (byte*) clrscr::line_text#5 = (byte*) clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [229] phi (byte) clrscr::l#2 = (byte) clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // line_text[c] = ' '
    // [241] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #' '
    sta (line_text),y
    // line_cols[c] = conio_textcolor
    // [242] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (const nomodify byte) LIGHT_BLUE -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #LIGHT_BLUE
    sta (line_cols),y
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [243] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [236] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
    // [236] phi (byte) clrscr::c#2 = (byte) clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // File Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of binary digits
  RADIX_BINARY_VALUES_CHAR: .byte $80, $40, $20, $10, 8, 4, 2
  // Values of octal digits
  RADIX_OCTAL_VALUES_CHAR: .byte $40, 8
  // Values of decimal digits
  RADIX_DECIMAL_VALUES_CHAR: .byte $64, $a
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES_CHAR: .byte $10
  // Values of hexadecimal digits
  RADIX_HEXADECIMAL_VALUES: .word $1000, $100, $10
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

