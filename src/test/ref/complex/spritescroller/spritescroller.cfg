@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (volatile byte) plex_show_idx ← (byte) 0
  [2] (volatile byte) plex_sprite_idx ← (byte) 0
  [3] (volatile byte) plex_sprite_msb ← (byte) 1
  to:@2
@2: scope:[]  from @1
  [4] (volatile byte) plex_free_next ← (byte) 0
  to:toSpritePtr1
toSpritePtr1: scope:[]  from @2
  [5] phi()
  to:@3
@3: scope:[]  from toSpritePtr1
  [6] (volatile bool) frame_done ← false
  to:@4
@4: scope:[]  from @3
  [7] phi()
  [8] call main 
  to:@end
@end: scope:[]  from @4
  [9] phi()

(void()) main()
main: scope:[main]  from @4
  asm { sei  }
  [11] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_CHARROM
  [12] call font_2x2 
  to:main::@9
main::@9: scope:[main]  from main
  [13] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_BASIC_KERNEL_IO
  asm { cli  }
  [15] call font_2x2_to_sprites 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [16] phi()
  [17] call plexInit 
  to:main::toD0181
main::toD0181: scope:[main]  from main::@10
  [18] phi()
  to:main::@8
main::@8: scope:[main]  from main::toD0181
  [19] *((const nomodify byte*) D018) ← (const byte) main::toD0181_return#0
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@8
  [20] (byte) main::x#2 ← phi( main::@2/(byte) main::x#1 main::@8/(byte) 0 )
  [20] (byte) main::s#2 ← phi( main::@2/(byte) main::s#1 main::@8/(byte) 0 )
  [21] if((byte) main::s#2<(const nomodify byte) PLEX_COUNT) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [22] *((const nomodify byte*) SPRITES_ENABLE) ← (byte) $ff
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@4
  [23] (byte) main::s1#2 ← phi( main::@3/(byte) 0 main::@4/(byte) main::s1#1 )
  [24] *((const nomodify byte*) SPRITES_COLOR + (byte) main::s1#2) ← (const nomodify byte) WHITE
  [25] (byte) main::s1#1 ← ++ (byte) main::s1#2
  [26] if((byte) main::s1#1!=(byte) 8) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@4
  [27] phi()
  [28] call plex_move 
  to:main::@11
main::@11: scope:[main]  from main::@5
  [29] phi()
  [30] call plexSort 
  to:main::@12
main::@12: scope:[main]  from main::@11
  asm { sei  }
  [32] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_INTERRUPT) ← (const nomodify byte) CIA_INTERRUPT_CLEAR
  [33] *((const nomodify byte*) VIC_CONTROL) ← *((const nomodify byte*) VIC_CONTROL) & (byte) $7f
  [34] *((const nomodify byte*) RASTER) ← (byte) $28
  [35] *((const nomodify byte*) IRQ_ENABLE) ← (const nomodify byte) IRQ_RASTER
  [36] *((const nomodify byte*) IRQ_STATUS) ← (const nomodify byte) IRQ_RASTER
  [37] *((const nomodify void()**) KERNEL_IRQ) ← &interrupt(KERNEL_MIN)(void()) plex_irq()
  asm { cli  }
  to:main::@6
main::@6: scope:[main]  from main::@12 main::@13 main::@6
  [39] if((volatile bool) frame_done) goto main::@7
  to:main::@6
main::@7: scope:[main]  from main::@6
  [40] (volatile bool) frame_done ← false
  [41] call plex_move 
  to:main::@13
main::@13: scope:[main]  from main::@7
  [42] phi()
  [43] call plexSort 
  to:main::@6
main::@2: scope:[main]  from main::@1
  [44] *((const byte*) PLEX_PTR + (byte) main::s#2) ← (const byte) toSpritePtr1_return#0+(byte) ' '
  [45] (byte~) main::$12 ← (byte) main::s#2 << (byte) 1
  [46] (word~) main::$13 ← *((const nomodify byte*) XMOVEMENT_HI + (byte) main::x#2) w= *((const byte*) XMOVEMENT + (byte) main::x#2)
  [47] *((const word*) PLEX_XPOS + (byte~) main::$12) ← (word~) main::$13
  [48] (byte) main::x#1 ← (byte) main::x#2 + (byte) 8
  [49] (byte) main::s#1 ← ++ (byte) main::s#2
  to:main::@1

(void()) plexSort()
plexSort: scope:[plexSort]  from main::@11 main::@13
  [50] phi()
  to:plexSort::@1
plexSort::@1: scope:[plexSort]  from plexSort plexSort::@2
  [51] (byte) plexSort::m#2 ← phi( plexSort/(byte) 0 plexSort::@2/(byte) plexSort::m#1 )
  [52] (byte) plexSort::nxt_idx#0 ← *((const byte*) PLEX_SORTED_IDX+(byte) 1 + (byte) plexSort::m#2)
  [53] (byte) plexSort::nxt_y#0 ← *((const byte*) PLEX_YPOS + (byte) plexSort::nxt_idx#0)
  [54] if((byte) plexSort::nxt_y#0>=*((const byte*) PLEX_YPOS + *((const byte*) PLEX_SORTED_IDX + (byte) plexSort::m#2))) goto plexSort::@2
  to:plexSort::@5
plexSort::@5: scope:[plexSort]  from plexSort::@1
  [55] (byte) plexSort::s#6 ← (byte) plexSort::m#2
  to:plexSort::@3
plexSort::@3: scope:[plexSort]  from plexSort::@5 plexSort::@7
  [56] (byte) plexSort::s#3 ← phi( plexSort::@7/(byte) plexSort::s#1 plexSort::@5/(byte) plexSort::s#6 )
  [57] *((const byte*) PLEX_SORTED_IDX+(byte) 1 + (byte) plexSort::s#3) ← *((const byte*) PLEX_SORTED_IDX + (byte) plexSort::s#3)
  [58] (byte) plexSort::s#1 ← -- (byte) plexSort::s#3
  [59] if((byte) plexSort::s#1==(byte) $ff) goto plexSort::@4
  to:plexSort::@7
plexSort::@7: scope:[plexSort]  from plexSort::@3
  [60] if((byte) plexSort::nxt_y#0<*((const byte*) PLEX_YPOS + *((const byte*) PLEX_SORTED_IDX + (byte) plexSort::s#1))) goto plexSort::@3
  to:plexSort::@4
plexSort::@4: scope:[plexSort]  from plexSort::@3 plexSort::@7
  [61] (byte) plexSort::s#2 ← ++ (byte) plexSort::s#1
  [62] *((const byte*) PLEX_SORTED_IDX + (byte) plexSort::s#2) ← (byte) plexSort::nxt_idx#0
  to:plexSort::@2
plexSort::@2: scope:[plexSort]  from plexSort::@1 plexSort::@4
  [63] (byte) plexSort::m#1 ← ++ (byte) plexSort::m#2
  [64] if((byte) plexSort::m#1!=(const nomodify byte) PLEX_COUNT-(byte) 2+(byte) 1) goto plexSort::@1
  to:plexSort::@6
plexSort::@6: scope:[plexSort]  from plexSort::@2
  [65] (volatile byte) plex_show_idx ← (byte) 0
  [66] (volatile byte) plex_sprite_idx ← (byte) 0
  [67] (volatile byte) plex_sprite_msb ← (byte) 1
  to:plexSort::plexFreePrepare1
plexSort::plexFreePrepare1: scope:[plexSort]  from plexSort::@6
  [68] phi()
  to:plexSort::plexFreePrepare1_@1
plexSort::plexFreePrepare1_@1: scope:[plexSort]  from plexSort::plexFreePrepare1 plexSort::plexFreePrepare1_@1
  [69] (byte) plexSort::plexFreePrepare1_s#2 ← phi( plexSort::plexFreePrepare1/(byte) 0 plexSort::plexFreePrepare1_@1/(byte) plexSort::plexFreePrepare1_s#1 )
  [70] *((const byte*) PLEX_FREE_YPOS + (byte) plexSort::plexFreePrepare1_s#2) ← (byte) 0
  [71] (byte) plexSort::plexFreePrepare1_s#1 ← ++ (byte) plexSort::plexFreePrepare1_s#2
  [72] if((byte) plexSort::plexFreePrepare1_s#1!=(byte) 8) goto plexSort::plexFreePrepare1_@1
  to:plexSort::plexFreePrepare1_@2
plexSort::plexFreePrepare1_@2: scope:[plexSort]  from plexSort::plexFreePrepare1_@1
  [73] (volatile byte) plex_free_next ← (byte) 0
  to:plexSort::@return
plexSort::@return: scope:[plexSort]  from plexSort::plexFreePrepare1_@2
  [74] return 
  to:@return

(void()) plex_move()
plex_move: scope:[plex_move]  from main::@5 main::@7
  [75] (byte*) scroll_text_next#25 ← phi( main::@5/(const byte*) SCROLL_TEXT main::@7/(byte*) scroll_text_next#13 )
  [75] (byte) x_movement_idx#10 ← phi( main::@5/(byte) 0 main::@7/(byte) x_movement_idx#12 )
  [75] (byte) y_sin_idx#10 ← phi( main::@5/(byte) 0 main::@7/(byte) y_sin_idx#12 )
  [76] (byte) plex_move::y_idx#0 ← (byte) y_sin_idx#10
  [77] (byte) plex_move::x_idx#0 ← (byte) x_movement_idx#10
  to:plex_move::@1
plex_move::@1: scope:[plex_move]  from plex_move plex_move::@2
  [78] (byte*) scroll_text_next#11 ← phi( plex_move/(byte*) scroll_text_next#25 plex_move::@2/(byte*) scroll_text_next#13 )
  [78] (byte) plex_move::x_idx#2 ← phi( plex_move/(byte) plex_move::x_idx#0 plex_move::@2/(byte) plex_move::x_idx#1 )
  [78] (byte) plex_move::s#2 ← phi( plex_move/(byte) 0 plex_move::@2/(byte) plex_move::s#1 )
  [78] (byte) plex_move::y_idx#2 ← phi( plex_move/(byte) plex_move::y_idx#0 plex_move::@2/(byte) plex_move::y_idx#1 )
  [79] *((const byte*) PLEX_YPOS + (byte) plex_move::s#2) ← *((const byte*) YSIN + (byte) plex_move::y_idx#2)
  [80] (byte) plex_move::y_idx#1 ← (byte) plex_move::y_idx#2 + (byte) 8
  [81] (byte~) plex_move::$6 ← (byte) plex_move::s#2 << (byte) 1
  [82] (word~) plex_move::$7 ← *((const nomodify byte*) XMOVEMENT_HI + (byte) plex_move::x_idx#2) w= *((const byte*) XMOVEMENT + (byte) plex_move::x_idx#2)
  [83] *((const word*) PLEX_XPOS + (byte~) plex_move::$6) ← (word~) plex_move::$7
  [84] if((byte) plex_move::x_idx#2!=(byte) 0) goto plex_move::@2
  to:plex_move::@4
plex_move::@4: scope:[plex_move]  from plex_move::@1
  [85] if(*((byte*) scroll_text_next#11)!=(byte) 0) goto plex_move::@6
  to:plex_move::@3
plex_move::@6: scope:[plex_move]  from plex_move::@4
  [86] phi()
  to:plex_move::@3
plex_move::@3: scope:[plex_move]  from plex_move::@4 plex_move::@6
  [87] (byte*) scroll_text_next#12 ← phi( plex_move::@6/(byte*) scroll_text_next#11 plex_move::@4/(const byte*) SCROLL_TEXT )
  [88] (byte~) plex_move::$4 ← (const byte) toSpritePtr1_return#0 + *((byte*) scroll_text_next#12)
  [89] *((const byte*) PLEX_PTR + (byte) plex_move::s#2) ← (byte~) plex_move::$4
  [90] (byte*) scroll_text_next#4 ← ++ (byte*) scroll_text_next#12
  to:plex_move::@2
plex_move::@2: scope:[plex_move]  from plex_move::@1 plex_move::@3
  [91] (byte*) scroll_text_next#13 ← phi( plex_move::@1/(byte*) scroll_text_next#11 plex_move::@3/(byte*) scroll_text_next#4 )
  [92] (byte) plex_move::x_idx#1 ← (byte) plex_move::x_idx#2 + (byte) 8
  [93] (byte) plex_move::s#1 ← ++ (byte) plex_move::s#2
  [94] if((byte) plex_move::s#1!=(const nomodify byte) PLEX_COUNT-(byte) 1+(byte) 1) goto plex_move::@1
  to:plex_move::@5
plex_move::@5: scope:[plex_move]  from plex_move::@2
  [95] (byte) y_sin_idx#12 ← (byte) y_sin_idx#10 + (byte) 3
  [96] (byte) x_movement_idx#12 ← ++ (byte) x_movement_idx#10
  to:plex_move::@return
plex_move::@return: scope:[plex_move]  from plex_move::@5
  [97] return 
  to:@return

(void()) plexInit((byte*) plexInit::screen)
plexInit: scope:[plexInit]  from main::@10
  [98] phi()
  to:plexInit::plexSetScreen1
plexInit::plexSetScreen1: scope:[plexInit]  from plexInit
  [99] phi()
  to:plexInit::@1
plexInit::@1: scope:[plexInit]  from plexInit::@1 plexInit::plexSetScreen1
  [100] (byte) plexInit::i#2 ← phi( plexInit::@1/(byte) plexInit::i#1 plexInit::plexSetScreen1/(byte) 0 )
  [101] *((const byte*) PLEX_SORTED_IDX + (byte) plexInit::i#2) ← (byte) plexInit::i#2
  [102] (byte) plexInit::i#1 ← ++ (byte) plexInit::i#2
  [103] if((byte) plexInit::i#1!=(const nomodify byte) PLEX_COUNT-(byte) 1+(byte) 1) goto plexInit::@1
  to:plexInit::@return
plexInit::@return: scope:[plexInit]  from plexInit::@1
  [104] return 
  to:@return

(void()) font_2x2_to_sprites((byte*) font_2x2_to_sprites::font_2x2 , (byte*) font_2x2_to_sprites::sprites , (byte) font_2x2_to_sprites::num_chars)
font_2x2_to_sprites: scope:[font_2x2_to_sprites]  from main::@9
  [105] phi()
  to:font_2x2_to_sprites::@1
font_2x2_to_sprites::@1: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites font_2x2_to_sprites::@7
  [106] (byte*) font_2x2_to_sprites::sprite#4 ← phi( font_2x2_to_sprites/(const nomodify byte*) SPRITES font_2x2_to_sprites::@7/(byte*) font_2x2_to_sprites::sprite#1 )
  [106] (byte*) font_2x2_to_sprites::char_current#2 ← phi( font_2x2_to_sprites/(const byte*) FONT font_2x2_to_sprites::@7/(byte*) font_2x2_to_sprites::char_current#1 )
  [106] (byte) font_2x2_to_sprites::c#2 ← phi( font_2x2_to_sprites/(byte) 0 font_2x2_to_sprites::@7/(byte) font_2x2_to_sprites::c#1 )
  [107] if((byte) font_2x2_to_sprites::c#2<(const byte) font_2x2_to_sprites::num_chars#0) goto font_2x2_to_sprites::@2
  to:font_2x2_to_sprites::@return
font_2x2_to_sprites::@return: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@1
  [108] return 
  to:@return
font_2x2_to_sprites::@2: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@1
  [109] (byte*) font_2x2_to_sprites::char_right#0 ← (byte*) font_2x2_to_sprites::char_current#2 + (word)(number) $40*(number) 8
  [110] (byte*) font_2x2_to_sprites::char_left#6 ← (byte*) font_2x2_to_sprites::char_current#2
  to:font_2x2_to_sprites::@3
font_2x2_to_sprites::@3: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@2 font_2x2_to_sprites::@5
  [111] (byte*) font_2x2_to_sprites::char_right#3 ← phi( font_2x2_to_sprites::@2/(byte*) font_2x2_to_sprites::char_right#0 font_2x2_to_sprites::@5/(byte*) font_2x2_to_sprites::char_right#4 )
  [111] (byte) font_2x2_to_sprites::sprite_idx#4 ← phi( font_2x2_to_sprites::@2/(byte) 0 font_2x2_to_sprites::@5/(byte) font_2x2_to_sprites::sprite_idx#3 )
  [111] (byte*) font_2x2_to_sprites::char_left#3 ← phi( font_2x2_to_sprites::@2/(byte*) font_2x2_to_sprites::char_left#6 font_2x2_to_sprites::@5/(byte*) font_2x2_to_sprites::char_left#4 )
  [111] (byte) font_2x2_to_sprites::i#2 ← phi( font_2x2_to_sprites::@2/(byte) 0 font_2x2_to_sprites::@5/(byte) font_2x2_to_sprites::i#1 )
  [112] (byte~) font_2x2_to_sprites::$3 ← (byte) font_2x2_to_sprites::i#2 & (byte) 7
  [113] *((byte*) font_2x2_to_sprites::sprite#4 + (byte) font_2x2_to_sprites::sprite_idx#4) ← *((byte*) font_2x2_to_sprites::char_left#3 + (byte~) font_2x2_to_sprites::$3)
  [114] (byte) font_2x2_to_sprites::sprite_idx#1 ← ++ (byte) font_2x2_to_sprites::sprite_idx#4
  [115] *((byte*) font_2x2_to_sprites::sprite#4 + (byte) font_2x2_to_sprites::sprite_idx#1) ← *((byte*) font_2x2_to_sprites::char_right#3 + (byte~) font_2x2_to_sprites::$3)
  [116] (byte) font_2x2_to_sprites::sprite_idx#2 ← ++ (byte) font_2x2_to_sprites::sprite_idx#1
  [117] *((byte*) font_2x2_to_sprites::sprite#4 + (byte) font_2x2_to_sprites::sprite_idx#2) ← (byte) 0
  [118] (byte) font_2x2_to_sprites::sprite_idx#3 ← ++ (byte) font_2x2_to_sprites::sprite_idx#2
  [119] if((byte) font_2x2_to_sprites::i#2==(byte) 7) goto font_2x2_to_sprites::@4
  to:font_2x2_to_sprites::@6
font_2x2_to_sprites::@6: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@3
  [120] if((byte) font_2x2_to_sprites::i#2!=(byte) $f) goto font_2x2_to_sprites::@8
  to:font_2x2_to_sprites::@5
font_2x2_to_sprites::@8: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@6
  [121] phi()
  to:font_2x2_to_sprites::@5
font_2x2_to_sprites::@5: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@4 font_2x2_to_sprites::@6 font_2x2_to_sprites::@8
  [122] (byte*) font_2x2_to_sprites::char_right#4 ← phi( font_2x2_to_sprites::@4/(byte*) font_2x2_to_sprites::char_right#1 font_2x2_to_sprites::@8/(byte*) font_2x2_to_sprites::char_right#3 font_2x2_to_sprites::@6/(const byte*) FONT+(byte) ' '*(byte) 8 )
  [122] (byte*) font_2x2_to_sprites::char_left#4 ← phi( font_2x2_to_sprites::@4/(byte*) font_2x2_to_sprites::char_left#1 font_2x2_to_sprites::@8/(byte*) font_2x2_to_sprites::char_left#3 font_2x2_to_sprites::@6/(const byte*) FONT+(byte) ' '*(byte) 8 )
  [123] (byte) font_2x2_to_sprites::i#1 ← ++ (byte) font_2x2_to_sprites::i#2
  [124] if((byte) font_2x2_to_sprites::i#1!=(byte) $15) goto font_2x2_to_sprites::@3
  to:font_2x2_to_sprites::@7
font_2x2_to_sprites::@7: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@5
  [125] (byte*) font_2x2_to_sprites::char_current#1 ← (byte*) font_2x2_to_sprites::char_current#2 + (byte) 8
  [126] (byte*) font_2x2_to_sprites::sprite#1 ← (byte*) font_2x2_to_sprites::sprite#4 + (byte) $40
  [127] (byte) font_2x2_to_sprites::c#1 ← ++ (byte) font_2x2_to_sprites::c#2
  to:font_2x2_to_sprites::@1
font_2x2_to_sprites::@4: scope:[font_2x2_to_sprites]  from font_2x2_to_sprites::@3
  [128] (byte*) font_2x2_to_sprites::char_left#1 ← (byte*) font_2x2_to_sprites::char_current#2 + (word)(number) $80*(number) 8
  [129] (byte*) font_2x2_to_sprites::char_right#1 ← (byte*) font_2x2_to_sprites::char_current#2 + (word)(number) $c0*(number) 8
  to:font_2x2_to_sprites::@5

(void()) font_2x2((byte*) font_2x2::font_original , (byte*) font_2x2::font_2x2)
font_2x2: scope:[font_2x2]  from main
  [130] phi()
  to:font_2x2::@1
font_2x2::@1: scope:[font_2x2]  from font_2x2 font_2x2::@9
  [131] (byte) font_2x2::c#11 ← phi( font_2x2/(byte) 0 font_2x2::@9/(byte) font_2x2::c#1 )
  [131] (byte*) font_2x2::next_original#4 ← phi( font_2x2/(const nomodify byte*) CHARGEN font_2x2::@9/(byte*) font_2x2::next_original#1 )
  [131] (byte*) font_2x2::next_2x2_left#0 ← phi( font_2x2/(const byte*) FONT font_2x2::@9/(byte*) font_2x2::next_2x2#1 )
  [132] (byte*) font_2x2::next_2x2_right#0 ← (byte*) font_2x2::next_2x2_left#0 + (word)(number) $40*(number) 8
  [133] (byte*) font_2x2::next_2x2_left#10 ← (byte*) font_2x2::next_2x2_left#0
  to:font_2x2::@2
font_2x2::@2: scope:[font_2x2]  from font_2x2::@1 font_2x2::@8
  [134] (byte*) font_2x2::next_2x2_right#7 ← phi( font_2x2::@1/(byte*) font_2x2::next_2x2_right#0 font_2x2::@8/(byte*) font_2x2::next_2x2_right#8 )
  [134] (byte) font_2x2::l2#8 ← phi( font_2x2::@1/(byte) 0 font_2x2::@8/(byte) font_2x2::l2#9 )
  [134] (byte*) font_2x2::next_2x2_left#7 ← phi( font_2x2::@1/(byte*) font_2x2::next_2x2_left#10 font_2x2::@8/(byte*) font_2x2::next_2x2_left#8 )
  [134] (byte) font_2x2::l#2 ← phi( font_2x2::@1/(byte) 0 font_2x2::@8/(byte) font_2x2::l#1 )
  [135] (byte) font_2x2::glyph_bits#0 ← *((byte*) font_2x2::next_original#4 + (byte) font_2x2::l#2)
  to:font_2x2::@3
font_2x2::@3: scope:[font_2x2]  from font_2x2::@2 font_2x2::@5
  [136] (byte) font_2x2::b#2 ← phi( font_2x2::@2/(byte) 0 font_2x2::@5/(byte) font_2x2::b#1 )
  [136] (word) font_2x2::glyph_bits_2x2#3 ← phi( font_2x2::@2/(word) 0 font_2x2::@5/(word) font_2x2::glyph_bits_2x2#2 )
  [136] (byte) font_2x2::glyph_bits#2 ← phi( font_2x2::@2/(byte) font_2x2::glyph_bits#0 font_2x2::@5/(byte) font_2x2::glyph_bits#1 )
  [137] (byte~) font_2x2::$1 ← (byte) font_2x2::glyph_bits#2 & (byte) $80
  [138] if((byte) 0!=(byte~) font_2x2::$1) goto font_2x2::@4
  to:font_2x2::@5
font_2x2::@4: scope:[font_2x2]  from font_2x2::@3
  [139] phi()
  to:font_2x2::@5
font_2x2::@5: scope:[font_2x2]  from font_2x2::@3 font_2x2::@4
  [140] (byte) font_2x2::glyph_bit#0 ← phi( font_2x2::@4/(byte) 1 font_2x2::@3/(byte) 0 )
  [141] (word~) font_2x2::$5 ← (word) font_2x2::glyph_bits_2x2#3 << (byte) 1
  [142] (word) font_2x2::glyph_bits_2x2#1 ← (word~) font_2x2::$5 | (byte) font_2x2::glyph_bit#0
  [143] (word~) font_2x2::$7 ← (word) font_2x2::glyph_bits_2x2#1 << (byte) 1
  [144] (word) font_2x2::glyph_bits_2x2#2 ← (word~) font_2x2::$7 | (byte) font_2x2::glyph_bit#0
  [145] (byte) font_2x2::glyph_bits#1 ← (byte) font_2x2::glyph_bits#2 << (byte) 1
  [146] (byte) font_2x2::b#1 ← ++ (byte) font_2x2::b#2
  [147] if((byte) font_2x2::b#1!=(byte) 8) goto font_2x2::@3
  to:font_2x2::@6
font_2x2::@6: scope:[font_2x2]  from font_2x2::@5
  [148] (byte~) font_2x2::$12 ← > (word) font_2x2::glyph_bits_2x2#2
  [149] *((byte*) font_2x2::next_2x2_left#7 + (byte) font_2x2::l2#8) ← (byte~) font_2x2::$12
  [150] (byte~) font_2x2::$11 ← (byte) font_2x2::l2#8 + (byte) 1
  [151] *((byte*) font_2x2::next_2x2_left#7 + (byte~) font_2x2::$11) ← (byte~) font_2x2::$12
  [152] (byte~) font_2x2::$15 ← < (word) font_2x2::glyph_bits_2x2#2
  [153] *((byte*) font_2x2::next_2x2_right#7 + (byte) font_2x2::l2#8) ← (byte~) font_2x2::$15
  [154] (byte~) font_2x2::$14 ← (byte) font_2x2::l2#8 + (byte) 1
  [155] *((byte*) font_2x2::next_2x2_right#7 + (byte~) font_2x2::$14) ← (byte~) font_2x2::$15
  [156] (byte) font_2x2::l2#1 ← (byte) font_2x2::l2#8 + (byte) 2
  [157] if((byte) font_2x2::l2#1!=(byte) 8) goto font_2x2::@8
  to:font_2x2::@7
font_2x2::@7: scope:[font_2x2]  from font_2x2::@6
  [158] (byte*) font_2x2::next_2x2_left#1 ← (byte*) font_2x2::next_2x2_left#0 + (word)(number) $80*(number) 8
  [159] (byte*) font_2x2::next_2x2_right#1 ← (byte*) font_2x2::next_2x2_left#0 + (word)(number) $c0*(number) 8
  to:font_2x2::@8
font_2x2::@8: scope:[font_2x2]  from font_2x2::@6 font_2x2::@7
  [160] (byte*) font_2x2::next_2x2_right#8 ← phi( font_2x2::@6/(byte*) font_2x2::next_2x2_right#7 font_2x2::@7/(byte*) font_2x2::next_2x2_right#1 )
  [160] (byte) font_2x2::l2#9 ← phi( font_2x2::@6/(byte) font_2x2::l2#1 font_2x2::@7/(byte) 0 )
  [160] (byte*) font_2x2::next_2x2_left#8 ← phi( font_2x2::@6/(byte*) font_2x2::next_2x2_left#7 font_2x2::@7/(byte*) font_2x2::next_2x2_left#1 )
  [161] (byte) font_2x2::l#1 ← ++ (byte) font_2x2::l#2
  [162] if((byte) font_2x2::l#1!=(byte) 8) goto font_2x2::@2
  to:font_2x2::@9
font_2x2::@9: scope:[font_2x2]  from font_2x2::@8
  [163] (byte*) font_2x2::next_2x2#1 ← (byte*) font_2x2::next_2x2_left#0 + (byte) 8
  [164] (byte*) font_2x2::next_original#1 ← (byte*) font_2x2::next_original#4 + (byte) 8
  [165] (byte) font_2x2::c#1 ← ++ (byte) font_2x2::c#11
  [166] if((byte) font_2x2::c#1!=(byte) $40) goto font_2x2::@1
  to:font_2x2::@return
font_2x2::@return: scope:[font_2x2]  from font_2x2::@9
  [167] return 
  to:@return

interrupt(KERNEL_MIN)(void()) plex_irq()
plex_irq: scope:[plex_irq]  from
  asm { sei  }
  to:plex_irq::@3
plex_irq::@3: scope:[plex_irq]  from plex_irq plex_irq::@7
  [169] phi()
  [170] call plexShowSprite 
  to:plex_irq::plexFreeNextYpos1
plex_irq::plexFreeNextYpos1: scope:[plex_irq]  from plex_irq::@3
  [171] (byte) plex_irq::plexFreeNextYpos1_return#0 ← *((const byte*) PLEX_FREE_YPOS + (volatile byte) plex_free_next)
  to:plex_irq::@6
plex_irq::@6: scope:[plex_irq]  from plex_irq::plexFreeNextYpos1
  [172] (byte~) plex_irq::$4 ← *((const nomodify byte*) RASTER) + (byte) 3
  [173] if((volatile byte) plex_show_idx>=(const nomodify byte) PLEX_COUNT) goto plex_irq::@4
  to:plex_irq::@7
plex_irq::@7: scope:[plex_irq]  from plex_irq::@6
  [174] if((byte) plex_irq::plexFreeNextYpos1_return#0<(byte~) plex_irq::$4) goto plex_irq::@3
  to:plex_irq::@4
plex_irq::@4: scope:[plex_irq]  from plex_irq::@6 plex_irq::@7
  [175] if((volatile byte) plex_show_idx<(const nomodify byte) PLEX_COUNT) goto plex_irq::@1
  to:plex_irq::@5
plex_irq::@5: scope:[plex_irq]  from plex_irq::@4
  [176] *((const nomodify byte*) RASTER) ← (byte) $28
  [177] (volatile bool) frame_done ← true
  to:plex_irq::@2
plex_irq::@2: scope:[plex_irq]  from plex_irq::@1 plex_irq::@5
  [178] *((const nomodify byte*) IRQ_STATUS) ← (const nomodify byte) IRQ_RASTER
  asm { cli  }
  to:plex_irq::@return
plex_irq::@return: scope:[plex_irq]  from plex_irq::@2
  [180] return 
  to:@return
plex_irq::@1: scope:[plex_irq]  from plex_irq::@4
  [181] *((const nomodify byte*) RASTER) ← (byte) plex_irq::plexFreeNextYpos1_return#0
  to:plex_irq::@2

(void()) plexShowSprite()
plexShowSprite: scope:[plexShowSprite]  from plex_irq::@3
  [182] (byte) plexShowSprite::plex_sprite_idx2#0 ← (volatile byte) plex_sprite_idx << (byte) 1
  [183] (byte) plexShowSprite::plexFreeAdd1_ypos#0 ← *((const byte*) PLEX_YPOS + *((const byte*) PLEX_SORTED_IDX + (volatile byte) plex_show_idx))
  [184] *((const nomodify byte*) SPRITES_YPOS + (byte) plexShowSprite::plex_sprite_idx2#0) ← (byte) plexShowSprite::plexFreeAdd1_ypos#0
  to:plexShowSprite::plexFreeAdd1
plexShowSprite::plexFreeAdd1: scope:[plexShowSprite]  from plexShowSprite
  [185] (byte~) plexShowSprite::plexFreeAdd1_$0 ← (byte) plexShowSprite::plexFreeAdd1_ypos#0 + (byte) $15
  [186] *((const byte*) PLEX_FREE_YPOS + (volatile byte) plex_free_next) ← (byte~) plexShowSprite::plexFreeAdd1_$0
  [187] (byte~) plexShowSprite::plexFreeAdd1_$1 ← (volatile byte) plex_free_next + (byte) 1
  [188] (byte~) plexShowSprite::plexFreeAdd1_$2 ← (byte~) plexShowSprite::plexFreeAdd1_$1 & (byte) 7
  [189] (volatile byte) plex_free_next ← (byte~) plexShowSprite::plexFreeAdd1_$2
  to:plexShowSprite::@5
plexShowSprite::@5: scope:[plexShowSprite]  from plexShowSprite::plexFreeAdd1
  [190] *((const byte*) PLEX_SCREEN_PTR#0 + (volatile byte) plex_sprite_idx) ← *((const byte*) PLEX_PTR + *((const byte*) PLEX_SORTED_IDX + (volatile byte) plex_show_idx))
  [191] (byte) plexShowSprite::xpos_idx#0 ← *((const byte*) PLEX_SORTED_IDX + (volatile byte) plex_show_idx)
  [192] (byte~) plexShowSprite::$11 ← (byte) plexShowSprite::xpos_idx#0 << (byte) 1
  [193] (byte~) plexShowSprite::$2 ← < *((const word*) PLEX_XPOS + (byte~) plexShowSprite::$11)
  [194] *((const nomodify byte*) SPRITES_XPOS + (byte) plexShowSprite::plex_sprite_idx2#0) ← (byte~) plexShowSprite::$2
  [195] (byte~) plexShowSprite::$3 ← > *((const word*) PLEX_XPOS + (byte~) plexShowSprite::$11)
  [196] if((byte~) plexShowSprite::$3!=(byte) 0) goto plexShowSprite::@1
  to:plexShowSprite::@3
plexShowSprite::@3: scope:[plexShowSprite]  from plexShowSprite::@5
  [197] (byte~) plexShowSprite::$9 ← (byte) $ff ^ (volatile byte) plex_sprite_msb
  [198] *((const nomodify byte*) SPRITES_XMSB) ← *((const nomodify byte*) SPRITES_XMSB) & (byte~) plexShowSprite::$9
  to:plexShowSprite::@2
plexShowSprite::@2: scope:[plexShowSprite]  from plexShowSprite::@1 plexShowSprite::@3
  [199] (byte~) plexShowSprite::$5 ← (volatile byte) plex_sprite_idx + (byte) 1
  [200] (byte~) plexShowSprite::$6 ← (byte~) plexShowSprite::$5 & (byte) 7
  [201] (volatile byte) plex_sprite_idx ← (byte~) plexShowSprite::$6
  [202] (volatile byte) plex_show_idx ← ++ (volatile byte) plex_show_idx
  [203] (volatile byte) plex_sprite_msb ← (volatile byte) plex_sprite_msb << (byte) 1
  [204] if((volatile byte) plex_sprite_msb!=(byte) 0) goto plexShowSprite::@return
  to:plexShowSprite::@4
plexShowSprite::@4: scope:[plexShowSprite]  from plexShowSprite::@2
  [205] (volatile byte) plex_sprite_msb ← (byte) 1
  to:plexShowSprite::@return
plexShowSprite::@return: scope:[plexShowSprite]  from plexShowSprite::@2 plexShowSprite::@4
  [206] return 
  to:@return
plexShowSprite::@1: scope:[plexShowSprite]  from plexShowSprite::@5
  [207] *((const nomodify byte*) SPRITES_XMSB) ← *((const nomodify byte*) SPRITES_XMSB) | (volatile byte) plex_sprite_msb
  to:plexShowSprite::@2
