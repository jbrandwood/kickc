
void main()
main: scope:[main]  from
  [0] phi()
  [1] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call print_euclid 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] print_char_cursor#65 = print_line_cursor#0
  [5] call print_euclid 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [6] print_char_cursor#66 = print_line_cursor#0
  [7] call print_euclid 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [8] print_char_cursor#67 = print_line_cursor#0
  [9] call print_euclid 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [10] print_char_cursor#68 = print_line_cursor#0
  [11] call print_euclid 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [12] print_char_cursor#69 = print_line_cursor#0
  [13] call print_euclid 
  to:main::@return
main::@return: scope:[main]  from main::@6
  [14] return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main
  [15] phi()
  [16] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [17] return 
  to:@return

void print_euclid(byte print_euclid::a , byte print_euclid::b)
print_euclid: scope:[print_euclid]  from main::@1 main::@2 main::@3 main::@4 main::@5 main::@6
  [18] print_line_cursor#35 = phi( main::@1/print_screen#0, main::@2/print_line_cursor#0, main::@3/print_line_cursor#0, main::@4/print_line_cursor#0, main::@5/print_line_cursor#0, main::@6/print_line_cursor#0 )
  [18] print_euclid::b#10 = phi( main::@1/2, main::@2/$45, main::@3/$37, main::@4/3, main::@5/$1a, main::@6/$bb )
  [18] print_char_cursor#55 = phi( main::@1/print_screen#0, main::@2/print_char_cursor#65, main::@3/print_char_cursor#66, main::@4/print_char_cursor#67, main::@5/print_char_cursor#68, main::@6/print_char_cursor#69 )
  [18] print_euclid::a#10 = phi( main::@1/$80, main::@2/$a9, main::@3/$9b, main::@4/$c7, main::@5/$5b, main::@6/$77 )
  [19] print_uchar::b#0 = print_euclid::a#10
  [20] call print_uchar 
  to:print_euclid::@1
print_euclid::@1: scope:[print_euclid]  from print_euclid
  [21] phi()
  [22] call print_char 
  to:print_euclid::@2
print_euclid::@2: scope:[print_euclid]  from print_euclid::@1
  [23] print_uchar::b#1 = print_euclid::b#10
  [24] call print_uchar 
  to:print_euclid::@3
print_euclid::@3: scope:[print_euclid]  from print_euclid::@2
  [25] phi()
  [26] call print_char 
  to:print_euclid::@4
print_euclid::@4: scope:[print_euclid]  from print_euclid::@3
  [27] euclid::a#0 = print_euclid::a#10
  [28] euclid::b#0 = print_euclid::b#10
  [29] call euclid 
  [30] euclid::return#0 = euclid::a#2
  to:print_euclid::@5
print_euclid::@5: scope:[print_euclid]  from print_euclid::@4
  [31] print_uchar::b#2 = euclid::return#0
  [32] call print_uchar 
  to:print_euclid::@6
print_euclid::@6: scope:[print_euclid]  from print_euclid::@5
  [33] phi()
  [34] call print_ln 
  to:print_euclid::@return
print_euclid::@return: scope:[print_euclid]  from print_euclid::@6
  [35] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  [36] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [37] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [38] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [39] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [40] *memset::dst#2 = memset::c#0
  [41] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from print_euclid print_euclid::@2 print_euclid::@5
  [42] print_char_cursor#53 = phi( print_euclid/print_char_cursor#55, print_euclid::@2/print_char_cursor#33, print_euclid::@5/print_char_cursor#33 )
  [42] print_uchar::b#3 = phi( print_euclid/print_uchar::b#0, print_euclid::@2/print_uchar::b#1, print_euclid::@5/print_uchar::b#2 )
  [43] print_uchar::$0 = print_uchar::b#3 >> 4
  [44] print_char::ch#0 = print_hextab[print_uchar::$0]
  [45] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [46] print_uchar::$2 = print_uchar::b#3 & $f
  [47] print_char::ch#1 = print_hextab[print_uchar::$2]
  [48] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [49] return 
  to:@return

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_euclid::@1 print_euclid::@3 print_uchar print_uchar::@1
  [50] print_char_cursor#32 = phi( print_euclid::@1/print_char_cursor#33, print_euclid::@3/print_char_cursor#33, print_uchar/print_char_cursor#53, print_uchar::@1/print_char_cursor#33 )
  [50] print_char::ch#4 = phi( print_euclid::@1/' ', print_euclid::@3/' ', print_uchar/print_char::ch#0, print_uchar::@1/print_char::ch#1 )
  [51] *print_char_cursor#32 = print_char::ch#4
  [52] print_char_cursor#33 = ++ print_char_cursor#32
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [53] return 
  to:@return

byte euclid(byte euclid::a , byte euclid::b)
euclid: scope:[euclid]  from print_euclid::@4
  [54] phi()
  to:euclid::@1
euclid::@1: scope:[euclid]  from euclid euclid::@3 euclid::@4
  [55] euclid::b#2 = phi( euclid/euclid::b#0, euclid::@3/euclid::b#2, euclid::@4/euclid::b#1 )
  [55] euclid::a#2 = phi( euclid/euclid::a#0, euclid::@3/euclid::a#1, euclid::@4/euclid::a#2 )
  [56] if(euclid::a#2!=euclid::b#2) goto euclid::@2
  to:euclid::@return
euclid::@return: scope:[euclid]  from euclid::@1
  [57] return 
  to:@return
euclid::@2: scope:[euclid]  from euclid::@1
  [58] if(euclid::a#2>euclid::b#2) goto euclid::@3
  to:euclid::@4
euclid::@4: scope:[euclid]  from euclid::@2
  [59] euclid::b#1 = euclid::b#2 - euclid::a#2
  to:euclid::@1
euclid::@3: scope:[euclid]  from euclid::@2
  [60] euclid::a#1 = euclid::a#2 - euclid::b#2
  to:euclid::@1

void print_ln()
print_ln: scope:[print_ln]  from print_euclid::@6
  [61] phi()
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [62] print_line_cursor#17 = phi( print_ln/print_line_cursor#35, print_ln::@1/print_line_cursor#0 )
  [63] print_line_cursor#0 = print_line_cursor#17 + $28
  [64] if(print_line_cursor#0<print_char_cursor#33) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [65] return 
  to:@return
