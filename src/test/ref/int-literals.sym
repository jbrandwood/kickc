(label) @1
(label) @begin
(label) @end
(const nomodify byte*) COLS = (byte*)(word) $d800
(const nomodify byte) GREEN = (byte) 5
(const nomodify byte) RED = (byte) 2
(const nomodify byte*) SCREEN = (byte*)(word) $400
(const byte) TYPEID_BYTE = (number) 1
(const byte) TYPEID_DWORD = (number) 5
(const byte) TYPEID_SIGNED_BYTE = (number) 2
(const byte) TYPEID_SIGNED_DWORD = (number) 6
(const byte) TYPEID_SIGNED_WORD = (number) 4
(const byte) TYPEID_WORD = (number) 3
(void()) assertType((byte) assertType::t1 , (byte) assertType::t2)
(label) assertType::@1
(label) assertType::@2
(label) assertType::@3
(label) assertType::@return
(byte) assertType::t1
(byte) assertType::t1#15 reg byte x 500.5
(byte) assertType::t2
(byte) assertType::t2#15 reg byte y 1001.0
(byte) idx
(byte) idx#20 idx zp[1]:4 80.5
(byte) idx#41 idx zp[1]:4 1083.6
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@return
(byte*) main::s
(byte*) main::s#1 s zp[2]:2 202.0
(byte*) main::s#2 s zp[2]:2 134.66666666666666
(void()) testSimpleTypes()
(label) testSimpleTypes::@1
(label) testSimpleTypes::@10
(label) testSimpleTypes::@11
(label) testSimpleTypes::@12
(label) testSimpleTypes::@13
(label) testSimpleTypes::@14
(label) testSimpleTypes::@2
(label) testSimpleTypes::@3
(label) testSimpleTypes::@4
(label) testSimpleTypes::@5
(label) testSimpleTypes::@6
(label) testSimpleTypes::@7
(label) testSimpleTypes::@8
(label) testSimpleTypes::@9
(label) testSimpleTypes::@return

zp[2]:2 [ main::s#2 main::s#1 ]
reg byte x [ assertType::t1#15 ]
reg byte y [ assertType::t2#15 ]
zp[1]:4 [ idx#41 idx#20 ]
