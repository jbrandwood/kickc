(label) @1
(label) @begin
(label) @end
(const byte*) CIA1_PORT_A CIA1_PORT_A = (byte*) 56320
(const byte*) CIA1_PORT_A_DDR CIA1_PORT_A_DDR = (byte*) 56322
(const byte*) CIA1_PORT_B CIA1_PORT_B = (byte*) 56321
(const byte*) CIA1_PORT_B_DDR CIA1_PORT_B_DDR = (byte*) 56323
(const byte) KEY_0 KEY_0 = (byte) $23
(const byte) KEY_1 KEY_1 = (byte) $38
(const byte) KEY_2 KEY_2 = (byte) $3b
(const byte) KEY_3 KEY_3 = (byte) 8
(const byte) KEY_4 KEY_4 = (byte) $b
(const byte) KEY_5 KEY_5 = (byte) $10
(const byte) KEY_6 KEY_6 = (byte) $13
(const byte) KEY_7 KEY_7 = (byte) $18
(const byte) KEY_8 KEY_8 = (byte) $1b
(const byte) KEY_9 KEY_9 = (byte) $20
(const byte) KEY_A KEY_A = (byte) $a
(const byte) KEY_ARROW_LEFT KEY_ARROW_LEFT = (byte) $39
(const byte) KEY_ARROW_UP KEY_ARROW_UP = (byte) $36
(const byte) KEY_ASTERISK KEY_ASTERISK = (byte) $31
(const byte) KEY_AT KEY_AT = (byte) $2e
(const byte) KEY_B KEY_B = (byte) $1c
(const byte) KEY_C KEY_C = (byte) $14
(const byte) KEY_COLON KEY_COLON = (byte) $2d
(const byte) KEY_COMMA KEY_COMMA = (byte) $2f
(const byte) KEY_D KEY_D = (byte) $12
(const byte) KEY_DOT KEY_DOT = (byte) $2c
(const byte) KEY_E KEY_E = (byte) $e
(const byte) KEY_EQUALS KEY_EQUALS = (byte) $35
(const byte) KEY_F KEY_F = (byte) $15
(const byte) KEY_G KEY_G = (byte) $1a
(const byte) KEY_H KEY_H = (byte) $1d
(const byte) KEY_I KEY_I = (byte) $21
(const byte) KEY_J KEY_J = (byte) $22
(const byte) KEY_K KEY_K = (byte) $25
(const byte) KEY_L KEY_L = (byte) $2a
(const byte) KEY_M KEY_M = (byte) $24
(const byte) KEY_MINUS KEY_MINUS = (byte) $2b
(const byte) KEY_N KEY_N = (byte) $27
(const byte) KEY_O KEY_O = (byte) $26
(const byte) KEY_P KEY_P = (byte) $29
(const byte) KEY_PLUS KEY_PLUS = (byte) $28
(const byte) KEY_POUND KEY_POUND = (byte) $30
(const byte) KEY_Q KEY_Q = (byte) $3e
(const byte) KEY_R KEY_R = (byte) $11
(const byte) KEY_S KEY_S = (byte) $d
(const byte) KEY_SEMICOLON KEY_SEMICOLON = (byte) $32
(const byte) KEY_SLASH KEY_SLASH = (byte) $37
(const byte) KEY_SPACE KEY_SPACE = (byte) $3c
(const byte) KEY_T KEY_T = (byte) $16
(const byte) KEY_U KEY_U = (byte) $1e
(const byte) KEY_V KEY_V = (byte) $1f
(const byte) KEY_W KEY_W = (byte) 9
(const byte) KEY_X KEY_X = (byte) $17
(const byte) KEY_Y KEY_Y = (byte) $19
(const byte) KEY_Z KEY_Z = (byte) $c
(const byte*) RASTER RASTER = (byte*) 53266
(const byte[]) keyboard_char_keycodes keyboard_char_keycodes = { (const byte) KEY_AT, (const byte) KEY_A, (const byte) KEY_B, (const byte) KEY_C, (const byte) KEY_D, (const byte) KEY_E, (const byte) KEY_F, (const byte) KEY_G, (const byte) KEY_H, (const byte) KEY_I, (const byte) KEY_J, (const byte) KEY_K, (const byte) KEY_L, (const byte) KEY_M, (const byte) KEY_N, (const byte) KEY_O, (const byte) KEY_P, (const byte) KEY_Q, (const byte) KEY_R, (const byte) KEY_S, (const byte) KEY_T, (const byte) KEY_U, (const byte) KEY_V, (const byte) KEY_W, (const byte) KEY_X, (const byte) KEY_Y, (const byte) KEY_Z, (byte) $3f, (const byte) KEY_POUND, (byte) $3f, (const byte) KEY_ARROW_UP, (const byte) KEY_ARROW_LEFT, (const byte) KEY_SPACE, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (byte) $3f, (const byte) KEY_ASTERISK, (const byte) KEY_PLUS, (const byte) KEY_COMMA, (const byte) KEY_MINUS, (const byte) KEY_DOT, (const byte) KEY_SLASH, (const byte) KEY_0, (const byte) KEY_1, (const byte) KEY_2, (const byte) KEY_3, (const byte) KEY_4, (const byte) KEY_5, (const byte) KEY_6, (const byte) KEY_7, (const byte) KEY_8, (const byte) KEY_9, (const byte) KEY_COLON, (const byte) KEY_SEMICOLON, (byte) $3f, (const byte) KEY_EQUALS, (byte) $3f, (byte) $3f }
(byte()) keyboard_get_keycode((byte) keyboard_get_keycode::ch)
(label) keyboard_get_keycode::@return
(byte) keyboard_get_keycode::ch
(byte) keyboard_get_keycode::ch#0 reg byte y 103.0
(byte) keyboard_get_keycode::return
(byte) keyboard_get_keycode::return#0 reg byte a 34.33333333333333
(byte) keyboard_get_keycode::return#2 reg byte a 202.0
(void()) keyboard_init()
(label) keyboard_init::@return
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 reg byte a 4.0
(label) keyboard_key_pressed::@1
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0 colidx zp[1]:7 0.6666666666666666
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#0 reg byte y 52.5
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 reg byte a 34.33333333333333
(byte) keyboard_key_pressed::return#2 reg byte a 202.0
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0 reg byte a 4.0
(const byte[8]) keyboard_matrix_col_bitmask keyboard_matrix_col_bitmask = { (byte) 1, (byte) 2, (byte) 4, (byte) 8, (byte) $10, (byte) $20, (byte) $40, (byte) $80 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 reg byte a 26.25
(byte) keyboard_matrix_read::return#2 reg byte a 4.0
(byte) keyboard_matrix_read::return#3 reg byte a 202.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0 reg byte y 4.0
(byte) keyboard_matrix_read::rowid#1 reg byte y 202.0
(byte) keyboard_matrix_read::rowid#2 reg byte y 105.0
(const byte[8]) keyboard_matrix_row_bitmask keyboard_matrix_row_bitmask = { (byte) $fe, (byte) $fd, (byte) $fb, (byte) $f7, (byte) $ef, (byte) $df, (byte) $bf, (byte) $7f }
(void()) main()
(byte~) main::$14 reg byte a 202.0
(byte~) main::$4 reg byte a 2002.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::ch
(byte) main::ch#1 ch zp[1]:6 151.5
(byte) main::ch#2 ch zp[1]:6 28.857142857142858
(byte) main::col
(byte) main::col#1 reg byte y 1501.5
(byte) main::col#2 reg byte y 667.3333333333334
(byte) main::i
(byte) main::i#1 reg byte x 202.0
(byte) main::i#2 reg byte x 151.5
(byte) main::i#3 reg byte x 42.08333333333333
(byte) main::i#4 reg byte x 202.0
(byte) main::i#6 reg byte x 168.33333333333331
(byte) main::key
(byte) main::key#0 reg byte a 151.5
(byte) main::row
(byte) main::row#1 row zp[1]:7 151.5
(byte) main::row#2 row zp[1]:7 21.642857142857142
(byte) main::row_pressed_bits
(byte) main::row_pressed_bits#0 reg byte x 202.0
(byte) main::row_pressed_bits#1 reg byte x 667.3333333333334
(byte) main::row_pressed_bits#2 reg byte x 620.8
(byte*) main::sc
(byte*) main::sc#1 sc zp[2]:2 22.0
(byte*) main::sc#2 sc zp[2]:2 14.666666666666666
(byte*) main::screen
(byte*) main::screen#1 screen zp[2]:4 71.0
(byte*) main::screen#13 screen zp[2]:4 169.53846153846155
(byte*) main::screen#2 screen zp[2]:4 10.142857142857142

zp[2]:2 [ main::sc#2 main::sc#1 ]
zp[2]:4 [ main::screen#13 main::screen#1 main::screen#2 ]
reg byte x [ main::row_pressed_bits#2 main::row_pressed_bits#1 main::row_pressed_bits#0 ]
reg byte y [ main::col#2 main::col#1 ]
zp[1]:6 [ main::ch#2 main::ch#1 ]
reg byte x [ main::i#4 main::i#3 main::i#6 main::i#1 main::i#2 ]
reg byte y [ keyboard_matrix_read::rowid#2 keyboard_matrix_read::rowid#0 keyboard_matrix_read::rowid#1 ]
reg byte a [ keyboard_matrix_read::return#3 ]
reg byte a [ main::$4 ]
reg byte y [ keyboard_get_keycode::ch#0 ]
reg byte a [ keyboard_get_keycode::return#2 ]
reg byte a [ main::key#0 ]
reg byte y [ keyboard_key_pressed::key#0 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$14 ]
zp[1]:7 [ keyboard_key_pressed::colidx#0 main::row#2 main::row#1 ]
reg byte a [ keyboard_key_pressed::rowidx#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ keyboard_get_keycode::return#0 ]
