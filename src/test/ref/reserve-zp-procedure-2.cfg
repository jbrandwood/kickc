@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] (byte) main::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::i#2 ← phi( main/(byte) main::i#0 main::@3/(byte) main::i#1 )
  [6] (byte) sub1::i#0 ← (byte) main::i#2
  [7] call sub1 
  [8] (byte) sub1::return#0 ← (byte) sub1::return#1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [9] (byte~) main::$0 ← (byte) sub1::return#0
  [10] *((const byte*) main::SCREEN#0 + (byte) main::i#2) ← (byte~) main::$0
  [11] (byte) sub2::i#0 ← (byte) main::i#2
  [12] call sub2 
  [13] (byte) sub2::return#0 ← (byte) sub2::return#1
  to:main::@3
main::@3: scope:[main]  from main::@2
  [14] (byte~) main::$2 ← (byte) sub2::return#0
  [15] *((const byte*) main::SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) $28 + (byte) main::i#2) ← (byte~) main::$2
  [16] (byte) main::i#1 ← ++ (byte) main::i#2
  [17] if((byte) main::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [18] return 
  to:@return
sub2: scope:[sub2]  from main::@2
  [19] (byte~) sub2::$0 ← (byte) sub2::i#0 + (byte) sub2::i#0
  [20] (byte) sub2::return#1 ← (byte~) sub2::$0 + (byte) sub2::i#0
  to:sub2::@return
sub2::@return: scope:[sub2]  from sub2
  [21] return 
  to:@return
sub1: scope:[sub1]  from main::@1
  [22] (byte) sub1::return#1 ← (byte) sub1::i#0 + (byte) sub1::i#0
  to:sub1::@return
sub1::@return: scope:[sub1]  from sub1
  [23] return 
  to:@return
