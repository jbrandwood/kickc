@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call print2 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call print2 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [8] return 
  to:@return
print2: scope:[print2]  from main main::@1
  [9] (byte*) print2::at#3 ← phi( main/(const byte*) screen#0 main::@1/(const byte*) screen#0+(byte) $50 )
  to:print2::@1
print2::@1: scope:[print2]  from print2 print2::@1
  [10] (byte) print2::j#2 ← phi( print2/(byte) 0 print2::@1/(byte) print2::j#1 )
  [10] (byte) print2::i#2 ← phi( print2/(byte) 0 print2::@1/(byte) print2::i#1 )
  [11] *((byte*) print2::at#3 + (byte) print2::j#2) ← *((const byte*) main::hello#0 + (byte) print2::i#2)
  [12] (byte) print2::j#1 ← (byte) print2::j#2 + (byte) 2
  [13] (byte) print2::i#1 ← ++ (byte) print2::i#2
  [14] if(*((const byte*) main::hello#0 + (byte) print2::i#1)!=(byte) '@') goto print2::@1
  to:print2::@return
print2::@return: scope:[print2]  from print2::@1
  [15] return 
  to:@return
