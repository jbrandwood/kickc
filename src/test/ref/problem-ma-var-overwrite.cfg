@begin: scope:[]  from
  [0] (volatile byte*) h1 ← (byte*) 0
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] (byte*) test::videoMem#0 ← (volatile byte*) h1
  [5] call test 
  to:main::@return
main::@return: scope:[main]  from main
  [6] return 
  to:@return

(void()) test((byte*) test::videoMem , (byte*) test::colorMem , (byte*) test::other)
test: scope:[test]  from main
  [7] (byte*) test::dst ← (byte*) 0
  [8] (word) test::diff#1 ← (const byte*) test::colorMem#0 - (byte*) test::videoMem#0
  [9] (byte*~) test::$1 ← (const byte*) test::other#0 + (word)(byte*)(word) test::diff#1
  [10] (byte*) test::dst ← (byte*~) test::$1
  [11] *((byte*) test::dst) ← (byte) 1
  asm { ldy#0 lda#1 sta(dst),y  }
  to:test::@return
test::@return: scope:[test]  from test
  [13] return 
  to:@return
