// Test that plus creates the expected type for all legal combinations of bytes (signed/unsigned - constant/variable)

const byte* SCREEN = $400;
byte idx = 0;

void main() {
    idx = 0;
    testUnsigned();
    idx = $28;
    testSigned();
}


void testUnsigned() {
    volatile unsigned byte ubv1 = 91;
    SCREEN[idx++] = typeid(123);
    SCREEN[idx++] = typeid(ubv1);
    SCREEN[idx++] = typeid(121+71);
    SCREEN[idx++] = typeid(ubv1+12);
    SCREEN[idx++] = typeid(21+ubv1);
    SCREEN[idx++] = typeid(ubv1+ubv1);
}

void testSigned() {
    volatile signed byte sbv1 = 19;
    SCREEN[idx++] = typeid(-12);
    SCREEN[idx++] = typeid(sbv1);
    SCREEN[idx++] = typeid(-41+-12);
    SCREEN[idx++] = typeid(-41+12);
    SCREEN[idx++] = typeid(-14+sbv1);
    SCREEN[idx++] = typeid(sbv1+-31);
    SCREEN[idx++] = typeid(sbv1+31);
    SCREEN[idx++] = typeid(sbv1+sbv1);
}


