(label) @2
(label) @begin
(label) @end
(byte*) CHARSET
(const byte*) CHARSET#0 CHARSET = ((byte*))(word/signed word/dword/signed dword) 12288
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word/dword/signed dword) 1024
(byte*) VIC_MEMORY
(const byte*) VIC_MEMORY#0 VIC_MEMORY = ((byte*))(word/dword/signed dword) 53272
(word[]) charset_spec_row
(const word[]) charset_spec_row#0 charset_spec_row = { (word/dword/signed dword) 63450, (word/dword/signed dword) 63454, (word/dword/signed dword) 62030, (word/dword/signed dword) 55006 }
(void()) gen_char3((byte*) gen_char3::dst , (word) gen_char3::spec)
(byte~) gen_char3::$0 reg byte a 2002.0
(byte~) gen_char3::$1 reg byte a 2002.0
(label) gen_char3::@1
(label) gen_char3::@2
(label) gen_char3::@3
(label) gen_char3::@4
(label) gen_char3::@5
(label) gen_char3::@return
(byte) gen_char3::b
(byte) gen_char3::b#1 b zp ZP_BYTE:7 525.75
(byte) gen_char3::b#2 b zp ZP_BYTE:7 2002.0
(byte) gen_char3::b#3 b zp ZP_BYTE:7 3003.0
(byte) gen_char3::b#4 b zp ZP_BYTE:7 750.75
(byte) gen_char3::c
(byte) gen_char3::c#1 reg byte x 1501.5
(byte) gen_char3::c#2 reg byte x 250.25
(byte*) gen_char3::dst
(byte*) gen_char3::dst#0 dst zp ZP_WORD:2 6.588235294117648
(byte) gen_char3::r
(byte) gen_char3::r#1 reg byte y 151.5
(byte) gen_char3::r#6 reg byte y 25.25
(word) gen_char3::spec
(word) gen_char3::spec#0 spec zp ZP_WORD:5 6.5
(word) gen_char3::spec#1 spec zp ZP_WORD:5 350.5
(word) gen_char3::spec#2 spec zp ZP_WORD:5 443.42857142857144
(word) gen_char3::spec#4 spec zp ZP_WORD:5 204.0
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@return
(byte) main::c
(byte) main::c#1 c zp ZP_BYTE:4 16.5
(byte) main::c#2 c zp ZP_BYTE:4 6.6000000000000005
(byte*) main::charset
(byte*) main::charset#1 charset zp ZP_WORD:2 7.333333333333333
(byte*) main::charset#2 charset zp ZP_WORD:2 8.25

zp ZP_WORD:2 [ main::charset#2 main::charset#1 gen_char3::dst#0 ]
zp ZP_BYTE:4 [ main::c#2 main::c#1 ]
reg byte y [ gen_char3::r#6 gen_char3::r#1 ]
zp ZP_WORD:5 [ gen_char3::spec#2 gen_char3::spec#4 gen_char3::spec#0 gen_char3::spec#1 ]
reg byte x [ gen_char3::c#2 gen_char3::c#1 ]
zp ZP_BYTE:7 [ gen_char3::b#3 gen_char3::b#4 gen_char3::b#1 gen_char3::b#2 ]
reg byte a [ gen_char3::$0 ]
reg byte a [ gen_char3::$1 ]
