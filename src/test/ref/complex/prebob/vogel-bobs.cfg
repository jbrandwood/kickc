
void main()
main: scope:[main]  from
  [0] phi()
  [1] call mulf_init 
  to:main::@9
main::@9: scope:[main]  from main
  [2] phi()
  [3] call prepareBobs 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [4] phi()
  [5] call renderBobInit 
  to:main::vicSelectGfxBank1
main::vicSelectGfxBank1: scope:[main]  from main::@10
  [6] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  to:main::vicSelectGfxBank1_toDd001
main::vicSelectGfxBank1_toDd001: scope:[main]  from main::vicSelectGfxBank1
  [7] phi()
  to:main::vicSelectGfxBank1_@1
main::vicSelectGfxBank1_@1: scope:[main]  from main::vicSelectGfxBank1_toDd001
  [8] *((byte*)CIA2) = main::vicSelectGfxBank1_toDd001_return#0
  to:main::toD0181
main::toD0181: scope:[main]  from main::vicSelectGfxBank1_@1
  [9] phi()
  to:main::@7
main::@7: scope:[main]  from main::toD0181
  [10] *D018 = main::toD0181_return#0
  [11] call memset 
  to:main::@1
main::@1: scope:[main]  from main::@15 main::@7
  [12] main::angle#8 = phi( main::@7/0, main::@15/main::angle#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [13] if(*RASTER<$f8) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [14] *BORDER_COLOR = $f
  [15] call renderBobCleanup 
  to:main::@11
main::@11: scope:[main]  from main::@3
  [16] main::a#6 = main::angle#8
  to:main::@4
main::@4: scope:[main]  from main::@11 main::@14
  [17] main::i#2 = phi( main::@11/0, main::@14/main::i#1 )
  [17] renderBobCleanupNext#19 = phi( main::@11/RENDERBOB_CLEANUP, main::@14/renderBobCleanupNext#14 )
  [17] main::a#2 = phi( main::@11/main::a#6, main::@14/main::a#1 )
  [17] main::r#2 = phi( main::@11/$1e, main::@14/main::r#1 )
  [18] *BORDER_COLOR = 1
  [19] mulf8s::a#0 = main::r#2
  [20] mulf8s::b#0 = COS[main::a#2]
  [21] call mulf8s 
  [22] mulf8s::return#2 = mulf8s::return#0
  to:main::@12
main::@12: scope:[main]  from main::@4
  [23] main::$10 = mulf8s::return#2
  [24] main::x#0 = main::$10 + (signed word)$4b*$100
  [25] mulf8s::a#1 = main::r#2
  [26] mulf8s::b#1 = SIN[main::a#2]
  [27] call mulf8s 
  [28] mulf8s::return#3 = mulf8s::return#0
  to:main::@13
main::@13: scope:[main]  from main::@12
  [29] main::$12 = mulf8s::return#3
  [30] main::$13 = main::$12 << 1
  [31] main::y#0 = main::$13 + (signed word)$5a*$100
  [32] *BORDER_COLOR = 2
  [33] main::a#1 = main::a#2 + $62
  [34] main::r#1 = main::r#2 + 3
  [35] renderBob::xpos#0 = > main::x#0
  [36] renderBob::ypos#0 = > main::y#0
  [37] call renderBob 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [38] main::i#1 = ++ main::i#2
  [39] if(main::i#1!=NUM_BOBS-1+1) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@14
  [40] main::angle#1 = main::angle#8 + 3
  [41] *BORDER_COLOR = 0
  [42] call keyboard_key_pressed 
  [43] keyboard_key_pressed::return#2 = keyboard_key_pressed::return#0
  to:main::@15
main::@15: scope:[main]  from main::@5
  [44] main::$19 = keyboard_key_pressed::return#2
  [45] if(0!=main::$19) goto main::@6
  to:main::@1
main::@6: scope:[main]  from main::@15 main::@16
  [46] phi()
  [47] call keyboard_key_pressed 
  [48] keyboard_key_pressed::return#3 = keyboard_key_pressed::return#0
  to:main::@16
main::@16: scope:[main]  from main::@6
  [49] main::$21 = keyboard_key_pressed::return#3
  [50] if(0!=main::$21) goto main::@6
  to:main::vicSelectGfxBank2
main::vicSelectGfxBank2: scope:[main]  from main::@16
  [51] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  to:main::vicSelectGfxBank2_toDd001
main::vicSelectGfxBank2_toDd001: scope:[main]  from main::vicSelectGfxBank2
  [52] phi()
  to:main::vicSelectGfxBank2_@1
main::vicSelectGfxBank2_@1: scope:[main]  from main::vicSelectGfxBank2_toDd001
  [53] *((byte*)CIA2) = main::vicSelectGfxBank2_toDd001_return#0
  to:main::toD0182
main::toD0182: scope:[main]  from main::vicSelectGfxBank2_@1
  [54] phi()
  to:main::@8
main::@8: scope:[main]  from main::toD0182
  [55] *D018 = main::toD0182_return#0
  to:main::@return
main::@return: scope:[main]  from main::@8
  [56] return 
  to:@return

void mulf_init()
mulf_init: scope:[mulf_init]  from main
  [57] phi()
  to:mulf_init::@1
mulf_init::@1: scope:[mulf_init]  from mulf_init mulf_init::@3
  [58] mulf_init::x_2#3 = phi( mulf_init/0, mulf_init::@3/mulf_init::x_2#2 )
  [58] mulf_init::sqr1_hi#2 = phi( mulf_init/mulf_sqr1_hi+1, mulf_init::@3/mulf_init::sqr1_hi#1 )
  [58] mulf_init::sqr#4 = phi( mulf_init/0, mulf_init::@3/mulf_init::sqr#1 )
  [58] mulf_init::c#2 = phi( mulf_init/0, mulf_init::@3/mulf_init::c#1 )
  [58] mulf_init::sqr1_lo#2 = phi( mulf_init/mulf_sqr1_lo+1, mulf_init::@3/mulf_init::sqr1_lo#1 )
  [59] if(mulf_init::sqr1_lo#2!=mulf_sqr1_lo+$200) goto mulf_init::@2
  to:mulf_init::@5
mulf_init::@5: scope:[mulf_init]  from mulf_init::@1 mulf_init::@8
  [60] mulf_init::dir#2 = phi( mulf_init::@1/$ff, mulf_init::@8/mulf_init::dir#4 )
  [60] mulf_init::sqr2_hi#2 = phi( mulf_init::@1/mulf_sqr2_hi, mulf_init::@8/mulf_init::sqr2_hi#1 )
  [60] mulf_init::x_255#2 = phi( mulf_init::@1/-1, mulf_init::@8/mulf_init::x_255#1 )
  [60] mulf_init::sqr2_lo#2 = phi( mulf_init::@1/mulf_sqr2_lo, mulf_init::@8/mulf_init::sqr2_lo#1 )
  [61] if(mulf_init::sqr2_lo#2!=mulf_sqr2_lo+$1ff) goto mulf_init::@6
  to:mulf_init::@7
mulf_init::@7: scope:[mulf_init]  from mulf_init::@5
  [62] *(mulf_sqr2_lo+$1ff) = *(mulf_sqr1_lo+$100)
  [63] *(mulf_sqr2_hi+$1ff) = *(mulf_sqr1_hi+$100)
  to:mulf_init::@return
mulf_init::@return: scope:[mulf_init]  from mulf_init::@7
  [64] return 
  to:@return
mulf_init::@6: scope:[mulf_init]  from mulf_init::@5
  [65] *mulf_init::sqr2_lo#2 = mulf_sqr1_lo[mulf_init::x_255#2]
  [66] *mulf_init::sqr2_hi#2 = mulf_sqr1_hi[mulf_init::x_255#2]
  [67] mulf_init::sqr2_hi#1 = ++ mulf_init::sqr2_hi#2
  [68] mulf_init::x_255#1 = mulf_init::x_255#2 + mulf_init::dir#2
  [69] if(mulf_init::x_255#1!=0) goto mulf_init::@9
  to:mulf_init::@8
mulf_init::@9: scope:[mulf_init]  from mulf_init::@6
  [70] phi()
  to:mulf_init::@8
mulf_init::@8: scope:[mulf_init]  from mulf_init::@6 mulf_init::@9
  [71] mulf_init::dir#4 = phi( mulf_init::@6/1, mulf_init::@9/mulf_init::dir#2 )
  [72] mulf_init::sqr2_lo#1 = ++ mulf_init::sqr2_lo#2
  to:mulf_init::@5
mulf_init::@2: scope:[mulf_init]  from mulf_init::@1
  [73] mulf_init::c#1 = ++ mulf_init::c#2
  [74] mulf_init::$1 = mulf_init::c#1 & 1
  [75] if(mulf_init::$1!=0) goto mulf_init::@3
  to:mulf_init::@4
mulf_init::@4: scope:[mulf_init]  from mulf_init::@2
  [76] mulf_init::x_2#1 = ++ mulf_init::x_2#3
  [77] mulf_init::sqr#2 = ++ mulf_init::sqr#4
  to:mulf_init::@3
mulf_init::@3: scope:[mulf_init]  from mulf_init::@2 mulf_init::@4
  [78] mulf_init::x_2#2 = phi( mulf_init::@2/mulf_init::x_2#3, mulf_init::@4/mulf_init::x_2#1 )
  [78] mulf_init::sqr#3 = phi( mulf_init::@2/mulf_init::sqr#4, mulf_init::@4/mulf_init::sqr#2 )
  [79] mulf_init::$4 = < mulf_init::sqr#3
  [80] *mulf_init::sqr1_lo#2 = mulf_init::$4
  [81] mulf_init::$5 = > mulf_init::sqr#3
  [82] *mulf_init::sqr1_hi#2 = mulf_init::$5
  [83] mulf_init::sqr1_hi#1 = ++ mulf_init::sqr1_hi#2
  [84] mulf_init::sqr#1 = mulf_init::sqr#3 + mulf_init::x_2#2
  [85] mulf_init::sqr1_lo#1 = ++ mulf_init::sqr1_lo#2
  to:mulf_init::@1

void prepareBobs()
prepareBobs: scope:[prepareBobs]  from main::@9
  [86] phi()
  to:prepareBobs::@8
prepareBobs::@8: scope:[prepareBobs]  from prepareBobs
  [87] phi()
  [88] call bobCharsetFindOrAddGlyph 
  to:prepareBobs::@1
prepareBobs::@1: scope:[prepareBobs]  from prepareBobs::@8 prepareBobs::@9
  [89] prepareBobs::bob_table_idx#7 = phi( prepareBobs::@8/0, prepareBobs::@9/prepareBobs::bob_table_idx#12 )
  [89] bob_charset_next_id#15 = phi( prepareBobs::@8/bob_charset_next_id#17, prepareBobs::@9/bob_charset_next_id#32 )
  [89] progress_idx#17 = phi( prepareBobs::@8/0, prepareBobs::@9/progress_idx#33 )
  [89] progress_cursor#16 = phi( prepareBobs::@8/SCREEN_BASIC, prepareBobs::@9/progress_cursor#33 )
  [89] prepareBobs::shift_y#2 = phi( prepareBobs::@8/0, prepareBobs::@9/prepareBobs::shift_y#1 )
  [90] if(prepareBobs::shift_y#2<BOB_SHIFTS_Y) goto prepareBobs::@2
  to:prepareBobs::@return
prepareBobs::@return: scope:[prepareBobs]  from prepareBobs::@1
  [91] return 
  to:@return
prepareBobs::@2: scope:[prepareBobs]  from prepareBobs::@1 prepareBobs::@13
  [92] progress_idx#33 = phi( prepareBobs::@13/progress_idx#27, prepareBobs::@1/progress_idx#17 )
  [92] progress_cursor#33 = phi( prepareBobs::@13/progress_cursor#26, prepareBobs::@1/progress_cursor#16 )
  [92] bob_charset_next_id#32 = phi( prepareBobs::@13/bob_charset_next_id#23, prepareBobs::@1/bob_charset_next_id#15 )
  [92] prepareBobs::bob_table_idx#12 = phi( prepareBobs::@13/prepareBobs::bob_table_idx#1, prepareBobs::@1/prepareBobs::bob_table_idx#7 )
  [92] prepareBobs::shift_x#2 = phi( prepareBobs::@13/prepareBobs::shift_x#1, prepareBobs::@1/0 )
  [93] if(prepareBobs::shift_x#2<BOB_SHIFTS_X) goto prepareBobs::@3
  to:prepareBobs::@4
prepareBobs::@4: scope:[prepareBobs]  from prepareBobs::@2
  [94] phi()
  [95] call shiftProtoBobDown 
  to:prepareBobs::@9
prepareBobs::@9: scope:[prepareBobs]  from prepareBobs::@4
  [96] prepareBobs::shift_y#1 = ++ prepareBobs::shift_y#2
  to:prepareBobs::@1
prepareBobs::@3: scope:[prepareBobs]  from prepareBobs::@2
  [97] prepareBobs::bob_table#0 = BOB_TABLES + prepareBobs::bob_table_idx#12
  to:prepareBobs::@5
prepareBobs::@5: scope:[prepareBobs]  from prepareBobs::@11 prepareBobs::@3
  [98] progress_cursor#26 = phi( prepareBobs::@11/progress_cursor#18, prepareBobs::@3/progress_cursor#33 )
  [98] progress_idx#27 = phi( prepareBobs::@11/progress_idx#20, prepareBobs::@3/progress_idx#33 )
  [98] prepareBobs::bob_table#2 = phi( prepareBobs::@11/prepareBobs::bob_table#1, prepareBobs::@3/prepareBobs::bob_table#0 )
  [98] bob_charset_next_id#23 = phi( prepareBobs::@11/bob_charset_next_id#17, prepareBobs::@3/bob_charset_next_id#32 )
  [98] prepareBobs::bob_glyph#2 = phi( prepareBobs::@11/prepareBobs::bob_glyph#1, prepareBobs::@3/PROTO_BOB )
  [98] prepareBobs::cell#2 = phi( prepareBobs::@11/prepareBobs::cell#1, prepareBobs::@3/0 )
  [99] if(prepareBobs::cell#2<9) goto prepareBobs::@6
  to:prepareBobs::@7
prepareBobs::@7: scope:[prepareBobs]  from prepareBobs::@5
  [100] prepareBobs::bob_table_idx#1 = ++ prepareBobs::bob_table_idx#12
  [101] call shiftProtoBobRight 
  to:prepareBobs::@12
prepareBobs::@12: scope:[prepareBobs]  from prepareBobs::@7
  [102] phi()
  [103] call shiftProtoBobRight 
  to:prepareBobs::@13
prepareBobs::@13: scope:[prepareBobs]  from prepareBobs::@12
  [104] prepareBobs::shift_x#1 = ++ prepareBobs::shift_x#2
  to:prepareBobs::@2
prepareBobs::@6: scope:[prepareBobs]  from prepareBobs::@5
  [105] bobCharsetFindOrAddGlyph::bob_glyph#1 = prepareBobs::bob_glyph#2
  [106] call bobCharsetFindOrAddGlyph 
  [107] bobCharsetFindOrAddGlyph::return#1 = bobCharsetFindOrAddGlyph::glyph_id#11
  to:prepareBobs::@10
prepareBobs::@10: scope:[prepareBobs]  from prepareBobs::@6
  [108] prepareBobs::$6 = bobCharsetFindOrAddGlyph::return#1
  [109] *prepareBobs::bob_table#2 = prepareBobs::$6
  [110] prepareBobs::bob_glyph#1 = prepareBobs::bob_glyph#2 + 8
  [111] prepareBobs::bob_table#1 = prepareBobs::bob_table#2 + BOB_SHIFTS_X*BOB_SHIFTS_Y
  [112] call progress_inc 
  to:prepareBobs::@11
prepareBobs::@11: scope:[prepareBobs]  from prepareBobs::@10
  [113] prepareBobs::cell#1 = ++ prepareBobs::cell#2
  to:prepareBobs::@5

void renderBobInit()
renderBobInit: scope:[renderBobInit]  from main::@10
  [114] phi()
  to:renderBobInit::@1
renderBobInit::@1: scope:[renderBobInit]  from renderBobInit renderBobInit::@1
  [115] renderBobInit::y#2 = phi( renderBobInit/0, renderBobInit::@1/renderBobInit::y#1 )
  [116] renderBobInit::$5 = (word)renderBobInit::y#2
  [117] renderBobInit::$6 = renderBobInit::$5 << 2
  [118] renderBobInit::$7 = renderBobInit::$6 + renderBobInit::$5
  [119] renderBobInit::$0 = renderBobInit::$7 << 3
  [120] renderBobInit::$3 = renderBobInit::y#2 << 1
  [121] MUL40[renderBobInit::$3] = renderBobInit::$0
  [122] renderBobInit::y#1 = ++ renderBobInit::y#2
  [123] if(renderBobInit::y#1!=$20) goto renderBobInit::@1
  to:renderBobInit::@2
renderBobInit::@2: scope:[renderBobInit]  from renderBobInit::@1 renderBobInit::@2
  [124] renderBobInit::i#2 = phi( renderBobInit::@1/0, renderBobInit::@2/renderBobInit::i#1 )
  [125] renderBobInit::$4 = renderBobInit::i#2 << 1
  [126] RENDERBOB_CLEANUP[renderBobInit::$4] = BOB_SCREEN
  [127] renderBobInit::i#1 = ++ renderBobInit::i#2
  [128] if(renderBobInit::i#1!=NUM_BOBS-1+1) goto renderBobInit::@2
  to:renderBobInit::@return
renderBobInit::@return: scope:[renderBobInit]  from renderBobInit::@2
  [129] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from main::@7
  [130] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [131] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [132] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [133] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [134] *memset::dst#2 = memset::c#0
  [135] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void renderBobCleanup()
renderBobCleanup: scope:[renderBobCleanup]  from main::@3
  [136] phi()
  to:renderBobCleanup::@1
renderBobCleanup::@1: scope:[renderBobCleanup]  from renderBobCleanup renderBobCleanup::@1
  [137] renderBobCleanup::i#2 = phi( renderBobCleanup/0, renderBobCleanup::@1/renderBobCleanup::i#1 )
  [138] renderBobCleanup::$1 = renderBobCleanup::i#2 << 1
  [139] renderBobCleanup::screen#0 = RENDERBOB_CLEANUP[renderBobCleanup::$1]
  [140] *renderBobCleanup::screen#0 = 0
  [141] renderBobCleanup::screen#0[$28] = 0
  [142] renderBobCleanup::screen#0[$50] = 0
  [143] renderBobCleanup::screen#0[1] = 0
  [144] renderBobCleanup::screen#0[$29] = 0
  [145] renderBobCleanup::screen#0[$51] = 0
  [146] renderBobCleanup::screen#0[2] = 0
  [147] renderBobCleanup::screen#0[$2a] = 0
  [148] renderBobCleanup::screen#0[$52] = 0
  [149] renderBobCleanup::i#1 = ++ renderBobCleanup::i#2
  [150] if(renderBobCleanup::i#1!=NUM_BOBS-1+1) goto renderBobCleanup::@1
  to:renderBobCleanup::@return
renderBobCleanup::@return: scope:[renderBobCleanup]  from renderBobCleanup::@1
  [151] return 
  to:@return

signed word mulf8s(signed byte mulf8s::a , signed byte mulf8s::b)
mulf8s: scope:[mulf8s]  from main::@12 main::@4
  [152] mulf8s::b#2 = phi( main::@12/mulf8s::b#1, main::@4/mulf8s::b#0 )
  [152] mulf8s::mulf8s_prepare1_a#0 = phi( main::@12/mulf8s::a#1, main::@4/mulf8s::a#0 )
  to:mulf8s::mulf8s_prepare1
mulf8s::mulf8s_prepare1: scope:[mulf8s]  from mulf8s
  [153] mulf8u_prepare::a#0 = (byte)mulf8s::mulf8s_prepare1_a#0
  [154] call mulf8u_prepare 
  to:mulf8s::@1
mulf8s::@1: scope:[mulf8s]  from mulf8s::mulf8s_prepare1
  [155] mulf8s_prepared::b#0 = mulf8s::b#2
  [156] call mulf8s_prepared 
  to:mulf8s::@2
mulf8s::@2: scope:[mulf8s]  from mulf8s::@1
  [157] mulf8s::return#0 = (signed word)mulf8s_prepared::m#4
  to:mulf8s::@return
mulf8s::@return: scope:[mulf8s]  from mulf8s::@2
  [158] return 
  to:@return

void renderBob(byte renderBob::xpos , byte renderBob::ypos)
renderBob: scope:[renderBob]  from main::@13
  [159] renderBob::x_char_offset#0 = renderBob::xpos#0 >> 2
  [160] renderBob::y_char_offset#0 = renderBob::ypos#0 >> 3
  [161] renderBob::$8 = renderBob::y_char_offset#0 << 1
  [162] renderBob::y_offset#0 = MUL40[renderBob::$8]
  [163] renderBob::$2 = BOB_SCREEN + renderBob::y_offset#0
  [164] renderBob::screen#0 = renderBob::$2 + renderBob::x_char_offset#0
  [165] renderBob::$4 = renderBob::ypos#0 & 7
  [166] renderBob::$5 = renderBob::$4 << 2
  [167] renderBob::$6 = renderBob::xpos#0 & 3
  [168] renderBob::bob_table_idx#0 = renderBob::$5 + renderBob::$6
  [169] *renderBobCleanupNext#19 = renderBob::screen#0
  [170] renderBobCleanupNext#14 = renderBobCleanupNext#19 + SIZEOF_POINTER
  [171] *renderBob::screen#0 = BOB_TABLES[renderBob::bob_table_idx#0]
  [172] renderBob::screen#0[$28] = (BOB_TABLES+1*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [173] renderBob::screen#0[$50] = (BOB_TABLES+2*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [174] renderBob::screen#0[1] = (BOB_TABLES+3*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [175] renderBob::screen#0[$29] = (BOB_TABLES+4*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [176] renderBob::screen#0[$51] = (BOB_TABLES+5*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [177] renderBob::screen#0[2] = (BOB_TABLES+6*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [178] renderBob::screen#0[$2a] = (BOB_TABLES+7*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  [179] renderBob::screen#0[$52] = (BOB_TABLES+8*BOB_SUBTABLE_SIZE)[renderBob::bob_table_idx#0]
  to:renderBob::@return
renderBob::@return: scope:[renderBob]  from renderBob
  [180] return 
  to:@return

byte keyboard_key_pressed(byte keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from main::@5 main::@6
  [181] phi()
  [182] call keyboard_matrix_read 
  [183] keyboard_matrix_read::return#2 = keyboard_matrix_read::return#0
  to:keyboard_key_pressed::@1
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  [184] keyboard_key_pressed::$2 = keyboard_matrix_read::return#2
  [185] keyboard_key_pressed::return#0 = keyboard_key_pressed::$2 & *(keyboard_matrix_col_bitmask+keyboard_key_pressed::colidx#0)
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@1
  [186] return 
  to:@return

byte bobCharsetFindOrAddGlyph(byte* bobCharsetFindOrAddGlyph::bob_glyph)
bobCharsetFindOrAddGlyph: scope:[bobCharsetFindOrAddGlyph]  from prepareBobs::@6 prepareBobs::@8
  [187] bobCharsetFindOrAddGlyph::bob_glyph#10 = phi( prepareBobs::@6/bobCharsetFindOrAddGlyph::bob_glyph#1, prepareBobs::@8/PROTO_BOB+$30 )
  [187] bob_charset_next_id#25 = phi( prepareBobs::@6/bob_charset_next_id#23, prepareBobs::@8/0 )
  to:bobCharsetFindOrAddGlyph::@1
bobCharsetFindOrAddGlyph::@1: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph bobCharsetFindOrAddGlyph::@6
  [188] bobCharsetFindOrAddGlyph::glyph_cursor#11 = phi( bobCharsetFindOrAddGlyph/BOB_CHARSET, bobCharsetFindOrAddGlyph::@6/bobCharsetFindOrAddGlyph::glyph_cursor#1 )
  [188] bobCharsetFindOrAddGlyph::glyph_id#11 = phi( bobCharsetFindOrAddGlyph/0, bobCharsetFindOrAddGlyph::@6/bobCharsetFindOrAddGlyph::glyph_id#1 )
  [189] if(bobCharsetFindOrAddGlyph::glyph_id#11!=bob_charset_next_id#25) goto bobCharsetFindOrAddGlyph::@2
  to:bobCharsetFindOrAddGlyph::@7
bobCharsetFindOrAddGlyph::@7: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@1 bobCharsetFindOrAddGlyph::@8
  [190] bobCharsetFindOrAddGlyph::i1#2 = phi( bobCharsetFindOrAddGlyph::@8/bobCharsetFindOrAddGlyph::i1#1, bobCharsetFindOrAddGlyph::@1/0 )
  [191] if(bobCharsetFindOrAddGlyph::i1#2<8) goto bobCharsetFindOrAddGlyph::@8
  to:bobCharsetFindOrAddGlyph::@9
bobCharsetFindOrAddGlyph::@9: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@7
  [192] bob_charset_next_id#7 = ++ bob_charset_next_id#25
  to:bobCharsetFindOrAddGlyph::@return
bobCharsetFindOrAddGlyph::@return: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@5 bobCharsetFindOrAddGlyph::@9
  [193] bob_charset_next_id#17 = phi( bobCharsetFindOrAddGlyph::@9/bob_charset_next_id#7, bobCharsetFindOrAddGlyph::@5/bob_charset_next_id#25 )
  [194] return 
  to:@return
bobCharsetFindOrAddGlyph::@8: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@7
  [195] bobCharsetFindOrAddGlyph::glyph_cursor#11[bobCharsetFindOrAddGlyph::i1#2] = bobCharsetFindOrAddGlyph::bob_glyph#10[bobCharsetFindOrAddGlyph::i1#2]
  [196] bobCharsetFindOrAddGlyph::i1#1 = ++ bobCharsetFindOrAddGlyph::i1#2
  to:bobCharsetFindOrAddGlyph::@7
bobCharsetFindOrAddGlyph::@2: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@1 bobCharsetFindOrAddGlyph::@4
  [197] bobCharsetFindOrAddGlyph::i#2 = phi( bobCharsetFindOrAddGlyph::@1/0, bobCharsetFindOrAddGlyph::@4/bobCharsetFindOrAddGlyph::i#1 )
  [198] if(bobCharsetFindOrAddGlyph::i#2<8) goto bobCharsetFindOrAddGlyph::@3
  to:bobCharsetFindOrAddGlyph::@5
bobCharsetFindOrAddGlyph::@3: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@2
  [199] if(bobCharsetFindOrAddGlyph::glyph_cursor#11[bobCharsetFindOrAddGlyph::i#2]==bobCharsetFindOrAddGlyph::bob_glyph#10[bobCharsetFindOrAddGlyph::i#2]) goto bobCharsetFindOrAddGlyph::@4
  to:bobCharsetFindOrAddGlyph::@5
bobCharsetFindOrAddGlyph::@5: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@2 bobCharsetFindOrAddGlyph::@3
  [200] bobCharsetFindOrAddGlyph::found#2 = phi( bobCharsetFindOrAddGlyph::@2/1, bobCharsetFindOrAddGlyph::@3/0 )
  [201] if(0==bobCharsetFindOrAddGlyph::found#2) goto bobCharsetFindOrAddGlyph::@6
  to:bobCharsetFindOrAddGlyph::@return
bobCharsetFindOrAddGlyph::@6: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@5
  [202] bobCharsetFindOrAddGlyph::glyph_id#1 = ++ bobCharsetFindOrAddGlyph::glyph_id#11
  [203] bobCharsetFindOrAddGlyph::glyph_cursor#1 = bobCharsetFindOrAddGlyph::glyph_cursor#11 + 8
  to:bobCharsetFindOrAddGlyph::@1
bobCharsetFindOrAddGlyph::@4: scope:[bobCharsetFindOrAddGlyph]  from bobCharsetFindOrAddGlyph::@3
  [204] bobCharsetFindOrAddGlyph::i#1 = ++ bobCharsetFindOrAddGlyph::i#2
  to:bobCharsetFindOrAddGlyph::@2

void shiftProtoBobDown()
shiftProtoBobDown: scope:[shiftProtoBobDown]  from prepareBobs::@4
  [205] phi()
  to:shiftProtoBobDown::@1
shiftProtoBobDown::@1: scope:[shiftProtoBobDown]  from shiftProtoBobDown shiftProtoBobDown::@2
  [206] shiftProtoBobDown::i#2 = phi( shiftProtoBobDown/$17, shiftProtoBobDown::@2/shiftProtoBobDown::i#1 )
  [207] if(shiftProtoBobDown::i#2>0) goto shiftProtoBobDown::@2
  to:shiftProtoBobDown::@3
shiftProtoBobDown::@3: scope:[shiftProtoBobDown]  from shiftProtoBobDown::@1
  [208] *PROTO_BOB = 0
  [209] *(PROTO_BOB+$18) = 0
  [210] *(PROTO_BOB+$30) = 0
  to:shiftProtoBobDown::@return
shiftProtoBobDown::@return: scope:[shiftProtoBobDown]  from shiftProtoBobDown::@3
  [211] return 
  to:@return
shiftProtoBobDown::@2: scope:[shiftProtoBobDown]  from shiftProtoBobDown::@1
  [212] PROTO_BOB[shiftProtoBobDown::i#2] = (PROTO_BOB+$17)[shiftProtoBobDown::i#2]
  [213] (PROTO_BOB+$18)[shiftProtoBobDown::i#2] = (PROTO_BOB+$2f)[shiftProtoBobDown::i#2]
  [214] (PROTO_BOB+$30)[shiftProtoBobDown::i#2] = 0
  [215] shiftProtoBobDown::i#1 = -- shiftProtoBobDown::i#2
  to:shiftProtoBobDown::@1

void shiftProtoBobRight()
shiftProtoBobRight: scope:[shiftProtoBobRight]  from prepareBobs::@12 prepareBobs::@7
  [216] phi()
  to:shiftProtoBobRight::@1
shiftProtoBobRight::@1: scope:[shiftProtoBobRight]  from shiftProtoBobRight shiftProtoBobRight::@6
  [217] shiftProtoBobRight::carry#2 = phi( shiftProtoBobRight/0, shiftProtoBobRight::@6/shiftProtoBobRight::carry#10 )
  [217] shiftProtoBobRight::j#3 = phi( shiftProtoBobRight/0, shiftProtoBobRight::@6/shiftProtoBobRight::j#10 )
  [217] shiftProtoBobRight::i#2 = phi( shiftProtoBobRight/0, shiftProtoBobRight::@6/shiftProtoBobRight::i#1 )
  [218] if(shiftProtoBobRight::i#2<(byte)3*3*8) goto shiftProtoBobRight::@2
  to:shiftProtoBobRight::@return
shiftProtoBobRight::@return: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@1
  [219] return 
  to:@return
shiftProtoBobRight::@2: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@1
  [220] shiftProtoBobRight::$1 = PROTO_BOB[shiftProtoBobRight::j#3] & 1
  [221] if(0!=shiftProtoBobRight::$1) goto shiftProtoBobRight::@3
  to:shiftProtoBobRight::@4
shiftProtoBobRight::@3: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@2
  [222] phi()
  to:shiftProtoBobRight::@4
shiftProtoBobRight::@4: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@2 shiftProtoBobRight::@3
  [223] shiftProtoBobRight::carry#1 = phi( shiftProtoBobRight::@3/$80, shiftProtoBobRight::@2/0 )
  [224] shiftProtoBobRight::$5 = PROTO_BOB[shiftProtoBobRight::j#3] >> 1
  [225] shiftProtoBobRight::$6 = shiftProtoBobRight::carry#2 | shiftProtoBobRight::$5
  [226] PROTO_BOB[shiftProtoBobRight::j#3] = shiftProtoBobRight::$6
  [227] if(shiftProtoBobRight::j#3>=$30) goto shiftProtoBobRight::@5
  to:shiftProtoBobRight::@7
shiftProtoBobRight::@7: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@4
  [228] shiftProtoBobRight::j#2 = shiftProtoBobRight::j#3 + $18
  to:shiftProtoBobRight::@6
shiftProtoBobRight::@6: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@5 shiftProtoBobRight::@7
  [229] shiftProtoBobRight::j#10 = phi( shiftProtoBobRight::@5/shiftProtoBobRight::j#1, shiftProtoBobRight::@7/shiftProtoBobRight::j#2 )
  [230] shiftProtoBobRight::i#1 = ++ shiftProtoBobRight::i#2
  [231] shiftProtoBobRight::carry#10 = shiftProtoBobRight::carry#1
  to:shiftProtoBobRight::@1
shiftProtoBobRight::@5: scope:[shiftProtoBobRight]  from shiftProtoBobRight::@4
  [232] shiftProtoBobRight::j#1 = shiftProtoBobRight::j#3 - $2f
  to:shiftProtoBobRight::@6

void progress_inc()
progress_inc: scope:[progress_inc]  from prepareBobs::@10
  [233] progress_idx#7 = ++ progress_idx#27
  [234] if(progress_idx#7!=8) goto progress_inc::@1
  to:progress_inc::@2
progress_inc::@2: scope:[progress_inc]  from progress_inc
  [235] *progress_cursor#26 = *(progress_inc::progress_chars+8)
  [236] progress_cursor#7 = ++ progress_cursor#26
  to:progress_inc::@1
progress_inc::@1: scope:[progress_inc]  from progress_inc progress_inc::@2
  [237] progress_cursor#18 = phi( progress_inc/progress_cursor#26, progress_inc::@2/progress_cursor#7 )
  [237] progress_idx#20 = phi( progress_inc/progress_idx#7, progress_inc::@2/0 )
  [238] *progress_cursor#18 = progress_inc::progress_chars[progress_idx#20]
  to:progress_inc::@return
progress_inc::@return: scope:[progress_inc]  from progress_inc::@1
  [239] return 
  to:@return

void mulf8u_prepare(byte mulf8u_prepare::a)
mulf8u_prepare: scope:[mulf8u_prepare]  from mulf8s::mulf8s_prepare1
  [240] *mulf8u_prepare::memA = mulf8u_prepare::a#0
  asm { ldamemA stamulf8u_prepared.sm1+1 stamulf8u_prepared.sm3+1 eor#$ff stamulf8u_prepared.sm2+1 stamulf8u_prepared.sm4+1  }
  to:mulf8u_prepare::@return
mulf8u_prepare::@return: scope:[mulf8u_prepare]  from mulf8u_prepare
  [242] return 
  to:@return

signed word mulf8s_prepared(signed byte mulf8s_prepared::b)
mulf8s_prepared: scope:[mulf8s_prepared]  from mulf8s::@1
  [243] mulf8u_prepared::b#0 = (byte)mulf8s_prepared::b#0
  [244] call mulf8u_prepared 
  [245] mulf8u_prepared::return#2 = mulf8u_prepared::return#0
  to:mulf8s_prepared::@5
mulf8s_prepared::@5: scope:[mulf8s_prepared]  from mulf8s_prepared
  [246] mulf8s_prepared::m#0 = mulf8u_prepared::return#2
  [247] if(*mulf8s_prepared::memA>=0) goto mulf8s_prepared::@1
  to:mulf8s_prepared::@3
mulf8s_prepared::@3: scope:[mulf8s_prepared]  from mulf8s_prepared::@5
  [248] mulf8s_prepared::$6 = > mulf8s_prepared::m#0
  [249] mulf8s_prepared::$11 = mulf8s_prepared::$6 - (byte)mulf8s_prepared::b#0
  [250] mulf8s_prepared::m#1 = mulf8s_prepared::m#0 hi= mulf8s_prepared::$11
  to:mulf8s_prepared::@1
mulf8s_prepared::@1: scope:[mulf8s_prepared]  from mulf8s_prepared::@3 mulf8s_prepared::@5
  [251] mulf8s_prepared::m#5 = phi( mulf8s_prepared::@3/mulf8s_prepared::m#1, mulf8s_prepared::@5/mulf8s_prepared::m#0 )
  [252] if(mulf8s_prepared::b#0>=0) goto mulf8s_prepared::@2
  to:mulf8s_prepared::@4
mulf8s_prepared::@4: scope:[mulf8s_prepared]  from mulf8s_prepared::@1
  [253] mulf8s_prepared::$9 = > mulf8s_prepared::m#5
  [254] mulf8s_prepared::$12 = mulf8s_prepared::$9 - (byte)*mulf8s_prepared::memA
  [255] mulf8s_prepared::m#2 = mulf8s_prepared::m#5 hi= mulf8s_prepared::$12
  to:mulf8s_prepared::@2
mulf8s_prepared::@2: scope:[mulf8s_prepared]  from mulf8s_prepared::@1 mulf8s_prepared::@4
  [256] mulf8s_prepared::m#4 = phi( mulf8s_prepared::@1/mulf8s_prepared::m#5, mulf8s_prepared::@4/mulf8s_prepared::m#2 )
  to:mulf8s_prepared::@return
mulf8s_prepared::@return: scope:[mulf8s_prepared]  from mulf8s_prepared::@2
  [257] return 
  to:@return

byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  [258] *((byte*)CIA1) = *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0)
  [259] keyboard_matrix_read::return#0 = ~ *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [260] return 
  to:@return

word mulf8u_prepared(byte mulf8u_prepared::b)
mulf8u_prepared: scope:[mulf8u_prepared]  from mulf8s_prepared
  [261] *mulf8u_prepared::memB = mulf8u_prepared::b#0
  asm { ldxmemB sec sm1: ldamulf_sqr1_lo,x sm2: sbcmulf_sqr2_lo,x staresL sm3: ldamulf_sqr1_hi,x sm4: sbcmulf_sqr2_hi,x stamemB  }
  [263] mulf8u_prepared::return#0 = *mulf8u_prepared::memB w= *mulf8u_prepared::resL
  to:mulf8u_prepared::@return
mulf8u_prepared::@return: scope:[mulf8u_prepared]  from mulf8u_prepared
  [264] return 
  to:@return
