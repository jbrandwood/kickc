@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call init_dist_screen 
  to:main::@12
main::@12: scope:[main]  from main
  [6] phi()
  [7] call init_angle_screen 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [8] phi()
  [9] call init_buckets 
  to:main::@1
main::@1: scope:[main]  from main::@13 main::@9
  [10] (byte) main::bucket_idx#11 ← phi( main::@9/(byte) main::bucket_idx#6 main::@13/(byte) 0 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [11] if(*((const byte*) RASTER#0)!=(byte) $fe) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@3
  [12] if(*((const byte*) RASTER#0)!=(byte) $ff) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  [13] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  [14] (byte) main::bucket_size#0 ← *((const byte[NUM_BUCKETS#0]) BUCKET_SIZES#0 + (byte) main::bucket_idx#11)
  [15] if((byte) main::bucket_size#0<=(byte) 0) goto main::@6
  to:main::@5
main::@5: scope:[main]  from main::@4
  [16] (byte~) main::$15 ← (byte) main::bucket_idx#11 << (byte) 1
  [17] (word*) main::bucket#0 ← *((const word*[NUM_BUCKETS#0]) BUCKETS#0 + (byte~) main::$15)
  to:main::@7
main::@7: scope:[main]  from main::@5 main::@7
  [18] (byte) main::i#2 ← phi( main::@7/(byte) main::i#1 main::@5/(byte) 0 )
  [19] (byte~) main::$16 ← (byte) main::i#2 << (byte) 1
  [20] (byte*) main::sc#0 ← (const byte*) SCREEN_FILL#0 + *((word*) main::bucket#0 + (byte~) main::$16)
  [21] *((byte*) main::sc#0) ← (byte) ' '
  [22] (byte) main::i#1 ← ++ (byte) main::i#2
  [23] if((byte) main::i#1<(byte) main::bucket_size#0) goto main::@7
  to:main::@6
main::@6: scope:[main]  from main::@4 main::@7
  [24] (byte) main::bucket_idx#1 ← ++ (byte) main::bucket_idx#11
  [25] if((byte) main::bucket_idx#1!=(const byte) NUM_BUCKETS#0) goto main::@14
  to:main::@8
main::@14: scope:[main]  from main::@6
  [26] phi()
  to:main::@8
main::@8: scope:[main]  from main::@14 main::@6
  [27] (byte) main::bucket_idx#6 ← phi( main::@6/(byte) 0 main::@14/(byte) main::bucket_idx#1 )
  [28] (byte) main::bucket_size1#0 ← *((const byte[NUM_BUCKETS#0]) BUCKET_SIZES#0 + (byte) main::bucket_idx#6)
  [29] if((byte) main::bucket_size1#0<=(byte) 0) goto main::@9
  to:main::@11
main::@11: scope:[main]  from main::@8
  [30] (byte~) main::$17 ← (byte) main::bucket_idx#6 << (byte) 1
  [31] (word*) main::bucket1#0 ← *((const word*[NUM_BUCKETS#0]) BUCKETS#0 + (byte~) main::$17)
  to:main::@10
main::@10: scope:[main]  from main::@10 main::@11
  [32] (byte) main::i1#2 ← phi( main::@10/(byte) main::i1#1 main::@11/(byte) 0 )
  [33] (byte~) main::$18 ← (byte) main::i1#2 << (byte) 1
  [34] (byte*) main::sc1#0 ← (const byte*) SCREEN_FILL#0 + *((word*) main::bucket1#0 + (byte~) main::$18)
  [35] *((byte*) main::sc1#0) ← (byte) '*'
  [36] (byte) main::i1#1 ← ++ (byte) main::i1#2
  [37] if((byte) main::i1#1<(byte) main::bucket_size1#0) goto main::@10
  to:main::@9
main::@9: scope:[main]  from main::@10 main::@8
  [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:main::@1
init_buckets: scope:[init_buckets]  from main::@13
  [39] phi()
  to:init_buckets::@1
init_buckets::@1: scope:[init_buckets]  from init_buckets init_buckets::@1
  [40] (byte) init_buckets::i#2 ← phi( init_buckets/(byte) 0 init_buckets::@1/(byte) init_buckets::i#1 )
  [41] *((const byte[NUM_BUCKETS#0]) BUCKET_SIZES#0 + (byte) init_buckets::i#2) ← (byte) 0
  [42] (byte) init_buckets::i#1 ← ++ (byte) init_buckets::i#2
  [43] if((byte) init_buckets::i#1!=(const byte) NUM_BUCKETS#0-(byte) 1+(byte) 1) goto init_buckets::@1
  to:init_buckets::@2
init_buckets::@2: scope:[init_buckets]  from init_buckets::@1 init_buckets::@2
  [44] (word) init_buckets::i1#2 ← phi( init_buckets::@1/(word) 0 init_buckets::@2/(word) init_buckets::i1#1 )
  [44] (byte*) init_buckets::dist#4 ← phi( init_buckets::@1/(const byte[$3e8]) SCREEN_DIST#0 init_buckets::@2/(byte*) init_buckets::dist#1 )
  [45] *((const byte[NUM_BUCKETS#0]) BUCKET_SIZES#0 + *((byte*) init_buckets::dist#4)) ← ++ *((const byte[NUM_BUCKETS#0]) BUCKET_SIZES#0 + *((byte*) init_buckets::dist#4))
  [46] (byte*) init_buckets::dist#1 ← ++ (byte*) init_buckets::dist#4
  [47] (word) init_buckets::i1#1 ← ++ (word) init_buckets::i1#2
  [48] if((word) init_buckets::i1#1!=(word) $3e8) goto init_buckets::@2
  to:init_buckets::@3
init_buckets::@3: scope:[init_buckets]  from init_buckets::@2 init_buckets::@6
  [49] (byte) init_buckets::i2#2 ← phi( init_buckets::@6/(byte) init_buckets::i2#1 init_buckets::@2/(byte) 0 )
  [50] (word) malloc::size#1 ← *((const byte[NUM_BUCKETS#0]) BUCKET_SIZES#0 + (byte) init_buckets::i2#2) << (byte) 1
  [51] call malloc 
  to:init_buckets::@6
init_buckets::@6: scope:[init_buckets]  from init_buckets::@3
  [52] (void*~) init_buckets::$5 ← (void*)(byte*) malloc::mem#0
  [53] (byte~) init_buckets::$11 ← (byte) init_buckets::i2#2 << (byte) 1
  [54] *((const word*[NUM_BUCKETS#0]) BUCKETS#0 + (byte~) init_buckets::$11) ← (word*)(void*~) init_buckets::$5
  [55] (byte) init_buckets::i2#1 ← ++ (byte) init_buckets::i2#2
  [56] if((byte) init_buckets::i2#1!=(const byte) NUM_BUCKETS#0-(byte) 1+(byte) 1) goto init_buckets::@3
  to:init_buckets::@4
init_buckets::@4: scope:[init_buckets]  from init_buckets::@4 init_buckets::@6
  [57] (byte) init_buckets::i3#2 ← phi( init_buckets::@6/(byte) 0 init_buckets::@4/(byte) init_buckets::i3#1 )
  [58] *((const byte[NUM_BUCKETS#0]) BUCKET_IDX#0 + (byte) init_buckets::i3#2) ← (byte) 0
  [59] (byte) init_buckets::i3#1 ← ++ (byte) init_buckets::i3#2
  [60] if((byte) init_buckets::i3#1!=(const byte) NUM_BUCKETS#0-(byte) 1+(byte) 1) goto init_buckets::@4
  to:init_buckets::@5
init_buckets::@5: scope:[init_buckets]  from init_buckets::@4 init_buckets::@5
  [61] (word) init_buckets::i4#2 ← phi( init_buckets::@4/(word) 0 init_buckets::@5/(word) init_buckets::i4#1 )
  [61] (byte*) init_buckets::dist#5 ← phi( init_buckets::@4/(const byte[$3e8]) SCREEN_DIST#0 init_buckets::@5/(byte*) init_buckets::dist#3 )
  [62] (byte) init_buckets::distance#0 ← *((byte*) init_buckets::dist#5)
  [63] (byte~) init_buckets::$12 ← (byte) init_buckets::distance#0 << (byte) 1
  [64] (word*) init_buckets::bucket#0 ← *((const word*[NUM_BUCKETS#0]) BUCKETS#0 + (byte~) init_buckets::$12)
  [65] (byte) init_buckets::idx#0 ← *((const byte[NUM_BUCKETS#0]) BUCKET_IDX#0 + (byte) init_buckets::distance#0)
  [66] (word~) init_buckets::$9 ← (byte*) init_buckets::dist#5 - (const byte[$3e8]) SCREEN_DIST#0
  [67] (byte~) init_buckets::$13 ← (byte) init_buckets::idx#0 << (byte) 1
  [68] *((word*) init_buckets::bucket#0 + (byte~) init_buckets::$13) ← (word~) init_buckets::$9
  [69] *((const byte[NUM_BUCKETS#0]) BUCKET_IDX#0 + (byte) init_buckets::distance#0) ← ++ *((const byte[NUM_BUCKETS#0]) BUCKET_IDX#0 + (byte) init_buckets::distance#0)
  [70] (byte*) init_buckets::dist#3 ← ++ (byte*) init_buckets::dist#5
  [71] (word) init_buckets::i4#1 ← ++ (word) init_buckets::i4#2
  [72] if((word) init_buckets::i4#1!=(word) $3e8) goto init_buckets::@5
  to:init_buckets::@return
init_buckets::@return: scope:[init_buckets]  from init_buckets::@5
  [73] return 
  to:@return
malloc: scope:[malloc]  from init_buckets::@3 init_squares
  [74] (word) malloc::size#2 ← phi( init_buckets::@3/(word) malloc::size#1 init_squares/(const byte) NUM_SQUARES#3*(const byte) SIZEOF_WORD )
  [74] (byte*) heap_head#13 ← phi( init_buckets::@3/(byte*) heap_head#1 init_squares/(const byte*) HEAP_TOP#0 )
  [75] (byte*) malloc::mem#0 ← (byte*) heap_head#13 - (word) malloc::size#2
  [76] (byte*) heap_head#1 ← (byte*) malloc::mem#0
  to:malloc::@return
malloc::@return: scope:[malloc]  from malloc
  [77] return 
  to:@return
init_angle_screen: scope:[init_angle_screen]  from main::@12
  [78] phi()
  to:init_angle_screen::@1
init_angle_screen::@1: scope:[init_angle_screen]  from init_angle_screen init_angle_screen::@3
  [79] (byte*) init_angle_screen::screen_topline#5 ← phi( init_angle_screen/(const byte[$3e8]) SCREEN_ANGLE#0+(word)(number) $28*(number) $c init_angle_screen::@3/(byte*) init_angle_screen::screen_topline#1 )
  [79] (byte*) init_angle_screen::screen_bottomline#5 ← phi( init_angle_screen/(const byte[$3e8]) SCREEN_ANGLE#0+(word)(number) $28*(number) $c init_angle_screen::@3/(byte*) init_angle_screen::screen_bottomline#1 )
  [79] (byte) init_angle_screen::y#4 ← phi( init_angle_screen/(byte) 0 init_angle_screen::@3/(byte) init_angle_screen::y#1 )
  to:init_angle_screen::@2
init_angle_screen::@2: scope:[init_angle_screen]  from init_angle_screen::@1 init_angle_screen::@4
  [80] (byte) init_angle_screen::xb#2 ← phi( init_angle_screen::@1/(byte) $27 init_angle_screen::@4/(byte) init_angle_screen::xb#1 )
  [80] (byte) init_angle_screen::x#2 ← phi( init_angle_screen::@1/(byte) 0 init_angle_screen::@4/(byte) init_angle_screen::x#1 )
  [81] (byte~) init_angle_screen::$2 ← (byte) init_angle_screen::x#2 << (byte) 1
  [82] (byte~) init_angle_screen::$3 ← (byte) $27 - (byte~) init_angle_screen::$2
  [83] (word) init_angle_screen::xw#0 ← (byte~) init_angle_screen::$3 w= (byte) 0
  [84] (byte~) init_angle_screen::$6 ← (byte) init_angle_screen::y#4 << (byte) 1
  [85] (word) init_angle_screen::yw#0 ← (byte~) init_angle_screen::$6 w= (byte) 0
  [86] (signed word) atan2_16::x#0 ← (signed word)(word) init_angle_screen::xw#0
  [87] (signed word) atan2_16::y#0 ← (signed word)(word) init_angle_screen::yw#0
  [88] call atan2_16 
  [89] (word) atan2_16::return#2 ← (word) atan2_16::return#0
  to:init_angle_screen::@4
init_angle_screen::@4: scope:[init_angle_screen]  from init_angle_screen::@2
  [90] (word) init_angle_screen::angle_w#0 ← (word) atan2_16::return#2
  [91] (word~) init_angle_screen::$10 ← (word) init_angle_screen::angle_w#0 + (byte) $80
  [92] (byte) init_angle_screen::ang_w#0 ← > (word~) init_angle_screen::$10
  [93] *((byte*) init_angle_screen::screen_bottomline#5 + (byte) init_angle_screen::xb#2) ← (byte) init_angle_screen::ang_w#0
  [94] (byte~) init_angle_screen::$12 ← - (byte) init_angle_screen::ang_w#0
  [95] *((byte*) init_angle_screen::screen_topline#5 + (byte) init_angle_screen::xb#2) ← (byte~) init_angle_screen::$12
  [96] (byte~) init_angle_screen::$13 ← (byte) $80 + (byte) init_angle_screen::ang_w#0
  [97] *((byte*) init_angle_screen::screen_topline#5 + (byte) init_angle_screen::x#2) ← (byte~) init_angle_screen::$13
  [98] (byte~) init_angle_screen::$14 ← (byte) $80 - (byte) init_angle_screen::ang_w#0
  [99] *((byte*) init_angle_screen::screen_bottomline#5 + (byte) init_angle_screen::x#2) ← (byte~) init_angle_screen::$14
  [100] (byte) init_angle_screen::x#1 ← ++ (byte) init_angle_screen::x#2
  [101] (byte) init_angle_screen::xb#1 ← -- (byte) init_angle_screen::xb#2
  [102] if((byte) init_angle_screen::x#1<(byte) $13+(byte) 1) goto init_angle_screen::@2
  to:init_angle_screen::@3
init_angle_screen::@3: scope:[init_angle_screen]  from init_angle_screen::@4
  [103] (byte*) init_angle_screen::screen_topline#1 ← (byte*) init_angle_screen::screen_topline#5 - (byte) $28
  [104] (byte*) init_angle_screen::screen_bottomline#1 ← (byte*) init_angle_screen::screen_bottomline#5 + (byte) $28
  [105] (byte) init_angle_screen::y#1 ← ++ (byte) init_angle_screen::y#4
  [106] if((byte) init_angle_screen::y#1!=(byte) $d) goto init_angle_screen::@1
  to:init_angle_screen::@return
init_angle_screen::@return: scope:[init_angle_screen]  from init_angle_screen::@3
  [107] return 
  to:@return
atan2_16: scope:[atan2_16]  from init_angle_screen::@2
  [108] if((signed word) atan2_16::y#0>=(signed byte) 0) goto atan2_16::@1
  to:atan2_16::@2
atan2_16::@2: scope:[atan2_16]  from atan2_16
  [109] (signed word~) atan2_16::$2 ← - (signed word) atan2_16::y#0
  to:atan2_16::@3
atan2_16::@3: scope:[atan2_16]  from atan2_16::@1 atan2_16::@2
  [110] (signed word) atan2_16::yi#0 ← phi( atan2_16::@1/(signed word~) atan2_16::yi#16 atan2_16::@2/(signed word~) atan2_16::$2 )
  [111] if((signed word) atan2_16::x#0>=(signed byte) 0) goto atan2_16::@4
  to:atan2_16::@5
atan2_16::@5: scope:[atan2_16]  from atan2_16::@3
  [112] (signed word~) atan2_16::$7 ← - (signed word) atan2_16::x#0
  to:atan2_16::@6
atan2_16::@6: scope:[atan2_16]  from atan2_16::@4 atan2_16::@5
  [113] (signed word) atan2_16::xi#0 ← phi( atan2_16::@4/(signed word~) atan2_16::xi#13 atan2_16::@5/(signed word~) atan2_16::$7 )
  to:atan2_16::@10
atan2_16::@10: scope:[atan2_16]  from atan2_16::@19 atan2_16::@6
  [114] (word) atan2_16::angle#12 ← phi( atan2_16::@19/(word) atan2_16::angle#13 atan2_16::@6/(byte) 0 )
  [114] (byte) atan2_16::i#2 ← phi( atan2_16::@19/(byte) atan2_16::i#1 atan2_16::@6/(byte) 0 )
  [114] (signed word) atan2_16::xi#3 ← phi( atan2_16::@19/(signed word) atan2_16::xi#8 atan2_16::@6/(signed word) atan2_16::xi#0 )
  [114] (signed word) atan2_16::yi#3 ← phi( atan2_16::@19/(signed word) atan2_16::yi#8 atan2_16::@6/(signed word) atan2_16::yi#0 )
  [115] if((signed word) atan2_16::yi#3!=(signed byte) 0) goto atan2_16::@11
  to:atan2_16::@12
atan2_16::@12: scope:[atan2_16]  from atan2_16::@10 atan2_16::@19
  [116] (word) atan2_16::angle#6 ← phi( atan2_16::@10/(word) atan2_16::angle#12 atan2_16::@19/(word) atan2_16::angle#13 )
  [117] (word) atan2_16::angle#1 ← (word) atan2_16::angle#6 >> (byte) 1
  [118] if((signed word) atan2_16::x#0>=(signed byte) 0) goto atan2_16::@7
  to:atan2_16::@21
atan2_16::@21: scope:[atan2_16]  from atan2_16::@12
  [119] (word) atan2_16::angle#4 ← (word) $8000 - (word) atan2_16::angle#1
  to:atan2_16::@7
atan2_16::@7: scope:[atan2_16]  from atan2_16::@12 atan2_16::@21
  [120] (word) atan2_16::angle#11 ← phi( atan2_16::@12/(word) atan2_16::angle#1 atan2_16::@21/(word) atan2_16::angle#4 )
  [121] if((signed word) atan2_16::y#0>=(signed byte) 0) goto atan2_16::@8
  to:atan2_16::@9
atan2_16::@9: scope:[atan2_16]  from atan2_16::@7
  [122] (word) atan2_16::angle#5 ← - (word) atan2_16::angle#11
  to:atan2_16::@8
atan2_16::@8: scope:[atan2_16]  from atan2_16::@7 atan2_16::@9
  [123] (word) atan2_16::return#0 ← phi( atan2_16::@9/(word) atan2_16::angle#5 atan2_16::@7/(word) atan2_16::angle#11 )
  to:atan2_16::@return
atan2_16::@return: scope:[atan2_16]  from atan2_16::@8
  [124] return 
  to:@return
atan2_16::@11: scope:[atan2_16]  from atan2_16::@10
  [125] (byte~) atan2_16::shift#5 ← (byte) atan2_16::i#2
  [126] (signed word~) atan2_16::xd#10 ← (signed word) atan2_16::xi#3
  [127] (signed word~) atan2_16::yd#10 ← (signed word) atan2_16::yi#3
  to:atan2_16::@13
atan2_16::@13: scope:[atan2_16]  from atan2_16::@11 atan2_16::@14
  [128] (signed word) atan2_16::yd#3 ← phi( atan2_16::@11/(signed word~) atan2_16::yd#10 atan2_16::@14/(signed word) atan2_16::yd#1 )
  [128] (signed word) atan2_16::xd#3 ← phi( atan2_16::@11/(signed word~) atan2_16::xd#10 atan2_16::@14/(signed word) atan2_16::xd#1 )
  [128] (byte) atan2_16::shift#2 ← phi( atan2_16::@11/(byte~) atan2_16::shift#5 atan2_16::@14/(byte) atan2_16::shift#1 )
  [129] if((byte) atan2_16::shift#2>=(byte) 2) goto atan2_16::@14
  to:atan2_16::@15
atan2_16::@15: scope:[atan2_16]  from atan2_16::@13
  [130] if((byte) 0==(byte) atan2_16::shift#2) goto atan2_16::@17
  to:atan2_16::@16
atan2_16::@16: scope:[atan2_16]  from atan2_16::@15
  [131] (signed word) atan2_16::xd#2 ← (signed word) atan2_16::xd#3 >> (signed byte) 1
  [132] (signed word) atan2_16::yd#2 ← (signed word) atan2_16::yd#3 >> (signed byte) 1
  to:atan2_16::@17
atan2_16::@17: scope:[atan2_16]  from atan2_16::@15 atan2_16::@16
  [133] (signed word) atan2_16::xd#5 ← phi( atan2_16::@15/(signed word) atan2_16::xd#3 atan2_16::@16/(signed word) atan2_16::xd#2 )
  [133] (signed word) atan2_16::yd#5 ← phi( atan2_16::@15/(signed word) atan2_16::yd#3 atan2_16::@16/(signed word) atan2_16::yd#2 )
  [134] if((signed word) atan2_16::yi#3>=(signed byte) 0) goto atan2_16::@18
  to:atan2_16::@20
atan2_16::@20: scope:[atan2_16]  from atan2_16::@17
  [135] (signed word) atan2_16::xi#2 ← (signed word) atan2_16::xi#3 - (signed word) atan2_16::yd#5
  [136] (signed word) atan2_16::yi#2 ← (signed word) atan2_16::yi#3 + (signed word) atan2_16::xd#5
  [137] (byte~) atan2_16::$24 ← (byte) atan2_16::i#2 << (byte) 1
  [138] (word) atan2_16::angle#3 ← (word) atan2_16::angle#12 - *((const word[CORDIC_ITERATIONS_16#0]) CORDIC_ATAN2_ANGLES_16#0 + (byte~) atan2_16::$24)
  to:atan2_16::@19
atan2_16::@19: scope:[atan2_16]  from atan2_16::@18 atan2_16::@20
  [139] (signed word) atan2_16::xi#8 ← phi( atan2_16::@18/(signed word) atan2_16::xi#1 atan2_16::@20/(signed word) atan2_16::xi#2 )
  [139] (word) atan2_16::angle#13 ← phi( atan2_16::@18/(word) atan2_16::angle#2 atan2_16::@20/(word) atan2_16::angle#3 )
  [139] (signed word) atan2_16::yi#8 ← phi( atan2_16::@18/(signed word) atan2_16::yi#1 atan2_16::@20/(signed word) atan2_16::yi#2 )
  [140] (byte) atan2_16::i#1 ← ++ (byte) atan2_16::i#2
  [141] if((byte) atan2_16::i#1==(const byte) CORDIC_ITERATIONS_16#0-(byte) 1+(byte) 1) goto atan2_16::@12
  to:atan2_16::@10
atan2_16::@18: scope:[atan2_16]  from atan2_16::@17
  [142] (signed word) atan2_16::xi#1 ← (signed word) atan2_16::xi#3 + (signed word) atan2_16::yd#5
  [143] (signed word) atan2_16::yi#1 ← (signed word) atan2_16::yi#3 - (signed word) atan2_16::xd#5
  [144] (byte~) atan2_16::$23 ← (byte) atan2_16::i#2 << (byte) 1
  [145] (word) atan2_16::angle#2 ← (word) atan2_16::angle#12 + *((const word[CORDIC_ITERATIONS_16#0]) CORDIC_ATAN2_ANGLES_16#0 + (byte~) atan2_16::$23)
  to:atan2_16::@19
atan2_16::@14: scope:[atan2_16]  from atan2_16::@13
  [146] (signed word) atan2_16::xd#1 ← (signed word) atan2_16::xd#3 >> (signed byte) 2
  [147] (signed word) atan2_16::yd#1 ← (signed word) atan2_16::yd#3 >> (signed byte) 2
  [148] (byte) atan2_16::shift#1 ← (byte) atan2_16::shift#2 - (byte) 2
  to:atan2_16::@13
atan2_16::@4: scope:[atan2_16]  from atan2_16::@3
  [149] (signed word~) atan2_16::xi#13 ← (signed word) atan2_16::x#0
  to:atan2_16::@6
atan2_16::@1: scope:[atan2_16]  from atan2_16
  [150] (signed word~) atan2_16::yi#16 ← (signed word) atan2_16::y#0
  to:atan2_16::@3
init_dist_screen: scope:[init_dist_screen]  from main
  [151] phi()
  [152] call init_squares 
  to:init_dist_screen::@1
init_dist_screen::@1: scope:[init_dist_screen]  from init_dist_screen init_dist_screen::@9
  [153] (byte*) init_dist_screen::screen_bottomline#10 ← phi( init_dist_screen::@9/(byte*) init_dist_screen::screen_bottomline#1 init_dist_screen/(const byte[$3e8]) SCREEN_DIST#0+(word)(number) $28*(number) $18 )
  [153] (byte*) init_dist_screen::screen_topline#10 ← phi( init_dist_screen::@9/(byte*) init_dist_screen::screen_topline#1 init_dist_screen/(const byte[$3e8]) SCREEN_DIST#0 )
  [153] (byte) init_dist_screen::y#10 ← phi( init_dist_screen::@9/(byte) init_dist_screen::y#1 init_dist_screen/(byte) 0 )
  [154] (byte) init_dist_screen::y2#0 ← (byte) init_dist_screen::y#10 << (byte) 1
  [155] if((byte) init_dist_screen::y2#0>=(byte) $18) goto init_dist_screen::@2
  to:init_dist_screen::@3
init_dist_screen::@3: scope:[init_dist_screen]  from init_dist_screen::@1
  [156] (byte~) init_dist_screen::$5 ← (byte) $18 - (byte) init_dist_screen::y2#0
  to:init_dist_screen::@4
init_dist_screen::@4: scope:[init_dist_screen]  from init_dist_screen::@2 init_dist_screen::@3
  [157] (byte) init_dist_screen::yd#0 ← phi( init_dist_screen::@2/(byte~) init_dist_screen::$7 init_dist_screen::@3/(byte~) init_dist_screen::$5 )
  [158] (byte) sqr::val#0 ← (byte) init_dist_screen::yd#0
  [159] call sqr 
  [160] (word) sqr::return#2 ← (word) sqr::return#0
  to:init_dist_screen::@10
init_dist_screen::@10: scope:[init_dist_screen]  from init_dist_screen::@4
  [161] (word) init_dist_screen::yds#0 ← (word) sqr::return#2
  to:init_dist_screen::@5
init_dist_screen::@5: scope:[init_dist_screen]  from init_dist_screen::@10 init_dist_screen::@12
  [162] (byte) init_dist_screen::xb#2 ← phi( init_dist_screen::@10/(byte) $27 init_dist_screen::@12/(byte) init_dist_screen::xb#1 )
  [162] (byte) init_dist_screen::x#2 ← phi( init_dist_screen::@10/(byte) 0 init_dist_screen::@12/(byte) init_dist_screen::x#1 )
  [163] (byte) init_dist_screen::x2#0 ← (byte) init_dist_screen::x#2 << (byte) 1
  [164] if((byte) init_dist_screen::x2#0>=(byte) $27) goto init_dist_screen::@6
  to:init_dist_screen::@7
init_dist_screen::@7: scope:[init_dist_screen]  from init_dist_screen::@5
  [165] (byte~) init_dist_screen::$13 ← (byte) $27 - (byte) init_dist_screen::x2#0
  to:init_dist_screen::@8
init_dist_screen::@8: scope:[init_dist_screen]  from init_dist_screen::@6 init_dist_screen::@7
  [166] (byte) init_dist_screen::xd#0 ← phi( init_dist_screen::@6/(byte~) init_dist_screen::$15 init_dist_screen::@7/(byte~) init_dist_screen::$13 )
  [167] (byte) sqr::val#1 ← (byte) init_dist_screen::xd#0
  [168] call sqr 
  [169] (word) sqr::return#3 ← (word) sqr::return#0
  to:init_dist_screen::@11
init_dist_screen::@11: scope:[init_dist_screen]  from init_dist_screen::@8
  [170] (word) init_dist_screen::xds#0 ← (word) sqr::return#3
  [171] (word) init_dist_screen::ds#0 ← (word) init_dist_screen::xds#0 + (word) init_dist_screen::yds#0
  [172] (word) sqrt::val#0 ← (word) init_dist_screen::ds#0
  [173] call sqrt 
  [174] (byte) sqrt::return#2 ← (byte) sqrt::return#0
  to:init_dist_screen::@12
init_dist_screen::@12: scope:[init_dist_screen]  from init_dist_screen::@11
  [175] (byte) init_dist_screen::d#0 ← (byte) sqrt::return#2
  [176] *((byte*) init_dist_screen::screen_topline#10 + (byte) init_dist_screen::x#2) ← (byte) init_dist_screen::d#0
  [177] *((byte*) init_dist_screen::screen_bottomline#10 + (byte) init_dist_screen::x#2) ← (byte) init_dist_screen::d#0
  [178] *((byte*) init_dist_screen::screen_topline#10 + (byte) init_dist_screen::xb#2) ← (byte) init_dist_screen::d#0
  [179] *((byte*) init_dist_screen::screen_bottomline#10 + (byte) init_dist_screen::xb#2) ← (byte) init_dist_screen::d#0
  [180] (byte) init_dist_screen::x#1 ← ++ (byte) init_dist_screen::x#2
  [181] (byte) init_dist_screen::xb#1 ← -- (byte) init_dist_screen::xb#2
  [182] if((byte) init_dist_screen::x#1<(byte) $13+(byte) 1) goto init_dist_screen::@5
  to:init_dist_screen::@9
init_dist_screen::@9: scope:[init_dist_screen]  from init_dist_screen::@12
  [183] (byte*) init_dist_screen::screen_topline#1 ← (byte*) init_dist_screen::screen_topline#10 + (byte) $28
  [184] (byte*) init_dist_screen::screen_bottomline#1 ← (byte*) init_dist_screen::screen_bottomline#10 - (byte) $28
  [185] (byte) init_dist_screen::y#1 ← ++ (byte) init_dist_screen::y#10
  [186] if((byte) init_dist_screen::y#1!=(byte) $d) goto init_dist_screen::@1
  to:init_dist_screen::@return
init_dist_screen::@return: scope:[init_dist_screen]  from init_dist_screen::@9
  [187] return 
  to:@return
init_dist_screen::@6: scope:[init_dist_screen]  from init_dist_screen::@5
  [188] (byte~) init_dist_screen::$15 ← (byte) init_dist_screen::x2#0 - (byte) $27
  to:init_dist_screen::@8
init_dist_screen::@2: scope:[init_dist_screen]  from init_dist_screen::@1
  [189] (byte~) init_dist_screen::$7 ← (byte) init_dist_screen::y2#0 - (byte) $18
  to:init_dist_screen::@4
sqrt: scope:[sqrt]  from init_dist_screen::@11
  [190] (word) bsearch16u::key#0 ← (word) sqrt::val#0
  [191] (word*) bsearch16u::items#1 ← (word*)(void*) SQUARES#1
  [192] call bsearch16u 
  [193] (word*) bsearch16u::return#3 ← (word*) bsearch16u::return#1
  to:sqrt::@1
sqrt::@1: scope:[sqrt]  from sqrt
  [194] (word*) sqrt::found#0 ← (word*) bsearch16u::return#3
  [195] (word~) sqrt::$3 ← (word*) sqrt::found#0 - (word*)(void*) SQUARES#1
  [196] (word~) sqrt::$1 ← (word~) sqrt::$3 >> (byte) 1
  [197] (byte) sqrt::return#0 ← (byte)(word~) sqrt::$1
  to:sqrt::@return
sqrt::@return: scope:[sqrt]  from sqrt::@1
  [198] return 
  to:@return
bsearch16u: scope:[bsearch16u]  from sqrt
  [199] phi()
  to:bsearch16u::@3
bsearch16u::@3: scope:[bsearch16u]  from bsearch16u bsearch16u::@7
  [200] (word*) bsearch16u::items#2 ← phi( bsearch16u/(word*) bsearch16u::items#1 bsearch16u::@7/(word*) bsearch16u::items#8 )
  [200] (byte) bsearch16u::num#3 ← phi( bsearch16u/(const byte) NUM_SQUARES#3 bsearch16u::@7/(byte) bsearch16u::num#0 )
  [201] if((byte) bsearch16u::num#3>(byte) 0) goto bsearch16u::@4
  to:bsearch16u::@5
bsearch16u::@5: scope:[bsearch16u]  from bsearch16u::@3
  [202] if(*((word*) bsearch16u::items#2)<=(word) bsearch16u::key#0) goto bsearch16u::@2
  to:bsearch16u::@1
bsearch16u::@1: scope:[bsearch16u]  from bsearch16u::@5
  [203] (word*~) bsearch16u::$2 ← (word*) bsearch16u::items#2 - (byte) 1*(const byte) SIZEOF_WORD
  to:bsearch16u::@2
bsearch16u::@2: scope:[bsearch16u]  from bsearch16u::@1 bsearch16u::@5
  [204] (word*) bsearch16u::return#2 ← phi( bsearch16u::@5/(word*) bsearch16u::items#2 bsearch16u::@1/(word*~) bsearch16u::$2 )
  to:bsearch16u::@return
bsearch16u::@return: scope:[bsearch16u]  from bsearch16u::@2 bsearch16u::@8
  [205] (word*) bsearch16u::return#1 ← phi( bsearch16u::@8/(word*~) bsearch16u::return#6 bsearch16u::@2/(word*) bsearch16u::return#2 )
  [206] return 
  to:@return
bsearch16u::@4: scope:[bsearch16u]  from bsearch16u::@3
  [207] (byte~) bsearch16u::$6 ← (byte) bsearch16u::num#3 >> (byte) 1
  [208] (byte~) bsearch16u::$16 ← (byte~) bsearch16u::$6 << (byte) 1
  [209] (word*) bsearch16u::pivot#0 ← (word*) bsearch16u::items#2 + (byte~) bsearch16u::$16
  [210] (signed word) bsearch16u::result#0 ← (signed word)(word) bsearch16u::key#0 - (signed word)*((word*) bsearch16u::pivot#0)
  [211] if((signed word) bsearch16u::result#0!=(signed byte) 0) goto bsearch16u::@6
  to:bsearch16u::@8
bsearch16u::@8: scope:[bsearch16u]  from bsearch16u::@4
  [212] (word*~) bsearch16u::return#6 ← (word*) bsearch16u::pivot#0
  to:bsearch16u::@return
bsearch16u::@6: scope:[bsearch16u]  from bsearch16u::@4
  [213] if((signed word) bsearch16u::result#0<=(signed byte) 0) goto bsearch16u::@7
  to:bsearch16u::@9
bsearch16u::@9: scope:[bsearch16u]  from bsearch16u::@6
  [214] (word*) bsearch16u::items#0 ← (word*) bsearch16u::pivot#0 + (byte) 1*(const byte) SIZEOF_WORD
  [215] (byte) bsearch16u::num#1 ← -- (byte) bsearch16u::num#3
  to:bsearch16u::@7
bsearch16u::@7: scope:[bsearch16u]  from bsearch16u::@6 bsearch16u::@9
  [216] (word*) bsearch16u::items#8 ← phi( bsearch16u::@9/(word*) bsearch16u::items#0 bsearch16u::@6/(word*) bsearch16u::items#2 )
  [216] (byte) bsearch16u::num#5 ← phi( bsearch16u::@9/(byte) bsearch16u::num#1 bsearch16u::@6/(byte) bsearch16u::num#3 )
  [217] (byte) bsearch16u::num#0 ← (byte) bsearch16u::num#5 >> (byte) 1
  to:bsearch16u::@3
sqr: scope:[sqr]  from init_dist_screen::@4 init_dist_screen::@8
  [218] (byte) sqr::val#2 ← phi( init_dist_screen::@4/(byte) sqr::val#0 init_dist_screen::@8/(byte) sqr::val#1 )
  [219] (byte~) sqr::$0 ← (byte) sqr::val#2 << (byte) 1
  [220] (word) sqr::return#0 ← *((word*)(void*) SQUARES#1 + (byte~) sqr::$0)
  to:sqr::@return
sqr::@return: scope:[sqr]  from sqr
  [221] return 
  to:@return
init_squares: scope:[init_squares]  from init_dist_screen
  [222] phi()
  [223] call malloc 
  to:init_squares::@2
init_squares::@2: scope:[init_squares]  from init_squares
  [224] (void*) SQUARES#1 ← (void*)(byte*) malloc::mem#0
  [225] (word*) init_squares::squares#0 ← (word*)(void*) SQUARES#1
  to:init_squares::@1
init_squares::@1: scope:[init_squares]  from init_squares::@1 init_squares::@2
  [226] (byte) init_squares::i#2 ← phi( init_squares::@1/(byte) init_squares::i#1 init_squares::@2/(byte) 0 )
  [226] (word*) init_squares::squares#2 ← phi( init_squares::@1/(word*) init_squares::squares#1 init_squares::@2/(word*) init_squares::squares#0 )
  [226] (word) init_squares::sqr#2 ← phi( init_squares::@1/(word) init_squares::sqr#1 init_squares::@2/(byte) 0 )
  [227] *((word*) init_squares::squares#2) ← (word) init_squares::sqr#2
  [228] (word*) init_squares::squares#1 ← (word*) init_squares::squares#2 + (const byte) SIZEOF_WORD
  [229] (byte~) init_squares::$3 ← (byte) init_squares::i#2 << (byte) 1
  [230] (byte~) init_squares::$4 ← (byte~) init_squares::$3 + (byte) 1
  [231] (word) init_squares::sqr#1 ← (word) init_squares::sqr#2 + (byte~) init_squares::$4
  [232] (byte) init_squares::i#1 ← ++ (byte) init_squares::i#2
  [233] if((byte) init_squares::i#1!=(const byte) NUM_SQUARES#3-(byte) 1+(byte) 1) goto init_squares::@1
  to:init_squares::@return
init_squares::@return: scope:[init_squares]  from init_squares::@1
  [234] return 
  to:@return
