__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
struct fileentry *file
__constant struct fileentry files[$a] = { fill( $a, 0) }
int main()
char *main::$13 // zp[2]:6 4.0
int main::return
__constant char main::str[7] = "$0000="
__constant char main::str1[7] = "$4004="
void * memset(void *str , char c , unsigned int num)
char memset::c
__constant char memset::c#0 = ' ' // c
char *memset::dst
char *memset::dst#1 // dst zp[2]:2 2002.0
char *memset::dst#2 // dst zp[2]:2 1334.6666666666667
char *memset::end
__constant char *memset::end#0 = (char *)memset::str#0+memset::num#0 // end
unsigned int memset::num
__constant unsigned int memset::num#0 = $3e8 // num
void *memset::return
void *memset::str
__constant void *memset::str#0 = (void *)print_screen#0 // str
void print_char(char ch)
char print_char::ch
char print_char::ch#0 // reg byte a 202.0
char print_char::ch#1 // reg byte a 22.0
char print_char::ch#2 // reg byte a 22.0
char print_char::ch#3 // reg byte a 1124.0
char *print_char_cursor
char *print_char_cursor#1 // print_char_cursor zp[2]:4 20.363636363636363
char *print_char_cursor#29 // print_char_cursor zp[2]:4 1062.5
char *print_char_cursor#30 // print_char_cursor zp[2]:4 71.41176470588235
char *print_char_cursor#48 // print_char_cursor zp[2]:4 13.0
char *print_char_cursor#49 // print_char_cursor zp[2]:4 4.0
void print_cls()
__constant const char print_hextab[] = "0123456789abcdef"z
char *print_line_cursor
char *print_line_cursor#0 // print_line_cursor zp[2]:6 34.11111111111111
char *print_line_cursor#11 // print_line_cursor zp[2]:6 213.0
char *print_line_cursor#21 // print_line_cursor zp[2]:6 13.0
void print_ln()
char *print_screen
__constant char *print_screen#0 = (char *) 1024 // print_screen
void print_str(char *str)
char *print_str::str
char *print_str::str#0 // str zp[2]:2 202.0
char *print_str::str#3 // str zp[2]:2 103.75
char *print_str::str#6 // str zp[2]:2 11.0
void print_uchar(char b)
char print_uchar::$0 // reg byte a 22.0
char print_uchar::$2 // reg byte x 22.0
char print_uchar::b
char print_uchar::b#0 // reg byte x 4.0
char print_uchar::b#1 // reg byte x 4.0
char print_uchar::b#2 // reg byte x 6.5

reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
zp[2]:2 [ memset::dst#2 memset::dst#1 print_str::str#3 print_str::str#6 print_str::str#0 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
zp[2]:4 [ print_char_cursor#29 print_char_cursor#1 print_char_cursor#48 print_char_cursor#49 print_char_cursor#30 ]
zp[2]:6 [ main::$13 print_line_cursor#11 print_line_cursor#21 print_line_cursor#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
