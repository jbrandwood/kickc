Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_string(&cputc, *main::bbs.name, { 0, 0 })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, " ")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_string(&cputc, *main::bbs.host_name, { 0, 0 })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, " ")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, *main::bbs.port_number, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, "
")
Adding parameter assignment in __stackcall procedure cputc::c = param(cputc::c)
Added struct type cast to parameter value list call printf_string(&cputc, *main::bbs.name, (struct printf_format_string){ 0, 0 })
Added struct type cast to parameter value list call printf_string(&cputc, *main::bbs.host_name, (struct printf_format_string){ 0, 0 })
Added struct type cast to parameter value list call printf_uint(&cputc, *main::bbs.port_number, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Inlined call vicSelectGfxBank::$0 = call toDd00(vicSelectGfxBank::gfx)
Inlined call call __init
Eliminating unused variable with no statement memcpy::$0
Eliminating unused variable with no statement memset::$2
Eliminating unused variable with no statement gotoxy::$4
Eliminating unused variable with no statement main::$0
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_str::putc printf_str::c 
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_padding::putc printf_padding::pad 
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_number_buffer::putc printf_number_buffer::buffer_sign 
Calling convention STACK_CALL replacing param(cputc::c) with stackidx(char,cputc::OFFSET_STACK_C)
Calling convention STACK_CALL adding stack push stackpush(char) = printf_str::c
Calling convention STACK_CALL adding stack push stackpush(char) = printf_padding::pad
Calling convention STACK_CALL adding stack push stackpush(char) = printf_number_buffer::buffer_sign

CONTROL FLOW GRAPH SSA

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  memcpy::num#2 = phi( cscroll::@3/memcpy::num#0, cscroll::@4/memcpy::num#1 )
  memcpy::destination#2 = phi( cscroll::@3/memcpy::destination#0, cscroll::@4/memcpy::destination#1 )
  memcpy::source#2 = phi( cscroll::@3/memcpy::source#0, cscroll::@4/memcpy::source#1 )
  memcpy::src#0 = ((char *)) memcpy::source#2
  memcpy::dst#0 = ((char *)) memcpy::destination#2
  memcpy::$2 = (char *)memcpy::source#2
  memcpy::src_end#0 = memcpy::$2 + memcpy::num#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  memcpy::destination#4 = phi( memcpy/memcpy::destination#2, memcpy::@2/memcpy::destination#5 )
  memcpy::dst#3 = phi( memcpy/memcpy::dst#0, memcpy::@2/memcpy::dst#1 )
  memcpy::src_end#1 = phi( memcpy/memcpy::src_end#0, memcpy::@2/memcpy::src_end#2 )
  memcpy::src#2 = phi( memcpy/memcpy::src#0, memcpy::@2/memcpy::src#1 )
  memcpy::$1 = memcpy::src#2 != memcpy::src_end#1
  if(memcpy::$1) goto memcpy::@2
  to:memcpy::@3
memcpy::@2: scope:[memcpy]  from memcpy::@1
  memcpy::destination#5 = phi( memcpy::@1/memcpy::destination#4 )
  memcpy::src_end#2 = phi( memcpy::@1/memcpy::src_end#1 )
  memcpy::dst#2 = phi( memcpy::@1/memcpy::dst#3 )
  memcpy::src#3 = phi( memcpy::@1/memcpy::src#2 )
  *memcpy::dst#2 = *memcpy::src#3
  memcpy::dst#1 = ++ memcpy::dst#2
  memcpy::src#1 = ++ memcpy::src#3
  to:memcpy::@1
memcpy::@3: scope:[memcpy]  from memcpy::@1
  memcpy::destination#3 = phi( memcpy::@1/memcpy::destination#4 )
  memcpy::return#0 = memcpy::destination#3
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@3
  memcpy::return#4 = phi( memcpy::@3/memcpy::return#0 )
  memcpy::return#1 = memcpy::return#4
  return 
  to:@return

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  memset::c#5 = phi( cscroll::@5/memset::c#0, cscroll::@6/memset::c#1 )
  memset::str#4 = phi( cscroll::@5/memset::str#0, cscroll::@6/memset::str#1 )
  memset::num#2 = phi( cscroll::@5/memset::num#0, cscroll::@6/memset::num#1 )
  memset::$0 = memset::num#2 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#2 = phi( memset/memset::str#4, memset::@3/memset::str#5 )
  memset::return#0 = memset::str#2
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#4 = phi( memset/memset::c#5 )
  memset::num#3 = phi( memset/memset::num#2 )
  memset::str#3 = phi( memset/memset::str#4 )
  memset::$4 = (char *)memset::str#3
  memset::end#0 = memset::$4 + memset::num#3
  memset::dst#0 = ((char *)) memset::str#3
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#3 = phi( memset::@2/memset::c#4, memset::@4/memset::c#2 )
  memset::str#5 = phi( memset::@2/memset::str#3, memset::@4/memset::str#6 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#6 = phi( memset::@3/memset::str#5 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#2 = phi( memset::@3/memset::c#3 )
  *memset::dst#3 = memset::c#2
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#4 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#4
  return 
  to:@return

unsigned int strlen(char *str)
strlen: scope:[strlen]  from printf_number_buffer::@6 printf_string::@3
  strlen::str#5 = phi( printf_number_buffer::@6/strlen::str#1, printf_string::@3/strlen::str#2 )
  strlen::len#0 = 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  strlen::len#4 = phi( strlen/strlen::len#0, strlen::@2/strlen::len#1 )
  strlen::str#3 = phi( strlen/strlen::str#5, strlen::@2/strlen::str#0 )
  strlen::$0 = 0 != *strlen::str#3
  if(strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  strlen::str#4 = phi( strlen::@1/strlen::str#3 )
  strlen::len#2 = phi( strlen::@1/strlen::len#4 )
  strlen::len#1 = ++ strlen::len#2
  strlen::str#0 = ++ strlen::str#4
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  strlen::len#3 = phi( strlen::@1/strlen::len#4 )
  strlen::return#0 = strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  strlen::return#4 = phi( strlen::@3/strlen::return#0 )
  strlen::return#1 = strlen::return#4
  return 
  to:@return

char toupper(char ch)
toupper: scope:[toupper]  from strupr::@2
  toupper::ch#1 = phi( strupr::@2/toupper::ch#0 )
  toupper::$0 = toupper::ch#1 >= 'a'
  toupper::$1 = toupper::ch#1 <= 'z'
  toupper::$2 = toupper::$0 && toupper::$1
  if(toupper::$2) goto toupper::@1
  to:toupper::@2
toupper::@1: scope:[toupper]  from toupper
  toupper::ch#2 = phi( toupper/toupper::ch#1 )
  toupper::$3 = toupper::ch#2 + 'A'-'a'
  toupper::return#0 = toupper::$3
  to:toupper::@return
toupper::@2: scope:[toupper]  from toupper
  toupper::ch#3 = phi( toupper/toupper::ch#1 )
  toupper::return#1 = toupper::ch#3
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper::@1 toupper::@2
  toupper::return#4 = phi( toupper::@1/toupper::return#0, toupper::@2/toupper::return#1 )
  toupper::return#2 = toupper::return#4
  return 
  to:@return

char * strupr(char *str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  strupr::str#1 = phi( printf_number_buffer::@11/strupr::str#0 )
  strupr::src#0 = strupr::str#1
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@4
  strupr::str#3 = phi( strupr/strupr::str#1, strupr::@4/strupr::str#4 )
  strupr::src#2 = phi( strupr/strupr::src#0, strupr::@4/strupr::src#1 )
  strupr::$1 = 0 != *strupr::src#2
  if(strupr::$1) goto strupr::@2
  to:strupr::@3
strupr::@2: scope:[strupr]  from strupr::@1
  strupr::str#5 = phi( strupr::@1/strupr::str#3 )
  strupr::src#3 = phi( strupr::@1/strupr::src#2 )
  toupper::ch#0 = *strupr::src#3
  call toupper
  toupper::return#3 = toupper::return#2
  to:strupr::@4
strupr::@4: scope:[strupr]  from strupr::@2
  strupr::str#4 = phi( strupr::@2/strupr::str#5 )
  strupr::src#4 = phi( strupr::@2/strupr::src#3 )
  toupper::return#5 = phi( strupr::@2/toupper::return#3 )
  strupr::$0 = toupper::return#5
  *strupr::src#4 = strupr::$0
  strupr::src#1 = ++ strupr::src#4
  to:strupr::@1
strupr::@3: scope:[strupr]  from strupr::@1
  strupr::str#2 = phi( strupr::@1/strupr::str#3 )
  strupr::return#0 = strupr::str#2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@3
  strupr::return#3 = phi( strupr::@3/strupr::return#0 )
  strupr::return#1 = strupr::return#3
  return 
  to:@return

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_uint::@3
  utoa::buffer#21 = phi( printf_uint::@3/utoa::buffer#5 )
  utoa::value#12 = phi( printf_uint::@3/utoa::value#1 )
  utoa::radix#1 = phi( printf_uint::@3/utoa::radix#0 )
  utoa::max_digits#0 = 0
  utoa::digit_values#0 = (unsigned int *) 0
  utoa::$0 = utoa::radix#1 == DECIMAL
  if(utoa::$0) goto utoa::@1
  to:utoa::@6
utoa::@1: scope:[utoa]  from utoa
  utoa::buffer#17 = phi( utoa/utoa::buffer#21 )
  utoa::value#8 = phi( utoa/utoa::value#12 )
  utoa::max_digits#1 = 5
  utoa::digit_values#1 = RADIX_DECIMAL_VALUES
  to:utoa::@5
utoa::@6: scope:[utoa]  from utoa
  utoa::value#13 = phi( utoa/utoa::value#12 )
  utoa::buffer#16 = phi( utoa/utoa::buffer#21 )
  utoa::radix#2 = phi( utoa/utoa::radix#1 )
  utoa::$1 = utoa::radix#2 == HEXADECIMAL
  if(utoa::$1) goto utoa::@2
  to:utoa::@7
utoa::@2: scope:[utoa]  from utoa::@6
  utoa::buffer#18 = phi( utoa::@6/utoa::buffer#16 )
  utoa::value#9 = phi( utoa::@6/utoa::value#13 )
  utoa::max_digits#2 = 4
  utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
  to:utoa::@5
utoa::@7: scope:[utoa]  from utoa::@6
  utoa::value#14 = phi( utoa::@6/utoa::value#13 )
  utoa::buffer#13 = phi( utoa::@6/utoa::buffer#16 )
  utoa::radix#3 = phi( utoa::@6/utoa::radix#2 )
  utoa::$2 = utoa::radix#3 == OCTAL
  if(utoa::$2) goto utoa::@3
  to:utoa::@8
utoa::@3: scope:[utoa]  from utoa::@7
  utoa::buffer#19 = phi( utoa::@7/utoa::buffer#13 )
  utoa::value#10 = phi( utoa::@7/utoa::value#14 )
  utoa::max_digits#3 = 6
  utoa::digit_values#3 = RADIX_OCTAL_VALUES
  to:utoa::@5
utoa::@8: scope:[utoa]  from utoa::@7
  utoa::value#15 = phi( utoa::@7/utoa::value#14 )
  utoa::buffer#10 = phi( utoa::@7/utoa::buffer#13 )
  utoa::radix#4 = phi( utoa::@7/utoa::radix#3 )
  utoa::$3 = utoa::radix#4 == BINARY
  if(utoa::$3) goto utoa::@4
  to:utoa::@9
utoa::@4: scope:[utoa]  from utoa::@8
  utoa::buffer#20 = phi( utoa::@8/utoa::buffer#10 )
  utoa::value#11 = phi( utoa::@8/utoa::value#15 )
  utoa::max_digits#4 = $10
  utoa::digit_values#4 = RADIX_BINARY_VALUES
  to:utoa::@5
utoa::@9: scope:[utoa]  from utoa::@8
  utoa::buffer#6 = phi( utoa::@8/utoa::buffer#10 )
  *utoa::buffer#6 = 'e'
  utoa::buffer#0 = ++ utoa::buffer#6
  *utoa::buffer#0 = 'r'
  utoa::buffer#1 = ++ utoa::buffer#0
  *utoa::buffer#1 = 'r'
  utoa::buffer#2 = ++ utoa::buffer#1
  *utoa::buffer#2 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@12 utoa::@9
  return 
  to:@return
utoa::@5: scope:[utoa]  from utoa::@1 utoa::@2 utoa::@3 utoa::@4
  utoa::buffer#15 = phi( utoa::@1/utoa::buffer#17, utoa::@2/utoa::buffer#18, utoa::@3/utoa::buffer#19, utoa::@4/utoa::buffer#20 )
  utoa::value#7 = phi( utoa::@1/utoa::value#8, utoa::@2/utoa::value#9, utoa::@3/utoa::value#10, utoa::@4/utoa::value#11 )
  utoa::digit_values#8 = phi( utoa::@1/utoa::digit_values#1, utoa::@2/utoa::digit_values#2, utoa::@3/utoa::digit_values#3, utoa::@4/utoa::digit_values#4 )
  utoa::max_digits#7 = phi( utoa::@1/utoa::max_digits#1, utoa::@2/utoa::max_digits#2, utoa::@3/utoa::max_digits#3, utoa::@4/utoa::max_digits#4 )
  utoa::started#0 = 0
  utoa::digit#0 = 0
  to:utoa::@10
utoa::@10: scope:[utoa]  from utoa::@13 utoa::@5
  utoa::buffer#11 = phi( utoa::@13/utoa::buffer#14, utoa::@5/utoa::buffer#15 )
  utoa::started#3 = phi( utoa::@13/utoa::started#4, utoa::@5/utoa::started#0 )
  utoa::value#5 = phi( utoa::@13/utoa::value#6, utoa::@5/utoa::value#7 )
  utoa::digit_values#6 = phi( utoa::@13/utoa::digit_values#7, utoa::@5/utoa::digit_values#8 )
  utoa::digit#2 = phi( utoa::@13/utoa::digit#1, utoa::@5/utoa::digit#0 )
  utoa::max_digits#5 = phi( utoa::@13/utoa::max_digits#6, utoa::@5/utoa::max_digits#7 )
  utoa::$4 = utoa::max_digits#5 - 1
  utoa::$5 = utoa::digit#2 < utoa::$4
  if(utoa::$5) goto utoa::@11
  to:utoa::@12
utoa::@11: scope:[utoa]  from utoa::@10
  utoa::max_digits#8 = phi( utoa::@10/utoa::max_digits#5 )
  utoa::buffer#12 = phi( utoa::@10/utoa::buffer#11 )
  utoa::started#2 = phi( utoa::@10/utoa::started#3 )
  utoa::value#2 = phi( utoa::@10/utoa::value#5 )
  utoa::digit_values#5 = phi( utoa::@10/utoa::digit_values#6 )
  utoa::digit#3 = phi( utoa::@10/utoa::digit#2 )
  utoa::$10 = utoa::digit#3 * SIZEOF_UNSIGNED_INT
  utoa::digit_value#0 = utoa::digit_values#5[utoa::$10]
  utoa::$6 = utoa::value#2 >= utoa::digit_value#0
  utoa::$7 = utoa::started#2 || utoa::$6
  utoa::$8 = ! utoa::$7
  if(utoa::$8) goto utoa::@13
  to:utoa::@14
utoa::@12: scope:[utoa]  from utoa::@10
  utoa::buffer#7 = phi( utoa::@10/utoa::buffer#11 )
  utoa::value#3 = phi( utoa::@10/utoa::value#5 )
  utoa::$11 = (char)utoa::value#3
  *utoa::buffer#7 = DIGITS[utoa::$11]
  utoa::buffer#3 = ++ utoa::buffer#7
  *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@13: scope:[utoa]  from utoa::@11 utoa::@15
  utoa::buffer#14 = phi( utoa::@11/utoa::buffer#12, utoa::@15/utoa::buffer#4 )
  utoa::started#4 = phi( utoa::@11/utoa::started#2, utoa::@15/utoa::started#1 )
  utoa::value#6 = phi( utoa::@11/utoa::value#2, utoa::@15/utoa::value#0 )
  utoa::digit_values#7 = phi( utoa::@11/utoa::digit_values#5, utoa::@15/utoa::digit_values#9 )
  utoa::max_digits#6 = phi( utoa::@11/utoa::max_digits#8, utoa::@15/utoa::max_digits#9 )
  utoa::digit#4 = phi( utoa::@11/utoa::digit#3, utoa::@15/utoa::digit#5 )
  utoa::digit#1 = ++ utoa::digit#4
  to:utoa::@10
utoa::@14: scope:[utoa]  from utoa::@11
  utoa::digit_values#10 = phi( utoa::@11/utoa::digit_values#5 )
  utoa::max_digits#10 = phi( utoa::@11/utoa::max_digits#8 )
  utoa::digit#6 = phi( utoa::@11/utoa::digit#3 )
  utoa::digit_value#1 = phi( utoa::@11/utoa::digit_value#0 )
  utoa::value#4 = phi( utoa::@11/utoa::value#2 )
  utoa::buffer#8 = phi( utoa::@11/utoa::buffer#12 )
  utoa_append::buffer#0 = utoa::buffer#8
  utoa_append::value#0 = utoa::value#4
  utoa_append::sub#0 = utoa::digit_value#1
  call utoa_append
  utoa_append::return#0 = utoa_append::return#2
  to:utoa::@15
utoa::@15: scope:[utoa]  from utoa::@14
  utoa::digit_values#9 = phi( utoa::@14/utoa::digit_values#10 )
  utoa::max_digits#9 = phi( utoa::@14/utoa::max_digits#10 )
  utoa::digit#5 = phi( utoa::@14/utoa::digit#6 )
  utoa::buffer#9 = phi( utoa::@14/utoa::buffer#8 )
  utoa_append::return#3 = phi( utoa::@14/utoa_append::return#0 )
  utoa::$9 = utoa_append::return#3
  utoa::value#0 = utoa::$9
  utoa::buffer#4 = ++ utoa::buffer#9
  utoa::started#1 = 1
  to:utoa::@13

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@14
  utoa_append::buffer#3 = phi( utoa::@14/utoa_append::buffer#0 )
  utoa_append::sub#3 = phi( utoa::@14/utoa_append::sub#0 )
  utoa_append::value#5 = phi( utoa::@14/utoa_append::value#0 )
  utoa_append::digit#0 = 0
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  utoa_append::buffer#2 = phi( utoa_append/utoa_append::buffer#3, utoa_append::@2/utoa_append::buffer#4 )
  utoa_append::digit#4 = phi( utoa_append/utoa_append::digit#0, utoa_append::@2/utoa_append::digit#1 )
  utoa_append::sub#1 = phi( utoa_append/utoa_append::sub#3, utoa_append::@2/utoa_append::sub#2 )
  utoa_append::value#2 = phi( utoa_append/utoa_append::value#5, utoa_append::@2/utoa_append::value#1 )
  utoa_append::$0 = utoa_append::value#2 >= utoa_append::sub#1
  if(utoa_append::$0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  utoa_append::buffer#4 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::sub#2 = phi( utoa_append::@1/utoa_append::sub#1 )
  utoa_append::value#3 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::digit#2 = phi( utoa_append::@1/utoa_append::digit#4 )
  utoa_append::digit#1 = ++ utoa_append::digit#2
  utoa_append::value#1 = utoa_append::value#3 - utoa_append::sub#2
  to:utoa_append::@1
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  utoa_append::value#4 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::buffer#1 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::digit#3 = phi( utoa_append::@1/utoa_append::digit#4 )
  *utoa_append::buffer#1 = DIGITS[utoa_append::digit#3]
  utoa_append::return#1 = utoa_append::value#4
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  utoa_append::return#4 = phi( utoa_append::@3/utoa_append::return#1 )
  utoa_append::return#2 = utoa_append::return#4
  return 
  to:@return

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1 cscroll::@2
  gotoxy::x#5 = phi( conio_c64_init::@1/gotoxy::x#2, cscroll::@2/gotoxy::x#1 )
  gotoxy::y#3 = phi( conio_c64_init::@1/gotoxy::y#2, cscroll::@2/gotoxy::y#1 )
  gotoxy::$0 = gotoxy::y#3 > $19
  gotoxy::$1 = ! gotoxy::$0
  if(gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  gotoxy::y#5 = phi( gotoxy/gotoxy::y#3, gotoxy::@3/gotoxy::y#0 )
  gotoxy::x#3 = phi( gotoxy/gotoxy::x#5, gotoxy::@3/gotoxy::x#6 )
  gotoxy::$2 = gotoxy::x#3 >= $28
  gotoxy::$3 = ! gotoxy::$2
  if(gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  gotoxy::x#6 = phi( gotoxy/gotoxy::x#5 )
  gotoxy::y#0 = 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  gotoxy::y#4 = phi( gotoxy::@1/gotoxy::y#5, gotoxy::@4/gotoxy::y#6 )
  gotoxy::x#4 = phi( gotoxy::@1/gotoxy::x#3, gotoxy::@4/gotoxy::x#0 )
  conio_cursor_x = gotoxy::x#4
  conio_cursor_y = gotoxy::y#4
  gotoxy::$7 = (unsigned int)gotoxy::y#4
  gotoxy::line_offset#0 = gotoxy::$7 * $28
  gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  conio_line_text = gotoxy::$5
  gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  gotoxy::y#6 = phi( gotoxy::@1/gotoxy::y#5 )
  gotoxy::x#0 = 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from
  cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  cputc::$0 = cputc::c#0 == '
'
  if(cputc::$0) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc
  call cputln
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc
  cputc::c#1 = phi( cputc/cputc::c#0 )
  conio_line_text[conio_cursor_x] = cputc::c#1
  conio_line_color[conio_cursor_x] = conio_textcolor
  conio_cursor_x = ++ conio_cursor_x
  cputc::$1 = conio_cursor_x == $28
  cputc::$2 = ! cputc::$1
  if(cputc::$2) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  call cputln
  to:cputc::@5
cputc::@5: scope:[cputc]  from cputc::@3
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@2 cputc::@4 cputc::@5
  return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  conio_line_text = conio_line_text + $28
  conio_line_color = conio_line_color + $28
  conio_cursor_x = 0
  conio_cursor_y = ++ conio_cursor_y
  call cscroll
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  cscroll::$0 = conio_cursor_y == $19
  cscroll::$1 = ! cscroll::$0
  if(cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  cscroll::$7 = 0 != conio_scroll_enable
  if(cscroll::$7) goto cscroll::@3
  to:cscroll::@2
cscroll::@3: scope:[cscroll]  from cscroll::@1
  memcpy::destination#0 = (void *)DEFAULT_SCREEN
  memcpy::source#0 = (void *)DEFAULT_SCREEN+$28
  memcpy::num#0 = $19*$28-$28
  call memcpy
  memcpy::return#2 = memcpy::return#1
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  memcpy::destination#1 = (void *)COLORRAM
  memcpy::source#1 = (void *)COLORRAM+$28
  memcpy::num#1 = $19*$28-$28
  call memcpy
  memcpy::return#3 = memcpy::return#1
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  memset::str#0 = (void *)DEFAULT_SCREEN+$19*$28-$28
  memset::c#0 = ' '
  memset::num#0 = $28
  call memset
  memset::return#2 = memset::return#1
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  memset::str#1 = (void *)COLORRAM+$19*$28-$28
  memset::c#1 = conio_textcolor
  memset::num#1 = $28
  call memset
  memset::return#3 = memset::return#1
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  conio_line_text = conio_line_text - $28
  conio_line_color = conio_line_color - $28
  conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  gotoxy::x#1 = 0
  gotoxy::y#1 = 0
  call gotoxy
  to:cscroll::@8
cscroll::@8: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@7 cscroll::@8
  return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  conio_c64_init::$0 = conio_c64_init::line#0 >= $19
  conio_c64_init::$1 = ! conio_c64_init::$0
  if(conio_c64_init::$1) goto conio_c64_init::@1
  to:conio_c64_init::@2
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  conio_c64_init::line#2 = phi( conio_c64_init/conio_c64_init::line#0, conio_c64_init::@2/conio_c64_init::line#1 )
  gotoxy::x#2 = 0
  gotoxy::y#2 = conio_c64_init::line#2
  call gotoxy
  to:conio_c64_init::@3
conio_c64_init::@3: scope:[conio_c64_init]  from conio_c64_init::@1
  to:conio_c64_init::@return
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  conio_c64_init::line#1 = $19-1
  to:conio_c64_init::@1
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@3
  return 
  to:@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@3 main::@5 main::@7 printf_number_buffer::@5 printf_string::@2
  printf_str::putc#7 = phi( main::@3/printf_str::putc#2, main::@5/printf_str::putc#3, main::@7/printf_str::putc#4, printf_number_buffer::@5/printf_str::putc#0, printf_string::@2/printf_str::putc#1 )
  printf_str::s#7 = phi( main::@3/printf_str::s#3, main::@5/printf_str::s#4, main::@7/printf_str::s#5, printf_number_buffer::@5/printf_str::s#1, printf_string::@2/printf_str::s#2 )
  printf_str::c#0 = 0
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  printf_str::putc#6 = phi( printf_str/printf_str::putc#7, printf_str::@2/printf_str::putc#5 )
  printf_str::s#6 = phi( printf_str/printf_str::s#7, printf_str::@2/printf_str::s#8 )
  printf_str::c#1 = *printf_str::s#6
  printf_str::$0 = printf_str::c#1
  printf_str::s#0 = ++ printf_str::s#6
  printf_str::$2 = 0 != printf_str::$0
  if(printf_str::$2) goto printf_str::@2
  to:printf_str::@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  printf_str::s#8 = phi( printf_str::@1/printf_str::s#0 )
  printf_str::putc#5 = phi( printf_str::@1/printf_str::putc#6 )
  printf_str::c#2 = phi( printf_str::@1/printf_str::c#1 )
  stackpush(char) = printf_str::c#2
  callexecute *printf_str::putc#5 
  sideeffect stackpullpadding(1)
  to:printf_str::@1
printf_str::@return: scope:[printf_str]  from printf_str::@1
  return 
  to:@return

void printf_padding(void (*putc)(char) , char pad , char length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8 printf_string::@5 printf_string::@6
  printf_padding::putc#7 = phi( printf_number_buffer::@10/printf_padding::putc#1, printf_number_buffer::@12/printf_padding::putc#2, printf_number_buffer::@8/printf_padding::putc#0, printf_string::@5/printf_padding::putc#3, printf_string::@6/printf_padding::putc#4 )
  printf_padding::pad#7 = phi( printf_number_buffer::@10/printf_padding::pad#1, printf_number_buffer::@12/printf_padding::pad#2, printf_number_buffer::@8/printf_padding::pad#0, printf_string::@5/printf_padding::pad#3, printf_string::@6/printf_padding::pad#4 )
  printf_padding::length#6 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0, printf_string::@5/printf_padding::length#3, printf_string::@6/printf_padding::length#4 )
  printf_padding::i#0 = 0
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  printf_padding::putc#6 = phi( printf_padding/printf_padding::putc#7, printf_padding::@3/printf_padding::putc#8 )
  printf_padding::pad#6 = phi( printf_padding/printf_padding::pad#7, printf_padding::@3/printf_padding::pad#8 )
  printf_padding::length#5 = phi( printf_padding/printf_padding::length#6, printf_padding::@3/printf_padding::length#7 )
  printf_padding::i#2 = phi( printf_padding/printf_padding::i#0, printf_padding::@3/printf_padding::i#1 )
  printf_padding::$0 = printf_padding::i#2 < printf_padding::length#5
  if(printf_padding::$0) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  printf_padding::length#8 = phi( printf_padding::@1/printf_padding::length#5 )
  printf_padding::i#4 = phi( printf_padding::@1/printf_padding::i#2 )
  printf_padding::putc#5 = phi( printf_padding::@1/printf_padding::putc#6 )
  printf_padding::pad#5 = phi( printf_padding::@1/printf_padding::pad#6 )
  stackpush(char) = printf_padding::pad#5
  callexecute *printf_padding::putc#5 
  sideeffect stackpullpadding(1)
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  printf_padding::putc#8 = phi( printf_padding::@2/printf_padding::putc#5 )
  printf_padding::pad#8 = phi( printf_padding::@2/printf_padding::pad#5 )
  printf_padding::length#7 = phi( printf_padding::@2/printf_padding::length#8 )
  printf_padding::i#3 = phi( printf_padding::@2/printf_padding::i#4 )
  printf_padding::i#1 = ++ printf_padding::i#3
  to:printf_padding::@1
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  return 
  to:@return

void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uint: scope:[printf_uint]  from main::@6
  printf_uint::format_upper_case#5 = phi( main::@6/printf_uint::format_upper_case#0 )
  printf_uint::format_zero_padding#5 = phi( main::@6/printf_uint::format_zero_padding#0 )
  printf_uint::format_justify_left#5 = phi( main::@6/printf_uint::format_justify_left#0 )
  printf_uint::format_min_length#5 = phi( main::@6/printf_uint::format_min_length#0 )
  printf_uint::putc#5 = phi( main::@6/printf_uint::putc#0 )
  printf_uint::format_radix#5 = phi( main::@6/printf_uint::format_radix#0 )
  printf_uint::uvalue#4 = phi( main::@6/printf_uint::uvalue#0 )
  printf_uint::format_sign_always#1 = phi( main::@6/printf_uint::format_sign_always#0 )
  printf_uint::$5 = 0 != printf_uint::format_sign_always#1
  if(printf_uint::$5) goto printf_uint::@1
  to:printf_uint::@2
printf_uint::@1: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#3 = phi( printf_uint/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#3 = phi( printf_uint/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#4 = phi( printf_uint/printf_uint::format_sign_always#1 )
  printf_uint::format_justify_left#3 = phi( printf_uint/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#3 = phi( printf_uint/printf_uint::format_min_length#5 )
  printf_uint::putc#3 = phi( printf_uint/printf_uint::putc#5 )
  printf_uint::format_radix#3 = phi( printf_uint/printf_uint::format_radix#5 )
  printf_uint::uvalue#2 = phi( printf_uint/printf_uint::uvalue#4 )
  printf_uint::$1 = '+'
  to:printf_uint::@3
printf_uint::@2: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#4 = phi( printf_uint/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#4 = phi( printf_uint/printf_uint::format_zero_padding#5 )
  printf_uint::format_sign_always#5 = phi( printf_uint/printf_uint::format_sign_always#1 )
  printf_uint::format_justify_left#4 = phi( printf_uint/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#4 = phi( printf_uint/printf_uint::format_min_length#5 )
  printf_uint::putc#4 = phi( printf_uint/printf_uint::putc#5 )
  printf_uint::format_radix#4 = phi( printf_uint/printf_uint::format_radix#5 )
  printf_uint::uvalue#3 = phi( printf_uint/printf_uint::uvalue#4 )
  printf_uint::$0 = 0
  to:printf_uint::@3
printf_uint::@3: scope:[printf_uint]  from printf_uint::@1 printf_uint::@2
  printf_uint::format_upper_case#2 = phi( printf_uint::@1/printf_uint::format_upper_case#3, printf_uint::@2/printf_uint::format_upper_case#4 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@1/printf_uint::format_zero_padding#3, printf_uint::@2/printf_uint::format_zero_padding#4 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@1/printf_uint::format_sign_always#4, printf_uint::@2/printf_uint::format_sign_always#5 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@1/printf_uint::format_justify_left#3, printf_uint::@2/printf_uint::format_justify_left#4 )
  printf_uint::format_min_length#2 = phi( printf_uint::@1/printf_uint::format_min_length#3, printf_uint::@2/printf_uint::format_min_length#4 )
  printf_uint::putc#2 = phi( printf_uint::@1/printf_uint::putc#3, printf_uint::@2/printf_uint::putc#4 )
  printf_uint::format_radix#1 = phi( printf_uint::@1/printf_uint::format_radix#3, printf_uint::@2/printf_uint::format_radix#4 )
  printf_uint::uvalue#1 = phi( printf_uint::@1/printf_uint::uvalue#2, printf_uint::@2/printf_uint::uvalue#3 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
  *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
  utoa::value#1 = printf_uint::uvalue#1
  utoa::buffer#5 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  utoa::radix#0 = printf_uint::format_radix#1
  call utoa
  to:printf_uint::@4
printf_uint::@4: scope:[printf_uint]  from printf_uint::@3
  printf_uint::format_radix#2 = phi( printf_uint::@3/printf_uint::format_radix#1 )
  printf_uint::format_upper_case#1 = phi( printf_uint::@3/printf_uint::format_upper_case#2 )
  printf_uint::format_zero_padding#1 = phi( printf_uint::@3/printf_uint::format_zero_padding#2 )
  printf_uint::format_sign_always#2 = phi( printf_uint::@3/printf_uint::format_sign_always#3 )
  printf_uint::format_justify_left#1 = phi( printf_uint::@3/printf_uint::format_justify_left#2 )
  printf_uint::format_min_length#1 = phi( printf_uint::@3/printf_uint::format_min_length#2 )
  printf_uint::putc#1 = phi( printf_uint::@3/printf_uint::putc#2 )
  printf_number_buffer::putc#0 = printf_uint::putc#1
  printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  printf_number_buffer::format_min_length#0 = printf_uint::format_min_length#1
  printf_number_buffer::format_justify_left#0 = printf_uint::format_justify_left#1
  printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#2
  printf_number_buffer::format_zero_padding#0 = printf_uint::format_zero_padding#1
  printf_number_buffer::format_upper_case#0 = printf_uint::format_upper_case#1
  printf_number_buffer::format_radix#0 = printf_uint::format_radix#2
  call printf_number_buffer
  to:printf_uint::@5
printf_uint::@5: scope:[printf_uint]  from printf_uint::@4
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@5
  return 
  to:@return

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uint::@4
  printf_number_buffer::format_upper_case#9 = phi( printf_uint::@4/printf_number_buffer::format_upper_case#0 )
  printf_number_buffer::putc#12 = phi( printf_uint::@4/printf_number_buffer::putc#0 )
  printf_number_buffer::buffer_sign#7 = phi( printf_uint::@4/printf_number_buffer::buffer_sign#0 )
  printf_number_buffer::buffer_digits#4 = phi( printf_uint::@4/printf_number_buffer::buffer_digits#0 )
  printf_number_buffer::format_zero_padding#4 = phi( printf_uint::@4/printf_number_buffer::format_zero_padding#0 )
  printf_number_buffer::format_justify_left#3 = phi( printf_uint::@4/printf_number_buffer::format_justify_left#0 )
  printf_number_buffer::format_min_length#1 = phi( printf_uint::@4/printf_number_buffer::format_min_length#0 )
  printf_number_buffer::padding#0 = 0
  printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
  printf_number_buffer::$0 = ! printf_number_buffer::$26
  if(printf_number_buffer::$0) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@14
  printf_number_buffer::buffer_digits#12 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#4, printf_number_buffer::@13/printf_number_buffer::buffer_digits#14, printf_number_buffer::@14/printf_number_buffer::buffer_digits#15 )
  printf_number_buffer::format_upper_case#7 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#9, printf_number_buffer::@13/printf_number_buffer::format_upper_case#10, printf_number_buffer::@14/printf_number_buffer::format_upper_case#11 )
  printf_number_buffer::putc#6 = phi( printf_number_buffer/printf_number_buffer::putc#12, printf_number_buffer::@13/printf_number_buffer::putc#13, printf_number_buffer::@14/printf_number_buffer::putc#14 )
  printf_number_buffer::buffer_sign#5 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#7, printf_number_buffer::@13/printf_number_buffer::buffer_sign#8, printf_number_buffer::@14/printf_number_buffer::buffer_sign#9 )
  printf_number_buffer::padding#3 = phi( printf_number_buffer/printf_number_buffer::padding#0, printf_number_buffer::@13/printf_number_buffer::padding#1, printf_number_buffer::@14/printf_number_buffer::padding#2 )
  printf_number_buffer::format_zero_padding#1 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#4, printf_number_buffer::@13/printf_number_buffer::format_zero_padding#5, printf_number_buffer::@14/printf_number_buffer::format_zero_padding#6 )
  printf_number_buffer::format_justify_left#1 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#3, printf_number_buffer::@13/printf_number_buffer::format_justify_left#4, printf_number_buffer::@14/printf_number_buffer::format_justify_left#5 )
  printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
  printf_number_buffer::$1 = ! printf_number_buffer::$27
  printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
  printf_number_buffer::$2 = ! printf_number_buffer::$28
  printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
  printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#3
  printf_number_buffer::$5 = ! printf_number_buffer::$4
  if(printf_number_buffer::$5) goto printf_number_buffer::@2
  to:printf_number_buffer::@8
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  printf_number_buffer::format_upper_case#15 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#9 )
  printf_number_buffer::putc#20 = phi( printf_number_buffer/printf_number_buffer::putc#12 )
  printf_number_buffer::format_zero_padding#15 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#4 )
  printf_number_buffer::format_justify_left#11 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#3 )
  printf_number_buffer::format_min_length#5 = phi( printf_number_buffer/printf_number_buffer::format_min_length#1 )
  printf_number_buffer::buffer_sign#4 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#7 )
  printf_number_buffer::buffer_digits#1 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#4 )
  strlen::str#1 = printf_number_buffer::buffer_digits#1
  call strlen
  strlen::return#2 = strlen::return#1
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@6
  printf_number_buffer::buffer_digits#17 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_digits#1 )
  printf_number_buffer::format_upper_case#13 = phi( printf_number_buffer::@6/printf_number_buffer::format_upper_case#15 )
  printf_number_buffer::putc#18 = phi( printf_number_buffer::@6/printf_number_buffer::putc#20 )
  printf_number_buffer::format_zero_padding#10 = phi( printf_number_buffer::@6/printf_number_buffer::format_zero_padding#15 )
  printf_number_buffer::format_justify_left#7 = phi( printf_number_buffer::@6/printf_number_buffer::format_justify_left#11 )
  printf_number_buffer::format_min_length#3 = phi( printf_number_buffer::@6/printf_number_buffer::format_min_length#5 )
  printf_number_buffer::buffer_sign#1 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_sign#4 )
  strlen::return#5 = phi( printf_number_buffer::@6/strlen::return#2 )
  printf_number_buffer::$19 = strlen::return#5
  printf_number_buffer::len#0 = (signed char)printf_number_buffer::$19
  printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
  printf_number_buffer::$20 = ! printf_number_buffer::$29
  if(printf_number_buffer::$20) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@15 printf_number_buffer::@7
  printf_number_buffer::buffer_digits#14 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#17, printf_number_buffer::@7/printf_number_buffer::buffer_digits#18 )
  printf_number_buffer::format_upper_case#10 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#13, printf_number_buffer::@7/printf_number_buffer::format_upper_case#14 )
  printf_number_buffer::putc#13 = phi( printf_number_buffer::@15/printf_number_buffer::putc#18, printf_number_buffer::@7/printf_number_buffer::putc#19 )
  printf_number_buffer::buffer_sign#8 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#1, printf_number_buffer::@7/printf_number_buffer::buffer_sign#11 )
  printf_number_buffer::format_zero_padding#5 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#10, printf_number_buffer::@7/printf_number_buffer::format_zero_padding#11 )
  printf_number_buffer::format_justify_left#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#7, printf_number_buffer::@7/printf_number_buffer::format_justify_left#8 )
  printf_number_buffer::len#2 = phi( printf_number_buffer::@15/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  printf_number_buffer::format_min_length#2 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#3, printf_number_buffer::@7/printf_number_buffer::format_min_length#4 )
  printf_number_buffer::$25 = (signed char)printf_number_buffer::format_min_length#2
  printf_number_buffer::$21 = printf_number_buffer::$25 - printf_number_buffer::len#2
  printf_number_buffer::padding#1 = printf_number_buffer::$21
  printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
  printf_number_buffer::$23 = ! printf_number_buffer::$22
  if(printf_number_buffer::$23) goto printf_number_buffer::@1
  to:printf_number_buffer::@14
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@15
  printf_number_buffer::buffer_digits#18 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#17 )
  printf_number_buffer::format_upper_case#14 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#13 )
  printf_number_buffer::putc#19 = phi( printf_number_buffer::@15/printf_number_buffer::putc#18 )
  printf_number_buffer::buffer_sign#11 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#1 )
  printf_number_buffer::format_zero_padding#11 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#10 )
  printf_number_buffer::format_justify_left#8 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#7 )
  printf_number_buffer::format_min_length#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#3 )
  printf_number_buffer::len#3 = phi( printf_number_buffer::@15/printf_number_buffer::len#0 )
  printf_number_buffer::len#1 = ++ printf_number_buffer::len#3
  to:printf_number_buffer::@13
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@13
  printf_number_buffer::buffer_digits#15 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_digits#14 )
  printf_number_buffer::format_upper_case#11 = phi( printf_number_buffer::@13/printf_number_buffer::format_upper_case#10 )
  printf_number_buffer::putc#14 = phi( printf_number_buffer::@13/printf_number_buffer::putc#13 )
  printf_number_buffer::buffer_sign#9 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_sign#8 )
  printf_number_buffer::format_zero_padding#6 = phi( printf_number_buffer::@13/printf_number_buffer::format_zero_padding#5 )
  printf_number_buffer::format_justify_left#5 = phi( printf_number_buffer::@13/printf_number_buffer::format_justify_left#4 )
  printf_number_buffer::padding#2 = 0
  to:printf_number_buffer::@1
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16
  printf_number_buffer::format_justify_left#15 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#1, printf_number_buffer::@16/printf_number_buffer::format_justify_left#18 )
  printf_number_buffer::buffer_digits#9 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#12, printf_number_buffer::@16/printf_number_buffer::buffer_digits#13 )
  printf_number_buffer::format_upper_case#4 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#7, printf_number_buffer::@16/printf_number_buffer::format_upper_case#8 )
  printf_number_buffer::putc#7 = phi( printf_number_buffer::@1/printf_number_buffer::putc#6, printf_number_buffer::@16/printf_number_buffer::putc#15 )
  printf_number_buffer::padding#9 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3, printf_number_buffer::@16/printf_number_buffer::padding#12 )
  printf_number_buffer::format_zero_padding#7 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#1, printf_number_buffer::@16/printf_number_buffer::format_zero_padding#12 )
  printf_number_buffer::buffer_sign#2 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#5, printf_number_buffer::@16/printf_number_buffer::buffer_sign#6 )
  printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
  printf_number_buffer::$7 = ! printf_number_buffer::$30
  if(printf_number_buffer::$7) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@1
  printf_number_buffer::format_justify_left#19 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#1 )
  printf_number_buffer::buffer_digits#16 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#12 )
  printf_number_buffer::format_upper_case#12 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#7 )
  printf_number_buffer::format_zero_padding#16 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#1 )
  printf_number_buffer::buffer_sign#10 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#5 )
  printf_number_buffer::padding#4 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3 )
  printf_number_buffer::putc#1 = phi( printf_number_buffer::@1/printf_number_buffer::putc#6 )
  printf_padding::putc#0 = printf_number_buffer::putc#1
  printf_padding::pad#0 = ' '
  printf_padding::length#0 = (char)printf_number_buffer::padding#4
  call printf_padding
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@8
  printf_number_buffer::format_justify_left#18 = phi( printf_number_buffer::@8/printf_number_buffer::format_justify_left#19 )
  printf_number_buffer::buffer_digits#13 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_digits#16 )
  printf_number_buffer::format_upper_case#8 = phi( printf_number_buffer::@8/printf_number_buffer::format_upper_case#12 )
  printf_number_buffer::putc#15 = phi( printf_number_buffer::@8/printf_number_buffer::putc#1 )
  printf_number_buffer::padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::padding#4 )
  printf_number_buffer::format_zero_padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::format_zero_padding#16 )
  printf_number_buffer::buffer_sign#6 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_sign#10 )
  to:printf_number_buffer::@2
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  printf_number_buffer::format_justify_left#13 = phi( printf_number_buffer::@2/printf_number_buffer::format_justify_left#15, printf_number_buffer::@9/printf_number_buffer::format_justify_left#16 )
  printf_number_buffer::buffer_digits#8 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_digits#9, printf_number_buffer::@9/printf_number_buffer::buffer_digits#10 )
  printf_number_buffer::putc#8 = phi( printf_number_buffer::@2/printf_number_buffer::putc#7, printf_number_buffer::@9/printf_number_buffer::putc#2 )
  printf_number_buffer::format_upper_case#3 = phi( printf_number_buffer::@2/printf_number_buffer::format_upper_case#4, printf_number_buffer::@9/printf_number_buffer::format_upper_case#5 )
  printf_number_buffer::padding#5 = phi( printf_number_buffer::@2/printf_number_buffer::padding#9, printf_number_buffer::@9/printf_number_buffer::padding#10 )
  printf_number_buffer::format_zero_padding#2 = phi( printf_number_buffer::@2/printf_number_buffer::format_zero_padding#7, printf_number_buffer::@9/printf_number_buffer::format_zero_padding#8 )
  printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#2 && printf_number_buffer::padding#5
  printf_number_buffer::$10 = ! printf_number_buffer::$9
  if(printf_number_buffer::$10) goto printf_number_buffer::@4
  to:printf_number_buffer::@10
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  printf_number_buffer::format_justify_left#16 = phi( printf_number_buffer::@2/printf_number_buffer::format_justify_left#15 )
  printf_number_buffer::buffer_digits#10 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_digits#9 )
  printf_number_buffer::format_upper_case#5 = phi( printf_number_buffer::@2/printf_number_buffer::format_upper_case#4 )
  printf_number_buffer::padding#10 = phi( printf_number_buffer::@2/printf_number_buffer::padding#9 )
  printf_number_buffer::format_zero_padding#8 = phi( printf_number_buffer::@2/printf_number_buffer::format_zero_padding#7 )
  printf_number_buffer::putc#2 = phi( printf_number_buffer::@2/printf_number_buffer::putc#7 )
  printf_number_buffer::buffer_sign#3 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_sign#2 )
  stackpush(char) = printf_number_buffer::buffer_sign#3
  callexecute *printf_number_buffer::putc#2 
  sideeffect stackpullpadding(1)
  to:printf_number_buffer::@3
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@17 printf_number_buffer::@3
  printf_number_buffer::padding#14 = phi( printf_number_buffer::@17/printf_number_buffer::padding#15, printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_number_buffer::format_justify_left#10 = phi( printf_number_buffer::@17/printf_number_buffer::format_justify_left#12, printf_number_buffer::@3/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_zero_padding#14 = phi( printf_number_buffer::@17/printf_number_buffer::format_zero_padding#17, printf_number_buffer::@3/printf_number_buffer::format_zero_padding#2 )
  printf_number_buffer::buffer_digits#6 = phi( printf_number_buffer::@17/printf_number_buffer::buffer_digits#7, printf_number_buffer::@3/printf_number_buffer::buffer_digits#8 )
  printf_number_buffer::putc#10 = phi( printf_number_buffer::@17/printf_number_buffer::putc#16, printf_number_buffer::@3/printf_number_buffer::putc#8 )
  printf_number_buffer::format_upper_case#1 = phi( printf_number_buffer::@17/printf_number_buffer::format_upper_case#2, printf_number_buffer::@3/printf_number_buffer::format_upper_case#3 )
  printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
  printf_number_buffer::$12 = ! printf_number_buffer::$31
  if(printf_number_buffer::$12) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@3
  printf_number_buffer::format_justify_left#17 = phi( printf_number_buffer::@3/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_zero_padding#19 = phi( printf_number_buffer::@3/printf_number_buffer::format_zero_padding#2 )
  printf_number_buffer::buffer_digits#11 = phi( printf_number_buffer::@3/printf_number_buffer::buffer_digits#8 )
  printf_number_buffer::format_upper_case#6 = phi( printf_number_buffer::@3/printf_number_buffer::format_upper_case#3 )
  printf_number_buffer::padding#6 = phi( printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_number_buffer::putc#3 = phi( printf_number_buffer::@3/printf_number_buffer::putc#8 )
  printf_padding::putc#1 = printf_number_buffer::putc#3
  printf_padding::pad#1 = '0'
  printf_padding::length#1 = (char)printf_number_buffer::padding#6
  call printf_padding
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@10
  printf_number_buffer::padding#15 = phi( printf_number_buffer::@10/printf_number_buffer::padding#6 )
  printf_number_buffer::format_justify_left#12 = phi( printf_number_buffer::@10/printf_number_buffer::format_justify_left#17 )
  printf_number_buffer::format_zero_padding#17 = phi( printf_number_buffer::@10/printf_number_buffer::format_zero_padding#19 )
  printf_number_buffer::buffer_digits#7 = phi( printf_number_buffer::@10/printf_number_buffer::buffer_digits#11 )
  printf_number_buffer::putc#16 = phi( printf_number_buffer::@10/printf_number_buffer::putc#3 )
  printf_number_buffer::format_upper_case#2 = phi( printf_number_buffer::@10/printf_number_buffer::format_upper_case#6 )
  to:printf_number_buffer::@4
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@19 printf_number_buffer::@4
  printf_number_buffer::padding#11 = phi( printf_number_buffer::@19/printf_number_buffer::padding#13, printf_number_buffer::@4/printf_number_buffer::padding#14 )
  printf_number_buffer::format_justify_left#6 = phi( printf_number_buffer::@19/printf_number_buffer::format_justify_left#9, printf_number_buffer::@4/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::format_zero_padding#9 = phi( printf_number_buffer::@19/printf_number_buffer::format_zero_padding#13, printf_number_buffer::@4/printf_number_buffer::format_zero_padding#14 )
  printf_number_buffer::buffer_digits#2 = phi( printf_number_buffer::@19/printf_number_buffer::buffer_digits#5, printf_number_buffer::@4/printf_number_buffer::buffer_digits#6 )
  printf_number_buffer::putc#4 = phi( printf_number_buffer::@19/printf_number_buffer::putc#9, printf_number_buffer::@4/printf_number_buffer::putc#10 )
  printf_str::putc#0 = printf_number_buffer::putc#4
  printf_str::s#1 = printf_number_buffer::buffer_digits#2
  call printf_str
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@5
  printf_number_buffer::putc#11 = phi( printf_number_buffer::@5/printf_number_buffer::putc#4 )
  printf_number_buffer::padding#7 = phi( printf_number_buffer::@5/printf_number_buffer::padding#11 )
  printf_number_buffer::format_justify_left#2 = phi( printf_number_buffer::@5/printf_number_buffer::format_justify_left#6 )
  printf_number_buffer::format_zero_padding#3 = phi( printf_number_buffer::@5/printf_number_buffer::format_zero_padding#9 )
  printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
  printf_number_buffer::$14 = ! printf_number_buffer::$32
  printf_number_buffer::$15 = printf_number_buffer::format_justify_left#2 && printf_number_buffer::$14
  printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#7
  printf_number_buffer::$17 = ! printf_number_buffer::$16
  if(printf_number_buffer::$17) goto printf_number_buffer::@return
  to:printf_number_buffer::@12
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  printf_number_buffer::padding#16 = phi( printf_number_buffer::@4/printf_number_buffer::padding#14 )
  printf_number_buffer::format_justify_left#14 = phi( printf_number_buffer::@4/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::format_zero_padding#18 = phi( printf_number_buffer::@4/printf_number_buffer::format_zero_padding#14 )
  printf_number_buffer::putc#17 = phi( printf_number_buffer::@4/printf_number_buffer::putc#10 )
  printf_number_buffer::buffer_digits#3 = phi( printf_number_buffer::@4/printf_number_buffer::buffer_digits#6 )
  strupr::str#0 = printf_number_buffer::buffer_digits#3
  call strupr
  strupr::return#2 = strupr::return#1
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@11
  printf_number_buffer::padding#13 = phi( printf_number_buffer::@11/printf_number_buffer::padding#16 )
  printf_number_buffer::format_justify_left#9 = phi( printf_number_buffer::@11/printf_number_buffer::format_justify_left#14 )
  printf_number_buffer::format_zero_padding#13 = phi( printf_number_buffer::@11/printf_number_buffer::format_zero_padding#18 )
  printf_number_buffer::buffer_digits#5 = phi( printf_number_buffer::@11/printf_number_buffer::buffer_digits#3 )
  printf_number_buffer::putc#9 = phi( printf_number_buffer::@11/printf_number_buffer::putc#17 )
  to:printf_number_buffer::@5
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@18
  printf_number_buffer::padding#8 = phi( printf_number_buffer::@18/printf_number_buffer::padding#7 )
  printf_number_buffer::putc#5 = phi( printf_number_buffer::@18/printf_number_buffer::putc#11 )
  printf_padding::putc#2 = printf_number_buffer::putc#5
  printf_padding::pad#2 = ' '
  printf_padding::length#2 = (char)printf_number_buffer::padding#8
  call printf_padding
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@18 printf_number_buffer::@20
  return 
  to:@return

void printf_string(void (*putc)(char) , char *str , char format_min_length , char format_justify_left)
printf_string: scope:[printf_string]  from main::@2 main::@4
  printf_string::putc#8 = phi( main::@2/printf_string::putc#0, main::@4/printf_string::putc#1 )
  printf_string::str#4 = phi( main::@2/printf_string::str#0, main::@4/printf_string::str#1 )
  printf_string::format_justify_left#4 = phi( main::@2/printf_string::format_justify_left#0, main::@4/printf_string::format_justify_left#1 )
  printf_string::format_min_length#2 = phi( main::@2/printf_string::format_min_length#0, main::@4/printf_string::format_min_length#1 )
  printf_string::padding#0 = 0
  printf_string::$14 = 0 != printf_string::format_min_length#2
  printf_string::$0 = ! printf_string::$14
  if(printf_string::$0) goto printf_string::@1
  to:printf_string::@3
printf_string::@1: scope:[printf_string]  from printf_string printf_string::@4 printf_string::@7
  printf_string::str#5 = phi( printf_string/printf_string::str#4, printf_string::@4/printf_string::str#7, printf_string::@7/printf_string::str#8 )
  printf_string::putc#5 = phi( printf_string/printf_string::putc#8, printf_string::@4/printf_string::putc#9, printf_string::@7/printf_string::putc#10 )
  printf_string::padding#3 = phi( printf_string/printf_string::padding#0, printf_string::@4/printf_string::padding#2, printf_string::@7/printf_string::padding#1 )
  printf_string::format_justify_left#2 = phi( printf_string/printf_string::format_justify_left#4, printf_string::@4/printf_string::format_justify_left#5, printf_string::@7/printf_string::format_justify_left#6 )
  printf_string::$15 = 0 != printf_string::format_justify_left#2
  printf_string::$1 = ! printf_string::$15
  printf_string::$2 = printf_string::$1 && printf_string::padding#3
  printf_string::$3 = ! printf_string::$2
  if(printf_string::$3) goto printf_string::@2
  to:printf_string::@5
printf_string::@3: scope:[printf_string]  from printf_string
  printf_string::putc#11 = phi( printf_string/printf_string::putc#8 )
  printf_string::format_justify_left#8 = phi( printf_string/printf_string::format_justify_left#4 )
  printf_string::format_min_length#4 = phi( printf_string/printf_string::format_min_length#2 )
  printf_string::str#2 = phi( printf_string/printf_string::str#4 )
  strlen::str#2 = printf_string::str#2
  call strlen
  strlen::return#3 = strlen::return#1
  to:printf_string::@7
printf_string::@7: scope:[printf_string]  from printf_string::@3
  printf_string::str#8 = phi( printf_string::@3/printf_string::str#2 )
  printf_string::putc#10 = phi( printf_string::@3/printf_string::putc#11 )
  printf_string::format_justify_left#6 = phi( printf_string::@3/printf_string::format_justify_left#8 )
  printf_string::format_min_length#3 = phi( printf_string::@3/printf_string::format_min_length#4 )
  strlen::return#6 = phi( printf_string::@3/strlen::return#3 )
  printf_string::$9 = strlen::return#6
  printf_string::len#0 = (signed char)printf_string::$9
  printf_string::$13 = (signed char)printf_string::format_min_length#3
  printf_string::$10 = printf_string::$13 - printf_string::len#0
  printf_string::padding#1 = printf_string::$10
  printf_string::$11 = printf_string::padding#1 < 0
  printf_string::$12 = ! printf_string::$11
  if(printf_string::$12) goto printf_string::@1
  to:printf_string::@4
printf_string::@4: scope:[printf_string]  from printf_string::@7
  printf_string::str#7 = phi( printf_string::@7/printf_string::str#8 )
  printf_string::putc#9 = phi( printf_string::@7/printf_string::putc#10 )
  printf_string::format_justify_left#5 = phi( printf_string::@7/printf_string::format_justify_left#6 )
  printf_string::padding#2 = 0
  to:printf_string::@1
printf_string::@2: scope:[printf_string]  from printf_string::@1 printf_string::@9
  printf_string::padding#7 = phi( printf_string::@1/printf_string::padding#3, printf_string::@9/printf_string::padding#8 )
  printf_string::format_justify_left#7 = phi( printf_string::@1/printf_string::format_justify_left#2, printf_string::@9/printf_string::format_justify_left#9 )
  printf_string::str#3 = phi( printf_string::@1/printf_string::str#5, printf_string::@9/printf_string::str#6 )
  printf_string::putc#2 = phi( printf_string::@1/printf_string::putc#5, printf_string::@9/printf_string::putc#6 )
  printf_str::putc#1 = printf_string::putc#2
  printf_str::s#2 = printf_string::str#3
  call printf_str
  to:printf_string::@8
printf_string::@8: scope:[printf_string]  from printf_string::@2
  printf_string::putc#7 = phi( printf_string::@2/printf_string::putc#2 )
  printf_string::padding#4 = phi( printf_string::@2/printf_string::padding#7 )
  printf_string::format_justify_left#3 = phi( printf_string::@2/printf_string::format_justify_left#7 )
  printf_string::$6 = printf_string::format_justify_left#3 && printf_string::padding#4
  printf_string::$7 = ! printf_string::$6
  if(printf_string::$7) goto printf_string::@return
  to:printf_string::@6
printf_string::@5: scope:[printf_string]  from printf_string::@1
  printf_string::format_justify_left#10 = phi( printf_string::@1/printf_string::format_justify_left#2 )
  printf_string::str#9 = phi( printf_string::@1/printf_string::str#5 )
  printf_string::padding#5 = phi( printf_string::@1/printf_string::padding#3 )
  printf_string::putc#3 = phi( printf_string::@1/printf_string::putc#5 )
  printf_padding::putc#3 = printf_string::putc#3
  printf_padding::pad#3 = ' '
  printf_padding::length#3 = (char)printf_string::padding#5
  call printf_padding
  to:printf_string::@9
printf_string::@9: scope:[printf_string]  from printf_string::@5
  printf_string::padding#8 = phi( printf_string::@5/printf_string::padding#5 )
  printf_string::format_justify_left#9 = phi( printf_string::@5/printf_string::format_justify_left#10 )
  printf_string::str#6 = phi( printf_string::@5/printf_string::str#9 )
  printf_string::putc#6 = phi( printf_string::@5/printf_string::putc#3 )
  to:printf_string::@2
printf_string::@6: scope:[printf_string]  from printf_string::@8
  printf_string::padding#6 = phi( printf_string::@8/printf_string::padding#4 )
  printf_string::putc#4 = phi( printf_string::@8/printf_string::putc#7 )
  printf_padding::putc#4 = printf_string::putc#4
  printf_padding::pad#4 = ' '
  printf_padding::length#4 = (char)printf_string::padding#6
  call printf_padding
  to:printf_string::@10
printf_string::@10: scope:[printf_string]  from printf_string::@6
  to:printf_string::@return
printf_string::@return: scope:[printf_string]  from printf_string::@10 printf_string::@8
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17
  main::bbs#0 = bbs_list
  to:main::@1
main::@1: scope:[main]  from main main::@8
  main::bbs#2 = phi( main/main::bbs#0, main::@8/main::bbs#1 )
  main::$5 = (char **)main::bbs#2
  main::$1 = main::$5 + OFFSET_STRUCT_BBS_NAME
  main::$9 = (char *)0 != *main::$1
  if(main::$9) goto main::@2
  to:main::@return
main::@2: scope:[main]  from main::@1
  main::bbs#3 = phi( main::@1/main::bbs#2 )
  main::$6 = (char **)main::bbs#3
  main::$2 = main::$6 + OFFSET_STRUCT_BBS_NAME
  printf_string::putc#0 = &cputc
  printf_string::str#0 = *main::$2
  printf_string::format_min_length#0 = 0
  printf_string::format_justify_left#0 = 0
  call printf_string
  to:main::@3
main::@3: scope:[main]  from main::@2
  main::bbs#7 = phi( main::@2/main::bbs#3 )
  printf_str::putc#2 = &cputc
  printf_str::s#3 = main::s
  call printf_str
  to:main::@4
main::@4: scope:[main]  from main::@3
  main::bbs#4 = phi( main::@3/main::bbs#7 )
  main::$7 = (char **)main::bbs#4
  main::$3 = main::$7 + OFFSET_STRUCT_BBS_HOST_NAME
  printf_string::putc#1 = &cputc
  printf_string::str#1 = *main::$3
  printf_string::format_min_length#1 = 0
  printf_string::format_justify_left#1 = 0
  call printf_string
  to:main::@5
main::@5: scope:[main]  from main::@4
  main::bbs#8 = phi( main::@4/main::bbs#4 )
  printf_str::putc#3 = &cputc
  printf_str::s#4 = main::s1
  call printf_str
  to:main::@6
main::@6: scope:[main]  from main::@5
  main::bbs#5 = phi( main::@5/main::bbs#8 )
  main::$8 = (unsigned int *)main::bbs#5
  main::$4 = main::$8 + OFFSET_STRUCT_BBS_PORT_NUMBER
  printf_uint::putc#0 = &cputc
  printf_uint::uvalue#0 = *main::$4
  printf_uint::format_min_length#0 = 0
  printf_uint::format_justify_left#0 = 0
  printf_uint::format_sign_always#0 = 0
  printf_uint::format_zero_padding#0 = 0
  printf_uint::format_upper_case#0 = 0
  printf_uint::format_radix#0 = DECIMAL
  call printf_uint
  to:main::@7
main::@7: scope:[main]  from main::@6
  main::bbs#9 = phi( main::@6/main::bbs#5 )
  printf_str::putc#4 = &cputc
  printf_str::s#5 = main::s2
  call printf_str
  to:main::@8
main::@8: scope:[main]  from main::@7
  main::bbs#6 = phi( main::@7/main::bbs#9 )
  main::bbs#1 = main::bbs#6 + SIZEOF_STRUCT_BBS
  to:main::@1
main::@return: scope:[main]  from main::@1
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  conio_cursor_x = 0
  conio_cursor_y = 0
  conio_line_text = DEFAULT_SCREEN
  conio_line_color = COLORRAM
  conio_textcolor = LIGHT_BLUE
  conio_scroll_enable = 1
  call conio_c64_init
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  to:__start::@1
__start::@1: scope:[__start]  from __start::@2
  call main
  to:__start::@3
__start::@3: scope:[__start]  from __start::@1
  to:__start::@return
__start::@return: scope:[__start]  from __start::@3
  return 
  to:@return

SYMBOL TABLE SSA
__constant char BINARY = 2
__constant char * const COLORRAM = (char *)$d800
__constant char DECIMAL = $a
__constant char * const DEFAULT_SCREEN = (char *)$400
__constant char DIGITS[] = "0123456789abcdef"z
__constant char HEXADECIMAL = $10
__constant const char LIGHT_BLUE = $e
__constant char OCTAL = 8
__constant char OFFSET_STRUCT_BBS_HOST_NAME = 2
__constant char OFFSET_STRUCT_BBS_NAME = 0
__constant char OFFSET_STRUCT_BBS_PORT_NUMBER = 4
__constant char OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN = 0
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_BINARY_VALUES[] = { $8000, $4000, $2000, $1000, $800, $400, $200, $100, $80, $40, $20, $10, 8, 4, 2 }
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant unsigned int RADIX_HEXADECIMAL_VALUES[] = { $1000, $100, $10 }
__constant unsigned int RADIX_OCTAL_VALUES[] = { $8000, $1000, $200, $40, 8 }
__constant char SIZEOF_STRUCT_BBS = 6
__constant char SIZEOF_UNSIGNED_INT = 2
__constant unsigned int STACK_BASE = $103
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *)$d000
void __start()
__constant char bbs_host_name[$f] = "byob.hopto.org"
__constant char bbs_host_name1[$14] = "rapidfire.hopto.org"
__constant char bbs_host_name10[$16] = "bbs.jammingsignal.com"
__constant char bbs_host_name11[$19] = "centronian.servebeer.com"
__constant char bbs_host_name12[$11] = "aubbs.dyndns.org"
__constant char bbs_host_name13[$13] = "oasisbbs.hopto.org"
__constant char bbs_host_name14[$13] = "bbs.thediskbox.com"
__constant char bbs_host_name15[$19] = "cottonwoodbbs.dyndns.org"
__constant char bbs_host_name16[$f] = "cib.dyndns.org"
__constant char bbs_host_name17[$14] = "rapidfire.hopto.org"
__constant char bbs_host_name18[$16] = "madworld.bounceme.net"
__constant char bbs_host_name19[$10] = "bbs.thejlab.com"
__constant char bbs_host_name2[$13] = "antidote.hopto.org"
__constant char bbs_host_name20[$15] = "hotwirebbs.zapto.org"
__constant char bbs_host_name21[$18] = "endlesschaos.dyndns.org"
__constant char bbs_host_name22[$19] = "borderlinebbs.dyndns.org"
__constant char bbs_host_name23[$16] = "raveolution.hopto.org"
__constant char bbs_host_name24[$16] = "theedgebbs.dyndns.org"
__constant char bbs_host_name25[$14] = "F96NG92-L.fritz.box"
__constant char bbs_host_name3[$18] = "wizardsrealm.c64bbs.org"
__constant char bbs_host_name4[$15] = "the-hidden.hopto.org"
__constant char bbs_host_name5[$13] = "eagelbird.ddns.net"
__constant char bbs_host_name6[$c] = "scorp.us.to"
__constant char bbs_host_name7[$14] = "maraud.dynalias.com"
__constant char bbs_host_name8[$f] = "cib.dyndns.org"
__constant char bbs_host_name9[$1d] = "64vintageremixbbs.dyndns.org"
__constant const struct bbs bbs_list[$1b] = { { name: bbs_name, host_name: bbs_host_name, port_number: $fa80 }, { name: bbs_name1, host_name: bbs_host_name1, port_number: $fa80 }, { name: bbs_name2, host_name: bbs_host_name2, port_number: $fa80 }, { name: bbs_name3, host_name: bbs_host_name3, port_number: $17 }, { name: bbs_name4, host_name: bbs_host_name4, port_number: $fa80 }, { name: bbs_name5, host_name: bbs_host_name5, port_number: $1900 }, { name: bbs_name6, host_name: bbs_host_name6, port_number: $17 }, { name: bbs_name7, host_name: bbs_host_name7, port_number: $1900 }, { name: bbs_name8, host_name: bbs_host_name8, port_number: $1900 }, { name: bbs_name9, host_name: bbs_host_name9, port_number: $1900 }, { name: bbs_name10, host_name: bbs_host_name10, port_number: $17 }, { name: bbs_name11, host_name: bbs_host_name11, port_number: $1900 }, { name: bbs_name12, host_name: bbs_host_name12, port_number: $8fc }, { name: bbs_name13, host_name: bbs_host_name13, port_number: $1900 }, { name: bbs_name14, host_name: bbs_host_name14, port_number: $1900 }, { name: bbs_name15, host_name: bbs_host_name15, port_number: $1966 }, { name: bbs_name16, host_name: bbs_host_name16, port_number: $1904 }, { name: bbs_name17, host_name: bbs_host_name17, port_number: $fa80 }, { name: bbs_name18, host_name: bbs_host_name18, port_number: $1900 }, { name: bbs_name19, host_name: bbs_host_name19, port_number: $1900 }, { name: bbs_name20, host_name: bbs_host_name20, port_number: $1966 }, { name: bbs_name21, host_name: bbs_host_name21, port_number: $1900 }, { name: bbs_name22, host_name: bbs_host_name22, port_number: $1900 }, { name: bbs_name23, host_name: bbs_host_name23, port_number: $fa80 }, { name: bbs_name24, host_name: bbs_host_name24, port_number: $605 }, { name: bbs_name25, host_name: bbs_host_name25, port_number: $fa80 }, { name: 0, host_name: 0, port_number: 0 } }
__constant char bbs_name[$c] = "Boar's Head"
__constant char bbs_name1[$a] = "RapidFire"
__constant char bbs_name10[$f] = "Jamming Signal"
__constant char bbs_name11[$f] = "Centronian BBS"
__constant char bbs_name12[$11] = "Anrchy Undergrnd"
__constant char bbs_name13[$e] = "The Oasis BBS"
__constant char bbs_name14[$d] = "The Disk Box"
__constant char bbs_name15[$b] = "Cottonwood"
__constant char bbs_name16[$10] = "Wrong Number ]["
__constant char bbs_name17[$a] = "RabidFire"
__constant char bbs_name18[$a] = "Mad World"
__constant char bbs_name19[$b] = "Citadel 64"
__constant char bbs_name2[$12] = "Antidote by Triad"
__constant char bbs_name20[$c] = "Hotwire BBS"
__constant char bbs_name21[$e] = "Endless Chaos"
__constant char bbs_name22[$b] = "Borderline"
__constant char bbs_name23[$c] = "RAVELOUTION"
__constant char bbs_name24[$d] = "The Edge BBS"
__constant char bbs_name25[9] = "PGS Test"
__constant char bbs_name3[$10] = "Wizards's Realm"
__constant char bbs_name4[$b] = "The Hidden"
__constant char bbs_name5[$e] = "Eaglewing BBS"
__constant char bbs_name6[$e] = "Scorps Portal"
__constant char bbs_name7[$d] = "My C=ult BBS"
__constant char bbs_name8[$10] = "Commodore Image"
__constant char bbs_name9[$10] = "64 Vintag Remic"
void conio_c64_init()
bool conio_c64_init::$0
bool conio_c64_init::$1
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *)$d6
char conio_c64_init::line
char conio_c64_init::line#0
char conio_c64_init::line#1
char conio_c64_init::line#2
__loadstore char conio_cursor_x
__loadstore char conio_cursor_y
__loadstore char *conio_line_color
__loadstore char *conio_line_text
__loadstore char conio_scroll_enable
__loadstore char conio_textcolor
__stackcall void cputc(char c)
bool cputc::$0
bool cputc::$1
bool cputc::$2
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0
char cputc::c#1
void cputln()
void cscroll()
bool cscroll::$0
bool cscroll::$1
bool cscroll::$7
void gotoxy(char x , char y)
bool gotoxy::$0
bool gotoxy::$1
bool gotoxy::$2
bool gotoxy::$3
char *gotoxy::$5
char *gotoxy::$6
unsigned int gotoxy::$7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0
char gotoxy::x
char gotoxy::x#0
char gotoxy::x#1
char gotoxy::x#2
char gotoxy::x#3
char gotoxy::x#4
char gotoxy::x#5
char gotoxy::x#6
char gotoxy::y
char gotoxy::y#0
char gotoxy::y#1
char gotoxy::y#2
char gotoxy::y#3
char gotoxy::y#4
char gotoxy::y#5
char gotoxy::y#6
void main()
char **main::$1
char **main::$2
char **main::$3
unsigned int *main::$4
char **main::$5
char **main::$6
char **main::$7
unsigned int *main::$8
bool main::$9
struct bbs *main::bbs
struct bbs *main::bbs#0
struct bbs *main::bbs#1
struct bbs *main::bbs#2
struct bbs *main::bbs#3
struct bbs *main::bbs#4
struct bbs *main::bbs#5
struct bbs *main::bbs#6
struct bbs *main::bbs#7
struct bbs *main::bbs#8
struct bbs *main::bbs#9
__constant char main::s[2] = " "
__constant char main::s1[2] = " "
__constant char main::s2[2] = "
"
void * memcpy(void *destination , void *source , unsigned int num)
bool memcpy::$1
char *memcpy::$2
void *memcpy::destination
void *memcpy::destination#0
void *memcpy::destination#1
void *memcpy::destination#2
void *memcpy::destination#3
void *memcpy::destination#4
void *memcpy::destination#5
char *memcpy::dst
char *memcpy::dst#0
char *memcpy::dst#1
char *memcpy::dst#2
char *memcpy::dst#3
unsigned int memcpy::num
unsigned int memcpy::num#0
unsigned int memcpy::num#1
unsigned int memcpy::num#2
void *memcpy::return
void *memcpy::return#0
void *memcpy::return#1
void *memcpy::return#2
void *memcpy::return#3
void *memcpy::return#4
void *memcpy::source
void *memcpy::source#0
void *memcpy::source#1
void *memcpy::source#2
char *memcpy::src
char *memcpy::src#0
char *memcpy::src#1
char *memcpy::src#2
char *memcpy::src#3
char *memcpy::src_end
char *memcpy::src_end#0
char *memcpy::src_end#1
char *memcpy::src_end#2
void * memset(void *str , char c , unsigned int num)
bool memset::$0
bool memset::$1
bool memset::$3
char *memset::$4
char memset::c
char memset::c#0
char memset::c#1
char memset::c#2
char memset::c#3
char memset::c#4
char memset::c#5
char *memset::dst
char *memset::dst#0
char *memset::dst#1
char *memset::dst#2
char *memset::dst#3
char *memset::end
char *memset::end#0
char *memset::end#1
char *memset::end#2
unsigned int memset::num
unsigned int memset::num#0
unsigned int memset::num#1
unsigned int memset::num#2
unsigned int memset::num#3
void *memset::return
void *memset::return#0
void *memset::return#1
void *memset::return#2
void *memset::return#3
void *memset::return#4
void *memset::str
void *memset::str#0
void *memset::str#1
void *memset::str#2
void *memset::str#3
void *memset::str#4
void *memset::str#5
void *memset::str#6
__loadstore struct printf_buffer_number printf_buffer = {}
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
bool printf_number_buffer::$0
bool printf_number_buffer::$1
bool printf_number_buffer::$10
bool printf_number_buffer::$12
bool printf_number_buffer::$14
bool printf_number_buffer::$15
bool printf_number_buffer::$16
bool printf_number_buffer::$17
unsigned int printf_number_buffer::$19
bool printf_number_buffer::$2
bool printf_number_buffer::$20
signed char printf_number_buffer::$21
bool printf_number_buffer::$22
bool printf_number_buffer::$23
signed char printf_number_buffer::$25
bool printf_number_buffer::$26
bool printf_number_buffer::$27
bool printf_number_buffer::$28
bool printf_number_buffer::$29
bool printf_number_buffer::$3
bool printf_number_buffer::$30
bool printf_number_buffer::$31
bool printf_number_buffer::$32
bool printf_number_buffer::$4
bool printf_number_buffer::$5
bool printf_number_buffer::$7
bool printf_number_buffer::$9
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char *printf_number_buffer::buffer_digits#0
char *printf_number_buffer::buffer_digits#1
char *printf_number_buffer::buffer_digits#10
char *printf_number_buffer::buffer_digits#11
char *printf_number_buffer::buffer_digits#12
char *printf_number_buffer::buffer_digits#13
char *printf_number_buffer::buffer_digits#14
char *printf_number_buffer::buffer_digits#15
char *printf_number_buffer::buffer_digits#16
char *printf_number_buffer::buffer_digits#17
char *printf_number_buffer::buffer_digits#18
char *printf_number_buffer::buffer_digits#2
char *printf_number_buffer::buffer_digits#3
char *printf_number_buffer::buffer_digits#4
char *printf_number_buffer::buffer_digits#5
char *printf_number_buffer::buffer_digits#6
char *printf_number_buffer::buffer_digits#7
char *printf_number_buffer::buffer_digits#8
char *printf_number_buffer::buffer_digits#9
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0
char printf_number_buffer::buffer_sign#1
char printf_number_buffer::buffer_sign#10
char printf_number_buffer::buffer_sign#11
char printf_number_buffer::buffer_sign#2
char printf_number_buffer::buffer_sign#3
char printf_number_buffer::buffer_sign#4
char printf_number_buffer::buffer_sign#5
char printf_number_buffer::buffer_sign#6
char printf_number_buffer::buffer_sign#7
char printf_number_buffer::buffer_sign#8
char printf_number_buffer::buffer_sign#9
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_justify_left#0
char printf_number_buffer::format_justify_left#1
char printf_number_buffer::format_justify_left#10
char printf_number_buffer::format_justify_left#11
char printf_number_buffer::format_justify_left#12
char printf_number_buffer::format_justify_left#13
char printf_number_buffer::format_justify_left#14
char printf_number_buffer::format_justify_left#15
char printf_number_buffer::format_justify_left#16
char printf_number_buffer::format_justify_left#17
char printf_number_buffer::format_justify_left#18
char printf_number_buffer::format_justify_left#19
char printf_number_buffer::format_justify_left#2
char printf_number_buffer::format_justify_left#3
char printf_number_buffer::format_justify_left#4
char printf_number_buffer::format_justify_left#5
char printf_number_buffer::format_justify_left#6
char printf_number_buffer::format_justify_left#7
char printf_number_buffer::format_justify_left#8
char printf_number_buffer::format_justify_left#9
char printf_number_buffer::format_min_length
char printf_number_buffer::format_min_length#0
char printf_number_buffer::format_min_length#1
char printf_number_buffer::format_min_length#2
char printf_number_buffer::format_min_length#3
char printf_number_buffer::format_min_length#4
char printf_number_buffer::format_min_length#5
char printf_number_buffer::format_radix
char printf_number_buffer::format_radix#0
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_sign_always#0
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_upper_case#0
char printf_number_buffer::format_upper_case#1
char printf_number_buffer::format_upper_case#10
char printf_number_buffer::format_upper_case#11
char printf_number_buffer::format_upper_case#12
char printf_number_buffer::format_upper_case#13
char printf_number_buffer::format_upper_case#14
char printf_number_buffer::format_upper_case#15
char printf_number_buffer::format_upper_case#2
char printf_number_buffer::format_upper_case#3
char printf_number_buffer::format_upper_case#4
char printf_number_buffer::format_upper_case#5
char printf_number_buffer::format_upper_case#6
char printf_number_buffer::format_upper_case#7
char printf_number_buffer::format_upper_case#8
char printf_number_buffer::format_upper_case#9
char printf_number_buffer::format_zero_padding
char printf_number_buffer::format_zero_padding#0
char printf_number_buffer::format_zero_padding#1
char printf_number_buffer::format_zero_padding#10
char printf_number_buffer::format_zero_padding#11
char printf_number_buffer::format_zero_padding#12
char printf_number_buffer::format_zero_padding#13
char printf_number_buffer::format_zero_padding#14
char printf_number_buffer::format_zero_padding#15
char printf_number_buffer::format_zero_padding#16
char printf_number_buffer::format_zero_padding#17
char printf_number_buffer::format_zero_padding#18
char printf_number_buffer::format_zero_padding#19
char printf_number_buffer::format_zero_padding#2
char printf_number_buffer::format_zero_padding#3
char printf_number_buffer::format_zero_padding#4
char printf_number_buffer::format_zero_padding#5
char printf_number_buffer::format_zero_padding#6
char printf_number_buffer::format_zero_padding#7
char printf_number_buffer::format_zero_padding#8
char printf_number_buffer::format_zero_padding#9
signed char printf_number_buffer::len
signed char printf_number_buffer::len#0
signed char printf_number_buffer::len#1
signed char printf_number_buffer::len#2
signed char printf_number_buffer::len#3
signed char printf_number_buffer::padding
signed char printf_number_buffer::padding#0
signed char printf_number_buffer::padding#1
signed char printf_number_buffer::padding#10
signed char printf_number_buffer::padding#11
signed char printf_number_buffer::padding#12
signed char printf_number_buffer::padding#13
signed char printf_number_buffer::padding#14
signed char printf_number_buffer::padding#15
signed char printf_number_buffer::padding#16
signed char printf_number_buffer::padding#2
signed char printf_number_buffer::padding#3
signed char printf_number_buffer::padding#4
signed char printf_number_buffer::padding#5
signed char printf_number_buffer::padding#6
signed char printf_number_buffer::padding#7
signed char printf_number_buffer::padding#8
signed char printf_number_buffer::padding#9
void (*printf_number_buffer::putc)(char)
void (*printf_number_buffer::putc#0)(char)
void (*printf_number_buffer::putc#1)(char)
void (*printf_number_buffer::putc#10)(char)
void (*printf_number_buffer::putc#11)(char)
void (*printf_number_buffer::putc#12)(char)
void (*printf_number_buffer::putc#13)(char)
void (*printf_number_buffer::putc#14)(char)
void (*printf_number_buffer::putc#15)(char)
void (*printf_number_buffer::putc#16)(char)
void (*printf_number_buffer::putc#17)(char)
void (*printf_number_buffer::putc#18)(char)
void (*printf_number_buffer::putc#19)(char)
void (*printf_number_buffer::putc#2)(char)
void (*printf_number_buffer::putc#20)(char)
void (*printf_number_buffer::putc#3)(char)
void (*printf_number_buffer::putc#4)(char)
void (*printf_number_buffer::putc#5)(char)
void (*printf_number_buffer::putc#6)(char)
void (*printf_number_buffer::putc#7)(char)
void (*printf_number_buffer::putc#8)(char)
void (*printf_number_buffer::putc#9)(char)
void printf_padding(void (*putc)(char) , char pad , char length)
bool printf_padding::$0
char printf_padding::i
char printf_padding::i#0
char printf_padding::i#1
char printf_padding::i#2
char printf_padding::i#3
char printf_padding::i#4
char printf_padding::length
char printf_padding::length#0
char printf_padding::length#1
char printf_padding::length#2
char printf_padding::length#3
char printf_padding::length#4
char printf_padding::length#5
char printf_padding::length#6
char printf_padding::length#7
char printf_padding::length#8
char printf_padding::pad
char printf_padding::pad#0
char printf_padding::pad#1
char printf_padding::pad#2
char printf_padding::pad#3
char printf_padding::pad#4
char printf_padding::pad#5
char printf_padding::pad#6
char printf_padding::pad#7
char printf_padding::pad#8
void (*printf_padding::putc)(char)
void (*printf_padding::putc#0)(char)
void (*printf_padding::putc#1)(char)
void (*printf_padding::putc#2)(char)
void (*printf_padding::putc#3)(char)
void (*printf_padding::putc#4)(char)
void (*printf_padding::putc#5)(char)
void (*printf_padding::putc#6)(char)
void (*printf_padding::putc#7)(char)
void (*printf_padding::putc#8)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::$0
bool printf_str::$2
char printf_str::c
char printf_str::c#0
char printf_str::c#1
char printf_str::c#2
void (*printf_str::putc)(char)
void (*printf_str::putc#0)(char)
void (*printf_str::putc#1)(char)
void (*printf_str::putc#2)(char)
void (*printf_str::putc#3)(char)
void (*printf_str::putc#4)(char)
void (*printf_str::putc#5)(char)
void (*printf_str::putc#6)(char)
void (*printf_str::putc#7)(char)
const char *printf_str::s
const char *printf_str::s#0
const char *printf_str::s#1
const char *printf_str::s#2
const char *printf_str::s#3
const char *printf_str::s#4
const char *printf_str::s#5
const char *printf_str::s#6
const char *printf_str::s#7
const char *printf_str::s#8
void printf_string(void (*putc)(char) , char *str , char format_min_length , char format_justify_left)
bool printf_string::$0
bool printf_string::$1
signed char printf_string::$10
bool printf_string::$11
bool printf_string::$12
signed char printf_string::$13
bool printf_string::$14
bool printf_string::$15
bool printf_string::$2
bool printf_string::$3
bool printf_string::$6
bool printf_string::$7
unsigned int printf_string::$9
struct printf_format_string printf_string::format
char printf_string::format_justify_left
char printf_string::format_justify_left#0
char printf_string::format_justify_left#1
char printf_string::format_justify_left#10
char printf_string::format_justify_left#2
char printf_string::format_justify_left#3
char printf_string::format_justify_left#4
char printf_string::format_justify_left#5
char printf_string::format_justify_left#6
char printf_string::format_justify_left#7
char printf_string::format_justify_left#8
char printf_string::format_justify_left#9
char printf_string::format_min_length
char printf_string::format_min_length#0
char printf_string::format_min_length#1
char printf_string::format_min_length#2
char printf_string::format_min_length#3
char printf_string::format_min_length#4
signed char printf_string::len
signed char printf_string::len#0
signed char printf_string::padding
signed char printf_string::padding#0
signed char printf_string::padding#1
signed char printf_string::padding#2
signed char printf_string::padding#3
signed char printf_string::padding#4
signed char printf_string::padding#5
signed char printf_string::padding#6
signed char printf_string::padding#7
signed char printf_string::padding#8
void (*printf_string::putc)(char)
void (*printf_string::putc#0)(char)
void (*printf_string::putc#1)(char)
void (*printf_string::putc#10)(char)
void (*printf_string::putc#11)(char)
void (*printf_string::putc#2)(char)
void (*printf_string::putc#3)(char)
void (*printf_string::putc#4)(char)
void (*printf_string::putc#5)(char)
void (*printf_string::putc#6)(char)
void (*printf_string::putc#7)(char)
void (*printf_string::putc#8)(char)
void (*printf_string::putc#9)(char)
char *printf_string::str
char *printf_string::str#0
char *printf_string::str#1
char *printf_string::str#2
char *printf_string::str#3
char *printf_string::str#4
char *printf_string::str#5
char *printf_string::str#6
char *printf_string::str#7
char *printf_string::str#8
char *printf_string::str#9
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
number printf_uint::$0
char printf_uint::$1
number printf_uint::$2
bool printf_uint::$5
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_justify_left#0
char printf_uint::format_justify_left#1
char printf_uint::format_justify_left#2
char printf_uint::format_justify_left#3
char printf_uint::format_justify_left#4
char printf_uint::format_justify_left#5
char printf_uint::format_min_length
char printf_uint::format_min_length#0
char printf_uint::format_min_length#1
char printf_uint::format_min_length#2
char printf_uint::format_min_length#3
char printf_uint::format_min_length#4
char printf_uint::format_min_length#5
char printf_uint::format_radix
char printf_uint::format_radix#0
char printf_uint::format_radix#1
char printf_uint::format_radix#2
char printf_uint::format_radix#3
char printf_uint::format_radix#4
char printf_uint::format_radix#5
char printf_uint::format_sign_always
char printf_uint::format_sign_always#0
char printf_uint::format_sign_always#1
char printf_uint::format_sign_always#2
char printf_uint::format_sign_always#3
char printf_uint::format_sign_always#4
char printf_uint::format_sign_always#5
char printf_uint::format_upper_case
char printf_uint::format_upper_case#0
char printf_uint::format_upper_case#1
char printf_uint::format_upper_case#2
char printf_uint::format_upper_case#3
char printf_uint::format_upper_case#4
char printf_uint::format_upper_case#5
char printf_uint::format_zero_padding
char printf_uint::format_zero_padding#0
char printf_uint::format_zero_padding#1
char printf_uint::format_zero_padding#2
char printf_uint::format_zero_padding#3
char printf_uint::format_zero_padding#4
char printf_uint::format_zero_padding#5
void (*printf_uint::putc)(char)
void (*printf_uint::putc#0)(char)
void (*printf_uint::putc#1)(char)
void (*printf_uint::putc#2)(char)
void (*printf_uint::putc#3)(char)
void (*printf_uint::putc#4)(char)
void (*printf_uint::putc#5)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0
unsigned int printf_uint::uvalue#1
unsigned int printf_uint::uvalue#2
unsigned int printf_uint::uvalue#3
unsigned int printf_uint::uvalue#4
unsigned int strlen(char *str)
bool strlen::$0
unsigned int strlen::len
unsigned int strlen::len#0
unsigned int strlen::len#1
unsigned int strlen::len#2
unsigned int strlen::len#3
unsigned int strlen::len#4
unsigned int strlen::return
unsigned int strlen::return#0
unsigned int strlen::return#1
unsigned int strlen::return#2
unsigned int strlen::return#3
unsigned int strlen::return#4
unsigned int strlen::return#5
unsigned int strlen::return#6
char *strlen::str
char *strlen::str#0
char *strlen::str#1
char *strlen::str#2
char *strlen::str#3
char *strlen::str#4
char *strlen::str#5
char * strupr(char *str)
char strupr::$0
bool strupr::$1
char *strupr::return
char *strupr::return#0
char *strupr::return#1
char *strupr::return#2
char *strupr::return#3
char *strupr::src
char *strupr::src#0
char *strupr::src#1
char *strupr::src#2
char *strupr::src#3
char *strupr::src#4
char *strupr::str
char *strupr::str#0
char *strupr::str#1
char *strupr::str#2
char *strupr::str#3
char *strupr::str#4
char *strupr::str#5
char toupper(char ch)
bool toupper::$0
bool toupper::$1
bool toupper::$2
char toupper::$3
char toupper::ch
char toupper::ch#0
char toupper::ch#1
char toupper::ch#2
char toupper::ch#3
char toupper::return
char toupper::return#0
char toupper::return#1
char toupper::return#2
char toupper::return#3
char toupper::return#4
char toupper::return#5
void utoa(unsigned int value , char *buffer , char radix)
bool utoa::$0
bool utoa::$1
char utoa::$10
char utoa::$11
bool utoa::$2
bool utoa::$3
number utoa::$4
bool utoa::$5
bool utoa::$6
bool utoa::$7
bool utoa::$8
unsigned int utoa::$9
char *utoa::buffer
char *utoa::buffer#0
char *utoa::buffer#1
char *utoa::buffer#10
char *utoa::buffer#11
char *utoa::buffer#12
char *utoa::buffer#13
char *utoa::buffer#14
char *utoa::buffer#15
char *utoa::buffer#16
char *utoa::buffer#17
char *utoa::buffer#18
char *utoa::buffer#19
char *utoa::buffer#2
char *utoa::buffer#20
char *utoa::buffer#21
char *utoa::buffer#3
char *utoa::buffer#4
char *utoa::buffer#5
char *utoa::buffer#6
char *utoa::buffer#7
char *utoa::buffer#8
char *utoa::buffer#9
char utoa::digit
char utoa::digit#0
char utoa::digit#1
char utoa::digit#2
char utoa::digit#3
char utoa::digit#4
char utoa::digit#5
char utoa::digit#6
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0
unsigned int utoa::digit_value#1
unsigned int *utoa::digit_values
unsigned int *utoa::digit_values#0
unsigned int *utoa::digit_values#1
unsigned int *utoa::digit_values#10
unsigned int *utoa::digit_values#2
unsigned int *utoa::digit_values#3
unsigned int *utoa::digit_values#4
unsigned int *utoa::digit_values#5
unsigned int *utoa::digit_values#6
unsigned int *utoa::digit_values#7
unsigned int *utoa::digit_values#8
unsigned int *utoa::digit_values#9
char utoa::max_digits
char utoa::max_digits#0
char utoa::max_digits#1
char utoa::max_digits#10
char utoa::max_digits#2
char utoa::max_digits#3
char utoa::max_digits#4
char utoa::max_digits#5
char utoa::max_digits#6
char utoa::max_digits#7
char utoa::max_digits#8
char utoa::max_digits#9
char utoa::radix
char utoa::radix#0
char utoa::radix#1
char utoa::radix#2
char utoa::radix#3
char utoa::radix#4
char utoa::started
char utoa::started#0
char utoa::started#1
char utoa::started#2
char utoa::started#3
char utoa::started#4
unsigned int utoa::value
unsigned int utoa::value#0
unsigned int utoa::value#1
unsigned int utoa::value#10
unsigned int utoa::value#11
unsigned int utoa::value#12
unsigned int utoa::value#13
unsigned int utoa::value#14
unsigned int utoa::value#15
unsigned int utoa::value#2
unsigned int utoa::value#3
unsigned int utoa::value#4
unsigned int utoa::value#5
unsigned int utoa::value#6
unsigned int utoa::value#7
unsigned int utoa::value#8
unsigned int utoa::value#9
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
bool utoa_append::$0
char *utoa_append::buffer
char *utoa_append::buffer#0
char *utoa_append::buffer#1
char *utoa_append::buffer#2
char *utoa_append::buffer#3
char *utoa_append::buffer#4
char utoa_append::digit
char utoa_append::digit#0
char utoa_append::digit#1
char utoa_append::digit#2
char utoa_append::digit#3
char utoa_append::digit#4
unsigned int utoa_append::return
unsigned int utoa_append::return#0
unsigned int utoa_append::return#1
unsigned int utoa_append::return#2
unsigned int utoa_append::return#3
unsigned int utoa_append::return#4
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0
unsigned int utoa_append::sub#1
unsigned int utoa_append::sub#2
unsigned int utoa_append::sub#3
unsigned int utoa_append::value
unsigned int utoa_append::value#0
unsigned int utoa_append::value#1
unsigned int utoa_append::value#2
unsigned int utoa_append::value#3
unsigned int utoa_append::value#4
unsigned int utoa_append::value#5

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#2 > 0
Adding number conversion cast (unumber) 0 in strlen::$0 = 0 != *strlen::str#3
Adding number conversion cast (unumber) 0 in strupr::$1 = 0 != *strupr::src#2
Adding number conversion cast (unumber) 5 in utoa::max_digits#1 = 5
Adding number conversion cast (unumber) 4 in utoa::max_digits#2 = 4
Adding number conversion cast (unumber) 6 in utoa::max_digits#3 = 6
Adding number conversion cast (unumber) $10 in utoa::max_digits#4 = $10
Adding number conversion cast (unumber) 0 in *utoa::buffer#2 = 0
Adding number conversion cast (unumber) 1 in utoa::$4 = utoa::max_digits#5 - 1
Adding number conversion cast (unumber) utoa::$4 in utoa::$4 = utoa::max_digits#5 - (unumber)1
Adding number conversion cast (unumber) 0 in *utoa::buffer#3 = 0
Adding number conversion cast (unumber) 1 in utoa::started#1 = 1
Adding number conversion cast (unumber) $19 in gotoxy::$0 = gotoxy::y#3 > $19
Adding number conversion cast (unumber) $28 in gotoxy::$2 = gotoxy::x#3 >= $28
Adding number conversion cast (unumber) 0 in gotoxy::y#0 = 0
Adding number conversion cast (unumber) $28 in gotoxy::line_offset#0 = gotoxy::$7 * $28
Adding number conversion cast (unumber) 0 in gotoxy::x#0 = 0
Adding number conversion cast (unumber) $28 in cputc::$1 = conio_cursor_x == $28
Adding number conversion cast (unumber) $28 in conio_line_text = conio_line_text + $28
Adding number conversion cast (unumber) $28 in conio_line_color = conio_line_color + $28
Adding number conversion cast (unumber) 0 in conio_cursor_x = 0
Adding number conversion cast (unumber) $19 in cscroll::$0 = conio_cursor_y == $19
Adding number conversion cast (unumber) 0 in cscroll::$7 = 0 != conio_scroll_enable
Adding number conversion cast (unumber) $28 in memcpy::source#0 = (void *)DEFAULT_SCREEN+$28
Adding number conversion cast (unumber) $19*$28-$28 in memcpy::num#0 = $19*$28-$28
Adding number conversion cast (unumber) $28 in memcpy::source#1 = (void *)COLORRAM+$28
Adding number conversion cast (unumber) $19*$28-$28 in memcpy::num#1 = $19*$28-$28
Adding number conversion cast (unumber) $28 in memset::str#0 = (void *)DEFAULT_SCREEN+$19*$28-$28
Adding number conversion cast (unumber) $19*$28 in memset::str#0 = (void *)DEFAULT_SCREEN+$19*$28-(unumber)$28
Adding number conversion cast (unumber) $28 in memset::num#0 = $28
Adding number conversion cast (unumber) $28 in memset::str#1 = (void *)COLORRAM+$19*$28-$28
Adding number conversion cast (unumber) $19*$28 in memset::str#1 = (void *)COLORRAM+$19*$28-(unumber)$28
Adding number conversion cast (unumber) $28 in memset::num#1 = $28
Adding number conversion cast (unumber) $28 in conio_line_text = conio_line_text - $28
Adding number conversion cast (unumber) $28 in conio_line_color = conio_line_color - $28
Adding number conversion cast (unumber) 0 in gotoxy::x#1 = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#1 = 0
Adding number conversion cast (unumber) $19 in conio_c64_init::$0 = conio_c64_init::line#0 >= $19
Adding number conversion cast (unumber) 0 in gotoxy::x#2 = 0
Adding number conversion cast (unumber) $19-1 in conio_c64_init::line#1 = $19-1
Adding number conversion cast (unumber) 0 in printf_str::$2 = 0 != printf_str::$0
Adding number conversion cast (unumber) 0 in printf_uint::$5 = 0 != printf_uint::format_sign_always#1
Adding number conversion cast (unumber) printf_uint::$2 in printf_uint::format_upper_case#2 = phi( printf_uint::@1/printf_uint::format_upper_case#3, printf_uint::@2/printf_uint::format_upper_case#4 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@1/printf_uint::format_zero_padding#3, printf_uint::@2/printf_uint::format_zero_padding#4 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@1/printf_uint::format_sign_always#4, printf_uint::@2/printf_uint::format_sign_always#5 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@1/printf_uint::format_justify_left#3, printf_uint::@2/printf_uint::format_justify_left#4 )
  printf_uint::format_min_length#2 = phi( printf_uint::@1/printf_uint::format_min_length#3, printf_uint::@2/printf_uint::format_min_length#4 )
  printf_uint::putc#2 = phi( printf_uint::@1/printf_uint::putc#3, printf_uint::@2/printf_uint::putc#4 )
  printf_uint::format_radix#1 = phi( printf_uint::@1/printf_uint::format_radix#3, printf_uint::@2/printf_uint::format_radix#4 )
  printf_uint::uvalue#1 = phi( printf_uint::@1/printf_uint::uvalue#2, printf_uint::@2/printf_uint::uvalue#3 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) printf_uint::$0 in printf_uint::format_upper_case#2 = phi( printf_uint::@1/printf_uint::format_upper_case#3, printf_uint::@2/printf_uint::format_upper_case#4 )
  printf_uint::format_zero_padding#2 = phi( printf_uint::@1/printf_uint::format_zero_padding#3, printf_uint::@2/printf_uint::format_zero_padding#4 )
  printf_uint::format_sign_always#3 = phi( printf_uint::@1/printf_uint::format_sign_always#4, printf_uint::@2/printf_uint::format_sign_always#5 )
  printf_uint::format_justify_left#2 = phi( printf_uint::@1/printf_uint::format_justify_left#3, printf_uint::@2/printf_uint::format_justify_left#4 )
  printf_uint::format_min_length#2 = phi( printf_uint::@1/printf_uint::format_min_length#3, printf_uint::@2/printf_uint::format_min_length#4 )
  printf_uint::putc#2 = phi( printf_uint::@1/printf_uint::putc#3, printf_uint::@2/printf_uint::putc#4 )
  printf_uint::format_radix#1 = phi( printf_uint::@1/printf_uint::format_radix#3, printf_uint::@2/printf_uint::format_radix#4 )
  printf_uint::uvalue#1 = phi( printf_uint::@1/printf_uint::uvalue#2, printf_uint::@2/printf_uint::uvalue#3 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) 0 in printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
Adding number conversion cast (snumber) 0 in printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Adding number conversion cast (snumber) 0 in printf_number_buffer::padding#2 = 0
Adding number conversion cast (unumber) 0 in printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
Adding number conversion cast (unumber) 0 in printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
Adding number conversion cast (unumber) 0 in printf_string::$14 = 0 != printf_string::format_min_length#2
Adding number conversion cast (unumber) 0 in printf_string::$15 = 0 != printf_string::format_justify_left#2
Adding number conversion cast (snumber) 0 in printf_string::$11 = printf_string::padding#1 < 0
Adding number conversion cast (snumber) 0 in printf_string::padding#2 = 0
Adding number conversion cast (unumber) $17 in *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17
Successful SSA optimization PassNAddNumberTypeConversions
Adding number conversion cast (unumber) 0 in printf_uint::$0 = 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memcpy::src#0 = (char *)memcpy::source#2
Inlining cast memcpy::dst#0 = (char *)memcpy::destination#2
Inlining cast memset::dst#0 = (char *)memset::str#3
Inlining cast utoa::max_digits#1 = (unumber)5
Inlining cast utoa::max_digits#2 = (unumber)4
Inlining cast utoa::max_digits#3 = (unumber)6
Inlining cast utoa::max_digits#4 = (unumber)$10
Inlining cast *utoa::buffer#2 = (unumber)0
Inlining cast *utoa::buffer#3 = (unumber)0
Inlining cast utoa::started#1 = (unumber)1
Inlining cast gotoxy::y#0 = (unumber)0
Inlining cast gotoxy::x#0 = (unumber)0
Inlining cast conio_cursor_x = (unumber)0
Inlining cast memcpy::num#0 = (unumber)$19*$28-$28
Inlining cast memcpy::num#1 = (unumber)$19*$28-$28
Inlining cast memset::num#0 = (unumber)$28
Inlining cast memset::num#1 = (unumber)$28
Inlining cast gotoxy::x#1 = (unumber)0
Inlining cast gotoxy::y#1 = (unumber)0
Inlining cast gotoxy::x#2 = (unumber)0
Inlining cast conio_c64_init::line#1 = (unumber)$19-1
Inlining cast printf_uint::$0 = (unumber)0
Inlining cast printf_number_buffer::padding#2 = (snumber)0
Inlining cast printf_string::padding#2 = (snumber)0
Inlining cast *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = (unumber)$17
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (struct MOS6569_VICII *) 53248
Simplifying constant pointer cast (char *) 55296
Simplifying constant pointer cast (char *) 1024
Simplifying constant pointer cast (char *) 214
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast $10
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast $19
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $17
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 5
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 6
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized unsigned number type (char) $17
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to char in utoa::$4 = utoa::max_digits#5 - 1
Inferred type updated to char in printf_uint::$0 = 0
Inferred type updated to char for printf_uint::$2
Inversing boolean not [19] memset::$1 = memset::num#2 <= 0 from [18] memset::$0 = memset::num#2 > 0
Inversing boolean not [163] gotoxy::$1 = gotoxy::y#3 <= $19 from [162] gotoxy::$0 = gotoxy::y#3 > $19
Inversing boolean not [167] gotoxy::$3 = gotoxy::x#3 < $28 from [166] gotoxy::$2 = gotoxy::x#3 >= $28
Inversing boolean not [192] cputc::$2 = conio_cursor_x != $28 from [191] cputc::$1 = conio_cursor_x == $28
Inversing boolean not [203] cscroll::$1 = conio_cursor_y != $19 from [202] cscroll::$0 = conio_cursor_y == $19
Inversing boolean not [236] conio_c64_init::$1 = conio_c64_init::line#0 < $19 from [235] conio_c64_init::$0 = conio_c64_init::line#0 >= $19
Inversing boolean not [297] printf_number_buffer::$0 = 0 == printf_number_buffer::format_min_length#1 from [296] printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
Inversing boolean not [301] printf_number_buffer::$1 = 0 == printf_number_buffer::format_justify_left#1 from [300] printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
Inversing boolean not [303] printf_number_buffer::$2 = 0 == printf_number_buffer::format_zero_padding#1 from [302] printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
Inversing boolean not [316] printf_number_buffer::$20 = 0 == printf_number_buffer::buffer_sign#1 from [315] printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
Inversing boolean not [323] printf_number_buffer::$23 = printf_number_buffer::padding#1 >= 0 from [322] printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Inversing boolean not [331] printf_number_buffer::$7 = 0 == printf_number_buffer::buffer_sign#2 from [330] printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
Inversing boolean not [349] printf_number_buffer::$12 = 0 == printf_number_buffer::format_upper_case#1 from [348] printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
Inversing boolean not [363] printf_number_buffer::$14 = 0 == printf_number_buffer::format_zero_padding#3 from [362] printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
Inversing boolean not [382] printf_string::$0 = 0 == printf_string::format_min_length#2 from [381] printf_string::$14 = 0 != printf_string::format_min_length#2
Inversing boolean not [386] printf_string::$1 = 0 == printf_string::format_justify_left#2 from [385] printf_string::$15 = 0 != printf_string::format_justify_left#2
Inversing boolean not [401] printf_string::$12 = printf_string::padding#1 >= 0 from [400] printf_string::$11 = printf_string::padding#1 < 0
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias memcpy::src#2 = memcpy::src#3 
Alias memcpy::dst#2 = memcpy::dst#3 
Alias memcpy::src_end#1 = memcpy::src_end#2 
Alias memcpy::destination#3 = memcpy::destination#5 memcpy::destination#4 memcpy::return#0 memcpy::return#4 memcpy::return#1 
Alias memset::return#0 = memset::str#2 memset::return#4 memset::return#1 
Alias memset::str#3 = memset::str#4 
Alias memset::num#2 = memset::num#3 
Alias memset::c#4 = memset::c#5 
Alias memset::c#2 = memset::c#3 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#5 = memset::str#6 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#0 strlen::return#4 strlen::return#1 
Alias strlen::str#3 = strlen::str#4 
Alias toupper::ch#1 = toupper::ch#2 toupper::ch#3 toupper::return#1 
Alias toupper::return#0 = toupper::$3 
Alias toupper::return#2 = toupper::return#4 
Alias strupr::src#0 = strupr::str#1 
Alias strupr::src#2 = strupr::src#3 strupr::src#4 
Alias strupr::str#2 = strupr::str#5 strupr::str#3 strupr::str#4 strupr::return#0 strupr::return#3 strupr::return#1 
Alias toupper::return#3 = toupper::return#5 
Alias utoa::value#10 = utoa::value#8 utoa::value#12 utoa::value#13 utoa::value#9 utoa::value#14 utoa::value#15 utoa::value#11 
Alias utoa::buffer#10 = utoa::buffer#17 utoa::buffer#21 utoa::buffer#16 utoa::buffer#18 utoa::buffer#13 utoa::buffer#19 utoa::buffer#20 utoa::buffer#6 
Alias utoa::radix#1 = utoa::radix#2 utoa::radix#3 utoa::radix#4 
Alias utoa::digit#2 = utoa::digit#3 utoa::digit#6 utoa::digit#5 
Alias utoa::digit_values#10 = utoa::digit_values#5 utoa::digit_values#6 utoa::digit_values#9 
Alias utoa::value#2 = utoa::value#5 utoa::value#3 utoa::value#4 
Alias utoa::started#2 = utoa::started#3 
Alias utoa::buffer#11 = utoa::buffer#12 utoa::buffer#7 utoa::buffer#8 utoa::buffer#9 
Alias utoa::max_digits#10 = utoa::max_digits#8 utoa::max_digits#5 utoa::max_digits#9 
Alias utoa::digit_value#0 = utoa::digit_value#1 
Alias utoa_append::return#0 = utoa_append::return#3 
Alias utoa::value#0 = utoa::$9 
Alias utoa_append::digit#2 = utoa_append::digit#4 utoa_append::digit#3 
Alias utoa_append::value#2 = utoa_append::value#3 utoa_append::value#4 utoa_append::return#1 utoa_append::return#4 utoa_append::return#2 
Alias utoa_append::sub#1 = utoa_append::sub#2 
Alias utoa_append::buffer#1 = utoa_append::buffer#4 utoa_append::buffer#2 
Alias gotoxy::x#5 = gotoxy::x#6 
Alias gotoxy::y#5 = gotoxy::y#6 
Alias cputc::c#0 = cputc::c#1 
Alias printf_str::c#1 = printf_str::$0 printf_str::c#2 
Alias printf_str::putc#5 = printf_str::putc#6 
Alias printf_str::s#0 = printf_str::s#8 
Alias printf_padding::pad#5 = printf_padding::pad#6 printf_padding::pad#8 
Alias printf_padding::putc#5 = printf_padding::putc#6 printf_padding::putc#8 
Alias printf_padding::i#2 = printf_padding::i#4 printf_padding::i#3 
Alias printf_padding::length#5 = printf_padding::length#8 printf_padding::length#7 
Alias printf_uint::uvalue#2 = printf_uint::uvalue#4 printf_uint::uvalue#3 
Alias printf_uint::format_radix#3 = printf_uint::format_radix#5 printf_uint::format_radix#4 
Alias printf_uint::putc#3 = printf_uint::putc#5 printf_uint::putc#4 
Alias printf_uint::format_min_length#3 = printf_uint::format_min_length#5 printf_uint::format_min_length#4 
Alias printf_uint::format_justify_left#3 = printf_uint::format_justify_left#5 printf_uint::format_justify_left#4 
Alias printf_uint::format_sign_always#1 = printf_uint::format_sign_always#4 printf_uint::format_sign_always#5 
Alias printf_uint::format_zero_padding#3 = printf_uint::format_zero_padding#5 printf_uint::format_zero_padding#4 
Alias printf_uint::format_upper_case#3 = printf_uint::format_upper_case#5 printf_uint::format_upper_case#4 
Alias printf_uint::putc#1 = printf_uint::putc#2 
Alias printf_uint::format_min_length#1 = printf_uint::format_min_length#2 
Alias printf_uint::format_justify_left#1 = printf_uint::format_justify_left#2 
Alias printf_uint::format_sign_always#2 = printf_uint::format_sign_always#3 
Alias printf_uint::format_zero_padding#1 = printf_uint::format_zero_padding#2 
Alias printf_uint::format_upper_case#1 = printf_uint::format_upper_case#2 
Alias printf_uint::format_radix#1 = printf_uint::format_radix#2 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#4 printf_number_buffer::buffer_digits#17 printf_number_buffer::buffer_digits#18 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#4 printf_number_buffer::buffer_sign#7 printf_number_buffer::buffer_sign#11 
Alias printf_number_buffer::format_min_length#1 = printf_number_buffer::format_min_length#5 printf_number_buffer::format_min_length#3 printf_number_buffer::format_min_length#4 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#3 printf_number_buffer::format_justify_left#7 printf_number_buffer::format_justify_left#8 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#15 printf_number_buffer::format_zero_padding#4 printf_number_buffer::format_zero_padding#11 
Alias printf_number_buffer::putc#12 = printf_number_buffer::putc#20 printf_number_buffer::putc#18 printf_number_buffer::putc#19 
Alias printf_number_buffer::format_upper_case#13 = printf_number_buffer::format_upper_case#15 printf_number_buffer::format_upper_case#9 printf_number_buffer::format_upper_case#14 
Alias strlen::return#2 = strlen::return#5 
Alias printf_number_buffer::padding#1 = printf_number_buffer::$21 
Alias printf_number_buffer::len#0 = printf_number_buffer::len#3 
Alias printf_number_buffer::format_justify_left#4 = printf_number_buffer::format_justify_left#5 
Alias printf_number_buffer::format_zero_padding#5 = printf_number_buffer::format_zero_padding#6 
Alias printf_number_buffer::buffer_sign#8 = printf_number_buffer::buffer_sign#9 
Alias printf_number_buffer::putc#13 = printf_number_buffer::putc#14 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#11 
Alias printf_number_buffer::buffer_digits#14 = printf_number_buffer::buffer_digits#15 
Alias printf_number_buffer::putc#1 = printf_number_buffer::putc#6 printf_number_buffer::putc#15 
Alias printf_number_buffer::padding#12 = printf_number_buffer::padding#4 printf_number_buffer::padding#3 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#5 printf_number_buffer::buffer_sign#6 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#16 printf_number_buffer::format_zero_padding#12 
Alias printf_number_buffer::format_upper_case#12 = printf_number_buffer::format_upper_case#7 printf_number_buffer::format_upper_case#8 
Alias printf_number_buffer::buffer_digits#12 = printf_number_buffer::buffer_digits#16 printf_number_buffer::buffer_digits#13 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#19 printf_number_buffer::format_justify_left#18 
Alias printf_number_buffer::buffer_sign#2 = printf_number_buffer::buffer_sign#3 
Alias printf_number_buffer::putc#2 = printf_number_buffer::putc#7 
Alias printf_number_buffer::format_zero_padding#7 = printf_number_buffer::format_zero_padding#8 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#9 
Alias printf_number_buffer::format_upper_case#4 = printf_number_buffer::format_upper_case#5 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#9 
Alias printf_number_buffer::format_justify_left#15 = printf_number_buffer::format_justify_left#16 
Alias printf_number_buffer::putc#16 = printf_number_buffer::putc#3 printf_number_buffer::putc#8 
Alias printf_number_buffer::padding#15 = printf_number_buffer::padding#6 printf_number_buffer::padding#5 
Alias printf_number_buffer::format_upper_case#2 = printf_number_buffer::format_upper_case#6 printf_number_buffer::format_upper_case#3 
Alias printf_number_buffer::buffer_digits#11 = printf_number_buffer::buffer_digits#8 printf_number_buffer::buffer_digits#7 
Alias printf_number_buffer::format_zero_padding#17 = printf_number_buffer::format_zero_padding#19 printf_number_buffer::format_zero_padding#2 
Alias printf_number_buffer::format_justify_left#12 = printf_number_buffer::format_justify_left#17 printf_number_buffer::format_justify_left#13 
Alias printf_number_buffer::format_zero_padding#3 = printf_number_buffer::format_zero_padding#9 
Alias printf_number_buffer::format_justify_left#2 = printf_number_buffer::format_justify_left#6 
Alias printf_number_buffer::padding#11 = printf_number_buffer::padding#7 printf_number_buffer::padding#8 
Alias printf_number_buffer::putc#11 = printf_number_buffer::putc#4 printf_number_buffer::putc#5 
Alias printf_number_buffer::buffer_digits#3 = printf_number_buffer::buffer_digits#6 printf_number_buffer::buffer_digits#5 
Alias printf_number_buffer::putc#10 = printf_number_buffer::putc#17 printf_number_buffer::putc#9 
Alias printf_number_buffer::format_zero_padding#13 = printf_number_buffer::format_zero_padding#18 printf_number_buffer::format_zero_padding#14 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#14 printf_number_buffer::format_justify_left#9 
Alias printf_number_buffer::padding#13 = printf_number_buffer::padding#16 printf_number_buffer::padding#14 
Alias printf_string::str#2 = printf_string::str#4 printf_string::str#8 printf_string::str#7 
Alias printf_string::format_min_length#2 = printf_string::format_min_length#4 printf_string::format_min_length#3 
Alias printf_string::format_justify_left#4 = printf_string::format_justify_left#8 printf_string::format_justify_left#6 printf_string::format_justify_left#5 
Alias printf_string::putc#10 = printf_string::putc#11 printf_string::putc#8 printf_string::putc#9 
Alias strlen::return#3 = strlen::return#6 
Alias printf_string::padding#1 = printf_string::$10 
Alias printf_string::format_justify_left#3 = printf_string::format_justify_left#7 
Alias printf_string::padding#4 = printf_string::padding#7 printf_string::padding#6 
Alias printf_string::putc#2 = printf_string::putc#7 printf_string::putc#4 
Alias printf_string::putc#3 = printf_string::putc#5 printf_string::putc#6 
Alias printf_string::padding#3 = printf_string::padding#5 printf_string::padding#8 
Alias printf_string::str#5 = printf_string::str#9 printf_string::str#6 
Alias printf_string::format_justify_left#10 = printf_string::format_justify_left#2 printf_string::format_justify_left#9 
Alias main::bbs#2 = main::bbs#3 main::bbs#7 main::bbs#4 main::bbs#8 main::bbs#5 main::bbs#9 main::bbs#6 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias utoa::value#10 = utoa::value#7 
Alias utoa::buffer#10 = utoa::buffer#15 
Alias utoa::digit#2 = utoa::digit#4 
Alias utoa::max_digits#10 = utoa::max_digits#6 
Alias utoa::digit_values#10 = utoa::digit_values#7 
Alias gotoxy::x#3 = gotoxy::x#5 
Alias gotoxy::y#4 = gotoxy::y#5 
Alias printf_uint::uvalue#1 = printf_uint::uvalue#2 
Alias printf_uint::format_radix#1 = printf_uint::format_radix#3 
Alias printf_uint::putc#1 = printf_uint::putc#3 
Alias printf_uint::format_min_length#1 = printf_uint::format_min_length#3 
Alias printf_uint::format_justify_left#1 = printf_uint::format_justify_left#3 
Alias printf_uint::format_sign_always#1 = printf_uint::format_sign_always#2 
Alias printf_uint::format_zero_padding#1 = printf_uint::format_zero_padding#3 
Alias printf_uint::format_upper_case#1 = printf_uint::format_upper_case#3 
Alias printf_number_buffer::format_min_length#1 = printf_number_buffer::format_min_length#2 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#4 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#5 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#8 
Alias printf_number_buffer::putc#12 = printf_number_buffer::putc#13 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#13 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#14 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#7 printf_number_buffer::format_zero_padding#17 printf_number_buffer::format_zero_padding#13 printf_number_buffer::format_zero_padding#3 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#12 printf_number_buffer::padding#15 printf_number_buffer::padding#13 printf_number_buffer::padding#11 
Alias printf_number_buffer::putc#1 = printf_number_buffer::putc#2 printf_number_buffer::putc#16 printf_number_buffer::putc#10 printf_number_buffer::putc#11 
Alias printf_number_buffer::format_upper_case#1 = printf_number_buffer::format_upper_case#4 printf_number_buffer::format_upper_case#12 printf_number_buffer::format_upper_case#2 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#12 printf_number_buffer::buffer_digits#11 printf_number_buffer::buffer_digits#3 printf_number_buffer::buffer_digits#2 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#15 printf_number_buffer::format_justify_left#12 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_justify_left#2 
Alias printf_string::format_justify_left#10 = printf_string::format_justify_left#4 printf_string::format_justify_left#3 
Alias printf_string::putc#10 = printf_string::putc#3 printf_string::putc#2 
Alias printf_string::str#2 = printf_string::str#5 printf_string::str#3 
Alias printf_string::padding#3 = printf_string::padding#4 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#11 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 
Alias printf_number_buffer::putc#1 = printf_number_buffer::putc#12 
Alias printf_number_buffer::format_upper_case#1 = printf_number_buffer::format_upper_case#10 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#10 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values memcpy::src_end#1 memcpy::src_end#0
Identical Phi Values memcpy::destination#3 memcpy::destination#2
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#5 memset::str#3
Identical Phi Values memset::c#2 memset::c#4
Identical Phi Values toupper::ch#1 toupper::ch#0
Identical Phi Values strupr::src#0 strupr::str#0
Identical Phi Values strupr::str#2 strupr::src#0
Identical Phi Values utoa::radix#1 utoa::radix#0
Identical Phi Values utoa::value#10 utoa::value#1
Identical Phi Values utoa::buffer#10 utoa::buffer#5
Identical Phi Values utoa::max_digits#10 utoa::max_digits#7
Identical Phi Values utoa::digit_values#10 utoa::digit_values#8
Identical Phi Values utoa_append::value#5 utoa_append::value#0
Identical Phi Values utoa_append::sub#3 utoa_append::sub#0
Identical Phi Values utoa_append::buffer#3 utoa_append::buffer#0
Identical Phi Values utoa_append::sub#1 utoa_append::sub#3
Identical Phi Values utoa_append::buffer#1 utoa_append::buffer#3
Identical Phi Values printf_str::putc#5 printf_str::putc#7
Identical Phi Values printf_padding::length#5 printf_padding::length#6
Identical Phi Values printf_padding::pad#5 printf_padding::pad#7
Identical Phi Values printf_padding::putc#5 printf_padding::putc#7
Identical Phi Values printf_uint::format_sign_always#1 printf_uint::format_sign_always#0
Identical Phi Values printf_uint::uvalue#1 printf_uint::uvalue#0
Identical Phi Values printf_uint::format_radix#1 printf_uint::format_radix#0
Identical Phi Values printf_uint::putc#1 printf_uint::putc#0
Identical Phi Values printf_uint::format_min_length#1 printf_uint::format_min_length#0
Identical Phi Values printf_uint::format_justify_left#1 printf_uint::format_justify_left#0
Identical Phi Values printf_uint::format_zero_padding#1 printf_uint::format_zero_padding#0
Identical Phi Values printf_uint::format_upper_case#1 printf_uint::format_upper_case#0
Identical Phi Values printf_number_buffer::format_min_length#1 printf_number_buffer::format_min_length#0
Identical Phi Values printf_number_buffer::format_justify_left#1 printf_number_buffer::format_justify_left#0
Identical Phi Values printf_number_buffer::format_zero_padding#1 printf_number_buffer::format_zero_padding#0
Identical Phi Values printf_number_buffer::buffer_digits#1 printf_number_buffer::buffer_digits#0
Identical Phi Values printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0
Identical Phi Values printf_number_buffer::putc#1 printf_number_buffer::putc#0
Identical Phi Values printf_number_buffer::format_upper_case#1 printf_number_buffer::format_upper_case#0
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#3
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memcpy::$1 [7] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
Simple Condition memset::$1 [14] if(memset::num#2<=0) goto memset::@1
Simple Condition memset::$3 [21] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition strlen::$0 [29] if(0!=*strlen::str#3) goto strlen::@2
Simple Condition strupr::$1 [44] if(0!=*strupr::src#2) goto strupr::@2
Simple Condition utoa::$0 [56] if(utoa::radix#0==DECIMAL) goto utoa::@1
Simple Condition utoa::$1 [60] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
Simple Condition utoa::$2 [64] if(utoa::radix#0==OCTAL) goto utoa::@3
Simple Condition utoa::$3 [68] if(utoa::radix#0==BINARY) goto utoa::@4
Simple Condition utoa::$5 [85] if(utoa::digit#2<utoa::$4) goto utoa::@11
Simple Condition utoa_append::$0 [110] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
Simple Condition gotoxy::$1 [117] if(gotoxy::y#3<=$19) goto gotoxy::@1
Simple Condition gotoxy::$3 [120] if(gotoxy::x#3<$28) goto gotoxy::@2
Simple Condition cputc::$0 [135] if(cputc::c#0=='
') goto cputc::@1
Simple Condition cputc::$2 [141] if(conio_cursor_x!=$28) goto cputc::@return
Simple Condition cscroll::$1 [151] if(conio_cursor_y!=$19) goto cscroll::@return
Simple Condition cscroll::$7 [153] if(0!=conio_scroll_enable) goto cscroll::@3
Simple Condition conio_c64_init::$1 [183] if(conio_c64_init::line#0<$19) goto conio_c64_init::@1
Simple Condition printf_str::$2 [196] if(0!=printf_str::c#1) goto printf_str::@2
Simple Condition printf_padding::$0 [205] if(printf_padding::i#2<printf_padding::length#6) goto printf_padding::@2
Simple Condition printf_uint::$5 [213] if(0!=printf_uint::format_sign_always#0) goto printf_uint::@1
Simple Condition printf_number_buffer::$0 [236] if(0==printf_number_buffer::format_min_length#0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$20 [250] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@13
Simple Condition printf_number_buffer::$23 [255] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$7 [259] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@3
Simple Condition printf_number_buffer::$12 [271] if(0==printf_number_buffer::format_upper_case#0) goto printf_number_buffer::@5
Simple Condition printf_string::$0 [295] if(0==printf_string::format_min_length#2) goto printf_string::@1
Simple Condition printf_string::$12 [309] if(printf_string::padding#1>=0) goto printf_string::@1
Simple Condition main::$9 [332] if((char *)0!=*main::$1) goto main::@2
Successful SSA optimization Pass2ConditionalJumpSimplification
Rewriting && if()-condition to two if()s [36] toupper::$2 = toupper::$0 && toupper::$1
Rewriting ! if()-condition to reversed if() [90] utoa::$8 = ! utoa::$7
Rewriting || if()-condition to two if()s [89] utoa::$7 = utoa::started#2 || utoa::$6
Rewriting ! if()-condition to reversed if() [242] printf_number_buffer::$5 = ! printf_number_buffer::$4
Rewriting && if()-condition to two if()s [241] printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [240] printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
Rewriting ! if()-condition to reversed if() [265] printf_number_buffer::$10 = ! printf_number_buffer::$9
Rewriting && if()-condition to two if()s [264] printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#0 && printf_number_buffer::padding#10
Rewriting ! if()-condition to reversed if() [282] printf_number_buffer::$17 = ! printf_number_buffer::$16
Rewriting && if()-condition to two if()s [281] printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [280] printf_number_buffer::$15 = printf_number_buffer::format_justify_left#0 && printf_number_buffer::$14
Rewriting ! if()-condition to reversed if() [299] printf_string::$3 = ! printf_string::$2
Rewriting && if()-condition to two if()s [298] printf_string::$2 = printf_string::$1 && printf_string::padding#3
Rewriting ! if()-condition to reversed if() [315] printf_string::$7 = ! printf_string::$6
Rewriting && if()-condition to two if()s [314] printf_string::$6 = printf_string::format_justify_left#10 && printf_string::padding#3
Successful SSA optimization Pass2ConditionalAndOrRewriting
Warning! Adding boolean cast to non-boolean condition utoa::started#2
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_zero_padding#0
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_justify_left#0
Warning! Adding boolean cast to non-boolean condition printf_string::format_justify_left#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_string::padding#3
Warning! Adding boolean cast to non-boolean condition printf_string::padding#3
Constant right-side identified [156] memcpy::num#0 = (unumber)$19*$28-$28
Constant right-side identified [161] memcpy::num#1 = (unumber)$19*$28-$28
Constant right-side identified [188] conio_c64_init::line#1 = (unumber)$19-1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant strlen::len#0 = 0
Constant utoa::max_digits#0 = 0
Constant utoa::digit_values#0 = (unsigned int *) 0
Constant utoa::max_digits#1 = 5
Constant utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant utoa::max_digits#2 = 4
Constant utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant utoa::max_digits#3 = 6
Constant utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant utoa::max_digits#4 = $10
Constant utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant utoa::started#0 = 0
Constant utoa::digit#0 = 0
Constant utoa::started#1 = 1
Constant utoa_append::digit#0 = 0
Constant gotoxy::y#0 = 0
Constant gotoxy::x#0 = 0
Constant memcpy::destination#0 = (void *)DEFAULT_SCREEN
Constant memcpy::source#0 = (void *)DEFAULT_SCREEN+$28
Constant memcpy::num#0 = (unumber)$19*$28-$28
Constant memcpy::destination#1 = (void *)COLORRAM
Constant memcpy::source#1 = (void *)COLORRAM+$28
Constant memcpy::num#1 = (unumber)$19*$28-$28
Constant memset::str#0 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28
Constant memset::c#0 = ' '
Constant memset::num#0 = $28
Constant memset::str#1 = (void *)COLORRAM+(unsigned int)$19*$28-$28
Constant memset::num#1 = $28
Constant gotoxy::x#1 = 0
Constant gotoxy::y#1 = 0
Constant gotoxy::x#2 = 0
Constant conio_c64_init::line#1 = (unumber)$19-1
Constant printf_str::c#0 = 0
Constant printf_padding::i#0 = 0
Constant printf_uint::$1 = '+'
Constant printf_uint::$0 = 0
Constant utoa::buffer#5 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::padding#0 = 0
Constant printf_number_buffer::padding#2 = 0
Constant printf_padding::pad#0 = ' '
Constant printf_padding::pad#1 = '0'
Constant printf_padding::pad#2 = ' '
Constant printf_string::padding#0 = 0
Constant printf_string::padding#2 = 0
Constant printf_padding::pad#3 = ' '
Constant printf_padding::pad#4 = ' '
Constant main::bbs#0 = bbs_list
Constant printf_string::putc#0 = &cputc
Constant printf_string::format_min_length#0 = 0
Constant printf_string::format_justify_left#0 = 0
Constant printf_str::putc#2 = &cputc
Constant printf_str::s#3 = main::s
Constant printf_string::putc#1 = &cputc
Constant printf_string::format_min_length#1 = 0
Constant printf_string::format_justify_left#1 = 0
Constant printf_str::putc#3 = &cputc
Constant printf_str::s#4 = main::s1
Constant printf_uint::putc#0 = &cputc
Constant printf_uint::format_min_length#0 = 0
Constant printf_uint::format_justify_left#0 = 0
Constant printf_uint::format_sign_always#0 = 0
Constant printf_uint::format_zero_padding#0 = 0
Constant printf_uint::format_upper_case#0 = 0
Constant printf_uint::format_radix#0 = DECIMAL
Constant printf_str::putc#4 = &cputc
Constant printf_str::s#5 = main::s2
Constant conio_textcolor = LIGHT_BLUE
Constant conio_scroll_enable = 1
Successful SSA optimization Pass2ConstantIdentification
Constant memset::c#1 = conio_textcolor
Constant utoa::radix#0 = printf_uint::format_radix#0
Constant printf_number_buffer::putc#0 = printf_uint::putc#0
Constant printf_number_buffer::format_min_length#0 = printf_uint::format_min_length#0
Constant printf_number_buffer::format_justify_left#0 = printf_uint::format_justify_left#0
Constant printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#0
Constant printf_number_buffer::format_zero_padding#0 = printf_uint::format_zero_padding#0
Constant printf_number_buffer::format_upper_case#0 = printf_uint::format_upper_case#0
Constant printf_number_buffer::format_radix#0 = printf_uint::format_radix#0
Constant strlen::str#1 = printf_number_buffer::buffer_digits#0
Constant printf_str::s#1 = printf_number_buffer::buffer_digits#0
Constant strupr::str#0 = printf_number_buffer::buffer_digits#0
Successful SSA optimization Pass2ConstantIdentification
Constant printf_number_buffer::$25 = (signed char)printf_number_buffer::format_min_length#0
Constant printf_padding::putc#0 = printf_number_buffer::putc#0
Constant printf_padding::putc#1 = printf_number_buffer::putc#0
Constant printf_str::putc#0 = printf_number_buffer::putc#0
Constant strupr::return#2 = strupr::str#0
Constant printf_padding::putc#2 = printf_number_buffer::putc#0
Successful SSA optimization Pass2ConstantIdentification
Replacing constant pointer function [268] callexecute cputc 
Successful SSA optimization Pass2ConstantCallPointerIdentification
if() condition always true - replacing block destination [56] if(utoa::radix#0==DECIMAL) goto utoa::@1
if() condition always false - eliminating [60] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
if() condition always false - eliminating [64] if(utoa::radix#0==OCTAL) goto utoa::@3
if() condition always false - eliminating [68] if(utoa::radix#0==BINARY) goto utoa::@4
if() condition always true - replacing block destination [153] if(0!=conio_scroll_enable) goto cscroll::@3
if() condition always false - eliminating [213] if(0!=printf_uint::format_sign_always#0) goto printf_uint::@1
if() condition always true - replacing block destination [236] if(0==printf_number_buffer::format_min_length#0) goto printf_number_buffer::@1
if() condition always true - replacing block destination [271] if(0==printf_number_buffer::format_upper_case#0) goto printf_number_buffer::@5
Successful SSA optimization Pass2ConstantIfs
Consolidated constant strings into main::s
Consolidated constant strings into bbs_host_name1
Consolidated constant strings into bbs_host_name8
Successful SSA optimization Pass2ConstantStringConsolidation
Rewriting conditional comparison [117] if(gotoxy::y#3<=$19) goto gotoxy::@1
Converting *(pointer+n) to pointer[n] [332] if((char *)0!=*main::$1) goto main::@2  -- main::$5[OFFSET_STRUCT_BBS_NAME]
Converting *(pointer+n) to pointer[n] [336] printf_string::str#0 = *main::$2  -- main::$6[OFFSET_STRUCT_BBS_NAME]
Converting *(pointer+n) to pointer[n] [346] printf_string::str#1 = *main::$3  -- main::$7[OFFSET_STRUCT_BBS_HOST_NAME]
Converting *(pointer+n) to pointer[n] [356] printf_uint::uvalue#0 = *main::$4  -- main::$8[OFFSET_STRUCT_BBS_PORT_NUMBER]
Successful SSA optimization Pass2InlineDerefIdx
Simplifying constant evaluating to zero (signed char)printf_number_buffer::format_min_length#0 in 
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero (char *)&printf_buffer in [217] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
Simplifying expression containing zero (char *)&printf_buffer in [223] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Simplifying expression containing zero printf_number_buffer::len#2 in [253] printf_number_buffer::padding#1 = printf_number_buffer::$25 - printf_number_buffer::len#2
Simplifying expression containing zero main::$5 in [330] main::$1 = main::$5 + OFFSET_STRUCT_BBS_NAME
Simplifying expression containing zero main::$5 in [332] if((char *)0!=main::$5[OFFSET_STRUCT_BBS_NAME]) goto main::@2
Simplifying expression containing zero main::$6 in [334] main::$2 = main::$6 + OFFSET_STRUCT_BBS_NAME
Simplifying expression containing zero main::$6 in [336] printf_string::str#0 = main::$6[OFFSET_STRUCT_BBS_NAME]
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating variable toupper::$0 from unused block toupper
Eliminating variable toupper::$1 from unused block toupper
Eliminating variable toupper::return#0 from unused block toupper::@1
Eliminating variable toupper::return#2 from unused block toupper::@return
Eliminating variable strupr::src#2 from unused block strupr::@1
Eliminating variable toupper::ch#0 from unused block strupr::@2
Eliminating variable toupper::return#3 from unused block strupr::@2
Eliminating variable strupr::$0 from unused block strupr::@4
Eliminating variable strupr::src#1 from unused block strupr::@4
Eliminating variable utoa::buffer#0 from unused block utoa::@9
Eliminating variable utoa::buffer#1 from unused block utoa::@9
Eliminating variable utoa::buffer#2 from unused block utoa::@9
Eliminating variable strlen::return#2 from unused block printf_number_buffer::@6
Eliminating variable printf_number_buffer::$19 from unused block printf_number_buffer::@15
Eliminating variable printf_number_buffer::len#0 from unused block printf_number_buffer::@15
Eliminating variable printf_number_buffer::len#2 from unused block printf_number_buffer::@13
Eliminating variable printf_number_buffer::padding#1 from unused block printf_number_buffer::@13
Eliminating variable printf_number_buffer::len#1 from unused block printf_number_buffer::@7
Removing unused procedure toupper
Removing unused procedure block toupper
Removing unused procedure block toupper::@1
Removing PHI-reference to removed block (toupper::@1) in block toupper::@return
Removing unused procedure block toupper::@2
Removing PHI-reference to removed block (toupper::@2) in block toupper::@return
Removing unused procedure block toupper::@return
Removing unused procedure block toupper::@3
Removing unused procedure strupr
Removing unused procedure block strupr
Removing PHI-reference to removed block (strupr) in block strupr::@1
Removing unused procedure block strupr::@1
Removing unused procedure block strupr::@2
Removing unused procedure block strupr::@4
Removing unused procedure block strupr::@3
Removing unused procedure block strupr::@return
Removing unused block utoa::@6
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing unused block utoa::@2
Removing unused block utoa::@7
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing unused block utoa::@3
Removing unused block utoa::@8
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing unused block utoa::@4
Removing unused block utoa::@9
Removing PHI-reference to removed block (cscroll::@2) in block gotoxy
Removing PHI-reference to removed block (cscroll::@2) in block gotoxy
Removing unused block cscroll::@2
Removing unused block cscroll::@8
Removing PHI-reference to removed block (printf_uint::@1) in block printf_uint::@3
Removing unused block printf_uint::@1
Removing PHI-reference to removed block (printf_number_buffer::@6) in block strlen
Removing unused block printf_number_buffer::@6
Removing PHI-reference to removed block (printf_number_buffer::@15) in block printf_number_buffer::@13
Removing unused block printf_number_buffer::@15
Removing PHI-reference to removed block (printf_number_buffer::@13) in block printf_number_buffer::@1
Removing unused block printf_number_buffer::@13
Removing unused block printf_number_buffer::@7
Removing PHI-reference to removed block (printf_number_buffer::@14) in block printf_number_buffer::@1
Removing unused block printf_number_buffer::@14
Removing unused block printf_number_buffer::@11
Removing unused block printf_number_buffer::@19
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused variable memcpy::return#2 and assignment [87] memcpy::return#2 = memcpy::destination#2
Eliminating unused variable memcpy::return#3 and assignment [89] memcpy::return#3 = memcpy::destination#2
Eliminating unused variable memset::return#2 and assignment [91] memset::return#2 = memset::str#3
Eliminating unused variable memset::return#3 and assignment [93] memset::return#3 = memset::str#3
Eliminating unused variable main::$1 and assignment [177] main::$1 = main::$5
Eliminating unused variable main::$2 and assignment [180] main::$2 = main::$6
Eliminating unused variable main::$3 and assignment [185] main::$3 = main::$7 + OFFSET_STRUCT_BBS_HOST_NAME
Eliminating unused variable main::$4 and assignment [190] main::$4 = main::$8 + OFFSET_STRUCT_BBS_PORT_NUMBER
Eliminating unused constant strlen::str#1
Eliminating unused constant BINARY
Eliminating unused constant OCTAL
Eliminating unused constant HEXADECIMAL
Eliminating unused constant utoa::max_digits#0
Eliminating unused constant utoa::digit_values#0
Eliminating unused constant utoa::max_digits#2
Eliminating unused constant utoa::digit_values#2
Eliminating unused constant utoa::max_digits#3
Eliminating unused constant utoa::digit_values#3
Eliminating unused constant utoa::max_digits#4
Eliminating unused constant utoa::digit_values#4
Eliminating unused constant utoa::radix#0
Eliminating unused constant gotoxy::x#1
Eliminating unused constant gotoxy::y#1
Eliminating unused constant printf_str::c#0
Eliminating unused constant printf_uint::$1
Eliminating unused constant printf_number_buffer::padding#2
Eliminating unused constant printf_number_buffer::format_min_length#0
Eliminating unused constant printf_number_buffer::format_sign_always#0
Eliminating unused constant printf_number_buffer::format_upper_case#0
Eliminating unused constant printf_number_buffer::format_radix#0
Eliminating unused constant printf_number_buffer::$25
Eliminating unused constant OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN
Eliminating unused constant OFFSET_STRUCT_BBS_NAME
Eliminating unused constant conio_scroll_enable
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant RADIX_BINARY_VALUES
Eliminating unused constant RADIX_OCTAL_VALUES
Eliminating unused constant RADIX_HEXADECIMAL_VALUES
Eliminating unused constant printf_uint::format_min_length#0
Eliminating unused constant printf_uint::format_sign_always#0
Eliminating unused constant printf_uint::format_upper_case#0
Eliminating unused constant printf_uint::format_radix#0
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant DECIMAL
Successful SSA optimization PassNEliminateUnusedVars
Adding number conversion cast (unumber) 0 in utoa::$12 = 0 != utoa::started#2
Adding number conversion cast (unumber) $19+1 in if(gotoxy::y#3<$19+1) goto gotoxy::@1
Adding number conversion cast (unumber) 1 in if(gotoxy::y#3<(unumber)$19+1) goto gotoxy::@1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$33 = 0 != printf_number_buffer::format_zero_padding#0
Adding number conversion cast (unumber) 0 in printf_number_buffer::$34 = 0 != printf_number_buffer::format_justify_left#0
Adding number conversion cast (unumber) 0 in printf_string::$16 = 0 != printf_string::format_justify_left#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$35 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$36 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$37 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_string::$17 = 0 != printf_string::padding#3
Adding number conversion cast (snumber) 0 in printf_string::$18 = 0 != printf_string::padding#3
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 0
Simplifying constant integer cast $19+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values strlen::str#5 strlen::str#2
Identical Phi Values utoa::max_digits#7 utoa::max_digits#1
Identical Phi Values utoa::digit_values#8 utoa::digit_values#1
Identical Phi Values gotoxy::y#3 gotoxy::y#2
Identical Phi Values gotoxy::x#3 gotoxy::x#2
Identical Phi Values printf_uint::$2 printf_uint::$0
Identical Phi Values printf_number_buffer::padding#10 printf_number_buffer::padding#0
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition utoa::$12 [36] if(0!=utoa::started#2) goto utoa::@14
Simple Condition printf_number_buffer::$1 [127] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@22
Simple Condition printf_number_buffer::$33 [132] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@23
Simple Condition printf_number_buffer::$34 [141] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@25
Simple Condition printf_string::$1 [149] if(0==printf_string::format_justify_left#10) goto printf_string::@11
Simple Condition printf_string::$16 [162] if(0!=printf_string::format_justify_left#10) goto printf_string::@12
Simple Condition utoa::$6 [195] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@14
Simple Condition printf_number_buffer::$35 [197] if(0!=printf_number_buffer::padding#0) goto printf_number_buffer::@8
Simple Condition printf_number_buffer::$2 [198] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@21
Simple Condition printf_number_buffer::$36 [200] if(0!=printf_number_buffer::padding#0) goto printf_number_buffer::@10
Simple Condition printf_number_buffer::$37 [202] if(0!=printf_number_buffer::padding#0) goto printf_number_buffer::@12
Simple Condition printf_number_buffer::$14 [203] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@24
Simple Condition printf_string::$17 [205] if(0!=printf_string::padding#3) goto printf_string::@5
Simple Condition printf_string::$18 [207] if(0!=printf_string::padding#3) goto printf_string::@6
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [127] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@2
Negating conditional jump and destination [132] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@4
Negating conditional jump and destination [141] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@return
Negating conditional jump and destination [149] if(0!=printf_string::format_justify_left#10) goto printf_string::@2
Negating conditional jump and destination [162] if(0==printf_string::format_justify_left#10) goto printf_string::@return
Negating conditional jump and destination [198] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@2
Negating conditional jump and destination [203] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [30] utoa::$4 = utoa::max_digits#1 - 1
Constant right-side identified [129] printf_padding::length#0 = (char)printf_number_buffer::padding#0
Constant right-side identified [136] printf_padding::length#1 = (char)printf_number_buffer::padding#0
Constant right-side identified [142] printf_padding::length#2 = (char)printf_number_buffer::padding#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::$4 = utoa::max_digits#1-1
Constant printf_padding::length#0 = (char)printf_number_buffer::padding#0
Constant printf_padding::length#1 = (char)printf_number_buffer::padding#0
Constant printf_padding::length#2 = (char)printf_number_buffer::padding#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [59] if(gotoxy::x#2<$28) goto gotoxy::@2
if() condition always false - eliminating [127] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@2
if() condition always true - replacing block destination [132] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@4
if() condition always true - replacing block destination [141] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@return
if() condition always false - eliminating [197] if(0!=printf_number_buffer::padding#0) goto printf_number_buffer::@8
if() condition always false - eliminating [198] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@2
if() condition always false - eliminating [200] if(0!=printf_number_buffer::padding#0) goto printf_number_buffer::@10
if() condition always false - eliminating [202] if(0!=printf_number_buffer::padding#0) goto printf_number_buffer::@12
if() condition always false - eliminating [203] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (char)printf_number_buffer::padding#0 in 
Simplifying constant evaluating to zero (char)printf_number_buffer::padding#0 in 
Simplifying constant evaluating to zero (char)printf_number_buffer::padding#0 in 
Successful SSA optimization PassNSimplifyConstantZero
Removing PHI-reference to removed block (gotoxy::@4) in block gotoxy::@2
Removing unused block gotoxy::@4
Removing PHI-reference to removed block (printf_number_buffer::@8) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@8) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@8) in block printf_padding
Removing unused block printf_number_buffer::@8
Removing unused block printf_number_buffer::@16
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing unused block printf_number_buffer::@10
Removing unused block printf_number_buffer::@17
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing unused block printf_number_buffer::@12
Removing unused block printf_number_buffer::@20
Removing unused block printf_number_buffer::@23
Removing unused block printf_number_buffer::@24
Removing unused block printf_number_buffer::@25
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant gotoxy::x#0
Eliminating unused constant printf_padding::pad#0
Eliminating unused constant printf_padding::pad#1
Eliminating unused constant printf_padding::pad#2
Eliminating unused constant printf_padding::putc#0
Eliminating unused constant printf_padding::putc#1
Eliminating unused constant printf_padding::putc#2
Eliminating unused constant printf_padding::length#0
Eliminating unused constant printf_padding::length#1
Eliminating unused constant printf_padding::length#2
Eliminating unused constant printf_number_buffer::padding#0
Eliminating unused constant printf_number_buffer::format_justify_left#0
Eliminating unused constant printf_number_buffer::format_zero_padding#0
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant printf_uint::format_justify_left#0
Eliminating unused constant printf_uint::format_zero_padding#0
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values gotoxy::x#4 gotoxy::x#2
Successful SSA optimization Pass2IdenticalPhiElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Inlining Noop Cast [1] memcpy::src#0 = (char *)memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [2] memcpy::dst#0 = (char *)memcpy::destination#2 keeping memcpy::destination#2
Inlining Noop Cast [3] memcpy::$2 = (char *)memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [13] memset::$4 = (char *)memset::str#3 keeping memset::str#3
Inlining Noop Cast [15] memset::dst#0 = (char *)memset::str#3 keeping memset::str#3
Inlining Noop Cast [130] printf_string::$13 = (signed char)printf_string::format_min_length#2 keeping printf_string::format_min_length#2
Inlining Noop Cast [146] main::$5 = (char **)main::bbs#2 keeping main::bbs#2
Inlining Noop Cast [148] main::$6 = (char **)main::bbs#2 keeping main::bbs#2
Inlining Noop Cast [152] main::$7 = (char **)main::bbs#2 keeping main::bbs#2
Inlining Noop Cast [156] main::$8 = (unsigned int *)main::bbs#2 keeping main::bbs#2
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [29] utoa::$10 = utoa::digit#2 * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift and addition[56] gotoxy::line_offset#0 = gotoxy::$7 * $28
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memcpy::destination#0
Inlining constant with var siblings memcpy::source#0
Inlining constant with var siblings memcpy::num#0
Inlining constant with var siblings memcpy::destination#1
Inlining constant with var siblings memcpy::source#1
Inlining constant with var siblings memcpy::num#1
Inlining constant with var siblings memset::str#0
Inlining constant with var siblings memset::c#0
Inlining constant with var siblings memset::num#0
Inlining constant with var siblings memset::str#1
Inlining constant with var siblings memset::num#1
Inlining constant with var siblings memset::c#1
Inlining constant with var siblings strlen::len#0
Inlining constant with var siblings utoa::started#0
Inlining constant with var siblings utoa::digit#0
Inlining constant with var siblings utoa::started#1
Inlining constant with var siblings utoa::buffer#5
Inlining constant with var siblings utoa_append::digit#0
Inlining constant with var siblings gotoxy::y#0
Inlining constant with var siblings conio_c64_init::line#1
Inlining constant with var siblings printf_str::putc#2
Inlining constant with var siblings printf_str::s#3
Inlining constant with var siblings printf_str::putc#3
Inlining constant with var siblings printf_str::s#4
Inlining constant with var siblings printf_str::putc#4
Inlining constant with var siblings printf_str::s#5
Inlining constant with var siblings printf_str::s#1
Inlining constant with var siblings printf_str::putc#0
Inlining constant with var siblings printf_padding::i#0
Inlining constant with var siblings printf_padding::pad#3
Inlining constant with var siblings printf_padding::pad#4
Inlining constant with var siblings printf_string::padding#0
Inlining constant with var siblings printf_string::padding#2
Inlining constant with var siblings printf_string::putc#0
Inlining constant with var siblings printf_string::format_min_length#0
Inlining constant with var siblings printf_string::format_justify_left#0
Inlining constant with var siblings printf_string::putc#1
Inlining constant with var siblings printf_string::format_min_length#1
Inlining constant with var siblings printf_string::format_justify_left#1
Inlining constant with var siblings main::bbs#0
Constant inlined utoa_append::digit#0 = 0
Constant inlined utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant inlined printf_str::putc#0 = printf_uint::putc#0
Constant inlined conio_textcolor = LIGHT_BLUE
Constant inlined memcpy::destination#0 = (void *)DEFAULT_SCREEN
Constant inlined memset::num#1 = $28
Constant inlined printf_str::putc#2 = &cputc
Constant inlined memcpy::destination#1 = (void *)COLORRAM
Constant inlined memset::num#0 = $28
Constant inlined printf_str::putc#3 = &cputc
Constant inlined strlen::len#0 = 0
Constant inlined printf_string::format_min_length#0 = 0
Constant inlined printf_string::format_min_length#1 = 0
Constant inlined conio_c64_init::line#1 = (char)$19-1
Constant inlined memcpy::source#1 = (void *)COLORRAM+$28
Constant inlined printf_str::s#5 = main::s2
Constant inlined printf_str::putc#4 = &cputc
Constant inlined utoa::digit#0 = 0
Constant inlined printf_str::s#3 = main::s
Constant inlined printf_str::s#4 = main::s
Constant inlined printf_str::s#1 = printf_number_buffer::buffer_digits#0
Constant inlined utoa::$4 = utoa::max_digits#1-1
Constant inlined printf_string::putc#1 = &cputc
Constant inlined printf_string::putc#0 = &cputc
Constant inlined memset::str#1 = (void *)COLORRAM+(unsigned int)$19*$28-$28
Constant inlined memset::str#0 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28
Constant inlined printf_padding::i#0 = 0
Constant inlined main::s1 = main::s
Constant inlined printf_uint::$0 = 0
Constant inlined utoa::started#1 = 1
Constant inlined utoa::started#0 = 0
Constant inlined printf_number_buffer::putc#0 = printf_uint::putc#0
Constant inlined memcpy::source#0 = (void *)DEFAULT_SCREEN+$28
Constant inlined printf_padding::pad#3 = ' '
Constant inlined printf_padding::pad#4 = ' '
Constant inlined memcpy::num#1 = (unsigned int)$19*$28-$28
Constant inlined memcpy::num#0 = (unsigned int)$19*$28-$28
Constant inlined printf_string::padding#0 = 0
Constant inlined utoa::buffer#5 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined gotoxy::y#0 = 0
Constant inlined bbs_host_name17 = bbs_host_name1
Constant inlined printf_string::padding#2 = 0
Constant inlined main::bbs#0 = bbs_list
Constant inlined memset::c#0 = ' '
Constant inlined memset::c#1 = LIGHT_BLUE
Constant inlined printf_string::format_justify_left#1 = 0
Constant inlined printf_string::format_justify_left#0 = 0
Constant inlined bbs_host_name16 = bbs_host_name8
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias gotoxy::line_offset#0 = gotoxy::$10 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values memcpy::num#2 (unsigned int)$19*$28-$28
Identical Phi Values memset::num#2 $28
Identical Phi Values printf_string::format_min_length#2 0
Identical Phi Values printf_string::format_justify_left#10 0
Identical Phi Values printf_string::putc#10 &cputc
Successful SSA optimization Pass2IdenticalPhiElimination
Constant printf_str::putc#1 = &cputc
Constant printf_padding::putc#3 = &cputc
Constant printf_padding::putc#4 = &cputc
Successful SSA optimization Pass2ConstantIdentification
Constant value identified (signed char)0 in [127] printf_string::padding#1 = (signed char)0 - printf_string::len#0
Successful SSA optimization Pass2ConstantValues
if() condition always false - eliminating [9] if($28<=0) goto memset::@1
if() condition always true - replacing block destination [119] if(0==0) goto printf_string::@1
if() condition always false - eliminating [121] if(0!=0) goto printf_string::@2
if() condition always true - replacing block destination [132] if(0==0) goto printf_string::@return
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (signed char)0 in [127] printf_string::padding#1 = (signed char)0 - printf_string::len#0
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero printf_string::len#0 in [127] printf_string::padding#1 = 0 - printf_string::len#0
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating variable strlen::str#3 from unused block strlen::@1
Eliminating variable strlen::len#2 from unused block strlen::@1
Eliminating variable strlen::len#1 from unused block strlen::@2
Eliminating variable strlen::str#0 from unused block strlen::@2
Eliminating variable strlen::str#2 from unused block printf_string::@3
Eliminating variable strlen::return#3 from unused block printf_string::@3
Eliminating variable printf_string::$9 from unused block printf_string::@7
Eliminating variable printf_string::len#0 from unused block printf_string::@7
Eliminating variable printf_string::padding#1 from unused block printf_string::@7
Eliminating variable printf_padding::length#4 from unused block printf_string::@6
Removing unused procedure strlen
Removing unused procedure block strlen
Removing PHI-reference to removed block (strlen) in block strlen::@1
Removing PHI-reference to removed block (strlen) in block strlen::@1
Removing unused procedure block strlen::@1
Removing unused procedure block strlen::@2
Removing unused procedure block strlen::@3
Removing unused procedure block strlen::@return
Removing unused block printf_string::@3
Removing PHI-reference to removed block (printf_string::@7) in block printf_string::@1
Removing unused block printf_string::@7
Removing PHI-reference to removed block (printf_string::@4) in block printf_string::@1
Removing unused block printf_string::@4
Removing PHI-reference to removed block (printf_string::@6) in block printf_padding
Removing PHI-reference to removed block (printf_string::@6) in block printf_padding
Removing PHI-reference to removed block (printf_string::@6) in block printf_padding
Removing unused block printf_string::@6
Removing unused block printf_string::@10
Removing unused block printf_string::@12
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant printf_padding::putc#4
Eliminating unused constant SIZEOF_UNSIGNED_INT
Successful SSA optimization PassNEliminateUnusedVars
Inlining constant with var siblings printf_str::putc#1
Inlining constant with var siblings printf_padding::putc#3
Constant inlined printf_padding::putc#3 = &cputc
Constant inlined printf_str::putc#1 = &cputc
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values printf_padding::length#6 printf_padding::length#3
Identical Phi Values printf_padding::pad#7 ' '
Identical Phi Values printf_padding::putc#7 &cputc
Identical Phi Values printf_string::padding#3 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [116] printf_padding::length#3 = (char)0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant printf_padding::length#3 = (char)0
Successful SSA optimization Pass2ConstantIdentification
Replacing constant pointer function [96] callexecute cputc 
Successful SSA optimization Pass2ConstantCallPointerIdentification
if() condition always false - eliminating [94] if(printf_padding::i#2<printf_padding::length#3) goto printf_padding::@2
if() condition always false - eliminating [141] if(0!=0) goto printf_string::@5
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (char)0 in 
Successful SSA optimization PassNSimplifyConstantZero
Eliminating variable printf_padding::i#2 from unused block printf_padding::@1
Eliminating variable printf_padding::i#1 from unused block printf_padding::@3
Removing unused procedure printf_padding
Removing unused procedure block printf_padding
Removing PHI-reference to removed block (printf_padding) in block printf_padding::@1
Removing unused procedure block printf_padding::@1
Removing unused procedure block printf_padding::@2
Removing unused procedure block printf_padding::@3
Removing unused procedure block printf_padding::@return
Removing unused block printf_string::@5
Removing unused block printf_string::@9
Successful SSA optimization Pass2EliminateUnusedBlocks
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $a
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) $b
Finalized unsigned number type (char) $b
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $1b
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Simplifying constant integer cast $19-1
Successful SSA optimization PassNCastSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Added new block during phi lifting utoa::@17(between utoa::@16 and utoa::@13)
Added new block during phi lifting gotoxy::@5(between gotoxy and gotoxy::@1)
Added new block during phi lifting conio_c64_init::@4(between conio_c64_init and conio_c64_init::@1)
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@2
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of __start::@3
Adding NOP phi() at start of conio_c64_init::@2
Adding NOP phi() at start of conio_c64_init::@3
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@5
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of printf_string::@1
Adding NOP phi() at start of printf_string::@11
Adding NOP phi() at start of printf_string::@8
Adding NOP phi() at start of printf_uint
Adding NOP phi() at start of printf_uint::@2
Adding NOP phi() at start of printf_uint::@5
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@5
Adding NOP phi() at start of cscroll::@6
Adding NOP phi() at start of utoa
Adding NOP phi() at start of utoa::@1
Adding NOP phi() at start of printf_number_buffer
Adding NOP phi() at start of printf_number_buffer::@1
Adding NOP phi() at start of printf_number_buffer::@22
Adding NOP phi() at start of printf_number_buffer::@21
Adding NOP phi() at start of printf_number_buffer::@3
Adding NOP phi() at start of printf_number_buffer::@4
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of printf_number_buffer::@18
Adding NOP phi() at start of memcpy::@3
Adding NOP phi() at start of memset::@1
CALL GRAPH
Calls in [__start] to conio_c64_init:5 main:8 
Calls in [conio_c64_init] to gotoxy:16 
Calls in [cputc] to cputln:27 cputln:31 
Calls in [main] to printf_string:39 printf_str:41 printf_string:44 printf_str:46 printf_uint:48 printf_str:50 
Calls in [cputln] to cscroll:72 
Calls in [printf_string] to printf_str:80 
Calls in [printf_str] to null:91 
Calls in [printf_uint] to utoa:98 printf_number_buffer:100 
Calls in [cscroll] to memcpy:106 memcpy:108 memset:110 memset:112 
Calls in [utoa] to utoa_append:143 
Calls in [printf_number_buffer] to cputc:155 printf_str:160 

Created 23 initial phi equivalence classes
Coalesced [19] conio_c64_init::line#3 = conio_c64_init::line#0
Coalesced [38] printf_string::str#10 = printf_string::str#0
Coalesced [43] printf_string::str#11 = printf_string::str#1
Coalesced [52] main::bbs#10 = main::bbs#1
Coalesced [67] gotoxy::y#7 = gotoxy::y#2
Coalesced [79] printf_str::s#9 = printf_str::s#2
Coalesced [84] printf_str::s#10 = printf_str::s#7
Coalesced [93] printf_str::s#11 = printf_str::s#0
Coalesced [119] utoa::value#17 = utoa::value#1
Coalesced [131] utoa::value#18 = utoa::value#2
Coalesced [132] utoa::started#6 = utoa::started#2
Coalesced [133] utoa::buffer#23 = utoa::buffer#11
Coalesced [136] utoa::digit#7 = utoa::digit#1
Coalesced (already) [137] utoa::value#16 = utoa::value#6
Coalesced (already) [138] utoa::started#5 = utoa::started#4
Coalesced (already) [139] utoa::buffer#22 = utoa::buffer#14
Coalesced [147] utoa::value#19 = utoa::value#0
Coalesced [148] utoa::buffer#24 = utoa::buffer#4
Coalesced [174] memcpy::src#5 = memcpy::src#1
Coalesced [175] memcpy::dst#5 = memcpy::dst#1
Coalesced [185] memset::dst#5 = memset::dst#1
Coalesced [186] utoa_append::value#6 = utoa_append::value#0
Coalesced [193] utoa_append::value#7 = utoa_append::value#1
Coalesced [194] utoa_append::digit#5 = utoa_append::digit#1
Coalesced down to 19 phi equivalence classes
Culled Empty Block label __start::@2
Culled Empty Block label __start::@3
Culled Empty Block label conio_c64_init::@2
Culled Empty Block label conio_c64_init::@3
Culled Empty Block label cputc::@5
Culled Empty Block label cputc::@4
Culled Empty Block label gotoxy::@3
Culled Empty Block label cputln::@1
Culled Empty Block label printf_string::@1
Culled Empty Block label printf_string::@11
Culled Empty Block label printf_string::@8
Culled Empty Block label printf_uint::@2
Culled Empty Block label printf_uint::@5
Culled Empty Block label cscroll::@1
Culled Empty Block label utoa::@1
Culled Empty Block label utoa::@5
Culled Empty Block label utoa::@17
Culled Empty Block label printf_number_buffer::@1
Culled Empty Block label printf_number_buffer::@22
Culled Empty Block label printf_number_buffer::@21
Culled Empty Block label printf_number_buffer::@3
Culled Empty Block label printf_number_buffer::@4
Culled Empty Block label printf_number_buffer::@18
Culled Empty Block label memcpy::@3
Culled Empty Block label memset::@1
Renumbering block memset::@2 to memset::@1
Renumbering block memset::@3 to memset::@2
Renumbering block memset::@4 to memset::@3
Renumbering block utoa::@10 to utoa::@1
Renumbering block utoa::@11 to utoa::@2
Renumbering block utoa::@12 to utoa::@3
Renumbering block utoa::@13 to utoa::@4
Renumbering block utoa::@14 to utoa::@5
Renumbering block utoa::@15 to utoa::@6
Renumbering block utoa::@16 to utoa::@7
Renumbering block gotoxy::@5 to gotoxy::@3
Renumbering block cscroll::@3 to cscroll::@1
Renumbering block cscroll::@4 to cscroll::@2
Renumbering block cscroll::@5 to cscroll::@3
Renumbering block cscroll::@6 to cscroll::@4
Renumbering block cscroll::@7 to cscroll::@5
Renumbering block conio_c64_init::@4 to conio_c64_init::@2
Renumbering block printf_uint::@3 to printf_uint::@1
Renumbering block printf_uint::@4 to printf_uint::@2
Renumbering block printf_number_buffer::@2 to printf_number_buffer::@1
Renumbering block printf_number_buffer::@5 to printf_number_buffer::@2
Renumbering block printf_number_buffer::@9 to printf_number_buffer::@3
Renumbering block printf_string::@2 to printf_string::@1
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of conio_c64_init::@2
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of printf_uint
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@2
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of utoa
Adding NOP phi() at start of printf_number_buffer
Adding NOP phi() at start of printf_number_buffer::@2
Adding NOP phi() at start of utoa_append

FINAL CONTROL FLOW GRAPH

void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] call conio_c64_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [6] phi()
  [7] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [11] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [12] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [13] gotoxy::y#2 = conio_c64_init::line#2
  [14] call gotoxy
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [15] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from printf_number_buffer::@3
  [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [17] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [18] conio_line_text[conio_cursor_x] = cputc::c#0
  [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [20] conio_cursor_x = ++ conio_cursor_x
  [21] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [22] phi()
  [23] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [24] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [25] phi()
  [26] call cputln
  to:cputc::@return

void main()
main: scope:[main]  from __start::@1
  [27] *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17
  to:main::@1
main::@1: scope:[main]  from main main::@8
  [28] main::bbs#2 = phi( main/bbs_list, main::@8/main::bbs#1 )
  [29] if((char *)0!=*((char **)main::bbs#2)) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [30] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [31] printf_string::str#0 = *((char **)main::bbs#2)
  [32] call printf_string
  to:main::@3
main::@3: scope:[main]  from main::@2
  [33] phi()
  [34] call printf_str
  to:main::@4
main::@4: scope:[main]  from main::@3
  [35] printf_string::str#1 = ((char **)main::bbs#2)[OFFSET_STRUCT_BBS_HOST_NAME]
  [36] call printf_string
  to:main::@5
main::@5: scope:[main]  from main::@4
  [37] phi()
  [38] call printf_str
  to:main::@6
main::@6: scope:[main]  from main::@5
  [39] printf_uint::uvalue#0 = ((unsigned int *)main::bbs#2)[OFFSET_STRUCT_BBS_PORT_NUMBER]
  [40] call printf_uint
  to:main::@7
main::@7: scope:[main]  from main::@6
  [41] phi()
  [42] call printf_str
  to:main::@8
main::@8: scope:[main]  from main::@7
  [43] main::bbs#1 = main::bbs#2 + SIZEOF_STRUCT_BBS
  to:main::@1

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1
  [44] if(gotoxy::y#2<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [45] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [46] gotoxy::y#4 = phi( gotoxy::@3/gotoxy::y#2, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [47] conio_cursor_x = gotoxy::x#2
  [48] conio_cursor_y = gotoxy::y#4
  [49] gotoxy::$7 = (unsigned int)gotoxy::y#4
  [50] gotoxy::$8 = gotoxy::$7 << 2
  [51] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [52] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [53] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [54] conio_line_text = gotoxy::$5
  [55] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [56] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [57] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [58] conio_line_text = conio_line_text + $28
  [59] conio_line_color = conio_line_color + $28
  [60] conio_cursor_x = 0
  [61] conio_cursor_y = ++ conio_cursor_y
  [62] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [63] return 
  to:@return

void printf_string(void (*putc)(char) , char *str , char format_min_length , char format_justify_left)
printf_string: scope:[printf_string]  from main::@2 main::@4
  [64] printf_string::str#2 = phi( main::@2/printf_string::str#0, main::@4/printf_string::str#1 )
  to:printf_string::@1
printf_string::@1: scope:[printf_string]  from printf_string
  [65] printf_str::s#2 = printf_string::str#2
  [66] call printf_str
  to:printf_string::@return
printf_string::@return: scope:[printf_string]  from printf_string::@1
  [67] return 
  to:@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@3 main::@5 main::@7 printf_number_buffer::@2 printf_string::@1
  [68] printf_str::putc#7 = phi( main::@3/&cputc, main::@5/&cputc, main::@7/&cputc, printf_number_buffer::@2/printf_uint::putc#0, printf_string::@1/&cputc )
  [68] printf_str::s#7 = phi( main::@3/main::s, main::@5/main::s, main::@7/main::s2, printf_number_buffer::@2/printf_number_buffer::buffer_digits#0, printf_string::@1/printf_str::s#2 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [69] printf_str::s#6 = phi( printf_str/printf_str::s#7, printf_str::@2/printf_str::s#0 )
  [70] printf_str::c#1 = *printf_str::s#6
  [71] printf_str::s#0 = ++ printf_str::s#6
  [72] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [73] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [74] stackpush(char) = printf_str::c#1
  [75] callexecute *printf_str::putc#7 
  sideeffect stackpullpadding(1)
  to:printf_str::@1

void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uint: scope:[printf_uint]  from main::@6
  [77] phi()
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [78] *((char *)&printf_buffer) = 0
  [79] utoa::value#1 = printf_uint::uvalue#0
  [80] call utoa
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [81] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer)
  [82] call printf_number_buffer
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [83] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [84] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [85] phi()
  [86] call memcpy
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [87] phi()
  [88] call memcpy
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [89] phi()
  [90] call memset
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [91] phi()
  [92] call memset
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [93] conio_line_text = conio_line_text - $28
  [94] conio_line_color = conio_line_color - $28
  [95] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [96] return 
  to:@return

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_uint::@1
  [97] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [98] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [98] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [98] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/utoa::value#1 )
  [98] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [99] if(utoa::digit#2<utoa::max_digits#1-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [100] utoa::$11 = (char)utoa::value#2
  [101] *utoa::buffer#11 = DIGITS[utoa::$11]
  [102] utoa::buffer#3 = ++ utoa::buffer#11
  [103] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [104] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [105] utoa::$10 = utoa::digit#2 << 1
  [106] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [107] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [108] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [109] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [109] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [109] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [110] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [111] utoa_append::buffer#0 = utoa::buffer#11
  [112] utoa_append::value#0 = utoa::value#2
  [113] utoa_append::sub#0 = utoa::digit_value#0
  [114] call utoa_append
  [115] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [116] utoa::value#0 = utoa_append::return#0
  [117] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uint::@2
  [118] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer
  [119] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [120] stackpush(char) = printf_number_buffer::buffer_sign#0
  [121] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@3
  [123] phi()
  [124] call printf_str
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [125] return 
  to:@return

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [126] memcpy::destination#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN, cscroll::@2/(void *)COLORRAM )
  [126] memcpy::source#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN+$28, cscroll::@2/(void *)COLORRAM+$28 )
  [127] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28
  [128] memcpy::src#4 = (char *)memcpy::source#2
  [129] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [130] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [130] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [131] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [132] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [133] *memcpy::dst#2 = *memcpy::src#2
  [134] memcpy::dst#1 = ++ memcpy::dst#2
  [135] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [136] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [136] memset::str#3 = phi( cscroll::@3/(void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28, cscroll::@4/(void *)COLORRAM+(unsigned int)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [137] memset::end#0 = (char *)memset::str#3 + $28
  [138] memset::dst#4 = (char *)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [139] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [140] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [141] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [142] *memset::dst#2 = memset::c#4
  [143] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [144] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [145] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [145] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [146] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [147] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [148] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [149] utoa_append::digit#1 = ++ utoa_append::digit#2
  [150] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

null depth in calling loop Loop head: main::@1 tails: main::@8 blocks: main::@8 main::@7 main::@6 main::@5 main::@4 main::@3 main::@2 main::@1  in scope printf_uint

VARIABLE REGISTER WEIGHTS
void __start()
void conio_c64_init()
char conio_c64_init::line
char conio_c64_init::line#0 // 11.0
char conio_c64_init::line#2 // 22.0
__loadstore char conio_cursor_x // 25425.576271186437
__loadstore char conio_cursor_y // 426668.1066666667
__loadstore char *conio_line_color // 329852.35820895527
__loadstore char *conio_line_text // 320291.4202898551
__stackcall void cputc(char c)
char cputc::c
char cputc::c#0 // 150001.5
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // 202.0
char *gotoxy::$6 // 202.0
unsigned int gotoxy::$7 // 151.5
unsigned int gotoxy::$8 // 202.0
unsigned int gotoxy::$9 // 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // 101.0
char gotoxy::x
char gotoxy::y
char gotoxy::y#2 // 71.0
char gotoxy::y#4 // 67.33333333333333
void main()
struct bbs *main::bbs
struct bbs *main::bbs#1 // 202.0
struct bbs *main::bbs#2 // 14.428571428571429
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2
char *memcpy::dst
char *memcpy::dst#1 // 1.0000000001E10
char *memcpy::dst#2 // 1.0033333334666666E10
char *memcpy::dst#4 // 2.00000002E8
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2
char *memcpy::src
char *memcpy::src#1 // 2.0000000002E10
char *memcpy::src#2 // 1.002500000125E10
char *memcpy::src#4 // 1.00000001E8
char *memcpy::src_end
char *memcpy::src_end#0 // 1.26250000025E9
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // 1.4285714287142856E9
char *memset::dst
char *memset::dst#1 // 2.0000000002E10
char *memset::dst#2 // 1.3366666668333332E10
char *memset::dst#4 // 2.00000002E8
char *memset::end
char *memset::end#0 // 1.6833333336666665E9
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3
__loadstore struct printf_buffer_number printf_buffer = {}
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // 7001.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // 1.0000001E7
void (*printf_str::putc)(char)
void (*printf_str::putc#7)(char)
const char *printf_str::s
const char *printf_str::s#0 // 1.0000001E7
const char *printf_str::s#2 // 2002.0
const char *printf_str::s#6 // 1.5050002E7
const char *printf_str::s#7 // 101002.0
void printf_string(void (*putc)(char) , char *str , char format_min_length , char format_justify_left)
struct printf_format_string printf_string::format
char printf_string::format_justify_left
char printf_string::format_min_length
signed char printf_string::len
signed char printf_string::padding
void (*printf_string::putc)(char)
char *printf_string::str
char *printf_string::str#0 // 202.0
char *printf_string::str#1 // 202.0
char *printf_string::str#2 // 1203.0
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // 367.33333333333337
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // 2000002.0
char utoa::$11 // 20002.0
char *utoa::buffer
char *utoa::buffer#11 // 287143.2857142857
char *utoa::buffer#14 // 1500001.5
char *utoa::buffer#3 // 20002.0
char *utoa::buffer#4 // 2000002.0
char utoa::digit
char utoa::digit#1 // 2000002.0
char utoa::digit#2 // 285714.5714285714
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // 600000.6000000001
unsigned int *utoa::digit_values
char utoa::max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // 500000.5
char utoa::started#4 // 1000001.0
unsigned int utoa::value
unsigned int utoa::value#0 // 1000001.0
unsigned int utoa::value#1 // 5501.0
unsigned int utoa::value#2 // 572857.857142857
unsigned int utoa::value#6 // 1500001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // 1375000.25
char utoa_append::digit
char utoa_append::digit#1 // 1.0000000001E10
char utoa_append::digit#2 // 1.00050000015E10
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // 2000002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // 3.3335000005E9
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // 3666667.333333333
unsigned int utoa_append::value#1 // 2.0000000002E10
unsigned int utoa_append::value#2 // 5.001833334166666E9

Initial phi equivalence classes
[ conio_c64_init::line#2 conio_c64_init::line#0 ]
[ main::bbs#2 main::bbs#1 ]
[ gotoxy::y#4 gotoxy::y#2 ]
[ printf_string::str#2 printf_string::str#0 printf_string::str#1 ]
[ printf_str::putc#7 ]
[ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
Added variable conio_cursor_x to live range equivalence class [ conio_cursor_x ]
Added variable conio_cursor_y to live range equivalence class [ conio_cursor_y ]
Added variable conio_line_text to live range equivalence class [ conio_line_text ]
Added variable conio_line_color to live range equivalence class [ conio_line_color ]
Added variable cputc::c#0 to live range equivalence class [ cputc::c#0 ]
Added variable printf_uint::uvalue#0 to live range equivalence class [ printf_uint::uvalue#0 ]
Added variable gotoxy::$7 to live range equivalence class [ gotoxy::$7 ]
Added variable gotoxy::$8 to live range equivalence class [ gotoxy::$8 ]
Added variable gotoxy::$9 to live range equivalence class [ gotoxy::$9 ]
Added variable gotoxy::line_offset#0 to live range equivalence class [ gotoxy::line_offset#0 ]
Added variable gotoxy::$5 to live range equivalence class [ gotoxy::$5 ]
Added variable gotoxy::$6 to live range equivalence class [ gotoxy::$6 ]
Added variable printf_str::c#1 to live range equivalence class [ printf_str::c#1 ]
Added variable printf_number_buffer::buffer_sign#0 to live range equivalence class [ printf_number_buffer::buffer_sign#0 ]
Added variable utoa::$11 to live range equivalence class [ utoa::$11 ]
Added variable utoa::buffer#3 to live range equivalence class [ utoa::buffer#3 ]
Added variable utoa::$10 to live range equivalence class [ utoa::$10 ]
Added variable utoa::digit_value#0 to live range equivalence class [ utoa::digit_value#0 ]
Added variable utoa_append::buffer#0 to live range equivalence class [ utoa_append::buffer#0 ]
Added variable utoa_append::sub#0 to live range equivalence class [ utoa_append::sub#0 ]
Added variable utoa_append::return#0 to live range equivalence class [ utoa_append::return#0 ]
Added variable memcpy::src_end#0 to live range equivalence class [ memcpy::src_end#0 ]
Added variable memset::end#0 to live range equivalence class [ memset::end#0 ]
Added variable printf_buffer to live range equivalence class [ printf_buffer ]
Complete equivalence classes
[ conio_c64_init::line#2 conio_c64_init::line#0 ]
[ main::bbs#2 main::bbs#1 ]
[ gotoxy::y#4 gotoxy::y#2 ]
[ printf_string::str#2 printf_string::str#0 printf_string::str#1 ]
[ printf_str::putc#7 ]
[ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ conio_cursor_x ]
[ conio_cursor_y ]
[ conio_line_text ]
[ conio_line_color ]
[ cputc::c#0 ]
[ printf_uint::uvalue#0 ]
[ gotoxy::$7 ]
[ gotoxy::$8 ]
[ gotoxy::$9 ]
[ gotoxy::line_offset#0 ]
[ gotoxy::$5 ]
[ gotoxy::$6 ]
[ printf_str::c#1 ]
[ printf_number_buffer::buffer_sign#0 ]
[ utoa::$11 ]
[ utoa::buffer#3 ]
[ utoa::$10 ]
[ utoa::digit_value#0 ]
[ utoa_append::buffer#0 ]
[ utoa_append::sub#0 ]
[ utoa_append::return#0 ]
[ memcpy::src_end#0 ]
[ memset::end#0 ]
[ printf_buffer ]
Allocated zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated zp[2]:6 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
Allocated zp[2]:8 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ]
Allocated zp[2]:11 [ utoa_append::sub#0 ]
Allocated zp[2]:13 [ memset::end#0 ]
Allocated zp[1]:15 [ memset::c#4 ]
Allocated zp[2]:16 [ memcpy::src_end#0 ]
Allocated zp[2]:18 [ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ]
Allocated zp[1]:20 [ printf_str::c#1 ]
Allocated zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
Allocated zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
Allocated zp[1]:25 [ utoa::digit#2 utoa::digit#1 ]
Allocated zp[1]:26 [ utoa::$10 ]
Allocated zp[2]:27 [ utoa_append::return#0 ]
Allocated zp[1]:29 [ utoa::started#2 utoa::started#4 ]
Allocated zp[2]:30 [ utoa_append::buffer#0 ]
Allocated zp[2]:32 [ utoa::digit_value#0 ]
Allocated zp[1]:34 [ conio_cursor_y ]
Allocated zp[2]:35 [ conio_line_color ]
Allocated zp[2]:37 [ conio_line_text ]
Allocated zp[1]:39 [ cputc::c#0 ]
Allocated zp[1]:40 [ conio_cursor_x ]
Allocated zp[1]:41 [ utoa::$11 ]
Allocated zp[2]:42 [ utoa::buffer#3 ]
Allocated zp[1]:44 [ printf_number_buffer::buffer_sign#0 ]
Allocated zp[2]:45 [ printf_string::str#2 printf_string::str#0 printf_string::str#1 ]
Allocated zp[2]:47 [ printf_uint::uvalue#0 ]
Allocated zp[2]:49 [ main::bbs#2 main::bbs#1 ]
Allocated zp[2]:51 [ gotoxy::$8 ]
Allocated zp[2]:53 [ gotoxy::$9 ]
Allocated zp[2]:55 [ gotoxy::$5 ]
Allocated zp[2]:57 [ gotoxy::$6 ]
Allocated zp[2]:59 [ gotoxy::$7 ]
Allocated zp[1]:61 [ gotoxy::y#4 gotoxy::y#2 ]
Allocated zp[2]:62 [ gotoxy::line_offset#0 ]
Allocated zp[1]:64 [ conio_c64_init::line#2 conio_c64_init::line#0 ]
Allocated zp[2]:65 [ printf_str::putc#7 ]
Allocated zp[2]:67 [ memcpy::source#2 ]
Allocated zp[2]:69 [ memcpy::destination#2 ]
Allocated zp[2]:71 [ memset::str#3 ]
Allocated mem[12] [ printf_buffer ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] conio_cursor_x = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] conio_cursor_y = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] conio_line_text = DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] conio_line_color = COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { }  ) always clobbers reg byte a reg byte x 
Statement [18] conio_line_text[conio_cursor_x] = cputc::c#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte y 
Statement [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a reg byte y 
Statement [21] if(conio_cursor_x!=$28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [27] *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [29] if((char *)0!=*((char **)main::bbs#2)) goto main::@2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [31] printf_string::str#0 = *((char **)main::bbs#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#0 printf_buffer ] { { printf_string::str#0 = printf_string::str#2 } }  ) always clobbers reg byte a reg byte y 
Statement [35] printf_string::str#1 = ((char **)main::bbs#2)[OFFSET_STRUCT_BBS_HOST_NAME] [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#1 printf_buffer ] { { printf_string::str#1 = printf_string::str#2 } }  ) always clobbers reg byte a reg byte y 
Statement [39] printf_uint::uvalue#0 = ((unsigned int *)main::bbs#2)[OFFSET_STRUCT_BBS_PORT_NUMBER] [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_uint::uvalue#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_uint::uvalue#0 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [43] main::bbs#1 = main::bbs#2 + SIZEOF_STRUCT_BBS [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#1 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [47] conio_cursor_x = gotoxy::x#2 [ conio_cursor_x gotoxy::y#4 ] ( gotoxy:14 [ conio_cursor_x gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:61 [ gotoxy::y#4 gotoxy::y#2 ]
Statement [49] gotoxy::$7 = (unsigned int)gotoxy::y#4 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [50] gotoxy::$8 = gotoxy::$7 << 2 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [51] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [52] gotoxy::line_offset#0 = gotoxy::$9 << 3 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [53] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [54] conio_line_text = gotoxy::$5 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [55] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [56] conio_line_color = gotoxy::$6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [58] conio_line_text = conio_line_text + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [59] conio_line_color = conio_line_color + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [60] conio_cursor_x = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [65] printf_str::s#2 = printf_string::str#2 [ printf_str::s#2 ] ( main:7::printf_string:32 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#2 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#0 } }  main:7::printf_string:36 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#2 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#1 } }  ) always clobbers reg byte a 
Statement [70] printf_str::c#1 = *printf_str::s#6 [ printf_str::s#6 printf_str::c#1 ] ( main:7::printf_str:34 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { }  main:7::printf_str:38 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { }  main:7::printf_str:42 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { }  main:7::printf_string:32::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#0 } }  main:7::printf_string:36::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#1 } }  main:7::printf_uint:40::printf_number_buffer:82::printf_str:124 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#6 printf_str::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement [75] callexecute *printf_str::putc#7  [ printf_str::s#0 ] ( main:7::printf_str:34 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:38 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:42 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { }  main:7::printf_string:32::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#0 } }  main:7::printf_string:36::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#1 } }  main:7::printf_uint:40::printf_number_buffer:82::printf_str:124 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { }  ) always clobbers reg byte a reg byte x reg byte y 
Statement sideeffect stackpullpadding(1) always clobbers reg byte a 
Statement [78] *((char *)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#0 printf_buffer ] ( main:7::printf_uint:40 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#0 printf_buffer ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [79] utoa::value#1 = printf_uint::uvalue#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] ( main:7::printf_uint:40 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [84] if(conio_cursor_y!=$19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [93] conio_line_text = conio_line_text - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [94] conio_line_color = conio_line_color - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [101] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a reg byte y 
Statement [102] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [103] *utoa::buffer#3 = 0 [ printf_buffer ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a reg byte y 
Statement [105] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:25 [ utoa::digit#2 utoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:29 [ utoa::started#2 utoa::started#4 ]
Statement [106] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [108] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [111] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [112] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [113] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [115] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [116] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement sideeffect stackpullpadding(1) always clobbers reg byte a 
Statement [127] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  ) always clobbers reg byte a 
Statement [128] memcpy::src#4 = (char *)memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  ) always clobbers reg byte a 
Statement [129] memcpy::dst#4 = (char *)memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  ) always clobbers reg byte a 
Statement [131] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  ) always clobbers reg byte a 
Statement [133] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [137] memset::end#0 = (char *)memset::str#3 + $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:15 [ memset::c#4 ]
Statement [138] memset::dst#4 = (char *)memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  ) always clobbers reg byte a 
Statement [140] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [142] *memset::dst#2 = memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:15 [ memset::c#4 ]
Statement [146] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:7::printf_uint:40::utoa:80::utoa_append:114 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ]
Statement [147] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( main:7::printf_uint:40::utoa:80::utoa_append:114 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:25 [ utoa::digit#2 utoa::digit#1 ]
Statement [150] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:7::printf_uint:40::utoa:80::utoa_append:114 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [1] conio_cursor_x = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] conio_cursor_y = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] conio_line_text = DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] conio_line_color = COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { }  ) always clobbers reg byte a reg byte x 
Statement [18] conio_line_text[conio_cursor_x] = cputc::c#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte y 
Statement [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a reg byte y 
Statement [21] if(conio_cursor_x!=$28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [27] *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { }  ) always clobbers reg byte a 
Statement [29] if((char *)0!=*((char **)main::bbs#2)) goto main::@2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [31] printf_string::str#0 = *((char **)main::bbs#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#0 printf_buffer ] { { printf_string::str#0 = printf_string::str#2 } }  ) always clobbers reg byte a reg byte y 
Statement [35] printf_string::str#1 = ((char **)main::bbs#2)[OFFSET_STRUCT_BBS_HOST_NAME] [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_string::str#1 printf_buffer ] { { printf_string::str#1 = printf_string::str#2 } }  ) always clobbers reg byte a reg byte y 
Statement [39] printf_uint::uvalue#0 = ((unsigned int *)main::bbs#2)[OFFSET_STRUCT_BBS_PORT_NUMBER] [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_uint::uvalue#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_uint::uvalue#0 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [43] main::bbs#1 = main::bbs#2 + SIZEOF_STRUCT_BBS [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#1 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [47] conio_cursor_x = gotoxy::x#2 [ conio_cursor_x gotoxy::y#4 ] ( gotoxy:14 [ conio_cursor_x gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [49] gotoxy::$7 = (unsigned int)gotoxy::y#4 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [50] gotoxy::$8 = gotoxy::$7 << 2 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [51] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [52] gotoxy::line_offset#0 = gotoxy::$9 << 3 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [53] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [54] conio_line_text = gotoxy::$5 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [55] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [56] conio_line_color = gotoxy::$6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( gotoxy:14 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [58] conio_line_text = conio_line_text + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [59] conio_line_color = conio_line_color + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26 [ main::bbs#2 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [60] conio_cursor_x = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [65] printf_str::s#2 = printf_string::str#2 [ printf_str::s#2 ] ( main:7::printf_string:32 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#2 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#0 } }  main:7::printf_string:36 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#2 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#1 } }  ) always clobbers reg byte a 
Statement [70] printf_str::c#1 = *printf_str::s#6 [ printf_str::s#6 printf_str::c#1 ] ( main:7::printf_str:34 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { }  main:7::printf_str:38 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { }  main:7::printf_str:42 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { }  main:7::printf_string:32::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#0 } }  main:7::printf_string:36::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#6 printf_str::c#1 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#1 } }  main:7::printf_uint:40::printf_number_buffer:82::printf_str:124 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#6 printf_str::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement [75] callexecute *printf_str::putc#7  [ printf_str::s#0 ] ( main:7::printf_str:34 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:38 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:42 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { }  main:7::printf_string:32::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#0 } }  main:7::printf_string:36::printf_str:66 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::bbs#2 printf_buffer printf_str::s#0 ] { { printf_str::s#2 = printf_str::s#7 printf_string::str#2 printf_string::str#1 } }  main:7::printf_uint:40::printf_number_buffer:82::printf_str:124 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { }  ) always clobbers reg byte a reg byte x reg byte y 
Statement sideeffect stackpullpadding(1) always clobbers reg byte a 
Statement [78] *((char *)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#0 printf_buffer ] ( main:7::printf_uint:40 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#0 printf_buffer ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [79] utoa::value#1 = printf_uint::uvalue#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] ( main:7::printf_uint:40 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [84] if(conio_cursor_y!=$19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [93] conio_line_text = conio_line_text - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [94] conio_line_color = conio_line_color - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  cputln:26::cscroll:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [101] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a reg byte y 
Statement [102] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [103] *utoa::buffer#3 = 0 [ printf_buffer ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a reg byte y 
Statement [105] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [106] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [108] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement [111] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [112] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [113] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [115] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [116] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:7::printf_uint:40::utoa:80 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { utoa::value#1 = printf_uint::uvalue#0 } }  ) always clobbers reg byte a 
Statement sideeffect stackpullpadding(1) always clobbers reg byte a 
Statement [127] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  ) always clobbers reg byte a 
Statement [128] memcpy::src#4 = (char *)memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  ) always clobbers reg byte a 
Statement [129] memcpy::dst#4 = (char *)memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  ) always clobbers reg byte a 
Statement [131] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  ) always clobbers reg byte a 
Statement [133] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:86 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:86 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:23::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  cputln:26::cscroll:62::memcpy:88 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memcpy:88 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [137] memset::end#0 = (char *)memset::str#3 + $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  ) always clobbers reg byte a 
Statement [138] memset::dst#4 = (char *)memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  ) always clobbers reg byte a 
Statement [140] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [142] *memset::dst#2 = memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:90 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:90 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:23::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:23::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  cputln:26::cscroll:62::memset:92 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:40::printf_number_buffer:82::cputc:121::cputln:26::cscroll:62::memset:92 [ main::bbs#2 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [146] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:7::printf_uint:40::utoa:80::utoa_append:114 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [147] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( main:7::printf_uint:40::utoa:80::utoa_append:114 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [150] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:7::printf_uint:40::utoa:80::utoa_append:114 [ main::bbs#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { utoa::value#1 = printf_uint::uvalue#0 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Potential registers zp[1]:64 [ conio_c64_init::line#2 conio_c64_init::line#0 ] : zp[1]:64 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:49 [ main::bbs#2 main::bbs#1 ] : zp[2]:49 , 
Potential registers zp[1]:61 [ gotoxy::y#4 gotoxy::y#2 ] : zp[1]:61 , reg byte x , reg byte y , 
Potential registers zp[2]:45 [ printf_string::str#2 printf_string::str#0 printf_string::str#1 ] : zp[2]:45 , 
Potential registers zp[2]:65 [ printf_str::putc#7 ] : zp[2]:65 , 
Potential registers zp[2]:18 [ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ] : zp[2]:18 , 
Potential registers zp[1]:25 [ utoa::digit#2 utoa::digit#1 ] : zp[1]:25 , reg byte x , 
Potential registers zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] : zp[2]:23 , 
Potential registers zp[1]:29 [ utoa::started#2 utoa::started#4 ] : zp[1]:29 , reg byte x , reg byte y , 
Potential registers zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] : zp[2]:21 , 
Potential registers zp[2]:67 [ memcpy::source#2 ] : zp[2]:67 , 
Potential registers zp[2]:69 [ memcpy::destination#2 ] : zp[2]:69 , 
Potential registers zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] : zp[2]:4 , 
Potential registers zp[2]:8 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] : zp[2]:8 , 
Potential registers zp[2]:71 [ memset::str#3 ] : zp[2]:71 , 
Potential registers zp[1]:15 [ memset::c#4 ] : zp[1]:15 , reg byte x , 
Potential registers zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] : zp[2]:2 , 
Potential registers zp[2]:6 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] : zp[2]:6 , 
Potential registers zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ] : zp[1]:10 , reg byte x , reg byte y , 
Potential registers zp[1]:40 [ conio_cursor_x ] : zp[1]:40 , 
Potential registers zp[1]:34 [ conio_cursor_y ] : zp[1]:34 , 
Potential registers zp[2]:37 [ conio_line_text ] : zp[2]:37 , 
Potential registers zp[2]:35 [ conio_line_color ] : zp[2]:35 , 
Potential registers zp[1]:39 [ cputc::c#0 ] : zp[1]:39 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:47 [ printf_uint::uvalue#0 ] : zp[2]:47 , 
Potential registers zp[2]:59 [ gotoxy::$7 ] : zp[2]:59 , 
Potential registers zp[2]:51 [ gotoxy::$8 ] : zp[2]:51 , 
Potential registers zp[2]:53 [ gotoxy::$9 ] : zp[2]:53 , 
Potential registers zp[2]:62 [ gotoxy::line_offset#0 ] : zp[2]:62 , 
Potential registers zp[2]:55 [ gotoxy::$5 ] : zp[2]:55 , 
Potential registers zp[2]:57 [ gotoxy::$6 ] : zp[2]:57 , 
Potential registers zp[1]:20 [ printf_str::c#1 ] : zp[1]:20 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:44 [ printf_number_buffer::buffer_sign#0 ] : zp[1]:44 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:41 [ utoa::$11 ] : zp[1]:41 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:42 [ utoa::buffer#3 ] : zp[2]:42 , 
Potential registers zp[1]:26 [ utoa::$10 ] : zp[1]:26 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:32 [ utoa::digit_value#0 ] : zp[2]:32 , 
Potential registers zp[2]:30 [ utoa_append::buffer#0 ] : zp[2]:30 , 
Potential registers zp[2]:11 [ utoa_append::sub#0 ] : zp[2]:11 , 
Potential registers zp[2]:27 [ utoa_append::return#0 ] : zp[2]:27 , 
Potential registers zp[2]:16 [ memcpy::src_end#0 ] : zp[2]:16 , 
Potential registers zp[2]:13 [ memset::end#0 ] : zp[2]:13 , 
Potential registers mem[12] [ printf_buffer ] : mem[12] , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy] 30,125,000,004.25: zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] 20,233,333,337.67: zp[2]:8 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] 1,262,500,000.25: zp[2]:16 [ memcpy::src_end#0 ] 0: zp[2]:67 [ memcpy::source#2 ] 0: zp[2]:69 [ memcpy::destination#2 ] 
Uplift Scope [utoa_append] 25,005,500,003.5: zp[2]:6 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] 20,005,000,002.5: zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ] 3,333,500,000.5: zp[2]:11 [ utoa_append::sub#0 ] 2,000,002: zp[2]:27 [ utoa_append::return#0 ] 1,375,000.25: zp[2]:30 [ utoa_append::buffer#0 ] 
Uplift Scope [memset] 33,566,666,672.33: zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] 1,683,333,333.67: zp[2]:13 [ memset::end#0 ] 1,428,571,428.71: zp[1]:15 [ memset::c#4 ] 0: zp[2]:71 [ memset::str#3 ] 
Uplift Scope [printf_str] 25,153,007: zp[2]:18 [ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ] 10,000,001: zp[1]:20 [ printf_str::c#1 ] 0: zp[2]:65 [ printf_str::putc#7 ] 
Uplift Scope [utoa] 3,787,146.79: zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] 3,078,361.36: zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] 2,285,716.57: zp[1]:25 [ utoa::digit#2 utoa::digit#1 ] 2,000,002: zp[1]:26 [ utoa::$10 ] 1,500,001.5: zp[1]:29 [ utoa::started#2 utoa::started#4 ] 600,000.6: zp[2]:32 [ utoa::digit_value#0 ] 20,002: zp[1]:41 [ utoa::$11 ] 20,002: zp[2]:42 [ utoa::buffer#3 ] 
Uplift Scope [] 426,668.11: zp[1]:34 [ conio_cursor_y ] 329,852.36: zp[2]:35 [ conio_line_color ] 320,291.42: zp[2]:37 [ conio_line_text ] 25,425.58: zp[1]:40 [ conio_cursor_x ] 0: mem[12] [ printf_buffer ] 
Uplift Scope [cputc] 150,001.5: zp[1]:39 [ cputc::c#0 ] 
Uplift Scope [printf_number_buffer] 7,001: zp[1]:44 [ printf_number_buffer::buffer_sign#0 ] 
Uplift Scope [printf_string] 1,607: zp[2]:45 [ printf_string::str#2 printf_string::str#0 printf_string::str#1 ] 
Uplift Scope [gotoxy] 202: zp[2]:51 [ gotoxy::$8 ] 202: zp[2]:53 [ gotoxy::$9 ] 202: zp[2]:55 [ gotoxy::$5 ] 202: zp[2]:57 [ gotoxy::$6 ] 151.5: zp[2]:59 [ gotoxy::$7 ] 138.33: zp[1]:61 [ gotoxy::y#4 gotoxy::y#2 ] 101: zp[2]:62 [ gotoxy::line_offset#0 ] 
Uplift Scope [printf_uint] 367.33: zp[2]:47 [ printf_uint::uvalue#0 ] 
Uplift Scope [main] 216.43: zp[2]:49 [ main::bbs#2 main::bbs#1 ] 
Uplift Scope [conio_c64_init] 33: zp[1]:64 [ conio_c64_init::line#2 conio_c64_init::line#0 ] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [MOS6569_VICII] 
Uplift Scope [MOS6581_SID] 
Uplift Scope [RADIX] 
Uplift Scope [cputln] 
Uplift Scope [cscroll] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_format_string] 
Uplift Scope [bbs] 
Uplift Scope [__start] 

Uplifting [memcpy] best 96253 combination zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] zp[2]:8 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] zp[2]:16 [ memcpy::src_end#0 ] zp[2]:67 [ memcpy::source#2 ] zp[2]:69 [ memcpy::destination#2 ] 
Uplifting [utoa_append] best 90250 combination zp[2]:6 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ] zp[2]:11 [ utoa_append::sub#0 ] zp[2]:27 [ utoa_append::return#0 ] zp[2]:30 [ utoa_append::buffer#0 ] 
Uplifting [memset] best 90144 combination zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] zp[2]:13 [ memset::end#0 ] reg byte x [ memset::c#4 ] zp[2]:71 [ memset::str#3 ] 
Uplifting [printf_str] best 89444 combination zp[2]:18 [ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ] reg byte a [ printf_str::c#1 ] zp[2]:65 [ printf_str::putc#7 ] 
Uplifting [utoa] best 88338 combination zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] zp[1]:25 [ utoa::digit#2 utoa::digit#1 ] reg byte a [ utoa::$10 ] reg byte x [ utoa::started#2 utoa::started#4 ] zp[2]:32 [ utoa::digit_value#0 ] reg byte x [ utoa::$11 ] zp[2]:42 [ utoa::buffer#3 ] 
Uplifting [] best 88338 combination zp[1]:34 [ conio_cursor_y ] zp[2]:35 [ conio_line_color ] zp[2]:37 [ conio_line_text ] zp[1]:40 [ conio_cursor_x ] mem[12] [ printf_buffer ] 
Uplifting [cputc] best 88329 combination reg byte a [ cputc::c#0 ] 
Uplifting [printf_number_buffer] best 88322 combination reg byte a [ printf_number_buffer::buffer_sign#0 ] 
Uplifting [printf_string] best 88322 combination zp[2]:45 [ printf_string::str#2 printf_string::str#0 printf_string::str#1 ] 
Uplifting [gotoxy] best 88309 combination zp[2]:51 [ gotoxy::$8 ] zp[2]:53 [ gotoxy::$9 ] zp[2]:55 [ gotoxy::$5 ] zp[2]:57 [ gotoxy::$6 ] zp[2]:59 [ gotoxy::$7 ] reg byte x [ gotoxy::y#4 gotoxy::y#2 ] zp[2]:62 [ gotoxy::line_offset#0 ] 
Uplifting [printf_uint] best 88309 combination zp[2]:47 [ printf_uint::uvalue#0 ] 
Uplifting [main] best 88309 combination zp[2]:49 [ main::bbs#2 main::bbs#1 ] 
Uplifting [conio_c64_init] best 88297 combination reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ] 
Uplifting [MOS6526_CIA] best 88297 combination 
Uplifting [MOS6569_VICII] best 88297 combination 
Uplifting [MOS6581_SID] best 88297 combination 
Uplifting [RADIX] best 88297 combination 
Uplifting [cputln] best 88297 combination 
Uplifting [cscroll] best 88297 combination 
Uplifting [printf_format_number] best 88297 combination 
Uplifting [printf_buffer_number] best 88297 combination 
Uplifting [printf_format_string] best 88297 combination 
Uplifting [bbs] best 88297 combination 
Uplifting [__start] best 88297 combination 
Attempting to uplift remaining variables inzp[1]:25 [ utoa::digit#2 utoa::digit#1 ]
Uplifting [utoa] best 88297 combination zp[1]:25 [ utoa::digit#2 utoa::digit#1 ] 
Attempting to uplift remaining variables inzp[1]:34 [ conio_cursor_y ]
Uplifting [] best 88297 combination zp[1]:34 [ conio_cursor_y ] 
Attempting to uplift remaining variables inzp[1]:40 [ conio_cursor_x ]
Uplifting [] best 88297 combination zp[1]:40 [ conio_cursor_x ] 
Coalescing zero page register [ zp[2]:45 [ printf_string::str#2 printf_string::str#0 printf_string::str#1 ] ] with [ zp[2]:18 [ printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] ] with [ zp[2]:6 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] with [ zp[2]:47 [ printf_uint::uvalue#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 ] ] with [ zp[2]:27 [ utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] ] with [ zp[2]:42 [ utoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 ] ] with [ zp[2]:30 [ utoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:67 [ memcpy::source#2 ] ] with [ zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:69 [ memcpy::destination#2 ] ] with [ zp[2]:8 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:71 [ memset::str#3 ] ] with [ zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ gotoxy::$7 ] ] with [ zp[2]:53 [ gotoxy::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:62 [ gotoxy::line_offset#0 ] ] with [ zp[2]:57 [ gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[2]:32 [ utoa::digit_value#0 ] ] with [ zp[2]:11 [ utoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:59 [ gotoxy::$7 gotoxy::$9 ] ] with [ zp[2]:62 [ gotoxy::line_offset#0 gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[2]:23 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 utoa_append::return#0 ] ] with [ zp[2]:45 [ printf_string::str#2 printf_string::str#0 printf_string::str#1 printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ] ]
Coalescing zero page register [ zp[2]:21 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ] with [ zp[2]:65 [ printf_str::putc#7 ] ]
Coalescing zero page register [ zp[2]:71 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ] ] with [ zp[2]:67 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ]
Coalescing zero page register [ zp[2]:13 [ memset::end#0 ] ] with [ zp[2]:69 [ memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ]
Allocated (was zp[2]:71) zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated (was zp[2]:23) zp[2]:4 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 utoa_append::return#0 printf_string::str#2 printf_string::str#0 printf_string::str#1 printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ]
Allocated (was zp[2]:13) zp[2]:6 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated (was zp[2]:32) zp[2]:8 [ utoa::digit_value#0 utoa_append::sub#0 ]
Allocated (was zp[2]:16) zp[2]:10 [ memcpy::src_end#0 ]
Allocated (was zp[2]:21) zp[2]:12 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 printf_str::putc#7 ]
Allocated (was zp[1]:25) zp[1]:14 [ utoa::digit#2 utoa::digit#1 ]
Allocated (was zp[1]:34) zp[1]:15 [ conio_cursor_y ]
Allocated (was zp[2]:35) zp[2]:16 [ conio_line_color ]
Allocated (was zp[2]:37) zp[2]:18 [ conio_line_text ]
Allocated (was zp[1]:40) zp[1]:20 [ conio_cursor_x ]
Allocated (was zp[2]:59) zp[2]:21 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
Allocated (was zp[2]:49) zp[2]:23 [ main::bbs#2 main::bbs#1 ]
Allocated (was zp[2]:51) zp[2]:25 [ gotoxy::$8 ]
Allocated (was zp[2]:55) zp[2]:27 [ gotoxy::$5 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Test initialization of array of struct with char* elements
  // Upstart
  // Commodore 64 PRG executable file
.file [name="weeip-bbslist.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  .const SIZEOF_STRUCT_BBS = 6
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
  .const OFFSET_STRUCT_BBS_HOST_NAME = 2
  .const OFFSET_STRUCT_BBS_PORT_NUMBER = 4
  .const STACK_BASE = $103
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  /// The VIC-II MOS 6567/6569
  .label VICII = $d000
  /// Color Ram
  .label COLORRAM = $d800
  /// Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $14
  // The current cursor y-position
  .label conio_cursor_y = $f
  // The current text cursor line start
  .label conio_line_text = $12
  // The current color cursor line start
  .label conio_line_color = $10
.segment Code
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] conio_cursor_y = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] call conio_c64_init -- call_phi_near 
    jsr conio_c64_init
    // [6] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [7] call main -- call_phi_near 
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [8] return 
    rts
}
  // conio_c64_init
// Set initial cursor position
conio_c64_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    // [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE -- vbuxx=_deref_pbuc1 
    ldx.z BASIC_CURSOR_LINE
    // [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b2_from_conio_c64_init
    // [12] phi from conio_c64_init to conio_c64_init::@1 [phi:conio_c64_init->conio_c64_init::@1]
  __b1_from_conio_c64_init:
    // [12] phi conio_c64_init::line#2 = $19-1 [phi:conio_c64_init->conio_c64_init::@1#0] -- vbuxx=vbuc1 
    ldx #$19-1
    jmp __b1
    // [11] phi from conio_c64_init to conio_c64_init::@2 [phi:conio_c64_init->conio_c64_init::@2]
  __b2_from_conio_c64_init:
    jmp __b2
    // conio_c64_init::@2
  __b2:
    // [12] phi from conio_c64_init::@2 to conio_c64_init::@1 [phi:conio_c64_init::@2->conio_c64_init::@1]
  __b1_from___b2:
    // [12] phi conio_c64_init::line#2 = conio_c64_init::line#0 [phi:conio_c64_init::@2->conio_c64_init::@1#0] -- register_copy 
    jmp __b1
    // conio_c64_init::@1
  __b1:
    // [13] gotoxy::y#2 = conio_c64_init::line#2
    // [14] call gotoxy -- call_phi_near 
    jsr gotoxy
    jmp __breturn
    // conio_c64_init::@return
  __breturn:
    // [15] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// void cputc(__register(A) char c)
cputc: {
    .const OFFSET_STACK_C = 0
    // [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) -- vbuaa=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_C,x
    // [17] if(cputc::c#0==' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [18] conio_line_text[conio_cursor_x] = cputc::c#0 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [20] conio_cursor_x = ++ conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [21] if(conio_cursor_x!=$28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [22] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [23] call cputln -- call_phi_near 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [24] return 
    rts
    // [25] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [26] call cputln -- call_phi_near 
    jsr cputln
    jmp __breturn
}
  // main
main: {
    .label bbs = $17
    // [27] *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17 -- _deref_pbuc1=vbuc2 
    lda #$17
    sta VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY
    // [28] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    // [28] phi main::bbs#2 = bbs_list [phi:main->main::@1#0] -- pssz1=pssc1 
    lda #<bbs_list
    sta.z bbs
    lda #>bbs_list
    sta.z bbs+1
    jmp __b1
    // main::@1
  __b1:
    // [29] if((char *)0!=*((char **)main::bbs#2)) goto main::@2 -- pbuc1_neq__deref_qbuz1_then_la1 
    ldy #0
    lda #<0
    cmp (bbs),y
    bne __b2
    iny
    lda #>0
    cmp (bbs),y
    bne __b2
    jmp __breturn
    // main::@return
  __breturn:
    // [30] return 
    rts
    // main::@2
  __b2:
    // [31] printf_string::str#0 = *((char **)main::bbs#2) -- pbuz1=_deref_qbuz2 
    ldy #0
    lda (bbs),y
    sta.z printf_string.str
    iny
    lda (bbs),y
    sta.z printf_string.str+1
    // [32] call printf_string
    // [64] phi from main::@2 to printf_string [phi:main::@2->printf_string]
  printf_string_from___b2:
    // [64] phi printf_string::str#2 = printf_string::str#0 [phi:main::@2->printf_string#0] -- call_phi_near 
    jsr printf_string
    // [33] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [34] call printf_str
    // [68] phi from main::@3 to printf_str [phi:main::@3->printf_str]
  printf_str_from___b3:
    // [68] phi printf_str::putc#7 = &cputc [phi:main::@3->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = main::s [phi:main::@3->printf_str#1] -- call_phi_near 
    lda #<s
    sta.z printf_str.s
    lda #>s
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b4
    // main::@4
  __b4:
    // [35] printf_string::str#1 = ((char **)main::bbs#2)[OFFSET_STRUCT_BBS_HOST_NAME] -- pbuz1=qbuz2_derefidx_vbuc1 
    ldy #OFFSET_STRUCT_BBS_HOST_NAME
    lda (bbs),y
    sta.z printf_string.str
    iny
    lda (bbs),y
    sta.z printf_string.str+1
    // [36] call printf_string
    // [64] phi from main::@4 to printf_string [phi:main::@4->printf_string]
  printf_string_from___b4:
    // [64] phi printf_string::str#2 = printf_string::str#1 [phi:main::@4->printf_string#0] -- call_phi_near 
    jsr printf_string
    // [37] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [38] call printf_str
    // [68] phi from main::@5 to printf_str [phi:main::@5->printf_str]
  printf_str_from___b5:
    // [68] phi printf_str::putc#7 = &cputc [phi:main::@5->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = main::s [phi:main::@5->printf_str#1] -- call_phi_near 
    lda #<s
    sta.z printf_str.s
    lda #>s
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b6
    // main::@6
  __b6:
    // [39] printf_uint::uvalue#0 = ((unsigned int *)main::bbs#2)[OFFSET_STRUCT_BBS_PORT_NUMBER] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #OFFSET_STRUCT_BBS_PORT_NUMBER
    lda (bbs),y
    sta.z printf_uint.uvalue
    iny
    lda (bbs),y
    sta.z printf_uint.uvalue+1
    // [40] call printf_uint
    // [77] phi from main::@6 to printf_uint [phi:main::@6->printf_uint] -- call_phi_near 
  printf_uint_from___b6:
    jsr printf_uint
    // [41] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
  __b7_from___b6:
    jmp __b7
    // main::@7
  __b7:
    // [42] call printf_str
    // [68] phi from main::@7 to printf_str [phi:main::@7->printf_str]
  printf_str_from___b7:
    // [68] phi printf_str::putc#7 = &cputc [phi:main::@7->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = main::s2 [phi:main::@7->printf_str#1] -- call_phi_near 
    lda #<s2
    sta.z printf_str.s
    lda #>s2
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b8
    // main::@8
  __b8:
    // [43] main::bbs#1 = main::bbs#2 + SIZEOF_STRUCT_BBS -- pssz1=pssz1_plus_vbuc1 
    lda #SIZEOF_STRUCT_BBS
    clc
    adc.z bbs
    sta.z bbs
    bcc !+
    inc.z bbs+1
  !:
    // [28] phi from main::@8 to main::@1 [phi:main::@8->main::@1]
  __b1_from___b8:
    // [28] phi main::bbs#2 = main::bbs#1 [phi:main::@8->main::@1#0] -- register_copy 
    jmp __b1
  .segment Data
    s: .text " "
    .byte 0
    s2: .text @"\n"
    .byte 0
}
.segment Code
  // gotoxy
// Set the cursor to the specified position
// void gotoxy(char x, __register(X) char y)
gotoxy: {
    .const x = 0
    .label __5 = $1b
    .label __6 = $15
    .label __7 = $15
    .label line_offset = $15
    .label __8 = $19
    .label __9 = $15
    // [44] if(gotoxy::y#2<$19+1) goto gotoxy::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19+1
    bcc __b3_from_gotoxy
    // [46] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [46] phi gotoxy::y#4 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // [45] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
  __b3_from_gotoxy:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [46] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
  __b1_from___b3:
    // [46] phi gotoxy::y#4 = gotoxy::y#2 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    jmp __b2
    // gotoxy::@2
  __b2:
    // [47] conio_cursor_x = gotoxy::x#2 -- vbuz1=vbuc1 
    lda #x
    sta.z conio_cursor_x
    // [48] conio_cursor_y = gotoxy::y#4 -- vbuz1=vbuxx 
    stx.z conio_cursor_y
    // [49] gotoxy::$7 = (unsigned int)gotoxy::y#4 -- vwuz1=_word_vbuxx 
    txa
    sta.z __7
    lda #0
    sta.z __7+1
    // [50] gotoxy::$8 = gotoxy::$7 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [51] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    clc
    lda.z __9
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [52] gotoxy::line_offset#0 = gotoxy::$9 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // [53] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // [54] conio_line_text = gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // [55] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    lda.z __6
    clc
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // [56] conio_line_color = gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [57] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // [58] conio_line_text = conio_line_text + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [59] conio_line_color = conio_line_color + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [60] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [61] conio_cursor_y = ++ conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [62] call cscroll -- call_phi_near 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [63] return 
    rts
}
  // printf_string
// Print a string value using a specific format
// Handles justification and min length 
// void printf_string(void (*putc)(char), __zp(4) char *str, char format_min_length, char format_justify_left)
printf_string: {
    .label str = 4
    jmp __b1
    // printf_string::@1
  __b1:
    // [65] printf_str::s#2 = printf_string::str#2
    // [66] call printf_str
    // [68] phi from printf_string::@1 to printf_str [phi:printf_string::@1->printf_str]
  printf_str_from___b1:
    // [68] phi printf_str::putc#7 = &cputc [phi:printf_string::@1->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = printf_str::s#2 [phi:printf_string::@1->printf_str#1] -- call_phi_near 
    jsr printf_str
    jmp __breturn
    // printf_string::@return
  __breturn:
    // [67] return 
    rts
}
  // printf_str
/// Print a NUL-terminated string
// void printf_str(__zp($c) void (*putc)(char), __zp(4) const char *s)
printf_str: {
    .label s = 4
    .label putc = $c
    // [69] phi from printf_str printf_str::@2 to printf_str::@1 [phi:printf_str/printf_str::@2->printf_str::@1]
  __b1_from_printf_str:
  __b1_from___b2:
    // [69] phi printf_str::s#6 = printf_str::s#7 [phi:printf_str/printf_str::@2->printf_str::@1#0] -- register_copy 
    jmp __b1
    // printf_str::@1
  __b1:
    // [70] printf_str::c#1 = *printf_str::s#6 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [71] printf_str::s#0 = ++ printf_str::s#6 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [72] if(0!=printf_str::c#1) goto printf_str::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // printf_str::@return
  __breturn:
    // [73] return 
    rts
    // printf_str::@2
  __b2:
    // [74] stackpush(char) = printf_str::c#1 -- _stackpushbyte_=vbuaa 
    pha
    // [75] callexecute *printf_str::putc#7  -- call__deref_pprz1 
    jsr icall1
    // sideeffect stackpullpadding(1) -- _stackpullpadding_1 
    pla
    jmp __b1_from___b2
    // Outside Flow
  icall1:
    jmp (putc)
}
  // printf_uint
// Print an unsigned int using a specific format
// void printf_uint(void (*putc)(char), __zp(4) unsigned int uvalue, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_uint: {
    .label putc = cputc
    .label uvalue = 4
    jmp __b1
    // printf_uint::@1
  __b1:
    // [78] *((char *)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [79] utoa::value#1 = printf_uint::uvalue#0
    // [80] call utoa
  // Format number into buffer
    // [97] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa] -- call_phi_near 
  utoa_from___b1:
    jsr utoa
    jmp __b2
    // printf_uint::@2
  __b2:
    // [81] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer) -- vbuaa=_deref_pbuc1 
    lda printf_buffer
    // [82] call printf_number_buffer
  // Print using format
    // [118] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer] -- call_phi_near 
  printf_number_buffer_from___b2:
    jsr printf_number_buffer
    jmp __breturn
    // printf_uint::@return
  __breturn:
    // [83] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [84] if(conio_cursor_y!=$19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [85] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
  __b1_from_cscroll:
    jmp __b1
    // cscroll::@1
  __b1:
    // [86] call memcpy
    // [126] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
  memcpy_from___b1:
    // [126] phi memcpy::destination#2 = (void *)DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [126] phi memcpy::source#2 = (void *)DEFAULT_SCREEN+$28 [phi:cscroll::@1->memcpy#1] -- call_phi_near 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [87] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [88] call memcpy
    // [126] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
  memcpy_from___b2:
    // [126] phi memcpy::destination#2 = (void *)COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [126] phi memcpy::source#2 = (void *)COLORRAM+$28 [phi:cscroll::@2->memcpy#1] -- call_phi_near 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [89] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    // [90] call memset
    // [136] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
  memset_from___b3:
    // [136] phi memset::c#4 = ' ' [phi:cscroll::@3->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [136] phi memset::str#3 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28 [phi:cscroll::@3->memset#1] -- call_phi_near 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [91] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [92] call memset
    // [136] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
  memset_from___b4:
    // [136] phi memset::c#4 = LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuxx=vbuc1 
    ldx #LIGHT_BLUE
    // [136] phi memset::str#3 = (void *)COLORRAM+(unsigned int)$19*$28-$28 [phi:cscroll::@4->memset#1] -- call_phi_near 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b5
    // cscroll::@5
  __b5:
    // [93] conio_line_text = conio_line_text - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [94] conio_line_color = conio_line_color - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [95] conio_cursor_y = -- conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [96] return 
    rts
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// void utoa(__zp(4) unsigned int value, __zp($c) char *buffer, char radix)
utoa: {
    .const max_digits = 5
    .label digit_value = 8
    .label buffer = $c
    .label digit = $e
    .label value = 4
    // [98] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
  __b1_from_utoa:
    // [98] phi utoa::buffer#11 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [98] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [98] phi utoa::value#2 = utoa::value#1 [phi:utoa->utoa::@1#2] -- register_copy 
    // [98] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // utoa::@1
  __b1:
    // [99] if(utoa::digit#2<utoa::max_digits#1-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    jmp __b3
    // utoa::@3
  __b3:
    // [100] utoa::$11 = (char)utoa::value#2 -- vbuxx=_byte_vwuz1 
    ldx.z value
    // [101] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // [102] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [103] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa::@return
  __breturn:
    // [104] return 
    rts
    // utoa::@2
  __b2:
    // [105] utoa::$10 = utoa::digit#2 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [106] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // [107] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    jmp __b7
    // utoa::@7
  __b7:
    // [108] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [109] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
  __b4_from___b7:
    // [109] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [109] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [109] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    jmp __b4
    // utoa::@4
  __b4:
    // [110] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [98] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
  __b1_from___b4:
    // [98] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [98] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [98] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [98] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // [111] utoa_append::buffer#0 = utoa::buffer#11
    // [112] utoa_append::value#0 = utoa::value#2
    // [113] utoa_append::sub#0 = utoa::digit_value#0
    // [114] call utoa_append
    // [144] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append] -- call_phi_near 
  utoa_append_from___b5:
    jsr utoa_append
    // [115] utoa_append::return#0 = utoa_append::value#2
    jmp __b6
    // utoa::@6
  __b6:
    // [116] utoa::value#0 = utoa_append::return#0
    // [117] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [109] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
  __b4_from___b6:
    // [109] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [109] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [109] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// void printf_number_buffer(void (*putc)(char), __register(A) char buffer_sign, char *buffer_digits, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_number_buffer: {
    .label buffer_digits = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    jmp __b1
    // printf_number_buffer::@1
  __b1:
    // [119] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2_from___b1
    jmp __b3
    // printf_number_buffer::@3
  __b3:
    // [120] stackpush(char) = printf_number_buffer::buffer_sign#0 -- _stackpushbyte_=vbuaa 
    pha
    // [121] callexecute cputc  -- call_vprc1 
    jsr cputc
    // sideeffect stackpullpadding(1) -- _stackpullpadding_1 
    pla
    // [123] phi from printf_number_buffer::@1 printf_number_buffer::@3 to printf_number_buffer::@2 [phi:printf_number_buffer::@1/printf_number_buffer::@3->printf_number_buffer::@2]
  __b2_from___b1:
  __b2_from___b3:
    jmp __b2
    // printf_number_buffer::@2
  __b2:
    // [124] call printf_str
    // [68] phi from printf_number_buffer::@2 to printf_str [phi:printf_number_buffer::@2->printf_str]
  printf_str_from___b2:
    // [68] phi printf_str::putc#7 = printf_uint::putc#0 [phi:printf_number_buffer::@2->printf_str#0] -- pprz1=pprc1 
    lda #<printf_uint.putc
    sta.z printf_str.putc
    lda #>printf_uint.putc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = printf_number_buffer::buffer_digits#0 [phi:printf_number_buffer::@2->printf_str#1] -- call_phi_near 
    lda #<buffer_digits
    sta.z printf_str.s
    lda #>buffer_digits
    sta.z printf_str.s+1
    jsr printf_str
    jmp __breturn
    // printf_number_buffer::@return
  __breturn:
    // [125] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// void * memcpy(__zp(6) void *destination, __zp(2) void *source, unsigned int num)
memcpy: {
    .label src_end = $a
    .label dst = 6
    .label src = 2
    .label source = 2
    .label destination = 6
    // [127] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [128] memcpy::src#4 = (char *)memcpy::source#2
    // [129] memcpy::dst#4 = (char *)memcpy::destination#2
    // [130] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [130] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [130] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [131] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [132] return 
    rts
    // memcpy::@2
  __b2:
    // [133] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [134] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [135] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// void * memset(__zp(2) void *str, __register(X) char c, unsigned int num)
memset: {
    .label end = 6
    .label dst = 2
    .label str = 2
    jmp __b1
    // memset::@1
  __b1:
    // [137] memset::end#0 = (char *)memset::str#3 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [138] memset::dst#4 = (char *)memset::str#3
    // [139] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [139] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [140] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [141] return 
    rts
    // memset::@3
  __b3:
    // [142] *memset::dst#2 = memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // [143] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// __zp(4) unsigned int utoa_append(__zp($c) char *buffer, __zp(4) unsigned int value, __zp(8) unsigned int sub)
utoa_append: {
    .label buffer = $c
    .label value = 4
    .label sub = 8
    .label return = 4
    // [145] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
  __b1_from_utoa_append:
    // [145] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [145] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    jmp __b1
    // utoa_append::@1
  __b1:
    // [146] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    jmp __b3
    // utoa_append::@3
  __b3:
    // [147] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa_append::@return
  __breturn:
    // [148] return 
    rts
    // utoa_append::@2
  __b2:
    // [149] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // [150] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [145] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
  __b1_from___b2:
    // [145] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [145] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  bbs_list: .word bbs_name, bbs_host_name, $fa80, bbs_name1, bbs_host_name1, $fa80, bbs_name2, bbs_host_name2, $fa80, bbs_name3, bbs_host_name3, $17, bbs_name4, bbs_host_name4, $fa80, bbs_name5, bbs_host_name5, $1900, bbs_name6, bbs_host_name6, $17, bbs_name7, bbs_host_name7, $1900, bbs_name8, bbs_host_name8, $1900, bbs_name9, bbs_host_name9, $1900, bbs_name10, bbs_host_name10, $17, bbs_name11, bbs_host_name11, $1900, bbs_name12, bbs_host_name12, $8fc, bbs_name13, bbs_host_name13, $1900, bbs_name14, bbs_host_name14, $1900, bbs_name15, bbs_host_name15, $1966, bbs_name16, bbs_host_name8, $1904, bbs_name17, bbs_host_name1, $fa80, bbs_name18, bbs_host_name18, $1900, bbs_name19, bbs_host_name19, $1900, bbs_name20, bbs_host_name20, $1966, bbs_name21, bbs_host_name21, $1900, bbs_name22, bbs_host_name22, $1900, bbs_name23, bbs_host_name23, $fa80, bbs_name24, bbs_host_name24, $605, bbs_name25, bbs_host_name25, $fa80, 0, 0, 0
  bbs_name: .text "Boar's Head"
  .byte 0
  bbs_host_name: .text "byob.hopto.org"
  .byte 0
  bbs_name1: .text "RapidFire"
  .byte 0
  bbs_host_name1: .text "rapidfire.hopto.org"
  .byte 0
  bbs_name2: .text "Antidote by Triad"
  .byte 0
  bbs_host_name2: .text "antidote.hopto.org"
  .byte 0
  bbs_name3: .text "Wizards's Realm"
  .byte 0
  bbs_host_name3: .text "wizardsrealm.c64bbs.org"
  .byte 0
  bbs_name4: .text "The Hidden"
  .byte 0
  bbs_host_name4: .text "the-hidden.hopto.org"
  .byte 0
  bbs_name5: .text "Eaglewing BBS"
  .byte 0
  bbs_host_name5: .text "eagelbird.ddns.net"
  .byte 0
  bbs_name6: .text "Scorps Portal"
  .byte 0
  bbs_host_name6: .text "scorp.us.to"
  .byte 0
  bbs_name7: .text "My C=ult BBS"
  .byte 0
  bbs_host_name7: .text "maraud.dynalias.com"
  .byte 0
  bbs_name8: .text "Commodore Image"
  .byte 0
  bbs_host_name8: .text "cib.dyndns.org"
  .byte 0
  bbs_name9: .text "64 Vintag Remic"
  .byte 0
  bbs_host_name9: .text "64vintageremixbbs.dyndns.org"
  .byte 0
  bbs_name10: .text "Jamming Signal"
  .byte 0
  bbs_host_name10: .text "bbs.jammingsignal.com"
  .byte 0
  bbs_name11: .text "Centronian BBS"
  .byte 0
  bbs_host_name11: .text "centronian.servebeer.com"
  .byte 0
  bbs_name12: .text "Anrchy Undergrnd"
  .byte 0
  bbs_host_name12: .text "aubbs.dyndns.org"
  .byte 0
  bbs_name13: .text "The Oasis BBS"
  .byte 0
  bbs_host_name13: .text "oasisbbs.hopto.org"
  .byte 0
  bbs_name14: .text "The Disk Box"
  .byte 0
  bbs_host_name14: .text "bbs.thediskbox.com"
  .byte 0
  bbs_name15: .text "Cottonwood"
  .byte 0
  bbs_host_name15: .text "cottonwoodbbs.dyndns.org"
  .byte 0
  bbs_name16: .text "Wrong Number ]["
  .byte 0
  bbs_name17: .text "RabidFire"
  .byte 0
  bbs_name18: .text "Mad World"
  .byte 0
  bbs_host_name18: .text "madworld.bounceme.net"
  .byte 0
  bbs_name19: .text "Citadel 64"
  .byte 0
  bbs_host_name19: .text "bbs.thejlab.com"
  .byte 0
  bbs_name20: .text "Hotwire BBS"
  .byte 0
  bbs_host_name20: .text "hotwirebbs.zapto.org"
  .byte 0
  bbs_name21: .text "Endless Chaos"
  .byte 0
  bbs_host_name21: .text "endlesschaos.dyndns.org"
  .byte 0
  bbs_name22: .text "Borderline"
  .byte 0
  bbs_host_name22: .text "borderlinebbs.dyndns.org"
  .byte 0
  bbs_name23: .text "RAVELOUTION"
  .byte 0
  bbs_host_name23: .text "raveolution.hopto.org"
  .byte 0
  bbs_name24: .text "The Edge BBS"
  .byte 0
  bbs_host_name24: .text "theedgebbs.dyndns.org"
  .byte 0
  bbs_name25: .text "PGS Test"
  .byte 0
  bbs_host_name25: .text "F96NG92-L.fritz.box"
  .byte 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction ldy.z conio_cursor_x
Replacing instruction lda #<0 with TYA
Removing instruction lda #>0
Replacing instruction lda #0 with TXA
Replacing instruction ldy #0 with TAY
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b2_from_conio_c64_init with __b1
Replacing label __b1_from_cputc with __b1
Replacing label __b3_from_gotoxy with __b2
Replacing label __b1 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b3 with __b2
Removing instruction __b1_from___init1:
Removing instruction __b2_from_conio_c64_init:
Removing instruction __b2:
Removing instruction __b1_from___b2:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_cputc:
Removing instruction __b3_from___b2:
Removing instruction printf_str_from___b3:
Removing instruction __b5_from___b4:
Removing instruction printf_str_from___b5:
Removing instruction __b7_from___b6:
Removing instruction printf_str_from___b7:
Removing instruction __b3_from_gotoxy:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b1:
Removing instruction printf_str_from___b1:
Removing instruction __b1_from_printf_str:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_cscroll:
Removing instruction memcpy_from___b1:
Removing instruction __b2_from___b1:
Removing instruction memcpy_from___b2:
Removing instruction __b3_from___b2:
Removing instruction memset_from___b3:
Removing instruction __b4_from___b3:
Removing instruction memset_from___b4:
Removing instruction __b4_from___b7:
Removing instruction utoa_append_from___b5:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Removing instruction printf_str_from___b2:
Removing instruction __b1_from_memcpy:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1_from_conio_c64_init:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b1_from_main:
Removing instruction __breturn:
Removing instruction printf_string_from___b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction printf_string_from___b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction printf_uint_from___b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b1_from___b8:
Removing instruction __b1_from_gotoxy:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction utoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b1_from_utoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __b1:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1_from_utoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Succesful ASM optimization Pass5DoubleJumpElimination
Removing instruction jmp __b1
Removing instruction jmp __b2
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda.z digit_value+1
Succesful ASM optimization Pass5UnnecesaryLoadElimination

FINAL SYMBOL TABLE
__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_BBS_HOST_NAME = 2
__constant char OFFSET_STRUCT_BBS_PORT_NUMBER = 4
__constant char OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant char SIZEOF_STRUCT_BBS = 6
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
void __start()
__constant char bbs_host_name[$f] = "byob.hopto.org"
__constant char bbs_host_name1[$14] = "rapidfire.hopto.org"
__constant char bbs_host_name10[$16] = "bbs.jammingsignal.com"
__constant char bbs_host_name11[$19] = "centronian.servebeer.com"
__constant char bbs_host_name12[$11] = "aubbs.dyndns.org"
__constant char bbs_host_name13[$13] = "oasisbbs.hopto.org"
__constant char bbs_host_name14[$13] = "bbs.thediskbox.com"
__constant char bbs_host_name15[$19] = "cottonwoodbbs.dyndns.org"
__constant char bbs_host_name18[$16] = "madworld.bounceme.net"
__constant char bbs_host_name19[$10] = "bbs.thejlab.com"
__constant char bbs_host_name2[$13] = "antidote.hopto.org"
__constant char bbs_host_name20[$15] = "hotwirebbs.zapto.org"
__constant char bbs_host_name21[$18] = "endlesschaos.dyndns.org"
__constant char bbs_host_name22[$19] = "borderlinebbs.dyndns.org"
__constant char bbs_host_name23[$16] = "raveolution.hopto.org"
__constant char bbs_host_name24[$16] = "theedgebbs.dyndns.org"
__constant char bbs_host_name25[$14] = "F96NG92-L.fritz.box"
__constant char bbs_host_name3[$18] = "wizardsrealm.c64bbs.org"
__constant char bbs_host_name4[$15] = "the-hidden.hopto.org"
__constant char bbs_host_name5[$13] = "eagelbird.ddns.net"
__constant char bbs_host_name6[$c] = "scorp.us.to"
__constant char bbs_host_name7[$14] = "maraud.dynalias.com"
__constant char bbs_host_name8[$f] = "cib.dyndns.org"
__constant char bbs_host_name9[$1d] = "64vintageremixbbs.dyndns.org"
__constant const struct bbs bbs_list[$1b] = { { name: bbs_name, host_name: bbs_host_name, port_number: $fa80 }, { name: bbs_name1, host_name: bbs_host_name1, port_number: $fa80 }, { name: bbs_name2, host_name: bbs_host_name2, port_number: $fa80 }, { name: bbs_name3, host_name: bbs_host_name3, port_number: $17 }, { name: bbs_name4, host_name: bbs_host_name4, port_number: $fa80 }, { name: bbs_name5, host_name: bbs_host_name5, port_number: $1900 }, { name: bbs_name6, host_name: bbs_host_name6, port_number: $17 }, { name: bbs_name7, host_name: bbs_host_name7, port_number: $1900 }, { name: bbs_name8, host_name: bbs_host_name8, port_number: $1900 }, { name: bbs_name9, host_name: bbs_host_name9, port_number: $1900 }, { name: bbs_name10, host_name: bbs_host_name10, port_number: $17 }, { name: bbs_name11, host_name: bbs_host_name11, port_number: $1900 }, { name: bbs_name12, host_name: bbs_host_name12, port_number: $8fc }, { name: bbs_name13, host_name: bbs_host_name13, port_number: $1900 }, { name: bbs_name14, host_name: bbs_host_name14, port_number: $1900 }, { name: bbs_name15, host_name: bbs_host_name15, port_number: $1966 }, { name: bbs_name16, host_name: bbs_host_name8, port_number: $1904 }, { name: bbs_name17, host_name: bbs_host_name1, port_number: $fa80 }, { name: bbs_name18, host_name: bbs_host_name18, port_number: $1900 }, { name: bbs_name19, host_name: bbs_host_name19, port_number: $1900 }, { name: bbs_name20, host_name: bbs_host_name20, port_number: $1966 }, { name: bbs_name21, host_name: bbs_host_name21, port_number: $1900 }, { name: bbs_name22, host_name: bbs_host_name22, port_number: $1900 }, { name: bbs_name23, host_name: bbs_host_name23, port_number: $fa80 }, { name: bbs_name24, host_name: bbs_host_name24, port_number: $605 }, { name: bbs_name25, host_name: bbs_host_name25, port_number: $fa80 }, { name: 0, host_name: 0, port_number: 0 } }
__constant char bbs_name[$c] = "Boar's Head"
__constant char bbs_name1[$a] = "RapidFire"
__constant char bbs_name10[$f] = "Jamming Signal"
__constant char bbs_name11[$f] = "Centronian BBS"
__constant char bbs_name12[$11] = "Anrchy Undergrnd"
__constant char bbs_name13[$e] = "The Oasis BBS"
__constant char bbs_name14[$d] = "The Disk Box"
__constant char bbs_name15[$b] = "Cottonwood"
__constant char bbs_name16[$10] = "Wrong Number ]["
__constant char bbs_name17[$a] = "RabidFire"
__constant char bbs_name18[$a] = "Mad World"
__constant char bbs_name19[$b] = "Citadel 64"
__constant char bbs_name2[$12] = "Antidote by Triad"
__constant char bbs_name20[$c] = "Hotwire BBS"
__constant char bbs_name21[$e] = "Endless Chaos"
__constant char bbs_name22[$b] = "Borderline"
__constant char bbs_name23[$c] = "RAVELOUTION"
__constant char bbs_name24[$d] = "The Edge BBS"
__constant char bbs_name25[9] = "PGS Test"
__constant char bbs_name3[$10] = "Wizards's Realm"
__constant char bbs_name4[$b] = "The Hidden"
__constant char bbs_name5[$e] = "Eaglewing BBS"
__constant char bbs_name6[$e] = "Scorps Portal"
__constant char bbs_name7[$d] = "My C=ult BBS"
__constant char bbs_name8[$10] = "Commodore Image"
__constant char bbs_name9[$10] = "64 Vintag Remic"
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:20 25425.576271186437
__loadstore char conio_cursor_y // zp[1]:15 426668.1066666667
__loadstore char *conio_line_color // zp[2]:16 329852.35820895527
__loadstore char *conio_line_text // zp[2]:18 320291.4202898551
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // reg byte a 150001.5
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:27 202.0
char *gotoxy::$6 // zp[2]:21 202.0
unsigned int gotoxy::$7 // zp[2]:21 151.5
unsigned int gotoxy::$8 // zp[2]:25 202.0
unsigned int gotoxy::$9 // zp[2]:21 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:21 101.0
char gotoxy::x
__constant char gotoxy::x#2 = 0 // x
char gotoxy::y
char gotoxy::y#2 // reg byte x 71.0
char gotoxy::y#4 // reg byte x 67.33333333333333
void main()
struct bbs *main::bbs
struct bbs *main::bbs#1 // bbs zp[2]:23 202.0
struct bbs *main::bbs#2 // bbs zp[2]:23 14.428571428571429
__constant char main::s[2] = " "
__constant char main::s2[2] = "
"
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:6
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:6 1.0000000001E10
char *memcpy::dst#2 // dst zp[2]:6 1.0033333334666666E10
char *memcpy::dst#4 // dst zp[2]:6 2.00000002E8
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:2
char *memcpy::src
char *memcpy::src#1 // src zp[2]:2 2.0000000002E10
char *memcpy::src#2 // src zp[2]:2 1.002500000125E10
char *memcpy::src#4 // src zp[2]:2 1.00000001E8
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:10 1.26250000025E9
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1.4285714287142856E9
char *memset::dst
char *memset::dst#1 // dst zp[2]:2 2.0000000002E10
char *memset::dst#2 // dst zp[2]:2 1.3366666668333332E10
char *memset::dst#4 // dst zp[2]:2 2.00000002E8
char *memset::end
char *memset::end#0 // end zp[2]:6 1.6833333336666665E9
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:2
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
__constant char *printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // reg byte a 7001.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1.0000001E7
void (*printf_str::putc)(char)
void (*printf_str::putc#7)(char) // putc zp[2]:12
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:4 1.0000001E7
const char *printf_str::s#2 // s zp[2]:4 2002.0
const char *printf_str::s#6 // s zp[2]:4 1.5050002E7
const char *printf_str::s#7 // s zp[2]:4 101002.0
void printf_string(void (*putc)(char) , char *str , char format_min_length , char format_justify_left)
struct printf_format_string printf_string::format
char printf_string::format_justify_left
char printf_string::format_min_length
signed char printf_string::len
signed char printf_string::padding
void (*printf_string::putc)(char)
char *printf_string::str
char *printf_string::str#0 // str zp[2]:4 202.0
char *printf_string::str#1 // str zp[2]:4 202.0
char *printf_string::str#2 // str zp[2]:4 1203.0
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
__constant void (*printf_uint::putc#0)(char) = &cputc // putc
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // uvalue zp[2]:4 367.33333333333337
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 2000002.0
char utoa::$11 // reg byte x 20002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:12 287143.2857142857
char *utoa::buffer#14 // buffer zp[2]:12 1500001.5
char *utoa::buffer#3 // buffer zp[2]:12 20002.0
char *utoa::buffer#4 // buffer zp[2]:12 2000002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:14 2000002.0
char utoa::digit#2 // digit zp[1]:14 285714.5714285714
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:8 600000.6000000001
unsigned int *utoa::digit_values
char utoa::max_digits
__constant char utoa::max_digits#1 = 5 // max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 500000.5
char utoa::started#4 // reg byte x 1000001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:4 1000001.0
unsigned int utoa::value#1 // value zp[2]:4 5501.0
unsigned int utoa::value#2 // value zp[2]:4 572857.857142857
unsigned int utoa::value#6 // value zp[2]:4 1500001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:12 1375000.25
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.0000000001E10
char utoa_append::digit#2 // reg byte x 1.00050000015E10
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:4 2000002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:8 3.3335000005E9
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:4 3666667.333333333
unsigned int utoa_append::value#1 // value zp[2]:4 2.0000000002E10
unsigned int utoa_append::value#2 // value zp[2]:4 5.001833334166666E9

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[2]:23 [ main::bbs#2 main::bbs#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
zp[1]:14 [ utoa::digit#2 utoa::digit#1 ]
zp[2]:4 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 printf_uint::uvalue#0 utoa_append::return#0 printf_string::str#2 printf_string::str#0 printf_string::str#1 printf_str::s#6 printf_str::s#7 printf_str::s#2 printf_str::s#0 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
zp[2]:12 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 printf_str::putc#7 ]
zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[1]:20 [ conio_cursor_x ]
zp[1]:15 [ conio_cursor_y ]
zp[2]:18 [ conio_line_text ]
zp[2]:16 [ conio_line_color ]
reg byte a [ cputc::c#0 ]
zp[2]:21 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:25 [ gotoxy::$8 ]
zp[2]:27 [ gotoxy::$5 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:8 [ utoa::digit_value#0 utoa_append::sub#0 ]
zp[2]:10 [ memcpy::src_end#0 ]
zp[2]:6 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]


FINAL ASSEMBLER
Score: 71977

  // File Comments
// Test initialization of array of struct with char* elements
  // Upstart
  // Commodore 64 PRG executable file
.file [name="weeip-bbslist.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  .const SIZEOF_STRUCT_BBS = 6
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
  .const OFFSET_STRUCT_BBS_HOST_NAME = 2
  .const OFFSET_STRUCT_BBS_PORT_NUMBER = 4
  .const STACK_BASE = $103
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  /// The VIC-II MOS 6567/6569
  .label VICII = $d000
  /// Color Ram
  .label COLORRAM = $d800
  /// Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $14
  // The current cursor y-position
  .label conio_cursor_y = $f
  // The current text cursor line start
  .label conio_line_text = $12
  // The current color cursor line start
  .label conio_line_color = $10
.segment Code
  // __start
__start: {
    // __start::__init1
    // __ma char conio_cursor_x = 0
    // [1] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // __ma char conio_cursor_y = 0
    // [2] conio_cursor_y = 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // __ma char *conio_line_text = CONIO_SCREEN_TEXT
    // [3] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // __ma char *conio_line_color = CONIO_SCREEN_COLORS
    // [4] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // #pragma constructor_for(conio_c64_init, cputc, clrscr, cscroll)
    // [5] call conio_c64_init -- call_phi_near 
    jsr conio_c64_init
    // [6] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
    // __start::@1
    // [7] call main -- call_phi_near 
    jsr main
    // __start::@return
    // [8] return 
    rts
}
  // conio_c64_init
// Set initial cursor position
conio_c64_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    // char line = *BASIC_CURSOR_LINE
    // [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE -- vbuxx=_deref_pbuc1 
    ldx.z BASIC_CURSOR_LINE
    // if(line>=CONIO_HEIGHT)
    // [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b1
    // [12] phi from conio_c64_init to conio_c64_init::@1 [phi:conio_c64_init->conio_c64_init::@1]
    // [12] phi conio_c64_init::line#2 = $19-1 [phi:conio_c64_init->conio_c64_init::@1#0] -- vbuxx=vbuc1 
    ldx #$19-1
    // [11] phi from conio_c64_init to conio_c64_init::@2 [phi:conio_c64_init->conio_c64_init::@2]
    // conio_c64_init::@2
    // [12] phi from conio_c64_init::@2 to conio_c64_init::@1 [phi:conio_c64_init::@2->conio_c64_init::@1]
    // [12] phi conio_c64_init::line#2 = conio_c64_init::line#0 [phi:conio_c64_init::@2->conio_c64_init::@1#0] -- register_copy 
    // conio_c64_init::@1
  __b1:
    // gotoxy(0, line)
    // [13] gotoxy::y#2 = conio_c64_init::line#2
    // [14] call gotoxy -- call_phi_near 
    jsr gotoxy
    // conio_c64_init::@return
    // }
    // [15] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// void cputc(__register(A) char c)
cputc: {
    .const OFFSET_STACK_C = 0
    // [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) -- vbuaa=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_C,x
    // if(c=='\n')
    // [17] if(cputc::c#0==' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1
    // cputc::@2
    // conio_line_text[conio_cursor_x] = c
    // [18] conio_line_text[conio_cursor_x] = cputc::c#0 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // conio_line_color[conio_cursor_x] = conio_textcolor
    // [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    sta (conio_line_color),y
    // if(++conio_cursor_x==CONIO_WIDTH)
    // [20] conio_cursor_x = ++ conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [21] if(conio_cursor_x!=$28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [22] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
    // cputc::@3
    // cputln()
    // [23] call cputln -- call_phi_near 
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [24] return 
    rts
    // [25] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [26] call cputln -- call_phi_near 
    jsr cputln
    rts
}
  // main
main: {
    .label bbs = $17
    // VICII->MEMORY = 0x17
    // [27] *((char *)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = $17 -- _deref_pbuc1=vbuc2 
    lda #$17
    sta VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY
    // [28] phi from main to main::@1 [phi:main->main::@1]
    // [28] phi main::bbs#2 = bbs_list [phi:main->main::@1#0] -- pssz1=pssc1 
    lda #<bbs_list
    sta.z bbs
    lda #>bbs_list
    sta.z bbs+1
    // main::@1
  __b1:
    // for(struct bbs * bbs = bbs_list; bbs->name; bbs++)
    // [29] if((char *)0!=*((char **)main::bbs#2)) goto main::@2 -- pbuc1_neq__deref_qbuz1_then_la1 
    ldy #0
    tya
    cmp (bbs),y
    bne __b2
    iny
    cmp (bbs),y
    bne __b2
    // main::@return
    // }
    // [30] return 
    rts
    // main::@2
  __b2:
    // printf("%s %s %u\n", bbs->name, bbs->host_name, bbs->port_number)
    // [31] printf_string::str#0 = *((char **)main::bbs#2) -- pbuz1=_deref_qbuz2 
    ldy #0
    lda (bbs),y
    sta.z printf_string.str
    iny
    lda (bbs),y
    sta.z printf_string.str+1
    // [32] call printf_string
    // [64] phi from main::@2 to printf_string [phi:main::@2->printf_string]
    // [64] phi printf_string::str#2 = printf_string::str#0 [phi:main::@2->printf_string#0] -- call_phi_near 
    jsr printf_string
    // [33] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // printf("%s %s %u\n", bbs->name, bbs->host_name, bbs->port_number)
    // [34] call printf_str
    // [68] phi from main::@3 to printf_str [phi:main::@3->printf_str]
    // [68] phi printf_str::putc#7 = &cputc [phi:main::@3->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = main::s [phi:main::@3->printf_str#1] -- call_phi_near 
    lda #<s
    sta.z printf_str.s
    lda #>s
    sta.z printf_str.s+1
    jsr printf_str
    // main::@4
    // printf("%s %s %u\n", bbs->name, bbs->host_name, bbs->port_number)
    // [35] printf_string::str#1 = ((char **)main::bbs#2)[OFFSET_STRUCT_BBS_HOST_NAME] -- pbuz1=qbuz2_derefidx_vbuc1 
    ldy #OFFSET_STRUCT_BBS_HOST_NAME
    lda (bbs),y
    sta.z printf_string.str
    iny
    lda (bbs),y
    sta.z printf_string.str+1
    // [36] call printf_string
    // [64] phi from main::@4 to printf_string [phi:main::@4->printf_string]
    // [64] phi printf_string::str#2 = printf_string::str#1 [phi:main::@4->printf_string#0] -- call_phi_near 
    jsr printf_string
    // [37] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
    // main::@5
    // printf("%s %s %u\n", bbs->name, bbs->host_name, bbs->port_number)
    // [38] call printf_str
    // [68] phi from main::@5 to printf_str [phi:main::@5->printf_str]
    // [68] phi printf_str::putc#7 = &cputc [phi:main::@5->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = main::s [phi:main::@5->printf_str#1] -- call_phi_near 
    lda #<s
    sta.z printf_str.s
    lda #>s
    sta.z printf_str.s+1
    jsr printf_str
    // main::@6
    // printf("%s %s %u\n", bbs->name, bbs->host_name, bbs->port_number)
    // [39] printf_uint::uvalue#0 = ((unsigned int *)main::bbs#2)[OFFSET_STRUCT_BBS_PORT_NUMBER] -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #OFFSET_STRUCT_BBS_PORT_NUMBER
    lda (bbs),y
    sta.z printf_uint.uvalue
    iny
    lda (bbs),y
    sta.z printf_uint.uvalue+1
    // [40] call printf_uint
    // [77] phi from main::@6 to printf_uint [phi:main::@6->printf_uint] -- call_phi_near 
    jsr printf_uint
    // [41] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
    // main::@7
    // printf("%s %s %u\n", bbs->name, bbs->host_name, bbs->port_number)
    // [42] call printf_str
    // [68] phi from main::@7 to printf_str [phi:main::@7->printf_str]
    // [68] phi printf_str::putc#7 = &cputc [phi:main::@7->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = main::s2 [phi:main::@7->printf_str#1] -- call_phi_near 
    lda #<s2
    sta.z printf_str.s
    lda #>s2
    sta.z printf_str.s+1
    jsr printf_str
    // main::@8
    // for(struct bbs * bbs = bbs_list; bbs->name; bbs++)
    // [43] main::bbs#1 = main::bbs#2 + SIZEOF_STRUCT_BBS -- pssz1=pssz1_plus_vbuc1 
    lda #SIZEOF_STRUCT_BBS
    clc
    adc.z bbs
    sta.z bbs
    bcc !+
    inc.z bbs+1
  !:
    // [28] phi from main::@8 to main::@1 [phi:main::@8->main::@1]
    // [28] phi main::bbs#2 = main::bbs#1 [phi:main::@8->main::@1#0] -- register_copy 
    jmp __b1
  .segment Data
    s: .text " "
    .byte 0
    s2: .text @"\n"
    .byte 0
}
.segment Code
  // gotoxy
// Set the cursor to the specified position
// void gotoxy(char x, __register(X) char y)
gotoxy: {
    .const x = 0
    .label __5 = $1b
    .label __6 = $15
    .label __7 = $15
    .label line_offset = $15
    .label __8 = $19
    .label __9 = $15
    // if(y>CONIO_HEIGHT)
    // [44] if(gotoxy::y#2<$19+1) goto gotoxy::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19+1
    bcc __b2
    // [46] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
    // [46] phi gotoxy::y#4 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [45] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
    // gotoxy::@3
    // [46] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
    // [46] phi gotoxy::y#4 = gotoxy::y#2 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    // gotoxy::@1
    // gotoxy::@2
  __b2:
    // conio_cursor_x = x
    // [47] conio_cursor_x = gotoxy::x#2 -- vbuz1=vbuc1 
    lda #x
    sta.z conio_cursor_x
    // conio_cursor_y = y
    // [48] conio_cursor_y = gotoxy::y#4 -- vbuz1=vbuxx 
    stx.z conio_cursor_y
    // unsigned int line_offset = (unsigned int)y*CONIO_WIDTH
    // [49] gotoxy::$7 = (unsigned int)gotoxy::y#4 -- vwuz1=_word_vbuxx 
    txa
    sta.z __7
    lda #0
    sta.z __7+1
    // [50] gotoxy::$8 = gotoxy::$7 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [51] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    clc
    lda.z __9
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [52] gotoxy::line_offset#0 = gotoxy::$9 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // CONIO_SCREEN_TEXT + line_offset
    // [53] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // conio_line_text = CONIO_SCREEN_TEXT + line_offset
    // [54] conio_line_text = gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // CONIO_SCREEN_COLORS + line_offset
    // [55] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    lda.z __6
    clc
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // conio_line_color = CONIO_SCREEN_COLORS + line_offset
    // [56] conio_line_color = gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    // gotoxy::@return
    // }
    // [57] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // conio_line_text +=  CONIO_WIDTH
    // [58] conio_line_text = conio_line_text + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // conio_line_color += CONIO_WIDTH
    // [59] conio_line_color = conio_line_color + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // conio_cursor_x = 0
    // [60] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y++;
    // [61] conio_cursor_y = ++ conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // cscroll()
    // [62] call cscroll -- call_phi_near 
    jsr cscroll
    // cputln::@return
    // }
    // [63] return 
    rts
}
  // printf_string
// Print a string value using a specific format
// Handles justification and min length 
// void printf_string(void (*putc)(char), __zp(4) char *str, char format_min_length, char format_justify_left)
printf_string: {
    .label str = 4
    // printf_string::@1
    // printf_str(putc, str)
    // [65] printf_str::s#2 = printf_string::str#2
    // [66] call printf_str
    // [68] phi from printf_string::@1 to printf_str [phi:printf_string::@1->printf_str]
    // [68] phi printf_str::putc#7 = &cputc [phi:printf_string::@1->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = printf_str::s#2 [phi:printf_string::@1->printf_str#1] -- call_phi_near 
    jsr printf_str
    // printf_string::@return
    // }
    // [67] return 
    rts
}
  // printf_str
/// Print a NUL-terminated string
// void printf_str(__zp($c) void (*putc)(char), __zp(4) const char *s)
printf_str: {
    .label s = 4
    .label putc = $c
    // [69] phi from printf_str printf_str::@2 to printf_str::@1 [phi:printf_str/printf_str::@2->printf_str::@1]
    // [69] phi printf_str::s#6 = printf_str::s#7 [phi:printf_str/printf_str::@2->printf_str::@1#0] -- register_copy 
    // printf_str::@1
  __b1:
    // while(c=*s++)
    // [70] printf_str::c#1 = *printf_str::s#6 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [71] printf_str::s#0 = ++ printf_str::s#6 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [72] if(0!=printf_str::c#1) goto printf_str::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // printf_str::@return
    // }
    // [73] return 
    rts
    // printf_str::@2
  __b2:
    // putc(c)
    // [74] stackpush(char) = printf_str::c#1 -- _stackpushbyte_=vbuaa 
    pha
    // [75] callexecute *printf_str::putc#7  -- call__deref_pprz1 
    jsr icall1
    // sideeffect stackpullpadding(1) -- _stackpullpadding_1 
    pla
    jmp __b1
    // Outside Flow
  icall1:
    jmp (putc)
}
  // printf_uint
// Print an unsigned int using a specific format
// void printf_uint(void (*putc)(char), __zp(4) unsigned int uvalue, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_uint: {
    .label putc = cputc
    .label uvalue = 4
    // printf_uint::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [78] *((char *)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // utoa(uvalue, printf_buffer.digits, format.radix)
    // [79] utoa::value#1 = printf_uint::uvalue#0
    // [80] call utoa
  // Format number into buffer
    // [97] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa] -- call_phi_near 
    jsr utoa
    // printf_uint::@2
    // printf_number_buffer(putc, printf_buffer, format)
    // [81] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer) -- vbuaa=_deref_pbuc1 
    lda printf_buffer
    // [82] call printf_number_buffer
  // Print using format
    // [118] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer] -- call_phi_near 
    jsr printf_number_buffer
    // printf_uint::@return
    // }
    // [83] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y==CONIO_HEIGHT)
    // [84] if(conio_cursor_y!=$19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [85] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
    // cscroll::@1
    // memcpy(CONIO_SCREEN_TEXT, CONIO_SCREEN_TEXT+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [86] call memcpy
    // [126] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
    // [126] phi memcpy::destination#2 = (void *)DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [126] phi memcpy::source#2 = (void *)DEFAULT_SCREEN+$28 [phi:cscroll::@1->memcpy#1] -- call_phi_near 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [87] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
    // cscroll::@2
    // memcpy(CONIO_SCREEN_COLORS, CONIO_SCREEN_COLORS+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [88] call memcpy
    // [126] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
    // [126] phi memcpy::destination#2 = (void *)COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [126] phi memcpy::source#2 = (void *)COLORRAM+$28 [phi:cscroll::@2->memcpy#1] -- call_phi_near 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [89] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
    // cscroll::@3
    // memset(CONIO_SCREEN_TEXT+CONIO_BYTES-CONIO_WIDTH, ' ', CONIO_WIDTH)
    // [90] call memset
    // [136] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
    // [136] phi memset::c#4 = ' ' [phi:cscroll::@3->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [136] phi memset::str#3 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28 [phi:cscroll::@3->memset#1] -- call_phi_near 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [91] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
    // cscroll::@4
    // memset(CONIO_SCREEN_COLORS+CONIO_BYTES-CONIO_WIDTH, conio_textcolor, CONIO_WIDTH)
    // [92] call memset
    // [136] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
    // [136] phi memset::c#4 = LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuxx=vbuc1 
    ldx #LIGHT_BLUE
    // [136] phi memset::str#3 = (void *)COLORRAM+(unsigned int)$19*$28-$28 [phi:cscroll::@4->memset#1] -- call_phi_near 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // cscroll::@5
    // conio_line_text -= CONIO_WIDTH
    // [93] conio_line_text = conio_line_text - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // conio_line_color -= CONIO_WIDTH
    // [94] conio_line_color = conio_line_color - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // conio_cursor_y--;
    // [95] conio_cursor_y = -- conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    // cscroll::@return
  __breturn:
    // }
    // [96] return 
    rts
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// void utoa(__zp(4) unsigned int value, __zp($c) char *buffer, char radix)
utoa: {
    .const max_digits = 5
    .label digit_value = 8
    .label buffer = $c
    .label digit = $e
    .label value = 4
    // [98] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
    // [98] phi utoa::buffer#11 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [98] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [98] phi utoa::value#2 = utoa::value#1 [phi:utoa->utoa::@1#2] -- register_copy 
    // [98] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    txa
    sta.z digit
    // utoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [99] if(utoa::digit#2<utoa::max_digits#1-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #max_digits-1
    bcc __b2
    // utoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [100] utoa::$11 = (char)utoa::value#2 -- vbuxx=_byte_vwuz1 
    ldx.z value
    // [101] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [102] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [103] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // utoa::@return
    // }
    // [104] return 
    rts
    // utoa::@2
  __b2:
    // unsigned int digit_value = digit_values[digit]
    // [105] utoa::$10 = utoa::digit#2 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [106] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // if (started || value >= digit_value)
    // [107] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    // utoa::@7
    // [108] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [109] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
    // [109] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [109] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [109] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    // utoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [110] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [98] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
    // [98] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [98] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [98] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [98] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // utoa_append(buffer++, value, digit_value)
    // [111] utoa_append::buffer#0 = utoa::buffer#11
    // [112] utoa_append::value#0 = utoa::value#2
    // [113] utoa_append::sub#0 = utoa::digit_value#0
    // [114] call utoa_append
    // [144] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append] -- call_phi_near 
    jsr utoa_append
    // utoa_append(buffer++, value, digit_value)
    // [115] utoa_append::return#0 = utoa_append::value#2
    // utoa::@6
    // value = utoa_append(buffer++, value, digit_value)
    // [116] utoa::value#0 = utoa_append::return#0
    // value = utoa_append(buffer++, value, digit_value);
    // [117] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [109] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
    // [109] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [109] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [109] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// void printf_number_buffer(void (*putc)(char), __register(A) char buffer_sign, char *buffer_digits, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_number_buffer: {
    .label buffer_digits = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    // printf_number_buffer::@1
    // if(buffer.sign)
    // [119] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2
    // printf_number_buffer::@3
    // putc(buffer.sign)
    // [120] stackpush(char) = printf_number_buffer::buffer_sign#0 -- _stackpushbyte_=vbuaa 
    pha
    // [121] callexecute cputc  -- call_vprc1 
    jsr cputc
    // sideeffect stackpullpadding(1) -- _stackpullpadding_1 
    pla
    // [123] phi from printf_number_buffer::@1 printf_number_buffer::@3 to printf_number_buffer::@2 [phi:printf_number_buffer::@1/printf_number_buffer::@3->printf_number_buffer::@2]
    // printf_number_buffer::@2
  __b2:
    // printf_str(putc, buffer.digits)
    // [124] call printf_str
    // [68] phi from printf_number_buffer::@2 to printf_str [phi:printf_number_buffer::@2->printf_str]
    // [68] phi printf_str::putc#7 = printf_uint::putc#0 [phi:printf_number_buffer::@2->printf_str#0] -- pprz1=pprc1 
    lda #<printf_uint.putc
    sta.z printf_str.putc
    lda #>printf_uint.putc
    sta.z printf_str.putc+1
    // [68] phi printf_str::s#7 = printf_number_buffer::buffer_digits#0 [phi:printf_number_buffer::@2->printf_str#1] -- call_phi_near 
    lda #<buffer_digits
    sta.z printf_str.s
    lda #>buffer_digits
    sta.z printf_str.s+1
    jsr printf_str
    // printf_number_buffer::@return
    // }
    // [125] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// void * memcpy(__zp(6) void *destination, __zp(2) void *source, unsigned int num)
memcpy: {
    .label src_end = $a
    .label dst = 6
    .label src = 2
    .label source = 2
    .label destination = 6
    // char* src_end = (char*)source+num
    // [127] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [128] memcpy::src#4 = (char *)memcpy::source#2
    // [129] memcpy::dst#4 = (char *)memcpy::destination#2
    // [130] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
    // [130] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [130] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    // memcpy::@1
  __b1:
    // while(src!=src_end)
    // [131] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    // memcpy::@return
    // }
    // [132] return 
    rts
    // memcpy::@2
  __b2:
    // *dst++ = *src++
    // [133] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta (dst),y
    // *dst++ = *src++;
    // [134] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [135] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// void * memset(__zp(2) void *str, __register(X) char c, unsigned int num)
memset: {
    .label end = 6
    .label dst = 2
    .label str = 2
    // memset::@1
    // char* end = (char*)str + num
    // [137] memset::end#0 = (char *)memset::str#3 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [138] memset::dst#4 = (char *)memset::str#3
    // [139] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
    // [139] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    // memset::@2
  __b2:
    // for(char* dst = str; dst!=end; dst++)
    // [140] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    // memset::@return
    // }
    // [141] return 
    rts
    // memset::@3
  __b3:
    // *dst = c
    // [142] *memset::dst#2 = memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [143] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// __zp(4) unsigned int utoa_append(__zp($c) char *buffer, __zp(4) unsigned int value, __zp(8) unsigned int sub)
utoa_append: {
    .label buffer = $c
    .label value = 4
    .label sub = 8
    .label return = 4
    // [145] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
    // [145] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [145] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    // utoa_append::@1
  __b1:
    // while (value >= sub)
    // [146] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    // utoa_append::@3
    // *buffer = DIGITS[digit]
    // [147] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // utoa_append::@return
    // }
    // [148] return 
    rts
    // utoa_append::@2
  __b2:
    // digit++;
    // [149] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // value -= sub
    // [150] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [145] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
    // [145] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [145] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  bbs_list: .word bbs_name, bbs_host_name, $fa80, bbs_name1, bbs_host_name1, $fa80, bbs_name2, bbs_host_name2, $fa80, bbs_name3, bbs_host_name3, $17, bbs_name4, bbs_host_name4, $fa80, bbs_name5, bbs_host_name5, $1900, bbs_name6, bbs_host_name6, $17, bbs_name7, bbs_host_name7, $1900, bbs_name8, bbs_host_name8, $1900, bbs_name9, bbs_host_name9, $1900, bbs_name10, bbs_host_name10, $17, bbs_name11, bbs_host_name11, $1900, bbs_name12, bbs_host_name12, $8fc, bbs_name13, bbs_host_name13, $1900, bbs_name14, bbs_host_name14, $1900, bbs_name15, bbs_host_name15, $1966, bbs_name16, bbs_host_name8, $1904, bbs_name17, bbs_host_name1, $fa80, bbs_name18, bbs_host_name18, $1900, bbs_name19, bbs_host_name19, $1900, bbs_name20, bbs_host_name20, $1966, bbs_name21, bbs_host_name21, $1900, bbs_name22, bbs_host_name22, $1900, bbs_name23, bbs_host_name23, $fa80, bbs_name24, bbs_host_name24, $605, bbs_name25, bbs_host_name25, $fa80, 0, 0, 0
  bbs_name: .text "Boar's Head"
  .byte 0
  bbs_host_name: .text "byob.hopto.org"
  .byte 0
  bbs_name1: .text "RapidFire"
  .byte 0
  bbs_host_name1: .text "rapidfire.hopto.org"
  .byte 0
  bbs_name2: .text "Antidote by Triad"
  .byte 0
  bbs_host_name2: .text "antidote.hopto.org"
  .byte 0
  bbs_name3: .text "Wizards's Realm"
  .byte 0
  bbs_host_name3: .text "wizardsrealm.c64bbs.org"
  .byte 0
  bbs_name4: .text "The Hidden"
  .byte 0
  bbs_host_name4: .text "the-hidden.hopto.org"
  .byte 0
  bbs_name5: .text "Eaglewing BBS"
  .byte 0
  bbs_host_name5: .text "eagelbird.ddns.net"
  .byte 0
  bbs_name6: .text "Scorps Portal"
  .byte 0
  bbs_host_name6: .text "scorp.us.to"
  .byte 0
  bbs_name7: .text "My C=ult BBS"
  .byte 0
  bbs_host_name7: .text "maraud.dynalias.com"
  .byte 0
  bbs_name8: .text "Commodore Image"
  .byte 0
  bbs_host_name8: .text "cib.dyndns.org"
  .byte 0
  bbs_name9: .text "64 Vintag Remic"
  .byte 0
  bbs_host_name9: .text "64vintageremixbbs.dyndns.org"
  .byte 0
  bbs_name10: .text "Jamming Signal"
  .byte 0
  bbs_host_name10: .text "bbs.jammingsignal.com"
  .byte 0
  bbs_name11: .text "Centronian BBS"
  .byte 0
  bbs_host_name11: .text "centronian.servebeer.com"
  .byte 0
  bbs_name12: .text "Anrchy Undergrnd"
  .byte 0
  bbs_host_name12: .text "aubbs.dyndns.org"
  .byte 0
  bbs_name13: .text "The Oasis BBS"
  .byte 0
  bbs_host_name13: .text "oasisbbs.hopto.org"
  .byte 0
  bbs_name14: .text "The Disk Box"
  .byte 0
  bbs_host_name14: .text "bbs.thediskbox.com"
  .byte 0
  bbs_name15: .text "Cottonwood"
  .byte 0
  bbs_host_name15: .text "cottonwoodbbs.dyndns.org"
  .byte 0
  bbs_name16: .text "Wrong Number ]["
  .byte 0
  bbs_name17: .text "RabidFire"
  .byte 0
  bbs_name18: .text "Mad World"
  .byte 0
  bbs_host_name18: .text "madworld.bounceme.net"
  .byte 0
  bbs_name19: .text "Citadel 64"
  .byte 0
  bbs_host_name19: .text "bbs.thejlab.com"
  .byte 0
  bbs_name20: .text "Hotwire BBS"
  .byte 0
  bbs_host_name20: .text "hotwirebbs.zapto.org"
  .byte 0
  bbs_name21: .text "Endless Chaos"
  .byte 0
  bbs_host_name21: .text "endlesschaos.dyndns.org"
  .byte 0
  bbs_name22: .text "Borderline"
  .byte 0
  bbs_host_name22: .text "borderlinebbs.dyndns.org"
  .byte 0
  bbs_name23: .text "RAVELOUTION"
  .byte 0
  bbs_host_name23: .text "raveolution.hopto.org"
  .byte 0
  bbs_name24: .text "The Edge BBS"
  .byte 0
  bbs_host_name24: .text "theedgebbs.dyndns.org"
  .byte 0
  bbs_name25: .text "PGS Test"
  .byte 0
  bbs_host_name25: .text "F96NG92-L.fritz.box"
  .byte 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

