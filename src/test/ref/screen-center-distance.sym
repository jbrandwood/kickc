constant byte* const CHARSET = (byte*) 8192
constant struct MOS6526_CIA* const CIA2 = (struct MOS6526_CIA*) 56576
constant dword* const CIA2_TIMER_AB = (dword*) 56580
constant const byte CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A = $40
constant const byte CIA_TIMER_CONTROL_START = 1
constant const dword CLOCKS_PER_INIT = $12
constant byte* const D018 = (byte*) 53272
constant byte* FONT_HEX_PROTO[]  = { 2, 5, 5, 5, 2, 6, 2, 2, 2, 7, 6, 1, 2, 4, 7, 6, 1, 2, 1, 6, 5, 5, 7, 1, 1, 7, 4, 6, 1, 6, 3, 4, 6, 5, 2, 7, 1, 1, 1, 1, 2, 5, 2, 5, 2, 2, 5, 3, 1, 1, 2, 5, 7, 5, 5, 6, 5, 6, 5, 6, 2, 5, 4, 5, 2, 6, 5, 5, 5, 6, 7, 4, 6, 4, 7, 7, 4, 6, 4, 4 }
constant byte* HEAP_TOP = (byte*) 40960
byte NUM_SQUARES
constant byte NUM_SQUARES#2 NUM_SQUARES = $30
constant byte OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
constant byte OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant byte* const SCREEN = (byte*) 10240
constant byte SIZEOF_WORD = 2
word* SQUARES
constant word* SQUARES#0 SQUARES = (word*)malloc::return#0
word* bsearch16u(word bsearch16u::key , word* bsearch16u::items , byte bsearch16u::num)
byte~ bsearch16u::$14 reg byte a 2.00000002E8
word*~ bsearch16u::$2 zp[2]:10 200002.0
byte~ bsearch16u::$6 reg byte a 2.00000002E8
word* bsearch16u::items
word* bsearch16u::items#0 items zp[2]:10 1.00000001E8
word* bsearch16u::items#2 items zp[2]:10 3.3366667333333336E7
word* bsearch16u::items#8 items zp[2]:10 1.500000015E8
word bsearch16u::key
word bsearch16u::key#0 key zp[2]:19 7857.285714285715
byte bsearch16u::num
byte bsearch16u::num#0 reg byte x 2.00000002E8
byte bsearch16u::num#1 reg byte x 2.00000002E8
byte bsearch16u::num#3 reg byte x 5.555555611111111E7
byte bsearch16u::num#5 reg byte x 3.00000003E8
word* bsearch16u::pivot
word* bsearch16u::pivot#0 pivot zp[2]:21 5.002500075E7
signed word bsearch16u::result
signed word bsearch16u::result#0 result zp[2]:23 1.500000015E8
word* bsearch16u::return
word* bsearch16u::return#1 return zp[2]:10 70001.0
word* bsearch16u::return#2 return zp[2]:10 300003.0
word* bsearch16u::return#3 return zp[2]:10 20002.0
word* bsearch16u::return#7 return zp[2]:10 200002.0
dword clock()
dword clock::return
dword clock::return#0 return zp[4]:12 4.333333333333333
dword clock::return#2 return zp[4]:12 4.0
void clock_start()
byte* heap_head
void init_dist_screen(byte* init_dist_screen::screen)
byte~ init_dist_screen::$14 reg byte a 2002.0
byte~ init_dist_screen::$16 reg byte a 2002.0
byte~ init_dist_screen::$5 reg byte a 202.0
byte~ init_dist_screen::$7 reg byte a 202.0
byte init_dist_screen::d
byte init_dist_screen::d#0 reg byte a 1251.25
word init_dist_screen::ds
word init_dist_screen::ds#0 ds zp[2]:19 2002.0
byte* init_dist_screen::screen
byte* init_dist_screen::screen_bottomline
byte* init_dist_screen::screen_bottomline#1 screen_bottomline zp[2]:5 67.33333333333333
byte* init_dist_screen::screen_bottomline#11 screen_bottomline zp[2]:5 66.78787878787878
byte* init_dist_screen::screen_topline
byte* init_dist_screen::screen_topline#1 screen_topline zp[2]:3 50.5
byte* init_dist_screen::screen_topline#11 screen_topline zp[2]:3 68.875
byte init_dist_screen::x
byte init_dist_screen::x#1 x zp[1]:7 1001.0
byte init_dist_screen::x#2 x zp[1]:7 300.3
byte init_dist_screen::x2
byte init_dist_screen::x2#0 reg byte a 2002.0
byte init_dist_screen::xb
byte init_dist_screen::xb#1 xb zp[1]:9 2002.0
byte init_dist_screen::xb#2 xb zp[1]:9 190.66666666666666
byte init_dist_screen::xd
byte init_dist_screen::xd#0 reg byte a 3003.0
word init_dist_screen::xds
word init_dist_screen::xds#0 xds zp[2]:19 2002.0
byte init_dist_screen::y
byte init_dist_screen::y#1 y zp[1]:2 151.5
byte init_dist_screen::y#10 y zp[1]:2 8.911764705882353
byte init_dist_screen::y2
byte init_dist_screen::y2#0 reg byte a 202.0
byte init_dist_screen::yd
byte init_dist_screen::yd#0 reg byte a 303.0
word init_dist_screen::yds
word init_dist_screen::yds#0 yds zp[2]:17 47.91304347826087
void init_font_hex(byte* init_font_hex::charset)
byte~ init_font_hex::$0 zp[1]:16 10001.0
byte~ init_font_hex::$1 reg byte a 20002.0
byte~ init_font_hex::$2 reg byte a 20002.0
byte init_font_hex::c
byte init_font_hex::c#1 c zp[1]:2 151.5
byte init_font_hex::c#6 c zp[1]:2 10.631578947368421
byte init_font_hex::c1
byte init_font_hex::c1#1 c1 zp[1]:7 1501.5
byte init_font_hex::c1#4 c1 zp[1]:7 133.46666666666667
byte* init_font_hex::charset
byte* init_font_hex::charset#0 charset zp[2]:5 350.5
byte* init_font_hex::charset#2 charset zp[2]:5 1079.0714285714287
byte* init_font_hex::charset#5 charset zp[2]:5 202.0
byte init_font_hex::i
byte init_font_hex::i#1 reg byte x 15001.5
byte init_font_hex::i#2 reg byte x 6667.333333333333
byte init_font_hex::idx
byte init_font_hex::idx#2 idx zp[1]:9 5501.0
byte init_font_hex::idx#3 reg byte y 2002.0
byte init_font_hex::idx#5 idx zp[1]:9 6000.6
byte* init_font_hex::proto_hi
byte* init_font_hex::proto_hi#1 proto_hi zp[2]:3 67.33333333333333
byte* init_font_hex::proto_hi#6 proto_hi zp[2]:3 566.8333333333333
byte* init_font_hex::proto_lo
byte* init_font_hex::proto_lo#1 proto_lo zp[2]:10 500.5
byte* init_font_hex::proto_lo#4 proto_lo zp[2]:10 923.3076923076923
void init_squares()
byte~ init_squares::$3 reg byte a 2002.0
byte~ init_squares::$4 reg byte a 2002.0
byte init_squares::i
byte init_squares::i#1 reg byte x 2002.0
byte init_squares::i#2 reg byte x 572.0
word init_squares::sqr
word init_squares::sqr#1 sqr zp[2]:10 1001.0
word init_squares::sqr#2 sqr zp[2]:10 500.5
word* init_squares::squares
word* init_squares::squares#1 squares zp[2]:19 400.4
word* init_squares::squares#2 squares zp[2]:19 1001.0
void main()
dword~ main::$4 zp[4]:12 4.0
constant byte* main::BASE_CHARSET = (byte*) 4096
constant byte* main::BASE_SCREEN = (byte*) 1024
dword main::cyclecount
dword main::cyclecount#0 cyclecount zp[4]:12 4.0
byte* main::toD0181_gfx
byte main::toD0181_return
constant byte main::toD0181_return#0 toD0181_return = >(word)SCREEN&$3fff*4|>(word)CHARSET/4&$f
byte* main::toD0181_screen
byte* main::toD0182_gfx
byte main::toD0182_return
constant byte main::toD0182_return#0 toD0182_return = >(word)main::BASE_SCREEN&$3fff*4|>(word)main::BASE_CHARSET/4&$f
byte* main::toD0182_screen
void* malloc(word malloc::size)
byte* malloc::mem
constant byte* malloc::mem#0 mem = HEAP_TOP-malloc::size#0
void* malloc::return
constant void* malloc::return#0 return = (void*)malloc::mem#0
word malloc::size
constant word malloc::size#0 size = NUM_SQUARES#2*SIZEOF_WORD
void print_char_at(byte print_char_at::ch , byte* print_char_at::at)
byte* print_char_at::at
byte* print_char_at::at#0 at zp[2]:17 2002.0
byte* print_char_at::at#1 at zp[2]:17 1001.0
byte* print_char_at::at#2 at zp[2]:17 12003.0
byte print_char_at::ch
byte print_char_at::ch#0 reg byte x 1001.0
byte print_char_at::ch#1 reg byte x 2002.0
byte print_char_at::ch#2 reg byte x 12003.0
constant const byte* print_hextab[]  = "0123456789abcdef"z
void print_uchar_at(byte print_uchar_at::b , byte* print_uchar_at::at)
byte~ print_uchar_at::$0 reg byte a 2002.0
byte~ print_uchar_at::$2 reg byte y 1001.0
byte* print_uchar_at::at
byte* print_uchar_at::at#0 at zp[2]:10 202.0
byte* print_uchar_at::at#1 at zp[2]:10 202.0
byte* print_uchar_at::at#2 at zp[2]:10 367.33333333333337
byte print_uchar_at::b
byte print_uchar_at::b#0 b zp[1]:16 101.0
byte print_uchar_at::b#1 b zp[1]:16 101.0
byte print_uchar_at::b#2 b zp[1]:16 440.79999999999995
void print_uint_at(word print_uint_at::w , byte* print_uint_at::at)
byte* print_uint_at::at
byte* print_uint_at::at#2 at zp[2]:10 40.4
word print_uint_at::w
word print_uint_at::w#0 w zp[2]:19 22.0
word print_uint_at::w#1 w zp[2]:19 22.0
word print_uint_at::w#2 w zp[2]:19 56.0
void print_ulong_at(dword print_ulong_at::dw , byte* print_ulong_at::at)
byte* print_ulong_at::at
dword print_ulong_at::dw
dword print_ulong_at::dw#0 dw zp[4]:12 8.0
word sqr(byte sqr::val)
byte~ sqr::$0 reg byte a 20002.0
word sqr::return
word sqr::return#0 return zp[2]:19 2775.75
word sqr::return#2 return_1 zp[2]:17 202.0
word sqr::return#3 return zp[2]:19 2002.0
byte sqr::val
byte sqr::val#0 reg byte a 202.0
byte sqr::val#1 reg byte a 2002.0
byte sqr::val#2 reg byte a 11103.0
byte sqrt(word sqrt::val)
word~ sqrt::$1 zp[2]:10 10001.0
word~ sqrt::$2 zp[2]:10 20002.0
word* sqrt::found
word* sqrt::found#0 found zp[2]:10 20002.0
byte sqrt::return
byte sqrt::return#0 reg byte a 3667.333333333333
byte sqrt::return#2 reg byte a 2002.0
byte sqrt::sq
word sqrt::val
word sqrt::val#0 val zp[2]:19 11002.0

reg byte x [ init_font_hex::i#2 init_font_hex::i#1 ]
zp[1]:2 [ init_dist_screen::y#10 init_dist_screen::y#1 init_font_hex::c#6 init_font_hex::c#1 ]
zp[2]:3 [ init_dist_screen::screen_topline#11 init_dist_screen::screen_topline#1 init_font_hex::proto_hi#6 init_font_hex::proto_hi#1 ]
zp[2]:5 [ init_dist_screen::screen_bottomline#11 init_dist_screen::screen_bottomline#1 init_font_hex::charset#2 init_font_hex::charset#5 init_font_hex::charset#0 ]
reg byte a [ init_dist_screen::yd#0 init_dist_screen::$7 init_dist_screen::$5 ]
zp[1]:7 [ init_dist_screen::x#2 init_dist_screen::x#1 init_font_hex::c1#4 init_font_hex::c1#1 ]
zp[1]:9 [ init_dist_screen::xb#2 init_dist_screen::xb#1 init_font_hex::idx#5 init_font_hex::idx#2 ]
reg byte a [ init_dist_screen::xd#0 init_dist_screen::$16 init_dist_screen::$14 ]
reg byte x [ init_squares::i#2 init_squares::i#1 ]
reg byte a [ sqr::val#2 sqr::val#1 sqr::val#0 ]
zp[2]:10 [ bsearch16u::return#1 bsearch16u::return#2 bsearch16u::items#2 bsearch16u::items#8 bsearch16u::$2 bsearch16u::return#7 bsearch16u::items#0 bsearch16u::return#3 sqrt::found#0 sqrt::$2 sqrt::$1 print_uint_at::at#2 print_uchar_at::at#2 print_uchar_at::at#0 print_uchar_at::at#1 init_squares::sqr#2 init_squares::sqr#1 init_font_hex::proto_lo#4 init_font_hex::proto_lo#1 ]
reg byte x [ bsearch16u::num#5 bsearch16u::num#1 bsearch16u::num#3 bsearch16u::num#0 ]
reg byte x [ print_char_at::ch#2 print_char_at::ch#0 print_char_at::ch#1 ]
zp[4]:12 [ clock::return#2 main::$4 clock::return#0 main::cyclecount#0 print_ulong_at::dw#0 ]
zp[1]:16 [ init_font_hex::$0 print_uchar_at::b#2 print_uchar_at::b#0 print_uchar_at::b#1 ]
reg byte a [ init_font_hex::$1 ]
reg byte a [ init_font_hex::$2 ]
reg byte y [ init_font_hex::idx#3 ]
reg byte a [ init_dist_screen::y2#0 ]
zp[2]:17 [ sqr::return#2 init_dist_screen::yds#0 print_char_at::at#2 print_char_at::at#0 print_char_at::at#1 ]
reg byte a [ init_dist_screen::x2#0 ]
zp[2]:19 [ sqr::return#3 init_dist_screen::xds#0 sqr::return#0 init_dist_screen::ds#0 sqrt::val#0 bsearch16u::key#0 print_uint_at::w#2 print_uint_at::w#0 print_uint_at::w#1 init_squares::squares#2 init_squares::squares#1 ]
reg byte a [ sqrt::return#2 ]
reg byte a [ init_dist_screen::d#0 ]
reg byte a [ init_squares::$3 ]
reg byte a [ init_squares::$4 ]
reg byte a [ sqr::$0 ]
reg byte a [ sqrt::return#0 ]
reg byte a [ bsearch16u::$6 ]
reg byte a [ bsearch16u::$14 ]
zp[2]:21 [ bsearch16u::pivot#0 ]
zp[2]:23 [ bsearch16u::result#0 ]
reg byte a [ print_uchar_at::$0 ]
reg byte y [ print_uchar_at::$2 ]
