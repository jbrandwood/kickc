
CONTROL FLOW GRAPH SSA

(void()) fn1()
fn1: scope:[fn1]  from
  *((const nomodify byte*) fn1::BORDER_COLOR) ← ++ *((const nomodify byte*) fn1::BORDER_COLOR)
  to:fn1::@return
fn1::@return: scope:[fn1]  from fn1
  return 
  to:@return

(void()) main()
main: scope:[main]  from _start
  call *((const void()*) main::f) 
  to:main::@return
main::@return: scope:[main]  from main
  return 
  to:@return

(void()) _start()
_start: scope:[_start]  from
  call main 
  to:_start::@1
_start::@1: scope:[_start]  from _start
  to:_start::@return
_start::@return: scope:[_start]  from _start::@1
  return 
  to:@return

SYMBOL TABLE SSA
(void()) _start()
(label) _start::@1
(label) _start::@return
(void()) fn1()
(label) fn1::@return
(const nomodify byte*) fn1::BORDER_COLOR = (byte*)(number) $d020
(void()) main()
(label) main::@return
(const void()*) main::f = &(void()) fn1()

Simplifying constant pointer cast (byte*) 53280
Successful SSA optimization PassNCastSimplification
Replacing constant pointer function [2] call fn1 
Successful SSA optimization Pass2ConstantCallPointerIdentification
Eliminating unused constant (const void()*) main::f
Successful SSA optimization PassNEliminateUnusedVars
Removing unused procedure _start
Removing unused procedure block _start
Removing unused procedure block _start::@1
Removing unused procedure block _start::@return
Successful SSA optimization PassNEliminateEmptyStart
Adding NOP phi() at start of main
CALL GRAPH
Calls in [main] to fn1:1 

Created 0 initial phi equivalence classes
Coalesced down to 0 phi equivalence classes
Adding NOP phi() at start of main

FINAL CONTROL FLOW GRAPH

(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call fn1 
  to:main::@return
main::@return: scope:[main]  from main
  [2] return 
  to:@return

__stackcall (void()) fn1()
fn1: scope:[fn1]  from main
  [3] *((const nomodify byte*) fn1::BORDER_COLOR) ← ++ *((const nomodify byte*) fn1::BORDER_COLOR)
  to:fn1::@return
fn1::@return: scope:[fn1]  from fn1
  [4] return 
  to:@return


VARIABLE REGISTER WEIGHTS
__stackcall (void()) fn1()
(void()) main()

Initial phi equivalence classes
Complete equivalence classes

INITIAL ASM
Target platform is c64basic / MOS6502X
  // File Comments
// Tests creating, assigning and calling pointers to non-args no-return functions
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  // main
main: {
    // [1] call fn1 
    jsr fn1
    jmp __breturn
    // main::@return
  __breturn:
    // [2] return 
    rts
}
  // fn1
fn1: {
    .label BORDER_COLOR = $d020
    // [3] *((const nomodify byte*) fn1::BORDER_COLOR) ← ++ *((const nomodify byte*) fn1::BORDER_COLOR) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc BORDER_COLOR
    jmp __breturn
    // fn1::@return
  __breturn:
    // [4] return 
    rts
}
  // File Data

REGISTER UPLIFT POTENTIAL REGISTERS

REGISTER UPLIFT SCOPES
Uplift Scope [fn1] 
Uplift Scope [main] 
Uplift Scope [] 

Uplifting [fn1] best 30 combination 
Uplifting [main] best 30 combination 
Uplifting [] best 30 combination 

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Tests creating, assigning and calling pointers to non-args no-return functions
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  // main
main: {
    // [1] call fn1 
    jsr fn1
    jmp __breturn
    // main::@return
  __breturn:
    // [2] return 
    rts
}
  // fn1
fn1: {
    .label BORDER_COLOR = $d020
    // [3] *((const nomodify byte*) fn1::BORDER_COLOR) ← ++ *((const nomodify byte*) fn1::BORDER_COLOR) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc BORDER_COLOR
    jmp __breturn
    // fn1::@return
  __breturn:
    // [4] return 
    rts
}
  // File Data

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction __breturn:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
__stackcall (void()) fn1()
(label) fn1::@return
(const nomodify byte*) fn1::BORDER_COLOR = (byte*) 53280
(void()) main()
(label) main::@return



FINAL ASSEMBLER
Score: 24

  // File Comments
// Tests creating, assigning and calling pointers to non-args no-return functions
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  // main
main: {
    // (*f)()
    // [1] call fn1 
    jsr fn1
    // main::@return
    // }
    // [2] return 
    rts
}
  // fn1
fn1: {
    .label BORDER_COLOR = $d020
    // (*BORDER_COLOR)++;
    // [3] *((const nomodify byte*) fn1::BORDER_COLOR) ← ++ *((const nomodify byte*) fn1::BORDER_COLOR) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc BORDER_COLOR
    // fn1::@return
    // }
    // [4] return 
    rts
}
  // File Data

