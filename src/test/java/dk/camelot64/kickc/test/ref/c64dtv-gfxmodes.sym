(label) @32
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = ((byte*))(word/dword/signed dword) 53281
(byte*) BGCOL1
(const byte*) BGCOL1#0 BGCOL1 = ((byte*))(word/dword/signed dword) 53281
(byte*) BGCOL2
(const byte*) BGCOL2#0 BGCOL2 = ((byte*))(word/dword/signed dword) 53282
(byte*) BGCOL3
(const byte*) BGCOL3#0 BGCOL3 = ((byte*))(word/dword/signed dword) 53283
(byte*) BGCOL4
(const byte*) BGCOL4#0 BGCOL4 = ((byte*))(word/dword/signed dword) 53284
(byte) BLACK
(const byte) BLACK#0 BLACK = (byte/signed byte/word/signed word/dword/signed dword) 0
(byte) BLUE
(const byte) BLUE#0 BLUE = (byte/signed byte/word/signed word/dword/signed dword) 6
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word/dword/signed dword) 53280
(byte*) CIA1_PORT_A
(const byte*) CIA1_PORT_A#0 CIA1_PORT_A = ((byte*))(word/dword/signed dword) 56320
(byte*) CIA1_PORT_B
(const byte*) CIA1_PORT_B#0 CIA1_PORT_B = ((byte*))(word/dword/signed dword) 56321
(byte*) CIA2_PORT_A
(const byte*) CIA2_PORT_A#0 CIA2_PORT_A = ((byte*))(word/dword/signed dword) 56576
(byte*) CIA2_PORT_A_DDR
(const byte*) CIA2_PORT_A_DDR#0 CIA2_PORT_A_DDR = ((byte*))(word/dword/signed dword) 56578
(byte*) COLS
(const byte*) COLS#0 COLS = ((byte*))(word/dword/signed dword) 55296
(dword) DTV_COLOR_BANK_DEFAULT
(const dword) DTV_COLOR_BANK_DEFAULT#0 DTV_COLOR_BANK_DEFAULT = (dword/signed dword) 120832
(byte*) DTV_COLOR_BANK_HI
(const byte*) DTV_COLOR_BANK_HI#0 DTV_COLOR_BANK_HI = ((byte*))(word/dword/signed dword) 53303
(byte*) DTV_COLOR_BANK_LO
(const byte*) DTV_COLOR_BANK_LO#0 DTV_COLOR_BANK_LO = ((byte*))(word/dword/signed dword) 53302
(byte*) DTV_CONTROL
(const byte*) DTV_CONTROL#0 DTV_CONTROL = ((byte*))(word/dword/signed dword) 53308
(byte) DTV_CONTROL_CHUNKY_ON
(const byte) DTV_CONTROL_CHUNKY_ON#0 DTV_CONTROL_CHUNKY_ON = (byte/signed byte/word/signed word/dword/signed dword) 64
(byte) DTV_CONTROL_COLORRAM_OFF
(const byte) DTV_CONTROL_COLORRAM_OFF#0 DTV_CONTROL_COLORRAM_OFF = (byte/signed byte/word/signed word/dword/signed dword) 16
(byte) DTV_CONTROL_HIGHCOLOR_ON
(const byte) DTV_CONTROL_HIGHCOLOR_ON#0 DTV_CONTROL_HIGHCOLOR_ON = (byte/signed byte/word/signed word/dword/signed dword) 4
(byte) DTV_CONTROL_LINEAR_ADDRESSING_ON
(const byte) DTV_CONTROL_LINEAR_ADDRESSING_ON#0 DTV_CONTROL_LINEAR_ADDRESSING_ON = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) DTV_FEATURE
(const byte*) DTV_FEATURE#0 DTV_FEATURE = ((byte*))(word/dword/signed dword) 53311
(byte) DTV_FEATURE_ENABLE
(const byte) DTV_FEATURE_ENABLE#0 DTV_FEATURE_ENABLE = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) DTV_GRAPHICS_VIC_BANK
(const byte*) DTV_GRAPHICS_VIC_BANK#0 DTV_GRAPHICS_VIC_BANK = ((byte*))(word/dword/signed dword) 53309
(byte*) DTV_PALETTE
(const byte*) DTV_PALETTE#0 DTV_PALETTE = ((byte*))(word/dword/signed dword) 53760
(byte[16]) DTV_PALETTE_DEFAULT
(const byte[16]) DTV_PALETTE_DEFAULT#0 DTV_PALETTE_DEFAULT = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 15, (byte/signed byte/word/signed word/dword/signed dword) 54, (byte/word/signed word/dword/signed dword) 190, (byte/signed byte/word/signed word/dword/signed dword) 88, (byte/word/signed word/dword/signed dword) 219, (byte/word/signed word/dword/signed dword) 134, (byte/word/signed word/dword/signed dword) 255, (byte/signed byte/word/signed word/dword/signed dword) 41, (byte/signed byte/word/signed word/dword/signed dword) 38, (byte/signed byte/word/signed word/dword/signed dword) 59, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 154, (byte/signed byte/word/signed word/dword/signed dword) 10 }
(byte*) DTV_PLANEA_MODULO_HI
(const byte*) DTV_PLANEA_MODULO_HI#0 DTV_PLANEA_MODULO_HI = ((byte*))(word/dword/signed dword) 53305
(byte*) DTV_PLANEA_MODULO_LO
(const byte*) DTV_PLANEA_MODULO_LO#0 DTV_PLANEA_MODULO_LO = ((byte*))(word/dword/signed dword) 53304
(byte*) DTV_PLANEA_START_HI
(const byte*) DTV_PLANEA_START_HI#0 DTV_PLANEA_START_HI = ((byte*))(word/dword/signed dword) 53317
(byte*) DTV_PLANEA_START_LO
(const byte*) DTV_PLANEA_START_LO#0 DTV_PLANEA_START_LO = ((byte*))(word/dword/signed dword) 53306
(byte*) DTV_PLANEA_START_MI
(const byte*) DTV_PLANEA_START_MI#0 DTV_PLANEA_START_MI = ((byte*))(word/dword/signed dword) 53307
(byte*) DTV_PLANEA_STEP
(const byte*) DTV_PLANEA_STEP#0 DTV_PLANEA_STEP = ((byte*))(word/dword/signed dword) 53318
(byte*) DTV_PLANEB_MODULO_HI
(const byte*) DTV_PLANEB_MODULO_HI#0 DTV_PLANEB_MODULO_HI = ((byte*))(word/dword/signed dword) 53320
(byte*) DTV_PLANEB_MODULO_LO
(const byte*) DTV_PLANEB_MODULO_LO#0 DTV_PLANEB_MODULO_LO = ((byte*))(word/dword/signed dword) 53319
(byte*) DTV_PLANEB_START_HI
(const byte*) DTV_PLANEB_START_HI#0 DTV_PLANEB_START_HI = ((byte*))(word/dword/signed dword) 53323
(byte*) DTV_PLANEB_START_LO
(const byte*) DTV_PLANEB_START_LO#0 DTV_PLANEB_START_LO = ((byte*))(word/dword/signed dword) 53321
(byte*) DTV_PLANEB_START_MI
(const byte*) DTV_PLANEB_START_MI#0 DTV_PLANEB_START_MI = ((byte*))(word/dword/signed dword) 53322
(byte*) DTV_PLANEB_STEP
(const byte*) DTV_PLANEB_STEP#0 DTV_PLANEB_STEP = ((byte*))(word/dword/signed dword) 53324
(byte) GREEN
(const byte) GREEN#0 GREEN = (byte/signed byte/word/signed word/dword/signed dword) 5
(byte) KEY_1
(const byte) KEY_1#0 KEY_1 = (byte/signed byte/word/signed word/dword/signed dword) 56
(byte) KEY_2
(const byte) KEY_2#0 KEY_2 = (byte/signed byte/word/signed word/dword/signed dword) 59
(byte) KEY_3
(const byte) KEY_3#0 KEY_3 = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) KEY_6
(const byte) KEY_6#0 KEY_6 = (byte/signed byte/word/signed word/dword/signed dword) 19
(byte) KEY_7
(const byte) KEY_7#0 KEY_7 = (byte/signed byte/word/signed word/dword/signed dword) 24
(byte) KEY_8
(const byte) KEY_8#0 KEY_8 = (byte/signed byte/word/signed word/dword/signed dword) 27
(byte) KEY_A
(const byte) KEY_A#0 KEY_A = (byte/signed byte/word/signed word/dword/signed dword) 10
(byte) KEY_B
(const byte) KEY_B#0 KEY_B = (byte/signed byte/word/signed word/dword/signed dword) 28
(byte) KEY_C
(const byte) KEY_C#0 KEY_C = (byte/signed byte/word/signed word/dword/signed dword) 20
(byte) KEY_D
(const byte) KEY_D#0 KEY_D = (byte/signed byte/word/signed word/dword/signed dword) 18
(byte) KEY_E
(const byte) KEY_E#0 KEY_E = (byte/signed byte/word/signed word/dword/signed dword) 14
(byte) KEY_SPACE
(const byte) KEY_SPACE#0 KEY_SPACE = (byte/signed byte/word/signed word/dword/signed dword) 60
(byte) LIGHT_GREEN
(const byte) LIGHT_GREEN#0 LIGHT_GREEN = (byte/signed byte/word/signed word/dword/signed dword) 13
(byte[]) MENU_TEXT
(const string) MENU_TEXT#0 MENU_TEXT = (string) "C64DTV Graphics Modes            CCLHBME@"+(string) "                                 OHIIMCC@"+(string) "                                 LUNCMMM@"+(string) "----------------------------------------@"+(string) "1. Standard Char             (V) 0000000@"+(string) "2. Extended Color Char       (V) 0000001@"+(string) "3. Multicolor Char           (V) 0000010@"+(string) "4. Standard Bitmap           (V) 0000100@"+(string) "5. Multicolor Bitmap         (V) 0000110@"+(string) "6. High Color Standard Char  (H) 0001000@"+(string) "7. High Extended Color Char  (H) 0001001@"+(string) "8. High Multicolor Char      (H) 0001010@"+(string) "9. High Multicolor Bitmap    (H) 0001110@"+(string) "a. Sixs Fred 2               (D) 0010111@"+(string) "b. Two Plane Bitmap          (D) 0011101@"+(string) "c. Sixs Fred (2 Plane MC BM) (D) 0011111@"+(string) "d. 8bpp Pixel Cell           (D) 0111011@"+(string) "e. Chunky 8bpp Bitmap        (D) 1111011@"+(string) "----------------------------------------@"+(string) "    (V) vicII (H) vicII+hicol (D) c64dtv@"+(string) "@"
(byte*) PROCPORT
(const byte*) PROCPORT#0 PROCPORT = ((byte*))(byte/signed byte/word/signed word/dword/signed dword) 1
(byte) VIC_BMM
(const byte) VIC_BMM#0 VIC_BMM = (byte/signed byte/word/signed word/dword/signed dword) 32
(byte*) VIC_CONTROL
(const byte*) VIC_CONTROL#0 VIC_CONTROL = ((byte*))(word/dword/signed dword) 53265
(byte*) VIC_CONTROL2
(const byte*) VIC_CONTROL2#0 VIC_CONTROL2 = ((byte*))(word/dword/signed dword) 53270
(byte) VIC_CSEL
(const byte) VIC_CSEL#0 VIC_CSEL = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) VIC_DEN
(const byte) VIC_DEN#0 VIC_DEN = (byte/signed byte/word/signed word/dword/signed dword) 16
(byte) VIC_ECM
(const byte) VIC_ECM#0 VIC_ECM = (byte/signed byte/word/signed word/dword/signed dword) 64
(byte) VIC_MCM
(const byte) VIC_MCM#0 VIC_MCM = (byte/signed byte/word/signed word/dword/signed dword) 16
(byte*) VIC_MEMORY
(const byte*) VIC_MEMORY#0 VIC_MEMORY = ((byte*))(word/dword/signed dword) 53272
(byte) VIC_RSEL
(const byte) VIC_RSEL#0 VIC_RSEL = (byte/signed byte/word/signed word/dword/signed dword) 8
(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
(label) dtvSetCpuBankSegment1::@return
(byte*) dtvSetCpuBankSegment1::cpuBank
(const byte*) dtvSetCpuBankSegment1::cpuBank#0 cpuBank = ((byte*))(byte/word/signed word/dword/signed dword) 255
(byte) dtvSetCpuBankSegment1::cpuBankIdx
(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 reg byte a 2002.0
(byte) dtvSetCpuBankSegment1::cpuBankIdx#3 reg byte a 1003.0
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 reg byte a 4.0
(label) keyboard_key_pressed::@2
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0 reg byte y 0.6666666666666666
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#22 reg byte x 2.0
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 reg byte a 92.66666666666666
(byte) keyboard_key_pressed::return#10 reg byte a 202.0
(byte) keyboard_key_pressed::return#11 reg byte a 202.0
(byte) keyboard_key_pressed::return#12 reg byte a 202.0
(byte) keyboard_key_pressed::return#13 reg byte a 202.0
(byte) keyboard_key_pressed::return#14 reg byte a 202.0
(byte) keyboard_key_pressed::return#15 reg byte a 202.0
(byte) keyboard_key_pressed::return#16 reg byte a 202.0
(byte) keyboard_key_pressed::return#17 reg byte a 202.0
(byte) keyboard_key_pressed::return#18 reg byte a 202.0
(byte) keyboard_key_pressed::return#19 reg byte a 202.0
(byte) keyboard_key_pressed::return#2 reg byte a 202.0
(byte) keyboard_key_pressed::return#20 reg byte a 202.0
(byte) keyboard_key_pressed::return#21 reg byte a 202.0
(byte) keyboard_key_pressed::return#22 reg byte a 202.0
(byte) keyboard_key_pressed::return#23 reg byte a 202.0
(byte) keyboard_key_pressed::return#26 reg byte a 202.0
(byte) keyboard_key_pressed::return#27 reg byte a 202.0
(byte) keyboard_key_pressed::return#28 reg byte a 202.0
(byte) keyboard_key_pressed::return#29 reg byte a 202.0
(byte) keyboard_key_pressed::return#30 reg byte a 202.0
(byte) keyboard_key_pressed::return#31 reg byte a 202.0
(byte) keyboard_key_pressed::return#32 reg byte a 202.0
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0 reg byte a 4.0
(byte[]) keyboard_matrix_col_bitmask
(const byte[]) keyboard_matrix_col_bitmask#0 keyboard_matrix_col_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 16, (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 64, (byte/word/signed word/dword/signed dword) 128 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 reg byte a 1.3333333333333333
(byte) keyboard_matrix_read::return#2 reg byte a 4.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0 reg byte x 4.0
(byte[8]) keyboard_matrix_row_bitmask
(const byte[8]) keyboard_matrix_row_bitmask#0 keyboard_matrix_row_bitmask = { (byte/word/signed word/dword/signed dword) 254, (byte/word/signed word/dword/signed dword) 253, (byte/word/signed word/dword/signed dword) 251, (byte/word/signed word/dword/signed dword) 247, (byte/word/signed word/dword/signed dword) 239, (byte/word/signed word/dword/signed dword) 223, (byte/word/signed word/dword/signed dword) 191, (byte/signed byte/word/signed word/dword/signed dword) 127 }
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@return
(void()) menu()
(byte~) menu::$29 reg byte a 202.0
(byte~) menu::$33 reg byte a 202.0
(byte~) menu::$37 reg byte a 202.0
(byte~) menu::$41 reg byte a 202.0
(byte~) menu::$45 reg byte a 202.0
(byte~) menu::$49 reg byte a 202.0
(byte~) menu::$53 reg byte a 202.0
(byte~) menu::$57 reg byte a 202.0
(byte~) menu::$61 reg byte a 202.0
(byte~) menu::$65 reg byte a 202.0
(byte~) menu::$69 reg byte a 202.0
(label) menu::@1
(label) menu::@10
(label) menu::@11
(label) menu::@12
(label) menu::@13
(label) menu::@14
(label) menu::@15
(label) menu::@18
(label) menu::@2
(label) menu::@21
(label) menu::@23
(label) menu::@25
(label) menu::@27
(label) menu::@29
(label) menu::@3
(label) menu::@31
(label) menu::@33
(label) menu::@35
(label) menu::@37
(label) menu::@39
(label) menu::@4
(label) menu::@41
(label) menu::@44
(label) menu::@45
(label) menu::@47
(label) menu::@48
(label) menu::@50
(label) menu::@52
(label) menu::@54
(label) menu::@56
(label) menu::@58
(label) menu::@6
(label) menu::@60
(label) menu::@62
(label) menu::@64
(label) menu::@66
(label) menu::@7
(label) menu::@8
(label) menu::@9
(label) menu::@return
(byte*) menu::CHARSET
(const byte*) menu::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 38912
(byte*) menu::SCREEN
(const byte*) menu::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) menu::c
(byte*) menu::c#1 c zp ZP_WORD:2 151.5
(byte*) menu::c#2 c zp ZP_WORD:2 151.5
(byte) menu::i
(byte) menu::i#1 reg byte x 151.5
(byte) menu::i#2 reg byte x 202.0
(void()) mode_8bppchunkybmm()
(word~) mode_8bppchunkybmm::$20 $20 zp ZP_WORD:10 2002.0
(byte~) mode_8bppchunkybmm::$27 reg byte a 202.0
(label) mode_8bppchunkybmm::@1
(label) mode_8bppchunkybmm::@10
(label) mode_8bppchunkybmm::@11
(label) mode_8bppchunkybmm::@12
(label) mode_8bppchunkybmm::@19
(label) mode_8bppchunkybmm::@2
(label) mode_8bppchunkybmm::@21
(label) mode_8bppchunkybmm::@3
(label) mode_8bppchunkybmm::@4
(label) mode_8bppchunkybmm::@5
(label) mode_8bppchunkybmm::@6
(label) mode_8bppchunkybmm::@9
(label) mode_8bppchunkybmm::@return
(dword) mode_8bppchunkybmm::PLANEB
(const dword) mode_8bppchunkybmm::PLANEB#0 PLANEB = (dword/signed dword) 131072
(byte) mode_8bppchunkybmm::c
(byte) mode_8bppchunkybmm::c#0 reg byte a 2002.0
(byte*) mode_8bppchunkybmm::gfxb
(byte*) mode_8bppchunkybmm::gfxb#1 gfxb zp ZP_WORD:5 420.59999999999997
(byte*) mode_8bppchunkybmm::gfxb#3 gfxb zp ZP_WORD:5 1552.0
(byte*) mode_8bppchunkybmm::gfxb#4 gfxb zp ZP_WORD:5 750.75
(byte*) mode_8bppchunkybmm::gfxb#5 gfxb zp ZP_WORD:5 202.0
(byte) mode_8bppchunkybmm::gfxbCpuBank
(byte) mode_8bppchunkybmm::gfxbCpuBank#2 reg byte x 2002.0
(byte) mode_8bppchunkybmm::gfxbCpuBank#4 reg byte x 1026.25
(byte) mode_8bppchunkybmm::gfxbCpuBank#7 reg byte x 202.0
(byte) mode_8bppchunkybmm::gfxbCpuBank#8 reg byte x 344.8888888888889
(byte) mode_8bppchunkybmm::i
(byte) mode_8bppchunkybmm::i#1 reg byte x 151.5
(byte) mode_8bppchunkybmm::i#2 reg byte x 202.0
(word) mode_8bppchunkybmm::x
(word) mode_8bppchunkybmm::x#1 x zp ZP_WORD:2 1501.5
(word) mode_8bppchunkybmm::x#2 x zp ZP_WORD:2 300.29999999999995
(byte) mode_8bppchunkybmm::y
(byte) mode_8bppchunkybmm::y#1 y zp ZP_BYTE:4 151.5
(byte) mode_8bppchunkybmm::y#6 y zp ZP_BYTE:4 92.53846153846155
(void()) mode_8bpppixelcell()
(byte~) mode_8bpppixelcell::$11 reg byte a 2002.0
(byte~) mode_8bpppixelcell::$12 $12 zp ZP_BYTE:7 1001.0
(byte~) mode_8bpppixelcell::$13 reg byte a 2002.0
(byte~) mode_8bpppixelcell::$14 reg byte a 2002.0
(byte~) mode_8bpppixelcell::$17 reg byte a 20002.0
(byte~) mode_8bpppixelcell::$24 reg byte a 202.0
(label) mode_8bpppixelcell::@1
(label) mode_8bpppixelcell::@13
(label) mode_8bpppixelcell::@14
(label) mode_8bpppixelcell::@15
(label) mode_8bpppixelcell::@16
(label) mode_8bpppixelcell::@17
(label) mode_8bpppixelcell::@18
(label) mode_8bpppixelcell::@2
(label) mode_8bpppixelcell::@24
(label) mode_8bpppixelcell::@3
(label) mode_8bpppixelcell::@4
(label) mode_8bpppixelcell::@5
(label) mode_8bpppixelcell::@6
(label) mode_8bpppixelcell::@7
(label) mode_8bpppixelcell::@8
(label) mode_8bpppixelcell::@9
(label) mode_8bpppixelcell::@return
(byte*) mode_8bpppixelcell::CHARGEN
(byte*) mode_8bpppixelcell::PLANEA
(const byte*) mode_8bpppixelcell::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 15360
(byte*) mode_8bpppixelcell::PLANEB
(const byte*) mode_8bpppixelcell::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 16384
(byte) mode_8bpppixelcell::ax
(byte) mode_8bpppixelcell::ax#1 reg byte x 1501.5
(byte) mode_8bpppixelcell::ax#2 reg byte x 429.0
(byte) mode_8bpppixelcell::ay
(byte) mode_8bpppixelcell::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_8bpppixelcell::ay#4 ay zp ZP_BYTE:4 120.29999999999998
(byte) mode_8bpppixelcell::bits
(byte) mode_8bpppixelcell::bits#0 bits zp ZP_BYTE:8 1001.0
(byte) mode_8bpppixelcell::bits#1 bits zp ZP_BYTE:8 5000.5
(byte) mode_8bpppixelcell::bits#2 bits zp ZP_BYTE:8 4429.142857142857
(byte) mode_8bpppixelcell::c
(byte) mode_8bpppixelcell::c#2 reg byte a 20002.0
(byte~) mode_8bpppixelcell::c#3 reg byte a 20002.0
(byte) mode_8bpppixelcell::ch
(byte) mode_8bpppixelcell::ch#1 ch zp ZP_BYTE:4 151.5
(byte) mode_8bpppixelcell::ch#8 ch zp ZP_BYTE:4 11.882352941176471
(byte*) mode_8bpppixelcell::chargen
(byte*) mode_8bpppixelcell::chargen#1 chargen zp ZP_WORD:2 131.4375
(byte*) mode_8bpppixelcell::chargen#2 chargen zp ZP_WORD:2 1552.0
(byte*) mode_8bpppixelcell::chargen#4 chargen zp ZP_WORD:2 202.0
(byte) mode_8bpppixelcell::col
(byte) mode_8bpppixelcell::col#1 col zp ZP_BYTE:9 3014.857142857143
(byte) mode_8bpppixelcell::col#2 col zp ZP_BYTE:9 3875.5
(byte) mode_8bpppixelcell::col#5 col zp ZP_BYTE:9 701.0
(byte) mode_8bpppixelcell::col#7 col zp ZP_BYTE:9 202.0
(byte) mode_8bpppixelcell::cp
(byte) mode_8bpppixelcell::cp#1 reg byte x 15001.5
(byte) mode_8bpppixelcell::cp#2 reg byte x 2222.4444444444443
(byte) mode_8bpppixelcell::cr
(byte) mode_8bpppixelcell::cr#1 cr zp ZP_BYTE:7 1501.5
(byte) mode_8bpppixelcell::cr#6 cr zp ZP_BYTE:7 143.0
(byte*) mode_8bpppixelcell::gfxa
(byte*) mode_8bpppixelcell::gfxa#1 gfxa zp ZP_WORD:2 420.59999999999997
(byte*) mode_8bpppixelcell::gfxa#2 gfxa zp ZP_WORD:2 517.3333333333334
(byte*) mode_8bpppixelcell::gfxa#3 gfxa zp ZP_WORD:2 202.0
(byte*) mode_8bpppixelcell::gfxb
(byte*) mode_8bpppixelcell::gfxb#1 gfxb zp ZP_WORD:5 2344.8888888888887
(byte*) mode_8bpppixelcell::gfxb#2 gfxb zp ZP_WORD:5 5167.333333333333
(byte*) mode_8bpppixelcell::gfxb#5 gfxb zp ZP_WORD:5 701.0
(byte*) mode_8bpppixelcell::gfxb#7 gfxb zp ZP_WORD:5 202.0
(byte) mode_8bpppixelcell::i
(byte) mode_8bpppixelcell::i#1 reg byte x 151.5
(byte) mode_8bpppixelcell::i#2 reg byte x 202.0
(void()) mode_ecmchar()
(byte~) mode_ecmchar::$25 reg byte a 2002.0
(byte~) mode_ecmchar::$26 reg byte a 2002.0
(byte~) mode_ecmchar::$27 reg byte a 2002.0
(byte~) mode_ecmchar::$28 $28 zp ZP_BYTE:7 1001.0
(byte~) mode_ecmchar::$29 reg byte a 2002.0
(byte~) mode_ecmchar::$30 reg byte a 2002.0
(byte~) mode_ecmchar::$33 reg byte a 202.0
(label) mode_ecmchar::@1
(label) mode_ecmchar::@16
(label) mode_ecmchar::@2
(label) mode_ecmchar::@3
(label) mode_ecmchar::@4
(label) mode_ecmchar::@5
(label) mode_ecmchar::@8
(label) mode_ecmchar::@9
(label) mode_ecmchar::@return
(byte*) mode_ecmchar::CHARSET
(const byte*) mode_ecmchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_ecmchar::COLORS
(const byte*) mode_ecmchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 55296
(byte*) mode_ecmchar::SCREEN
(const byte*) mode_ecmchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_ecmchar::ch
(byte*) mode_ecmchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_ecmchar::ch#2 ch zp ZP_WORD:5 310.4
(byte*) mode_ecmchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_ecmchar::col
(byte*) mode_ecmchar::col#1 col zp ZP_WORD:2 191.1818181818182
(byte*) mode_ecmchar::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_ecmchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_ecmchar::cx
(byte) mode_ecmchar::cx#1 reg byte x 1501.5
(byte) mode_ecmchar::cx#2 reg byte x 364.0
(byte) mode_ecmchar::cy
(byte) mode_ecmchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_ecmchar::cy#4 cy zp ZP_BYTE:4 157.42857142857144
(byte) mode_ecmchar::i
(byte) mode_ecmchar::i#1 reg byte x 151.5
(byte) mode_ecmchar::i#2 reg byte x 202.0
(void()) mode_hicolecmchar()
(byte~) mode_hicolecmchar::$25 reg byte a 2002.0
(byte~) mode_hicolecmchar::$26 $26 zp ZP_BYTE:7 1001.0
(byte~) mode_hicolecmchar::$27 reg byte a 2002.0
(byte~) mode_hicolecmchar::$31 reg byte a 202.0
(label) mode_hicolecmchar::@1
(label) mode_hicolecmchar::@16
(label) mode_hicolecmchar::@2
(label) mode_hicolecmchar::@3
(label) mode_hicolecmchar::@4
(label) mode_hicolecmchar::@5
(label) mode_hicolecmchar::@8
(label) mode_hicolecmchar::@9
(label) mode_hicolecmchar::@return
(byte*) mode_hicolecmchar::CHARSET
(const byte*) mode_hicolecmchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_hicolecmchar::COLORS
(const byte*) mode_hicolecmchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_hicolecmchar::SCREEN
(const byte*) mode_hicolecmchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_hicolecmchar::ch
(byte*) mode_hicolecmchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_hicolecmchar::ch#2 ch zp ZP_WORD:5 388.0
(byte*) mode_hicolecmchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_hicolecmchar::col
(byte*) mode_hicolecmchar::col#1 col zp ZP_WORD:2 300.42857142857144
(byte*) mode_hicolecmchar::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_hicolecmchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_hicolecmchar::cx
(byte) mode_hicolecmchar::cx#1 reg byte x 1501.5
(byte) mode_hicolecmchar::cx#2 reg byte x 333.6666666666667
(byte) mode_hicolecmchar::cy
(byte) mode_hicolecmchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_hicolecmchar::cy#4 cy zp ZP_BYTE:4 100.25000000000001
(byte) mode_hicolecmchar::i
(byte) mode_hicolecmchar::i#1 reg byte x 151.5
(byte) mode_hicolecmchar::i#2 reg byte x 202.0
(byte) mode_hicolecmchar::v
(byte) mode_hicolecmchar::v#0 reg byte a 1001.0
(void()) mode_hicolmcchar()
(byte~) mode_hicolmcchar::$25 reg byte a 2002.0
(byte~) mode_hicolmcchar::$26 $26 zp ZP_BYTE:7 1001.0
(byte~) mode_hicolmcchar::$27 reg byte a 2002.0
(byte~) mode_hicolmcchar::$31 reg byte a 202.0
(label) mode_hicolmcchar::@1
(label) mode_hicolmcchar::@16
(label) mode_hicolmcchar::@2
(label) mode_hicolmcchar::@3
(label) mode_hicolmcchar::@4
(label) mode_hicolmcchar::@5
(label) mode_hicolmcchar::@8
(label) mode_hicolmcchar::@9
(label) mode_hicolmcchar::@return
(byte*) mode_hicolmcchar::CHARSET
(const byte*) mode_hicolmcchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_hicolmcchar::COLORS
(const byte*) mode_hicolmcchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_hicolmcchar::SCREEN
(const byte*) mode_hicolmcchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_hicolmcchar::ch
(byte*) mode_hicolmcchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_hicolmcchar::ch#2 ch zp ZP_WORD:5 388.0
(byte*) mode_hicolmcchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_hicolmcchar::col
(byte*) mode_hicolmcchar::col#1 col zp ZP_WORD:2 300.42857142857144
(byte*) mode_hicolmcchar::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_hicolmcchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_hicolmcchar::cx
(byte) mode_hicolmcchar::cx#1 reg byte x 1501.5
(byte) mode_hicolmcchar::cx#2 reg byte x 333.6666666666667
(byte) mode_hicolmcchar::cy
(byte) mode_hicolmcchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_hicolmcchar::cy#4 cy zp ZP_BYTE:4 100.25000000000001
(byte) mode_hicolmcchar::i
(byte) mode_hicolmcchar::i#1 reg byte x 151.5
(byte) mode_hicolmcchar::i#2 reg byte x 202.0
(byte) mode_hicolmcchar::v
(byte) mode_hicolmcchar::v#0 reg byte a 1001.0
(void()) mode_hicolstdchar()
(byte~) mode_hicolstdchar::$24 reg byte a 2002.0
(byte~) mode_hicolstdchar::$25 $25 zp ZP_BYTE:7 1001.0
(byte~) mode_hicolstdchar::$26 reg byte a 2002.0
(byte~) mode_hicolstdchar::$30 reg byte a 202.0
(label) mode_hicolstdchar::@1
(label) mode_hicolstdchar::@16
(label) mode_hicolstdchar::@2
(label) mode_hicolstdchar::@3
(label) mode_hicolstdchar::@4
(label) mode_hicolstdchar::@5
(label) mode_hicolstdchar::@8
(label) mode_hicolstdchar::@9
(label) mode_hicolstdchar::@return
(byte*) mode_hicolstdchar::CHARSET
(const byte*) mode_hicolstdchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_hicolstdchar::COLORS
(const byte*) mode_hicolstdchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 33792
(byte*) mode_hicolstdchar::SCREEN
(const byte*) mode_hicolstdchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_hicolstdchar::ch
(byte*) mode_hicolstdchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_hicolstdchar::ch#2 ch zp ZP_WORD:5 388.0
(byte*) mode_hicolstdchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_hicolstdchar::col
(byte*) mode_hicolstdchar::col#1 col zp ZP_WORD:2 300.42857142857144
(byte*) mode_hicolstdchar::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_hicolstdchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_hicolstdchar::cx
(byte) mode_hicolstdchar::cx#1 reg byte x 1501.5
(byte) mode_hicolstdchar::cx#2 reg byte x 333.6666666666667
(byte) mode_hicolstdchar::cy
(byte) mode_hicolstdchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_hicolstdchar::cy#4 cy zp ZP_BYTE:4 100.25000000000001
(byte) mode_hicolstdchar::i
(byte) mode_hicolstdchar::i#1 reg byte x 151.5
(byte) mode_hicolstdchar::i#2 reg byte x 202.0
(byte) mode_hicolstdchar::v
(byte) mode_hicolstdchar::v#0 reg byte a 1001.0
(void()) mode_mcchar()
(byte~) mode_mcchar::$25 reg byte a 2002.0
(byte~) mode_mcchar::$26 reg byte a 2002.0
(byte~) mode_mcchar::$27 reg byte a 2002.0
(byte~) mode_mcchar::$28 $28 zp ZP_BYTE:7 1001.0
(byte~) mode_mcchar::$29 reg byte a 2002.0
(byte~) mode_mcchar::$30 reg byte a 2002.0
(byte~) mode_mcchar::$33 reg byte a 202.0
(label) mode_mcchar::@1
(label) mode_mcchar::@16
(label) mode_mcchar::@2
(label) mode_mcchar::@3
(label) mode_mcchar::@4
(label) mode_mcchar::@5
(label) mode_mcchar::@8
(label) mode_mcchar::@9
(label) mode_mcchar::@return
(byte*) mode_mcchar::CHARSET
(const byte*) mode_mcchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_mcchar::COLORS
(const byte*) mode_mcchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 55296
(byte*) mode_mcchar::SCREEN
(const byte*) mode_mcchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_mcchar::ch
(byte*) mode_mcchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_mcchar::ch#2 ch zp ZP_WORD:5 310.4
(byte*) mode_mcchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_mcchar::col
(byte*) mode_mcchar::col#1 col zp ZP_WORD:2 191.1818181818182
(byte*) mode_mcchar::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_mcchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_mcchar::cx
(byte) mode_mcchar::cx#1 reg byte x 1501.5
(byte) mode_mcchar::cx#2 reg byte x 364.0
(byte) mode_mcchar::cy
(byte) mode_mcchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_mcchar::cy#4 cy zp ZP_BYTE:4 157.42857142857144
(byte) mode_mcchar::i
(byte) mode_mcchar::i#1 reg byte x 151.5
(byte) mode_mcchar::i#2 reg byte x 202.0
(void()) mode_sixsfred()
(byte~) mode_sixsfred::$15 reg byte a 2002.0
(byte~) mode_sixsfred::$16 reg byte a 2002.0
(byte~) mode_sixsfred::$19 reg byte a 2002.0
(byte~) mode_sixsfred::$25 reg byte a 202.0
(label) mode_sixsfred::@1
(label) mode_sixsfred::@12
(label) mode_sixsfred::@13
(label) mode_sixsfred::@15
(label) mode_sixsfred::@17
(label) mode_sixsfred::@2
(label) mode_sixsfred::@24
(label) mode_sixsfred::@3
(label) mode_sixsfred::@4
(label) mode_sixsfred::@5
(label) mode_sixsfred::@6
(label) mode_sixsfred::@7
(label) mode_sixsfred::@8
(label) mode_sixsfred::@9
(label) mode_sixsfred::@return
(byte*) mode_sixsfred::COLORS
(const byte*) mode_sixsfred::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_sixsfred::PLANEA
(const byte*) mode_sixsfred::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 16384
(byte*) mode_sixsfred::PLANEB
(const byte*) mode_sixsfred::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 24576
(byte) mode_sixsfred::ax
(byte) mode_sixsfred::ax#1 reg byte x 1501.5
(byte) mode_sixsfred::ax#2 reg byte x 400.4
(byte) mode_sixsfred::ay
(byte) mode_sixsfred::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_sixsfred::ay#4 ay zp ZP_BYTE:4 150.375
(byte) mode_sixsfred::bx
(byte) mode_sixsfred::bx#1 reg byte x 1501.5
(byte) mode_sixsfred::bx#2 reg byte x 667.3333333333334
(byte) mode_sixsfred::by
(byte) mode_sixsfred::by#1 by zp ZP_BYTE:4 151.5
(byte) mode_sixsfred::by#4 by zp ZP_BYTE:4 33.666666666666664
(byte*) mode_sixsfred::col
(byte*) mode_sixsfred::col#1 col zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_sixsfred::col#3 col zp ZP_WORD:2 202.0
(byte) mode_sixsfred::cx
(byte) mode_sixsfred::cx#1 reg byte x 1501.5
(byte) mode_sixsfred::cx#2 reg byte x 600.5999999999999
(byte) mode_sixsfred::cy
(byte) mode_sixsfred::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_sixsfred::cy#4 cy zp ZP_BYTE:4 150.375
(byte*) mode_sixsfred::gfxa
(byte*) mode_sixsfred::gfxa#1 gfxa zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred::gfxa#2 gfxa zp ZP_WORD:2 776.0
(byte*) mode_sixsfred::gfxa#3 gfxa zp ZP_WORD:2 202.0
(byte*) mode_sixsfred::gfxb
(byte*) mode_sixsfred::gfxb#1 gfxb zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred::gfxb#2 gfxb zp ZP_WORD:2 1552.0
(byte*) mode_sixsfred::gfxb#3 gfxb zp ZP_WORD:2 202.0
(byte) mode_sixsfred::i
(byte) mode_sixsfred::i#1 reg byte x 151.5
(byte) mode_sixsfred::i#2 reg byte x 202.0
(byte) mode_sixsfred::row
(byte) mode_sixsfred::row#0 reg byte a 2002.0
(byte[]) mode_sixsfred::row_bitmask
(const byte[]) mode_sixsfred::row_bitmask#0 row_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
(void()) mode_sixsfred2()
(byte~) mode_sixsfred2::$14 reg byte a 2002.0
(byte~) mode_sixsfred2::$15 $15 zp ZP_BYTE:7 1001.0
(byte~) mode_sixsfred2::$16 reg byte a 2002.0
(byte~) mode_sixsfred2::$17 reg byte a 2002.0
(byte~) mode_sixsfred2::$20 reg byte a 2002.0
(byte~) mode_sixsfred2::$26 reg byte a 202.0
(label) mode_sixsfred2::@1
(label) mode_sixsfred2::@12
(label) mode_sixsfred2::@13
(label) mode_sixsfred2::@15
(label) mode_sixsfred2::@17
(label) mode_sixsfred2::@2
(label) mode_sixsfred2::@24
(label) mode_sixsfred2::@3
(label) mode_sixsfred2::@4
(label) mode_sixsfred2::@5
(label) mode_sixsfred2::@6
(label) mode_sixsfred2::@7
(label) mode_sixsfred2::@8
(label) mode_sixsfred2::@9
(label) mode_sixsfred2::@return
(byte*) mode_sixsfred2::COLORS
(const byte*) mode_sixsfred2::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_sixsfred2::PLANEA
(const byte*) mode_sixsfred2::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 16384
(byte*) mode_sixsfred2::PLANEB
(const byte*) mode_sixsfred2::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 24576
(byte) mode_sixsfred2::ax
(byte) mode_sixsfred2::ax#1 reg byte x 1501.5
(byte) mode_sixsfred2::ax#2 reg byte x 400.4
(byte) mode_sixsfred2::ay
(byte) mode_sixsfred2::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_sixsfred2::ay#4 ay zp ZP_BYTE:4 150.375
(byte) mode_sixsfred2::bx
(byte) mode_sixsfred2::bx#1 reg byte x 1501.5
(byte) mode_sixsfred2::bx#2 reg byte x 667.3333333333334
(byte) mode_sixsfred2::by
(byte) mode_sixsfred2::by#1 by zp ZP_BYTE:4 151.5
(byte) mode_sixsfred2::by#4 by zp ZP_BYTE:4 33.666666666666664
(byte*) mode_sixsfred2::col
(byte*) mode_sixsfred2::col#1 col zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred2::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_sixsfred2::col#3 col zp ZP_WORD:2 202.0
(byte) mode_sixsfred2::cx
(byte) mode_sixsfred2::cx#1 reg byte x 1501.5
(byte) mode_sixsfred2::cx#2 reg byte x 429.0
(byte) mode_sixsfred2::cy
(byte) mode_sixsfred2::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_sixsfred2::cy#4 cy zp ZP_BYTE:4 120.29999999999998
(byte*) mode_sixsfred2::gfxa
(byte*) mode_sixsfred2::gfxa#1 gfxa zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred2::gfxa#2 gfxa zp ZP_WORD:2 776.0
(byte*) mode_sixsfred2::gfxa#3 gfxa zp ZP_WORD:2 202.0
(byte*) mode_sixsfred2::gfxb
(byte*) mode_sixsfred2::gfxb#1 gfxb zp ZP_WORD:2 420.59999999999997
(byte*) mode_sixsfred2::gfxb#2 gfxb zp ZP_WORD:2 1552.0
(byte*) mode_sixsfred2::gfxb#3 gfxb zp ZP_WORD:2 202.0
(byte) mode_sixsfred2::i
(byte) mode_sixsfred2::i#1 reg byte x 151.5
(byte) mode_sixsfred2::i#2 reg byte x 202.0
(byte) mode_sixsfred2::row
(byte) mode_sixsfred2::row#0 reg byte a 2002.0
(byte[]) mode_sixsfred2::row_bitmask
(const byte[]) mode_sixsfred2::row_bitmask#0 row_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 85, (byte/word/signed word/dword/signed dword) 170, (byte/word/signed word/dword/signed dword) 255 }
(void()) mode_stdchar()
(byte~) mode_stdchar::$24 reg byte a 2002.0
(byte~) mode_stdchar::$25 reg byte a 2002.0
(byte~) mode_stdchar::$26 reg byte a 2002.0
(byte~) mode_stdchar::$27 $27 zp ZP_BYTE:7 1001.0
(byte~) mode_stdchar::$28 reg byte a 2002.0
(byte~) mode_stdchar::$29 reg byte a 2002.0
(byte~) mode_stdchar::$32 reg byte a 202.0
(label) mode_stdchar::@1
(label) mode_stdchar::@16
(label) mode_stdchar::@2
(label) mode_stdchar::@3
(label) mode_stdchar::@4
(label) mode_stdchar::@5
(label) mode_stdchar::@8
(label) mode_stdchar::@9
(label) mode_stdchar::@return
(byte*) mode_stdchar::CHARSET
(const byte*) mode_stdchar::CHARSET#0 CHARSET = ((byte*))(word/dword/signed dword) 36864
(byte*) mode_stdchar::COLORS
(const byte*) mode_stdchar::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 55296
(byte*) mode_stdchar::SCREEN
(const byte*) mode_stdchar::SCREEN#0 SCREEN = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_stdchar::ch
(byte*) mode_stdchar::ch#1 ch zp ZP_WORD:5 420.59999999999997
(byte*) mode_stdchar::ch#2 ch zp ZP_WORD:5 310.4
(byte*) mode_stdchar::ch#3 ch zp ZP_WORD:5 202.0
(byte*) mode_stdchar::col
(byte*) mode_stdchar::col#1 col zp ZP_WORD:2 191.1818181818182
(byte*) mode_stdchar::col#2 col zp ZP_WORD:2 776.0
(byte*) mode_stdchar::col#3 col zp ZP_WORD:2 202.0
(byte) mode_stdchar::cx
(byte) mode_stdchar::cx#1 reg byte x 1501.5
(byte) mode_stdchar::cx#2 reg byte x 364.0
(byte) mode_stdchar::cy
(byte) mode_stdchar::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_stdchar::cy#4 cy zp ZP_BYTE:4 157.42857142857144
(byte) mode_stdchar::i
(byte) mode_stdchar::i#1 reg byte x 151.5
(byte) mode_stdchar::i#2 reg byte x 202.0
(void()) mode_twoplanebitmap()
(byte~) mode_twoplanebitmap::$14 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$15 $15 zp ZP_BYTE:7 1001.0
(byte~) mode_twoplanebitmap::$16 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$17 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$20 reg byte a 2002.0
(byte~) mode_twoplanebitmap::$27 reg byte a 202.0
(label) mode_twoplanebitmap::@1
(label) mode_twoplanebitmap::@10
(label) mode_twoplanebitmap::@11
(label) mode_twoplanebitmap::@14
(label) mode_twoplanebitmap::@15
(label) mode_twoplanebitmap::@17
(label) mode_twoplanebitmap::@19
(label) mode_twoplanebitmap::@2
(label) mode_twoplanebitmap::@21
(label) mode_twoplanebitmap::@28
(label) mode_twoplanebitmap::@3
(label) mode_twoplanebitmap::@4
(label) mode_twoplanebitmap::@5
(label) mode_twoplanebitmap::@6
(label) mode_twoplanebitmap::@7
(label) mode_twoplanebitmap::@8
(label) mode_twoplanebitmap::@9
(label) mode_twoplanebitmap::@return
(byte*) mode_twoplanebitmap::COLORS
(const byte*) mode_twoplanebitmap::COLORS#0 COLORS = ((byte*))(word/dword/signed dword) 32768
(byte*) mode_twoplanebitmap::PLANEA
(const byte*) mode_twoplanebitmap::PLANEA#0 PLANEA = ((byte*))(word/signed word/dword/signed dword) 16384
(byte*) mode_twoplanebitmap::PLANEB
(const byte*) mode_twoplanebitmap::PLANEB#0 PLANEB = ((byte*))(word/signed word/dword/signed dword) 24576
(byte) mode_twoplanebitmap::ax
(byte) mode_twoplanebitmap::ax#1 reg byte x 1501.5
(byte) mode_twoplanebitmap::ax#2 reg byte x 250.25
(byte) mode_twoplanebitmap::ay
(byte) mode_twoplanebitmap::ay#1 ay zp ZP_BYTE:4 151.5
(byte) mode_twoplanebitmap::ay#4 ay zp ZP_BYTE:4 109.36363636363637
(byte) mode_twoplanebitmap::bx
(byte) mode_twoplanebitmap::bx#1 reg byte x 1501.5
(byte) mode_twoplanebitmap::bx#2 reg byte x 667.3333333333334
(byte) mode_twoplanebitmap::by
(byte) mode_twoplanebitmap::by#1 by zp ZP_BYTE:4 151.5
(byte) mode_twoplanebitmap::by#4 by zp ZP_BYTE:4 33.666666666666664
(byte*) mode_twoplanebitmap::col
(byte*) mode_twoplanebitmap::col#1 col zp ZP_WORD:2 420.59999999999997
(byte*) mode_twoplanebitmap::col#2 col zp ZP_WORD:2 517.3333333333334
(byte*) mode_twoplanebitmap::col#3 col zp ZP_WORD:2 202.0
(byte) mode_twoplanebitmap::cx
(byte) mode_twoplanebitmap::cx#1 reg byte x 1501.5
(byte) mode_twoplanebitmap::cx#2 reg byte x 429.0
(byte) mode_twoplanebitmap::cy
(byte) mode_twoplanebitmap::cy#1 cy zp ZP_BYTE:4 151.5
(byte) mode_twoplanebitmap::cy#4 cy zp ZP_BYTE:4 120.29999999999998
(byte*) mode_twoplanebitmap::gfxa
(byte*) mode_twoplanebitmap::gfxa#1 gfxa zp ZP_WORD:2 2002.0
(byte*) mode_twoplanebitmap::gfxa#2 gfxa zp ZP_WORD:2 2002.0
(byte*) mode_twoplanebitmap::gfxa#3 gfxa zp ZP_WORD:2 1021.2
(byte*) mode_twoplanebitmap::gfxa#6 gfxa zp ZP_WORD:2 202.0
(byte*) mode_twoplanebitmap::gfxa#7 gfxa zp ZP_WORD:2 620.8
(byte*) mode_twoplanebitmap::gfxb
(byte*) mode_twoplanebitmap::gfxb#1 gfxb zp ZP_WORD:2 420.59999999999997
(byte*) mode_twoplanebitmap::gfxb#2 gfxb zp ZP_WORD:2 1552.0
(byte*) mode_twoplanebitmap::gfxb#3 gfxb zp ZP_WORD:2 202.0
(byte) mode_twoplanebitmap::i
(byte) mode_twoplanebitmap::i#1 reg byte x 151.5
(byte) mode_twoplanebitmap::i#2 reg byte x 202.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp ZP_WORD:5 2002.0
(byte*) print_char_cursor#17 print_char_cursor zp ZP_WORD:5 821.0
(byte*) print_char_cursor#19 print_char_cursor zp ZP_WORD:5 101.0
(byte*) print_char_cursor#32 print_char_cursor zp ZP_WORD:5 572.0
(byte*~) print_char_cursor#95 print_char_cursor zp ZP_WORD:5 202.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:2 151.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:2 151.5
(byte*) print_line_cursor
(byte*) print_line_cursor#17 print_line_cursor zp ZP_WORD:10 8.583333333333332
(byte*) print_line_cursor#18 print_line_cursor zp ZP_WORD:10 2004.0
(byte*) print_line_cursor#19 print_line_cursor zp ZP_WORD:10 641.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_set_screen((byte*) print_set_screen::screen)
(label) print_set_screen::@return
(byte*) print_set_screen::screen
(void()) print_str_lines((byte*) print_str_lines::str)
(label) print_str_lines::@1
(label) print_str_lines::@4
(label) print_str_lines::@5
(label) print_str_lines::@8
(label) print_str_lines::@9
(label) print_str_lines::@return
(byte) print_str_lines::ch
(byte) print_str_lines::ch#0 reg byte a 667.3333333333334
(byte*) print_str_lines::str
(byte*) print_str_lines::str#0 str zp ZP_WORD:2 233.66666666666669
(byte*) print_str_lines::str#2 str zp ZP_WORD:2 151.5
(byte*) print_str_lines::str#3 str zp ZP_WORD:2 1552.0

reg byte x [ menu::i#2 menu::i#1 ]
zp ZP_WORD:2 [ menu::c#2 menu::c#1 mode_8bppchunkybmm::x#2 mode_8bppchunkybmm::x#1 mode_8bpppixelcell::gfxa#2 mode_8bpppixelcell::gfxa#3 mode_8bpppixelcell::gfxa#1 mode_8bpppixelcell::chargen#2 mode_8bpppixelcell::chargen#4 mode_8bpppixelcell::chargen#1 mode_sixsfred::col#2 mode_sixsfred::col#3 mode_sixsfred::col#1 mode_sixsfred::gfxa#2 mode_sixsfred::gfxa#3 mode_sixsfred::gfxa#1 mode_sixsfred::gfxb#2 mode_sixsfred::gfxb#3 mode_sixsfred::gfxb#1 mode_twoplanebitmap::col#2 mode_twoplanebitmap::col#3 mode_twoplanebitmap::col#1 mode_twoplanebitmap::gfxa#3 mode_twoplanebitmap::gfxa#6 mode_twoplanebitmap::gfxa#7 mode_twoplanebitmap::gfxa#2 mode_twoplanebitmap::gfxa#1 mode_twoplanebitmap::gfxb#2 mode_twoplanebitmap::gfxb#3 mode_twoplanebitmap::gfxb#1 mode_sixsfred2::col#2 mode_sixsfred2::col#3 mode_sixsfred2::col#1 mode_sixsfred2::gfxa#2 mode_sixsfred2::gfxa#3 mode_sixsfred2::gfxa#1 mode_sixsfred2::gfxb#2 mode_sixsfred2::gfxb#3 mode_sixsfred2::gfxb#1 mode_hicolmcchar::col#2 mode_hicolmcchar::col#3 mode_hicolmcchar::col#1 mode_hicolecmchar::col#2 mode_hicolecmchar::col#3 mode_hicolecmchar::col#1 mode_hicolstdchar::col#2 mode_hicolstdchar::col#3 mode_hicolstdchar::col#1 mode_mcchar::col#2 mode_mcchar::col#3 mode_mcchar::col#1 mode_ecmchar::col#2 mode_ecmchar::col#3 mode_ecmchar::col#1 mode_stdchar::col#2 mode_stdchar::col#3 mode_stdchar::col#1 print_str_lines::str#3 print_str_lines::str#2 print_str_lines::str#0 print_cls::sc#2 print_cls::sc#1 ]
reg byte x [ mode_8bppchunkybmm::i#2 mode_8bppchunkybmm::i#1 ]
zp ZP_BYTE:4 [ mode_8bppchunkybmm::y#6 mode_8bppchunkybmm::y#1 mode_8bpppixelcell::ay#4 mode_8bpppixelcell::ay#1 mode_8bpppixelcell::ch#8 mode_8bpppixelcell::ch#1 mode_sixsfred::cy#4 mode_sixsfred::cy#1 mode_sixsfred::ay#4 mode_sixsfred::ay#1 mode_sixsfred::by#4 mode_sixsfred::by#1 mode_twoplanebitmap::cy#4 mode_twoplanebitmap::cy#1 mode_twoplanebitmap::ay#4 mode_twoplanebitmap::ay#1 mode_twoplanebitmap::by#4 mode_twoplanebitmap::by#1 mode_sixsfred2::cy#4 mode_sixsfred2::cy#1 mode_sixsfred2::ay#4 mode_sixsfred2::ay#1 mode_sixsfred2::by#4 mode_sixsfred2::by#1 mode_hicolmcchar::cy#4 mode_hicolmcchar::cy#1 mode_hicolecmchar::cy#4 mode_hicolecmchar::cy#1 mode_hicolstdchar::cy#4 mode_hicolstdchar::cy#1 mode_mcchar::cy#4 mode_mcchar::cy#1 mode_ecmchar::cy#4 mode_ecmchar::cy#1 mode_stdchar::cy#4 mode_stdchar::cy#1 ]
reg byte x [ mode_8bppchunkybmm::gfxbCpuBank#4 mode_8bppchunkybmm::gfxbCpuBank#7 mode_8bppchunkybmm::gfxbCpuBank#8 mode_8bppchunkybmm::gfxbCpuBank#2 ]
zp ZP_WORD:5 [ mode_8bppchunkybmm::gfxb#4 mode_8bppchunkybmm::gfxb#3 mode_8bppchunkybmm::gfxb#5 mode_8bppchunkybmm::gfxb#1 mode_8bpppixelcell::gfxb#2 mode_8bpppixelcell::gfxb#5 mode_8bpppixelcell::gfxb#7 mode_8bpppixelcell::gfxb#1 mode_hicolmcchar::ch#2 mode_hicolmcchar::ch#3 mode_hicolmcchar::ch#1 mode_hicolecmchar::ch#2 mode_hicolecmchar::ch#3 mode_hicolecmchar::ch#1 mode_hicolstdchar::ch#2 mode_hicolstdchar::ch#3 mode_hicolstdchar::ch#1 mode_mcchar::ch#2 mode_mcchar::ch#3 mode_mcchar::ch#1 mode_ecmchar::ch#2 mode_ecmchar::ch#3 mode_ecmchar::ch#1 mode_stdchar::ch#2 mode_stdchar::ch#3 mode_stdchar::ch#1 print_char_cursor#17 print_char_cursor#19 print_char_cursor#95 print_char_cursor#32 print_char_cursor#1 ]
reg byte x [ keyboard_key_pressed::key#22 ]
reg byte a [ dtvSetCpuBankSegment1::cpuBankIdx#3 dtvSetCpuBankSegment1::cpuBankIdx#1 ]
reg byte x [ mode_8bpppixelcell::i#2 mode_8bpppixelcell::i#1 ]
reg byte x [ mode_8bpppixelcell::ax#2 mode_8bpppixelcell::ax#1 ]
zp ZP_BYTE:7 [ mode_8bpppixelcell::cr#6 mode_8bpppixelcell::cr#1 mode_8bpppixelcell::$12 mode_twoplanebitmap::$15 mode_sixsfred2::$15 mode_hicolmcchar::$26 mode_hicolecmchar::$26 mode_hicolstdchar::$25 mode_mcchar::$28 mode_ecmchar::$28 mode_stdchar::$27 ]
zp ZP_BYTE:8 [ mode_8bpppixelcell::bits#2 mode_8bpppixelcell::bits#0 mode_8bpppixelcell::bits#1 ]
zp ZP_BYTE:9 [ mode_8bpppixelcell::col#2 mode_8bpppixelcell::col#5 mode_8bpppixelcell::col#7 mode_8bpppixelcell::col#1 ]
reg byte x [ mode_8bpppixelcell::cp#2 mode_8bpppixelcell::cp#1 ]
reg byte a [ mode_8bpppixelcell::c#2 mode_8bpppixelcell::c#3 ]
reg byte x [ mode_sixsfred::i#2 mode_sixsfred::i#1 ]
reg byte x [ mode_sixsfred::cx#2 mode_sixsfred::cx#1 ]
reg byte x [ mode_sixsfred::ax#2 mode_sixsfred::ax#1 ]
reg byte x [ mode_sixsfred::bx#2 mode_sixsfred::bx#1 ]
reg byte x [ mode_twoplanebitmap::i#2 mode_twoplanebitmap::i#1 ]
reg byte x [ mode_twoplanebitmap::cx#2 mode_twoplanebitmap::cx#1 ]
reg byte x [ mode_twoplanebitmap::ax#2 mode_twoplanebitmap::ax#1 ]
reg byte x [ mode_twoplanebitmap::bx#2 mode_twoplanebitmap::bx#1 ]
reg byte x [ mode_sixsfred2::i#2 mode_sixsfred2::i#1 ]
reg byte x [ mode_sixsfred2::cx#2 mode_sixsfred2::cx#1 ]
reg byte x [ mode_sixsfred2::ax#2 mode_sixsfred2::ax#1 ]
reg byte x [ mode_sixsfred2::bx#2 mode_sixsfred2::bx#1 ]
reg byte x [ mode_hicolmcchar::i#2 mode_hicolmcchar::i#1 ]
reg byte x [ mode_hicolmcchar::cx#2 mode_hicolmcchar::cx#1 ]
reg byte x [ mode_hicolecmchar::i#2 mode_hicolecmchar::i#1 ]
reg byte x [ mode_hicolecmchar::cx#2 mode_hicolecmchar::cx#1 ]
reg byte x [ mode_hicolstdchar::i#2 mode_hicolstdchar::i#1 ]
reg byte x [ mode_hicolstdchar::cx#2 mode_hicolstdchar::cx#1 ]
reg byte x [ mode_mcchar::i#2 mode_mcchar::i#1 ]
reg byte x [ mode_mcchar::cx#2 mode_mcchar::cx#1 ]
reg byte x [ mode_ecmchar::i#2 mode_ecmchar::i#1 ]
reg byte x [ mode_ecmchar::cx#2 mode_ecmchar::cx#1 ]
reg byte x [ mode_stdchar::i#2 mode_stdchar::i#1 ]
reg byte x [ mode_stdchar::cx#2 mode_stdchar::cx#1 ]
zp ZP_WORD:10 [ print_line_cursor#18 print_line_cursor#17 print_line_cursor#19 mode_8bppchunkybmm::$20 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ menu::$29 ]
reg byte a [ keyboard_key_pressed::return#26 ]
reg byte a [ menu::$33 ]
reg byte a [ keyboard_key_pressed::return#27 ]
reg byte a [ menu::$37 ]
reg byte a [ keyboard_key_pressed::return#28 ]
reg byte a [ menu::$41 ]
reg byte a [ keyboard_key_pressed::return#29 ]
reg byte a [ menu::$45 ]
reg byte a [ keyboard_key_pressed::return#30 ]
reg byte a [ menu::$49 ]
reg byte a [ keyboard_key_pressed::return#31 ]
reg byte a [ menu::$53 ]
reg byte a [ keyboard_key_pressed::return#32 ]
reg byte a [ menu::$57 ]
reg byte a [ keyboard_key_pressed::return#10 ]
reg byte a [ menu::$61 ]
reg byte a [ keyboard_key_pressed::return#11 ]
reg byte a [ menu::$65 ]
reg byte a [ keyboard_key_pressed::return#12 ]
reg byte a [ menu::$69 ]
reg byte a [ mode_8bppchunkybmm::c#0 ]
reg byte a [ keyboard_key_pressed::return#23 ]
reg byte a [ mode_8bppchunkybmm::$27 ]
reg byte y [ keyboard_key_pressed::colidx#0 ]
reg byte a [ keyboard_key_pressed::rowidx#0 ]
reg byte x [ keyboard_matrix_read::rowid#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ mode_8bpppixelcell::$11 ]
reg byte a [ mode_8bpppixelcell::$13 ]
reg byte a [ mode_8bpppixelcell::$14 ]
reg byte a [ mode_8bpppixelcell::$17 ]
reg byte a [ keyboard_key_pressed::return#22 ]
reg byte a [ mode_8bpppixelcell::$24 ]
reg byte a [ mode_sixsfred::$15 ]
reg byte a [ mode_sixsfred::$16 ]
reg byte a [ mode_sixsfred::$19 ]
reg byte a [ mode_sixsfred::row#0 ]
reg byte a [ keyboard_key_pressed::return#20 ]
reg byte a [ mode_sixsfred::$25 ]
reg byte a [ mode_twoplanebitmap::$14 ]
reg byte a [ mode_twoplanebitmap::$16 ]
reg byte a [ mode_twoplanebitmap::$17 ]
reg byte a [ mode_twoplanebitmap::$20 ]
reg byte a [ keyboard_key_pressed::return#19 ]
reg byte a [ mode_twoplanebitmap::$27 ]
reg byte a [ mode_sixsfred2::$14 ]
reg byte a [ mode_sixsfred2::$16 ]
reg byte a [ mode_sixsfred2::$17 ]
reg byte a [ mode_sixsfred2::$20 ]
reg byte a [ mode_sixsfred2::row#0 ]
reg byte a [ keyboard_key_pressed::return#21 ]
reg byte a [ mode_sixsfred2::$26 ]
reg byte a [ mode_hicolmcchar::$25 ]
reg byte a [ mode_hicolmcchar::$27 ]
reg byte a [ mode_hicolmcchar::v#0 ]
reg byte a [ keyboard_key_pressed::return#18 ]
reg byte a [ mode_hicolmcchar::$31 ]
reg byte a [ mode_hicolecmchar::$25 ]
reg byte a [ mode_hicolecmchar::$27 ]
reg byte a [ mode_hicolecmchar::v#0 ]
reg byte a [ keyboard_key_pressed::return#17 ]
reg byte a [ mode_hicolecmchar::$31 ]
reg byte a [ mode_hicolstdchar::$24 ]
reg byte a [ mode_hicolstdchar::$26 ]
reg byte a [ mode_hicolstdchar::v#0 ]
reg byte a [ keyboard_key_pressed::return#16 ]
reg byte a [ mode_hicolstdchar::$30 ]
reg byte a [ mode_mcchar::$25 ]
reg byte a [ mode_mcchar::$26 ]
reg byte a [ mode_mcchar::$27 ]
reg byte a [ mode_mcchar::$29 ]
reg byte a [ mode_mcchar::$30 ]
reg byte a [ keyboard_key_pressed::return#15 ]
reg byte a [ mode_mcchar::$33 ]
reg byte a [ mode_ecmchar::$25 ]
reg byte a [ mode_ecmchar::$26 ]
reg byte a [ mode_ecmchar::$27 ]
reg byte a [ mode_ecmchar::$29 ]
reg byte a [ mode_ecmchar::$30 ]
reg byte a [ keyboard_key_pressed::return#14 ]
reg byte a [ mode_ecmchar::$33 ]
reg byte a [ mode_stdchar::$24 ]
reg byte a [ mode_stdchar::$25 ]
reg byte a [ mode_stdchar::$26 ]
reg byte a [ mode_stdchar::$28 ]
reg byte a [ mode_stdchar::$29 ]
reg byte a [ keyboard_key_pressed::return#13 ]
reg byte a [ mode_stdchar::$32 ]
reg byte a [ print_str_lines::ch#0 ]
