(const byte*) $0::Msg[(number) $28]  = { fill( $28, 0) }
(byte) $0::Y
(label) @1
(label) @2
(label) @begin
(label) @end
(const nomodify byte) CH_HLINE = (byte) $40
(const nomodify byte) CH_LLCORNER = (byte) $6d
(const nomodify byte) CH_LRCORNER = (byte) $7d
(const nomodify byte) CH_LTEE = (byte) $6b
(const nomodify byte) CH_RTEE = (byte) $73
(const nomodify byte) CH_ULCORNER = (byte) $70
(const nomodify byte) CH_URCORNER = (byte) $6e
(const nomodify byte) CH_VLINE = (byte) $5d
(const nomodify byte) COLOR_BLACK = (byte) 0
(const nomodify byte) COLOR_GRAY3 = (byte) $f
(const nomodify byte*) CONIO_BGCOLOR = (byte*) 53281
(const nomodify byte*) CONIO_BORDERCOLOR = (byte*) 53280
(const nomodify byte*) CONIO_CIA1_PORT_A = (byte*) 56320
(const nomodify byte*) CONIO_CIA1_PORT_B = (byte*) 56321
(const nomodify byte) CONIO_HEIGHT = (byte) $19
(const nomodify byte*) CONIO_SCREEN_COLORS = (byte*) 55296
(const nomodify byte*) CONIO_SCREEN_TEXT = (byte*) 1024
(const nomodify byte) CONIO_WIDTH = (byte) $28
(void()) MakeNiceScreen()
(word~) MakeNiceScreen::$21 zp[2]:11 1001.0
(byte~) MakeNiceScreen::$22 reg byte a 2002.0
(byte~) MakeNiceScreen::$33 reg byte a 2002.0
(label) MakeNiceScreen::@1
(label) MakeNiceScreen::@10
(label) MakeNiceScreen::@11
(label) MakeNiceScreen::@12
(label) MakeNiceScreen::@13
(label) MakeNiceScreen::@14
(label) MakeNiceScreen::@15
(label) MakeNiceScreen::@16
(label) MakeNiceScreen::@17
(label) MakeNiceScreen::@18
(label) MakeNiceScreen::@2
(label) MakeNiceScreen::@3
(label) MakeNiceScreen::@4
(label) MakeNiceScreen::@5
(label) MakeNiceScreen::@6
(label) MakeNiceScreen::@7
(label) MakeNiceScreen::@8
(label) MakeNiceScreen::@9
(label) MakeNiceScreen::@return
(byte) MakeNiceScreen::I
(byte) MakeNiceScreen::I#2 I zp[1]:2 2002.0
(byte) MakeNiceScreen::I#3 I zp[1]:2 214.5
(to_nomodify struct $0*) MakeNiceScreen::T
(to_nomodify struct $0*) MakeNiceScreen::T#2 T zp[2]:3 1001.0
(to_nomodify struct $0*) MakeNiceScreen::T#3 T zp[2]:3 154.0
(const struct $0*) MakeNiceScreen::Text[]  = { { Y: (byte) 2, Msg: (byte*) "Wolfgang Amadeus Mozart" }, { Y: (byte) 4, Msg: (byte*) ""Eine kleine Nachtmusik"" }, { Y: (byte) 5, Msg: (byte*) "(KV 525)" }, { Y: (byte) 9, Msg: (byte*) "Ported to the SID in 1987 by" }, { Y: (byte) $b, Msg: (byte*) "Joachim von Bassewitz" }, { Y: (byte) $c, Msg: (byte*) "(joachim@von-bassewitz.de)" }, { Y: (byte) $d, Msg: (byte*) "and" }, { Y: (byte) $e, Msg: (byte*) "Ullrich von Bassewitz" }, { Y: (byte) $f, Msg: (byte*) "(ullrich@von-bassewitz.de)" }, { Y: (byte) $12, Msg: (byte*) "C Implementation by" }, { Y: (byte) $13, Msg: (byte*) "Ullrich von Bassewitz" }, { Y: (byte) $17, Msg: (byte*) "Press any key to quit..." } }
(byte) MakeNiceScreen::X
(byte) MakeNiceScreen::X#1 reg byte x 1001.0
(void()) MakeTeeLine((byte) MakeTeeLine::Y)
(label) MakeTeeLine::@1
(label) MakeTeeLine::@2
(label) MakeTeeLine::@return
(byte) MakeTeeLine::Y
(byte) MakeTeeLine::Y#2 reg byte a 1001.0
(const nomodify byte*) VIC_MEMORY = (byte*) 53272
(volatile byte) XSize loadstore zp[1]:15 39.101694915254235
(volatile byte) YSize loadstore zp[1]:16 20.0
(byte()) bgcolor((byte) bgcolor::color)
(label) bgcolor::@return
(byte) bgcolor::color
(byte) bgcolor::old
(byte) bgcolor::return
(byte()) bordercolor((byte) bordercolor::color)
(label) bordercolor::@return
(byte) bordercolor::color
(byte) bordercolor::old
(byte) bordercolor::return
(void()) chline((byte) chline::length)
(label) chline::@1
(label) chline::@2
(label) chline::@3
(label) chline::@return
(byte) chline::i
(byte) chline::i#1 i zp[1]:14 200002.0
(byte) chline::i#2 i zp[1]:14 75000.75
(byte) chline::length
(byte) chline::length#0 length zp[1]:13 2002.0
(byte) chline::length#1 length zp[1]:13 202.0
(byte) chline::length#2 length zp[1]:13 202.0
(byte) chline::length#4 length zp[1]:13 16867.333333333332
(void()) clrscr()
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#1 reg byte y 200002.0
(byte) clrscr::c#2 reg byte y 125001.25
(byte) clrscr::l
(byte) clrscr::l#1 reg byte x 20002.0
(byte) clrscr::l#2 reg byte x 3333.6666666666665
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 line_cols zp[2]:11 10001.0
(byte*) clrscr::line_cols#5 line_cols zp[2]:11 15000.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 line_text zp[2]:3 6667.333333333333
(byte*) clrscr::line_text#5 line_text zp[2]:3 17143.285714285714
(byte*) conio_cursor_color
(byte*) conio_cursor_color#13 conio_cursor_color zp[2]:8 4020000.5999999996
(byte*) conio_cursor_color#3 conio_cursor_color zp[2]:8 5.218304813043478E7
(byte*) conio_cursor_color#49 conio_cursor_color zp[2]:8 4.2042262E7
(byte*) conio_cursor_color#51 conio_cursor_color zp[2]:8 1.7087550375E7
(byte*) conio_cursor_color#6 conio_cursor_color zp[2]:8 6.0000000599999994E7
(byte*) conio_cursor_text
(byte*) conio_cursor_text#13 conio_cursor_text zp[2]:6 4020000.5999999996
(byte*) conio_cursor_text#3 conio_cursor_text zp[2]:6 5.0008754458333336E7
(byte*) conio_cursor_text#49 conio_cursor_text zp[2]:6 7.007043666666667E7
(byte*) conio_cursor_text#51 conio_cursor_text zp[2]:6 1.7087550375E7
(byte*) conio_cursor_text#6 conio_cursor_text zp[2]:6 4.285714328571428E7
(byte) conio_cursor_x
(byte) conio_cursor_x#14 conio_cursor_x zp[1]:10 4020000.5999999996
(byte) conio_cursor_x#3 conio_cursor_x zp[1]:10 3.871677767741935E7
(byte) conio_cursor_x#50 conio_cursor_x zp[1]:10 1.83685515E7
(byte) conio_cursor_x#52 conio_cursor_x zp[1]:10 1.2920883666666668E7
(byte) conio_cursor_x#6 conio_cursor_x zp[1]:10 1.500000015E8
(byte) conio_cursor_y
(byte) conio_cursor_y#13 conio_cursor_y zp[1]:5 4020000.5999999996
(byte) conio_cursor_y#3 conio_cursor_y zp[1]:5 4.000733693333334E7
(byte) conio_cursor_y#48 conio_cursor_y zp[1]:5 3.8776413875E7
(byte) conio_cursor_y#52 conio_cursor_y zp[1]:5 1.7087550375E7
(byte) conio_cursor_y#6 conio_cursor_y zp[1]:5 1.500000015E8
(byte) conio_display_cursor
(byte) conio_textcolor
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@4
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 20002.0
(byte) cputc::c#1 reg byte a 2.0000002E7
(byte) cputc::c#8 reg byte a 1.05005002E8
(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
(label) cputcxy::@1
(label) cputcxy::@return
(byte) cputcxy::c
(byte) cputcxy::c#2 reg byte y 3333.6666666666665
(byte) cputcxy::x
(byte) cputcxy::y
(byte) cputcxy::y#0 reg byte a 2002.0
(byte) cputcxy::y#2 reg byte a 11002.0
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 1.0000001E7
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:11 5000000.5
(to_nomodify byte*) cputs::s#1 s zp[2]:11 55001.0
(to_nomodify byte*) cputs::s#2 s zp[2]:11 1.5050002E7
(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
(label) cputsxy::@1
(label) cputsxy::@return
(to_nomodify byte*) cputsxy::s
(to_nomodify byte*) cputsxy::s#0 s zp[2]:11 1833.6666666666665
(byte) cputsxy::x
(byte) cputsxy::x#0 reg byte x 5501.0
(byte) cputsxy::y
(byte) cputsxy::y#0 reg byte a 5501.0
(byte()) cursor((byte) cursor::onoff)
(label) cursor::@return
(byte) cursor::old
(byte) cursor::onoff
(byte) cursor::return
(void()) cvline((byte) cvline::length)
(label) cvline::@1
(label) cvline::@2
(label) cvline::@3
(label) cvline::@4
(label) cvline::@return
(byte) cvline::i
(byte) cvline::i#1 i zp[1]:13 200002.0
(byte) cvline::i#2 i zp[1]:13 37500.375
(byte) cvline::length
(const byte) cvline::length#0 length = (byte) $17
(byte) cvline::x
(byte) cvline::x#0 x zp[1]:19 10000.181818181818
(byte) cvline::y
(byte) cvline::y#0 y zp[1]:14 20002.0
(byte) cvline::y#1 y zp[1]:14 60000.600000000006
(byte) cvline::y#2 y zp[1]:14 52500.75
(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
(label) cvlinexy::@1
(label) cvlinexy::@return
(byte) cvlinexy::length
(byte) cvlinexy::x
(byte) cvlinexy::x#1 reg byte x 202.0
(byte) cvlinexy::x#2 reg byte x 1102.0
(byte) cvlinexy::y
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(word~) gotoxy::$10 zp[2]:8 2.000000002E9
(word~) gotoxy::$4 zp[2]:8 2.000000002E9
(word~) gotoxy::$8 zp[2]:8 1.5000000015E9
(word~) gotoxy::$9 zp[2]:17 2.000000002E9
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@4
(label) gotoxy::@return
(word) gotoxy::offset
(word) gotoxy::offset#0 offset zp[2]:8 1.5000000015E9
(byte) gotoxy::x
(byte) gotoxy::x#10 reg byte x 3.0000000029999995E8
(byte) gotoxy::x#4 reg byte x 10001.0
(byte) gotoxy::x#5 reg byte x 100001.0
(byte) gotoxy::x#6 reg byte x 2002.0
(byte) gotoxy::x#7 reg byte x 6.667036683333334E8
(byte) gotoxy::y
(byte) gotoxy::y#1 reg byte a 2.00000002E8
(byte) gotoxy::y#10 reg byte a 3.50020001E8
(byte) gotoxy::y#3 reg byte a 20002.0
(byte) gotoxy::y#4 reg byte a 20002.0
(byte) gotoxy::y#5 reg byte a 200002.0
(byte) gotoxy::y#8 reg byte a 6.666666673333334E8
(byte()) kbhit()
(label) kbhit::@return
(byte) kbhit::return
(byte) kbhit::return#0 reg byte a 367.33333333333337
(byte) kbhit::return#2 reg byte a 202.0
(void()) main()
(byte~) main::$3 reg byte a 202.0
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@return
(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
(label) screensize::@return
(byte*) screensize::x
(const byte*) screensize::x#0 x = &(volatile byte) XSize
(byte*) screensize::y
(const byte*) screensize::y#0 y = &(volatile byte) YSize
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:11 1000001.0
(word) strlen::len#2 len zp[2]:11 500250.75
(word) strlen::return
(word) strlen::return#2 return zp[2]:11 2002.0
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:17 2000002.0
(byte*) strlen::str#1 str zp[2]:17 5501.0
(byte*) strlen::str#2 str zp[2]:17 1003334.6666666667
(byte()) textcolor((byte) textcolor::color)
(label) textcolor::@return
(byte) textcolor::color
(byte) textcolor::old
(byte) textcolor::return

reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 clrscr::line_text#5 clrscr::line_text#1 ]
reg byte a [ cputc::c#8 cputc::c#0 cputc::c#1 ]
zp[1]:5 [ conio_cursor_y#48 conio_cursor_y#13 conio_cursor_y#3 conio_cursor_y#52 conio_cursor_y#6 ]
zp[2]:6 [ conio_cursor_text#49 conio_cursor_text#13 conio_cursor_text#3 conio_cursor_text#51 conio_cursor_text#6 ]
zp[2]:8 [ conio_cursor_color#49 conio_cursor_color#13 conio_cursor_color#3 conio_cursor_color#51 conio_cursor_color#6 gotoxy::offset#0 gotoxy::$4 gotoxy::$8 gotoxy::$10 ]
zp[1]:10 [ conio_cursor_x#50 conio_cursor_x#14 conio_cursor_x#3 conio_cursor_x#52 conio_cursor_x#6 ]
reg byte x [ gotoxy::x#10 gotoxy::x#7 gotoxy::x#4 gotoxy::x#5 gotoxy::x#6 ]
reg byte a [ gotoxy::y#8 gotoxy::y#10 gotoxy::y#1 gotoxy::y#3 gotoxy::y#4 gotoxy::y#5 ]
zp[2]:11 [ strlen::len#2 strlen::len#1 strlen::return#2 MakeNiceScreen::$21 cputs::s#2 cputs::s#1 cputs::s#0 cputsxy::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
reg byte a [ MakeTeeLine::Y#2 ]
reg byte a [ cputcxy::y#2 cputcxy::y#0 ]
reg byte y [ cputcxy::c#2 ]
reg byte x [ cvlinexy::x#2 cvlinexy::x#1 ]
zp[1]:13 [ cvline::i#2 cvline::i#1 chline::length#4 chline::length#1 chline::length#2 chline::length#0 ]
zp[1]:14 [ cvline::y#2 cvline::y#0 cvline::y#1 chline::i#2 chline::i#1 ]
zp[1]:15 [ XSize ]
zp[1]:16 [ YSize ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$3 ]
reg byte a [ kbhit::return#0 ]
reg byte a [ MakeNiceScreen::$33 ]
reg byte a [ MakeNiceScreen::$22 ]
reg byte x [ MakeNiceScreen::X#1 ]
reg byte x [ cputsxy::x#0 ]
reg byte a [ cputsxy::y#0 ]
reg byte a [ cputs::c#1 ]
zp[2]:17 [ gotoxy::$9 strlen::str#2 strlen::str#1 strlen::str#0 ]
zp[1]:19 [ cvline::x#0 ]
