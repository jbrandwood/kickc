constant byte* const COLORRAM = (byte*) 55296
constant byte* const DEFAULT_SCREEN = (byte*) 1024
constant byte* DIGITS[]  = "0123456789abcdef"z
constant const byte LIGHT_BLUE = $e
constant byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant word* RADIX_DECIMAL_VALUES[]  = { $2710, $3e8, $64, $a }
constant byte SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
void __start()
void clrscr()
byte clrscr::c
byte clrscr::c#1 reg byte y 20002.0
byte clrscr::c#2 reg byte y 12501.25
byte clrscr::l
byte clrscr::l#1 reg byte x 2002.0
byte clrscr::l#2 reg byte x 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:4 1001.0
byte* clrscr::line_cols#5 line_cols zp[2]:4 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:2 667.3333333333334
byte* clrscr::line_text#5 line_text zp[2]:2 1714.7142857142858
void conio_c64_init()
constant byte* const conio_c64_init::BASIC_CURSOR_LINE = (byte*) 214
byte conio_c64_init::line
byte conio_c64_init::line#0 reg byte x 11.0
byte conio_c64_init::line#2 reg byte x 22.0
byte conio_cursor_x loadstore zp[1]:9 120969.43548387097
byte conio_cursor_y loadstore zp[1]:10 2285715.7785714283
byte* conio_line_color loadstore zp[2]:13 1601450.7898550725
byte* conio_line_text loadstore zp[2]:11 1589929.561151079
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 200002.0
byte cputc::c#13 reg byte a 1050502.0
byte cputc::c#2 reg byte a 2002.0
void cputln()
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 100001.0
const byte* cputs::s
const byte* cputs::s#0 s zp[2]:2 50000.5
const byte* cputs::s#22 s zp[2]:2 155002.0
const byte* cputs::s#23 s zp[2]:2 10001.0
void cscroll()
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte*~ gotoxy::$5 zp[2]:19 202.0
byte*~ gotoxy::$6 zp[2]:15 202.0
word~ gotoxy::$7 zp[2]:15 151.5
word~ gotoxy::$8 zp[2]:17 202.0
word~ gotoxy::$9 zp[2]:15 202.0
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:15 101.0
byte gotoxy::x
constant byte gotoxy::x#2 x = 0
byte gotoxy::y
byte gotoxy::y#2 reg byte x 71.0
byte gotoxy::y#4 reg byte x 67.33333333333333
void main()
constant byte* main::s[3]  = "d "
constant byte* main::s1[8]  = "d:     "
constant byte* main::s12[5]  = "2$d "
constant byte* main::s2[2]  = " "
constant byte* main::s3[2]  = "
"
constant byte* main::s4[5]  = "1$d "
constant byte* main::s5[6]  = "2$d: "
constant byte* main::s9[6]  = "1$d: "
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:7
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:7 1.00000000001E11
byte* memcpy::dst#2 dst zp[2]:7 1.0033333333466667E11
byte* memcpy::dst#4 dst zp[2]:7 2.000000002E9
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:23
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:23 2.00000000002E11
byte* memcpy::src#2 src zp[2]:23 1.0025000000125E11
byte* memcpy::src#4 src zp[2]:23 1.000000001E9
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:21 1.262500000025E10
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 1.4285714285857143E10
byte* memset::dst
byte* memset::dst#1 dst zp[2]:7 2.00000000002E11
byte* memset::dst#2 dst zp[2]:7 1.3366666666833334E11
byte* memset::dst#4 dst zp[2]:7 2.000000002E9
byte* memset::end
byte* memset::end#0 end zp[2]:23 1.6833333333666668E10
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:7
struct printf_buffer_number printf_buffer loadstore mem[12] = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
constant byte* printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 reg byte a 701.0
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_zero_padding
signed byte printf_number_buffer::len
signed byte printf_number_buffer::padding
void printf_sint(signed word printf_sint::value , byte printf_sint::format_min_length , byte printf_sint::format_justify_left , byte printf_sint::format_sign_always , byte printf_sint::format_zero_padding , byte printf_sint::format_upper_case , byte printf_sint::format_radix)
struct printf_format_number printf_sint::format
byte printf_sint::format_justify_left
byte printf_sint::format_min_length
byte printf_sint::format_radix
byte printf_sint::format_sign_always
byte printf_sint::format_upper_case
byte printf_sint::format_zero_padding
word printf_sint::uvalue
signed word printf_sint::value
signed word printf_sint::value#0 value zp[2]:4 101.0
signed word printf_sint::value#11 value zp[2]:4 101.0
signed word printf_sint::value#13 value zp[2]:4 202.0
void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
byte~ utoa::$10 reg byte a 20002.0
byte~ utoa::$11 reg byte x 2002.0
byte* utoa::buffer
byte* utoa::buffer#11 buffer zp[2]:23 3000.4285714285716
byte* utoa::buffer#14 buffer zp[2]:23 15001.5
byte* utoa::buffer#3 buffer zp[2]:23 2002.0
byte* utoa::buffer#4 buffer zp[2]:23 20002.0
byte utoa::digit
byte utoa::digit#1 digit zp[1]:6 20002.0
byte utoa::digit#2 digit zp[1]:6 2857.4285714285716
word utoa::digit_value
word utoa::digit_value#0 digit_value zp[2]:21 6000.6
word* utoa::digit_values
byte utoa::max_digits
byte utoa::radix
byte utoa::started
byte utoa::started#2 reg byte x 5000.5
byte utoa::started#4 reg byte x 10001.0
word utoa::value
word utoa::value#0 value zp[2]:4 10001.0
word utoa::value#1 value zp[2]:4 551.0
word utoa::value#2 value zp[2]:4 5857.857142857143
word utoa::value#6 value zp[2]:4 15001.5
word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
byte* utoa_append::buffer
byte* utoa_append::buffer#0 buffer zp[2]:23 13750.25
byte utoa_append::digit
byte utoa_append::digit#1 reg byte x 1.0000001E7
byte utoa_append::digit#2 reg byte x 1.00500015E7
word utoa_append::return
word utoa_append::return#0 return zp[2]:4 20002.0
word utoa_append::sub
word utoa_append::sub#0 sub zp[2]:21 3335000.5
word utoa_append::value
word utoa_append::value#0 value zp[2]:4 36667.33333333333
word utoa_append::value#1 value zp[2]:4 2.0000002E7
word utoa_append::value#2 value zp[2]:4 5018334.166666666

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte a [ cputc::c#13 cputc::c#0 cputc::c#2 ]
zp[2]:2 [ cputs::s#22 cputs::s#23 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[2]:4 [ printf_sint::value#13 printf_sint::value#0 printf_sint::value#11 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[1]:6 [ utoa::digit#2 utoa::digit#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:7 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte x [ memset::c#4 ]
zp[1]:9 [ conio_cursor_x ]
zp[1]:10 [ conio_cursor_y ]
zp[2]:11 [ conio_line_text ]
zp[2]:13 [ conio_line_color ]
zp[2]:15 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:17 [ gotoxy::$8 ]
zp[2]:19 [ gotoxy::$5 ]
reg byte a [ cputs::c#1 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:21 [ memcpy::src_end#0 utoa::digit_value#0 utoa_append::sub#0 ]
zp[2]:23 [ memset::end#0 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ]
mem[12] [ printf_buffer ]
