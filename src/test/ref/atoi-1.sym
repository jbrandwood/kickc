(label) @1
(label) @2
(label) @begin
(label) @end
(const nomodify byte*) CONIO_SCREEN_COLORS = (byte*) 55296
(const nomodify byte*) CONIO_SCREEN_TEXT = (byte*) 1024
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (byte) $e
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = (byte) 1
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const word*) RADIX_DECIMAL_VALUES[]  = { (word) $2710, (word) $3e8, (word) $64, (word) $a }
(const byte) SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = (byte) $c
(signed word()) atoi((to_nomodify byte*) atoi::str)
(signed word~) atoi::$3 zp[2]:2 2002.0
(signed word~) atoi::$4 zp[2]:2 2002.0
(signed word~) atoi::$8 zp[2]:15 2002.0
(signed word~) atoi::$9 zp[2]:2 2002.0
(label) atoi::@1
(label) atoi::@2
(label) atoi::@3
(label) atoi::@4
(label) atoi::@5
(label) atoi::@return
(byte) atoi::i
(byte) atoi::i#2 reg byte y 2002.0
(byte) atoi::i#4 reg byte y 572.0
(byte) atoi::negative
(byte) atoi::negative#2 reg byte x 262.875
(signed word) atoi::res
(signed word) atoi::res#1 res zp[2]:2 1001.0
(signed word) atoi::res#2 res zp[2]:2 801.25
(signed word) atoi::return
(signed word) atoi::return#0 return zp[2]:2 202.0
(signed word) atoi::return#2 return zp[2]:2 56.0
(signed word) atoi::return#3 return zp[2]:2 22.0
(signed word) atoi::return#4 return zp[2]:2 22.0
(to_nomodify byte*) atoi::str
(to_nomodify byte*) atoi::str#2 str zp[2]:7 191.1818181818182
(void()) clrscr()
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@5
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#1 reg byte y 20002.0
(byte) clrscr::c#2 reg byte y 12501.25
(byte) clrscr::l
(byte) clrscr::l#1 reg byte x 2002.0
(byte) clrscr::l#2 reg byte x 333.6666666666667
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 line_cols zp[2]:11 1001.0
(byte*) clrscr::line_cols#5 line_cols zp[2]:11 1500.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 line_text zp[2]:7 667.3333333333334
(byte*) clrscr::line_text#5 line_text zp[2]:7 1714.7142857142858
(byte*) conio_cursor_color loadstore zp[2]:13 2858975.769230769
(byte*) conio_cursor_text loadstore zp[2]:11 2822786.2025316455
(byte) conio_cursor_x loadstore zp[1]:9 515153.18181818177
(byte) conio_cursor_y loadstore zp[1]:10 3879519.397590361
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 200002.0
(byte) cputc::c#2 reg byte a 2002.0
(byte) cputc::c#3 reg byte a 1050502.0
(void()) cputln()
(byte*~) cputln::$0 zp[2]:11 2.0000002E7
(byte*~) cputln::$1 zp[2]:11 2.0000002E7
(byte*~) cputln::$2 zp[2]:13 2.0000002E7
(byte*~) cputln::$3 zp[2]:13 2.0000002E7
(label) cputln::@return
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 100001.0
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:2 50000.5
(to_nomodify byte*) cputs::s#4 s zp[2]:2 155002.0
(to_nomodify byte*) cputs::s#5 s zp[2]:2 10001.0
(void()) cscroll()
(byte*~) cscroll::$7 zp[2]:11 2.00000002E8
(byte*~) cscroll::$8 zp[2]:13 2.00000002E8
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@return
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@return
(const byte*) main::s[(byte) 2]  = (byte*) "
"
(const byte*) main::str[(byte) 5]  = (byte*) "1234"
(const byte*) main::str1[(byte) 6]  = (byte*) "-5678"
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#2 destination zp[2]:5
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:5 1.00000000001E11
(byte*) memcpy::dst#2 dst zp[2]:5 1.0033333333466667E11
(byte*) memcpy::dst#4 dst zp[2]:5 2.000000002E9
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2 source zp[2]:7
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:7 2.00000000002E11
(byte*) memcpy::src#2 src zp[2]:7 1.0025000000125E11
(byte*) memcpy::src#4 src zp[2]:7 1.000000001E9
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 src_end zp[2]:15 1.262500000025E10
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1.4285714285857143E10
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:7 2.00000000002E11
(byte*) memset::dst#2 dst zp[2]:7 1.3366666666833334E11
(byte*) memset::dst#4 dst zp[2]:7 2.000000002E9
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:15 1.6833333333666668E10
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:7
(struct printf_buffer_number) printf_buffer loadstore mem[12] = {}
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(label) printf_number_buffer::@1
(label) printf_number_buffer::@2
(label) printf_number_buffer::@3
(label) printf_number_buffer::@return
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(const byte*) printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0 reg byte a 701.0
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_min_length
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_zero_padding
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::padding
(void()) printf_sint((signed word) printf_sint::value , (byte) printf_sint::format_min_length , (byte) printf_sint::format_justify_left , (byte) printf_sint::format_sign_always , (byte) printf_sint::format_zero_padding , (byte) printf_sint::format_upper_case , (byte) printf_sint::format_radix)
(label) printf_sint::@1
(label) printf_sint::@2
(label) printf_sint::@3
(label) printf_sint::@return
(struct printf_format_number) printf_sint::format
(byte) printf_sint::format_justify_left
(byte) printf_sint::format_min_length
(byte) printf_sint::format_radix
(byte) printf_sint::format_sign_always
(byte) printf_sint::format_upper_case
(byte) printf_sint::format_zero_padding
(word) printf_sint::uvalue
(signed word) printf_sint::value
(signed word) printf_sint::value#0 value zp[2]:2 101.0
(signed word) printf_sint::value#1 value zp[2]:2 22.0
(signed word) printf_sint::value#2 value zp[2]:2 22.0
(signed word) printf_sint::value#3 value zp[2]:2 108.33333333333331
(signed word) printf_sint::value#5 value zp[2]:2 202.0
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(byte~) utoa::$10 reg byte a 20002.0
(byte~) utoa::$11 reg byte a 2002.0
(label) utoa::@1
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@return
(byte*) utoa::buffer
(byte*) utoa::buffer#11 buffer zp[2]:5 3000.4285714285716
(byte*) utoa::buffer#14 buffer zp[2]:5 15001.5
(byte*) utoa::buffer#3 buffer zp[2]:5 2002.0
(byte*) utoa::buffer#4 buffer zp[2]:5 20002.0
(byte) utoa::digit
(byte) utoa::digit#1 digit zp[1]:4 20002.0
(byte) utoa::digit#2 digit zp[1]:4 2857.4285714285716
(word) utoa::digit_value
(word) utoa::digit_value#0 digit_value zp[2]:15 6000.6
(word*) utoa::digit_values
(byte) utoa::max_digits
(byte) utoa::radix
(byte) utoa::started
(byte) utoa::started#2 reg byte x 5000.5
(byte) utoa::started#4 reg byte x 10001.0
(word) utoa::value
(word) utoa::value#0 value zp[2]:2 10001.0
(word) utoa::value#1 value zp[2]:2 551.0
(word) utoa::value#2 value zp[2]:2 5857.857142857143
(word) utoa::value#6 value zp[2]:2 15001.5
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(label) utoa_append::@1
(label) utoa_append::@2
(label) utoa_append::@3
(label) utoa_append::@return
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0 buffer zp[2]:5 13750.25
(byte) utoa_append::digit
(byte) utoa_append::digit#1 reg byte x 1.0000001E7
(byte) utoa_append::digit#2 reg byte x 1.00500015E7
(word) utoa_append::return
(word) utoa_append::return#0 return zp[2]:2 20002.0
(word) utoa_append::sub
(word) utoa_append::sub#0 sub zp[2]:15 3335000.5
(word) utoa_append::value
(word) utoa_append::value#0 value zp[2]:2 36667.33333333333
(word) utoa_append::value#1 value zp[2]:2 2.0000002E7
(word) utoa_append::value#2 value zp[2]:2 5018334.166666666

reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 ]
reg byte x [ memset::c#4 ]
zp[2]:2 [ printf_sint::value#5 printf_sint::value#0 printf_sint::value#3 printf_sint::value#1 printf_sint::value#2 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 atoi::return#3 atoi::return#4 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 atoi::return#2 atoi::return#0 atoi::res#2 atoi::res#1 atoi::$9 atoi::$4 atoi::$3 cputs::s#4 cputs::s#5 cputs::s#0 ]
zp[1]:4 [ utoa::digit#2 utoa::digit#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
zp[2]:5 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
reg byte y [ atoi::i#4 atoi::i#2 ]
reg byte x [ atoi::negative#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
zp[2]:7 [ clrscr::line_text#5 clrscr::line_text#1 atoi::str#2 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:9 [ conio_cursor_x ]
zp[1]:10 [ conio_cursor_y ]
zp[2]:11 [ conio_cursor_text cscroll::$7 cputln::$0 cputln::$1 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[2]:13 [ conio_cursor_color cscroll::$8 cputln::$2 cputln::$3 ]
reg byte a [ cputs::c#1 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte a [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:15 [ atoi::$8 utoa::digit_value#0 utoa_append::sub#0 memcpy::src_end#0 memset::end#0 ]
mem[12] [ printf_buffer ]
