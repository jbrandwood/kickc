__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant char RADIX_DECIMAL_VALUES_CHAR[] = { $64, $a }
__constant unsigned long RADIX_HEXADECIMAL_VALUES_LONG[] = { $10000000, $1000000, $100000, $10000, $1000, $100, $10 }
__constant char SIZEOF_CHAR = 1
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
void __start()
void clrscr()
char clrscr::c
char clrscr::c#1 // reg byte y 2000002.0
char clrscr::c#2 // reg byte y 1250001.25
char clrscr::l
char clrscr::l#1 // reg byte x 200002.0
char clrscr::l#2 // reg byte x 33333.66666666667
char *clrscr::line_cols
char *clrscr::line_cols#1 // line_cols zp[2]:25 100001.0
char *clrscr::line_cols#5 // line_cols zp[2]:25 150000.375
char *clrscr::line_text
char *clrscr::line_text#1 // line_text zp[2]:22 66667.33333333333
char *clrscr::line_text#5 // line_text zp[2]:22 171429.0
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:27 3.2327586209288788E10
__loadstore char conio_cursor_y // zp[1]:17 6.66666666668977E11
__loadstore char *conio_line_color // zp[2]:18 4.623430962366297E11
__loadstore char *conio_line_text // zp[2]:20 4.613778705659895E11
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // reg byte a 1.5000000000015E12
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:42 202.0
char *gotoxy::$6 // zp[2]:37 202.0
unsigned int gotoxy::$7 // zp[2]:37 151.5
unsigned int gotoxy::$8 // zp[2]:40 202.0
unsigned int gotoxy::$9 // zp[2]:37 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:37 101.0
char gotoxy::x
__constant char gotoxy::x#2 = 0 // x
char gotoxy::y
char gotoxy::y#2 // reg byte x 71.0
char gotoxy::y#4 // reg byte x 67.33333333333333
char kbhit()
__constant char * const kbhit::CIA1_PORT_A = (char *) 56320
__constant char * const kbhit::CIA1_PORT_B = (char *) 56321
char kbhit::return
char kbhit::return#0 // reg byte a 2334.1666666666665
char kbhit::return#10 // reg byte a 2002.0
char kbhit::return#2 // reg byte a 2002.0
char kbhit::return#3 // reg byte a 2002.0
char kbhit::return#4 // reg byte a 2002.0
void main()
char main::$10 // reg byte a 2002.0
char main::$14 // reg byte a 2002.0
char main::$16 // reg byte x 202.0
char main::$19 // zp[1]:44 18.035714285714285
char main::$2 // reg byte a 2002.0
char main::$6 // reg byte a 2002.0
char main::i
char main::i#1 // i zp[1]:39 202.0
char main::i#12 // i zp[1]:39 7.973684210526316
__constant unsigned long main::vals[] = { $deadbeef, $facefeed }
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:4
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:4 1.0E19
char *memcpy::dst#2 // dst zp[2]:4 1.0000333333333334E19
char *memcpy::dst#4 // dst zp[2]:4 2.000000000000002E15
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:2
char *memcpy::src
char *memcpy::src#1 // src zp[2]:2 2.0E19
char *memcpy::src#2 // src zp[2]:2 1.000025E19
char *memcpy::src#4 // src zp[2]:2 1.000000000000001E15
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:6 1.250125E18
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1.42857142857142861E18
char *memset::dst
char *memset::dst#1 // dst zp[2]:2 2.0E19
char *memset::dst#2 // dst zp[2]:2 1.3333666666666668E19
char *memset::dst#4 // dst zp[2]:2 2.000000000000002E15
char *memset::end
char *memset::end#0 // end zp[2]:4 1.6668333333333335E18
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:2
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
unsigned int printf_number_buffer::$19 // zp[2]:2 1.0000001E7
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // buffer_sign zp[1]:30 2000002.0
char printf_number_buffer::buffer_sign#1 // buffer_sign zp[1]:30 20002.0
char printf_number_buffer::buffer_sign#10 // buffer_sign zp[1]:30 1684737.1578947369
char printf_number_buffer::buffer_sign#2 // buffer_sign zp[1]:30 2000002.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_min_length#3 // reg byte x 1000000.1
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
char printf_number_buffer::format_zero_padding#10 // format_zero_padding zp[1]:31 909091.0
signed char printf_number_buffer::len
signed char printf_number_buffer::len#0 // reg byte y 1.50000015E7
signed char printf_number_buffer::len#1 // reg byte y 2.0000002E7
signed char printf_number_buffer::len#2 // reg byte y 3.0000003E7
signed char printf_number_buffer::padding
signed char printf_number_buffer::padding#1 // padding zp[1]:29 1.0000001E7
signed char printf_number_buffer::padding#10 // padding zp[1]:29 2727273.0
void (*printf_number_buffer::putc)(char)
void printf_padding(void (*putc)(char) , char pad , char length)
char printf_padding::i
char printf_padding::i#1 // i zp[1]:24 2.00000000002E11
char printf_padding::i#2 // i zp[1]:24 6.0000000000600006E10
char printf_padding::length
char printf_padding::length#0 // length zp[1]:28 2.0000002E7
char printf_padding::length#1 // length zp[1]:28 2.0000002E7
char printf_padding::length#4 // length zp[1]:28 1.4288571429E10
char printf_padding::pad
char printf_padding::pad#5 // pad zp[1]:12 1.4285714285857143E10
void (*printf_padding::putc)(char)
void printf_sint(void (*putc)(char) , int value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_sint::format
char printf_sint::format_justify_left
char printf_sint::format_min_length
char printf_sint::format_radix
char printf_sint::format_sign_always
char printf_sint::format_upper_case
char printf_sint::format_zero_padding
void (*printf_sint::putc)(char)
unsigned int printf_sint::uvalue
int printf_sint::value
int printf_sint::value#0 // value zp[2]:25 10001.0
int printf_sint::value#43 // value zp[2]:25 10001.0
int printf_sint::value#45 // value zp[2]:25 20002.0
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1.00000000001E11
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:22 4.00000000004E10
const char *printf_str::s#94 // s zp[2]:22 1.50050000002E11
const char *printf_str::s#95 // s zp[2]:22 1.00000001E8
void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uchar::format
char printf_uchar::format_justify_left
char printf_uchar::format_min_length
char printf_uchar::format_radix
char printf_uchar::format_sign_always
char printf_uchar::format_upper_case
char printf_uchar::format_zero_padding
void (*printf_uchar::putc)(char)
char printf_uchar::uvalue
char printf_uchar::uvalue#0 // reg byte x 200002.0
char printf_uchar::uvalue#1 // reg byte x 200002.0
char printf_uchar::uvalue#2 // reg byte x 600001.5
void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_ulong::format
char printf_ulong::format_justify_left
char printf_ulong::format_min_length
char printf_ulong::format_radix
char printf_ulong::format_sign_always
char printf_ulong::format_upper_case
char printf_ulong::format_zero_padding
void (*printf_ulong::putc)(char)
unsigned long printf_ulong::uvalue
unsigned long printf_ulong::uvalue#0 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#1 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#10 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#11 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#12 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#13 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#14 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#15 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#16 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#17 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#18 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#19 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#2 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#20 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#21 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#22 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#23 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#24 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#25 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#26 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#27 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#28 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#29 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#3 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#30 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#31 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#32 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#33 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#34 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#35 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#36 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#37 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#38 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#39 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#4 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#40 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#41 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#42 // uvalue zp[4]:8 33333.666666666664
unsigned long printf_ulong::uvalue#43 // uvalue zp[4]:8 33333.666666666664
unsigned long printf_ulong::uvalue#44 // uvalue zp[4]:8 621022.5
unsigned long printf_ulong::uvalue#5 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#6 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#7 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#8 // uvalue zp[4]:8 400.4
unsigned long printf_ulong::uvalue#9 // uvalue zp[4]:8 400.4
void rol_fixed(unsigned long val)
__constant char rol_fixed::s[$b] = "rol fixed
"
unsigned long rol_fixed::val
unsigned long rol_fixed::val#0 // val zp[4]:33 129.58282208588952
void rol_var(unsigned long val)
char rol_var::i
char rol_var::i#1 // i zp[1]:32 200002.0
char rol_var::i#2 // i zp[1]:32 45455.0
__constant char rol_var::s[9] = "rol var
"
unsigned long rol_var::val
unsigned long rol_var::val#0 // val zp[4]:33 6673.466666666667
__constant char rols[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, $c, $f, $10, $11, $14, $17, $18, $19, $1c, $1f, $20 }
void ror_fixed(unsigned long val)
__constant char ror_fixed::s[$b] = "ror fixed
"
unsigned long ror_fixed::val
unsigned long ror_fixed::val#0 // val zp[4]:33 129.58282208588952
void ror_var(unsigned long val)
char ror_var::i
char ror_var::i#1 // i zp[1]:32 200002.0
char ror_var::i#2 // i zp[1]:32 45455.0
__constant char ror_var::s[9] = "ror var
"
unsigned long ror_var::val
unsigned long ror_var::val#0 // val zp[4]:33 6673.466666666667
__constant char s1[3] = ": "
__constant char s2[2] = "
"
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // len zp[2]:2 1.00000000001E11
unsigned int strlen::len#2 // len zp[2]:2 5.000250000075E10
unsigned int strlen::return
unsigned int strlen::return#2 // return zp[2]:2 2.0000002E7
char *strlen::str
char *strlen::str#0 // str zp[2]:6 2.00000000002E11
char *strlen::str#2 // str zp[2]:6 1.00000000001E11
void uctoa(char value , char *buffer , char radix)
char *uctoa::buffer
char *uctoa::buffer#11 // buffer zp[2]:22 3.3350000004999995E9
char *uctoa::buffer#14 // buffer zp[2]:22 1.50000000015E10
char *uctoa::buffer#3 // buffer zp[2]:22 2.0000002E7
char *uctoa::buffer#4 // buffer zp[2]:22 2.0000000002E10
char uctoa::digit
char uctoa::digit#1 // digit zp[1]:29 2.0000000002E10
char uctoa::digit#2 // digit zp[1]:29 3.076923077230769E9
char uctoa::digit_value
char uctoa::digit_value#0 // digit_value zp[1]:12 6.0000000006E9
char *uctoa::digit_values
char uctoa::max_digits
char uctoa::radix
char uctoa::started
char uctoa::started#2 // started zp[1]:28 6.0000000006E9
char uctoa::started#4 // started zp[1]:28 1.0000000001E10
char uctoa::value
char uctoa::value#0 // reg byte x 1.0000000001E10
char uctoa::value#1 // reg byte x 5500001.0
char uctoa::value#2 // reg byte x 6.670000000999999E9
char uctoa::value#6 // reg byte x 1.50000000015E10
char uctoa_append(char *buffer , char value , char sub)
char *uctoa_append::buffer
char *uctoa_append::buffer#0 // buffer zp[2]:22 1.375000000025E10
char uctoa_append::digit
char uctoa_append::digit#1 // reg byte y 1.000000000000001E15
char uctoa_append::digit#2 // reg byte y 1.0000500000000015E15
char uctoa_append::return
char uctoa_append::return#0 // reg byte x 2.0000000002E10
char uctoa_append::sub
char uctoa_append::sub#0 // sub zp[1]:12 3.333350000000005E14
char uctoa_append::value
char uctoa_append::value#0 // reg byte x 3.6666666667333336E10
char uctoa_append::value#1 // reg byte x 2.000000000000002E15
char uctoa_append::value#2 // reg byte x 5.0001833333333425E14
void ultoa(unsigned long value , char *buffer , char radix)
char ultoa::$10 // reg byte a 2.0000000002E10
char ultoa::$11 // reg byte a 2.0000002E7
char *ultoa::buffer
char *ultoa::buffer#11 // buffer zp[2]:22 2.858571429E9
char *ultoa::buffer#14 // buffer zp[2]:22 1.50000000015E10
char *ultoa::buffer#3 // buffer zp[2]:22 2.0000002E7
char *ultoa::buffer#4 // buffer zp[2]:22 2.0000000002E10
char ultoa::digit
char ultoa::digit#1 // digit zp[1]:30 2.0000000002E10
char ultoa::digit#2 // digit zp[1]:30 2.857142857428571E9
unsigned long ultoa::digit_value
unsigned long ultoa::digit_value#0 // digit_value zp[4]:13 6.0000000006E9
unsigned long *ultoa::digit_values
char ultoa::max_digits
char ultoa::radix
char ultoa::started
char ultoa::started#2 // reg byte x 5.0000000005E9
char ultoa::started#4 // reg byte x 1.0000000001E10
unsigned long ultoa::value
unsigned long ultoa::value#0 // value zp[4]:8 1.0000000001E10
unsigned long ultoa::value#1 // value zp[4]:8 5500001.0
unsigned long ultoa::value#2 // value zp[4]:8 5.715714286428572E9
unsigned long ultoa::value#6 // value zp[4]:8 1.50000000015E10
unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
char *ultoa_append::buffer
char *ultoa_append::buffer#0 // buffer zp[2]:22 1.375000000025E10
char ultoa_append::digit
char ultoa_append::digit#1 // reg byte x 1.000000000000001E15
char ultoa_append::digit#2 // reg byte x 1.0000500000000015E15
unsigned long ultoa_append::return
unsigned long ultoa_append::return#0 // return zp[4]:8 2.0000000002E10
unsigned long ultoa_append::sub
unsigned long ultoa_append::sub#0 // sub zp[4]:13 3.333350000000005E14
unsigned long ultoa_append::value
unsigned long ultoa_append::value#0 // value zp[4]:8 3.6666666667333336E10
unsigned long ultoa_append::value#1 // value zp[4]:8 2.000000000000002E15
unsigned long ultoa_append::value#2 // value zp[4]:8 5.0001833333333425E14
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 2.0000002E7
char utoa::$11 // reg byte x 200002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:4 2871429.0
char *utoa::buffer#14 // buffer zp[2]:4 1.50000015E7
char *utoa::buffer#3 // buffer zp[2]:4 200002.0
char *utoa::buffer#4 // buffer zp[2]:4 2.0000002E7
char utoa::digit
char utoa::digit#1 // digit zp[1]:31 2.0000002E7
char utoa::digit#2 // digit zp[1]:31 2857143.1428571427
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:2 6000000.6
unsigned int *utoa::digit_values
char utoa::max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 5000000.5
char utoa::started#4 // reg byte x 1.0000001E7
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:25 1.0000001E7
unsigned int utoa::value#1 // value zp[2]:25 55001.0
unsigned int utoa::value#2 // value zp[2]:25 5728572.142857142
unsigned int utoa::value#6 // value zp[2]:25 1.50000015E7
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:4 1.375000025E7
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.00000000001E11
char utoa_append::digit#2 // reg byte x 1.000500000015E11
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:25 2.0000002E7
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:2 3.33350000005E10
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:25 3.6666667333333336E7
unsigned int utoa_append::value#1 // value zp[2]:25 2.00000000002E11
unsigned int utoa_append::value#2 // value zp[2]:25 5.001833333416667E10

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[1]:39 [ main::i#12 main::i#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:32 [ ror_var::i#2 ror_var::i#1 rol_var::i#2 rol_var::i#1 ]
zp[2]:25 [ printf_sint::value#45 printf_sint::value#0 printf_sint::value#43 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[4]:8 [ printf_ulong::uvalue#44 printf_ulong::uvalue#2 printf_ulong::uvalue#3 printf_ulong::uvalue#4 printf_ulong::uvalue#5 printf_ulong::uvalue#6 printf_ulong::uvalue#0 printf_ulong::uvalue#7 printf_ulong::uvalue#8 printf_ulong::uvalue#9 printf_ulong::uvalue#10 printf_ulong::uvalue#11 printf_ulong::uvalue#12 printf_ulong::uvalue#13 printf_ulong::uvalue#14 printf_ulong::uvalue#15 printf_ulong::uvalue#16 printf_ulong::uvalue#1 printf_ulong::uvalue#17 printf_ulong::uvalue#18 printf_ulong::uvalue#19 printf_ulong::uvalue#20 printf_ulong::uvalue#42 printf_ulong::uvalue#23 printf_ulong::uvalue#24 printf_ulong::uvalue#25 printf_ulong::uvalue#26 printf_ulong::uvalue#27 printf_ulong::uvalue#21 printf_ulong::uvalue#28 printf_ulong::uvalue#29 printf_ulong::uvalue#30 printf_ulong::uvalue#31 printf_ulong::uvalue#32 printf_ulong::uvalue#33 printf_ulong::uvalue#34 printf_ulong::uvalue#35 printf_ulong::uvalue#36 printf_ulong::uvalue#37 printf_ulong::uvalue#22 printf_ulong::uvalue#38 printf_ulong::uvalue#39 printf_ulong::uvalue#40 printf_ulong::uvalue#41 printf_ulong::uvalue#43 ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
reg byte x [ printf_uchar::uvalue#2 printf_uchar::uvalue#0 printf_uchar::uvalue#1 ]
reg byte x [ memset::c#4 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ printf_number_buffer::format_min_length#3 ]
zp[1]:31 [ printf_number_buffer::format_zero_padding#10 utoa::digit#2 utoa::digit#1 ]
reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
zp[1]:30 [ ultoa::digit#2 ultoa::digit#1 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#0 ]
reg byte x [ ultoa::started#2 ultoa::started#4 ]
zp[1]:29 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[2]:22 [ uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 printf_str::s#94 printf_str::s#95 printf_str::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[1]:28 [ printf_padding::length#4 printf_padding::length#1 printf_padding::length#0 uctoa::started#2 uctoa::started#4 ]
zp[1]:24 [ printf_padding::i#2 printf_padding::i#1 ]
reg byte x [ ultoa_append::digit#2 ultoa_append::digit#1 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
zp[1]:27 [ conio_cursor_x ]
zp[1]:17 [ conio_cursor_y ]
zp[2]:20 [ conio_line_text ]
zp[2]:18 [ conio_line_color ]
reg byte a [ cputc::c#0 ]
zp[1]:44 [ main::$19 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$2 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$6 ]
reg byte a [ kbhit::return#4 ]
reg byte a [ main::$10 ]
zp[4]:33 [ ror_var::val#0 rol_var::val#0 ror_fixed::val#0 rol_fixed::val#0 ]
reg byte a [ kbhit::return#10 ]
reg byte a [ main::$14 ]
reg byte x [ main::$16 ]
zp[2]:37 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:40 [ gotoxy::$8 ]
zp[2]:42 [ gotoxy::$5 ]
reg byte a [ kbhit::return#0 ]
reg byte a [ printf_str::c#1 ]
zp[2]:6 [ memcpy::src_end#0 strlen::str#2 strlen::str#0 ]
zp[2]:4 [ memset::end#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:2 [ utoa::digit_value#0 utoa_append::sub#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte a [ ultoa::$11 ]
reg byte a [ ultoa::$10 ]
zp[4]:13 [ ultoa::digit_value#0 ultoa_append::sub#0 ]
zp[1]:12 [ uctoa::digit_value#0 uctoa_append::sub#0 printf_padding::pad#5 ]
reg byte x [ uctoa_append::return#0 ]
mem[12] [ printf_buffer ]
