(const struct Person) $0 = { id: (byte) 4, name: (byte*) "jesper" }
(const struct Person) $1 = { id: (byte) 7, name: (byte*) "henriette" }
(label) @1
(label) @begin
(label) @end
(const byte*) DIGIT[]  = (byte*) "0123456789"
(const byte) OFFSET_STRUCT_PERSON_NAME = (byte) 1
(byte) Person::id
(const byte*) Person::name[(number) $10]  = { fill( $10, 0) }
(const nomodify byte*) SCREEN = (byte*) 1024
(const byte) SIZEOF_STRUCT_PERSON = (byte) $11
(byte) idx
(byte) idx#13 reg byte x 106.5
(byte) idx#14 reg byte x 551.0000000000001
(byte) idx#16 reg byte x 28.0
(byte) idx#4 reg byte x 151.5
(byte) idx#5 reg byte x 202.0
(byte) idx#6 reg byte x 1001.0
(void()) main()
(label) main::@1
(label) main::@return
(struct Person) main::henriette loadstore zp[17]:25
(struct Person) main::jesper loadstore zp[17]:8
(void()) print_person((struct Person*) print_person::person)
(byte*~) print_person::$1 zp[2]:4 2002.0
(byte*~) print_person::$2 zp[2]:6 2002.0
(label) print_person::@1
(label) print_person::@2
(label) print_person::@3
(label) print_person::@return
(byte) print_person::i
(byte) print_person::i#1 reg byte y 2002.0
(byte) print_person::i#2 reg byte y 667.3333333333334
(struct Person*) print_person::person
(struct Person*) print_person::person#2 person zp[2]:2

zp[2]:2 [ print_person::person#2 ]
reg byte x [ idx#13 idx#16 ]
reg byte y [ print_person::i#2 print_person::i#1 ]
reg byte x [ idx#14 idx#5 idx#6 ]
reg byte x [ idx#4 ]
zp[2]:4 [ print_person::$1 ]
zp[2]:6 [ print_person::$2 ]
zp[17]:8 [ main::jesper ]
zp[17]:25 [ main::henriette ]
