__constant char BINARY = 2
__constant const char BLACK = 0
__constant const char BLUE = 6
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#13 // CONIO_SCREEN_BANK zp[1]:3 625.0625
char CONIO_SCREEN_BANK#16 // CONIO_SCREEN_BANK_1 zp[1]:27 6.974683544303797
char *CONIO_SCREEN_TEXT
unsigned int CONIO_SCREEN_TEXT#103 // CONIO_SCREEN_TEXT_1 zp[2]:28 0.4297872340425532
char *CONIO_SCREEN_TEXT#114 // CONIO_SCREEN_TEXT zp[2]:4 2115576.9807692305
char *CONIO_SCREEN_TEXT#16 // CONIO_SCREEN_TEXT zp[2]:4 3.6666685666666664E7
char *CONIO_SCREEN_TEXT#236 // CONIO_SCREEN_TEXT zp[2]:4 22.0
char *CONIO_SCREEN_TEXT#237 // CONIO_SCREEN_TEXT zp[2]:4 22.0
char *CONIO_SCREEN_TEXT#238 // CONIO_SCREEN_TEXT zp[2]:4 22.0
char *CONIO_SCREEN_TEXT#239 // CONIO_SCREEN_TEXT zp[2]:4 22.0
char *CONIO_SCREEN_TEXT#240 // CONIO_SCREEN_TEXT zp[2]:4 22.0
__constant char DECIMAL = $a
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char GREEN = 5
__constant char HEXADECIMAL = $10
__constant char OCTAL = 8
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char RADIX_BINARY_VALUES_CHAR[] = { $80, $40, $20, $10, 8, 4, 2 }
__constant char RADIX_DECIMAL_VALUES_CHAR[] = { $64, $a }
__constant char RADIX_HEXADECIMAL_VALUES_CHAR[] = { $10 }
__constant char RADIX_OCTAL_VALUES_CHAR[] = { $40, 8 }
__constant const char RED = 2
__constant char SIZEOF_POINTER = 2
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant char SIZEOF_UNSIGNED_INT = 2
__constant char SIZEOF_UNSIGNED_LONG = 4
__constant unsigned int STACK_BASE = $103
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *) 40738
__constant char * const VERA_ADDRX_L = (char *) 40736
__constant char * const VERA_ADDRX_M = (char *) 40737
__constant char * const VERA_CTRL = (char *) 40741
__constant char * const VERA_DATA0 = (char *) 40739
__constant char * const VERA_DATA1 = (char *) 40740
__constant char * const VERA_DC_HSCALE = (char *) 40746
__constant char * const VERA_DC_VIDEO = (char *) 40745
__constant char * const VERA_DC_VSCALE = (char *) 40747
__constant const char VERA_INC_1 = $10
__constant char * const VERA_L0_CONFIG = (char *) 40749
__constant char * const VERA_L0_MAPBASE = (char *) 40750
__constant char * const VERA_L0_TILEBASE = (char *) 40751
__constant char * const VERA_L1_CONFIG = (char *) 40756
__constant char * const VERA_L1_MAPBASE = (char *) 40757
__constant char * const VERA_L1_TILEBASE = (char *) 40758
__constant const char VERA_LAYER0_ENABLE = $10
__constant const char VERA_LAYER1_ENABLE = $20
__constant const char VERA_LAYER_CONFIG_256C = 8
__constant const unsigned int VERA_LAYER_HEIGHT[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_HEIGHT_64 = $40
__constant const char VERA_LAYER_HEIGHT_MASK = $c0
__constant const char VERA_LAYER_TILEBASE_MASK = $fc
__constant const unsigned int VERA_LAYER_WIDTH[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_WIDTH_128 = $20
__constant const char VERA_LAYER_WIDTH_MASK = $30
__constant const char WHITE = 1
__constant const char YELLOW = 7
void __start()
void clearline()
char clearline::$1 // reg byte a 2.00000002E8
char clearline::$2 // reg byte a 2.00000002E8
char clearline::$5 // reg byte a 2.00000002E8
char *clearline::addr
char *clearline::addr#0 // addr zp[2]:53 1.00000001E8
unsigned int clearline::c
unsigned int clearline::c#1 // c zp[2]:19 2.000000002E9
unsigned int clearline::c#2 // c zp[2]:19 7.5000000075E8
char clearline::color
char clearline::color#0 // reg byte x 1.833333336666667E8
void clrscr()
char clrscr::$0 // reg byte a 202.0
char clrscr::$1 // zp[1]:38 40.4
char clrscr::$2 // reg byte a 202.0
char clrscr::$5 // reg byte a 2002.0
char clrscr::$6 // reg byte a 2002.0
char clrscr::$7 // reg byte a 2002.0
char clrscr::$9 // reg byte a 202.0
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 7500.75
char *clrscr::ch
char clrscr::color
char clrscr::color#0 // color zp[1]:38 594.2352941176471
char clrscr::l
char clrscr::l#1 // reg byte x 2002.0
char clrscr::l#2 // reg byte x 200.2
char *clrscr::line_text
char *clrscr::line_text#0 // line_text zp[2]:40 18.363636363636363
char *clrscr::line_text#1 // line_text zp[2]:40 1001.0
char *clrscr::line_text#2 // line_text zp[2]:40 293.2142857142857
__constant char conio_cursor_x[2] = { 0, 0 }
__constant char conio_cursor_y[2] = { 0, 0 }
__loadstore unsigned int conio_height // zp[2]:13 3293.1085526315787
__constant unsigned int conio_line_text[2] = { 0, 0 }
__loadstore char conio_rowshift // zp[1]:15 326409.8071216617
__loadstore unsigned int conio_rowskip // zp[2]:16 304258.68085106387
__loadstore volatile char conio_screen_height // zp[1]:9 34582.242074927955
__loadstore char conio_screen_layer // zp[1]:10 793467.5912240184
__loadstore volatile char conio_screen_width // zp[1]:8 2663211.5326370755
__constant char conio_scroll_enable[2] = { 1, 1 }
__loadstore unsigned int conio_width // zp[2]:11 65.70261437908496
void conio_x16_init()
__constant char * const conio_x16_init::BASIC_CURSOR_LINE = (char *) 214
char conio_x16_init::line
char conio_x16_init::line#0 // line zp[1]:2 2.1999999999999997
char conio_x16_init::line#1 // line zp[1]:2 22.0
char conio_x16_init::line#3 // line zp[1]:2 33.0
__stackcall void cputc(char c)
char cputc::$15 // reg byte a 20002.0
unsigned int cputc::$16 // zp[2]:21 20002.0
char cputc::$2 // reg byte a 20002.0
char cputc::$4 // reg byte a 20002.0
char cputc::$5 // reg byte a 20002.0
char cputc::$6 // reg byte a 20002.0
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // c zp[1]:18 1764.8823529411764
char cputc::color
char cputc::color#0 // reg byte x 1428.7142857142858
char *cputc::conio_addr
char *cputc::conio_addr#0 // conio_addr zp[2]:19 10001.0
char *cputc::conio_addr#1 // conio_addr zp[2]:19 6000.6
char cputc::scroll_enable
char cputc::scroll_enable#0 // reg byte a 20002.0
void cputln()
char cputln::$2 // reg byte a 200002.0
char cputln::$3 // reg byte a 200002.0
unsigned int cputln::temp
unsigned int cputln::temp#0 // temp zp[2]:36 200002.0
unsigned int cputln::temp#1 // temp zp[2]:36 100001.0
void cscroll()
void gotoxy(char x , char y)
char gotoxy::$5 // reg byte a 2.0000002E7
unsigned int gotoxy::$6 // zp[2]:34 2.0000002E7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:34 1.0000001E7
char gotoxy::x
char gotoxy::x#10 // reg byte y 3333333.6666666665
char gotoxy::x#11 // reg byte y 2.0000002E7
char gotoxy::y
char gotoxy::y#1 // reg byte x 22.0
char gotoxy::y#10 // reg byte x 7000004.666666666
char gotoxy::y#11 // reg byte x 3333333.6666666665
char gotoxy::y#2 // reg byte x 2000002.0
void insertup()
char insertup::$3 // reg byte a 2.00000002E8
char insertup::cy
char insertup::cy#0 // cy zp[1]:51 9166666.833333334
char insertup::i
char insertup::i#1 // reg byte x 2.00000002E8
char insertup::i#2 // reg byte x 4.444444488888889E7
unsigned int insertup::line
unsigned int insertup::line#0 // line zp[2]:53 2.00000002E8
char *insertup::start
char *insertup::start#0 // start zp[2]:53 1.00000001E8
char insertup::width
char insertup::width#0 // width zp[1]:52 1.0000000181818182E7
char kbhit()
__constant char * const kbhit::GETIN = (char *) 65508
__constant char * const kbhit::IN_DEV = (char *) 650
__loadstore volatile char kbhit::ch // zp[1]:39 1001.0
__constant char * const kbhit::chptr = &kbhit::ch
char kbhit::return
char kbhit::return#0 // reg byte a 2002.0
char kbhit::return#1 // reg byte a 215.14285714285714
char kbhit::return#10 // reg byte a 202.0
char kbhit::return#11 // reg byte a 202.0
char kbhit::return#12 // reg byte a 202.0
char kbhit::return#2 // reg byte a 202.0
char kbhit::return#3 // reg byte a 202.0
void main()
char main::$81 // reg byte a 202.0
char main::$83 // reg byte a 202.0
char main::$85 // reg byte a 202.0
char main::$87 // reg byte a 202.0
char main::$89 // reg byte a 202.0
char main::bgcolor1_color
char main::bgcolor2_color
char main::bgcolor3_color
char main::bgcolor4_color
char main::bgcolor5_color
char main::bgcolor6_color
char main::bgcolor7_color
char main::bgcolor8_color
char main::bgcolor9_color
char main::config
char main::config#0 // config zp[1]:6 11.0
char main::dcvideo
char main::dcvideo#0 // dcvideo zp[1]:6 11.0
char main::layershown
char main::mapbase
char main::mapbase#0 // mapbase zp[1]:6 4.4
char main::mapbase#1 // mapbase zp[1]:6 4.4
__constant char main::s[$c] = "press a key"
__constant char main::s1[$41] = "this program demonstrates the layer functionality in text mode.
"
__constant char main::s11[$18] = "vera layer 1 mapbase = "
__constant char main::s12[$e] = ", tilebase = "
__constant char main::s15[$18] = "
vera layer 0 config = "
__constant char main::s17[$16] = "vera layer 0 shown = "
__constant char main::s19[$18] = "vera layer 0 mapbase = "
__constant char main::s2[$14] = "
vera card width = "
__constant char main::s22[$29] = "                                        "
__constant char main::s23[$29] = "     this is printed on layer 0 !!!     "
__constant char main::s25[$2f] = "press a key to show layer 0 and show the text!"
__constant char main::s27[3] = ". "
__constant char main::s28[$34] = "press a key to hide layer 0 and hide the text again"
__constant char main::s3[$c] = "; height = "
__constant char main::s31[$16] = "press a key to finish"
__constant char main::s32[$26] = "                                     "
__constant char main::s33[$26] = "     analyze the code and learn!     "
__constant char main::s4[2] = "
"
__constant char main::s5[$12] = "
vera dc video = "
__constant char main::s7[$18] = "
vera layer 1 config = "
__constant char main::s9[$16] = "vera layer 1 shown = "
char main::screensizex1_return
char main::screensizex1_return#0 // screensizex1_return zp[1]:6 4.4
char main::screensizey1_return
char main::screensizey1_return#0 // screensizey1_return zp[1]:23 3.142857142857143
char main::textcolor10_color
char main::textcolor11_color
char main::textcolor12_color
char main::textcolor1_color
char main::textcolor2_color
char main::textcolor3_color
char main::textcolor4_color
char main::textcolor5_color
char main::textcolor6_color
char main::textcolor7_color
char main::textcolor8_color
char main::textcolor9_color
char main::tilebase
char main::tilebase#0 // tilebase zp[1]:25 3.6666666666666665
char main::tilebase#1 // tilebase_1 zp[1]:26 3.6666666666666665
char main::vera_layer_hide1_$0 // reg byte a 22.0
char main::vera_layer_hide1_layer
char main::vera_layer_is_visible1_layer
__constant char main::vera_layer_is_visible1_layer#0 = 1 // vera_layer_is_visible1_layer
char main::vera_layer_is_visible1_return
char main::vera_layer_is_visible1_return#0 // vera_layer_is_visible1_return zp[1]:24 7.333333333333333
char main::vera_layer_is_visible2_layer
char main::vera_layer_is_visible2_return
char main::vera_layer_is_visible2_return#0 // vera_layer_is_visible2_return zp[1]:6 7.333333333333333
char main::vera_layer_is_visible3_layer
char main::vera_layer_is_visible3_return
char main::vera_layer_is_visible3_return#0 // vera_layer_is_visible3_return zp[1]:6 5.5
char main::vera_layer_is_visible4_layer
char main::vera_layer_is_visible4_return
char main::vera_layer_is_visible4_return#0 // vera_layer_is_visible4_return zp[1]:6 5.5
char main::vera_layer_show1_layer
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0 // reg byte a 2.000000002E9
char memcpy_in_vram::$1 // reg byte a 2.000000002E9
char memcpy_in_vram::$3 // reg byte a 2.000000002E9
char memcpy_in_vram::$4 // reg byte a 2.000000002E9
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0 // dest zp[2]:53 1.909090911818182E8
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_increment
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#1 // i zp[2]:19 2.00000000002E11
unsigned int memcpy_in_vram::i#2 // i zp[2]:19 1.00000000001E11
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0 // num zp[2]:57 5.888235294235294E9
void *memcpy_in_vram::src
char *memcpy_in_vram::src#0 // src zp[2]:55 1.6666666833333334E7
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_increment
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
__constant char *printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // reg byte a 701.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
__constant void (*printf_number_buffer::putc#0)(char) = &cputc // putc
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 100001.0
void (*printf_str::putc)(char)
void (*printf_str::putc#38)(char) // putc zp[2]:40
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:42 100001.0
const char *printf_str::s#37 // s zp[2]:42 155002.0
const char *printf_str::s#38 // s zp[2]:42 10001.0
void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uchar::format
char printf_uchar::format_justify_left
char printf_uchar::format_min_length
char printf_uchar::format_radix
char printf_uchar::format_radix#12 // reg byte y 33.666666666666664
char printf_uchar::format_sign_always
char printf_uchar::format_upper_case
char printf_uchar::format_zero_padding
void (*printf_uchar::putc)(char)
char printf_uchar::uvalue
char printf_uchar::uvalue#12 // uvalue zp[1]:6 116.5
char printf_uchar::uvalue#19 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#2 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#3 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#4 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#5 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#6 // uvalue zp[1]:6 7.333333333333333
char printf_uchar::uvalue#7 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#8 // uvalue zp[1]:6 22.0
char printf_uchar::uvalue#9 // uvalue zp[1]:6 22.0
void screenlayer(char layer)
unsigned int screenlayer::$2 // zp[2]:32 202.0
char screenlayer::$3 // reg byte a 202.0
unsigned int screenlayer::$4 // zp[2]:44 202.0
unsigned int screenlayer::$5 // zp[2]:48 202.0
char screenlayer::layer
char screenlayer::layer#4 // reg byte a 101.0
char screenlayer::vera_layer_get_height1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0 // vera_layer_get_height1_config zp[2]:46 202.0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0 // vera_layer_get_height1_return zp[2]:48 202.0
unsigned int screenlayer::vera_layer_get_height1_return#1 // vera_layer_get_height1_return zp[2]:48 202.0
char screenlayer::vera_layer_get_width1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0 // vera_layer_get_width1_config zp[2]:30 202.0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0 // vera_layer_get_width1_return zp[2]:32 202.0
unsigned int screenlayer::vera_layer_get_width1_return#1 // vera_layer_get_width1_return zp[2]:32 202.0
void screensize(char *x , char *y)
char screensize::$1 // reg byte a 202.0
char screensize::$3 // reg byte a 202.0
char screensize::hscale
char screensize::hscale#0 // reg byte a 202.0
char screensize::vscale
char screensize::vscale#0 // reg byte a 202.0
char *screensize::x
__constant char *screensize::x#0 = &conio_screen_width // x
char *screensize::y
__constant char *screensize::y#0 = &conio_screen_height // y
void uctoa(char value , char *buffer , char radix)
char uctoa::$4 // reg byte a 20002.0
char *uctoa::buffer
char *uctoa::buffer#11 // buffer zp[2]:40 3231.230769230769
char *uctoa::buffer#14 // buffer zp[2]:40 15001.5
char *uctoa::buffer#3 // buffer zp[2]:40 2002.0
char *uctoa::buffer#4 // buffer zp[2]:40 20002.0
char uctoa::digit
char uctoa::digit#1 // digit zp[1]:38 20002.0
char uctoa::digit#2 // digit zp[1]:38 2857.4285714285716
char uctoa::digit_value
char uctoa::digit_value#0 // reg byte y 6000.6
char *uctoa::digit_values
char *uctoa::digit_values#8 // digit_values zp[2]:42 625.0625
char uctoa::max_digits
char uctoa::max_digits#7 // max_digits zp[1]:24 625.0625
char uctoa::radix
char uctoa::radix#0 // reg byte y 1026.25
char uctoa::started
char uctoa::started#2 // started zp[1]:7 5000.5
char uctoa::started#4 // started zp[1]:7 10001.0
char uctoa::value
char uctoa::value#0 // reg byte x 10001.0
char uctoa::value#1 // reg byte x 157.42857142857142
char uctoa::value#2 // reg byte x 6000.857142857143
char uctoa::value#6 // reg byte x 15001.5
char uctoa_append(char *buffer , char value , char sub)
char *uctoa_append::buffer
char *uctoa_append::buffer#0 // buffer zp[2]:40 13750.25
char uctoa_append::digit
char uctoa_append::digit#1 // reg byte y 1.0000001E7
char uctoa_append::digit#2 // reg byte y 1.00500015E7
char uctoa_append::return
char uctoa_append::return#0 // reg byte x 20002.0
char uctoa_append::sub
char uctoa_append::sub#0 // sub zp[1]:50 3335000.5
char uctoa_append::value
char uctoa_append::value#0 // reg byte x 36667.33333333333
char uctoa_append::value#1 // reg byte x 2.0000002E7
char uctoa_append::value#2 // reg byte x 5018334.166666666
__constant char vera_layer_backcolor[2] = { BLUE, BLUE }
__constant char *vera_layer_config[2] = { VERA_L0_CONFIG, VERA_L1_CONFIG }
__constant char vera_layer_enable[2] = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0 // reg byte x 1102.0
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0 // reg byte a 202.0
char vera_layer_get_backcolor::return#1 // reg byte a 367.33333333333337
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0 // reg byte a 2.000000002E9
char vera_layer_get_color::$1 // reg byte a 2.000000002E9
char vera_layer_get_color::$3 // reg byte a 2.000000002E9
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0 // addr zp[2]:36 2.000000002E9
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0 // reg byte x 20002.0
char vera_layer_get_color::layer#1 // reg byte x 2.00000002E8
char vera_layer_get_color::layer#2 // reg byte x 6.833350010000001E8
char vera_layer_get_color::return
char vera_layer_get_color::return#0 // reg byte a 20002.0
char vera_layer_get_color::return#1 // reg byte a 2.000000002E9
char vera_layer_get_color::return#2 // reg byte a 2.000000002E9
char vera_layer_get_color::return#3 // reg byte a 5.25002501E8
char vera_layer_get_color::return#4 // reg byte a 2.00000002E8
char vera_layer_get_config(char layer)
char vera_layer_get_config::$0 // reg byte a 202.0
char *vera_layer_get_config::config
char *vera_layer_get_config::config#0 // config zp[2]:40 202.0
char vera_layer_get_config::layer
char vera_layer_get_config::layer#4 // reg byte a 101.0
char vera_layer_get_config::return
char vera_layer_get_config::return#0 // reg byte a 26.8
char vera_layer_get_config::return#10 // reg byte a 22.0
char vera_layer_get_config::return#2 // reg byte a 22.0
char vera_layer_get_config::return#3 // reg byte a 22.0
char vera_layer_get_mapbase(char layer)
char vera_layer_get_mapbase::$0 // reg byte a 202.0
char vera_layer_get_mapbase::layer
char vera_layer_get_mapbase::layer#2 // reg byte a 101.0
char *vera_layer_get_mapbase::mapbase
char *vera_layer_get_mapbase::mapbase#0 // mapbase zp[2]:42 202.0
char vera_layer_get_mapbase::return
char vera_layer_get_mapbase::return#0 // reg byte a 30.75
char vera_layer_get_mapbase::return#2 // reg byte a 22.0
char vera_layer_get_mapbase::return#3 // reg byte a 22.0
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0 // reg byte x 1102.0
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0 // reg byte a 367.33333333333337
char vera_layer_get_mapbase_bank::return#2 // reg byte a 202.0
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0 // reg byte a 2002.0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0 // return zp[2]:30 367.33333333333337
unsigned int vera_layer_get_mapbase_offset::return#2 // return zp[2]:30 202.0
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0 // reg byte x 1102.0
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0 // reg byte a 367.33333333333337
char vera_layer_get_rowshift::return#2 // reg byte a 202.0
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0 // reg byte a 2002.0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0 // return zp[2]:44 367.33333333333337
unsigned int vera_layer_get_rowskip::return#2 // return zp[2]:44 202.0
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0 // reg byte x 1102.0
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0 // reg byte a 202.0
char vera_layer_get_textcolor::return#1 // reg byte a 367.33333333333337
char vera_layer_get_tilebase(char layer)
char vera_layer_get_tilebase::$0 // reg byte a 202.0
char vera_layer_get_tilebase::layer
char vera_layer_get_tilebase::layer#3 // reg byte a 101.0
char vera_layer_get_tilebase::return
char vera_layer_get_tilebase::return#0 // reg byte a 26.8
char vera_layer_get_tilebase::return#2 // reg byte a 22.0
char vera_layer_get_tilebase::return#3 // reg byte a 22.0
char vera_layer_get_tilebase::return#4 // reg byte a 22.0
char *vera_layer_get_tilebase::tilebase
char *vera_layer_get_tilebase::tilebase#0 // tilebase zp[2]:42 202.0
__constant char *vera_layer_mapbase[2] = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
char vera_layer_mode_text::layer
__constant char vera_layer_mode_text::layer#0 = 1 // layer
unsigned long vera_layer_mode_text::mapbase_address
__constant unsigned long vera_layer_mode_text::mapbase_address#0 = 0 // mapbase_address
unsigned int vera_layer_mode_text::mapheight
unsigned int vera_layer_mode_text::mapwidth
unsigned long vera_layer_mode_text::tilebase_address
__constant unsigned long vera_layer_mode_text::tilebase_address#0 = $f800 // tilebase_address
char vera_layer_mode_text::tileheight
char vera_layer_mode_text::tilewidth
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::config
__constant char vera_layer_mode_tile::config#10 = VERA_LAYER_WIDTH_128|VERA_LAYER_HEIGHT_64 // config
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::mapbase
__constant char vera_layer_mode_tile::mapbase#0 = 0 // mapbase
unsigned long vera_layer_mode_tile::mapbase_address
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapwidth
char vera_layer_mode_tile::tilebase
unsigned long vera_layer_mode_tile::tilebase_address
__constant unsigned long vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_text::tilebase_address#0>>1 // tilebase_address
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tilewidth
__constant char vera_layer_rowshift[2] = { 0, 0 }
__constant unsigned int vera_layer_rowskip[2] = { 0, 0 }
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::color#10 // reg byte a 101.0
char vera_layer_set_backcolor::layer
char vera_layer_set_backcolor::layer#1 // reg byte x 22.0
char vera_layer_set_backcolor::layer#10 // reg byte x 200.0
char vera_layer_set_backcolor::layer#2 // reg byte x 22.0
char vera_layer_set_backcolor::layer#3 // reg byte x 22.0
char vera_layer_set_backcolor::layer#4 // reg byte x 22.0
char vera_layer_set_backcolor::layer#5 // reg byte x 22.0
char vera_layer_set_backcolor::layer#6 // reg byte x 22.0
char vera_layer_set_backcolor::layer#7 // reg byte x 22.0
char vera_layer_set_backcolor::layer#8 // reg byte x 22.0
char vera_layer_set_backcolor::layer#9 // reg byte x 22.0
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::return
void vera_layer_set_config(char layer , char config)
char vera_layer_set_config::$0 // reg byte a 20002.0
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0 // addr zp[2]:44 20002.0
char vera_layer_set_config::config
char vera_layer_set_config::config#1 // reg byte x 22.0
char vera_layer_set_config::config#2 // reg byte x 3337.333333333333
char vera_layer_set_config::layer
char vera_layer_set_config::layer#2 // reg byte a 10001.0
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0 // reg byte a 20002.0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0 // addr zp[2]:32 20002.0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#4 // reg byte a 10001.0
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#4 // reg byte x 3333.6666666666665
void vera_layer_set_text_color_mode(char layer , char color_mode)
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0 // addr zp[2]:48 2502.5
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::layer
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::color#13 // reg byte a 101.0
char vera_layer_set_textcolor::layer
char vera_layer_set_textcolor::layer#1 // reg byte x 22.0
char vera_layer_set_textcolor::layer#10 // reg byte x 22.0
char vera_layer_set_textcolor::layer#11 // reg byte x 22.0
char vera_layer_set_textcolor::layer#12 // reg byte x 22.0
char vera_layer_set_textcolor::layer#13 // reg byte x 233.0
char vera_layer_set_textcolor::layer#2 // reg byte x 22.0
char vera_layer_set_textcolor::layer#3 // reg byte x 22.0
char vera_layer_set_textcolor::layer#4 // reg byte x 22.0
char vera_layer_set_textcolor::layer#5 // reg byte x 22.0
char vera_layer_set_textcolor::layer#6 // reg byte x 22.0
char vera_layer_set_textcolor::layer#7 // reg byte x 22.0
char vera_layer_set_textcolor::layer#8 // reg byte x 22.0
char vera_layer_set_textcolor::layer#9 // reg byte x 22.0
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::return
void vera_layer_set_tilebase(char layer , char tilebase)
char vera_layer_set_tilebase::$0 // reg byte a 20002.0
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0 // addr zp[2]:46 20002.0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::layer#2 // reg byte a 10001.0
char vera_layer_set_tilebase::tilebase
char vera_layer_set_tilebase::tilebase#1 // reg byte x 22.0
char vera_layer_set_tilebase::tilebase#2 // reg byte x 3337.333333333333
__constant char vera_layer_textcolor[2] = { WHITE, WHITE }
__constant char *vera_layer_tilebase[2] = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
__constant unsigned long vera_mapbase_address[2] = { 0, 0 }
__constant char vera_mapbase_bank[2] = { 0, 0 }
__constant unsigned int vera_mapbase_offset[2] = { 0, 0 }
__constant unsigned long vera_tilebase_address[2] = { 0, 0 }
__constant char vera_tilebase_bank[2] = { 0, 0 }
__constant unsigned int vera_tilebase_offset[2] = { 0, 0 }

zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
zp[1]:3 [ CONIO_SCREEN_BANK#13 ]
reg byte a [ screenlayer::layer#4 ]
reg byte x [ vera_layer_set_textcolor::layer#13 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#10 vera_layer_set_textcolor::layer#11 vera_layer_set_textcolor::layer#12 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 vera_layer_set_textcolor::layer#6 vera_layer_set_textcolor::layer#7 vera_layer_set_textcolor::layer#8 vera_layer_set_textcolor::layer#9 ]
reg byte a [ vera_layer_set_textcolor::color#13 ]
reg byte x [ vera_layer_set_backcolor::layer#10 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#5 vera_layer_set_backcolor::layer#6 vera_layer_set_backcolor::layer#7 vera_layer_set_backcolor::layer#8 vera_layer_set_backcolor::layer#9 ]
reg byte a [ vera_layer_set_backcolor::color#10 ]
reg byte a [ vera_layer_set_mapbase::layer#4 ]
reg byte x [ vera_layer_set_mapbase::mapbase#4 ]
reg byte x [ gotoxy::y#11 gotoxy::y#10 gotoxy::y#1 gotoxy::y#2 ]
reg byte y [ gotoxy::x#11 gotoxy::x#10 ]
reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
reg byte a [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[2]:4 [ CONIO_SCREEN_TEXT#16 CONIO_SCREEN_TEXT#114 CONIO_SCREEN_TEXT#236 CONIO_SCREEN_TEXT#237 CONIO_SCREEN_TEXT#238 CONIO_SCREEN_TEXT#239 CONIO_SCREEN_TEXT#240 ]
zp[1]:6 [ printf_uchar::uvalue#12 main::vera_layer_is_visible3_return#0 main::vera_layer_is_visible4_return#0 main::screensizex1_return#0 printf_uchar::uvalue#19 printf_uchar::uvalue#2 printf_uchar::uvalue#3 printf_uchar::uvalue#4 printf_uchar::uvalue#5 printf_uchar::uvalue#6 printf_uchar::uvalue#7 printf_uchar::uvalue#8 printf_uchar::uvalue#9 main::dcvideo#0 main::config#0 main::mapbase#0 main::vera_layer_is_visible2_return#0 main::mapbase#1 ]
reg byte y [ printf_uchar::format_radix#12 ]
reg byte a [ vera_layer_get_config::layer#4 ]
reg byte a [ vera_layer_get_mapbase::layer#2 ]
reg byte a [ vera_layer_get_tilebase::layer#3 ]
reg byte a [ vera_layer_set_config::layer#2 ]
reg byte x [ vera_layer_set_config::config#2 vera_layer_set_config::config#1 ]
reg byte a [ vera_layer_set_tilebase::layer#2 ]
reg byte x [ vera_layer_set_tilebase::tilebase#2 vera_layer_set_tilebase::tilebase#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:7 [ uctoa::started#2 uctoa::started#4 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
zp[1]:8 [ conio_screen_width ]
zp[1]:9 [ conio_screen_height ]
zp[1]:10 [ conio_screen_layer ]
zp[2]:11 [ conio_width ]
zp[2]:13 [ conio_height ]
zp[1]:15 [ conio_rowshift ]
zp[2]:16 [ conio_rowskip ]
zp[1]:18 [ cputc::c#0 ]
reg byte a [ vera_layer_get_color::return#0 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
zp[2]:19 [ cputc::conio_addr#0 cputc::conio_addr#1 memcpy_in_vram::i#2 memcpy_in_vram::i#1 clearline::c#2 clearline::c#1 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:21 [ cputc::$16 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$81 ]
zp[1]:23 [ main::screensizey1_return#0 ]
reg byte a [ vera_layer_get_config::return#2 ]
zp[1]:24 [ main::vera_layer_is_visible1_return#0 uctoa::max_digits#7 ]
reg byte a [ vera_layer_get_mapbase::return#2 ]
reg byte a [ vera_layer_get_tilebase::return#2 ]
zp[1]:25 [ main::tilebase#0 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$83 ]
reg byte a [ vera_layer_get_config::return#3 ]
reg byte a [ vera_layer_get_tilebase::return#3 ]
reg byte a [ vera_layer_get_config::return#10 ]
reg byte a [ vera_layer_get_mapbase::return#3 ]
reg byte a [ vera_layer_get_tilebase::return#4 ]
zp[1]:26 [ main::tilebase#1 ]
reg byte a [ kbhit::return#10 ]
reg byte a [ main::$85 ]
reg byte a [ kbhit::return#11 ]
reg byte a [ main::$87 ]
reg byte a [ main::vera_layer_hide1_$0 ]
reg byte a [ kbhit::return#12 ]
reg byte a [ main::$89 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte x [ vera_layer_get_mapbase_bank::layer#0 ]
reg byte a [ vera_layer_get_mapbase_bank::return#2 ]
zp[1]:27 [ CONIO_SCREEN_BANK#16 ]
reg byte a [ vera_layer_get_mapbase_offset::layer#0 ]
zp[2]:28 [ CONIO_SCREEN_TEXT#103 ]
reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$2 ]
zp[2]:30 [ screenlayer::vera_layer_get_width1_config#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$1 ]
reg byte a [ screenlayer::vera_layer_get_width1_$3 ]
reg byte x [ vera_layer_get_rowshift::layer#0 ]
reg byte a [ vera_layer_get_rowshift::return#2 ]
reg byte a [ screenlayer::$3 ]
reg byte a [ vera_layer_get_rowskip::layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$2 ]
reg byte a [ screenlayer::vera_layer_get_height1_$0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$1 ]
reg byte a [ screenlayer::vera_layer_get_height1_$3 ]
reg byte a [ vera_layer_set_mapbase::$0 ]
zp[2]:32 [ vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
zp[2]:34 [ gotoxy::$6 gotoxy::line_offset#0 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ vera_layer_get_color::$3 ]
reg byte a [ vera_layer_get_color::$0 ]
reg byte a [ vera_layer_get_color::$1 ]
reg byte a [ cputln::$2 ]
zp[2]:36 [ cputln::temp#0 cputln::temp#1 vera_layer_get_color::addr#0 ]
reg byte a [ cputln::$3 ]
reg byte x [ vera_layer_get_backcolor::layer#0 ]
reg byte a [ vera_layer_get_backcolor::return#0 ]
reg byte a [ clrscr::$0 ]
zp[1]:38 [ clrscr::$1 clrscr::color#0 uctoa::digit#2 uctoa::digit#1 ]
reg byte x [ vera_layer_get_textcolor::layer#0 ]
reg byte a [ vera_layer_get_textcolor::return#0 ]
reg byte a [ clrscr::$2 ]
reg byte a [ clrscr::$9 ]
reg byte a [ clrscr::$5 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ printf_str::c#1 ]
zp[1]:39 [ kbhit::ch ]
reg byte a [ kbhit::return#0 ]
reg byte a [ kbhit::return#1 ]
reg byte a [ clearline::$5 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_layer_get_color::return#4 ]
reg byte x [ clearline::color#0 ]
reg byte y [ uctoa::radix#0 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte a [ vera_layer_get_config::$0 ]
zp[2]:40 [ vera_layer_get_config::config#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 printf_str::putc#38 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
reg byte a [ vera_layer_get_config::return#0 ]
reg byte a [ vera_layer_get_mapbase::$0 ]
reg byte a [ vera_layer_get_mapbase::return#0 ]
reg byte a [ vera_layer_get_tilebase::$0 ]
zp[2]:42 [ vera_layer_get_tilebase::tilebase#0 vera_layer_get_mapbase::mapbase#0 uctoa::digit_values#8 printf_str::s#37 printf_str::s#38 printf_str::s#0 ]
reg byte a [ vera_layer_get_tilebase::return#0 ]
reg byte a [ vera_layer_set_config::$0 ]
zp[2]:44 [ vera_layer_set_config::addr#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ]
reg byte a [ vera_layer_set_tilebase::$0 ]
zp[2]:46 [ vera_layer_set_tilebase::addr#0 screenlayer::vera_layer_get_height1_config#0 ]
zp[2]:48 [ vera_layer_set_text_color_mode::addr#0 screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
reg byte a [ vera_layer_get_mapbase_bank::return#0 ]
reg byte a [ vera_layer_get_mapbase_offset::$0 ]
reg byte a [ vera_layer_get_rowshift::return#0 ]
reg byte a [ vera_layer_get_rowskip::$0 ]
reg byte a [ vera_layer_get_backcolor::return#1 ]
reg byte a [ vera_layer_get_textcolor::return#1 ]
reg byte a [ uctoa::$4 ]
reg byte y [ uctoa::digit_value#0 ]
zp[1]:50 [ uctoa_append::sub#0 ]
reg byte x [ uctoa_append::return#0 ]
zp[1]:51 [ insertup::cy#0 ]
zp[1]:52 [ insertup::width#0 ]
reg byte a [ insertup::$3 ]
zp[2]:53 [ insertup::line#0 insertup::start#0 memcpy_in_vram::dest#0 clearline::addr#0 ]
zp[2]:55 [ memcpy_in_vram::src#0 ]
zp[2]:57 [ memcpy_in_vram::num#0 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
mem[12] [ printf_buffer ]
