(label) @19
(label) @begin
(label) @end
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word/dword/signed dword) 1024
(byte*) char_cursor
(byte*) char_cursor#1 char_cursor zp ZP_WORD:7 101.0
(byte*) char_cursor#11 char_cursor zp ZP_WORD:7 4.228571428571427
(byte*) char_cursor#2 char_cursor zp ZP_WORD:7 12.791666666666664
(byte*) char_cursor#50 char_cursor zp ZP_WORD:7 4.0
(byte*) char_cursor#81 char_cursor zp ZP_WORD:7 5.666666666666667
(byte*) char_cursor#86 char_cursor zp ZP_WORD:7 45.0
(byte*~) char_cursor#90 char_cursor zp ZP_WORD:7 22.0
(byte*~) char_cursor#99 char_cursor zp ZP_WORD:7 4.0
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 22.0
(byte~) divr16u::$2 reg byte a 22.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp ZP_WORD:17 2.75
(word) divr16u::dividend#1 dividend zp ZP_WORD:17 4.0
(word) divr16u::dividend#3 dividend zp ZP_WORD:17 5.0
(word) divr16u::dividend#5 dividend zp ZP_WORD:17 4.0
(word) divr16u::divisor
(word) divr16u::divisor#0 divisor zp ZP_WORD:15 2.0
(word) divr16u::divisor#1 divisor zp ZP_WORD:15 2.0
(word) divr16u::divisor#6 divisor zp ZP_WORD:15 1.625
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 16.5
(byte) divr16u::i#2 reg byte x 1.6923076923076923
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp ZP_WORD:19 16.5
(word) divr16u::quotient#2 quotient zp ZP_WORD:19 11.0
(word) divr16u::quotient#3 quotient zp ZP_WORD:19 2.75
(word) divr16u::rem
(word) divr16u::rem#0 rem zp ZP_WORD:3 8.25
(word) divr16u::rem#1 rem zp ZP_WORD:3 22.0
(word) divr16u::rem#10 rem zp ZP_WORD:3 4.0
(word) divr16u::rem#11 rem zp ZP_WORD:3 1.5599999999999998
(word) divr16u::rem#2 rem zp ZP_WORD:3 22.0
(word) divr16u::rem#4 rem zp ZP_WORD:3 4.0
(word) divr16u::rem#5 rem zp ZP_WORD:3 24.0
(word) divr16u::rem#6 rem zp ZP_WORD:3 11.0
(word) divr16u::return
(word) divr16u::return#0 return zp ZP_WORD:19 6.166666666666666
(word) divr16u::return#2 return zp ZP_WORD:19 4.0
(word) divr16u::return#3 return zp ZP_WORD:19 4.0
(void()) lin16u_gen((word) lin16u_gen::min , (word) lin16u_gen::max , (word*) lin16u_gen::lintab , (word) lin16u_gen::length)
(word~) lin16u_gen::$5 $5 zp ZP_WORD:15 22.0
(label) lin16u_gen::@1
(label) lin16u_gen::@3
(label) lin16u_gen::@4
(label) lin16u_gen::@return
(word) lin16u_gen::ampl
(word) lin16u_gen::ampl#0 ampl zp ZP_WORD:3 2.0
(word) lin16u_gen::i
(word) lin16u_gen::i#1 i zp ZP_WORD:5 16.5
(word) lin16u_gen::i#2 i zp ZP_WORD:5 4.4
(word) lin16u_gen::length
(word) lin16u_gen::length#3 length zp ZP_WORD:7 0.7142857142857143
(word*) lin16u_gen::lintab
(word*) lin16u_gen::lintab#3 lintab zp ZP_WORD:13 7.333333333333333
(word*) lin16u_gen::lintab#4 lintab zp ZP_WORD:13 8.75
(word*) lin16u_gen::lintab#5 lintab zp ZP_WORD:13 0.14285714285714285
(word) lin16u_gen::max
(word) lin16u_gen::max#3 max zp ZP_WORD:3 2.0
(word) lin16u_gen::min
(word) lin16u_gen::min#3 min zp ZP_WORD:5 0.3076923076923077
(dword) lin16u_gen::step
(dword) lin16u_gen::step#0 step zp ZP_DWORD:23 1.4444444444444446
(word) lin16u_gen::stepf
(word) lin16u_gen::stepf#0 stepf zp ZP_WORD:19 4.0
(word) lin16u_gen::stepi
(word) lin16u_gen::stepi#0 stepi zp ZP_WORD:21 0.6666666666666666
(dword) lin16u_gen::val
(dword) lin16u_gen::val#0 val zp ZP_DWORD:9 4.0
(dword) lin16u_gen::val#1 val zp ZP_DWORD:9 5.5
(dword) lin16u_gen::val#2 val zp ZP_DWORD:9 11.666666666666666
(byte*) line_cursor
(byte*) line_cursor#1 line_cursor zp ZP_WORD:3 8.891891891891891
(byte*) line_cursor#11 line_cursor zp ZP_WORD:3 204.0
(byte*) line_cursor#21 line_cursor zp ZP_WORD:3 15.0
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(byte) main::i
(byte) main::i#1 i zp ZP_BYTE:2 16.5
(byte) main::i#10 i zp ZP_BYTE:2 3.666666666666667
(word[20]) main::lintab1
(const word[20]) main::lintab1#0 lintab1 = { fill( 20, 0) }
(word[20]) main::lintab2
(const word[20]) main::lintab2#0 lintab2 = { fill( 20, 0) }
(word[20]) main::lintab3
(const word[20]) main::lintab3#0 lintab3 = { fill( 20, 0) }
(const string) main::str str = (string) "   @"
(const string) main::str1 str1 = (string) " @"
(const string) main::str2 str2 = (string) " @"
(const string) main::str3 str3 = (string) " @"
(const string) main::str4 str4 = (string) " @"
(const string) main::str5 str5 = (string) " @"
(const string) main::str6 str6 = (string) "   @"
(const string) main::str7 str7 = (string) " @"
(const string) main::str8 str8 = (string) " @"
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 4.0
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#2 reg byte x 11.0
(byte) print_byte::b#3 reg byte x 4.75
(byte[]) print_byte::hextab
(const string) print_byte::hextab#0 hextab = (string) "0123456789abcdef"
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#2 reg byte a 6.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:3 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:3 16.5
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp ZP_WORD:5 202.0
(byte*) print_str::str#10 str zp ZP_WORD:5 101.5
(byte*) print_str::str#12 str zp ZP_WORD:5 2.0
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#10 w zp ZP_WORD:5 12.333333333333332
(word) print_word::w#3 w zp ZP_WORD:5 22.0
(word) print_word::w#4 w zp ZP_WORD:5 22.0
(word) print_word::w#5 w zp ZP_WORD:5 22.0
(word) rem16u
(word) rem16u#22 rem16u zp ZP_WORD:3 40.0

zp ZP_BYTE:2 [ main::i#10 main::i#1 ]
zp ZP_WORD:3 [ line_cursor#11 line_cursor#21 line_cursor#1 print_cls::sc#2 print_cls::sc#1 lin16u_gen::max#3 divr16u::rem#5 divr16u::rem#10 divr16u::rem#4 rem16u#22 divr16u::rem#11 divr16u::rem#6 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 lin16u_gen::ampl#0 ]
zp ZP_WORD:5 [ print_word::w#10 print_word::w#3 print_word::w#4 print_word::w#5 print_str::str#10 print_str::str#12 print_str::str#0 lin16u_gen::min#3 lin16u_gen::i#2 lin16u_gen::i#1 ]
reg byte x [ print_byte::b#3 print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp ZP_WORD:7 [ char_cursor#86 char_cursor#50 char_cursor#81 char_cursor#90 char_cursor#2 char_cursor#11 char_cursor#99 char_cursor#1 lin16u_gen::length#3 ]
zp ZP_DWORD:9 [ lin16u_gen::val#2 lin16u_gen::val#1 lin16u_gen::val#0 ]
zp ZP_WORD:13 [ lin16u_gen::lintab#4 lin16u_gen::lintab#3 lin16u_gen::lintab#5 ]
zp ZP_WORD:15 [ divr16u::divisor#6 divr16u::divisor#0 divr16u::divisor#1 lin16u_gen::$5 ]
zp ZP_WORD:17 [ divr16u::dividend#3 divr16u::dividend#5 divr16u::dividend#1 divr16u::dividend#0 ]
zp ZP_WORD:19 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 divr16u::return#3 lin16u_gen::stepf#0 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]
zp ZP_WORD:21 [ lin16u_gen::stepi#0 ]
zp ZP_DWORD:23 [ lin16u_gen::step#0 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
