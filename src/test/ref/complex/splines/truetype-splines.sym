(const nomodify byte*) BITMAP_GRAPHICS = (byte*) 24576
(const nomodify byte*) BITMAP_SCREEN = (byte*) 23552
(const nomodify struct MOS6526_CIA*) CIA2 = (struct MOS6526_CIA*) 56576
(const signed byte*) COS = (const signed byte*) SIN+(byte) $40
(const nomodify byte*) D011 = (byte*) 53265
(const nomodify byte*) D018 = (byte*) 53272
(const byte) LINE_TO = (byte) 2
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) MOVE_TO = (byte) 0
(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = (byte) 2
(const byte) OFFSET_STRUCT_SEGMENT_TO = (byte) 1
(const byte) OFFSET_STRUCT_SEGMENT_VIA = (byte) 5
(const byte) OFFSET_STRUCT_SPLINEVECTOR16_Y = (byte) 2
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const nomodify byte*) RASTER = (byte*) 53266
(const signed byte*) SIN[(number) $140]  = kickasm {{ .for(var i=0;i<$140;i++)
        .byte >round($7fff*sin(i*2*PI/256))
 }}
(const byte) SIZEOF_STRUCT_SPLINEVECTOR16 = (byte) 4
(const struct SplineVector16*) SPLINE_8SEG[(number) 9]  = { fill( 9, 0) }
(const byte) SPLINE_TO = (byte) 1
(const byte) Segment::SegmentType::LINE_TO = (byte) 2
(const byte) Segment::SegmentType::MOVE_TO = (byte) 0
(const byte) Segment::SegmentType::SPLINE_TO = (byte) 1
(struct SplineVector16) Segment::to
(byte) Segment::type
(struct SplineVector16) Segment::via
(signed word) SplineVector16::x
(signed word) SplineVector16::y
(signed dword) SplineVector32::x
(signed dword) SplineVector32::y
(const nomodify byte) VIC_BMM = (byte) $20
(const nomodify byte) VIC_DEN = (byte) $10
(const nomodify byte) VIC_RSEL = (byte) 8
(const nomodify byte) WHITE = (byte) 1
(word()) abs_u16((word) abs_u16::w)
(byte~) abs_u16::$0 reg byte a 2.0000000002E10
(byte~) abs_u16::$1 reg byte a 2.0000000002E10
(label) abs_u16::@1
(label) abs_u16::@return
(word) abs_u16::return
(word) abs_u16::return#0 return zp[2]:29 2.000000002E9
(word) abs_u16::return#1 return zp[2]:29 2.000000002E9
(word) abs_u16::return#2 return zp[2]:29 2.0000000002E10
(word) abs_u16::return#4 return zp[2]:29 5.500000001E9
(word) abs_u16::w
(word) abs_u16::w#0 w zp[2]:29 2.000000002E9
(word) abs_u16::w#1 w zp[2]:29 2.000000002E9
(word) abs_u16::w#2 w zp[2]:29 8.00000000125E9
(void()) bitmap_clear((byte) bitmap_clear::bgcol , (byte) bitmap_clear::fgcol)
(label) bitmap_clear::@1
(label) bitmap_clear::@return
(byte) bitmap_clear::bgcol
(byte) bitmap_clear::col
(const byte) bitmap_clear::col#0 col = (const nomodify byte) WHITE<<(byte) 4
(byte) bitmap_clear::fgcol
(byte*) bitmap_gfx
(void()) bitmap_init((byte*) bitmap_init::gfx , (byte*) bitmap_init::screen)
(byte~) bitmap_init::$4 reg byte a 202.0
(byte~) bitmap_init::$5 reg byte a 202.0
(byte~) bitmap_init::$6 reg byte a 202.0
(byte~) bitmap_init::$7 zp[1]:24 50.5
(label) bitmap_init::@1
(label) bitmap_init::@2
(label) bitmap_init::@3
(label) bitmap_init::@4
(label) bitmap_init::@5
(label) bitmap_init::@6
(label) bitmap_init::@return
(byte) bitmap_init::bits
(byte) bitmap_init::bits#1 reg byte a 101.0
(byte) bitmap_init::bits#3 reg byte a 151.5
(byte) bitmap_init::bits#4 reg byte a 67.33333333333333
(byte*) bitmap_init::gfx
(byte*) bitmap_init::screen
(byte) bitmap_init::x
(byte) bitmap_init::x#1 reg byte x 151.5
(byte) bitmap_init::x#2 reg byte x 50.5
(byte) bitmap_init::y
(byte) bitmap_init::y#1 reg byte x 151.5
(byte) bitmap_init::y#2 reg byte x 50.5
(byte*) bitmap_init::yoffs
(byte*) bitmap_init::yoffs#1 yoffs zp[2]:8 202.0
(byte*) bitmap_init::yoffs#2 yoffs zp[2]:8 63.125
(byte*) bitmap_init::yoffs#4 yoffs zp[2]:8 101.0
(void()) bitmap_line((word) bitmap_line::x1 , (word) bitmap_line::y1 , (word) bitmap_line::x2 , (word) bitmap_line::y2)
(label) bitmap_line::@1
(label) bitmap_line::@10
(label) bitmap_line::@11
(label) bitmap_line::@12
(label) bitmap_line::@13
(label) bitmap_line::@14
(label) bitmap_line::@15
(label) bitmap_line::@16
(label) bitmap_line::@17
(label) bitmap_line::@18
(label) bitmap_line::@2
(label) bitmap_line::@3
(label) bitmap_line::@4
(label) bitmap_line::@5
(label) bitmap_line::@6
(label) bitmap_line::@7
(label) bitmap_line::@8
(label) bitmap_line::@9
(label) bitmap_line::@return
(word) bitmap_line::dx
(word) bitmap_line::dx#0 dx zp[2]:33 7.5100000000175E10
(word) bitmap_line::dy
(word) bitmap_line::dy#0 dy zp[2]:29 8.34444444446389E10
(word) bitmap_line::e
(word) bitmap_line::e#0 e zp[2]:16 2.000000002E9
(word) bitmap_line::e#1 e zp[2]:16 1.3333333333346667E12
(word) bitmap_line::e#2 e zp[2]:16 2.000000000002E12
(word) bitmap_line::e#3 e zp[2]:16 4.0020000000060004E11
(word) bitmap_line::e#6 e zp[2]:16 1.5000000000015E12
(word) bitmap_line::e1
(word) bitmap_line::e1#0 e1 zp[2]:18 2.000000002E9
(word) bitmap_line::e1#1 e1 zp[2]:18 1.3333333333346667E12
(word) bitmap_line::e1#2 e1 zp[2]:18 2.000000000002E12
(word) bitmap_line::e1#3 e1 zp[2]:18 4.0020000000060004E11
(word) bitmap_line::e1#6 e1 zp[2]:18 1.5000000000015E12
(word) bitmap_line::sx
(word) bitmap_line::sx#0 sx zp[2]:35 6.670000000009999E10
(word) bitmap_line::sy
(word) bitmap_line::sy#0 sy zp[2]:31 7.696153846165384E10
(word) bitmap_line::x
(word) bitmap_line::x#0 x zp[2]:4 2.318186366818182E8
(word) bitmap_line::x#1 x zp[2]:4 1.000000000001E12
(word) bitmap_line::x#12 x zp[2]:4 2.000000000002E12
(word) bitmap_line::x#13 x zp[2]:4 5.715714285721428E11
(word) bitmap_line::x#15 x zp[2]:4 5.714285714291428E11
(word) bitmap_line::x#6 x zp[2]:4 2.001000000003E12
(word) bitmap_line::x#7 x zp[2]:4 7.50250000001E11
(word) bitmap_line::x1
(word) bitmap_line::x1#0 x1 zp[2]:4 5000.5
(word) bitmap_line::x1#1 x1 zp[2]:4 5.00000005E7
(word) bitmap_line::x2
(word) bitmap_line::x2#0 x2 zp[2]:12 10001.0
(word) bitmap_line::x2#10 x2 zp[2]:12 3.131562531265625E10
(word) bitmap_line::x2#13 x2 zp[2]:12 1.00000001E8
(word) bitmap_line::y
(word) bitmap_line::y#0 y zp[2]:6 1.7826130460869563E8
(word) bitmap_line::y#1 y zp[2]:6 5.714285714291428E11
(word) bitmap_line::y#13 y zp[2]:6 2.000000000002E12
(word) bitmap_line::y#15 y zp[2]:6 4.287142857148571E11
(word) bitmap_line::y#2 y zp[2]:6 1.000000000001E12
(word) bitmap_line::y#4 y zp[2]:6 5.0025000000075E11
(word) bitmap_line::y#7 y zp[2]:6 1.000000000001E12
(word) bitmap_line::y1
(word) bitmap_line::y1#0 y1 zp[2]:6 6667.333333333333
(word) bitmap_line::y1#1 y1 zp[2]:6 6.6666667333333336E7
(word) bitmap_line::y2
(word) bitmap_line::y2#0 y2 zp[2]:14 20002.0
(word) bitmap_line::y2#11 y2 zp[2]:14 3.131562531265625E10
(word) bitmap_line::y2#13 y2 zp[2]:14 2.00000002E8
(void()) bitmap_plot((word) bitmap_plot::x , (byte) bitmap_plot::y)
(word~) bitmap_plot::$0 zp[2]:44 2.0000000000002E13
(byte~) bitmap_plot::$1 reg byte x 2.0000000000002E13
(label) bitmap_plot::@return
(byte*) bitmap_plot::plotter
(word) bitmap_plot::plotter#0 plotter zp[2]:42 5.0000000000005E12
(byte*) bitmap_plot::plotter#1 plotter zp[2]:42 1.50000000000015E13
(word) bitmap_plot::x
(word) bitmap_plot::x#0 x zp[2]:4 1.000000001E9
(word) bitmap_plot::x#1 x zp[2]:4 1.000000000001E12
(word) bitmap_plot::x#2 x zp[2]:4 1.000000001E9
(word) bitmap_plot::x#3 x zp[2]:4 1.000000000001E12
(word) bitmap_plot::x#4 x zp[2]:4 5.5005000000015E12
(byte) bitmap_plot::y
(byte) bitmap_plot::y#0 reg byte a 2.000000002E9
(byte) bitmap_plot::y#1 reg byte a 2.000000000002E12
(byte) bitmap_plot::y#2 reg byte a 2.000000002E9
(byte) bitmap_plot::y#3 reg byte a 2.000000000002E12
(byte) bitmap_plot::y#4 reg byte a 2.2002000000006E13
(const to_nomodify byte*) bitmap_plot_bit[(number) $100]  = { fill( $100, 0) }
(void()) bitmap_plot_spline_8seg()
(byte~) bitmap_plot_spline_8seg::$4 zp[1]:37 4.285714328571428E7
(label) bitmap_plot_spline_8seg::@1
(label) bitmap_plot_spline_8seg::@2
(label) bitmap_plot_spline_8seg::@return
(signed word) bitmap_plot_spline_8seg::current_x
(signed word) bitmap_plot_spline_8seg::current_x#0 current_x zp[2]:4 100001.0
(signed word) bitmap_plot_spline_8seg::current_x#1 current_x zp[2]:4 5.00000005E7
(signed word) bitmap_plot_spline_8seg::current_x#2 current_x zp[2]:4 5.0050001E7
(signed word) bitmap_plot_spline_8seg::current_y
(signed word) bitmap_plot_spline_8seg::current_y#0 current_y zp[2]:6 200002.0
(signed word) bitmap_plot_spline_8seg::current_y#1 current_y zp[2]:6 6.6666667333333336E7
(signed word) bitmap_plot_spline_8seg::current_y#2 current_y zp[2]:6 3.3366667333333336E7
(byte) bitmap_plot_spline_8seg::n
(byte) bitmap_plot_spline_8seg::n#1 n zp[1]:24 1.500000015E8
(byte) bitmap_plot_spline_8seg::n#2 n zp[1]:24 3.3333333666666664E7
(const to_nomodify byte*) bitmap_plot_yhi[(number) $100]  = { fill( $100, 0) }
(const to_nomodify byte*) bitmap_plot_ylo[(number) $100]  = { fill( $100, 0) }
(byte*) bitmap_screen
(const struct Segment*) letter_c[(number) $16]  = { { type: (const byte) MOVE_TO, to: { x: (signed word) $6c, y: (signed word) $92 }, via: { x: (signed word) 0, y: (signed word) 0 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $59, y: (signed word) $b6 }, via: { x: (signed word) $67, y: (signed word) $a9 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $3b, y: (signed word) $c3 }, via: { x: (signed word) $4b, y: (signed word) $c3 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $17, y: (signed word) $b2 }, via: { x: (signed word) $26, y: (signed word) $c3 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) 9, y: (signed word) $84 }, via: { x: (signed word) 9, y: (signed word) $a1 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $19, y: (signed word) $57 }, via: { x: (signed word) 9, y: (signed word) $68 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $41, y: (signed word) $45 }, via: { x: (signed word) $2a, y: (signed word) $45 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $5d, y: (signed word) $4f }, via: { x: (signed word) $52, y: (signed word) $45 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $69, y: (signed word) $62 }, via: { x: (signed word) $69, y: (signed word) $58 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $66, y: (signed word) $6a }, via: { x: (signed word) $69, y: (signed word) $67 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $5d, y: (signed word) $6d }, via: { x: (signed word) $62, y: (signed word) $6d } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $51, y: (signed word) $68 }, via: { x: (signed word) $55, y: (signed word) $6d } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $4e, y: (signed word) $5d }, via: { x: (signed word) $4f, y: (signed word) $65 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $49, y: (signed word) $52 }, via: { x: (signed word) $4e, y: (signed word) $56 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $3d, y: (signed word) $4e }, via: { x: (signed word) $45, y: (signed word) $4e } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $28, y: (signed word) $58 }, via: { x: (signed word) $30, y: (signed word) $4e } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $1d, y: (signed word) $79 }, via: { x: (signed word) $1d, y: (signed word) $64 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $28, y: (signed word) $9e }, via: { x: (signed word) $1d, y: (signed word) $8e } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $44, y: (signed word) $ae }, via: { x: (signed word) $32, y: (signed word) $ae } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $5b, y: (signed word) $a6 }, via: { x: (signed word) $50, y: (signed word) $ae } }, { type: (const byte) SPLINE_TO, to: { x: (signed word) $68, y: (signed word) $90 }, via: { x: (signed word) $62, y: (signed word) $a0 } }, { type: (const byte) LINE_TO, to: { x: (signed word) $6c, y: (signed word) $92 }, via: { x: (signed word) 0, y: (signed word) 0 } } }
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::angle
(byte) main::angle#1 angle zp[1]:2 22.0
(byte) main::angle#2 angle zp[1]:2 3.3000000000000003
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) BITMAP_SCREEN&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) BITMAP_GRAPHICS/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::vicSelectGfxBank1
(label) main::vicSelectGfxBank1_@1
(byte*) main::vicSelectGfxBank1_gfx
(label) main::vicSelectGfxBank1_toDd001
(byte*) main::vicSelectGfxBank1_toDd001_gfx
(byte) main::vicSelectGfxBank1_toDd001_return
(const byte) main::vicSelectGfxBank1_toDd001_return#0 vicSelectGfxBank1_toDd001_return = (byte) 3^>(word)(const nomodify byte*) BITMAP_SCREEN/(byte) $40
(byte) main::w
(byte) main::w#1 reg byte x 151.5
(byte) main::w#4 reg byte x 734.6666666666666
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 12500.125
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:12 200002.0
(byte*) memset::dst#2 dst zp[2]:12 133668.3333333333
(byte*) memset::dst#4 dst zp[2]:12 2002.0
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:10 16833.666666666664
(word) memset::num
(word) memset::num#2 num zp[2]:10 1001.0
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:12
(signed dword()) mulf16s((signed word) mulf16s::a , (signed word) mulf16s::b)
(word~) mulf16s::$11 zp[2]:40 2000002.0
(word~) mulf16s::$12 zp[2]:42 2000002.0
(word~) mulf16s::$6 zp[2]:40 2000002.0
(word~) mulf16s::$9 zp[2]:42 2000002.0
(label) mulf16s::@1
(label) mulf16s::@2
(label) mulf16s::@3
(label) mulf16s::@4
(label) mulf16s::@5
(label) mulf16s::@return
(signed word) mulf16s::a
(signed word) mulf16s::a#0 a zp[2]:16 100001.0
(signed word) mulf16s::a#1 a zp[2]:16 100001.0
(signed word) mulf16s::a#2 a zp[2]:16 100001.0
(signed word) mulf16s::a#3 a zp[2]:16 100001.0
(signed word) mulf16s::a#4 a zp[2]:16 107692.69230769231
(signed word) mulf16s::b
(signed word) mulf16s::b#0 b zp[2]:18 200002.0
(signed word) mulf16s::b#1 b zp[2]:18 200002.0
(signed word) mulf16s::b#2 b zp[2]:18 200002.0
(signed word) mulf16s::b#3 b zp[2]:18 200002.0
(signed word) mulf16s::b#4 b zp[2]:18 127273.18181818182
(dword) mulf16s::m
(dword) mulf16s::m#0 m zp[4]:20 1000001.0
(dword) mulf16s::m#1 m zp[4]:20 2000002.0
(dword) mulf16s::m#2 m zp[4]:20 2000002.0
(dword) mulf16s::m#4 m zp[4]:20 2000002.0
(dword) mulf16s::m#5 m zp[4]:20 1250001.25
(signed dword) mulf16s::return
(signed dword) mulf16s::return#0 return zp[4]:20 233334.1666666667
(signed dword) mulf16s::return#10 return zp[4]:20 200002.0
(signed dword) mulf16s::return#2 return zp[4]:20 200002.0
(signed dword) mulf16s::return#3 return zp[4]:20 200002.0
(signed dword) mulf16s::return#4 return zp[4]:20 200002.0
(dword()) mulf16u((word) mulf16u::a , (word) mulf16u::b)
(label) mulf16u::@return
(word) mulf16u::a
(word) mulf16u::a#0 a zp[2]:42 5500001.0
(word) mulf16u::b
(word) mulf16u::b#0 b zp[2]:38 5500001.0
(const nomodify word*) mulf16u::memA = (word*) 248
(const nomodify word*) mulf16u::memB = (word*) 250
(const nomodify dword*) mulf16u::memR = (dword*) 252
(dword) mulf16u::return
(dword) mulf16u::return#0 return zp[4]:20 3666667.333333333
(dword) mulf16u::return#2 return zp[4]:20 2000002.0
(void()) mulf_init()
(byte~) mulf_init::$1 reg byte a 202.0
(byte~) mulf_init::$4 reg byte a 202.0
(byte~) mulf_init::$5 reg byte a 202.0
(label) mulf_init::@1
(label) mulf_init::@2
(label) mulf_init::@3
(label) mulf_init::@4
(label) mulf_init::@5
(label) mulf_init::@6
(label) mulf_init::@7
(label) mulf_init::@8
(label) mulf_init::@9
(label) mulf_init::@return
(byte) mulf_init::c
(byte) mulf_init::c#1 c zp[1]:3 23.307692307692307
(byte) mulf_init::c#2 c zp[1]:3 101.0
(byte) mulf_init::dir
(byte) mulf_init::dir#2 dir zp[1]:24 37.875
(byte) mulf_init::dir#4 dir zp[1]:24 101.0
(word) mulf_init::sqr
(word) mulf_init::sqr#1 sqr zp[2]:12 101.0
(word) mulf_init::sqr#2 sqr zp[2]:12 202.0
(word) mulf_init::sqr#3 sqr zp[2]:12 84.16666666666666
(word) mulf_init::sqr#4 sqr zp[2]:12 50.5
(byte*) mulf_init::sqr1_hi
(byte*) mulf_init::sqr1_hi#1 sqr1_hi zp[2]:4 67.33333333333333
(byte*) mulf_init::sqr1_hi#2 sqr1_hi zp[2]:4 25.25
(byte*) mulf_init::sqr1_lo
(byte*) mulf_init::sqr1_lo#1 sqr1_lo zp[2]:8 202.0
(byte*) mulf_init::sqr1_lo#2 sqr1_lo zp[2]:8 28.857142857142858
(byte*) mulf_init::sqr2_hi
(byte*) mulf_init::sqr2_hi#1 sqr2_hi zp[2]:10 33.666666666666664
(byte*) mulf_init::sqr2_hi#2 sqr2_hi zp[2]:10 75.75
(byte*) mulf_init::sqr2_lo
(byte*) mulf_init::sqr2_lo#1 sqr2_lo zp[2]:6 202.0
(byte*) mulf_init::sqr2_lo#2 sqr2_lo zp[2]:6 44.888888888888886
(byte) mulf_init::x_2
(byte) mulf_init::x_2#1 reg byte x 101.0
(byte) mulf_init::x_2#2 reg byte x 50.5
(byte) mulf_init::x_2#3 reg byte x 60.599999999999994
(byte) mulf_init::x_255
(byte) mulf_init::x_255#1 reg byte x 60.599999999999994
(byte) mulf_init::x_255#2 reg byte x 80.8
(const byte*) mulf_sqr1_hi[(number) $200]  = { fill( $200, 0) }
(const byte*) mulf_sqr1_lo[(number) $200]  = { fill( $200, 0) }
(const byte*) mulf_sqr2_hi[(number) $200]  = { fill( $200, 0) }
(const byte*) mulf_sqr2_lo[(number) $200]  = { fill( $200, 0) }
(struct SplineVector16()) rotate((signed word) rotate::vector_x , (signed word) rotate::vector_y , (byte) rotate::angle)
(signed dword~) rotate::$0 zp[4]:20 100001.0
(signed word~) rotate::$10 zp[2]:29 200002.0
(signed word~) rotate::$11 zp[2]:44 200002.0
(signed word~) rotate::$12 zp[2]:31 200002.0
(signed word~) rotate::$13 zp[2]:33 200002.0
(signed dword~) rotate::$2 zp[4]:20 100001.0
(signed dword~) rotate::$4 zp[4]:20 100001.0
(signed word~) rotate::$5 zp[2]:31 200002.0
(signed dword~) rotate::$6 zp[4]:20 100001.0
(signed word~) rotate::$7 zp[2]:33 200002.0
(byte~) rotate::$8 reg byte a 50000.5
(byte~) rotate::$9 reg byte x 50000.5
(label) rotate::@1
(label) rotate::@2
(label) rotate::@3
(label) rotate::@4
(label) rotate::@return
(byte) rotate::angle
(byte) rotate::angle#0 reg byte y 20002.0
(byte) rotate::angle#1 reg byte y 20002.0
(byte) rotate::angle#2 reg byte y 1250.125
(signed word) rotate::cos_a
(signed word) rotate::cos_a#0 cos_a zp[2]:16 37500.375
(struct SplineVector16) rotate::return
(signed word) rotate::return_x
(signed word) rotate::return_x#0 return_x zp[2]:12 10001.0
(signed word) rotate::return_x#1 return_x zp[2]:12 10001.0
(signed word) rotate::return_x#2 return_x zp[2]:12 24000.600000000002
(signed word) rotate::return_y
(signed word) rotate::return_y#0 return_y zp[2]:14 10001.0
(signed word) rotate::return_y#1 return_y zp[2]:14 10001.0
(signed word) rotate::return_y#2 return_y zp[2]:14 20000.5
(signed word) rotate::rotated_x
(signed word) rotate::rotated_y
(signed word) rotate::sin_a
(signed word) rotate::sin_a#0 sin_a zp[2]:16 33333.66666666667
(struct SplineVector16) rotate::vector
(signed word) rotate::vector_x
(signed word) rotate::vector_x#0 vector_x zp[2]:8 6667.333333333333
(signed word) rotate::vector_x#1 vector_x zp[2]:8 6667.333333333333
(signed word) rotate::vector_x#2 vector_x zp[2]:8 8461.692307692309
(signed word) rotate::vector_y
(signed word) rotate::vector_y#0 vector_y zp[2]:10 10001.0
(signed word) rotate::vector_y#1 vector_y zp[2]:10 10001.0
(signed word) rotate::vector_y#2 vector_y zp[2]:10 12222.444444444445
(signed word) rotate::xr
(signed word) rotate::xr#0 xr zp[2]:29 12500.125
(signed word) rotate::xr#1 xr zp[2]:29 22222.444444444445
(signed word) rotate::yr
(signed word) rotate::yr#0 yr zp[2]:44 11764.823529411764
(signed word) rotate::yr#1 yr zp[2]:44 100001.0
(word()) sgn_u16((word) sgn_u16::w)
(byte~) sgn_u16::$0 reg byte a 2.0000000002E10
(byte~) sgn_u16::$1 reg byte a 2.0000000002E10
(label) sgn_u16::@1
(label) sgn_u16::@return
(word) sgn_u16::return
(word) sgn_u16::return#0 return zp[2]:31 2.000000002E9
(word) sgn_u16::return#1 return zp[2]:31 2.000000002E9
(word) sgn_u16::return#4 return zp[2]:31 5.000000005E8
(word) sgn_u16::w
(word) sgn_u16::w#0 w zp[2]:44 2.000000002E9
(word) sgn_u16::w#1 w zp[2]:44 2.000000002E9
(word) sgn_u16::w#2 w zp[2]:44 1.2000000003E10
(void()) show_letter((byte) show_letter::angle)
(byte~) show_letter::$17 zp[1]:24 2069.1724137931037
(byte~) show_letter::$21 reg byte a 20002.0
(label) show_letter::@1
(label) show_letter::@2
(label) show_letter::@3
(label) show_letter::@4
(label) show_letter::@5
(label) show_letter::@6
(label) show_letter::@7
(label) show_letter::@8
(label) show_letter::@9
(label) show_letter::@return
(byte) show_letter::angle
(byte) show_letter::angle#0 angle zp[1]:2 370.6111111111111
(signed word) show_letter::current_x
(signed word) show_letter::current_x#10 current_x_1 zp[2]:25 857.2285714285714
(signed word) show_letter::current_x#11 current_x zp[2]:4 10001.0
(signed word) show_letter::current_x#4 current_x zp[2]:4 588.2941176470588
(signed word) show_letter::current_y
(signed word) show_letter::current_y#10 current_y_1 zp[2]:27 857.2285714285714
(signed word) show_letter::current_y#11 current_y zp[2]:6 20002.0
(signed word) show_letter::current_y#4 current_y zp[2]:6 555.6111111111111
(byte) show_letter::i
(byte) show_letter::i#1 i zp[1]:3 7500.75
(byte) show_letter::i#10 i zp[1]:3 833.4166666666666
(struct SplineVector16) show_letter::segment_to
(signed word) show_letter::segment_to_x
(signed word) show_letter::segment_to_y
(byte) show_letter::segment_type
(byte) show_letter::segment_type#0 reg byte a 15001.5
(struct SplineVector16) show_letter::segment_via
(signed word) show_letter::segment_via_x
(signed word) show_letter::segment_via_x#0 segment_via_x zp[2]:12 2857.4285714285716
(signed word) show_letter::segment_via_y
(signed word) show_letter::segment_via_y#0 segment_via_y zp[2]:14 2857.4285714285716
(signed word) show_letter::to_x
(signed word) show_letter::to_x#0 to_x zp[2]:8 10001.0
(signed word) show_letter::to_x#1 to_x zp[2]:8 10001.0
(signed word) show_letter::to_x#2 to_x_1 zp[2]:12 10001.0
(signed word) show_letter::to_y
(signed word) show_letter::to_y#0 to_y zp[2]:10 10001.0
(signed word) show_letter::to_y#1 to_y zp[2]:10 10001.0
(signed word) show_letter::to_y#2 to_y_1 zp[2]:14 10001.0
(signed word) show_letter::via_x
(signed word) show_letter::via_x#0 via_x zp[2]:8 10001.0
(signed word) show_letter::via_x#1 via_x zp[2]:8 10001.0
(signed word) show_letter::via_x#2 via_x_1 zp[2]:12 10001.0
(signed word) show_letter::via_y
(signed word) show_letter::via_y#0 via_y zp[2]:10 10001.0
(signed word) show_letter::via_y#1 via_y zp[2]:10 10001.0
(signed word) show_letter::via_y#2 via_y_1 zp[2]:14 10001.0
(void()) spline_8segB((signed word) spline_8segB::p0_x , (signed word) spline_8segB::p0_y , (signed word) spline_8segB::p1_x , (signed word) spline_8segB::p1_y , (signed word) spline_8segB::p2_x , (signed word) spline_8segB::p2_y)
(signed word~) spline_8segB::$0 zp[2]:35 200002.0
(signed word~) spline_8segB::$1 zp[2]:35 200002.0
(signed word~) spline_8segB::$10 zp[2]:12 200002.0
(signed word~) spline_8segB::$12 zp[2]:14 200002.0
(signed word~) spline_8segB::$18 zp[2]:4 200002.0
(signed word~) spline_8segB::$19 zp[2]:4 66667.33333333333
(signed word~) spline_8segB::$20 zp[2]:6 200002.0
(signed word~) spline_8segB::$21 zp[2]:6 100001.0
(signed word~) spline_8segB::$22 zp[2]:38 2.00000002E8
(signed word~) spline_8segB::$23 zp[2]:38 5.00000005E7
(signed word~) spline_8segB::$24 zp[2]:40 2.00000002E8
(signed word~) spline_8segB::$25 zp[2]:40 6.6666667333333336E7
(signed word~) spline_8segB::$3 zp[2]:42 200002.0
(byte~) spline_8segB::$31 reg byte x 1.500000015E8
(signed word~) spline_8segB::$4 zp[2]:42 200002.0
(signed word~) spline_8segB::$6 zp[2]:12 200002.0
(signed word~) spline_8segB::$8 zp[2]:14 200002.0
(label) spline_8segB::@1
(label) spline_8segB::@2
(label) spline_8segB::@return
(signed word) spline_8segB::a_x
(signed word) spline_8segB::a_x#0 a_x zp[2]:35 25000.25
(signed word) spline_8segB::a_y
(signed word) spline_8segB::a_y#0 a_y zp[2]:42 30000.300000000003
(signed word) spline_8segB::b_x
(signed word) spline_8segB::b_x#0 b_x zp[2]:12 66667.33333333333
(signed word) spline_8segB::b_y
(signed word) spline_8segB::b_y#0 b_y zp[2]:14 66667.33333333333
(signed word) spline_8segB::i_x
(signed word) spline_8segB::i_x#0 i_x zp[2]:12 28571.714285714286
(signed word) spline_8segB::i_x#1 i_x zp[2]:12 5.00000005E7
(signed word) spline_8segB::i_x#2 i_x zp[2]:12 3.00100004E7
(signed word) spline_8segB::i_y
(signed word) spline_8segB::i_y#0 i_y zp[2]:14 40000.4
(signed word) spline_8segB::i_y#1 i_y zp[2]:14 6.6666667333333336E7
(signed word) spline_8segB::i_y#2 i_y zp[2]:14 2.7281818545454547E7
(signed word) spline_8segB::j_x
(signed word) spline_8segB::j_x#0 j_x zp[2]:35 5561111.222222222
(signed word) spline_8segB::j_y
(signed word) spline_8segB::j_y#0 j_y zp[2]:42 5888235.411764706
(byte) spline_8segB::n
(byte) spline_8segB::n#1 reg byte y 1.500000015E8
(byte) spline_8segB::n#2 reg byte y 2.500000025E7
(struct SplineVector16) spline_8segB::p0
(signed word) spline_8segB::p0_x
(signed word) spline_8segB::p0_x#0 p0_x zp[2]:4 14091.090909090908
(signed word) spline_8segB::p0_y
(signed word) spline_8segB::p0_y#0 p0_y zp[2]:6 14091.090909090908
(struct SplineVector16) spline_8segB::p1
(signed word) spline_8segB::p1_x
(signed word) spline_8segB::p1_x#0 p1_x zp[2]:12 21000.300000000003
(signed word) spline_8segB::p1_y
(signed word) spline_8segB::p1_y#0 p1_y zp[2]:14 19091.181818181816
(struct SplineVector16) spline_8segB::p2
(signed word) spline_8segB::p2_x
(signed word) spline_8segB::p2_x#0 p2_x zp[2]:25 36667.33333333333
(signed word) spline_8segB::p2_y
(signed word) spline_8segB::p2_y#0 p2_y zp[2]:27 22000.4
(signed word) spline_8segB::p_x
(signed word) spline_8segB::p_x#0 p_x zp[2]:4 100001.0
(signed word) spline_8segB::p_x#1 p_x zp[2]:4 3.33500005E7
(signed word) spline_8segB::p_x#2 p_x zp[2]:4 3.75125005E7
(signed word) spline_8segB::p_y
(signed word) spline_8segB::p_y#0 p_y zp[2]:6 200002.0
(signed word) spline_8segB::p_y#1 p_y zp[2]:6 2.8585714714285716E7
(signed word) spline_8segB::p_y#2 p_y zp[2]:6 3.3344444888888888E7

zp[1]:2 [ main::angle#2 main::angle#1 show_letter::angle#0 ]
reg byte x [ main::w#4 main::w#1 ]
reg byte x [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
reg byte x [ mulf_init::x_255#2 mulf_init::x_255#1 ]
reg byte a [ bitmap_init::bits#3 bitmap_init::bits#4 bitmap_init::bits#1 ]
reg byte x [ bitmap_init::x#2 bitmap_init::x#1 ]
reg byte x [ bitmap_init::y#2 bitmap_init::y#1 ]
zp[1]:3 [ show_letter::i#10 show_letter::i#1 mulf_init::c#2 mulf_init::c#1 ]
zp[2]:4 [ show_letter::current_x#4 show_letter::current_x#11 bitmap_line::x#7 bitmap_line::x#6 bitmap_line::x#15 bitmap_line::x#13 bitmap_line::x#0 bitmap_line::x1#1 bitmap_line::x1#0 bitmap_line::x#12 bitmap_line::x#1 bitmap_plot::x#4 bitmap_plot::x#2 bitmap_plot::x#0 bitmap_plot::x#1 bitmap_plot::x#3 spline_8segB::p0_x#0 spline_8segB::p_x#2 spline_8segB::p_x#0 spline_8segB::p_x#1 spline_8segB::$18 bitmap_plot_spline_8seg::current_x#2 bitmap_plot_spline_8seg::current_x#0 bitmap_plot_spline_8seg::current_x#1 spline_8segB::$19 mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
zp[2]:6 [ show_letter::current_y#4 show_letter::current_y#11 bitmap_line::y#15 bitmap_line::y#7 bitmap_line::y#13 bitmap_line::y#4 bitmap_line::y#0 bitmap_line::y1#1 bitmap_line::y1#0 bitmap_line::y#1 bitmap_line::y#2 spline_8segB::p0_y#0 spline_8segB::p_y#2 spline_8segB::p_y#0 spline_8segB::p_y#1 spline_8segB::$20 bitmap_plot_spline_8seg::current_y#2 bitmap_plot_spline_8seg::current_y#0 bitmap_plot_spline_8seg::current_y#1 spline_8segB::$21 mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
reg byte x [ memset::c#4 ]
reg byte y [ rotate::angle#2 rotate::angle#0 rotate::angle#1 ]
zp[2]:8 [ rotate::vector_x#2 rotate::vector_x#0 rotate::vector_x#1 show_letter::to_x#1 show_letter::via_x#1 show_letter::to_x#0 show_letter::via_x#0 bitmap_init::yoffs#2 bitmap_init::yoffs#4 bitmap_init::yoffs#1 mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 ]
zp[2]:10 [ rotate::vector_y#2 rotate::vector_y#0 rotate::vector_y#1 show_letter::to_y#1 show_letter::via_y#1 show_letter::to_y#0 show_letter::via_y#0 memset::num#2 memset::end#0 mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
reg byte y [ spline_8segB::n#2 spline_8segB::n#1 ]
zp[2]:12 [ spline_8segB::i_x#2 spline_8segB::i_x#0 spline_8segB::i_x#1 spline_8segB::$10 spline_8segB::$6 spline_8segB::b_x#0 show_letter::segment_via_x#0 spline_8segB::p1_x#0 rotate::return_x#0 show_letter::to_x#2 rotate::return_x#2 rotate::return_x#1 show_letter::via_x#2 bitmap_line::x2#10 bitmap_line::x2#13 bitmap_line::x2#0 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
zp[2]:14 [ spline_8segB::i_y#2 spline_8segB::i_y#0 spline_8segB::i_y#1 spline_8segB::$12 spline_8segB::$8 spline_8segB::b_y#0 show_letter::segment_via_y#0 spline_8segB::p1_y#0 rotate::return_y#0 show_letter::to_y#2 rotate::return_y#2 rotate::return_y#1 show_letter::via_y#2 bitmap_line::y2#11 bitmap_line::y2#13 bitmap_line::y2#0 ]
zp[2]:16 [ mulf16s::a#4 mulf16s::a#0 mulf16s::a#1 mulf16s::a#2 mulf16s::a#3 rotate::cos_a#0 rotate::sin_a#0 bitmap_line::e#3 bitmap_line::e#0 bitmap_line::e#6 bitmap_line::e#1 bitmap_line::e#2 ]
zp[2]:18 [ mulf16s::b#4 mulf16s::b#0 mulf16s::b#1 mulf16s::b#2 mulf16s::b#3 bitmap_line::e1#3 bitmap_line::e1#6 bitmap_line::e1#0 bitmap_line::e1#2 bitmap_line::e1#1 ]
zp[4]:20 [ mulf16s::m#4 mulf16s::m#5 mulf16s::m#1 mulf16s::m#0 mulf16s::m#2 mulf16u::return#2 mulf16s::return#0 mulf16s::return#2 rotate::$0 mulf16s::return#3 rotate::$2 mulf16s::return#4 rotate::$4 mulf16s::return#10 rotate::$6 mulf16u::return#0 ]
reg byte a [ bitmap_plot::y#4 bitmap_plot::y#2 bitmap_plot::y#0 bitmap_plot::y#1 bitmap_plot::y#3 ]
reg byte a [ mulf_init::$1 ]
reg byte a [ mulf_init::$4 ]
reg byte a [ mulf_init::$5 ]
reg byte a [ bitmap_init::$4 ]
reg byte a [ bitmap_init::$5 ]
reg byte a [ bitmap_init::$6 ]
reg byte a [ show_letter::$21 ]
zp[1]:24 [ show_letter::$17 bitmap_init::$7 bitmap_plot_spline_8seg::n#2 bitmap_plot_spline_8seg::n#1 mulf_init::dir#2 mulf_init::dir#4 ]
zp[2]:25 [ show_letter::current_x#10 spline_8segB::p2_x#0 ]
zp[2]:27 [ show_letter::current_y#10 spline_8segB::p2_y#0 ]
reg byte a [ show_letter::segment_type#0 ]
zp[2]:29 [ rotate::$10 rotate::xr#0 rotate::xr#1 abs_u16::return#4 abs_u16::return#2 abs_u16::w#2 abs_u16::w#0 abs_u16::w#1 abs_u16::return#0 abs_u16::return#1 bitmap_line::dy#0 ]
zp[2]:31 [ rotate::$12 rotate::$5 sgn_u16::return#4 sgn_u16::return#0 sgn_u16::return#1 bitmap_line::sy#0 ]
reg byte a [ rotate::$8 ]
reg byte x [ rotate::$9 ]
zp[2]:33 [ bitmap_line::dx#0 rotate::$13 rotate::$7 ]
zp[2]:35 [ spline_8segB::$0 spline_8segB::$1 spline_8segB::a_x#0 spline_8segB::j_x#0 bitmap_line::sx#0 ]
reg byte x [ spline_8segB::$31 ]
zp[1]:37 [ bitmap_plot_spline_8seg::$4 ]
zp[2]:38 [ mulf16u::b#0 spline_8segB::$22 spline_8segB::$23 ]
zp[2]:40 [ mulf16s::$6 mulf16s::$11 spline_8segB::$24 spline_8segB::$25 ]
reg byte a [ abs_u16::$0 ]
reg byte a [ abs_u16::$1 ]
reg byte a [ sgn_u16::$0 ]
reg byte a [ sgn_u16::$1 ]
zp[2]:42 [ bitmap_plot::plotter#0 bitmap_plot::plotter#1 mulf16s::$9 mulf16s::$12 mulf16u::a#0 spline_8segB::$3 spline_8segB::$4 spline_8segB::a_y#0 spline_8segB::j_y#0 ]
zp[2]:44 [ bitmap_plot::$0 rotate::$11 rotate::yr#0 rotate::yr#1 sgn_u16::w#2 sgn_u16::w#0 sgn_u16::w#1 ]
reg byte x [ bitmap_plot::$1 ]
