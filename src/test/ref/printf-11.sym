(label) @1
(label) @begin
(label) @end
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@return
(const word) main::pct = (word) $156
(const byte*) main::str[(byte) $e]  = (byte*) "Commodore is "
(const byte*) main::str1[(byte) 6]  = (byte*) " cool"
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(const to_nomodify byte*) printf_hextab[]  = (byte*) "0123456789abcdef"z
(void()) printf_str((byte*) printf_str::str)
(label) printf_str::@1
(label) printf_str::@2
(label) printf_str::@return
(byte*) printf_str::str
(byte*) printf_str::str#0 str zp[2]:2 2002.0
(byte*) printf_str::str#3 str zp[2]:2 1026.25
(byte*) printf_str::str#5 str zp[2]:2 101.0
(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
(label) printf_uint::@return
(struct printf_format_number) printf_uint::format
(byte) printf_uint::format_justify_left
(byte) printf_uint::format_min_length
(byte) printf_uint::format_radix
(byte) printf_uint::format_sign_always
(byte) printf_uint::format_upper_case
(byte) printf_uint::format_zero_padding
(word) printf_uint::uvalue
(byte*) screen
(byte*) screen#1 screen zp[2]:4 1001.0
(byte*) screen#13 screen zp[2]:4 472.28571428571433
(byte*) screen#16 screen zp[2]:4 28.0
(byte*) screen#25 screen zp[2]:4 112.0
(byte*) screen#3 screen zp[2]:4 151.5
(byte*) screen#4 screen zp[2]:4 151.5
(byte*) screen#5 screen zp[2]:4 151.5

zp[2]:2 [ printf_str::str#3 printf_str::str#5 printf_str::str#0 ]
zp[2]:4 [ screen#13 screen#25 screen#16 screen#1 screen#3 screen#5 screen#4 ]
