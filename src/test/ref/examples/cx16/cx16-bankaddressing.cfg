
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_screen_width = 0
  [2] conio_screen_height = 0
  [3] conio_screen_layer = 1
  [4] conio_width = 0
  [5] conio_height = 0
  [6] conio_rowshift = 0
  [7] conio_rowskip = 0
  [8] call conio_x16_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [9] phi()
  [10] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [11] return 
  to:@return

void conio_x16_init()
conio_x16_init: scope:[conio_x16_init]  from __start::__init1
  [12] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE
  [13] call vera_layer_mode_text
  to:conio_x16_init::@3
conio_x16_init::@3: scope:[conio_x16_init]  from conio_x16_init
  [14] phi()
  [15] call screensize
  to:conio_x16_init::@4
conio_x16_init::@4: scope:[conio_x16_init]  from conio_x16_init::@3
  [16] phi()
  [17] call screenlayer
  to:conio_x16_init::@5
conio_x16_init::@5: scope:[conio_x16_init]  from conio_x16_init::@4
  [18] phi()
  [19] call vera_layer_set_textcolor
  to:conio_x16_init::@6
conio_x16_init::@6: scope:[conio_x16_init]  from conio_x16_init::@5
  [20] phi()
  [21] call vera_layer_set_backcolor
  to:conio_x16_init::@7
conio_x16_init::@7: scope:[conio_x16_init]  from conio_x16_init::@6
  [22] phi()
  [23] call vera_layer_set_mapbase
  to:conio_x16_init::@8
conio_x16_init::@8: scope:[conio_x16_init]  from conio_x16_init::@7
  [24] phi()
  [25] call vera_layer_set_mapbase
  to:conio_x16_init::@9
conio_x16_init::@9: scope:[conio_x16_init]  from conio_x16_init::@8
  [26] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1
  to:conio_x16_init::@2
conio_x16_init::@2: scope:[conio_x16_init]  from conio_x16_init::@9
  [27] conio_x16_init::line#1 = conio_screen_height - 1
  to:conio_x16_init::@1
conio_x16_init::@1: scope:[conio_x16_init]  from conio_x16_init::@2 conio_x16_init::@9
  [28] conio_x16_init::line#3 = phi( conio_x16_init::@2/conio_x16_init::line#1, conio_x16_init::@9/conio_x16_init::line#0 )
  [29] gotoxy::y#1 = conio_x16_init::line#3
  [30] call gotoxy
  to:conio_x16_init::@return
conio_x16_init::@return: scope:[conio_x16_init]  from conio_x16_init::@1
  [31] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from printf_number_buffer::@3 printf_str::@2
  [32] CONIO_SCREEN_BANK#13 = phi( )
  [32] CONIO_SCREEN_TEXT#15 = phi( )
  [33] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [34] vera_layer_get_color::layer#0 = conio_screen_layer
  [35] call vera_layer_get_color
  [36] vera_layer_get_color::return#3 = vera_layer_get_color::return#2
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc
  [37] cputc::color#0 = vera_layer_get_color::return#3
  [38] cputc::$15 = conio_screen_layer << 1
  [39] cputc::conio_addr#0 = CONIO_SCREEN_TEXT#15 + conio_line_text[cputc::$15]
  [40] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
  [41] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2
  [42] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc::@7
  [43] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [44] cputc::$4 = byte0  cputc::conio_addr#1
  [45] *VERA_ADDRX_L = cputc::$4
  [46] cputc::$5 = byte1  cputc::conio_addr#1
  [47] *VERA_ADDRX_M = cputc::$5
  [48] cputc::$6 = CONIO_SCREEN_BANK#13 | VERA_INC_1
  [49] *VERA_ADDRX_H = cputc::$6
  [50] *VERA_DATA0 = cputc::c#0
  [51] *VERA_DATA0 = cputc::color#0
  [52] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer]
  [53] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer]
  [54] if(0!=cputc::scroll_enable#0) goto cputc::@5
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [55] cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer]
  [56] if(cputc::$16!=conio_width) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  [57] phi()
  [58] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@3 cputc::@4 cputc::@5 cputc::@6
  [59] return 
  to:@return
cputc::@5: scope:[cputc]  from cputc::@2
  [60] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return
  to:cputc::@6
cputc::@6: scope:[cputc]  from cputc::@5
  [61] phi()
  [62] call cputln
  to:cputc::@return
cputc::@1: scope:[cputc]  from cputc::@7
  [63] phi()
  [64] call cputln
  to:cputc::@return

void main()
main: scope:[main]  from __start::@1
  [65] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@17
  [66] main::num#10 = phi( main/(unsigned long)$40*$40*2, main::@17/main::num#1 )
  [66] main::src1#10 = phi( main/0, main::@17/main::src1#1 )
  [67] if(main::src1#10<$3f000) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [68] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [69] main::$1 = main::src1#10 + main::num#10
  [70] main::calcend#0 = main::$1 + -1
  [71] main::$3 = byte2  main::src1#10
  [72] main::$4 = main::$3 << 3
  [73] main::$5 = byte1  main::src1#10
  [74] main::$6 = main::$5 >> 5
  [75] main::bankbeg#0 = main::$4 | main::$6
  [76] main::$8 = byte2  main::calcend#0
  [77] main::$9 = main::$8 << 3
  [78] main::$10 = byte1  main::calcend#0
  [79] main::$11 = main::$10 >> 5
  [80] main::bankend#0 = main::$9 | main::$11
  [81] main::$13 = word0  main::src1#10
  [82] main::beg#0 = main::$13 & $1fff
  [83] main::$15 = word0  main::calcend#0
  [84] main::end#0 = main::$15 & $1fff
  [85] main::beg#1 = main::beg#0 + main::borderbeg
  [86] main::end#1 = main::end#0 + main::borderbeg
  [87] call printf_str
  to:main::@3
main::@3: scope:[main]  from main::@2
  [88] printf_ulong::uvalue#0 = main::src1#10
  [89] call printf_ulong
  to:main::@4
main::@4: scope:[main]  from main::@3
  [90] phi()
  [91] call printf_str
  to:main::@5
main::@5: scope:[main]  from main::@4
  [92] printf_ulong::uvalue#1 = main::num#10
  [93] call printf_ulong
  to:main::@6
main::@6: scope:[main]  from main::@5
  [94] phi()
  [95] call printf_str
  to:main::@7
main::@7: scope:[main]  from main::@6
  [96] printf_ulong::uvalue#2 = main::calcend#0
  [97] call printf_ulong
  to:main::@8
main::@8: scope:[main]  from main::@7
  [98] phi()
  [99] call printf_str
  to:main::@9
main::@9: scope:[main]  from main::@8
  [100] printf_uchar::uvalue#0 = main::bankbeg#0
  [101] call printf_uchar
  to:main::@10
main::@10: scope:[main]  from main::@9
  [102] phi()
  [103] call printf_str
  to:main::@11
main::@11: scope:[main]  from main::@10
  [104] printf_uchar::uvalue#1 = main::bankend#0
  [105] call printf_uchar
  to:main::@12
main::@12: scope:[main]  from main::@11
  [106] phi()
  [107] call printf_str
  to:main::@13
main::@13: scope:[main]  from main::@12
  [108] printf_uint::uvalue#0 = main::beg#1
  [109] call printf_uint
  to:main::@14
main::@14: scope:[main]  from main::@13
  [110] phi()
  [111] call printf_str
  to:main::@15
main::@15: scope:[main]  from main::@14
  [112] printf_uint::uvalue#1 = main::end#1
  [113] call printf_uint
  to:main::@16
main::@16: scope:[main]  from main::@15
  [114] phi()
  [115] call printf_str
  to:main::@17
main::@17: scope:[main]  from main::@16
  [116] main::num#1 = main::num#10 + main::inc
  [117] main::src1#1 = main::src1#10 + main::num#1
  to:main::@1

void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
vera_layer_mode_text: scope:[vera_layer_mode_text]  from conio_x16_init
  [118] phi()
  [119] call vera_layer_mode_tile
  to:vera_layer_mode_text::@1
vera_layer_mode_text::@1: scope:[vera_layer_mode_text]  from vera_layer_mode_text
  [120] phi()
  [121] call vera_layer_set_text_color_mode
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@return: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1
  [122] return 
  to:@return

void screensize(char *x , char *y)
screensize: scope:[screensize]  from conio_x16_init::@3
  [123] screensize::hscale#0 = *VERA_DC_HSCALE >> 7
  [124] screensize::$1 = $28 << screensize::hscale#0
  [125] *screensize::x#0 = screensize::$1
  [126] screensize::vscale#0 = *VERA_DC_VSCALE >> 7
  [127] screensize::$3 = $1e << screensize::vscale#0
  [128] *screensize::y#0 = screensize::$3
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  [129] return 
  to:@return

void screenlayer(char layer)
screenlayer: scope:[screenlayer]  from conio_x16_init::@4
  [130] conio_screen_layer = screenlayer::layer#0
  to:screenlayer::@3
screenlayer::@3: scope:[screenlayer]  from screenlayer
  [131] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_width1
screenlayer::vera_layer_get_width1: scope:[screenlayer]  from screenlayer::@3
  [132] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1
  [133] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2]
  [134] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK
  [135] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
  [136] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1
  [137] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3]
  to:screenlayer::vera_layer_get_width1_@return
screenlayer::vera_layer_get_width1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_width1
  [138] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
  to:screenlayer::@1
screenlayer::@1: scope:[screenlayer]  from screenlayer::vera_layer_get_width1_@return
  [139] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
  [140] conio_width = screenlayer::$2
  [141] vera_layer_get_rowshift::layer#0 = conio_screen_layer
  [142] call vera_layer_get_rowshift
  [143] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
  to:screenlayer::@4
screenlayer::@4: scope:[screenlayer]  from screenlayer::@1
  [144] screenlayer::$3 = vera_layer_get_rowshift::return#2
  [145] conio_rowshift = screenlayer::$3
  [146] vera_layer_get_rowskip::layer#0 = conio_screen_layer
  [147] call vera_layer_get_rowskip
  [148] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
  to:screenlayer::@5
screenlayer::@5: scope:[screenlayer]  from screenlayer::@4
  [149] screenlayer::$4 = vera_layer_get_rowskip::return#2
  [150] conio_rowskip = screenlayer::$4
  [151] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_height1
screenlayer::vera_layer_get_height1: scope:[screenlayer]  from screenlayer::@5
  [152] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1
  [153] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2]
  [154] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK
  [155] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
  [156] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1
  [157] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3]
  to:screenlayer::vera_layer_get_height1_@return
screenlayer::vera_layer_get_height1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_height1
  [158] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
  to:screenlayer::@2
screenlayer::@2: scope:[screenlayer]  from screenlayer::vera_layer_get_height1_@return
  [159] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
  [160] conio_height = screenlayer::$5
  to:screenlayer::@return
screenlayer::@return: scope:[screenlayer]  from screenlayer::@2
  [161] return 
  to:@return

char vera_layer_set_textcolor(char layer , char color)
vera_layer_set_textcolor: scope:[vera_layer_set_textcolor]  from conio_x16_init::@5
  [162] *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0) = WHITE
  to:vera_layer_set_textcolor::@return
vera_layer_set_textcolor::@return: scope:[vera_layer_set_textcolor]  from vera_layer_set_textcolor
  [163] return 
  to:@return

char vera_layer_set_backcolor(char layer , char color)
vera_layer_set_backcolor: scope:[vera_layer_set_backcolor]  from conio_x16_init::@6
  [164] *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0) = BLUE
  to:vera_layer_set_backcolor::@return
vera_layer_set_backcolor::@return: scope:[vera_layer_set_backcolor]  from vera_layer_set_backcolor
  [165] return 
  to:@return

void vera_layer_set_mapbase(char layer , char mapbase)
vera_layer_set_mapbase: scope:[vera_layer_set_mapbase]  from conio_x16_init::@7 conio_x16_init::@8 vera_layer_mode_tile::@4
  [166] vera_layer_set_mapbase::mapbase#3 = phi( conio_x16_init::@7/$20, conio_x16_init::@8/0, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapbase#0 )
  [166] vera_layer_set_mapbase::layer#3 = phi( conio_x16_init::@7/0, conio_x16_init::@8/1, vera_layer_mode_tile::@4/vera_layer_mode_text::layer#0 )
  [167] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1
  [168] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0]
  [169] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3
  to:vera_layer_set_mapbase::@return
vera_layer_set_mapbase::@return: scope:[vera_layer_set_mapbase]  from vera_layer_set_mapbase
  [170] return 
  to:@return

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_x16_init::@1 cscroll::@5
  [171] gotoxy::y#3 = phi( conio_x16_init::@1/gotoxy::y#1, cscroll::@5/gotoxy::y#2 )
  [172] if(gotoxy::y#3<=conio_screen_height) goto gotoxy::@4
  to:gotoxy::@1
gotoxy::@4: scope:[gotoxy]  from gotoxy
  [173] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@4
  [174] gotoxy::y#4 = phi( gotoxy::@4/gotoxy::y#3, gotoxy/0 )
  [175] if(0<conio_screen_width) goto gotoxy::@2
  to:gotoxy::@3
gotoxy::@3: scope:[gotoxy]  from gotoxy::@1
  [176] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@3
  [177] conio_cursor_x[conio_screen_layer] = 0
  [178] conio_cursor_y[conio_screen_layer] = gotoxy::y#4
  [179] gotoxy::$6 = (unsigned int)gotoxy::y#4
  [180] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift
  [181] gotoxy::$5 = conio_screen_layer << 1
  [182] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [183] return 
  to:@return

char vera_layer_get_color(char layer)
vera_layer_get_color: scope:[vera_layer_get_color]  from clearline cputc
  [184] vera_layer_get_color::layer#2 = phi( clearline/vera_layer_get_color::layer#1, cputc/vera_layer_get_color::layer#0 )
  [185] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1
  [186] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3]
  [187] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C
  [188] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1
  to:vera_layer_get_color::@2
vera_layer_get_color::@2: scope:[vera_layer_get_color]  from vera_layer_get_color
  [189] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4
  [190] vera_layer_get_color::return#1 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2]
  to:vera_layer_get_color::@return
vera_layer_get_color::@return: scope:[vera_layer_get_color]  from vera_layer_get_color::@1 vera_layer_get_color::@2
  [191] vera_layer_get_color::return#2 = phi( vera_layer_get_color::@1/vera_layer_get_color::return#0, vera_layer_get_color::@2/vera_layer_get_color::return#1 )
  [192] return 
  to:@return
vera_layer_get_color::@1: scope:[vera_layer_get_color]  from vera_layer_get_color
  [193] vera_layer_get_color::return#0 = vera_layer_textcolor[vera_layer_get_color::layer#2]
  to:vera_layer_get_color::@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@4 cputc::@6
  [194] cputln::$2 = conio_screen_layer << 1
  [195] cputln::temp#0 = conio_line_text[cputln::$2]
  [196] cputln::temp#1 = cputln::temp#0 + conio_rowskip
  [197] cputln::$3 = conio_screen_layer << 1
  [198] conio_line_text[cputln::$3] = cputln::temp#1
  [199] conio_cursor_x[conio_screen_layer] = 0
  [200] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer]
  [201] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [202] return 
  to:@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@10 main::@12 main::@14 main::@16 main::@2 main::@4 main::@6 main::@8 printf_number_buffer::@2
  [203] printf_str::s#11 = phi( main::@10/main::s4, main::@12/main::s5, main::@14/main::s6, main::@16/main::s7, main::@2/main::s, main::@4/main::s1, main::@6/main::s2, main::@8/main::s3, printf_number_buffer::@2/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [204] printf_str::s#10 = phi( printf_str/printf_str::s#11, printf_str::@2/printf_str::s#0 )
  [205] printf_str::c#1 = *printf_str::s#10
  [206] printf_str::s#0 = ++ printf_str::s#10
  [207] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [208] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [209] stackpush(char) = printf_str::c#1
  [210] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_str::@1

void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_ulong: scope:[printf_ulong]  from main::@3 main::@5 main::@7
  [212] printf_ulong::uvalue#3 = phi( main::@3/printf_ulong::uvalue#0, main::@5/printf_ulong::uvalue#1, main::@7/printf_ulong::uvalue#2 )
  to:printf_ulong::@1
printf_ulong::@1: scope:[printf_ulong]  from printf_ulong
  [213] *((char *)&printf_buffer) = 0
  [214] ultoa::value#1 = printf_ulong::uvalue#3
  [215] call ultoa
  to:printf_ulong::@2
printf_ulong::@2: scope:[printf_ulong]  from printf_ulong::@1
  [216] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer)
  [217] call printf_number_buffer
  to:printf_ulong::@return
printf_ulong::@return: scope:[printf_ulong]  from printf_ulong::@2
  [218] return 
  to:@return

void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uchar: scope:[printf_uchar]  from main::@11 main::@9
  [219] printf_uchar::uvalue#2 = phi( main::@11/printf_uchar::uvalue#1, main::@9/printf_uchar::uvalue#0 )
  to:printf_uchar::@1
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  [220] *((char *)&printf_buffer) = 0
  [221] uctoa::value#1 = printf_uchar::uvalue#2
  [222] call uctoa
  to:printf_uchar::@2
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar::@1
  [223] printf_number_buffer::buffer_sign#2 = *((char *)&printf_buffer)
  [224] call printf_number_buffer
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@2
  [225] return 
  to:@return

void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uint: scope:[printf_uint]  from main::@13 main::@15
  [226] printf_uint::uvalue#2 = phi( main::@13/printf_uint::uvalue#0, main::@15/printf_uint::uvalue#1 )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [227] *((char *)&printf_buffer) = 0
  [228] utoa::value#1 = printf_uint::uvalue#2
  [229] call utoa
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [230] printf_number_buffer::buffer_sign#1 = *((char *)&printf_buffer)
  [231] call printf_number_buffer
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [232] return 
  to:@return

void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
vera_layer_mode_tile: scope:[vera_layer_mode_tile]  from vera_layer_mode_text
  [233] phi()
  to:vera_layer_mode_tile::@1
vera_layer_mode_tile::@1: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  [234] *(vera_layer_rowshift+vera_layer_mode_text::layer#0) = 8
  [235] *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = $100
  to:vera_layer_mode_tile::@2
vera_layer_mode_tile::@2: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  [236] phi()
  [237] call vera_layer_set_config
  to:vera_layer_mode_tile::@4
vera_layer_mode_tile::@4: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  [238] *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = 0
  [239] *(vera_mapbase_bank+vera_layer_mode_text::layer#0) = 0
  [240] *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::mapbase_address#0
  [241] call vera_layer_set_mapbase
  to:vera_layer_mode_tile::@5
vera_layer_mode_tile::@5: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@4
  [242] *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = word0 vera_layer_mode_text::tilebase_address#0
  [243] *(vera_tilebase_bank+vera_layer_mode_text::layer#0) = 0
  [244] *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::tilebase_address#0
  to:vera_layer_mode_tile::@3
vera_layer_mode_tile::@3: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@5
  [245] phi()
  [246] call vera_layer_set_tilebase
  to:vera_layer_mode_tile::@return
vera_layer_mode_tile::@return: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3
  [247] return 
  to:@return

void vera_layer_set_text_color_mode(char layer , char color_mode)
vera_layer_set_text_color_mode: scope:[vera_layer_set_text_color_mode]  from vera_layer_mode_text::@1
  [248] vera_layer_set_text_color_mode::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
  [249] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C
  [250] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0
  to:vera_layer_set_text_color_mode::@return
vera_layer_set_text_color_mode::@return: scope:[vera_layer_set_text_color_mode]  from vera_layer_set_text_color_mode
  [251] return 
  to:@return

char vera_layer_get_rowshift(char layer)
vera_layer_get_rowshift: scope:[vera_layer_get_rowshift]  from screenlayer::@1
  [252] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0]
  to:vera_layer_get_rowshift::@return
vera_layer_get_rowshift::@return: scope:[vera_layer_get_rowshift]  from vera_layer_get_rowshift
  [253] return 
  to:@return

unsigned int vera_layer_get_rowskip(char layer)
vera_layer_get_rowskip: scope:[vera_layer_get_rowskip]  from screenlayer::@4
  [254] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1
  [255] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0]
  to:vera_layer_get_rowskip::@return
vera_layer_get_rowskip::@return: scope:[vera_layer_get_rowskip]  from vera_layer_get_rowskip
  [256] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [257] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [258] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [259] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [260] phi()
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@3 cscroll::@5
  [261] return 
  to:@return
cscroll::@4: scope:[cscroll]  from cscroll::@1
  [262] phi()
  [263] call insertup
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [264] gotoxy::y#2 = conio_screen_height - 1
  [265] call gotoxy
  to:cscroll::@return

void ultoa(unsigned long value , char *buffer , char radix)
ultoa: scope:[ultoa]  from printf_ulong::@1
  [266] phi()
  to:ultoa::@1
ultoa::@1: scope:[ultoa]  from ultoa ultoa::@4
  [267] ultoa::buffer#11 = phi( ultoa::@4/ultoa::buffer#14, ultoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [267] ultoa::started#2 = phi( ultoa::@4/ultoa::started#4, ultoa/0 )
  [267] ultoa::value#2 = phi( ultoa::@4/ultoa::value#6, ultoa/ultoa::value#1 )
  [267] ultoa::digit#2 = phi( ultoa::@4/ultoa::digit#1, ultoa/0 )
  [268] if(ultoa::digit#2<8-1) goto ultoa::@2
  to:ultoa::@3
ultoa::@3: scope:[ultoa]  from ultoa::@1
  [269] ultoa::$11 = (char)ultoa::value#2
  [270] *ultoa::buffer#11 = DIGITS[ultoa::$11]
  [271] ultoa::buffer#3 = ++ ultoa::buffer#11
  [272] *ultoa::buffer#3 = 0
  to:ultoa::@return
ultoa::@return: scope:[ultoa]  from ultoa::@3
  [273] return 
  to:@return
ultoa::@2: scope:[ultoa]  from ultoa::@1
  [274] ultoa::$10 = ultoa::digit#2 << 2
  [275] ultoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_LONG[ultoa::$10]
  [276] if(0!=ultoa::started#2) goto ultoa::@5
  to:ultoa::@7
ultoa::@7: scope:[ultoa]  from ultoa::@2
  [277] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5
  to:ultoa::@4
ultoa::@4: scope:[ultoa]  from ultoa::@6 ultoa::@7
  [278] ultoa::buffer#14 = phi( ultoa::@7/ultoa::buffer#11, ultoa::@6/ultoa::buffer#4 )
  [278] ultoa::started#4 = phi( ultoa::@7/ultoa::started#2, ultoa::@6/1 )
  [278] ultoa::value#6 = phi( ultoa::@7/ultoa::value#2, ultoa::@6/ultoa::value#0 )
  [279] ultoa::digit#1 = ++ ultoa::digit#2
  to:ultoa::@1
ultoa::@5: scope:[ultoa]  from ultoa::@2 ultoa::@7
  [280] ultoa_append::buffer#0 = ultoa::buffer#11
  [281] ultoa_append::value#0 = ultoa::value#2
  [282] ultoa_append::sub#0 = ultoa::digit_value#0
  [283] call ultoa_append
  [284] ultoa_append::return#0 = ultoa_append::value#2
  to:ultoa::@6
ultoa::@6: scope:[ultoa]  from ultoa::@5
  [285] ultoa::value#0 = ultoa_append::return#0
  [286] ultoa::buffer#4 = ++ ultoa::buffer#11
  to:ultoa::@4

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uchar::@2 printf_uint::@2 printf_ulong::@2
  [287] printf_number_buffer::buffer_sign#10 = phi( printf_uchar::@2/printf_number_buffer::buffer_sign#2, printf_uint::@2/printf_number_buffer::buffer_sign#1, printf_ulong::@2/printf_number_buffer::buffer_sign#0 )
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer
  [288] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [289] stackpush(char) = printf_number_buffer::buffer_sign#10
  [290] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@3
  [292] phi()
  [293] call printf_str
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [294] return 
  to:@return

void uctoa(char value , char *buffer , char radix)
uctoa: scope:[uctoa]  from printf_uchar::@1
  [295] phi()
  to:uctoa::@1
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@4
  [296] uctoa::buffer#11 = phi( uctoa::@4/uctoa::buffer#14, uctoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [296] uctoa::started#2 = phi( uctoa::@4/uctoa::started#4, uctoa/0 )
  [296] uctoa::value#2 = phi( uctoa::@4/uctoa::value#6, uctoa/uctoa::value#1 )
  [296] uctoa::digit#2 = phi( uctoa::@4/uctoa::digit#1, uctoa/0 )
  [297] if(uctoa::digit#2<2-1) goto uctoa::@2
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@1
  [298] *uctoa::buffer#11 = DIGITS[uctoa::value#2]
  [299] uctoa::buffer#3 = ++ uctoa::buffer#11
  [300] *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@3
  [301] return 
  to:@return
uctoa::@2: scope:[uctoa]  from uctoa::@1
  [302] uctoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_CHAR[uctoa::digit#2]
  [303] if(0!=uctoa::started#2) goto uctoa::@5
  to:uctoa::@7
uctoa::@7: scope:[uctoa]  from uctoa::@2
  [304] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@6 uctoa::@7
  [305] uctoa::buffer#14 = phi( uctoa::@7/uctoa::buffer#11, uctoa::@6/uctoa::buffer#4 )
  [305] uctoa::started#4 = phi( uctoa::@7/uctoa::started#2, uctoa::@6/1 )
  [305] uctoa::value#6 = phi( uctoa::@7/uctoa::value#2, uctoa::@6/uctoa::value#0 )
  [306] uctoa::digit#1 = ++ uctoa::digit#2
  to:uctoa::@1
uctoa::@5: scope:[uctoa]  from uctoa::@2 uctoa::@7
  [307] uctoa_append::buffer#0 = uctoa::buffer#11
  [308] uctoa_append::value#0 = uctoa::value#2
  [309] uctoa_append::sub#0 = uctoa::digit_value#0
  [310] call uctoa_append
  [311] uctoa_append::return#0 = uctoa_append::value#2
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@5
  [312] uctoa::value#0 = uctoa_append::return#0
  [313] uctoa::buffer#4 = ++ uctoa::buffer#11
  to:uctoa::@4

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_uint::@1
  [314] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [315] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [315] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [315] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/utoa::value#1 )
  [315] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [316] if(utoa::digit#2<4-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [317] utoa::$11 = (char)utoa::value#2
  [318] *utoa::buffer#11 = DIGITS[utoa::$11]
  [319] utoa::buffer#3 = ++ utoa::buffer#11
  [320] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [321] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [322] utoa::$10 = utoa::digit#2 << 1
  [323] utoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES[utoa::$10]
  [324] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [325] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [326] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [326] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [326] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [327] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [328] utoa_append::buffer#0 = utoa::buffer#11
  [329] utoa_append::value#0 = utoa::value#2
  [330] utoa_append::sub#0 = utoa::digit_value#0
  [331] call utoa_append
  [332] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [333] utoa::value#0 = utoa_append::return#0
  [334] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void vera_layer_set_config(char layer , char config)
vera_layer_set_config: scope:[vera_layer_set_config]  from vera_layer_mode_tile::@2
  [335] vera_layer_set_config::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
  [336] *vera_layer_set_config::addr#0 = vera_layer_mode_tile::config#10
  to:vera_layer_set_config::@return
vera_layer_set_config::@return: scope:[vera_layer_set_config]  from vera_layer_set_config
  [337] return 
  to:@return

void vera_layer_set_tilebase(char layer , char tilebase)
vera_layer_set_tilebase: scope:[vera_layer_set_tilebase]  from vera_layer_mode_tile::@3
  [338] vera_layer_set_tilebase::addr#0 = *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
  [339] *vera_layer_set_tilebase::addr#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK
  to:vera_layer_set_tilebase::@return
vera_layer_set_tilebase::@return: scope:[vera_layer_set_tilebase]  from vera_layer_set_tilebase
  [340] return 
  to:@return

void insertup()
insertup: scope:[insertup]  from cscroll::@4
  [341] insertup::cy#0 = conio_cursor_y[conio_screen_layer]
  [342] insertup::width#0 = conio_screen_width << 1
  to:insertup::@1
insertup::@1: scope:[insertup]  from insertup insertup::@4
  [343] insertup::i#2 = phi( insertup/1, insertup::@4/insertup::i#1 )
  [344] if(insertup::i#2<=insertup::cy#0) goto insertup::@2
  to:insertup::@3
insertup::@3: scope:[insertup]  from insertup::@1
  [345] phi()
  [346] call clearline
  to:insertup::@return
insertup::@return: scope:[insertup]  from insertup::@3
  [347] return 
  to:@return
insertup::@2: scope:[insertup]  from insertup::@1
  [348] insertup::$3 = insertup::i#2 - 1
  [349] insertup::line#0 = insertup::$3 << conio_rowshift
  [350] insertup::start#0 = CONIO_SCREEN_TEXT#15 + insertup::line#0
  [351] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip
  [352] memcpy_in_vram::dest#0 = (void *)insertup::start#0
  [353] memcpy_in_vram::num#0 = insertup::width#0
  [354] call memcpy_in_vram
  to:insertup::@4
insertup::@4: scope:[insertup]  from insertup::@2
  [355] insertup::i#1 = ++ insertup::i#2
  to:insertup::@1

unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
ultoa_append: scope:[ultoa_append]  from ultoa::@5
  [356] phi()
  to:ultoa_append::@1
ultoa_append::@1: scope:[ultoa_append]  from ultoa_append ultoa_append::@2
  [357] ultoa_append::digit#2 = phi( ultoa_append/0, ultoa_append::@2/ultoa_append::digit#1 )
  [357] ultoa_append::value#2 = phi( ultoa_append/ultoa_append::value#0, ultoa_append::@2/ultoa_append::value#1 )
  [358] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2
  to:ultoa_append::@3
ultoa_append::@3: scope:[ultoa_append]  from ultoa_append::@1
  [359] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2]
  to:ultoa_append::@return
ultoa_append::@return: scope:[ultoa_append]  from ultoa_append::@3
  [360] return 
  to:@return
ultoa_append::@2: scope:[ultoa_append]  from ultoa_append::@1
  [361] ultoa_append::digit#1 = ++ ultoa_append::digit#2
  [362] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0
  to:ultoa_append::@1

char uctoa_append(char *buffer , char value , char sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@5
  [363] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [364] uctoa_append::digit#2 = phi( uctoa_append/0, uctoa_append::@2/uctoa_append::digit#1 )
  [364] uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#0, uctoa_append::@2/uctoa_append::value#1 )
  [365] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [366] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2]
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [367] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [368] uctoa_append::digit#1 = ++ uctoa_append::digit#2
  [369] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0
  to:uctoa_append::@1

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [370] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [371] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [371] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [372] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [373] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [374] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [375] utoa_append::digit#1 = ++ utoa_append::digit#2
  [376] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

void clearline()
clearline: scope:[clearline]  from insertup::@3
  [377] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [378] clearline::$5 = conio_screen_layer << 1
  [379] clearline::addr#0 = CONIO_SCREEN_TEXT#15 + conio_line_text[clearline::$5]
  [380] clearline::$1 = byte0  clearline::addr#0
  [381] *VERA_ADDRX_L = clearline::$1
  [382] clearline::$2 = byte1  clearline::addr#0
  [383] *VERA_ADDRX_M = clearline::$2
  [384] *VERA_ADDRX_H = VERA_INC_1
  [385] vera_layer_get_color::layer#1 = conio_screen_layer
  [386] call vera_layer_get_color
  [387] vera_layer_get_color::return#4 = vera_layer_get_color::return#2
  to:clearline::@4
clearline::@4: scope:[clearline]  from clearline
  [388] clearline::color#0 = vera_layer_get_color::return#4
  to:clearline::@1
clearline::@1: scope:[clearline]  from clearline::@2 clearline::@4
  [389] clearline::c#2 = phi( clearline::@2/clearline::c#1, clearline::@4/0 )
  [390] if(clearline::c#2<conio_screen_width) goto clearline::@2
  to:clearline::@3
clearline::@3: scope:[clearline]  from clearline::@1
  [391] conio_cursor_x[conio_screen_layer] = 0
  to:clearline::@return
clearline::@return: scope:[clearline]  from clearline::@3
  [392] return 
  to:@return
clearline::@2: scope:[clearline]  from clearline::@1
  [393] *VERA_DATA0 = ' '
  [394] *VERA_DATA0 = clearline::color#0
  [395] clearline::c#1 = ++ clearline::c#2
  to:clearline::@1

void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
memcpy_in_vram: scope:[memcpy_in_vram]  from insertup::@2
  [396] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [397] memcpy_in_vram::$0 = byte0  (void *)memcpy_in_vram::src#0
  [398] *VERA_ADDRX_L = memcpy_in_vram::$0
  [399] memcpy_in_vram::$1 = byte1  (void *)memcpy_in_vram::src#0
  [400] *VERA_ADDRX_M = memcpy_in_vram::$1
  [401] *VERA_ADDRX_H = VERA_INC_1
  [402] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL
  [403] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#0
  [404] *VERA_ADDRX_L = memcpy_in_vram::$3
  [405] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#0
  [406] *VERA_ADDRX_M = memcpy_in_vram::$4
  [407] *VERA_ADDRX_H = VERA_INC_1
  to:memcpy_in_vram::@1
memcpy_in_vram::@1: scope:[memcpy_in_vram]  from memcpy_in_vram memcpy_in_vram::@2
  [408] memcpy_in_vram::i#2 = phi( memcpy_in_vram/0, memcpy_in_vram::@2/memcpy_in_vram::i#1 )
  [409] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2
  to:memcpy_in_vram::@return
memcpy_in_vram::@return: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  [410] return 
  to:@return
memcpy_in_vram::@2: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  [411] *VERA_DATA1 = *VERA_DATA0
  [412] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2
  to:memcpy_in_vram::@1
