(const string) $0 $0 = (string) "jgr"
(const string) $1 $1 = (string) "hbg"
(label) @1
(label) @begin
(label) @end
(const byte) OFFSET_STRUCT_PERSON_INITIALS OFFSET_STRUCT_PERSON_INITIALS = (byte) 1
(byte) Person::id
(byte[4]) Person::initials
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = (byte*) 1024
(const byte) SIZEOF_STRUCT_PERSON SIZEOF_STRUCT_PERSON = (byte) 5
(byte) idx
(byte) idx#10 reg byte x 1.0
(byte) idx#15 reg byte x 2.0
(byte) idx#4 reg byte x 3.0
(byte) idx#5 reg byte x 3.0
(byte) idx#6 reg byte x 2.0
(byte) idx#7 reg byte x 2.0
(byte) idx#8 reg byte x 3.0
(void()) main()
(label) main::@1
(label) main::@return
(struct Person*) main::person
(const struct Person*) main::person#1 person = (const struct Person[]) persons#0+(const byte) SIZEOF_STRUCT_PERSON
(struct Person[]) persons
(const struct Person[]) persons#0 persons = { { id: (byte) 1, initials: (const string) $0 }, { id: (byte) 8, initials: (const string) $1 } }
(void()) print_person((struct Person*) print_person::person)
(byte~) print_person::$0 reg byte a 4.0
(byte[4]) print_person::$3 $3 zp ZP_WORD:4 4.0
(byte[4]) print_person::$4 $4 zp ZP_WORD:2 4.0
(label) print_person::@return
(struct Person*) print_person::person
(struct Person*) print_person::person#2 person zp ZP_WORD:2

zp ZP_WORD:2 [ print_person::person#2 print_person::$4 ]
reg byte x [ idx#15 idx#10 ]
reg byte a [ print_person::$0 ]
reg byte x [ idx#4 ]
reg byte x [ idx#5 ]
reg byte x [ idx#6 ]
zp ZP_WORD:4 [ print_person::$3 ]
reg byte x [ idx#7 ]
reg byte x [ idx#8 ]
