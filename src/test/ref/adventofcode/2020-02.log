Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Setting inferred volatile on symbol affected by address-of main::min = call strtouc(main::pwd, &main::pwd)
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, "rule a valid: ")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, main::valid_a, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, " invalid:")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, main::invalid_a, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, " total:")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, main::total, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, "
")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, "rule b valid: ")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, main::valid_b, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, " invalid:")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, main::invalid_b, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, " total:")
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_uint(&cputc, main::total, { 0, 0, 0, 0, 0, DECIMAL })
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, "
")
Adding parameter assignment in __stackcall procedure cputc::c = param(cputc::c)
Added struct type cast to parameter value list call printf_uint(&cputc, main::valid_a, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Added struct type cast to parameter value list call printf_uint(&cputc, main::invalid_a, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Added struct type cast to parameter value list call printf_uint(&cputc, main::total, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Added struct type cast to parameter value list call printf_uint(&cputc, main::valid_b, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Added struct type cast to parameter value list call printf_uint(&cputc, main::invalid_b, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Added struct type cast to parameter value list call printf_uint(&cputc, main::total, (struct printf_format_number){ 0, 0, 0, 0, 0, DECIMAL })
Inlined call vicSelectGfxBank::$0 = call toDd00(vicSelectGfxBank::gfx)
Inlined call call __init
Eliminating unused variable with no statement memcpy::$0
Eliminating unused variable with no statement memset::$2
Eliminating unused variable with no statement gotoxy::$4
Eliminating unused variable with no statement main::$1
Eliminating unused variable with no statement main::$2
Eliminating unused variable with no statement main::$3
Eliminating unused variable with no statement main::$4
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_str::putc printf_str::c 
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_padding::putc printf_padding::pad 
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_number_buffer::putc printf_number_buffer::buffer_sign 
Calling convention STACK_CALL replacing param(cputc::c) with stackidx(char,cputc::OFFSET_STACK_C)
Calling convention STACK_CALL adding stack push stackpush(char) = printf_str::c
Calling convention STACK_CALL adding stack push stackpush(char) = printf_padding::pad
Calling convention STACK_CALL adding stack push stackpush(char) = printf_number_buffer::buffer_sign

CONTROL FLOW GRAPH SSA

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  memcpy::num#2 = phi( cscroll::@3/memcpy::num#0, cscroll::@4/memcpy::num#1 )
  memcpy::destination#2 = phi( cscroll::@3/memcpy::destination#0, cscroll::@4/memcpy::destination#1 )
  memcpy::source#2 = phi( cscroll::@3/memcpy::source#0, cscroll::@4/memcpy::source#1 )
  memcpy::src#0 = ((char *)) memcpy::source#2
  memcpy::dst#0 = ((char *)) memcpy::destination#2
  memcpy::$2 = (char *)memcpy::source#2
  memcpy::src_end#0 = memcpy::$2 + memcpy::num#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  memcpy::destination#4 = phi( memcpy/memcpy::destination#2, memcpy::@2/memcpy::destination#5 )
  memcpy::dst#3 = phi( memcpy/memcpy::dst#0, memcpy::@2/memcpy::dst#1 )
  memcpy::src_end#1 = phi( memcpy/memcpy::src_end#0, memcpy::@2/memcpy::src_end#2 )
  memcpy::src#2 = phi( memcpy/memcpy::src#0, memcpy::@2/memcpy::src#1 )
  memcpy::$1 = memcpy::src#2 != memcpy::src_end#1
  if(memcpy::$1) goto memcpy::@2
  to:memcpy::@3
memcpy::@2: scope:[memcpy]  from memcpy::@1
  memcpy::destination#5 = phi( memcpy::@1/memcpy::destination#4 )
  memcpy::src_end#2 = phi( memcpy::@1/memcpy::src_end#1 )
  memcpy::dst#2 = phi( memcpy::@1/memcpy::dst#3 )
  memcpy::src#3 = phi( memcpy::@1/memcpy::src#2 )
  *memcpy::dst#2 = *memcpy::src#3
  memcpy::dst#1 = ++ memcpy::dst#2
  memcpy::src#1 = ++ memcpy::src#3
  to:memcpy::@1
memcpy::@3: scope:[memcpy]  from memcpy::@1
  memcpy::destination#3 = phi( memcpy::@1/memcpy::destination#4 )
  memcpy::return#0 = memcpy::destination#3
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@3
  memcpy::return#4 = phi( memcpy::@3/memcpy::return#0 )
  memcpy::return#1 = memcpy::return#4
  return 
  to:@return

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  memset::c#5 = phi( cscroll::@5/memset::c#0, cscroll::@6/memset::c#1 )
  memset::str#4 = phi( cscroll::@5/memset::str#0, cscroll::@6/memset::str#1 )
  memset::num#2 = phi( cscroll::@5/memset::num#0, cscroll::@6/memset::num#1 )
  memset::$0 = memset::num#2 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#2 = phi( memset/memset::str#4, memset::@3/memset::str#5 )
  memset::return#0 = memset::str#2
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#4 = phi( memset/memset::c#5 )
  memset::num#3 = phi( memset/memset::num#2 )
  memset::str#3 = phi( memset/memset::str#4 )
  memset::$4 = (char *)memset::str#3
  memset::end#0 = memset::$4 + memset::num#3
  memset::dst#0 = ((char *)) memset::str#3
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#3 = phi( memset::@2/memset::c#4, memset::@4/memset::c#2 )
  memset::str#5 = phi( memset::@2/memset::str#3, memset::@4/memset::str#6 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#6 = phi( memset::@3/memset::str#5 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#2 = phi( memset::@3/memset::c#3 )
  *memset::dst#3 = memset::c#2
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#4 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#4
  return 
  to:@return

unsigned int strlen(char *str)
strlen: scope:[strlen]  from printf_number_buffer::@6
  strlen::str#4 = phi( printf_number_buffer::@6/strlen::str#1 )
  strlen::len#0 = 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  strlen::len#4 = phi( strlen/strlen::len#0, strlen::@2/strlen::len#1 )
  strlen::str#2 = phi( strlen/strlen::str#4, strlen::@2/strlen::str#0 )
  strlen::$0 = 0 != *strlen::str#2
  if(strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  strlen::str#3 = phi( strlen::@1/strlen::str#2 )
  strlen::len#2 = phi( strlen::@1/strlen::len#4 )
  strlen::len#1 = ++ strlen::len#2
  strlen::str#0 = ++ strlen::str#3
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  strlen::len#3 = phi( strlen::@1/strlen::len#4 )
  strlen::return#0 = strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  strlen::return#3 = phi( strlen::@3/strlen::return#0 )
  strlen::return#1 = strlen::return#3
  return 
  to:@return

char toupper(char ch)
toupper: scope:[toupper]  from strupr::@2
  toupper::ch#1 = phi( strupr::@2/toupper::ch#0 )
  toupper::$0 = toupper::ch#1 >= 'a'
  toupper::$1 = toupper::ch#1 <= 'z'
  toupper::$2 = toupper::$0 && toupper::$1
  if(toupper::$2) goto toupper::@1
  to:toupper::@2
toupper::@1: scope:[toupper]  from toupper
  toupper::ch#2 = phi( toupper/toupper::ch#1 )
  toupper::$3 = toupper::ch#2 + 'A'-'a'
  toupper::return#0 = toupper::$3
  to:toupper::@return
toupper::@2: scope:[toupper]  from toupper
  toupper::ch#3 = phi( toupper/toupper::ch#1 )
  toupper::return#1 = toupper::ch#3
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper::@1 toupper::@2
  toupper::return#4 = phi( toupper::@1/toupper::return#0, toupper::@2/toupper::return#1 )
  toupper::return#2 = toupper::return#4
  return 
  to:@return

char * strupr(char *str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  strupr::str#1 = phi( printf_number_buffer::@11/strupr::str#0 )
  strupr::src#0 = strupr::str#1
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@4
  strupr::str#3 = phi( strupr/strupr::str#1, strupr::@4/strupr::str#4 )
  strupr::src#2 = phi( strupr/strupr::src#0, strupr::@4/strupr::src#1 )
  strupr::$1 = 0 != *strupr::src#2
  if(strupr::$1) goto strupr::@2
  to:strupr::@3
strupr::@2: scope:[strupr]  from strupr::@1
  strupr::str#5 = phi( strupr::@1/strupr::str#3 )
  strupr::src#3 = phi( strupr::@1/strupr::src#2 )
  toupper::ch#0 = *strupr::src#3
  call toupper
  toupper::return#3 = toupper::return#2
  to:strupr::@4
strupr::@4: scope:[strupr]  from strupr::@2
  strupr::str#4 = phi( strupr::@2/strupr::str#5 )
  strupr::src#4 = phi( strupr::@2/strupr::src#3 )
  toupper::return#5 = phi( strupr::@2/toupper::return#3 )
  strupr::$0 = toupper::return#5
  *strupr::src#4 = strupr::$0
  strupr::src#1 = ++ strupr::src#4
  to:strupr::@1
strupr::@3: scope:[strupr]  from strupr::@1
  strupr::str#2 = phi( strupr::@1/strupr::str#3 )
  strupr::return#0 = strupr::str#2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@3
  strupr::return#3 = phi( strupr::@3/strupr::return#0 )
  strupr::return#1 = strupr::return#3
  return 
  to:@return

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_uint::@3
  utoa::buffer#21 = phi( printf_uint::@3/utoa::buffer#5 )
  utoa::value#12 = phi( printf_uint::@3/utoa::value#1 )
  utoa::radix#1 = phi( printf_uint::@3/utoa::radix#0 )
  utoa::max_digits#0 = 0
  utoa::digit_values#0 = (unsigned int *) 0
  utoa::$0 = utoa::radix#1 == DECIMAL
  if(utoa::$0) goto utoa::@1
  to:utoa::@6
utoa::@1: scope:[utoa]  from utoa
  utoa::buffer#17 = phi( utoa/utoa::buffer#21 )
  utoa::value#8 = phi( utoa/utoa::value#12 )
  utoa::max_digits#1 = 5
  utoa::digit_values#1 = RADIX_DECIMAL_VALUES
  to:utoa::@5
utoa::@6: scope:[utoa]  from utoa
  utoa::value#13 = phi( utoa/utoa::value#12 )
  utoa::buffer#16 = phi( utoa/utoa::buffer#21 )
  utoa::radix#2 = phi( utoa/utoa::radix#1 )
  utoa::$1 = utoa::radix#2 == HEXADECIMAL
  if(utoa::$1) goto utoa::@2
  to:utoa::@7
utoa::@2: scope:[utoa]  from utoa::@6
  utoa::buffer#18 = phi( utoa::@6/utoa::buffer#16 )
  utoa::value#9 = phi( utoa::@6/utoa::value#13 )
  utoa::max_digits#2 = 4
  utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
  to:utoa::@5
utoa::@7: scope:[utoa]  from utoa::@6
  utoa::value#14 = phi( utoa::@6/utoa::value#13 )
  utoa::buffer#13 = phi( utoa::@6/utoa::buffer#16 )
  utoa::radix#3 = phi( utoa::@6/utoa::radix#2 )
  utoa::$2 = utoa::radix#3 == OCTAL
  if(utoa::$2) goto utoa::@3
  to:utoa::@8
utoa::@3: scope:[utoa]  from utoa::@7
  utoa::buffer#19 = phi( utoa::@7/utoa::buffer#13 )
  utoa::value#10 = phi( utoa::@7/utoa::value#14 )
  utoa::max_digits#3 = 6
  utoa::digit_values#3 = RADIX_OCTAL_VALUES
  to:utoa::@5
utoa::@8: scope:[utoa]  from utoa::@7
  utoa::value#15 = phi( utoa::@7/utoa::value#14 )
  utoa::buffer#10 = phi( utoa::@7/utoa::buffer#13 )
  utoa::radix#4 = phi( utoa::@7/utoa::radix#3 )
  utoa::$3 = utoa::radix#4 == BINARY
  if(utoa::$3) goto utoa::@4
  to:utoa::@9
utoa::@4: scope:[utoa]  from utoa::@8
  utoa::buffer#20 = phi( utoa::@8/utoa::buffer#10 )
  utoa::value#11 = phi( utoa::@8/utoa::value#15 )
  utoa::max_digits#4 = $10
  utoa::digit_values#4 = RADIX_BINARY_VALUES
  to:utoa::@5
utoa::@9: scope:[utoa]  from utoa::@8
  utoa::buffer#6 = phi( utoa::@8/utoa::buffer#10 )
  *utoa::buffer#6 = 'e'
  utoa::buffer#0 = ++ utoa::buffer#6
  *utoa::buffer#0 = 'r'
  utoa::buffer#1 = ++ utoa::buffer#0
  *utoa::buffer#1 = 'r'
  utoa::buffer#2 = ++ utoa::buffer#1
  *utoa::buffer#2 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@12 utoa::@9
  return 
  to:@return
utoa::@5: scope:[utoa]  from utoa::@1 utoa::@2 utoa::@3 utoa::@4
  utoa::buffer#15 = phi( utoa::@1/utoa::buffer#17, utoa::@2/utoa::buffer#18, utoa::@3/utoa::buffer#19, utoa::@4/utoa::buffer#20 )
  utoa::value#7 = phi( utoa::@1/utoa::value#8, utoa::@2/utoa::value#9, utoa::@3/utoa::value#10, utoa::@4/utoa::value#11 )
  utoa::digit_values#8 = phi( utoa::@1/utoa::digit_values#1, utoa::@2/utoa::digit_values#2, utoa::@3/utoa::digit_values#3, utoa::@4/utoa::digit_values#4 )
  utoa::max_digits#7 = phi( utoa::@1/utoa::max_digits#1, utoa::@2/utoa::max_digits#2, utoa::@3/utoa::max_digits#3, utoa::@4/utoa::max_digits#4 )
  utoa::started#0 = 0
  utoa::digit#0 = 0
  to:utoa::@10
utoa::@10: scope:[utoa]  from utoa::@13 utoa::@5
  utoa::buffer#11 = phi( utoa::@13/utoa::buffer#14, utoa::@5/utoa::buffer#15 )
  utoa::started#3 = phi( utoa::@13/utoa::started#4, utoa::@5/utoa::started#0 )
  utoa::value#5 = phi( utoa::@13/utoa::value#6, utoa::@5/utoa::value#7 )
  utoa::digit_values#6 = phi( utoa::@13/utoa::digit_values#7, utoa::@5/utoa::digit_values#8 )
  utoa::digit#2 = phi( utoa::@13/utoa::digit#1, utoa::@5/utoa::digit#0 )
  utoa::max_digits#5 = phi( utoa::@13/utoa::max_digits#6, utoa::@5/utoa::max_digits#7 )
  utoa::$4 = utoa::max_digits#5 - 1
  utoa::$5 = utoa::digit#2 < utoa::$4
  if(utoa::$5) goto utoa::@11
  to:utoa::@12
utoa::@11: scope:[utoa]  from utoa::@10
  utoa::max_digits#8 = phi( utoa::@10/utoa::max_digits#5 )
  utoa::buffer#12 = phi( utoa::@10/utoa::buffer#11 )
  utoa::started#2 = phi( utoa::@10/utoa::started#3 )
  utoa::value#2 = phi( utoa::@10/utoa::value#5 )
  utoa::digit_values#5 = phi( utoa::@10/utoa::digit_values#6 )
  utoa::digit#3 = phi( utoa::@10/utoa::digit#2 )
  utoa::$10 = utoa::digit#3 * SIZEOF_UNSIGNED_INT
  utoa::digit_value#0 = utoa::digit_values#5[utoa::$10]
  utoa::$6 = utoa::value#2 >= utoa::digit_value#0
  utoa::$7 = utoa::started#2 || utoa::$6
  utoa::$8 = ! utoa::$7
  if(utoa::$8) goto utoa::@13
  to:utoa::@14
utoa::@12: scope:[utoa]  from utoa::@10
  utoa::buffer#7 = phi( utoa::@10/utoa::buffer#11 )
  utoa::value#3 = phi( utoa::@10/utoa::value#5 )
  utoa::$11 = (char)utoa::value#3
  *utoa::buffer#7 = DIGITS[utoa::$11]
  utoa::buffer#3 = ++ utoa::buffer#7
  *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@13: scope:[utoa]  from utoa::@11 utoa::@15
  utoa::buffer#14 = phi( utoa::@11/utoa::buffer#12, utoa::@15/utoa::buffer#4 )
  utoa::started#4 = phi( utoa::@11/utoa::started#2, utoa::@15/utoa::started#1 )
  utoa::value#6 = phi( utoa::@11/utoa::value#2, utoa::@15/utoa::value#0 )
  utoa::digit_values#7 = phi( utoa::@11/utoa::digit_values#5, utoa::@15/utoa::digit_values#9 )
  utoa::max_digits#6 = phi( utoa::@11/utoa::max_digits#8, utoa::@15/utoa::max_digits#9 )
  utoa::digit#4 = phi( utoa::@11/utoa::digit#3, utoa::@15/utoa::digit#5 )
  utoa::digit#1 = ++ utoa::digit#4
  to:utoa::@10
utoa::@14: scope:[utoa]  from utoa::@11
  utoa::digit_values#10 = phi( utoa::@11/utoa::digit_values#5 )
  utoa::max_digits#10 = phi( utoa::@11/utoa::max_digits#8 )
  utoa::digit#6 = phi( utoa::@11/utoa::digit#3 )
  utoa::digit_value#1 = phi( utoa::@11/utoa::digit_value#0 )
  utoa::value#4 = phi( utoa::@11/utoa::value#2 )
  utoa::buffer#8 = phi( utoa::@11/utoa::buffer#12 )
  utoa_append::buffer#0 = utoa::buffer#8
  utoa_append::value#0 = utoa::value#4
  utoa_append::sub#0 = utoa::digit_value#1
  call utoa_append
  utoa_append::return#0 = utoa_append::return#2
  to:utoa::@15
utoa::@15: scope:[utoa]  from utoa::@14
  utoa::digit_values#9 = phi( utoa::@14/utoa::digit_values#10 )
  utoa::max_digits#9 = phi( utoa::@14/utoa::max_digits#10 )
  utoa::digit#5 = phi( utoa::@14/utoa::digit#6 )
  utoa::buffer#9 = phi( utoa::@14/utoa::buffer#8 )
  utoa_append::return#3 = phi( utoa::@14/utoa_append::return#0 )
  utoa::$9 = utoa_append::return#3
  utoa::value#0 = utoa::$9
  utoa::buffer#4 = ++ utoa::buffer#9
  utoa::started#1 = 1
  to:utoa::@13

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@14
  utoa_append::buffer#3 = phi( utoa::@14/utoa_append::buffer#0 )
  utoa_append::sub#3 = phi( utoa::@14/utoa_append::sub#0 )
  utoa_append::value#5 = phi( utoa::@14/utoa_append::value#0 )
  utoa_append::digit#0 = 0
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  utoa_append::buffer#2 = phi( utoa_append/utoa_append::buffer#3, utoa_append::@2/utoa_append::buffer#4 )
  utoa_append::digit#4 = phi( utoa_append/utoa_append::digit#0, utoa_append::@2/utoa_append::digit#1 )
  utoa_append::sub#1 = phi( utoa_append/utoa_append::sub#3, utoa_append::@2/utoa_append::sub#2 )
  utoa_append::value#2 = phi( utoa_append/utoa_append::value#5, utoa_append::@2/utoa_append::value#1 )
  utoa_append::$0 = utoa_append::value#2 >= utoa_append::sub#1
  if(utoa_append::$0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  utoa_append::buffer#4 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::sub#2 = phi( utoa_append::@1/utoa_append::sub#1 )
  utoa_append::value#3 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::digit#2 = phi( utoa_append::@1/utoa_append::digit#4 )
  utoa_append::digit#1 = ++ utoa_append::digit#2
  utoa_append::value#1 = utoa_append::value#3 - utoa_append::sub#2
  to:utoa_append::@1
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  utoa_append::value#4 = phi( utoa_append::@1/utoa_append::value#2 )
  utoa_append::buffer#1 = phi( utoa_append::@1/utoa_append::buffer#2 )
  utoa_append::digit#3 = phi( utoa_append::@1/utoa_append::digit#4 )
  *utoa_append::buffer#1 = DIGITS[utoa_append::digit#3]
  utoa_append::return#1 = utoa_append::value#4
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  utoa_append::return#4 = phi( utoa_append::@3/utoa_append::return#1 )
  utoa_append::return#2 = utoa_append::return#4
  return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  clrscr::line_text#0 = CONIO_SCREEN_TEXT
  clrscr::line_cols#0 = CONIO_SCREEN_COLORS
  clrscr::l#0 = 0
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@6
  clrscr::line_cols#6 = phi( clrscr/clrscr::line_cols#0, clrscr::@6/clrscr::line_cols#1 )
  clrscr::line_text#6 = phi( clrscr/clrscr::line_text#0, clrscr::@6/clrscr::line_text#1 )
  clrscr::l#2 = phi( clrscr/clrscr::l#0, clrscr::@6/clrscr::l#1 )
  clrscr::$0 = clrscr::l#2 < $19
  if(clrscr::$0) goto clrscr::@2
  to:clrscr::@3
clrscr::@2: scope:[clrscr]  from clrscr::@1
  clrscr::l#5 = phi( clrscr::@1/clrscr::l#2 )
  clrscr::line_cols#5 = phi( clrscr::@1/clrscr::line_cols#6 )
  clrscr::line_text#5 = phi( clrscr::@1/clrscr::line_text#6 )
  clrscr::c#0 = 0
  to:clrscr::@4
clrscr::@3: scope:[clrscr]  from clrscr::@1
  conio_cursor_x = 0
  conio_cursor_y = 0
  conio_line_text = CONIO_SCREEN_TEXT
  conio_line_color = CONIO_SCREEN_COLORS
  to:clrscr::@return
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  clrscr::l#4 = phi( clrscr::@2/clrscr::l#5, clrscr::@5/clrscr::l#6 )
  clrscr::line_cols#4 = phi( clrscr::@2/clrscr::line_cols#5, clrscr::@5/clrscr::line_cols#2 )
  clrscr::line_text#4 = phi( clrscr::@2/clrscr::line_text#5, clrscr::@5/clrscr::line_text#2 )
  clrscr::c#2 = phi( clrscr::@2/clrscr::c#0, clrscr::@5/clrscr::c#1 )
  clrscr::$1 = clrscr::c#2 < $28
  if(clrscr::$1) goto clrscr::@5
  to:clrscr::@6
clrscr::@5: scope:[clrscr]  from clrscr::@4
  clrscr::l#6 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_cols#2 = phi( clrscr::@4/clrscr::line_cols#4 )
  clrscr::c#3 = phi( clrscr::@4/clrscr::c#2 )
  clrscr::line_text#2 = phi( clrscr::@4/clrscr::line_text#4 )
  clrscr::line_text#2[clrscr::c#3] = ' '
  clrscr::line_cols#2[clrscr::c#3] = conio_textcolor
  clrscr::c#1 = ++ clrscr::c#3
  to:clrscr::@4
clrscr::@6: scope:[clrscr]  from clrscr::@4
  clrscr::l#3 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_cols#3 = phi( clrscr::@4/clrscr::line_cols#4 )
  clrscr::line_text#3 = phi( clrscr::@4/clrscr::line_text#4 )
  clrscr::line_text#1 = clrscr::line_text#3 + $28
  clrscr::line_cols#1 = clrscr::line_cols#3 + $28
  clrscr::l#1 = ++ clrscr::l#3
  to:clrscr::@1
clrscr::@return: scope:[clrscr]  from clrscr::@3
  return 
  to:@return

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1 cscroll::@2
  gotoxy::x#5 = phi( conio_c64_init::@1/gotoxy::x#2, cscroll::@2/gotoxy::x#1 )
  gotoxy::y#3 = phi( conio_c64_init::@1/gotoxy::y#2, cscroll::@2/gotoxy::y#1 )
  gotoxy::$0 = gotoxy::y#3 > $19
  gotoxy::$1 = ! gotoxy::$0
  if(gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  gotoxy::y#5 = phi( gotoxy/gotoxy::y#3, gotoxy::@3/gotoxy::y#0 )
  gotoxy::x#3 = phi( gotoxy/gotoxy::x#5, gotoxy::@3/gotoxy::x#6 )
  gotoxy::$2 = gotoxy::x#3 >= $28
  gotoxy::$3 = ! gotoxy::$2
  if(gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  gotoxy::x#6 = phi( gotoxy/gotoxy::x#5 )
  gotoxy::y#0 = 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  gotoxy::y#4 = phi( gotoxy::@1/gotoxy::y#5, gotoxy::@4/gotoxy::y#6 )
  gotoxy::x#4 = phi( gotoxy::@1/gotoxy::x#3, gotoxy::@4/gotoxy::x#0 )
  conio_cursor_x = gotoxy::x#4
  conio_cursor_y = gotoxy::y#4
  gotoxy::$7 = (unsigned int)gotoxy::y#4
  gotoxy::line_offset#0 = gotoxy::$7 * $28
  gotoxy::$5 = CONIO_SCREEN_TEXT + gotoxy::line_offset#0
  conio_line_text = gotoxy::$5
  gotoxy::$6 = CONIO_SCREEN_COLORS + gotoxy::line_offset#0
  conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  gotoxy::y#6 = phi( gotoxy::@1/gotoxy::y#5 )
  gotoxy::x#0 = 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from
  cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  cputc::$0 = cputc::c#0 == '
'
  if(cputc::$0) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc
  call cputln
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc
  cputc::c#1 = phi( cputc/cputc::c#0 )
  conio_line_text[conio_cursor_x] = cputc::c#1
  conio_line_color[conio_cursor_x] = conio_textcolor
  conio_cursor_x = ++ conio_cursor_x
  cputc::$1 = conio_cursor_x == $28
  cputc::$2 = ! cputc::$1
  if(cputc::$2) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  call cputln
  to:cputc::@5
cputc::@5: scope:[cputc]  from cputc::@3
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@2 cputc::@4 cputc::@5
  return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  conio_line_text = conio_line_text + $28
  conio_line_color = conio_line_color + $28
  conio_cursor_x = 0
  conio_cursor_y = ++ conio_cursor_y
  call cscroll
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  cscroll::$0 = conio_cursor_y == $19
  cscroll::$1 = ! cscroll::$0
  if(cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  cscroll::$7 = 0 != conio_scroll_enable
  if(cscroll::$7) goto cscroll::@3
  to:cscroll::@2
cscroll::@3: scope:[cscroll]  from cscroll::@1
  memcpy::destination#0 = (void *)CONIO_SCREEN_TEXT
  memcpy::source#0 = (void *)CONIO_SCREEN_TEXT+$28
  memcpy::num#0 = $19*$28-$28
  call memcpy
  memcpy::return#2 = memcpy::return#1
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  memcpy::destination#1 = (void *)CONIO_SCREEN_COLORS
  memcpy::source#1 = (void *)CONIO_SCREEN_COLORS+$28
  memcpy::num#1 = $19*$28-$28
  call memcpy
  memcpy::return#3 = memcpy::return#1
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  memset::str#0 = (void *)CONIO_SCREEN_TEXT+$19*$28-$28
  memset::c#0 = ' '
  memset::num#0 = $28
  call memset
  memset::return#2 = memset::return#1
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  memset::str#1 = (void *)CONIO_SCREEN_COLORS+$19*$28-$28
  memset::c#1 = conio_textcolor
  memset::num#1 = $28
  call memset
  memset::return#3 = memset::return#1
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  conio_line_text = conio_line_text - $28
  conio_line_color = conio_line_color - $28
  conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  gotoxy::x#1 = 0
  gotoxy::y#1 = 0
  call gotoxy
  to:cscroll::@8
cscroll::@8: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@7 cscroll::@8
  return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  conio_c64_init::$0 = conio_c64_init::line#0 >= $19
  conio_c64_init::$1 = ! conio_c64_init::$0
  if(conio_c64_init::$1) goto conio_c64_init::@1
  to:conio_c64_init::@2
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  conio_c64_init::line#2 = phi( conio_c64_init/conio_c64_init::line#0, conio_c64_init::@2/conio_c64_init::line#1 )
  gotoxy::x#2 = 0
  gotoxy::y#2 = conio_c64_init::line#2
  call gotoxy
  to:conio_c64_init::@3
conio_c64_init::@3: scope:[conio_c64_init]  from conio_c64_init::@1
  to:conio_c64_init::@return
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  conio_c64_init::line#1 = $19-1
  to:conio_c64_init::@1
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@3
  return 
  to:@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@24 main::@26 main::@28 main::@29 main::@3 main::@31 main::@33 main::@35 printf_number_buffer::@5
  printf_str::putc#11 = phi( main::@24/printf_str::putc#2, main::@26/printf_str::putc#3, main::@28/printf_str::putc#4, main::@29/printf_str::putc#5, main::@3/printf_str::putc#1, main::@31/printf_str::putc#6, main::@33/printf_str::putc#7, main::@35/printf_str::putc#8, printf_number_buffer::@5/printf_str::putc#0 )
  printf_str::s#11 = phi( main::@24/printf_str::s#3, main::@26/printf_str::s#4, main::@28/printf_str::s#5, main::@29/printf_str::s#6, main::@3/printf_str::s#2, main::@31/printf_str::s#7, main::@33/printf_str::s#8, main::@35/printf_str::s#9, printf_number_buffer::@5/printf_str::s#1 )
  printf_str::c#0 = 0
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  printf_str::putc#10 = phi( printf_str/printf_str::putc#11, printf_str::@2/printf_str::putc#9 )
  printf_str::s#10 = phi( printf_str/printf_str::s#11, printf_str::@2/printf_str::s#12 )
  printf_str::c#1 = *printf_str::s#10
  printf_str::$0 = printf_str::c#1
  printf_str::s#0 = ++ printf_str::s#10
  printf_str::$2 = 0 != printf_str::$0
  if(printf_str::$2) goto printf_str::@2
  to:printf_str::@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  printf_str::s#12 = phi( printf_str::@1/printf_str::s#0 )
  printf_str::putc#9 = phi( printf_str::@1/printf_str::putc#10 )
  printf_str::c#2 = phi( printf_str::@1/printf_str::c#1 )
  stackpush(char) = printf_str::c#2
  callexecute *printf_str::putc#9 
  sideeffect stackpullbytes(1)
  to:printf_str::@1
printf_str::@return: scope:[printf_str]  from printf_str::@1
  return 
  to:@return

void printf_padding(void (*putc)(char) , char pad , char length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8
  printf_padding::putc#5 = phi( printf_number_buffer::@10/printf_padding::putc#1, printf_number_buffer::@12/printf_padding::putc#2, printf_number_buffer::@8/printf_padding::putc#0 )
  printf_padding::pad#5 = phi( printf_number_buffer::@10/printf_padding::pad#1, printf_number_buffer::@12/printf_padding::pad#2, printf_number_buffer::@8/printf_padding::pad#0 )
  printf_padding::length#4 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0 )
  printf_padding::i#0 = 0
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  printf_padding::putc#4 = phi( printf_padding/printf_padding::putc#5, printf_padding::@3/printf_padding::putc#6 )
  printf_padding::pad#4 = phi( printf_padding/printf_padding::pad#5, printf_padding::@3/printf_padding::pad#6 )
  printf_padding::length#3 = phi( printf_padding/printf_padding::length#4, printf_padding::@3/printf_padding::length#5 )
  printf_padding::i#2 = phi( printf_padding/printf_padding::i#0, printf_padding::@3/printf_padding::i#1 )
  printf_padding::$0 = printf_padding::i#2 < printf_padding::length#3
  if(printf_padding::$0) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  printf_padding::length#6 = phi( printf_padding::@1/printf_padding::length#3 )
  printf_padding::i#4 = phi( printf_padding::@1/printf_padding::i#2 )
  printf_padding::putc#3 = phi( printf_padding::@1/printf_padding::putc#4 )
  printf_padding::pad#3 = phi( printf_padding::@1/printf_padding::pad#4 )
  stackpush(char) = printf_padding::pad#3
  callexecute *printf_padding::putc#3 
  sideeffect stackpullbytes(1)
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  printf_padding::putc#6 = phi( printf_padding::@2/printf_padding::putc#3 )
  printf_padding::pad#6 = phi( printf_padding::@2/printf_padding::pad#3 )
  printf_padding::length#5 = phi( printf_padding::@2/printf_padding::length#6 )
  printf_padding::i#3 = phi( printf_padding::@2/printf_padding::i#4 )
  printf_padding::i#1 = ++ printf_padding::i#3
  to:printf_padding::@1
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  return 
  to:@return

void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uint: scope:[printf_uint]  from main::@23 main::@25 main::@27 main::@30 main::@32 main::@34
  printf_uint::format_upper_case#10 = phi( main::@23/printf_uint::format_upper_case#0, main::@25/printf_uint::format_upper_case#1, main::@27/printf_uint::format_upper_case#2, main::@30/printf_uint::format_upper_case#3, main::@32/printf_uint::format_upper_case#4, main::@34/printf_uint::format_upper_case#5 )
  printf_uint::format_zero_padding#10 = phi( main::@23/printf_uint::format_zero_padding#0, main::@25/printf_uint::format_zero_padding#1, main::@27/printf_uint::format_zero_padding#2, main::@30/printf_uint::format_zero_padding#3, main::@32/printf_uint::format_zero_padding#4, main::@34/printf_uint::format_zero_padding#5 )
  printf_uint::format_justify_left#10 = phi( main::@23/printf_uint::format_justify_left#0, main::@25/printf_uint::format_justify_left#1, main::@27/printf_uint::format_justify_left#2, main::@30/printf_uint::format_justify_left#3, main::@32/printf_uint::format_justify_left#4, main::@34/printf_uint::format_justify_left#5 )
  printf_uint::format_min_length#10 = phi( main::@23/printf_uint::format_min_length#0, main::@25/printf_uint::format_min_length#1, main::@27/printf_uint::format_min_length#2, main::@30/printf_uint::format_min_length#3, main::@32/printf_uint::format_min_length#4, main::@34/printf_uint::format_min_length#5 )
  printf_uint::putc#10 = phi( main::@23/printf_uint::putc#0, main::@25/printf_uint::putc#1, main::@27/printf_uint::putc#2, main::@30/printf_uint::putc#3, main::@32/printf_uint::putc#4, main::@34/printf_uint::putc#5 )
  printf_uint::format_radix#10 = phi( main::@23/printf_uint::format_radix#0, main::@25/printf_uint::format_radix#1, main::@27/printf_uint::format_radix#2, main::@30/printf_uint::format_radix#3, main::@32/printf_uint::format_radix#4, main::@34/printf_uint::format_radix#5 )
  printf_uint::uvalue#9 = phi( main::@23/printf_uint::uvalue#0, main::@25/printf_uint::uvalue#1, main::@27/printf_uint::uvalue#2, main::@30/printf_uint::uvalue#3, main::@32/printf_uint::uvalue#4, main::@34/printf_uint::uvalue#5 )
  printf_uint::format_sign_always#6 = phi( main::@23/printf_uint::format_sign_always#0, main::@25/printf_uint::format_sign_always#1, main::@27/printf_uint::format_sign_always#2, main::@30/printf_uint::format_sign_always#3, main::@32/printf_uint::format_sign_always#4, main::@34/printf_uint::format_sign_always#5 )
  printf_uint::$5 = 0 != printf_uint::format_sign_always#6
  if(printf_uint::$5) goto printf_uint::@1
  to:printf_uint::@2
printf_uint::@1: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#8 = phi( printf_uint/printf_uint::format_upper_case#10 )
  printf_uint::format_zero_padding#8 = phi( printf_uint/printf_uint::format_zero_padding#10 )
  printf_uint::format_sign_always#9 = phi( printf_uint/printf_uint::format_sign_always#6 )
  printf_uint::format_justify_left#8 = phi( printf_uint/printf_uint::format_justify_left#10 )
  printf_uint::format_min_length#8 = phi( printf_uint/printf_uint::format_min_length#10 )
  printf_uint::putc#8 = phi( printf_uint/printf_uint::putc#10 )
  printf_uint::format_radix#8 = phi( printf_uint/printf_uint::format_radix#10 )
  printf_uint::uvalue#7 = phi( printf_uint/printf_uint::uvalue#9 )
  printf_uint::$1 = '+'
  to:printf_uint::@3
printf_uint::@2: scope:[printf_uint]  from printf_uint
  printf_uint::format_upper_case#9 = phi( printf_uint/printf_uint::format_upper_case#10 )
  printf_uint::format_zero_padding#9 = phi( printf_uint/printf_uint::format_zero_padding#10 )
  printf_uint::format_sign_always#10 = phi( printf_uint/printf_uint::format_sign_always#6 )
  printf_uint::format_justify_left#9 = phi( printf_uint/printf_uint::format_justify_left#10 )
  printf_uint::format_min_length#9 = phi( printf_uint/printf_uint::format_min_length#10 )
  printf_uint::putc#9 = phi( printf_uint/printf_uint::putc#10 )
  printf_uint::format_radix#9 = phi( printf_uint/printf_uint::format_radix#10 )
  printf_uint::uvalue#8 = phi( printf_uint/printf_uint::uvalue#9 )
  printf_uint::$0 = 0
  to:printf_uint::@3
printf_uint::@3: scope:[printf_uint]  from printf_uint::@1 printf_uint::@2
  printf_uint::format_upper_case#7 = phi( printf_uint::@1/printf_uint::format_upper_case#8, printf_uint::@2/printf_uint::format_upper_case#9 )
  printf_uint::format_zero_padding#7 = phi( printf_uint::@1/printf_uint::format_zero_padding#8, printf_uint::@2/printf_uint::format_zero_padding#9 )
  printf_uint::format_sign_always#8 = phi( printf_uint::@1/printf_uint::format_sign_always#9, printf_uint::@2/printf_uint::format_sign_always#10 )
  printf_uint::format_justify_left#7 = phi( printf_uint::@1/printf_uint::format_justify_left#8, printf_uint::@2/printf_uint::format_justify_left#9 )
  printf_uint::format_min_length#7 = phi( printf_uint::@1/printf_uint::format_min_length#8, printf_uint::@2/printf_uint::format_min_length#9 )
  printf_uint::putc#7 = phi( printf_uint::@1/printf_uint::putc#8, printf_uint::@2/printf_uint::putc#9 )
  printf_uint::format_radix#6 = phi( printf_uint::@1/printf_uint::format_radix#8, printf_uint::@2/printf_uint::format_radix#9 )
  printf_uint::uvalue#6 = phi( printf_uint::@1/printf_uint::uvalue#7, printf_uint::@2/printf_uint::uvalue#8 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
  *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
  utoa::value#1 = printf_uint::uvalue#6
  utoa::buffer#5 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  utoa::radix#0 = printf_uint::format_radix#6
  call utoa
  to:printf_uint::@4
printf_uint::@4: scope:[printf_uint]  from printf_uint::@3
  printf_uint::format_radix#7 = phi( printf_uint::@3/printf_uint::format_radix#6 )
  printf_uint::format_upper_case#6 = phi( printf_uint::@3/printf_uint::format_upper_case#7 )
  printf_uint::format_zero_padding#6 = phi( printf_uint::@3/printf_uint::format_zero_padding#7 )
  printf_uint::format_sign_always#7 = phi( printf_uint::@3/printf_uint::format_sign_always#8 )
  printf_uint::format_justify_left#6 = phi( printf_uint::@3/printf_uint::format_justify_left#7 )
  printf_uint::format_min_length#6 = phi( printf_uint::@3/printf_uint::format_min_length#7 )
  printf_uint::putc#6 = phi( printf_uint::@3/printf_uint::putc#7 )
  printf_number_buffer::putc#0 = printf_uint::putc#6
  printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
  printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
  printf_number_buffer::format_min_length#0 = printf_uint::format_min_length#6
  printf_number_buffer::format_justify_left#0 = printf_uint::format_justify_left#6
  printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#7
  printf_number_buffer::format_zero_padding#0 = printf_uint::format_zero_padding#6
  printf_number_buffer::format_upper_case#0 = printf_uint::format_upper_case#6
  printf_number_buffer::format_radix#0 = printf_uint::format_radix#7
  call printf_number_buffer
  to:printf_uint::@5
printf_uint::@5: scope:[printf_uint]  from printf_uint::@4
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@5
  return 
  to:@return

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uint::@4
  printf_number_buffer::format_upper_case#9 = phi( printf_uint::@4/printf_number_buffer::format_upper_case#0 )
  printf_number_buffer::putc#12 = phi( printf_uint::@4/printf_number_buffer::putc#0 )
  printf_number_buffer::buffer_sign#7 = phi( printf_uint::@4/printf_number_buffer::buffer_sign#0 )
  printf_number_buffer::buffer_digits#4 = phi( printf_uint::@4/printf_number_buffer::buffer_digits#0 )
  printf_number_buffer::format_zero_padding#4 = phi( printf_uint::@4/printf_number_buffer::format_zero_padding#0 )
  printf_number_buffer::format_justify_left#3 = phi( printf_uint::@4/printf_number_buffer::format_justify_left#0 )
  printf_number_buffer::format_min_length#1 = phi( printf_uint::@4/printf_number_buffer::format_min_length#0 )
  printf_number_buffer::padding#0 = 0
  printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
  printf_number_buffer::$0 = ! printf_number_buffer::$26
  if(printf_number_buffer::$0) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@14
  printf_number_buffer::buffer_digits#12 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#4, printf_number_buffer::@13/printf_number_buffer::buffer_digits#14, printf_number_buffer::@14/printf_number_buffer::buffer_digits#15 )
  printf_number_buffer::format_upper_case#7 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#9, printf_number_buffer::@13/printf_number_buffer::format_upper_case#10, printf_number_buffer::@14/printf_number_buffer::format_upper_case#11 )
  printf_number_buffer::putc#6 = phi( printf_number_buffer/printf_number_buffer::putc#12, printf_number_buffer::@13/printf_number_buffer::putc#13, printf_number_buffer::@14/printf_number_buffer::putc#14 )
  printf_number_buffer::buffer_sign#5 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#7, printf_number_buffer::@13/printf_number_buffer::buffer_sign#8, printf_number_buffer::@14/printf_number_buffer::buffer_sign#9 )
  printf_number_buffer::padding#3 = phi( printf_number_buffer/printf_number_buffer::padding#0, printf_number_buffer::@13/printf_number_buffer::padding#1, printf_number_buffer::@14/printf_number_buffer::padding#2 )
  printf_number_buffer::format_zero_padding#1 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#4, printf_number_buffer::@13/printf_number_buffer::format_zero_padding#5, printf_number_buffer::@14/printf_number_buffer::format_zero_padding#6 )
  printf_number_buffer::format_justify_left#1 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#3, printf_number_buffer::@13/printf_number_buffer::format_justify_left#4, printf_number_buffer::@14/printf_number_buffer::format_justify_left#5 )
  printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
  printf_number_buffer::$1 = ! printf_number_buffer::$27
  printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
  printf_number_buffer::$2 = ! printf_number_buffer::$28
  printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
  printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#3
  printf_number_buffer::$5 = ! printf_number_buffer::$4
  if(printf_number_buffer::$5) goto printf_number_buffer::@2
  to:printf_number_buffer::@8
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  printf_number_buffer::format_upper_case#15 = phi( printf_number_buffer/printf_number_buffer::format_upper_case#9 )
  printf_number_buffer::putc#20 = phi( printf_number_buffer/printf_number_buffer::putc#12 )
  printf_number_buffer::format_zero_padding#15 = phi( printf_number_buffer/printf_number_buffer::format_zero_padding#4 )
  printf_number_buffer::format_justify_left#11 = phi( printf_number_buffer/printf_number_buffer::format_justify_left#3 )
  printf_number_buffer::format_min_length#5 = phi( printf_number_buffer/printf_number_buffer::format_min_length#1 )
  printf_number_buffer::buffer_sign#4 = phi( printf_number_buffer/printf_number_buffer::buffer_sign#7 )
  printf_number_buffer::buffer_digits#1 = phi( printf_number_buffer/printf_number_buffer::buffer_digits#4 )
  strlen::str#1 = printf_number_buffer::buffer_digits#1
  call strlen
  strlen::return#2 = strlen::return#1
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@6
  printf_number_buffer::buffer_digits#17 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_digits#1 )
  printf_number_buffer::format_upper_case#13 = phi( printf_number_buffer::@6/printf_number_buffer::format_upper_case#15 )
  printf_number_buffer::putc#18 = phi( printf_number_buffer::@6/printf_number_buffer::putc#20 )
  printf_number_buffer::format_zero_padding#10 = phi( printf_number_buffer::@6/printf_number_buffer::format_zero_padding#15 )
  printf_number_buffer::format_justify_left#7 = phi( printf_number_buffer::@6/printf_number_buffer::format_justify_left#11 )
  printf_number_buffer::format_min_length#3 = phi( printf_number_buffer::@6/printf_number_buffer::format_min_length#5 )
  printf_number_buffer::buffer_sign#1 = phi( printf_number_buffer::@6/printf_number_buffer::buffer_sign#4 )
  strlen::return#4 = phi( printf_number_buffer::@6/strlen::return#2 )
  printf_number_buffer::$19 = strlen::return#4
  printf_number_buffer::len#0 = (signed char)printf_number_buffer::$19
  printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
  printf_number_buffer::$20 = ! printf_number_buffer::$29
  if(printf_number_buffer::$20) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@15 printf_number_buffer::@7
  printf_number_buffer::buffer_digits#14 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#17, printf_number_buffer::@7/printf_number_buffer::buffer_digits#18 )
  printf_number_buffer::format_upper_case#10 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#13, printf_number_buffer::@7/printf_number_buffer::format_upper_case#14 )
  printf_number_buffer::putc#13 = phi( printf_number_buffer::@15/printf_number_buffer::putc#18, printf_number_buffer::@7/printf_number_buffer::putc#19 )
  printf_number_buffer::buffer_sign#8 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#1, printf_number_buffer::@7/printf_number_buffer::buffer_sign#11 )
  printf_number_buffer::format_zero_padding#5 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#10, printf_number_buffer::@7/printf_number_buffer::format_zero_padding#11 )
  printf_number_buffer::format_justify_left#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#7, printf_number_buffer::@7/printf_number_buffer::format_justify_left#8 )
  printf_number_buffer::len#2 = phi( printf_number_buffer::@15/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  printf_number_buffer::format_min_length#2 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#3, printf_number_buffer::@7/printf_number_buffer::format_min_length#4 )
  printf_number_buffer::$25 = (signed char)printf_number_buffer::format_min_length#2
  printf_number_buffer::$21 = printf_number_buffer::$25 - printf_number_buffer::len#2
  printf_number_buffer::padding#1 = printf_number_buffer::$21
  printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
  printf_number_buffer::$23 = ! printf_number_buffer::$22
  if(printf_number_buffer::$23) goto printf_number_buffer::@1
  to:printf_number_buffer::@14
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@15
  printf_number_buffer::buffer_digits#18 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_digits#17 )
  printf_number_buffer::format_upper_case#14 = phi( printf_number_buffer::@15/printf_number_buffer::format_upper_case#13 )
  printf_number_buffer::putc#19 = phi( printf_number_buffer::@15/printf_number_buffer::putc#18 )
  printf_number_buffer::buffer_sign#11 = phi( printf_number_buffer::@15/printf_number_buffer::buffer_sign#1 )
  printf_number_buffer::format_zero_padding#11 = phi( printf_number_buffer::@15/printf_number_buffer::format_zero_padding#10 )
  printf_number_buffer::format_justify_left#8 = phi( printf_number_buffer::@15/printf_number_buffer::format_justify_left#7 )
  printf_number_buffer::format_min_length#4 = phi( printf_number_buffer::@15/printf_number_buffer::format_min_length#3 )
  printf_number_buffer::len#3 = phi( printf_number_buffer::@15/printf_number_buffer::len#0 )
  printf_number_buffer::len#1 = ++ printf_number_buffer::len#3
  to:printf_number_buffer::@13
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@13
  printf_number_buffer::buffer_digits#15 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_digits#14 )
  printf_number_buffer::format_upper_case#11 = phi( printf_number_buffer::@13/printf_number_buffer::format_upper_case#10 )
  printf_number_buffer::putc#14 = phi( printf_number_buffer::@13/printf_number_buffer::putc#13 )
  printf_number_buffer::buffer_sign#9 = phi( printf_number_buffer::@13/printf_number_buffer::buffer_sign#8 )
  printf_number_buffer::format_zero_padding#6 = phi( printf_number_buffer::@13/printf_number_buffer::format_zero_padding#5 )
  printf_number_buffer::format_justify_left#5 = phi( printf_number_buffer::@13/printf_number_buffer::format_justify_left#4 )
  printf_number_buffer::padding#2 = 0
  to:printf_number_buffer::@1
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16
  printf_number_buffer::format_justify_left#15 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#1, printf_number_buffer::@16/printf_number_buffer::format_justify_left#18 )
  printf_number_buffer::buffer_digits#9 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#12, printf_number_buffer::@16/printf_number_buffer::buffer_digits#13 )
  printf_number_buffer::format_upper_case#4 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#7, printf_number_buffer::@16/printf_number_buffer::format_upper_case#8 )
  printf_number_buffer::putc#7 = phi( printf_number_buffer::@1/printf_number_buffer::putc#6, printf_number_buffer::@16/printf_number_buffer::putc#15 )
  printf_number_buffer::padding#9 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3, printf_number_buffer::@16/printf_number_buffer::padding#12 )
  printf_number_buffer::format_zero_padding#7 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#1, printf_number_buffer::@16/printf_number_buffer::format_zero_padding#12 )
  printf_number_buffer::buffer_sign#2 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#5, printf_number_buffer::@16/printf_number_buffer::buffer_sign#6 )
  printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
  printf_number_buffer::$7 = ! printf_number_buffer::$30
  if(printf_number_buffer::$7) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@1
  printf_number_buffer::format_justify_left#19 = phi( printf_number_buffer::@1/printf_number_buffer::format_justify_left#1 )
  printf_number_buffer::buffer_digits#16 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_digits#12 )
  printf_number_buffer::format_upper_case#12 = phi( printf_number_buffer::@1/printf_number_buffer::format_upper_case#7 )
  printf_number_buffer::format_zero_padding#16 = phi( printf_number_buffer::@1/printf_number_buffer::format_zero_padding#1 )
  printf_number_buffer::buffer_sign#10 = phi( printf_number_buffer::@1/printf_number_buffer::buffer_sign#5 )
  printf_number_buffer::padding#4 = phi( printf_number_buffer::@1/printf_number_buffer::padding#3 )
  printf_number_buffer::putc#1 = phi( printf_number_buffer::@1/printf_number_buffer::putc#6 )
  printf_padding::putc#0 = printf_number_buffer::putc#1
  printf_padding::pad#0 = ' '
  printf_padding::length#0 = (char)printf_number_buffer::padding#4
  call printf_padding
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@8
  printf_number_buffer::format_justify_left#18 = phi( printf_number_buffer::@8/printf_number_buffer::format_justify_left#19 )
  printf_number_buffer::buffer_digits#13 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_digits#16 )
  printf_number_buffer::format_upper_case#8 = phi( printf_number_buffer::@8/printf_number_buffer::format_upper_case#12 )
  printf_number_buffer::putc#15 = phi( printf_number_buffer::@8/printf_number_buffer::putc#1 )
  printf_number_buffer::padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::padding#4 )
  printf_number_buffer::format_zero_padding#12 = phi( printf_number_buffer::@8/printf_number_buffer::format_zero_padding#16 )
  printf_number_buffer::buffer_sign#6 = phi( printf_number_buffer::@8/printf_number_buffer::buffer_sign#10 )
  to:printf_number_buffer::@2
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  printf_number_buffer::format_justify_left#13 = phi( printf_number_buffer::@2/printf_number_buffer::format_justify_left#15, printf_number_buffer::@9/printf_number_buffer::format_justify_left#16 )
  printf_number_buffer::buffer_digits#8 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_digits#9, printf_number_buffer::@9/printf_number_buffer::buffer_digits#10 )
  printf_number_buffer::putc#8 = phi( printf_number_buffer::@2/printf_number_buffer::putc#7, printf_number_buffer::@9/printf_number_buffer::putc#2 )
  printf_number_buffer::format_upper_case#3 = phi( printf_number_buffer::@2/printf_number_buffer::format_upper_case#4, printf_number_buffer::@9/printf_number_buffer::format_upper_case#5 )
  printf_number_buffer::padding#5 = phi( printf_number_buffer::@2/printf_number_buffer::padding#9, printf_number_buffer::@9/printf_number_buffer::padding#10 )
  printf_number_buffer::format_zero_padding#2 = phi( printf_number_buffer::@2/printf_number_buffer::format_zero_padding#7, printf_number_buffer::@9/printf_number_buffer::format_zero_padding#8 )
  printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#2 && printf_number_buffer::padding#5
  printf_number_buffer::$10 = ! printf_number_buffer::$9
  if(printf_number_buffer::$10) goto printf_number_buffer::@4
  to:printf_number_buffer::@10
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  printf_number_buffer::format_justify_left#16 = phi( printf_number_buffer::@2/printf_number_buffer::format_justify_left#15 )
  printf_number_buffer::buffer_digits#10 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_digits#9 )
  printf_number_buffer::format_upper_case#5 = phi( printf_number_buffer::@2/printf_number_buffer::format_upper_case#4 )
  printf_number_buffer::padding#10 = phi( printf_number_buffer::@2/printf_number_buffer::padding#9 )
  printf_number_buffer::format_zero_padding#8 = phi( printf_number_buffer::@2/printf_number_buffer::format_zero_padding#7 )
  printf_number_buffer::putc#2 = phi( printf_number_buffer::@2/printf_number_buffer::putc#7 )
  printf_number_buffer::buffer_sign#3 = phi( printf_number_buffer::@2/printf_number_buffer::buffer_sign#2 )
  stackpush(char) = printf_number_buffer::buffer_sign#3
  callexecute *printf_number_buffer::putc#2 
  sideeffect stackpullbytes(1)
  to:printf_number_buffer::@3
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@17 printf_number_buffer::@3
  printf_number_buffer::padding#14 = phi( printf_number_buffer::@17/printf_number_buffer::padding#15, printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_number_buffer::format_justify_left#10 = phi( printf_number_buffer::@17/printf_number_buffer::format_justify_left#12, printf_number_buffer::@3/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_zero_padding#14 = phi( printf_number_buffer::@17/printf_number_buffer::format_zero_padding#17, printf_number_buffer::@3/printf_number_buffer::format_zero_padding#2 )
  printf_number_buffer::buffer_digits#6 = phi( printf_number_buffer::@17/printf_number_buffer::buffer_digits#7, printf_number_buffer::@3/printf_number_buffer::buffer_digits#8 )
  printf_number_buffer::putc#10 = phi( printf_number_buffer::@17/printf_number_buffer::putc#16, printf_number_buffer::@3/printf_number_buffer::putc#8 )
  printf_number_buffer::format_upper_case#1 = phi( printf_number_buffer::@17/printf_number_buffer::format_upper_case#2, printf_number_buffer::@3/printf_number_buffer::format_upper_case#3 )
  printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
  printf_number_buffer::$12 = ! printf_number_buffer::$31
  if(printf_number_buffer::$12) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@3
  printf_number_buffer::format_justify_left#17 = phi( printf_number_buffer::@3/printf_number_buffer::format_justify_left#13 )
  printf_number_buffer::format_zero_padding#19 = phi( printf_number_buffer::@3/printf_number_buffer::format_zero_padding#2 )
  printf_number_buffer::buffer_digits#11 = phi( printf_number_buffer::@3/printf_number_buffer::buffer_digits#8 )
  printf_number_buffer::format_upper_case#6 = phi( printf_number_buffer::@3/printf_number_buffer::format_upper_case#3 )
  printf_number_buffer::padding#6 = phi( printf_number_buffer::@3/printf_number_buffer::padding#5 )
  printf_number_buffer::putc#3 = phi( printf_number_buffer::@3/printf_number_buffer::putc#8 )
  printf_padding::putc#1 = printf_number_buffer::putc#3
  printf_padding::pad#1 = '0'
  printf_padding::length#1 = (char)printf_number_buffer::padding#6
  call printf_padding
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@10
  printf_number_buffer::padding#15 = phi( printf_number_buffer::@10/printf_number_buffer::padding#6 )
  printf_number_buffer::format_justify_left#12 = phi( printf_number_buffer::@10/printf_number_buffer::format_justify_left#17 )
  printf_number_buffer::format_zero_padding#17 = phi( printf_number_buffer::@10/printf_number_buffer::format_zero_padding#19 )
  printf_number_buffer::buffer_digits#7 = phi( printf_number_buffer::@10/printf_number_buffer::buffer_digits#11 )
  printf_number_buffer::putc#16 = phi( printf_number_buffer::@10/printf_number_buffer::putc#3 )
  printf_number_buffer::format_upper_case#2 = phi( printf_number_buffer::@10/printf_number_buffer::format_upper_case#6 )
  to:printf_number_buffer::@4
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@19 printf_number_buffer::@4
  printf_number_buffer::padding#11 = phi( printf_number_buffer::@19/printf_number_buffer::padding#13, printf_number_buffer::@4/printf_number_buffer::padding#14 )
  printf_number_buffer::format_justify_left#6 = phi( printf_number_buffer::@19/printf_number_buffer::format_justify_left#9, printf_number_buffer::@4/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::format_zero_padding#9 = phi( printf_number_buffer::@19/printf_number_buffer::format_zero_padding#13, printf_number_buffer::@4/printf_number_buffer::format_zero_padding#14 )
  printf_number_buffer::buffer_digits#2 = phi( printf_number_buffer::@19/printf_number_buffer::buffer_digits#5, printf_number_buffer::@4/printf_number_buffer::buffer_digits#6 )
  printf_number_buffer::putc#4 = phi( printf_number_buffer::@19/printf_number_buffer::putc#9, printf_number_buffer::@4/printf_number_buffer::putc#10 )
  printf_str::putc#0 = printf_number_buffer::putc#4
  printf_str::s#1 = printf_number_buffer::buffer_digits#2
  call printf_str
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@5
  printf_number_buffer::putc#11 = phi( printf_number_buffer::@5/printf_number_buffer::putc#4 )
  printf_number_buffer::padding#7 = phi( printf_number_buffer::@5/printf_number_buffer::padding#11 )
  printf_number_buffer::format_justify_left#2 = phi( printf_number_buffer::@5/printf_number_buffer::format_justify_left#6 )
  printf_number_buffer::format_zero_padding#3 = phi( printf_number_buffer::@5/printf_number_buffer::format_zero_padding#9 )
  printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
  printf_number_buffer::$14 = ! printf_number_buffer::$32
  printf_number_buffer::$15 = printf_number_buffer::format_justify_left#2 && printf_number_buffer::$14
  printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#7
  printf_number_buffer::$17 = ! printf_number_buffer::$16
  if(printf_number_buffer::$17) goto printf_number_buffer::@return
  to:printf_number_buffer::@12
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  printf_number_buffer::padding#16 = phi( printf_number_buffer::@4/printf_number_buffer::padding#14 )
  printf_number_buffer::format_justify_left#14 = phi( printf_number_buffer::@4/printf_number_buffer::format_justify_left#10 )
  printf_number_buffer::format_zero_padding#18 = phi( printf_number_buffer::@4/printf_number_buffer::format_zero_padding#14 )
  printf_number_buffer::putc#17 = phi( printf_number_buffer::@4/printf_number_buffer::putc#10 )
  printf_number_buffer::buffer_digits#3 = phi( printf_number_buffer::@4/printf_number_buffer::buffer_digits#6 )
  strupr::str#0 = printf_number_buffer::buffer_digits#3
  call strupr
  strupr::return#2 = strupr::return#1
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@11
  printf_number_buffer::padding#13 = phi( printf_number_buffer::@11/printf_number_buffer::padding#16 )
  printf_number_buffer::format_justify_left#9 = phi( printf_number_buffer::@11/printf_number_buffer::format_justify_left#14 )
  printf_number_buffer::format_zero_padding#13 = phi( printf_number_buffer::@11/printf_number_buffer::format_zero_padding#18 )
  printf_number_buffer::buffer_digits#5 = phi( printf_number_buffer::@11/printf_number_buffer::buffer_digits#3 )
  printf_number_buffer::putc#9 = phi( printf_number_buffer::@11/printf_number_buffer::putc#17 )
  to:printf_number_buffer::@5
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@18
  printf_number_buffer::padding#8 = phi( printf_number_buffer::@18/printf_number_buffer::padding#7 )
  printf_number_buffer::putc#5 = phi( printf_number_buffer::@18/printf_number_buffer::putc#11 )
  printf_padding::putc#2 = printf_number_buffer::putc#5
  printf_padding::pad#2 = ' '
  printf_padding::length#2 = (char)printf_number_buffer::padding#8
  call printf_padding
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@18 printf_number_buffer::@20
  return 
  to:@return

char strtouc(char *str , char **endptr)
strtouc: scope:[strtouc]  from main::@2 main::@21
  strtouc::endptr#4 = phi( main::@2/strtouc::endptr#0, main::@21/strtouc::endptr#1 )
  strtouc::str#3 = phi( main::@2/strtouc::str#1, main::@21/strtouc::str#2 )
  strtouc::val#0 = 0
  strtouc::c#0 = *strtouc::str#3
  to:strtouc::@1
strtouc::@1: scope:[strtouc]  from strtouc strtouc::@2
  strtouc::endptr#3 = phi( strtouc/strtouc::endptr#4, strtouc::@2/strtouc::endptr#5 )
  strtouc::str#6 = phi( strtouc/strtouc::str#3, strtouc::@2/strtouc::str#0 )
  strtouc::val#5 = phi( strtouc/strtouc::val#0, strtouc::@2/strtouc::val#2 )
  strtouc::c#2 = phi( strtouc/strtouc::c#0, strtouc::@2/strtouc::c#1 )
  strtouc::$0 = strtouc::c#2 >= '0'
  strtouc::$1 = strtouc::c#2 <= '9'
  strtouc::$2 = strtouc::$0 && strtouc::$1
  if(strtouc::$2) goto strtouc::@2
  to:strtouc::@3
strtouc::@2: scope:[strtouc]  from strtouc::@1
  strtouc::endptr#5 = phi( strtouc::@1/strtouc::endptr#3 )
  strtouc::str#4 = phi( strtouc::@1/strtouc::str#6 )
  strtouc::c#3 = phi( strtouc::@1/strtouc::c#2 )
  strtouc::val#3 = phi( strtouc::@1/strtouc::val#5 )
  strtouc::$3 = strtouc::val#3 * $a
  strtouc::val#1 = strtouc::$3
  strtouc::$4 = strtouc::c#3 - '0'
  strtouc::val#2 = strtouc::val#1 + strtouc::$4
  strtouc::str#0 = ++ strtouc::str#4
  strtouc::c#1 = *strtouc::str#0
  to:strtouc::@1
strtouc::@3: scope:[strtouc]  from strtouc::@1
  strtouc::val#4 = phi( strtouc::@1/strtouc::val#5 )
  strtouc::endptr#2 = phi( strtouc::@1/strtouc::endptr#3 )
  strtouc::str#5 = phi( strtouc::@1/strtouc::str#6 )
  *strtouc::endptr#2 = strtouc::str#5
  strtouc::return#0 = strtouc::val#4
  to:strtouc::@return
strtouc::@return: scope:[strtouc]  from strtouc::@3
  strtouc::return#4 = phi( strtouc::@3/strtouc::return#0 )
  strtouc::return#1 = strtouc::return#4
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  call clrscr
  to:main::@20
main::@20: scope:[main]  from main
  main::valid_a#0 = 0
  main::invalid_a#0 = 0
  main::valid_b#0 = 0
  main::invalid_b#0 = 0
  main::total#0 = 0
  main::pwd = passwords
  to:main::@1
main::@1: scope:[main]  from main::@15 main::@20
  main::invalid_b#28 = phi( main::@15/main::invalid_b#30, main::@20/main::invalid_b#0 )
  main::valid_b#27 = phi( main::@15/main::valid_b#28, main::@20/main::valid_b#0 )
  main::total#22 = phi( main::@15/main::total#1, main::@20/main::total#0 )
  main::invalid_a#11 = phi( main::@15/main::invalid_a#16, main::@20/main::invalid_a#0 )
  main::valid_a#6 = phi( main::@15/main::valid_a#8, main::@20/main::valid_a#0 )
  main::$17 = 0 != *main::pwd
  if(main::$17) goto main::@2
  to:main::@3
main::@2: scope:[main]  from main::@1
  main::total#33 = phi( main::@1/main::total#22 )
  main::invalid_b#26 = phi( main::@1/main::invalid_b#28 )
  main::valid_b#26 = phi( main::@1/main::valid_b#27 )
  main::invalid_a#22 = phi( main::@1/main::invalid_a#11 )
  main::valid_a#22 = phi( main::@1/main::valid_a#6 )
  strtouc::str#1 = main::pwd
  strtouc::endptr#0 = &main::pwd
  call strtouc
  strtouc::return#2 = strtouc::return#1
  to:main::@21
main::@21: scope:[main]  from main::@2
  main::total#32 = phi( main::@2/main::total#33 )
  main::invalid_b#24 = phi( main::@2/main::invalid_b#26 )
  main::valid_b#24 = phi( main::@2/main::valid_b#26 )
  main::invalid_a#19 = phi( main::@2/main::invalid_a#22 )
  main::valid_a#20 = phi( main::@2/main::valid_a#22 )
  strtouc::return#5 = phi( main::@2/strtouc::return#2 )
  main::min#0 = strtouc::return#5
  main::pwd = ++ main::pwd
  strtouc::str#2 = main::pwd
  strtouc::endptr#1 = &main::pwd
  call strtouc
  strtouc::return#3 = strtouc::return#1
  to:main::@22
main::@22: scope:[main]  from main::@21
  main::total#31 = phi( main::@21/main::total#32 )
  main::invalid_b#23 = phi( main::@21/main::invalid_b#24 )
  main::valid_b#23 = phi( main::@21/main::valid_b#24 )
  main::invalid_a#18 = phi( main::@21/main::invalid_a#19 )
  main::valid_a#18 = phi( main::@21/main::valid_a#20 )
  main::min#1 = phi( main::@21/main::min#0 )
  strtouc::return#6 = phi( main::@21/strtouc::return#3 )
  main::max#0 = strtouc::return#6
  main::pwd = ++ main::pwd
  main::ch#0 = *main::pwd
  main::pwd = main::pwd + 3
  main::count_b#0 = 0
  main::$5 = main::min#1 - 1
  main::$6 = main::pwd[main::$5] == main::ch#0
  main::$7 = ! main::$6
  if(main::$7) goto main::@4
  to:main::@16
main::@3: scope:[main]  from main::@1
  main::invalid_b#29 = phi( main::@1/main::invalid_b#28 )
  main::valid_b#25 = phi( main::@1/main::valid_b#27 )
  main::total#19 = phi( main::@1/main::total#22 )
  main::invalid_a#8 = phi( main::@1/main::invalid_a#11 )
  main::valid_a#4 = phi( main::@1/main::valid_a#6 )
  printf_str::putc#1 = &cputc
  printf_str::s#2 = main::s
  call printf_str
  to:main::@23
main::@23: scope:[main]  from main::@3
  main::invalid_b#27 = phi( main::@3/main::invalid_b#29 )
  main::valid_b#21 = phi( main::@3/main::valid_b#25 )
  main::total#16 = phi( main::@3/main::total#19 )
  main::invalid_a#6 = phi( main::@3/main::invalid_a#8 )
  main::valid_a#2 = phi( main::@3/main::valid_a#4 )
  printf_uint::putc#0 = &cputc
  printf_uint::uvalue#0 = main::valid_a#2
  printf_uint::format_min_length#0 = 0
  printf_uint::format_justify_left#0 = 0
  printf_uint::format_sign_always#0 = 0
  printf_uint::format_zero_padding#0 = 0
  printf_uint::format_upper_case#0 = 0
  printf_uint::format_radix#0 = DECIMAL
  call printf_uint
  to:main::@24
main::@24: scope:[main]  from main::@23
  main::invalid_b#25 = phi( main::@23/main::invalid_b#27 )
  main::valid_b#16 = phi( main::@23/main::valid_b#21 )
  main::total#12 = phi( main::@23/main::total#16 )
  main::invalid_a#4 = phi( main::@23/main::invalid_a#6 )
  printf_str::putc#2 = &cputc
  printf_str::s#3 = main::s1
  call printf_str
  to:main::@25
main::@25: scope:[main]  from main::@24
  main::invalid_b#21 = phi( main::@24/main::invalid_b#25 )
  main::valid_b#13 = phi( main::@24/main::valid_b#16 )
  main::total#9 = phi( main::@24/main::total#12 )
  main::invalid_a#2 = phi( main::@24/main::invalid_a#4 )
  printf_uint::putc#1 = &cputc
  printf_uint::uvalue#1 = main::invalid_a#2
  printf_uint::format_min_length#1 = 0
  printf_uint::format_justify_left#1 = 0
  printf_uint::format_sign_always#1 = 0
  printf_uint::format_zero_padding#1 = 0
  printf_uint::format_upper_case#1 = 0
  printf_uint::format_radix#1 = DECIMAL
  call printf_uint
  to:main::@26
main::@26: scope:[main]  from main::@25
  main::invalid_b#16 = phi( main::@25/main::invalid_b#21 )
  main::valid_b#11 = phi( main::@25/main::valid_b#13 )
  main::total#5 = phi( main::@25/main::total#9 )
  printf_str::putc#3 = &cputc
  printf_str::s#4 = main::s2
  call printf_str
  to:main::@27
main::@27: scope:[main]  from main::@26
  main::invalid_b#13 = phi( main::@26/main::invalid_b#16 )
  main::valid_b#9 = phi( main::@26/main::valid_b#11 )
  main::total#2 = phi( main::@26/main::total#5 )
  printf_uint::putc#2 = &cputc
  printf_uint::uvalue#2 = main::total#2
  printf_uint::format_min_length#2 = 0
  printf_uint::format_justify_left#2 = 0
  printf_uint::format_sign_always#2 = 0
  printf_uint::format_zero_padding#2 = 0
  printf_uint::format_upper_case#2 = 0
  printf_uint::format_radix#2 = DECIMAL
  call printf_uint
  to:main::@28
main::@28: scope:[main]  from main::@27
  main::total#23 = phi( main::@27/main::total#2 )
  main::invalid_b#11 = phi( main::@27/main::invalid_b#13 )
  main::valid_b#6 = phi( main::@27/main::valid_b#9 )
  printf_str::putc#4 = &cputc
  printf_str::s#5 = main::s3
  call printf_str
  to:main::@29
main::@29: scope:[main]  from main::@28
  main::total#20 = phi( main::@28/main::total#23 )
  main::invalid_b#9 = phi( main::@28/main::invalid_b#11 )
  main::valid_b#4 = phi( main::@28/main::valid_b#6 )
  printf_str::putc#5 = &cputc
  printf_str::s#6 = main::s4
  call printf_str
  to:main::@30
main::@30: scope:[main]  from main::@29
  main::total#17 = phi( main::@29/main::total#20 )
  main::invalid_b#6 = phi( main::@29/main::invalid_b#9 )
  main::valid_b#2 = phi( main::@29/main::valid_b#4 )
  printf_uint::putc#3 = &cputc
  printf_uint::uvalue#3 = main::valid_b#2
  printf_uint::format_min_length#3 = 0
  printf_uint::format_justify_left#3 = 0
  printf_uint::format_sign_always#3 = 0
  printf_uint::format_zero_padding#3 = 0
  printf_uint::format_upper_case#3 = 0
  printf_uint::format_radix#3 = DECIMAL
  call printf_uint
  to:main::@31
main::@31: scope:[main]  from main::@30
  main::total#13 = phi( main::@30/main::total#17 )
  main::invalid_b#4 = phi( main::@30/main::invalid_b#6 )
  printf_str::putc#6 = &cputc
  printf_str::s#7 = main::s5
  call printf_str
  to:main::@32
main::@32: scope:[main]  from main::@31
  main::total#10 = phi( main::@31/main::total#13 )
  main::invalid_b#2 = phi( main::@31/main::invalid_b#4 )
  printf_uint::putc#4 = &cputc
  printf_uint::uvalue#4 = main::invalid_b#2
  printf_uint::format_min_length#4 = 0
  printf_uint::format_justify_left#4 = 0
  printf_uint::format_sign_always#4 = 0
  printf_uint::format_zero_padding#4 = 0
  printf_uint::format_upper_case#4 = 0
  printf_uint::format_radix#4 = DECIMAL
  call printf_uint
  to:main::@33
main::@33: scope:[main]  from main::@32
  main::total#6 = phi( main::@32/main::total#10 )
  printf_str::putc#7 = &cputc
  printf_str::s#8 = main::s6
  call printf_str
  to:main::@34
main::@34: scope:[main]  from main::@33
  main::total#3 = phi( main::@33/main::total#6 )
  printf_uint::putc#5 = &cputc
  printf_uint::uvalue#5 = main::total#3
  printf_uint::format_min_length#5 = 0
  printf_uint::format_justify_left#5 = 0
  printf_uint::format_sign_always#5 = 0
  printf_uint::format_zero_padding#5 = 0
  printf_uint::format_upper_case#5 = 0
  printf_uint::format_radix#5 = DECIMAL
  call printf_uint
  to:main::@35
main::@35: scope:[main]  from main::@34
  printf_str::putc#8 = &cputc
  printf_str::s#9 = main::s7
  call printf_str
  to:main::@36
main::@36: scope:[main]  from main::@35
  to:main::@19
main::@4: scope:[main]  from main::@16 main::@22
  main::total#27 = phi( main::@16/main::total#30, main::@22/main::total#31 )
  main::invalid_b#18 = phi( main::@16/main::invalid_b#22, main::@22/main::invalid_b#23 )
  main::valid_b#18 = phi( main::@16/main::valid_b#22, main::@22/main::valid_b#23 )
  main::invalid_a#13 = phi( main::@16/main::invalid_a#17, main::@22/main::invalid_a#18 )
  main::valid_a#12 = phi( main::@16/main::valid_a#17, main::@22/main::valid_a#18 )
  main::min#7 = phi( main::@16/main::min#10, main::@22/main::min#1 )
  main::count_b#6 = phi( main::@16/main::count_b#1, main::@22/main::count_b#0 )
  main::ch#1 = phi( main::@16/main::ch#3, main::@22/main::ch#0 )
  main::max#1 = phi( main::@16/main::max#3, main::@22/main::max#0 )
  main::$8 = main::max#1 - 1
  main::$9 = main::pwd[main::$8] == main::ch#1
  main::$10 = ! main::$9
  if(main::$10) goto main::@5
  to:main::@17
main::@16: scope:[main]  from main::@22
  main::total#30 = phi( main::@22/main::total#31 )
  main::invalid_b#22 = phi( main::@22/main::invalid_b#23 )
  main::valid_b#22 = phi( main::@22/main::valid_b#23 )
  main::invalid_a#17 = phi( main::@22/main::invalid_a#18 )
  main::valid_a#17 = phi( main::@22/main::valid_a#18 )
  main::min#10 = phi( main::@22/main::min#1 )
  main::ch#3 = phi( main::@22/main::ch#0 )
  main::max#3 = phi( main::@22/main::max#0 )
  main::count_b#3 = phi( main::@22/main::count_b#0 )
  main::count_b#1 = ++ main::count_b#3
  to:main::@4
main::@5: scope:[main]  from main::@17 main::@4
  main::total#24 = phi( main::@17/main::total#26, main::@4/main::total#27 )
  main::invalid_b#14 = phi( main::@17/main::invalid_b#17, main::@4/main::invalid_b#18 )
  main::valid_b#14 = phi( main::@17/main::valid_b#17, main::@4/main::valid_b#18 )
  main::count_b#11 = phi( main::@17/main::count_b#2, main::@4/main::count_b#6 )
  main::invalid_a#9 = phi( main::@17/main::invalid_a#12, main::@4/main::invalid_a#13 )
  main::valid_a#9 = phi( main::@17/main::valid_a#11, main::@4/main::valid_a#12 )
  main::max#5 = phi( main::@17/main::max#7, main::@4/main::max#1 )
  main::min#4 = phi( main::@17/main::min#6, main::@4/main::min#7 )
  main::ch#5 = phi( main::@17/main::ch#7, main::@4/main::ch#1 )
  main::count_a#0 = 0
  to:main::@6
main::@17: scope:[main]  from main::@4
  main::total#26 = phi( main::@4/main::total#27 )
  main::invalid_b#17 = phi( main::@4/main::invalid_b#18 )
  main::valid_b#17 = phi( main::@4/main::valid_b#18 )
  main::invalid_a#12 = phi( main::@4/main::invalid_a#13 )
  main::valid_a#11 = phi( main::@4/main::valid_a#12 )
  main::max#7 = phi( main::@4/main::max#1 )
  main::min#6 = phi( main::@4/main::min#7 )
  main::ch#7 = phi( main::@4/main::ch#1 )
  main::count_b#4 = phi( main::@4/main::count_b#6 )
  main::count_b#2 = ++ main::count_b#4
  to:main::@5
main::@6: scope:[main]  from main::@5 main::@9
  main::total#21 = phi( main::@5/main::total#24, main::@9/main::total#25 )
  main::invalid_b#12 = phi( main::@5/main::invalid_b#14, main::@9/main::invalid_b#15 )
  main::valid_b#12 = phi( main::@5/main::valid_b#14, main::@9/main::valid_b#15 )
  main::count_b#10 = phi( main::@5/main::count_b#11, main::@9/main::count_b#12 )
  main::invalid_a#7 = phi( main::@5/main::invalid_a#9, main::@9/main::invalid_a#10 )
  main::valid_a#7 = phi( main::@5/main::valid_a#9, main::@9/main::valid_a#10 )
  main::max#4 = phi( main::@5/main::max#5, main::@9/main::max#6 )
  main::min#3 = phi( main::@5/main::min#4, main::@9/main::min#5 )
  main::count_a#4 = phi( main::@5/main::count_a#0, main::@9/main::count_a#6 )
  main::ch#4 = phi( main::@5/main::ch#5, main::@9/main::ch#6 )
  main::$18 = 0 != *main::pwd
  if(main::$18) goto main::@7
  to:main::@8
main::@7: scope:[main]  from main::@6
  main::total#29 = phi( main::@6/main::total#21 )
  main::invalid_b#20 = phi( main::@6/main::invalid_b#12 )
  main::valid_b#20 = phi( main::@6/main::valid_b#12 )
  main::count_b#14 = phi( main::@6/main::count_b#10 )
  main::invalid_a#15 = phi( main::@6/main::invalid_a#7 )
  main::valid_a#14 = phi( main::@6/main::valid_a#7 )
  main::max#9 = phi( main::@6/main::max#4 )
  main::min#9 = phi( main::@6/main::min#3 )
  main::count_a#5 = phi( main::@6/main::count_a#4 )
  main::ch#2 = phi( main::@6/main::ch#4 )
  main::$11 = *main::pwd == main::ch#2
  main::$12 = ! main::$11
  if(main::$12) goto main::@9
  to:main::@10
main::@8: scope:[main]  from main::@6
  main::total#18 = phi( main::@6/main::total#21 )
  main::invalid_b#10 = phi( main::@6/main::invalid_b#12 )
  main::valid_b#10 = phi( main::@6/main::valid_b#12 )
  main::count_b#9 = phi( main::@6/main::count_b#10 )
  main::invalid_a#5 = phi( main::@6/main::invalid_a#7 )
  main::valid_a#5 = phi( main::@6/main::valid_a#7 )
  main::max#2 = phi( main::@6/main::max#4 )
  main::min#2 = phi( main::@6/main::min#3 )
  main::count_a#2 = phi( main::@6/main::count_a#4 )
  main::$13 = main::count_a#2 >= main::min#2
  main::$14 = main::count_a#2 <= main::max#2
  main::$15 = main::$13 && main::$14
  if(main::$15) goto main::@12
  to:main::@11
main::@9: scope:[main]  from main::@10 main::@7
  main::total#25 = phi( main::@10/main::total#28, main::@7/main::total#29 )
  main::invalid_b#15 = phi( main::@10/main::invalid_b#19, main::@7/main::invalid_b#20 )
  main::valid_b#15 = phi( main::@10/main::valid_b#19, main::@7/main::valid_b#20 )
  main::count_b#12 = phi( main::@10/main::count_b#13, main::@7/main::count_b#14 )
  main::invalid_a#10 = phi( main::@10/main::invalid_a#14, main::@7/main::invalid_a#15 )
  main::valid_a#10 = phi( main::@10/main::valid_a#13, main::@7/main::valid_a#14 )
  main::max#6 = phi( main::@10/main::max#8, main::@7/main::max#9 )
  main::min#5 = phi( main::@10/main::min#8, main::@7/main::min#9 )
  main::count_a#6 = phi( main::@10/main::count_a#1, main::@7/main::count_a#5 )
  main::ch#6 = phi( main::@10/main::ch#8, main::@7/main::ch#2 )
  main::pwd = ++ main::pwd
  to:main::@6
main::@10: scope:[main]  from main::@7
  main::total#28 = phi( main::@7/main::total#29 )
  main::invalid_b#19 = phi( main::@7/main::invalid_b#20 )
  main::valid_b#19 = phi( main::@7/main::valid_b#20 )
  main::count_b#13 = phi( main::@7/main::count_b#14 )
  main::invalid_a#14 = phi( main::@7/main::invalid_a#15 )
  main::valid_a#13 = phi( main::@7/main::valid_a#14 )
  main::max#8 = phi( main::@7/main::max#9 )
  main::min#8 = phi( main::@7/main::min#9 )
  main::ch#8 = phi( main::@7/main::ch#2 )
  main::count_a#3 = phi( main::@7/main::count_a#5 )
  main::count_a#1 = ++ main::count_a#3
  to:main::@9
main::@12: scope:[main]  from main::@8
  main::invalid_a#24 = phi( main::@8/main::invalid_a#5 )
  main::total#15 = phi( main::@8/main::total#18 )
  main::invalid_b#8 = phi( main::@8/main::invalid_b#10 )
  main::valid_b#8 = phi( main::@8/main::valid_b#10 )
  main::count_b#8 = phi( main::@8/main::count_b#9 )
  main::valid_a#3 = phi( main::@8/main::valid_a#5 )
  main::valid_a#1 = ++ main::valid_a#3
  to:main::@13
main::@11: scope:[main]  from main::@8
  main::valid_a#21 = phi( main::@8/main::valid_a#5 )
  main::total#14 = phi( main::@8/main::total#18 )
  main::invalid_b#7 = phi( main::@8/main::invalid_b#10 )
  main::valid_b#7 = phi( main::@8/main::valid_b#10 )
  main::count_b#7 = phi( main::@8/main::count_b#9 )
  main::invalid_a#3 = phi( main::@8/main::invalid_a#5 )
  main::invalid_a#1 = ++ main::invalid_a#3
  to:main::@13
main::@13: scope:[main]  from main::@11 main::@12
  main::invalid_a#23 = phi( main::@11/main::invalid_a#1, main::@12/main::invalid_a#24 )
  main::valid_a#19 = phi( main::@11/main::valid_a#21, main::@12/main::valid_a#1 )
  main::total#11 = phi( main::@11/main::total#14, main::@12/main::total#15 )
  main::invalid_b#5 = phi( main::@11/main::invalid_b#7, main::@12/main::invalid_b#8 )
  main::valid_b#5 = phi( main::@11/main::valid_b#7, main::@12/main::valid_b#8 )
  main::count_b#5 = phi( main::@11/main::count_b#7, main::@12/main::count_b#8 )
  main::$16 = main::count_b#5 == 1
  if(main::$16) goto main::@14
  to:main::@18
main::@14: scope:[main]  from main::@13
  main::invalid_b#31 = phi( main::@13/main::invalid_b#5 )
  main::invalid_a#20 = phi( main::@13/main::invalid_a#23 )
  main::valid_a#15 = phi( main::@13/main::valid_a#19 )
  main::total#7 = phi( main::@13/main::total#11 )
  main::valid_b#3 = phi( main::@13/main::valid_b#5 )
  main::valid_b#1 = ++ main::valid_b#3
  to:main::@15
main::@18: scope:[main]  from main::@13
  main::valid_b#29 = phi( main::@13/main::valid_b#5 )
  main::invalid_a#21 = phi( main::@13/main::invalid_a#23 )
  main::valid_a#16 = phi( main::@13/main::valid_a#19 )
  main::total#8 = phi( main::@13/main::total#11 )
  main::invalid_b#3 = phi( main::@13/main::invalid_b#5 )
  main::invalid_b#1 = ++ main::invalid_b#3
  to:main::@15
main::@15: scope:[main]  from main::@14 main::@18
  main::invalid_b#30 = phi( main::@14/main::invalid_b#31, main::@18/main::invalid_b#1 )
  main::valid_b#28 = phi( main::@14/main::valid_b#1, main::@18/main::valid_b#29 )
  main::invalid_a#16 = phi( main::@14/main::invalid_a#20, main::@18/main::invalid_a#21 )
  main::valid_a#8 = phi( main::@14/main::valid_a#15, main::@18/main::valid_a#16 )
  main::total#4 = phi( main::@14/main::total#7, main::@18/main::total#8 )
  main::total#1 = ++ main::total#4
  main::pwd = ++ main::pwd
  to:main::@1
main::@19: scope:[main]  from main::@19 main::@36
  to:main::@19
main::@return: scope:[main]  from
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  conio_cursor_x = 0
  conio_cursor_y = 0
  conio_line_text = CONIO_SCREEN_TEXT
  conio_line_color = CONIO_SCREEN_COLORS
  conio_textcolor = CONIO_TEXTCOLOR_DEFAULT
  conio_scroll_enable = 1
  call conio_c64_init
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  to:__start::@1
__start::@1: scope:[__start]  from __start::@2
  call main
  to:__start::@3
__start::@3: scope:[__start]  from __start::@1
  to:__start::@return
__start::@return: scope:[__start]  from __start::@3
  return 
  to:@return

SYMBOL TABLE SSA
__constant char BINARY = 2
__constant char * const COLORRAM = (char *)$d800
__constant char * const CONIO_SCREEN_COLORS = COLORRAM
__constant char * const CONIO_SCREEN_TEXT = DEFAULT_SCREEN
__constant const char CONIO_TEXTCOLOR_DEFAULT = LIGHT_BLUE
__constant char DECIMAL = $a
__constant char * const DEFAULT_SCREEN = (char *)$400
__constant char DIGITS[] = "0123456789abcdef"z
__constant char HEXADECIMAL = $10
__constant const char LIGHT_BLUE = $e
__constant char OCTAL = 8
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN = 0
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_BINARY_VALUES[] = { $8000, $4000, $2000, $1000, $800, $400, $200, $100, $80, $40, $20, $10, 8, 4, 2 }
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant unsigned int RADIX_HEXADECIMAL_VALUES[] = { $1000, $100, $10 }
__constant unsigned int RADIX_OCTAL_VALUES[] = { $8000, $1000, $200, $40, 8 }
__constant char SIZEOF_UNSIGNED_INT = 2
__constant unsigned int STACK_BASE = $103
void __start()
void clrscr()
bool clrscr::$0
bool clrscr::$1
char clrscr::c
char clrscr::c#0
char clrscr::c#1
char clrscr::c#2
char clrscr::c#3
char clrscr::l
char clrscr::l#0
char clrscr::l#1
char clrscr::l#2
char clrscr::l#3
char clrscr::l#4
char clrscr::l#5
char clrscr::l#6
char *clrscr::line_cols
char *clrscr::line_cols#0
char *clrscr::line_cols#1
char *clrscr::line_cols#2
char *clrscr::line_cols#3
char *clrscr::line_cols#4
char *clrscr::line_cols#5
char *clrscr::line_cols#6
char *clrscr::line_text
char *clrscr::line_text#0
char *clrscr::line_text#1
char *clrscr::line_text#2
char *clrscr::line_text#3
char *clrscr::line_text#4
char *clrscr::line_text#5
char *clrscr::line_text#6
void conio_c64_init()
bool conio_c64_init::$0
bool conio_c64_init::$1
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *)$d6
char conio_c64_init::line
char conio_c64_init::line#0
char conio_c64_init::line#1
char conio_c64_init::line#2
__loadstore char conio_cursor_x
__loadstore char conio_cursor_y
__loadstore char *conio_line_color
__loadstore char *conio_line_text
__loadstore char conio_scroll_enable
__loadstore char conio_textcolor
__stackcall void cputc(char c)
bool cputc::$0
bool cputc::$1
bool cputc::$2
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0
char cputc::c#1
void cputln()
void cscroll()
bool cscroll::$0
bool cscroll::$1
bool cscroll::$7
void gotoxy(char x , char y)
bool gotoxy::$0
bool gotoxy::$1
bool gotoxy::$2
bool gotoxy::$3
char *gotoxy::$5
char *gotoxy::$6
unsigned int gotoxy::$7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0
char gotoxy::x
char gotoxy::x#0
char gotoxy::x#1
char gotoxy::x#2
char gotoxy::x#3
char gotoxy::x#4
char gotoxy::x#5
char gotoxy::x#6
char gotoxy::y
char gotoxy::y#0
char gotoxy::y#1
char gotoxy::y#2
char gotoxy::y#3
char gotoxy::y#4
char gotoxy::y#5
char gotoxy::y#6
void main()
bool main::$10
bool main::$11
bool main::$12
bool main::$13
bool main::$14
bool main::$15
bool main::$16
bool main::$17
bool main::$18
number main::$5
bool main::$6
bool main::$7
number main::$8
bool main::$9
char main::ch
char main::ch#0
char main::ch#1
char main::ch#2
char main::ch#3
char main::ch#4
char main::ch#5
char main::ch#6
char main::ch#7
char main::ch#8
char main::count_a
char main::count_a#0
char main::count_a#1
char main::count_a#2
char main::count_a#3
char main::count_a#4
char main::count_a#5
char main::count_a#6
char main::count_b
char main::count_b#0
char main::count_b#1
char main::count_b#10
char main::count_b#11
char main::count_b#12
char main::count_b#13
char main::count_b#14
char main::count_b#2
char main::count_b#3
char main::count_b#4
char main::count_b#5
char main::count_b#6
char main::count_b#7
char main::count_b#8
char main::count_b#9
unsigned int main::invalid_a
unsigned int main::invalid_a#0
unsigned int main::invalid_a#1
unsigned int main::invalid_a#10
unsigned int main::invalid_a#11
unsigned int main::invalid_a#12
unsigned int main::invalid_a#13
unsigned int main::invalid_a#14
unsigned int main::invalid_a#15
unsigned int main::invalid_a#16
unsigned int main::invalid_a#17
unsigned int main::invalid_a#18
unsigned int main::invalid_a#19
unsigned int main::invalid_a#2
unsigned int main::invalid_a#20
unsigned int main::invalid_a#21
unsigned int main::invalid_a#22
unsigned int main::invalid_a#23
unsigned int main::invalid_a#24
unsigned int main::invalid_a#3
unsigned int main::invalid_a#4
unsigned int main::invalid_a#5
unsigned int main::invalid_a#6
unsigned int main::invalid_a#7
unsigned int main::invalid_a#8
unsigned int main::invalid_a#9
unsigned int main::invalid_b
unsigned int main::invalid_b#0
unsigned int main::invalid_b#1
unsigned int main::invalid_b#10
unsigned int main::invalid_b#11
unsigned int main::invalid_b#12
unsigned int main::invalid_b#13
unsigned int main::invalid_b#14
unsigned int main::invalid_b#15
unsigned int main::invalid_b#16
unsigned int main::invalid_b#17
unsigned int main::invalid_b#18
unsigned int main::invalid_b#19
unsigned int main::invalid_b#2
unsigned int main::invalid_b#20
unsigned int main::invalid_b#21
unsigned int main::invalid_b#22
unsigned int main::invalid_b#23
unsigned int main::invalid_b#24
unsigned int main::invalid_b#25
unsigned int main::invalid_b#26
unsigned int main::invalid_b#27
unsigned int main::invalid_b#28
unsigned int main::invalid_b#29
unsigned int main::invalid_b#3
unsigned int main::invalid_b#30
unsigned int main::invalid_b#31
unsigned int main::invalid_b#4
unsigned int main::invalid_b#5
unsigned int main::invalid_b#6
unsigned int main::invalid_b#7
unsigned int main::invalid_b#8
unsigned int main::invalid_b#9
char main::max
char main::max#0
char main::max#1
char main::max#2
char main::max#3
char main::max#4
char main::max#5
char main::max#6
char main::max#7
char main::max#8
char main::max#9
char main::min
char main::min#0
char main::min#1
char main::min#10
char main::min#2
char main::min#3
char main::min#4
char main::min#5
char main::min#6
char main::min#7
char main::min#8
char main::min#9
__loadstore char * volatile main::pwd
__constant char main::s[$f] = "rule a valid: "
__constant char main::s1[$a] = " invalid:"
__constant char main::s2[8] = " total:"
__constant char main::s3[2] = "
"
__constant char main::s4[$f] = "rule b valid: "
__constant char main::s5[$a] = " invalid:"
__constant char main::s6[8] = " total:"
__constant char main::s7[2] = "
"
unsigned int main::total
unsigned int main::total#0
unsigned int main::total#1
unsigned int main::total#10
unsigned int main::total#11
unsigned int main::total#12
unsigned int main::total#13
unsigned int main::total#14
unsigned int main::total#15
unsigned int main::total#16
unsigned int main::total#17
unsigned int main::total#18
unsigned int main::total#19
unsigned int main::total#2
unsigned int main::total#20
unsigned int main::total#21
unsigned int main::total#22
unsigned int main::total#23
unsigned int main::total#24
unsigned int main::total#25
unsigned int main::total#26
unsigned int main::total#27
unsigned int main::total#28
unsigned int main::total#29
unsigned int main::total#3
unsigned int main::total#30
unsigned int main::total#31
unsigned int main::total#32
unsigned int main::total#33
unsigned int main::total#4
unsigned int main::total#5
unsigned int main::total#6
unsigned int main::total#7
unsigned int main::total#8
unsigned int main::total#9
unsigned int main::valid_a
unsigned int main::valid_a#0
unsigned int main::valid_a#1
unsigned int main::valid_a#10
unsigned int main::valid_a#11
unsigned int main::valid_a#12
unsigned int main::valid_a#13
unsigned int main::valid_a#14
unsigned int main::valid_a#15
unsigned int main::valid_a#16
unsigned int main::valid_a#17
unsigned int main::valid_a#18
unsigned int main::valid_a#19
unsigned int main::valid_a#2
unsigned int main::valid_a#20
unsigned int main::valid_a#21
unsigned int main::valid_a#22
unsigned int main::valid_a#3
unsigned int main::valid_a#4
unsigned int main::valid_a#5
unsigned int main::valid_a#6
unsigned int main::valid_a#7
unsigned int main::valid_a#8
unsigned int main::valid_a#9
unsigned int main::valid_b
unsigned int main::valid_b#0
unsigned int main::valid_b#1
unsigned int main::valid_b#10
unsigned int main::valid_b#11
unsigned int main::valid_b#12
unsigned int main::valid_b#13
unsigned int main::valid_b#14
unsigned int main::valid_b#15
unsigned int main::valid_b#16
unsigned int main::valid_b#17
unsigned int main::valid_b#18
unsigned int main::valid_b#19
unsigned int main::valid_b#2
unsigned int main::valid_b#20
unsigned int main::valid_b#21
unsigned int main::valid_b#22
unsigned int main::valid_b#23
unsigned int main::valid_b#24
unsigned int main::valid_b#25
unsigned int main::valid_b#26
unsigned int main::valid_b#27
unsigned int main::valid_b#28
unsigned int main::valid_b#29
unsigned int main::valid_b#3
unsigned int main::valid_b#4
unsigned int main::valid_b#5
unsigned int main::valid_b#6
unsigned int main::valid_b#7
unsigned int main::valid_b#8
unsigned int main::valid_b#9
void * memcpy(void *destination , void *source , unsigned int num)
bool memcpy::$1
char *memcpy::$2
void *memcpy::destination
void *memcpy::destination#0
void *memcpy::destination#1
void *memcpy::destination#2
void *memcpy::destination#3
void *memcpy::destination#4
void *memcpy::destination#5
char *memcpy::dst
char *memcpy::dst#0
char *memcpy::dst#1
char *memcpy::dst#2
char *memcpy::dst#3
unsigned int memcpy::num
unsigned int memcpy::num#0
unsigned int memcpy::num#1
unsigned int memcpy::num#2
void *memcpy::return
void *memcpy::return#0
void *memcpy::return#1
void *memcpy::return#2
void *memcpy::return#3
void *memcpy::return#4
void *memcpy::source
void *memcpy::source#0
void *memcpy::source#1
void *memcpy::source#2
char *memcpy::src
char *memcpy::src#0
char *memcpy::src#1
char *memcpy::src#2
char *memcpy::src#3
char *memcpy::src_end
char *memcpy::src_end#0
char *memcpy::src_end#1
char *memcpy::src_end#2
void * memset(void *str , char c , unsigned int num)
bool memset::$0
bool memset::$1
bool memset::$3
char *memset::$4
char memset::c
char memset::c#0
char memset::c#1
char memset::c#2
char memset::c#3
char memset::c#4
char memset::c#5
char *memset::dst
char *memset::dst#0
char *memset::dst#1
char *memset::dst#2
char *memset::dst#3
char *memset::end
char *memset::end#0
char *memset::end#1
char *memset::end#2
unsigned int memset::num
unsigned int memset::num#0
unsigned int memset::num#1
unsigned int memset::num#2
unsigned int memset::num#3
void *memset::return
void *memset::return#0
void *memset::return#1
void *memset::return#2
void *memset::return#3
void *memset::return#4
void *memset::str
void *memset::str#0
void *memset::str#1
void *memset::str#2
void *memset::str#3
void *memset::str#4
void *memset::str#5
void *memset::str#6
__constant char *passwords = "4-6 b: bbbdbtbbbj@1-6 g: ggvggbgggstg@1-4 s: lssss@13-14 v: hvvcvvvvvvvvvsvvv@3-5 m: lcmmm@3-4 t: stht@5-6 b: dbkbhb@4-7 p: ppfppppq@4-5 j: jjjjj@3-12 s: sskssssssssss@14-15 z: zrndzbmrzzpzzqzj@12-18 l: tllllllllllllplllbl@8-10 b: bdbvqbtbrb@1-3 c: tcqccc@1-2 n: nbnj@5-7 c: ccccccccc@9-10 l: hpmslrlgll@6-9 n: nnnnnnnnb@6-10 r: rmzjlrsxkbw@6-8 r: bzqnnrrrj@4-14 c: mfffvcbtchzrqcn@1-6 f: ffffffffffffff@2-5 f: wxtkf@8-12 b: rdcbbjbzbbpb@8-18 d: ddtdddddddwvdfdsdd@5-8 s: sssmsgpgszms@6-11 x: xxxxxvxxxxxt@17-18 n: jhrnnzpxzngfqrntmnc@13-14 r: rrrmrrrrlrrshvrrr@4-5 h: hhhhrhh@8-10 d: dgwtdsxnncd@9-13 q: qqbpqmqgmqwqbqqqxcgq@2-5 g: gjjcpgg@6-12 t: ttttvttttttrtt@3-9 h: hhhhhhhhsh@15-16 p: ppppsppppppppppz@2-5 c: csccctcccc@11-14 p: pppppppppppppnp@8-9 j: jvbjjjjrjbjj@8-16 b: qklbmbntmvbhxplbbcb@12-13 j: jjjjsjmfjjjkhj@2-13 t: llckxhfmtznptndcsx@6-8 x: dxxxxvxxtt@3-4 d: ddht@3-4 t: ttdtt@11-12 r: rrrrrrrrrrrd@9-10 h: hhhhhhhhgh@3-16 h: hhhhhhhhhhhhhhnhhh@10-11 h: hxhhhdhhhsh@1-7 n: jnfnjnn@3-4 m: msmnpmpf@15-17 t: tpdtttgltvtttztlv@7-10 v: vvpsvpgjzvvvvjs@1-5 p: pxppg@2-7 w: jwhgkgvxcv@13-14 m: pxxmjznmrzdsbbmmfj@1-4 d: ddddd@14-16 r: rrrrrrrrrrrrrwrr@2-5 l: klbtzzlrlslgswhljtq@6-12 c: qccrcpccccccdccccc@2-18 l: llllllllvllllllllkll@18-20 z: zzzzzzzzszqzwzrzzzzn@5-16 c: cbccclcfcncvqztqc@7-11 m: fnwmtsmgpxncnr@6-7 h: hpjrhbhkshnchbhpph@11-12 s: ssssssssssps@6-9 s: jfsmmssssqz@1-15 l: llllllllllllllbll@2-6 g: gggggwgggpggggggg@6-9 j: jjjpjjjjn@9-13 n: nnnnnnnnnnnnnn@10-13 t: cgntllxnvpkjwxtght@2-11 f: xcftbcdcndkgm@10-13 j: jjjjjjjjjjjjvj@9-17 f: rfrffnsffxqflbffvv@6-11 k: kkkkkrwkqckmk@5-7 q: zfqqqqqn@12-13 c: cfcccvccccckccccv@5-15 z: xhzzzzzzzzfzzknzz@18-19 f: jkfksvmfjbdffffffff@8-11 h: hhhhmhhkhsfdg@14-16 s: ssssssdjssssssssssss@15-16 t: jtmjhsxqqmmthmtttm@5-7 h: hkbjhjhh@2-6 n: knprnfnfhhrcnk@3-4 w: snwd@5-11 w: wwwwnwwwwwwwwwwww@2-12 k: bkqjghpktfsk@14-15 v: vvvsvvvvvvvvvxv@8-9 w: fxwwwwwscwl@9-15 c: sbjvvsmdvqknbccxxx@6-15 t: tpwjtdnnldthxvn@13-15 t: tttttrzmzttjttt@3-11 m: mmvmlmmmwfmjx@13-14 s: gskssssssscssssqjssl@5-10 l: bfnmqlldllp@17-18 q: qkwqqqqqqqqqqqrqqqqq@2-5 r: rsvrrq@3-4 j: jjjdj@3-4 m: mtmk@8-9 k: vsvkvkrkc@10-12 t: ttttttcttttgttt@3-4 n: trzw@5-11 q: qqmpsqbxkqq@13-15 s: sqsssnmwqszfsmv@5-6 b: bbbbzvb@5-13 p: pjjhpnqpzpmpfpfp@4-5 l: mgnwlrw@1-7 k: fkzxwkj@1-10 q: qgxqqqqqqg@8-9 s: ssqssssfss@7-8 c: xxcscclccdvcmqcc@2-6 d: xdlmzdzxrpmlnt@3-9 s: sssssnssgbs@7-10 h: sblrrhqrhh@3-5 n: xnndnnnfnw@9-10 l: vllllqlllhllljxlp@2-5 d: ddxzbxk@10-14 m: mmmmmmmmmmdmmmmsmmm@1-2 f: ffffw@14-15 g: wdjhplhrbcxdgpnt@1-2 l: klllllll@10-11 k: ckkhkkvkkkmkkjkwkkwk@7-9 f: ffrhdvftfpjfqffhnfsf@4-5 c: kkjksrmkccg@5-9 r: rrrrhrrrrr@5-6 p: pppppth@4-10 t: kpfwzjtchtbndblrvst@1-5 l: mllllllnllll@13-16 r: rrrvrrrrrrrrzrrg@17-18 x: xxfxxxxxxxxsxxxxxsxx@8-11 w: rwbnqrngcvpgwwww@4-8 z: zzzzzzzzzz@4-9 b: bbvvbbbbr@2-5 x: qlfhxkx@3-8 t: wvptttttttt@1-3 m: hmmmmqmm@17-19 h: nhhhdvhnhrhhhhnhmdh@11-12 s: psszbdpsgfks@6-7 s: sssssshs@10-15 l: mnkdvnvmxljjtggwcl@1-13 j: qjjjjjjjjjjjdj@4-9 l: jxvkwhlmlhdtgwvgsdzz@5-9 c: ccfghhccccgc@10-11 v: vvvvvvvvvvv@7-8 t: cntwzshkzvmrnnkr@1-11 l: tllllllltllll@15-17 l: lllglvctrvllzkllt@3-5 n: ncnnp@2-3 q: jsqqh@4-10 h: hhhhhhhhhvh@16-18 b: bbnbbbbbtbbkktbbzdr@4-6 g: kbggdhgggggggggggfc@12-13 p: cpvcppqpplwpt@5-10 h: fvhhbrhpghchhhhhh@2-5 b: bbvzn@14-15 x: xxxbxnwxxxxzxxh@13-15 n: nnfgdglfnntnjqn@2-4 c: cfccc@3-5 v: vrvvzdvv@17-19 v: vvvvvvvvvvvvvvvvvvsv@1-20 h: hhhhhhhhhhqhhhhhhhhh@4-15 q: qqqtqqqqqqqqqqqqlq@11-13 h: hhkhvhhhhwhgk@8-11 p: ppvppppppptspf@8-9 m: mmmpmmkmdmpkspmg@1-7 m: lcmvggm@6-12 v: tvfstvvpvzsvcv@8-9 n: nnnqnnwrrdzlmnwlznrn@1-5 s: msssms@1-3 v: vpdzvdvgv@6-9 g: drgrfggcg@6-16 x: djpxhxvncxfghsxx@1-3 b: sjbwwxbvtvbkt@6-8 c: cccccstccjhv@1-11 q: qqqpqqqqqqwqqq@9-11 m: vsbmmmmmmmqmmsm@2-7 g: gqggggggg@2-3 m: mrgvm@6-7 c: cccpcfcc@6-10 w: swbngwswnxnww@13-14 r: rrrrrrrrrrwrrgrdr@3-9 v: vctxhxtfvq@2-9 r: jrrcslgplcprlvgthg@2-3 n: hnnnsxclvdj@10-11 h: zrhghhqhgzh@15-18 z: zzzlzzzzzzzzpzqzpzzz@3-8 f: fffffrfl@1-4 l: rllllfl@1-2 n: nnnnnvtnv@17-19 z: zzzzzzzzzzzzzzzzzzqz@13-15 n: nnnznnnnnnznnnn@2-5 c: gcccncjmsncfcntjc@8-9 h: hhhhhhhhbpsfh@7-11 r: lzvvlbrgjgrr@5-11 x: xxxxqxxxxxxx@4-7 p: gqpkmppzpsmtzhfdfpl@3-4 j: jjdjdg@14-16 z: zzzzzzzgjzzzzpzf@1-2 n: nnnvnwnnnnh@4-5 z: jhzzz@5-7 k: kkkkkkf@8-18 z: khzzrzjzmzzvzzpcclm@5-10 m: kjrhwkhmsm@10-16 v: vvvvvvvvvvvvvvvwv@9-10 l: xhvjsmllkcdtldfxlw@8-10 p: ppjvppbpqhpwhppgbp@4-6 m: jlmkhm@1-3 k: gvpklkkkk@15-16 g: ggjggggvgmgtpgcg@1-4 j: jbjwj@1-3 x: xxxpxxdxxhfx@14-16 v: vxmhhdvvfjjqwhtv@6-7 l: lnkchzlwxlp@3-4 v: vvvcv@13-14 p: pbqpppppzbmppc@6-12 p: glqwzprpqbqf@6-12 l: lllllglllllll@8-9 n: nnsnnnndcn@6-8 p: prwppppp@1-10 q: dqqqqqqqqjq@12-16 w: kwtbdnjqmwwxhwcwswkl@11-14 r: rrnjghfrrrshlrq@2-14 w: vwbbvcvgnxdmxl@7-8 g: sqmggkgslkwlvggg@1-6 q: tqqqqqq@2-3 b: bbbr@7-9 b: jnwbswfpbn@4-5 n: nnlct@3-11 s: ssssssssssp@2-6 f: wjlpwf@5-10 g: gggghqgqgb@1-3 p: ppdg@4-7 j: pjnkjjljjj@1-2 v: ghmjzxmtxjxnv@6-14 k: klgdzfmgdwhqdkhcnzm@6-11 z: tgzpzzzzztc@2-12 b: cxsmjbdgdnrb@4-6 v: lxdvvh@3-8 l: pnpdnrll@7-8 m: mzmswvmmbxmzlmwhdvq@13-14 s: khzssssssssszsssss@10-18 d: dmfdlgcxdbzznbrlqn@13-14 j: jjjjjjjjjjjjdpjj@15-17 j: jjjjjjjjjwjsqjwjj@10-15 x: xxfxkzxxhxxxxxvxxw@7-14 c: wcccwcmmcccccxhcccc@2-7 z: zmzvfzlszr@7-8 k: jjkrklrkkv@8-9 r: rrrrrjrtz@2-3 w: tvws@1-5 b: bbbjm@1-2 q: tqqjf@5-10 j: wlgjghjhjljwtpcdkqwk@2-5 c: dzpkc@5-6 m: mbvmkm@4-15 k: stjkjvvxrmwdpkwsjqvc@6-9 h: hwkgjplmhxwgvnbhwh@12-13 z: zzzzzzzzzzzzz@7-8 q: qqqqqqqqq@2-5 c: clcwmccczclcccc@2-5 l: jlcgfbflklvpfqxtwgg@5-7 n: nnnnnnvnnnnnn@3-5 f: gfktfffqvgltsbff@10-16 p: jppbttppzpqppppp@2-3 m: zmdm@4-6 j: zsmtjjdnrpp@17-18 j: hvvmrkfnnkvrjtjhjj@12-15 d: dtddddddddtwxgld@8-12 r: rdzrwfgrmxwttknxz@6-7 s: rssbktxsgd@11-13 d: ddddmwddddxddndc@3-6 p: ppcpspfp@12-15 j: jjjjjjgjjjjcjlzj@8-12 v: tgjkwfbsxzzvvpmfs@6-7 z: trbfbdz@4-6 v: vvvvvpvv@8-16 p: pnvppdpjppppppph@8-9 z: lzzzzpdzk@1-4 t: qttzz@2-3 d: dhdd@5-8 m: mmmkmmxmkj@2-12 f: hfhzkwdmrlqvfkn@5-6 h: hhhhhph@14-15 b: bbbbxbbbbbbbbbh@2-3 v: vvcj@12-19 d: ddvdwwqdddcdtdmwdqp@3-4 s: ssjssssssss@2-6 c: wzzxqcdcnlgcph@11-12 j: jjdrcjzjkjcs@4-9 z: bzzzzzzxzz@2-8 b: gjbfkxhb@1-3 c: cpksst@1-5 h: hhjhh@14-15 j: jjjjjjjjjjjjjjr@8-9 n: pcndxcfknfbnnls@10-13 k: kkkqzkwbkkkrtn@4-5 r: rzrrrnrj@13-15 p: ppppppppppppppt@3-6 j: fjqqzzzjm@2-9 m: zmjhctkmf@5-6 s: ssmjss@3-4 c: jlfd@8-12 d: qbddfhnddzgvddddd@6-7 p: xfppppcppppxgp@8-13 s: sssssssfssssssss@13-17 g: xskktsjxlvgfxtzzgfj@2-4 q: qqtwfqqnkvbvbhzs@1-5 j: cjmjs@4-5 c: tvccnc@3-14 m: kkfhmnkkmztxtmn@11-15 x: xxxxxpxmxxvbxxxvx@9-11 l: nhgzwmmrkqhblnk@7-10 x: xxxxxdmxxxxxxxx@13-14 v: vvvvvvpvvvjvvcvv@16-17 n: nnnnqnnbnnnnnnnpn@3-4 j: jvjj@15-16 q: zlqsgvpztknqjqqwqvf@3-4 s: sssrsssdss@11-13 g: ggqggmggswggdk@1-4 t: jmtzttztqt@2-3 v: vvvv@11-13 g: cgjgxgggkgbggxg@4-6 g: ggggqlhgmz@8-15 g: prvxwzkvdhgkjlg@6-9 g: gggggnsjlg@12-14 p: mmvlpzkmpgtpvj@7-10 k: kkkxkkjkkkdkkkp@14-16 b: zmztqsrgvjjmswzkbnk@1-2 x: xxbxxxxhx@2-5 l: tlhsx@3-5 x: xxxxn@4-12 c: vdnmtmqwnxkcldc@4-8 x: xxxxjglx@5-13 s: vsssspszssssnsss@3-6 k: kkhkkkknb@3-5 t: pttqtwnprt@10-14 m: ttjqvzmgmmjqzkd@1-5 b: bbbbpbbb@10-15 d: wdjrhvfngdtlkdl@6-7 w: trxwdwww@2-4 n: snxqlgtsmdnnjgwrgmms@16-18 l: klslpljllqlcslqqll@4-7 t: tttwzttjt@9-10 f: ffffffffwf@8-15 h: trhgxjchhxvvhqp@8-12 w: wwwwwwwqwwwg@12-13 x: xxxxxxxxsffqlxx@5-7 k: kkkklkkkktkk@1-7 m: wkmmqmmhf@12-13 h: mhhchwhhhzhhcvh@7-11 k: kkkkkkwkkkgkk@4-6 l: hdlbll@8-12 v: fvvvvvvvrvvv@2-9 h: hzhhhhhhhhhhhhr@6-8 b: qbqjpbbbdsshv@2-3 h: hwhl@4-7 l: mdllxjgdw@3-9 f: rwffzfkpwbzp@3-5 t: ttnttt@7-10 c: mpcccpndqc@6-7 h: fhhhljh@2-7 v: pnvzcns@1-3 v: vvgv@5-9 s: ssssshsspsssssss@4-6 j: mjjjjq@5-14 h: hwbqghmvmmnvhhrqmj@5-6 s: wctjsh@7-8 s: sssscsjs@14-17 v: vvvvvvvvvvvvvvvvv@14-15 w: wxwwwwwwfwwwwsw@6-7 v: ksvvvlpvv@7-18 s: cssstsvsscshsstsss@5-6 b: zzwbpm@6-7 r: bvtmpkxspskr@6-7 v: lvxrvqv@15-17 c: ccccccccccccccccccc@8-12 r: ghxpwhxcqjrr@6-10 k: kzbcdkndqm@5-6 s: tpsxss@1-5 p: qlrlp@4-8 q: qqqkqqqz@7-11 v: vgvsxvwvlxv@2-5 b: bgkbb@3-18 j: jjsplxjxgqjfjrjxjjlx@6-10 k: kxkhkkjkkrvkkk@7-16 t: ttttttzttttttttbtttt@1-7 l: ptzptslrjgwlfgwq@8-10 v: vvqvvvvvvvv@3-5 z: zzzhz@6-7 c: cbrctgc@5-16 l: llllxlllllllllllll@6-7 c: chxclqcdrh@1-10 c: jcmcccccwcccccjbvc@8-14 h: zhhvhhhhhhhhhv@4-7 n: rnnnnnfnnnnnvn@10-12 w: wwwwwwwsgtwww@5-8 c: cmbcctzcj@5-7 f: fffskrf@5-6 l: lllmzl@7-14 m: mmmmmmmmmmmmmmmmmmm@1-9 f: jfffffffzvffff@2-5 g: ggmng@16-17 x: xxxxxxxxxxxxxxxlx@4-10 n: npkgjcfnnnnn@1-13 d: bhkjgsnzxkdgwbdv@6-7 f: ncqfzff@7-10 h: hqhhhhhjhhh@2-4 v: vnvvv@1-6 w: thlmdwgwgtswvtx@3-7 d: ddlkhvfdnpbdr@1-4 q: qbfq@2-6 f: rzfmfrjgcfjk@10-16 b: bbbbblbbbkbbbbbbwqb@13-14 j: jjhcjnkgvrnwjp@5-12 l: lgqwvrlwcllllv@4-8 j: jjgpdjssspjfdbt@1-9 h: hhhhhhhhwhhh@4-6 p: psmppt@2-3 h: zhhhk@2-6 b: bbbbbmbbvb@7-9 z: zzzzzzgzdzz@8-9 d: ddgdmdwddd@2-6 s: nssssv@18-20 x: xxxxxxxxxxxxxxxxxvxx@9-10 m: dzckmrbhcmwvkcxmlx@10-11 v: vwvvvvwvvghvn@3-6 d: wcwxddjhnljfntj@13-15 v: vvvvvvvvvvvvcvc@1-5 x: xxfxfxxkx@7-8 w: wqzjzwwwtw@2-4 f: flgl@3-6 n: ncfngngdnm@5-7 k: kdkmbkkkkxk@5-6 x: xxvxth@5-6 r: rrhhzr@4-6 b: bbbrbbbbbmb@12-13 q: qqqqqqqqqzqkqp@6-14 n: mlbflnrbhlhpdrfln@9-12 q: qqqqqqqqqqqwq@3-4 k: rkncnbk@1-3 j: jjpj@8-9 v: vjvczrvvm@9-16 m: tmnmmmxmbmmmrtmmr@9-11 q: qqqqqzqqsjxq@3-5 h: hhhhcs@11-12 k: kkkkkkkkkkkvqk@11-12 x: xlxxxjjxxxpx@1-12 n: nngtnhlnjfnf@5-7 p: ppptppppp@13-14 l: lllmlflllhllpm@13-14 m: vdkmrdfzmkknmp@13-15 s: ssssssqssssscssss@5-11 h: hhhlxhhhhhhshh@10-11 s: ssssssssssgsssss@6-7 q: kqqqqmqnqq@8-13 l: llllllltlllljll@9-12 j: jjjjjjjjjjjlj@7-11 s: gstcncsssscssssss@4-6 x: lrtjfnhmpmxj@9-20 c: cttccccccnccclcccccc@1-8 w: cwwwwwwwwww@12-13 n: nnnnnnnngnnnnn@1-5 p: pfqwcpnppppwwpqppp@7-8 g: gggsgglghg@6-7 g: gggggggg@4-10 s: ssssssssssss@1-2 n: njsnnln@7-8 z: gzczzwdzkkzz@2-8 b: bbbwjfbh@6-8 r: rrrrbrrbr@2-5 k: lkkkkl@2-3 c: swcgjcm@2-10 t: ttttttttttt@12-13 l: lllllxllllllqhl@2-9 l: qtqxdpqqlwhqwlr@1-5 q: qqxrn@10-11 k: kkkkkkkkkckk@1-2 f: ffff@3-4 r: rrxr@8-9 p: lppppxpsp@2-5 s: ssstchlrds@11-15 m: mmmmmmmmmmmmmmmmm@14-17 k: kkkkkkkkkkgkkkktbkk@1-2 x: xlxx@9-10 w: wwcwptczwzzd@1-3 c: ccgcccccccccccccc@4-5 h: nhhhvh@8-16 l: hlllfllllmltlhlldl@4-5 w: wgwfw@6-15 p: pjpbfrmxqgkxkbqhj@12-17 l: llmtllnlllllllllnns@8-15 n: zjnxzndnznklxzjlx@6-9 r: wpsmstnkgtrmng@3-7 s: csvhxhsgvrsrn@10-15 h: hchhhdhkhghlhgsh@2-9 c: mzbmtccktc@3-4 x: xlzvxg@12-14 k: zmkskknwkkkmkkwkgkkk@4-9 r: vqrrrrdzpl@3-4 g: ggvbxg@5-8 q: xtrqrmqq@16-18 l: zllllllllllllllwlnll@6-7 s: zsqszss@3-4 g: wghgpg@1-6 z: hzzzzrz@3-8 h: hthfqtccnq@15-18 p: ppppppcpppppppnppppp@3-4 l: qplkdmjntlghjlpxlq@10-12 q: xzqkxdvgrqxqqzzxgjj@6-9 q: qqqvsvqqxq@12-13 g: shgcnjlgvcgqg@5-10 l: llklplllmlsl@3-12 l: vllqfzwnsqslpnvrbkh@14-16 g: gjggggggggggggbzcggg@5-11 m: ssmsmbnspmm@11-13 v: mkqvvvvvmcvvz@2-3 k: mkkchtzqsvkbclgxn@4-7 r: rphrrnrrqwknrktrgsg@6-10 z: vpjhzzzkqzjl@16-18 c: ccccccccccccccchccc@1-10 v: qvvvvzvvvvvv@5-7 j: jjrjjjj@14-16 l: zlgdrlqllgpllfhh@3-6 l: llmllll@3-4 l: smdl@4-11 h: kgqhcpvrbldrhbq@1-15 j: ljjjjjjjjjjjjjjj@7-14 c: ccccccccccccccc@2-10 v: vzvjvvvvvvvvv@4-9 p: flbpmqmhkpt@10-12 q: rtdrqmpcsqrhqqchqczw@16-19 w: vlwxgtmjwrzvqgdwbdw@8-15 c: gkcccslctcmszhc@3-7 f: hhffhbbtbwzw@4-9 s: msbsxssds@13-15 p: pppppppppcpppxldp@6-7 m: mmmmmqmm@11-12 m: mxmmzwmmmdqpmp@7-12 l: gncmgzxlqcllqgt@12-14 t: tttttttttttdtt@2-6 f: ffffffbrfffp@14-17 h: hhdhpphhhhhhkhhxqph@7-9 x: xxxxxxxxqxxxxxx@5-18 j: vlwgjljtljtrdbxjnjwm@5-7 n: jmncnsndnbwx@8-9 r: rrrrrrrrr@11-17 j: jjjjjjjjjjjjjjpjr@5-6 x: xxxxjt@13-15 l: nshmnjgzhmjdzvl@9-10 r: wmsvzxsrqnnhfr@8-11 k: kkkxxrkpktg@1-7 r: rrrrrrrfrrrjwrd@5-7 t: rztvtvplbrk@2-7 w: wwwwwwsw@1-2 g: sgggk@12-13 j: jjjjjwjjjjvvjjjrjs@1-2 c: cccccc@3-5 g: khgzr@9-16 b: bbbbbbcbsbbbbbbb@12-13 z: zzzzzzzzzszkz@4-5 r: rkrrrr@1-2 t: tgbqtddbmq@1-2 w: wkwwwww@14-15 q: qqdqqqqqqqqhqnb@6-7 r: rrrrrdmrr@8-9 j: jjjjjjjqhjjjjj@3-6 t: gwmlntffstzllvs@6-8 h: hhhhnhhhqh@9-11 w: cwcwwwwwgxwwbw@5-9 w: wwwwcwwww@8-12 k: snjmkkhrgkkzkkpskk@3-6 q: lvqjqlq@3-4 z: zzzn@9-12 t: dvmvhttxtmzhrr@3-7 k: kkkkkkskkkkkk@6-15 v: vqvvvdvvvvbvvvvvvvvv@3-4 z: jzzzzzdk@8-12 b: bbbbbbbbbbbs@3-9 m: nvhwmwgmmqkbmmmzb@8-10 r: npwjcgwrwcrx@1-5 r: rxdrr@6-9 p: ppppppsbkmppkp@1-4 j: jjjqjjjz@6-7 b: rblbbbbbbp@5-9 t: tttttttttf@8-9 c: czcccccccc@13-14 j: jjjbjjtbjjjjjj@3-8 p: pwppzqvp@3-12 m: mmzmmmmmmmmmmm@3-9 d: ddjddddddqddd@3-4 q: qqfq@6-14 m: mmmmmbmmmmwmmlmmmm@3-4 c: glgzc@6-7 t: ttttttt@1-4 s: sssbs@5-8 r: drrkrrrzrrrr@10-12 q: rvqfqqkllqqqlfrq@11-13 s: szsssssssssssss@8-11 t: tttttttsttvt@11-15 j: zjjjjjjjjjjjjjjjjj@2-4 s: dvfs@3-4 q: zhpq@10-11 c: cccccccccckc@5-11 h: pnrjhtdlkzvhh@5-9 l: nlllxgnrlllllllmq@3-4 f: gfff@8-9 g: grgggggbg@3-4 j: pfwjhh@2-5 l: jlfjr@2-4 l: lblv@3-10 q: qqvzhnqqhqvqq@11-15 t: tfttttttktwttts@12-14 b: gqptrzwclbdbfqd@1-4 r: crrprr@5-13 v: qvdvvvdnrqmrqp@9-12 r: rwrrlsrrsrrjgdnrrr@4-6 c: ccldccnp@16-17 q: qqqqqpqqqqlqqqqmlq@2-8 w: wwwwwwwhwmwws@3-6 m: dmmbmmdmkxm@6-13 t: xflrtblvcvfxnlf@2-6 m: pmnsmm@13-15 k: kstfvnkkgfvvkbk@4-10 w: jqwcwlcwcwvqbfzfzfm@1-5 d: ddndbmjxhfqqn@13-16 p: pzvbszhqtpklpkpdw@2-4 t: thttwmxjsbtp@8-10 s: zbsvjcssfmf@3-5 l: lltlwlllll@12-14 g: hgfvvfpnrvpfggnss@3-13 q: cjmbvgxchmqdqcvc@12-16 j: cjjjjjjjjjjqjjjjjj@1-5 m: kqrgm@11-14 x: xcjpwbrrffxkfxh@12-14 c: kgfnccxqczkcjkcc@3-4 f: sfftf@1-3 f: ffdz@12-14 t: xftfxmkttdsttg@4-9 f: ffhcgfffffff@9-10 b: zjlbbsbzbx@9-14 m: hhxmlmmmzmmtmm@3-5 t: tkcpzjwr@6-9 k: wkfdwflgrntrknsr@1-4 l: gfml@9-10 z: zzzzzzzzzrzzzz@9-11 h: hhhhhhhhhhzhh@1-9 k: kkkkkkkkzkkkkkkk@2-7 h: sswmmkhkvhw@2-5 m: pmbnnmzrkk@9-12 f: xhpfbfdffkfw@3-4 g: gfwg@11-12 n: nnnnnnnnnnnpnnnxn@5-6 d: dddddgddd@7-9 j: cbjgnjqjgj@9-14 r: rrrrrrrhrrrrrzbrr@4-5 p: prphk@2-4 d: dpdd@5-15 p: zjsppzhqqgqspcppqpps@2-7 r: rrrrrrfwrr@1-3 h: hhqh@14-16 g: zgvdgspkjrrvcgdlxg@4-6 c: psgqccccvc@9-14 q: qdqjqmttdtcqggqpqn@13-18 f: ffffffffffffgffffff@8-9 g: gggggggggggg@11-12 x: xxxxxxxxxxxr@2-17 c: cxcccfchcccccccbbcm@7-11 b: nwbrzndvrfxwt@3-4 x: xhwxxxv@16-17 r: rzrrnrrrvxrrzrrrrrr@2-3 f: zcvgbmxvwp@5-6 b: fwbbbf@6-10 m: mmmmmpmmmw@2-4 n: bnnvndbpvzj@3-4 t: dftfhdngqp@1-2 v: vtvvvvvvvvv@2-3 v: vgvv@9-10 s: tsvsshsssgssssmsksss@6-7 t: ttttttxt@3-4 c: jcrc@5-8 l: ztlmjljlb@4-5 w: bwwwww@11-14 r: rrrbrrrrrrnrrrs@10-16 z: zzzzznzzzwzzzzzzzz@7-13 m: mmmmmmfmmmmmmmmmmmmm@15-19 w: fflzcwftmcswcwwnwts@10-19 b: bjbbbbbbmwbbbbbbbbtb@14-16 x: xxxxpxxpxxqxdqxxxx@8-13 r: rkzrjbxrgwkhnb@5-18 r: rrrzfkrrrrrrrrtrrnrr@4-5 b: bbbfzb@6-10 q: qnscxqqfqb@8-13 w: wwwwwwwfwwwwwwwwww@10-11 n: scvnsnpgnjnmdpnwct@7-11 p: pjpppppdqpjpfppsptp@7-9 n: jfsvclhfm@3-8 h: whsggqscd@2-12 r: mrmpxhrqsdmqpjshvck@2-4 g: gdgggg@7-12 s: ssssssssgsss@7-11 l: dlklllnjlslbl@5-11 k: kkkkkkkkkkkkkkk@6-9 g: dhtvcgmfrjhk@4-5 m: lmmmhmsmmmmmcmmmmzmm@11-13 t: zgtnkjzmtkttmtkc@6-7 b: bbbbbbv@3-4 q: qqcq@12-16 z: zzzszjzszzczmxtzzcl@2-5 w: wwfhp@1-2 d: gddkd@5-12 f: fwqgbvrcfmwb@2-5 w: bnxcw@3-15 t: ncwftppphsxvztttjs@7-10 p: ppnsppkcppsp@5-6 v: vvrdvv@5-6 z: hczwbzz@3-12 p: gcphfgmzfkflspmxg@14-19 m: jmfmfjpvbmfmmrdkdnzp@6-7 p: pdwzppppp@4-7 b: bbbnbbqbb@7-8 r: frrrrrxxr@8-18 b: jbphpzgvnppwhkxfzs@1-5 c: pvhcc@4-8 z: fzznzjzztstzxrz@5-10 v: jvvwvvvlvlvqc@7-14 p: svgrzfpxkdpbhph@5-7 n: nncmvkn@11-12 r: rrlrbrrrvrrr@1-5 r: vtngrndhqf@2-4 k: knjp@11-14 h: hhghhhhhhhxhhwhhh@16-18 r: rrrrrrrrrrrrrrrpnb@10-14 d: dpddbvdtdmxfdddd@2-4 t: cztt@5-6 r: rzrprd@2-5 n: ngwdngc@1-6 q: qqqzzwwqqqkqqq@7-8 l: lllzllpxl@1-4 b: kmltzzjzbppgwq@1-4 t: ttttb@3-4 p: dkxpcph@7-15 z: zzzzzzhzzzzzzzzzz@4-7 c: cdljfccm@3-8 p: hbpxhlmc@4-5 w: wwwlw@14-15 b: lbqbbbkgbbwfbdb@6-10 j: jtjjvpwwthwcsj@5-8 t: ltvtttbtqxtzq@12-13 t: ttttttttjttztxt@16-18 p: ppppppppppppppxpxbpp@4-7 n: nnnrnnnnt@1-2 r: rfrr@5-6 g: ggggvggg@3-4 s: ssbw@3-4 l: ldll@8-10 m: mmmmvmmcjkmg@10-18 w: wwvwwvwwhwwjwwwlwxcm@1-2 x: cxxxxxxxxxxxxx@1-5 b: bbbbkbbb@12-14 z: zwqzrrzzvqqzzszrx@1-5 z: lzzfzzzfz@16-17 t: ftgstrgptwmptxrzt@9-10 b: bbbbbbbzbbbb@8-14 w: wwwwwwwjwwwzwzww@3-4 h: qhnh@2-12 d: dnddddkddddzdxdddd@5-17 x: xxxxxxxxxxxxxxxxx@9-10 h: hhhhtqhhhrh@6-7 p: pfmppppp@5-8 v: vbvvvvvs@4-5 h: qhfhqcb@3-12 d: dlddlhhwvcrdrxwpt@2-3 n: nnwnp@4-8 g: ggggjgfgzgdglgg@4-9 h: vrghsphxhxzsxw@12-18 z: qrzzzfwdcwnzdzkckz@6-8 v: zvmlqwwh@10-14 p: pppxwpndfpwppdpptmpp@12-15 q: qqnqkqkqjgrcqfq@2-4 n: pnszjnnn@2-3 c: zkctcfc@17-20 l: lvjlcclllslzllllwgll@16-17 k: dfgskkfkkkfjhfvfks@1-3 t: tjttltt@2-3 b: bbzbb@8-15 t: dtttttsttlttttzlttj@13-14 v: vvkvvjvgwvvvkvf@7-8 v: tvvvvvvhv@3-10 d: bxktdrtddtdtsh@4-12 j: npwxjjjjbjkq@1-4 l: tlllll@12-13 b: lbhpxbbbvbbbqbbbsbb@9-15 v: vqhsggmpvmqtbzzlq@12-14 f: ffhfjfffqfxqff@15-16 m: jtnsjwpggbpxlhqmk@2-4 n: xptncjsstcl@5-8 q: dmwklqjqnzb@3-4 c: vcgl@1-6 h: hhhhhh@8-9 x: ckblstcdx@5-7 w: vwphwwmwwwww@2-4 x: kxxxdh@10-11 m: kmmvmmmfmksmj@4-7 v: zvrvvvdvvv@1-8 p: npxbwqpxbjrnrv@5-11 t: jfkwttkstrxlgts@1-2 g: ggggg@5-7 p: tpppppr@15-17 v: vvvvvvvvvvvvvvvvvvvv@17-19 w: dwjwjznczwgfmkmhdtw@10-13 f: fffffbqfffffffffff@4-14 g: ggggggggggggggg@2-3 d: bdkfd@7-8 x: xxxxxxxx@6-9 h: hmshdhvvhkhbhcshs@14-15 g: gggggggggggggghg@2-16 q: qqsxqqqdgqqghqqk@3-17 p: ppbppprppppppppphppp@8-18 v: vczfvqcvvcspndvxwjdv@1-3 d: fdddd@9-11 j: gfjjnjsdnhb@8-10 s: hkhshttssl@5-10 f: ffsffffffqxfff@7-10 w: wwlwwckwwf@4-8 x: blxxmtbgnblfgnfwz@4-5 p: rlpkprppp@13-14 s: ssssssssssssswss@4-8 h: hhhdhmhhhjhlhh@6-7 h: chhhhhfhzqhdhhh@15-17 m: msvrmwzkzvmmgrmmpm@4-6 x: qgtwwxhgsxxmklgmn@4-7 p: rpzkdpp@3-4 v: vvvhvjv@16-18 p: pppppppppppppppppmp@15-17 k: kpkkkkkhqkkkkklktk@5-7 s: ssbxxsk@2-4 l: cwllll@6-9 v: cvvrrkvrvsdvfwcv@1-7 w: qwwwwslwwwwwwwwrww@2-12 c: clcccccccccccccc@5-10 m: ftcmrpmvrzc@7-11 w: wwwwwwwwwwtwwwww@2-3 n: jngdlvgcvtkmn@1-8 v: hvvvvvvvvv@3-17 p: jrpvltxlcqgpfxwsj@1-5 k: kkkkfkk@1-10 c: cccccccccfc@13-19 f: flfffffxfvffffprfmcb@3-6 g: htglsbvrzcghjmd@9-11 h: wrwghhhhnzhxl@5-12 z: zzkzzhnjpmkvzzzw@7-11 w: qrwcwwstwddw@15-19 m: mmmmmmmmmmmmmmmmmmmm@15-16 m: mmmmmmmmmmmmmmhmm@12-16 x: xxxxxcxxxxxlxxxxxxx@5-10 l: qwfqlllgsdjrlspll@3-4 f: hffmfffg@6-7 l: lwlllbllnl@11-20 t: tttkrtlpttwftmwttttt@11-12 d: ddbdddddddpktdd@4-11 w: sxkmkwdwwnlwxmdvfx@4-5 k: kkzkpk@13-20 n: nnnnnntnnnnnbnnnbnnn@5-7 c: ccccwcc@1-6 h: cckkhhdhhwmhhmzchhwx@1-15 b: hbbbbbbbbhbbhbbbbnbb@1-2 w: mwwww@1-2 f: sfzgwtf@3-4 s: sssj@1-3 w: xwww@1-16 p: ppppppppdppppppp@1-6 c: ccxmccccc@4-8 b: rtpbcfbr@9-10 s: sszssstshss@15-16 x: xxxtxxxxxxxmxxxzx@9-15 k: kkkkkkkkkkgrkkkkk@11-13 x: xtxxxxxxxxrxkxx@1-5 f: rffflfffnf@14-16 n: nnxnnnnnnnnnbnzbnnn@3-6 d: ddddddndbdfdhd@14-15 q: sbqqhvqqqvqgxfq@5-6 b: jglbfjb@1-10 l: llllllcllsll@3-5 z: lwzzz@5-12 k: kkkkmkkkkkkkkkkl@8-12 v: vvtsvfvnzvhpm@5-7 l: llllllll@4-7 f: nqfffkbdf@4-8 j: jjjljkhj@9-15 h: vgzpgfhfhmwdhbqc@1-5 p: ptpsjqpnp@5-8 q: qbqqwqnq@5-7 w: wwswwxsb@3-6 h: nnhrnhkmxqkt@1-3 w: jwwww@2-14 x: cxxxxdxxxxxxxbxx@12-14 x: xxxfxxxxqxxrxt@4-9 f: fffkffbsfkxv@12-13 m: mmmmmmmmmmmwm@6-10 p: ppppphpppxppp@9-12 v: vsvvvvkmjvvvn@3-12 r: shngvhbmjrpr@12-13 w: wqwcwxclwwwfw@4-5 r: nnrrdz@4-19 c: vbcpwzvxssccqkqgmxvj@1-6 g: tglxhggng@9-10 z: lvzhvtglzf@10-16 f: gddxfftggfbmxwts@4-12 k: kkkklkkkkkkpkkk@7-11 m: mmmmmmmmmmtm@2-10 z: vkfpjrrvlwlbjwk@3-7 w: dtdzwjqgxdwjhchwwd@13-14 v: vvvvvvvvvvvvvvvv@11-12 c: cjccccqccccc@14-15 h: hzhrhkhfthrhxht@3-5 v: dtwvvvvvcvvvrvsvvv@10-14 q: qhqqkqcqqqqqlfqgsqq@3-14 f: ffvffffffffzffffff@1-12 x: xxtxjxzxxxxxlxxxxxxx@2-4 c: pgpc@1-4 r: fdrr@5-7 r: rrrrrrt@10-11 d: drdddddddmddddpd@2-5 f: gfrlctftzr@10-13 z: nrzjjrzjzzplzmzzbn@8-10 c: cccccccgbc@5-8 g: fgggcndwgggbjnfgb@6-9 d: ddddghdgbddm@3-7 j: ftjjjvjqcp@5-6 s: sqvfstz@5-18 k: kkkwkkkkkkbkkkkkkkbk@3-6 f: djffffkff@4-6 p: pqppppr@5-9 h: hhkhjhmgcqvfhqvhn@8-12 t: tttttttvttttt@14-15 z: pzrzhjqmtbcnzdzr@1-17 s: ssssssssssssswsss@1-4 s: ssqh@1-5 r: rrrrrrr@17-18 h: hhhhhrhcxhhhhhhhhb@7-9 t: dttttjmtv@1-3 c: mcccp@4-5 x: xprbxql@1-5 q: cqqqqqq@3-4 g: ggggw@1-7 f: ffffffnf@7-9 t: ttttttttttt@11-15 m: mmlmfmmmmmmmmmmqm@4-5 n: npnnnn@4-5 b: zvbbvbjhlkf@11-16 c: gnqmcvtzwpcbvncwcc@12-18 q: qbqkwqqvqwqqnljsqpqt@6-10 r: wcrtdrlkgjr@16-17 p: gppppppppwvlgpptp@1-13 g: gqghbwqqzwwdk@1-6 l: rlllll@3-7 j: pdjjtcqwbqtpfkjbwgq@7-17 z: zzhsnjrhrzzfrqszdhdg@6-7 n: xnvnhnrn@6-7 r: rrrrrrzr@2-3 c: ccmcccc@2-3 v: vvdv@3-9 f: mlfffshbfdff@11-13 v: dfvkltvjvvvvx@12-13 c: mqrccccbccbgcccccvc@9-13 w: wwwwwwwwwwwwcwtww@6-8 d: pdvgddtmvwdkvdtzf@1-9 s: hsssssssssdsls@1-5 c: zbsslcd@1-4 p: bpppppppppp@13-16 s: sssxslsscssbqsspcs@1-10 p: pskwpppzpppppks@3-5 c: ccppccmcc@10-11 b: rhbbbbbbbzbb@2-3 d: ndhjhd@3-4 s: sscs@5-6 d: dtwwnt@4-5 d: dddddddd@5-9 z: zztzvzzzz@2-6 v: vpqdll@13-14 d: nxkmbkkpxkcdld@1-3 s: ssss@8-14 z: zzzzzzzzzzzzzbz@16-17 f: fffnffffffftbzffpkf@3-4 m: mtcm@3-4 r: mrdrd@11-13 k: ljkmhdkkkcpjzlmkkzkk@2-3 d: tdqnxpd@3-7 h: mrvdlthxchpvwvssqpk@13-17 j: jjfjjvjjjjjzjsjjksxr@1-4 n: rnnx@7-10 m: mmmmzmxfmm@1-6 r: lrrvrrrrm@4-18 r: rrrdrrrrrrrrrkblrr@6-7 k: kkkkkkl@4-6 v: vmnfvvvvmcmlh@6-9 g: jgcgggkbbmgbs@7-8 t: ttcfwtgjtcttv@3-4 j: tjjj@"
__loadstore struct printf_buffer_number printf_buffer = {}
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
bool printf_number_buffer::$0
bool printf_number_buffer::$1
bool printf_number_buffer::$10
bool printf_number_buffer::$12
bool printf_number_buffer::$14
bool printf_number_buffer::$15
bool printf_number_buffer::$16
bool printf_number_buffer::$17
unsigned int printf_number_buffer::$19
bool printf_number_buffer::$2
bool printf_number_buffer::$20
signed char printf_number_buffer::$21
bool printf_number_buffer::$22
bool printf_number_buffer::$23
signed char printf_number_buffer::$25
bool printf_number_buffer::$26
bool printf_number_buffer::$27
bool printf_number_buffer::$28
bool printf_number_buffer::$29
bool printf_number_buffer::$3
bool printf_number_buffer::$30
bool printf_number_buffer::$31
bool printf_number_buffer::$32
bool printf_number_buffer::$4
bool printf_number_buffer::$5
bool printf_number_buffer::$7
bool printf_number_buffer::$9
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char *printf_number_buffer::buffer_digits#0
char *printf_number_buffer::buffer_digits#1
char *printf_number_buffer::buffer_digits#10
char *printf_number_buffer::buffer_digits#11
char *printf_number_buffer::buffer_digits#12
char *printf_number_buffer::buffer_digits#13
char *printf_number_buffer::buffer_digits#14
char *printf_number_buffer::buffer_digits#15
char *printf_number_buffer::buffer_digits#16
char *printf_number_buffer::buffer_digits#17
char *printf_number_buffer::buffer_digits#18
char *printf_number_buffer::buffer_digits#2
char *printf_number_buffer::buffer_digits#3
char *printf_number_buffer::buffer_digits#4
char *printf_number_buffer::buffer_digits#5
char *printf_number_buffer::buffer_digits#6
char *printf_number_buffer::buffer_digits#7
char *printf_number_buffer::buffer_digits#8
char *printf_number_buffer::buffer_digits#9
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0
char printf_number_buffer::buffer_sign#1
char printf_number_buffer::buffer_sign#10
char printf_number_buffer::buffer_sign#11
char printf_number_buffer::buffer_sign#2
char printf_number_buffer::buffer_sign#3
char printf_number_buffer::buffer_sign#4
char printf_number_buffer::buffer_sign#5
char printf_number_buffer::buffer_sign#6
char printf_number_buffer::buffer_sign#7
char printf_number_buffer::buffer_sign#8
char printf_number_buffer::buffer_sign#9
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_justify_left#0
char printf_number_buffer::format_justify_left#1
char printf_number_buffer::format_justify_left#10
char printf_number_buffer::format_justify_left#11
char printf_number_buffer::format_justify_left#12
char printf_number_buffer::format_justify_left#13
char printf_number_buffer::format_justify_left#14
char printf_number_buffer::format_justify_left#15
char printf_number_buffer::format_justify_left#16
char printf_number_buffer::format_justify_left#17
char printf_number_buffer::format_justify_left#18
char printf_number_buffer::format_justify_left#19
char printf_number_buffer::format_justify_left#2
char printf_number_buffer::format_justify_left#3
char printf_number_buffer::format_justify_left#4
char printf_number_buffer::format_justify_left#5
char printf_number_buffer::format_justify_left#6
char printf_number_buffer::format_justify_left#7
char printf_number_buffer::format_justify_left#8
char printf_number_buffer::format_justify_left#9
char printf_number_buffer::format_min_length
char printf_number_buffer::format_min_length#0
char printf_number_buffer::format_min_length#1
char printf_number_buffer::format_min_length#2
char printf_number_buffer::format_min_length#3
char printf_number_buffer::format_min_length#4
char printf_number_buffer::format_min_length#5
char printf_number_buffer::format_radix
char printf_number_buffer::format_radix#0
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_sign_always#0
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_upper_case#0
char printf_number_buffer::format_upper_case#1
char printf_number_buffer::format_upper_case#10
char printf_number_buffer::format_upper_case#11
char printf_number_buffer::format_upper_case#12
char printf_number_buffer::format_upper_case#13
char printf_number_buffer::format_upper_case#14
char printf_number_buffer::format_upper_case#15
char printf_number_buffer::format_upper_case#2
char printf_number_buffer::format_upper_case#3
char printf_number_buffer::format_upper_case#4
char printf_number_buffer::format_upper_case#5
char printf_number_buffer::format_upper_case#6
char printf_number_buffer::format_upper_case#7
char printf_number_buffer::format_upper_case#8
char printf_number_buffer::format_upper_case#9
char printf_number_buffer::format_zero_padding
char printf_number_buffer::format_zero_padding#0
char printf_number_buffer::format_zero_padding#1
char printf_number_buffer::format_zero_padding#10
char printf_number_buffer::format_zero_padding#11
char printf_number_buffer::format_zero_padding#12
char printf_number_buffer::format_zero_padding#13
char printf_number_buffer::format_zero_padding#14
char printf_number_buffer::format_zero_padding#15
char printf_number_buffer::format_zero_padding#16
char printf_number_buffer::format_zero_padding#17
char printf_number_buffer::format_zero_padding#18
char printf_number_buffer::format_zero_padding#19
char printf_number_buffer::format_zero_padding#2
char printf_number_buffer::format_zero_padding#3
char printf_number_buffer::format_zero_padding#4
char printf_number_buffer::format_zero_padding#5
char printf_number_buffer::format_zero_padding#6
char printf_number_buffer::format_zero_padding#7
char printf_number_buffer::format_zero_padding#8
char printf_number_buffer::format_zero_padding#9
signed char printf_number_buffer::len
signed char printf_number_buffer::len#0
signed char printf_number_buffer::len#1
signed char printf_number_buffer::len#2
signed char printf_number_buffer::len#3
signed char printf_number_buffer::padding
signed char printf_number_buffer::padding#0
signed char printf_number_buffer::padding#1
signed char printf_number_buffer::padding#10
signed char printf_number_buffer::padding#11
signed char printf_number_buffer::padding#12
signed char printf_number_buffer::padding#13
signed char printf_number_buffer::padding#14
signed char printf_number_buffer::padding#15
signed char printf_number_buffer::padding#16
signed char printf_number_buffer::padding#2
signed char printf_number_buffer::padding#3
signed char printf_number_buffer::padding#4
signed char printf_number_buffer::padding#5
signed char printf_number_buffer::padding#6
signed char printf_number_buffer::padding#7
signed char printf_number_buffer::padding#8
signed char printf_number_buffer::padding#9
void (*printf_number_buffer::putc)(char)
void (*printf_number_buffer::putc#0)(char)
void (*printf_number_buffer::putc#1)(char)
void (*printf_number_buffer::putc#10)(char)
void (*printf_number_buffer::putc#11)(char)
void (*printf_number_buffer::putc#12)(char)
void (*printf_number_buffer::putc#13)(char)
void (*printf_number_buffer::putc#14)(char)
void (*printf_number_buffer::putc#15)(char)
void (*printf_number_buffer::putc#16)(char)
void (*printf_number_buffer::putc#17)(char)
void (*printf_number_buffer::putc#18)(char)
void (*printf_number_buffer::putc#19)(char)
void (*printf_number_buffer::putc#2)(char)
void (*printf_number_buffer::putc#20)(char)
void (*printf_number_buffer::putc#3)(char)
void (*printf_number_buffer::putc#4)(char)
void (*printf_number_buffer::putc#5)(char)
void (*printf_number_buffer::putc#6)(char)
void (*printf_number_buffer::putc#7)(char)
void (*printf_number_buffer::putc#8)(char)
void (*printf_number_buffer::putc#9)(char)
void printf_padding(void (*putc)(char) , char pad , char length)
bool printf_padding::$0
char printf_padding::i
char printf_padding::i#0
char printf_padding::i#1
char printf_padding::i#2
char printf_padding::i#3
char printf_padding::i#4
char printf_padding::length
char printf_padding::length#0
char printf_padding::length#1
char printf_padding::length#2
char printf_padding::length#3
char printf_padding::length#4
char printf_padding::length#5
char printf_padding::length#6
char printf_padding::pad
char printf_padding::pad#0
char printf_padding::pad#1
char printf_padding::pad#2
char printf_padding::pad#3
char printf_padding::pad#4
char printf_padding::pad#5
char printf_padding::pad#6
void (*printf_padding::putc)(char)
void (*printf_padding::putc#0)(char)
void (*printf_padding::putc#1)(char)
void (*printf_padding::putc#2)(char)
void (*printf_padding::putc#3)(char)
void (*printf_padding::putc#4)(char)
void (*printf_padding::putc#5)(char)
void (*printf_padding::putc#6)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::$0
bool printf_str::$2
char printf_str::c
char printf_str::c#0
char printf_str::c#1
char printf_str::c#2
void (*printf_str::putc)(char)
void (*printf_str::putc#0)(char)
void (*printf_str::putc#1)(char)
void (*printf_str::putc#10)(char)
void (*printf_str::putc#11)(char)
void (*printf_str::putc#2)(char)
void (*printf_str::putc#3)(char)
void (*printf_str::putc#4)(char)
void (*printf_str::putc#5)(char)
void (*printf_str::putc#6)(char)
void (*printf_str::putc#7)(char)
void (*printf_str::putc#8)(char)
void (*printf_str::putc#9)(char)
const char *printf_str::s
const char *printf_str::s#0
const char *printf_str::s#1
const char *printf_str::s#10
const char *printf_str::s#11
const char *printf_str::s#12
const char *printf_str::s#2
const char *printf_str::s#3
const char *printf_str::s#4
const char *printf_str::s#5
const char *printf_str::s#6
const char *printf_str::s#7
const char *printf_str::s#8
const char *printf_str::s#9
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
number printf_uint::$0
char printf_uint::$1
number printf_uint::$2
bool printf_uint::$5
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_justify_left#0
char printf_uint::format_justify_left#1
char printf_uint::format_justify_left#10
char printf_uint::format_justify_left#2
char printf_uint::format_justify_left#3
char printf_uint::format_justify_left#4
char printf_uint::format_justify_left#5
char printf_uint::format_justify_left#6
char printf_uint::format_justify_left#7
char printf_uint::format_justify_left#8
char printf_uint::format_justify_left#9
char printf_uint::format_min_length
char printf_uint::format_min_length#0
char printf_uint::format_min_length#1
char printf_uint::format_min_length#10
char printf_uint::format_min_length#2
char printf_uint::format_min_length#3
char printf_uint::format_min_length#4
char printf_uint::format_min_length#5
char printf_uint::format_min_length#6
char printf_uint::format_min_length#7
char printf_uint::format_min_length#8
char printf_uint::format_min_length#9
char printf_uint::format_radix
char printf_uint::format_radix#0
char printf_uint::format_radix#1
char printf_uint::format_radix#10
char printf_uint::format_radix#2
char printf_uint::format_radix#3
char printf_uint::format_radix#4
char printf_uint::format_radix#5
char printf_uint::format_radix#6
char printf_uint::format_radix#7
char printf_uint::format_radix#8
char printf_uint::format_radix#9
char printf_uint::format_sign_always
char printf_uint::format_sign_always#0
char printf_uint::format_sign_always#1
char printf_uint::format_sign_always#10
char printf_uint::format_sign_always#2
char printf_uint::format_sign_always#3
char printf_uint::format_sign_always#4
char printf_uint::format_sign_always#5
char printf_uint::format_sign_always#6
char printf_uint::format_sign_always#7
char printf_uint::format_sign_always#8
char printf_uint::format_sign_always#9
char printf_uint::format_upper_case
char printf_uint::format_upper_case#0
char printf_uint::format_upper_case#1
char printf_uint::format_upper_case#10
char printf_uint::format_upper_case#2
char printf_uint::format_upper_case#3
char printf_uint::format_upper_case#4
char printf_uint::format_upper_case#5
char printf_uint::format_upper_case#6
char printf_uint::format_upper_case#7
char printf_uint::format_upper_case#8
char printf_uint::format_upper_case#9
char printf_uint::format_zero_padding
char printf_uint::format_zero_padding#0
char printf_uint::format_zero_padding#1
char printf_uint::format_zero_padding#10
char printf_uint::format_zero_padding#2
char printf_uint::format_zero_padding#3
char printf_uint::format_zero_padding#4
char printf_uint::format_zero_padding#5
char printf_uint::format_zero_padding#6
char printf_uint::format_zero_padding#7
char printf_uint::format_zero_padding#8
char printf_uint::format_zero_padding#9
void (*printf_uint::putc)(char)
void (*printf_uint::putc#0)(char)
void (*printf_uint::putc#1)(char)
void (*printf_uint::putc#10)(char)
void (*printf_uint::putc#2)(char)
void (*printf_uint::putc#3)(char)
void (*printf_uint::putc#4)(char)
void (*printf_uint::putc#5)(char)
void (*printf_uint::putc#6)(char)
void (*printf_uint::putc#7)(char)
void (*printf_uint::putc#8)(char)
void (*printf_uint::putc#9)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0
unsigned int printf_uint::uvalue#1
unsigned int printf_uint::uvalue#2
unsigned int printf_uint::uvalue#3
unsigned int printf_uint::uvalue#4
unsigned int printf_uint::uvalue#5
unsigned int printf_uint::uvalue#6
unsigned int printf_uint::uvalue#7
unsigned int printf_uint::uvalue#8
unsigned int printf_uint::uvalue#9
unsigned int strlen(char *str)
bool strlen::$0
unsigned int strlen::len
unsigned int strlen::len#0
unsigned int strlen::len#1
unsigned int strlen::len#2
unsigned int strlen::len#3
unsigned int strlen::len#4
unsigned int strlen::return
unsigned int strlen::return#0
unsigned int strlen::return#1
unsigned int strlen::return#2
unsigned int strlen::return#3
unsigned int strlen::return#4
char *strlen::str
char *strlen::str#0
char *strlen::str#1
char *strlen::str#2
char *strlen::str#3
char *strlen::str#4
char strtouc(char *str , char **endptr)
bool strtouc::$0
bool strtouc::$1
bool strtouc::$2
number strtouc::$3
char strtouc::$4
char strtouc::c
char strtouc::c#0
char strtouc::c#1
char strtouc::c#2
char strtouc::c#3
char **strtouc::endptr
char **strtouc::endptr#0
char **strtouc::endptr#1
char **strtouc::endptr#2
char **strtouc::endptr#3
char **strtouc::endptr#4
char **strtouc::endptr#5
char strtouc::return
char strtouc::return#0
char strtouc::return#1
char strtouc::return#2
char strtouc::return#3
char strtouc::return#4
char strtouc::return#5
char strtouc::return#6
char *strtouc::str
char *strtouc::str#0
char *strtouc::str#1
char *strtouc::str#2
char *strtouc::str#3
char *strtouc::str#4
char *strtouc::str#5
char *strtouc::str#6
char strtouc::val
char strtouc::val#0
char strtouc::val#1
char strtouc::val#2
char strtouc::val#3
char strtouc::val#4
char strtouc::val#5
char * strupr(char *str)
char strupr::$0
bool strupr::$1
char *strupr::return
char *strupr::return#0
char *strupr::return#1
char *strupr::return#2
char *strupr::return#3
char *strupr::src
char *strupr::src#0
char *strupr::src#1
char *strupr::src#2
char *strupr::src#3
char *strupr::src#4
char *strupr::str
char *strupr::str#0
char *strupr::str#1
char *strupr::str#2
char *strupr::str#3
char *strupr::str#4
char *strupr::str#5
char toupper(char ch)
bool toupper::$0
bool toupper::$1
bool toupper::$2
char toupper::$3
char toupper::ch
char toupper::ch#0
char toupper::ch#1
char toupper::ch#2
char toupper::ch#3
char toupper::return
char toupper::return#0
char toupper::return#1
char toupper::return#2
char toupper::return#3
char toupper::return#4
char toupper::return#5
void utoa(unsigned int value , char *buffer , char radix)
bool utoa::$0
bool utoa::$1
char utoa::$10
char utoa::$11
bool utoa::$2
bool utoa::$3
number utoa::$4
bool utoa::$5
bool utoa::$6
bool utoa::$7
bool utoa::$8
unsigned int utoa::$9
char *utoa::buffer
char *utoa::buffer#0
char *utoa::buffer#1
char *utoa::buffer#10
char *utoa::buffer#11
char *utoa::buffer#12
char *utoa::buffer#13
char *utoa::buffer#14
char *utoa::buffer#15
char *utoa::buffer#16
char *utoa::buffer#17
char *utoa::buffer#18
char *utoa::buffer#19
char *utoa::buffer#2
char *utoa::buffer#20
char *utoa::buffer#21
char *utoa::buffer#3
char *utoa::buffer#4
char *utoa::buffer#5
char *utoa::buffer#6
char *utoa::buffer#7
char *utoa::buffer#8
char *utoa::buffer#9
char utoa::digit
char utoa::digit#0
char utoa::digit#1
char utoa::digit#2
char utoa::digit#3
char utoa::digit#4
char utoa::digit#5
char utoa::digit#6
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0
unsigned int utoa::digit_value#1
unsigned int *utoa::digit_values
unsigned int *utoa::digit_values#0
unsigned int *utoa::digit_values#1
unsigned int *utoa::digit_values#10
unsigned int *utoa::digit_values#2
unsigned int *utoa::digit_values#3
unsigned int *utoa::digit_values#4
unsigned int *utoa::digit_values#5
unsigned int *utoa::digit_values#6
unsigned int *utoa::digit_values#7
unsigned int *utoa::digit_values#8
unsigned int *utoa::digit_values#9
char utoa::max_digits
char utoa::max_digits#0
char utoa::max_digits#1
char utoa::max_digits#10
char utoa::max_digits#2
char utoa::max_digits#3
char utoa::max_digits#4
char utoa::max_digits#5
char utoa::max_digits#6
char utoa::max_digits#7
char utoa::max_digits#8
char utoa::max_digits#9
char utoa::radix
char utoa::radix#0
char utoa::radix#1
char utoa::radix#2
char utoa::radix#3
char utoa::radix#4
char utoa::started
char utoa::started#0
char utoa::started#1
char utoa::started#2
char utoa::started#3
char utoa::started#4
unsigned int utoa::value
unsigned int utoa::value#0
unsigned int utoa::value#1
unsigned int utoa::value#10
unsigned int utoa::value#11
unsigned int utoa::value#12
unsigned int utoa::value#13
unsigned int utoa::value#14
unsigned int utoa::value#15
unsigned int utoa::value#2
unsigned int utoa::value#3
unsigned int utoa::value#4
unsigned int utoa::value#5
unsigned int utoa::value#6
unsigned int utoa::value#7
unsigned int utoa::value#8
unsigned int utoa::value#9
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
bool utoa_append::$0
char *utoa_append::buffer
char *utoa_append::buffer#0
char *utoa_append::buffer#1
char *utoa_append::buffer#2
char *utoa_append::buffer#3
char *utoa_append::buffer#4
char utoa_append::digit
char utoa_append::digit#0
char utoa_append::digit#1
char utoa_append::digit#2
char utoa_append::digit#3
char utoa_append::digit#4
unsigned int utoa_append::return
unsigned int utoa_append::return#0
unsigned int utoa_append::return#1
unsigned int utoa_append::return#2
unsigned int utoa_append::return#3
unsigned int utoa_append::return#4
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0
unsigned int utoa_append::sub#1
unsigned int utoa_append::sub#2
unsigned int utoa_append::sub#3
unsigned int utoa_append::value
unsigned int utoa_append::value#0
unsigned int utoa_append::value#1
unsigned int utoa_append::value#2
unsigned int utoa_append::value#3
unsigned int utoa_append::value#4
unsigned int utoa_append::value#5

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#2 > 0
Adding number conversion cast (unumber) 0 in strlen::$0 = 0 != *strlen::str#2
Adding number conversion cast (unumber) 0 in strupr::$1 = 0 != *strupr::src#2
Adding number conversion cast (unumber) 5 in utoa::max_digits#1 = 5
Adding number conversion cast (unumber) 4 in utoa::max_digits#2 = 4
Adding number conversion cast (unumber) 6 in utoa::max_digits#3 = 6
Adding number conversion cast (unumber) $10 in utoa::max_digits#4 = $10
Adding number conversion cast (unumber) 0 in *utoa::buffer#2 = 0
Adding number conversion cast (unumber) 1 in utoa::$4 = utoa::max_digits#5 - 1
Adding number conversion cast (unumber) utoa::$4 in utoa::$4 = utoa::max_digits#5 - (unumber)1
Adding number conversion cast (unumber) 0 in *utoa::buffer#3 = 0
Adding number conversion cast (unumber) 1 in utoa::started#1 = 1
Adding number conversion cast (unumber) $19 in clrscr::$0 = clrscr::l#2 < $19
Adding number conversion cast (unumber) 0 in conio_cursor_x = 0
Adding number conversion cast (unumber) 0 in conio_cursor_y = 0
Adding number conversion cast (unumber) $28 in clrscr::$1 = clrscr::c#2 < $28
Adding number conversion cast (unumber) $28 in clrscr::line_text#1 = clrscr::line_text#3 + $28
Adding number conversion cast (unumber) $28 in clrscr::line_cols#1 = clrscr::line_cols#3 + $28
Adding number conversion cast (unumber) $19 in gotoxy::$0 = gotoxy::y#3 > $19
Adding number conversion cast (unumber) $28 in gotoxy::$2 = gotoxy::x#3 >= $28
Adding number conversion cast (unumber) 0 in gotoxy::y#0 = 0
Adding number conversion cast (unumber) $28 in gotoxy::line_offset#0 = gotoxy::$7 * $28
Adding number conversion cast (unumber) 0 in gotoxy::x#0 = 0
Adding number conversion cast (unumber) $28 in cputc::$1 = conio_cursor_x == $28
Adding number conversion cast (unumber) $28 in conio_line_text = conio_line_text + $28
Adding number conversion cast (unumber) $28 in conio_line_color = conio_line_color + $28
Adding number conversion cast (unumber) 0 in conio_cursor_x = 0
Adding number conversion cast (unumber) $19 in cscroll::$0 = conio_cursor_y == $19
Adding number conversion cast (unumber) 0 in cscroll::$7 = 0 != conio_scroll_enable
Adding number conversion cast (unumber) $28 in memcpy::source#0 = (void *)CONIO_SCREEN_TEXT+$28
Adding number conversion cast (unumber) $19*$28-$28 in memcpy::num#0 = $19*$28-$28
Adding number conversion cast (unumber) $28 in memcpy::source#1 = (void *)CONIO_SCREEN_COLORS+$28
Adding number conversion cast (unumber) $19*$28-$28 in memcpy::num#1 = $19*$28-$28
Adding number conversion cast (unumber) $28 in memset::str#0 = (void *)CONIO_SCREEN_TEXT+$19*$28-$28
Adding number conversion cast (unumber) $19*$28 in memset::str#0 = (void *)CONIO_SCREEN_TEXT+$19*$28-(unumber)$28
Adding number conversion cast (unumber) $28 in memset::num#0 = $28
Adding number conversion cast (unumber) $28 in memset::str#1 = (void *)CONIO_SCREEN_COLORS+$19*$28-$28
Adding number conversion cast (unumber) $19*$28 in memset::str#1 = (void *)CONIO_SCREEN_COLORS+$19*$28-(unumber)$28
Adding number conversion cast (unumber) $28 in memset::num#1 = $28
Adding number conversion cast (unumber) $28 in conio_line_text = conio_line_text - $28
Adding number conversion cast (unumber) $28 in conio_line_color = conio_line_color - $28
Adding number conversion cast (unumber) 0 in gotoxy::x#1 = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#1 = 0
Adding number conversion cast (unumber) $19 in conio_c64_init::$0 = conio_c64_init::line#0 >= $19
Adding number conversion cast (unumber) 0 in gotoxy::x#2 = 0
Adding number conversion cast (unumber) $19-1 in conio_c64_init::line#1 = $19-1
Adding number conversion cast (unumber) 0 in printf_str::$2 = 0 != printf_str::$0
Adding number conversion cast (unumber) 0 in printf_uint::$5 = 0 != printf_uint::format_sign_always#6
Adding number conversion cast (unumber) printf_uint::$2 in printf_uint::format_upper_case#7 = phi( printf_uint::@1/printf_uint::format_upper_case#8, printf_uint::@2/printf_uint::format_upper_case#9 )
  printf_uint::format_zero_padding#7 = phi( printf_uint::@1/printf_uint::format_zero_padding#8, printf_uint::@2/printf_uint::format_zero_padding#9 )
  printf_uint::format_sign_always#8 = phi( printf_uint::@1/printf_uint::format_sign_always#9, printf_uint::@2/printf_uint::format_sign_always#10 )
  printf_uint::format_justify_left#7 = phi( printf_uint::@1/printf_uint::format_justify_left#8, printf_uint::@2/printf_uint::format_justify_left#9 )
  printf_uint::format_min_length#7 = phi( printf_uint::@1/printf_uint::format_min_length#8, printf_uint::@2/printf_uint::format_min_length#9 )
  printf_uint::putc#7 = phi( printf_uint::@1/printf_uint::putc#8, printf_uint::@2/printf_uint::putc#9 )
  printf_uint::format_radix#6 = phi( printf_uint::@1/printf_uint::format_radix#8, printf_uint::@2/printf_uint::format_radix#9 )
  printf_uint::uvalue#6 = phi( printf_uint::@1/printf_uint::uvalue#7, printf_uint::@2/printf_uint::uvalue#8 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) printf_uint::$0 in printf_uint::format_upper_case#7 = phi( printf_uint::@1/printf_uint::format_upper_case#8, printf_uint::@2/printf_uint::format_upper_case#9 )
  printf_uint::format_zero_padding#7 = phi( printf_uint::@1/printf_uint::format_zero_padding#8, printf_uint::@2/printf_uint::format_zero_padding#9 )
  printf_uint::format_sign_always#8 = phi( printf_uint::@1/printf_uint::format_sign_always#9, printf_uint::@2/printf_uint::format_sign_always#10 )
  printf_uint::format_justify_left#7 = phi( printf_uint::@1/printf_uint::format_justify_left#8, printf_uint::@2/printf_uint::format_justify_left#9 )
  printf_uint::format_min_length#7 = phi( printf_uint::@1/printf_uint::format_min_length#8, printf_uint::@2/printf_uint::format_min_length#9 )
  printf_uint::putc#7 = phi( printf_uint::@1/printf_uint::putc#8, printf_uint::@2/printf_uint::putc#9 )
  printf_uint::format_radix#6 = phi( printf_uint::@1/printf_uint::format_radix#8, printf_uint::@2/printf_uint::format_radix#9 )
  printf_uint::uvalue#6 = phi( printf_uint::@1/printf_uint::uvalue#7, printf_uint::@2/printf_uint::uvalue#8 )
  printf_uint::$2 = phi( printf_uint::@1/printf_uint::$1, printf_uint::@2/printf_uint::$0 )
Adding number conversion cast (unumber) 0 in printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
Adding number conversion cast (snumber) 0 in printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Adding number conversion cast (snumber) 0 in printf_number_buffer::padding#2 = 0
Adding number conversion cast (unumber) 0 in printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
Adding number conversion cast (unumber) 0 in printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
Adding number conversion cast (unumber) $a in strtouc::$3 = strtouc::val#3 * $a
Adding number conversion cast (unumber) strtouc::$3 in strtouc::$3 = strtouc::val#3 * (unumber)$a
Adding number conversion cast (unumber) 0 in main::$17 = 0 != *main::pwd
Adding number conversion cast (unumber) 3 in main::pwd = main::pwd + 3
Adding number conversion cast (unumber) 1 in main::$5 = main::min#1 - 1
Adding number conversion cast (unumber) main::$5 in main::$5 = main::min#1 - (unumber)1
Adding number conversion cast (unumber) 1 in main::$8 = main::max#1 - 1
Adding number conversion cast (unumber) main::$8 in main::$8 = main::max#1 - (unumber)1
Adding number conversion cast (unumber) 0 in main::$18 = 0 != *main::pwd
Adding number conversion cast (unumber) 1 in main::$16 = main::count_b#5 == 1
Successful SSA optimization PassNAddNumberTypeConversions
Adding number conversion cast (unumber) 0 in printf_uint::$0 = 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memcpy::src#0 = (char *)memcpy::source#2
Inlining cast memcpy::dst#0 = (char *)memcpy::destination#2
Inlining cast memset::dst#0 = (char *)memset::str#3
Inlining cast utoa::max_digits#1 = (unumber)5
Inlining cast utoa::max_digits#2 = (unumber)4
Inlining cast utoa::max_digits#3 = (unumber)6
Inlining cast utoa::max_digits#4 = (unumber)$10
Inlining cast *utoa::buffer#2 = (unumber)0
Inlining cast *utoa::buffer#3 = (unumber)0
Inlining cast utoa::started#1 = (unumber)1
Inlining cast conio_cursor_x = (unumber)0
Inlining cast conio_cursor_y = (unumber)0
Inlining cast gotoxy::y#0 = (unumber)0
Inlining cast gotoxy::x#0 = (unumber)0
Inlining cast conio_cursor_x = (unumber)0
Inlining cast memcpy::num#0 = (unumber)$19*$28-$28
Inlining cast memcpy::num#1 = (unumber)$19*$28-$28
Inlining cast memset::num#0 = (unumber)$28
Inlining cast memset::num#1 = (unumber)$28
Inlining cast gotoxy::x#1 = (unumber)0
Inlining cast gotoxy::y#1 = (unumber)0
Inlining cast gotoxy::x#2 = (unumber)0
Inlining cast conio_c64_init::line#1 = (unumber)$19-1
Inlining cast printf_uint::$0 = (unumber)0
Inlining cast printf_number_buffer::padding#2 = (snumber)0
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (char *) 55296
Simplifying constant pointer cast (char *) 1024
Simplifying constant pointer cast (char *) 214
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast $10
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $19
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $a
Simplifying constant integer cast 0
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 5
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 6
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $a
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 3
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to char in utoa::$4 = utoa::max_digits#5 - 1
Inferred type updated to char in printf_uint::$0 = 0
Inferred type updated to char for printf_uint::$2
Inferred type updated to char in strtouc::$3 = strtouc::val#3 * $a
Inferred type updated to char in main::$5 = main::min#1 - 1
Inferred type updated to char in main::$8 = main::max#1 - 1
Inversing boolean not [19] memset::$1 = memset::num#2 <= 0 from [18] memset::$0 = memset::num#2 > 0
Inversing boolean not [187] gotoxy::$1 = gotoxy::y#3 <= $19 from [186] gotoxy::$0 = gotoxy::y#3 > $19
Inversing boolean not [191] gotoxy::$3 = gotoxy::x#3 < $28 from [190] gotoxy::$2 = gotoxy::x#3 >= $28
Inversing boolean not [216] cputc::$2 = conio_cursor_x != $28 from [215] cputc::$1 = conio_cursor_x == $28
Inversing boolean not [227] cscroll::$1 = conio_cursor_y != $19 from [226] cscroll::$0 = conio_cursor_y == $19
Inversing boolean not [260] conio_c64_init::$1 = conio_c64_init::line#0 < $19 from [259] conio_c64_init::$0 = conio_c64_init::line#0 >= $19
Inversing boolean not [321] printf_number_buffer::$0 = 0 == printf_number_buffer::format_min_length#1 from [320] printf_number_buffer::$26 = 0 != printf_number_buffer::format_min_length#1
Inversing boolean not [325] printf_number_buffer::$1 = 0 == printf_number_buffer::format_justify_left#1 from [324] printf_number_buffer::$27 = 0 != printf_number_buffer::format_justify_left#1
Inversing boolean not [327] printf_number_buffer::$2 = 0 == printf_number_buffer::format_zero_padding#1 from [326] printf_number_buffer::$28 = 0 != printf_number_buffer::format_zero_padding#1
Inversing boolean not [340] printf_number_buffer::$20 = 0 == printf_number_buffer::buffer_sign#1 from [339] printf_number_buffer::$29 = 0 != printf_number_buffer::buffer_sign#1
Inversing boolean not [347] printf_number_buffer::$23 = printf_number_buffer::padding#1 >= 0 from [346] printf_number_buffer::$22 = printf_number_buffer::padding#1 < 0
Inversing boolean not [355] printf_number_buffer::$7 = 0 == printf_number_buffer::buffer_sign#2 from [354] printf_number_buffer::$30 = 0 != printf_number_buffer::buffer_sign#2
Inversing boolean not [373] printf_number_buffer::$12 = 0 == printf_number_buffer::format_upper_case#1 from [372] printf_number_buffer::$31 = 0 != printf_number_buffer::format_upper_case#1
Inversing boolean not [387] printf_number_buffer::$14 = 0 == printf_number_buffer::format_zero_padding#3 from [386] printf_number_buffer::$32 = 0 != printf_number_buffer::format_zero_padding#3
Inversing boolean not [454] main::$7 = main::pwd[main::$5] != main::ch#0 from [453] main::$6 = main::pwd[main::$5] == main::ch#0
Inversing boolean not [550] main::$10 = main::pwd[main::$8] != main::ch#1 from [549] main::$9 = main::pwd[main::$8] == main::ch#1
Inversing boolean not [563] main::$12 = *main::pwd != main::ch#2 from [562] main::$11 = *main::pwd == main::ch#2
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias memcpy::src#2 = memcpy::src#3 
Alias memcpy::dst#2 = memcpy::dst#3 
Alias memcpy::src_end#1 = memcpy::src_end#2 
Alias memcpy::destination#3 = memcpy::destination#5 memcpy::destination#4 memcpy::return#0 memcpy::return#4 memcpy::return#1 
Alias memset::return#0 = memset::str#2 memset::return#4 memset::return#1 
Alias memset::str#3 = memset::str#4 
Alias memset::num#2 = memset::num#3 
Alias memset::c#4 = memset::c#5 
Alias memset::c#2 = memset::c#3 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#5 = memset::str#6 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#0 strlen::return#3 strlen::return#1 
Alias strlen::str#2 = strlen::str#3 
Alias toupper::ch#1 = toupper::ch#2 toupper::ch#3 toupper::return#1 
Alias toupper::return#0 = toupper::$3 
Alias toupper::return#2 = toupper::return#4 
Alias strupr::src#0 = strupr::str#1 
Alias strupr::src#2 = strupr::src#3 strupr::src#4 
Alias strupr::str#2 = strupr::str#5 strupr::str#3 strupr::str#4 strupr::return#0 strupr::return#3 strupr::return#1 
Alias toupper::return#3 = toupper::return#5 
Alias utoa::value#10 = utoa::value#8 utoa::value#12 utoa::value#13 utoa::value#9 utoa::value#14 utoa::value#15 utoa::value#11 
Alias utoa::buffer#10 = utoa::buffer#17 utoa::buffer#21 utoa::buffer#16 utoa::buffer#18 utoa::buffer#13 utoa::buffer#19 utoa::buffer#20 utoa::buffer#6 
Alias utoa::radix#1 = utoa::radix#2 utoa::radix#3 utoa::radix#4 
Alias utoa::digit#2 = utoa::digit#3 utoa::digit#6 utoa::digit#5 
Alias utoa::digit_values#10 = utoa::digit_values#5 utoa::digit_values#6 utoa::digit_values#9 
Alias utoa::value#2 = utoa::value#5 utoa::value#3 utoa::value#4 
Alias utoa::started#2 = utoa::started#3 
Alias utoa::buffer#11 = utoa::buffer#12 utoa::buffer#7 utoa::buffer#8 utoa::buffer#9 
Alias utoa::max_digits#10 = utoa::max_digits#8 utoa::max_digits#5 utoa::max_digits#9 
Alias utoa::digit_value#0 = utoa::digit_value#1 
Alias utoa_append::return#0 = utoa_append::return#3 
Alias utoa::value#0 = utoa::$9 
Alias utoa_append::digit#2 = utoa_append::digit#4 utoa_append::digit#3 
Alias utoa_append::value#2 = utoa_append::value#3 utoa_append::value#4 utoa_append::return#1 utoa_append::return#4 utoa_append::return#2 
Alias utoa_append::sub#1 = utoa_append::sub#2 
Alias utoa_append::buffer#1 = utoa_append::buffer#4 utoa_append::buffer#2 
Alias clrscr::line_text#5 = clrscr::line_text#6 
Alias clrscr::line_cols#5 = clrscr::line_cols#6 
Alias clrscr::l#2 = clrscr::l#5 
Alias clrscr::line_text#2 = clrscr::line_text#4 clrscr::line_text#3 
Alias clrscr::c#2 = clrscr::c#3 
Alias clrscr::line_cols#2 = clrscr::line_cols#4 clrscr::line_cols#3 
Alias clrscr::l#3 = clrscr::l#6 clrscr::l#4 
Alias gotoxy::x#5 = gotoxy::x#6 
Alias gotoxy::y#5 = gotoxy::y#6 
Alias cputc::c#0 = cputc::c#1 
Alias printf_str::c#1 = printf_str::$0 printf_str::c#2 
Alias printf_str::putc#10 = printf_str::putc#9 
Alias printf_str::s#0 = printf_str::s#12 
Alias printf_padding::pad#3 = printf_padding::pad#4 printf_padding::pad#6 
Alias printf_padding::putc#3 = printf_padding::putc#4 printf_padding::putc#6 
Alias printf_padding::i#2 = printf_padding::i#4 printf_padding::i#3 
Alias printf_padding::length#3 = printf_padding::length#6 printf_padding::length#5 
Alias printf_uint::uvalue#7 = printf_uint::uvalue#9 printf_uint::uvalue#8 
Alias printf_uint::format_radix#10 = printf_uint::format_radix#8 printf_uint::format_radix#9 
Alias printf_uint::putc#10 = printf_uint::putc#8 printf_uint::putc#9 
Alias printf_uint::format_min_length#10 = printf_uint::format_min_length#8 printf_uint::format_min_length#9 
Alias printf_uint::format_justify_left#10 = printf_uint::format_justify_left#8 printf_uint::format_justify_left#9 
Alias printf_uint::format_sign_always#10 = printf_uint::format_sign_always#9 printf_uint::format_sign_always#6 
Alias printf_uint::format_zero_padding#10 = printf_uint::format_zero_padding#8 printf_uint::format_zero_padding#9 
Alias printf_uint::format_upper_case#10 = printf_uint::format_upper_case#8 printf_uint::format_upper_case#9 
Alias printf_uint::putc#6 = printf_uint::putc#7 
Alias printf_uint::format_min_length#6 = printf_uint::format_min_length#7 
Alias printf_uint::format_justify_left#6 = printf_uint::format_justify_left#7 
Alias printf_uint::format_sign_always#7 = printf_uint::format_sign_always#8 
Alias printf_uint::format_zero_padding#6 = printf_uint::format_zero_padding#7 
Alias printf_uint::format_upper_case#6 = printf_uint::format_upper_case#7 
Alias printf_uint::format_radix#6 = printf_uint::format_radix#7 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#4 printf_number_buffer::buffer_digits#17 printf_number_buffer::buffer_digits#18 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#4 printf_number_buffer::buffer_sign#7 printf_number_buffer::buffer_sign#11 
Alias printf_number_buffer::format_min_length#1 = printf_number_buffer::format_min_length#5 printf_number_buffer::format_min_length#3 printf_number_buffer::format_min_length#4 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#3 printf_number_buffer::format_justify_left#7 printf_number_buffer::format_justify_left#8 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#15 printf_number_buffer::format_zero_padding#4 printf_number_buffer::format_zero_padding#11 
Alias printf_number_buffer::putc#12 = printf_number_buffer::putc#20 printf_number_buffer::putc#18 printf_number_buffer::putc#19 
Alias printf_number_buffer::format_upper_case#13 = printf_number_buffer::format_upper_case#15 printf_number_buffer::format_upper_case#9 printf_number_buffer::format_upper_case#14 
Alias strlen::return#2 = strlen::return#4 
Alias printf_number_buffer::padding#1 = printf_number_buffer::$21 
Alias printf_number_buffer::len#0 = printf_number_buffer::len#3 
Alias printf_number_buffer::format_justify_left#4 = printf_number_buffer::format_justify_left#5 
Alias printf_number_buffer::format_zero_padding#5 = printf_number_buffer::format_zero_padding#6 
Alias printf_number_buffer::buffer_sign#8 = printf_number_buffer::buffer_sign#9 
Alias printf_number_buffer::putc#13 = printf_number_buffer::putc#14 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#11 
Alias printf_number_buffer::buffer_digits#14 = printf_number_buffer::buffer_digits#15 
Alias printf_number_buffer::putc#1 = printf_number_buffer::putc#6 printf_number_buffer::putc#15 
Alias printf_number_buffer::padding#12 = printf_number_buffer::padding#4 printf_number_buffer::padding#3 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#5 printf_number_buffer::buffer_sign#6 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#16 printf_number_buffer::format_zero_padding#12 
Alias printf_number_buffer::format_upper_case#12 = printf_number_buffer::format_upper_case#7 printf_number_buffer::format_upper_case#8 
Alias printf_number_buffer::buffer_digits#12 = printf_number_buffer::buffer_digits#16 printf_number_buffer::buffer_digits#13 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#19 printf_number_buffer::format_justify_left#18 
Alias printf_number_buffer::buffer_sign#2 = printf_number_buffer::buffer_sign#3 
Alias printf_number_buffer::putc#2 = printf_number_buffer::putc#7 
Alias printf_number_buffer::format_zero_padding#7 = printf_number_buffer::format_zero_padding#8 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#9 
Alias printf_number_buffer::format_upper_case#4 = printf_number_buffer::format_upper_case#5 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#9 
Alias printf_number_buffer::format_justify_left#15 = printf_number_buffer::format_justify_left#16 
Alias printf_number_buffer::putc#16 = printf_number_buffer::putc#3 printf_number_buffer::putc#8 
Alias printf_number_buffer::padding#15 = printf_number_buffer::padding#6 printf_number_buffer::padding#5 
Alias printf_number_buffer::format_upper_case#2 = printf_number_buffer::format_upper_case#6 printf_number_buffer::format_upper_case#3 
Alias printf_number_buffer::buffer_digits#11 = printf_number_buffer::buffer_digits#8 printf_number_buffer::buffer_digits#7 
Alias printf_number_buffer::format_zero_padding#17 = printf_number_buffer::format_zero_padding#19 printf_number_buffer::format_zero_padding#2 
Alias printf_number_buffer::format_justify_left#12 = printf_number_buffer::format_justify_left#17 printf_number_buffer::format_justify_left#13 
Alias printf_number_buffer::format_zero_padding#3 = printf_number_buffer::format_zero_padding#9 
Alias printf_number_buffer::format_justify_left#2 = printf_number_buffer::format_justify_left#6 
Alias printf_number_buffer::padding#11 = printf_number_buffer::padding#7 printf_number_buffer::padding#8 
Alias printf_number_buffer::putc#11 = printf_number_buffer::putc#4 printf_number_buffer::putc#5 
Alias printf_number_buffer::buffer_digits#3 = printf_number_buffer::buffer_digits#6 printf_number_buffer::buffer_digits#5 
Alias printf_number_buffer::putc#10 = printf_number_buffer::putc#17 printf_number_buffer::putc#9 
Alias printf_number_buffer::format_zero_padding#13 = printf_number_buffer::format_zero_padding#18 printf_number_buffer::format_zero_padding#14 
Alias printf_number_buffer::format_justify_left#10 = printf_number_buffer::format_justify_left#14 printf_number_buffer::format_justify_left#9 
Alias printf_number_buffer::padding#13 = printf_number_buffer::padding#16 printf_number_buffer::padding#14 
Alias strtouc::val#3 = strtouc::val#5 strtouc::val#4 strtouc::return#0 strtouc::return#4 strtouc::return#1 
Alias strtouc::c#2 = strtouc::c#3 
Alias strtouc::str#4 = strtouc::str#6 strtouc::str#5 
Alias strtouc::endptr#2 = strtouc::endptr#5 strtouc::endptr#3 
Alias strtouc::val#1 = strtouc::$3 
Alias main::valid_a#17 = main::valid_a#22 main::valid_a#6 main::valid_a#20 main::valid_a#18 main::valid_a#4 main::valid_a#2 
Alias main::invalid_a#11 = main::invalid_a#22 main::invalid_a#19 main::invalid_a#18 main::invalid_a#8 main::invalid_a#6 main::invalid_a#4 main::invalid_a#2 main::invalid_a#17 
Alias main::valid_b#11 = main::valid_b#26 main::valid_b#27 main::valid_b#24 main::valid_b#23 main::valid_b#25 main::valid_b#21 main::valid_b#16 main::valid_b#13 main::valid_b#9 main::valid_b#6 main::valid_b#4 main::valid_b#2 main::valid_b#22 
Alias main::invalid_b#11 = main::invalid_b#26 main::invalid_b#28 main::invalid_b#24 main::invalid_b#23 main::invalid_b#29 main::invalid_b#27 main::invalid_b#25 main::invalid_b#21 main::invalid_b#16 main::invalid_b#13 main::invalid_b#9 main::invalid_b#6 main::invalid_b#4 main::invalid_b#2 main::invalid_b#22 
Alias main::total#10 = main::total#33 main::total#22 main::total#32 main::total#31 main::total#19 main::total#16 main::total#12 main::total#9 main::total#5 main::total#2 main::total#23 main::total#20 main::total#17 main::total#13 main::total#6 main::total#3 main::total#30 
Alias strtouc::return#2 = strtouc::return#5 
Alias strtouc::return#3 = strtouc::return#6 
Alias main::min#0 = main::min#1 main::min#10 
Alias main::count_b#0 = main::count_b#3 
Alias main::max#0 = main::max#3 
Alias main::ch#0 = main::ch#3 
Alias main::count_b#4 = main::count_b#6 
Alias main::ch#1 = main::ch#7 
Alias main::min#6 = main::min#7 
Alias main::max#1 = main::max#7 
Alias main::valid_a#11 = main::valid_a#12 
Alias main::invalid_a#12 = main::invalid_a#13 
Alias main::valid_b#17 = main::valid_b#18 
Alias main::invalid_b#17 = main::invalid_b#18 
Alias main::total#26 = main::total#27 
Alias main::ch#2 = main::ch#4 main::ch#8 
Alias main::count_a#2 = main::count_a#5 main::count_a#4 main::count_a#3 
Alias main::min#2 = main::min#9 main::min#3 main::min#8 
Alias main::max#2 = main::max#9 main::max#4 main::max#8 
Alias main::valid_a#13 = main::valid_a#14 main::valid_a#7 main::valid_a#5 main::valid_a#3 main::valid_a#21 
Alias main::invalid_a#14 = main::invalid_a#15 main::invalid_a#7 main::invalid_a#5 main::invalid_a#24 main::invalid_a#3 
Alias main::count_b#10 = main::count_b#14 main::count_b#9 main::count_b#13 main::count_b#8 main::count_b#7 
Alias main::valid_b#10 = main::valid_b#20 main::valid_b#12 main::valid_b#19 main::valid_b#8 main::valid_b#7 
Alias main::invalid_b#10 = main::invalid_b#20 main::invalid_b#12 main::invalid_b#19 main::invalid_b#8 main::invalid_b#7 
Alias main::total#14 = main::total#29 main::total#21 main::total#18 main::total#28 main::total#15 
Alias main::valid_b#29 = main::valid_b#3 main::valid_b#5 
Alias main::total#11 = main::total#7 main::total#8 
Alias main::valid_a#15 = main::valid_a#19 main::valid_a#16 
Alias main::invalid_a#20 = main::invalid_a#23 main::invalid_a#21 
Alias main::invalid_b#3 = main::invalid_b#31 main::invalid_b#5 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias utoa::value#10 = utoa::value#7 
Alias utoa::buffer#10 = utoa::buffer#15 
Alias utoa::digit#2 = utoa::digit#4 
Alias utoa::max_digits#10 = utoa::max_digits#6 
Alias utoa::digit_values#10 = utoa::digit_values#7 
Alias gotoxy::x#3 = gotoxy::x#5 
Alias gotoxy::y#4 = gotoxy::y#5 
Alias printf_uint::uvalue#6 = printf_uint::uvalue#7 
Alias printf_uint::format_radix#10 = printf_uint::format_radix#6 
Alias printf_uint::putc#10 = printf_uint::putc#6 
Alias printf_uint::format_min_length#10 = printf_uint::format_min_length#6 
Alias printf_uint::format_justify_left#10 = printf_uint::format_justify_left#6 
Alias printf_uint::format_sign_always#10 = printf_uint::format_sign_always#7 
Alias printf_uint::format_zero_padding#10 = printf_uint::format_zero_padding#6 
Alias printf_uint::format_upper_case#10 = printf_uint::format_upper_case#6 
Alias printf_number_buffer::format_min_length#1 = printf_number_buffer::format_min_length#2 
Alias printf_number_buffer::format_justify_left#11 = printf_number_buffer::format_justify_left#4 
Alias printf_number_buffer::format_zero_padding#10 = printf_number_buffer::format_zero_padding#5 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#8 
Alias printf_number_buffer::putc#12 = printf_number_buffer::putc#13 
Alias printf_number_buffer::format_upper_case#10 = printf_number_buffer::format_upper_case#13 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#14 
Alias printf_number_buffer::buffer_sign#10 = printf_number_buffer::buffer_sign#2 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#7 printf_number_buffer::format_zero_padding#17 printf_number_buffer::format_zero_padding#13 printf_number_buffer::format_zero_padding#3 
Alias printf_number_buffer::padding#10 = printf_number_buffer::padding#12 printf_number_buffer::padding#15 printf_number_buffer::padding#13 printf_number_buffer::padding#11 
Alias printf_number_buffer::putc#1 = printf_number_buffer::putc#2 printf_number_buffer::putc#16 printf_number_buffer::putc#10 printf_number_buffer::putc#11 
Alias printf_number_buffer::format_upper_case#1 = printf_number_buffer::format_upper_case#4 printf_number_buffer::format_upper_case#12 printf_number_buffer::format_upper_case#2 
Alias printf_number_buffer::buffer_digits#10 = printf_number_buffer::buffer_digits#12 printf_number_buffer::buffer_digits#11 printf_number_buffer::buffer_digits#3 printf_number_buffer::buffer_digits#2 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#15 printf_number_buffer::format_justify_left#12 printf_number_buffer::format_justify_left#10 printf_number_buffer::format_justify_left#2 
Alias main::max#0 = main::max#1 main::max#5 
Alias main::ch#0 = main::ch#1 main::ch#5 
Alias main::min#0 = main::min#6 main::min#4 
Alias main::valid_a#11 = main::valid_a#17 main::valid_a#9 
Alias main::invalid_a#11 = main::invalid_a#12 main::invalid_a#9 
Alias main::valid_b#11 = main::valid_b#17 main::valid_b#14 
Alias main::invalid_b#11 = main::invalid_b#17 main::invalid_b#14 
Alias main::total#10 = main::total#26 main::total#24 
Alias main::ch#2 = main::ch#6 
Alias main::min#2 = main::min#5 
Alias main::max#2 = main::max#6 
Alias main::valid_a#10 = main::valid_a#13 
Alias main::invalid_a#10 = main::invalid_a#14 
Alias main::count_b#10 = main::count_b#12 main::count_b#5 
Alias main::valid_b#10 = main::valid_b#15 main::valid_b#29 
Alias main::invalid_b#10 = main::invalid_b#15 main::invalid_b#3 
Alias main::total#11 = main::total#25 main::total#14 main::total#4 
Alias main::valid_a#15 = main::valid_a#8 
Alias main::invalid_a#16 = main::invalid_a#20 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias printf_number_buffer::format_justify_left#1 = printf_number_buffer::format_justify_left#11 
Alias printf_number_buffer::format_zero_padding#1 = printf_number_buffer::format_zero_padding#10 
Alias printf_number_buffer::buffer_sign#1 = printf_number_buffer::buffer_sign#10 
Alias printf_number_buffer::putc#1 = printf_number_buffer::putc#12 
Alias printf_number_buffer::format_upper_case#1 = printf_number_buffer::format_upper_case#10 
Alias printf_number_buffer::buffer_digits#1 = printf_number_buffer::buffer_digits#10 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values memcpy::src_end#1 memcpy::src_end#0
Identical Phi Values memcpy::destination#3 memcpy::destination#2
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#5 memset::str#3
Identical Phi Values memset::c#2 memset::c#4
Identical Phi Values strlen::str#4 strlen::str#1
Identical Phi Values toupper::ch#1 toupper::ch#0
Identical Phi Values strupr::src#0 strupr::str#0
Identical Phi Values strupr::str#2 strupr::src#0
Identical Phi Values utoa::radix#1 utoa::radix#0
Identical Phi Values utoa::value#10 utoa::value#1
Identical Phi Values utoa::buffer#10 utoa::buffer#5
Identical Phi Values utoa::max_digits#10 utoa::max_digits#7
Identical Phi Values utoa::digit_values#10 utoa::digit_values#8
Identical Phi Values utoa_append::value#5 utoa_append::value#0
Identical Phi Values utoa_append::sub#3 utoa_append::sub#0
Identical Phi Values utoa_append::buffer#3 utoa_append::buffer#0
Identical Phi Values utoa_append::sub#1 utoa_append::sub#3
Identical Phi Values utoa_append::buffer#1 utoa_append::buffer#3
Identical Phi Values clrscr::line_text#2 clrscr::line_text#5
Identical Phi Values clrscr::line_cols#2 clrscr::line_cols#5
Identical Phi Values clrscr::l#3 clrscr::l#2
Identical Phi Values printf_str::putc#10 printf_str::putc#11
Identical Phi Values printf_padding::length#3 printf_padding::length#4
Identical Phi Values printf_padding::pad#3 printf_padding::pad#5
Identical Phi Values printf_padding::putc#3 printf_padding::putc#5
Identical Phi Values printf_number_buffer::format_min_length#1 printf_number_buffer::format_min_length#0
Identical Phi Values printf_number_buffer::format_justify_left#1 printf_number_buffer::format_justify_left#0
Identical Phi Values printf_number_buffer::format_zero_padding#1 printf_number_buffer::format_zero_padding#0
Identical Phi Values printf_number_buffer::buffer_digits#1 printf_number_buffer::buffer_digits#0
Identical Phi Values printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0
Identical Phi Values printf_number_buffer::putc#1 printf_number_buffer::putc#0
Identical Phi Values printf_number_buffer::format_upper_case#1 printf_number_buffer::format_upper_case#0
Identical Phi Values strtouc::endptr#2 strtouc::endptr#4
Identical Phi Values main::ch#2 main::ch#0
Identical Phi Values main::min#2 main::min#0
Identical Phi Values main::max#2 main::max#0
Identical Phi Values main::valid_a#10 main::valid_a#11
Identical Phi Values main::invalid_a#10 main::invalid_a#11
Identical Phi Values main::count_b#10 main::count_b#11
Identical Phi Values main::valid_b#10 main::valid_b#11
Identical Phi Values main::invalid_b#10 main::invalid_b#11
Identical Phi Values main::total#11 main::total#10
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#3
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memcpy::$1 [7] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
Simple Condition memset::$1 [14] if(memset::num#2<=0) goto memset::@1
Simple Condition memset::$3 [21] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition strlen::$0 [29] if(0!=*strlen::str#2) goto strlen::@2
Simple Condition strupr::$1 [44] if(0!=*strupr::src#2) goto strupr::@2
Simple Condition utoa::$0 [56] if(utoa::radix#0==DECIMAL) goto utoa::@1
Simple Condition utoa::$1 [60] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
Simple Condition utoa::$2 [64] if(utoa::radix#0==OCTAL) goto utoa::@3
Simple Condition utoa::$3 [68] if(utoa::radix#0==BINARY) goto utoa::@4
Simple Condition utoa::$5 [85] if(utoa::digit#2<utoa::$4) goto utoa::@11
Simple Condition utoa_append::$0 [110] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
Simple Condition clrscr::$0 [120] if(clrscr::l#2<$19) goto clrscr::@2
Simple Condition clrscr::$1 [128] if(clrscr::c#2<$28) goto clrscr::@5
Simple Condition gotoxy::$1 [138] if(gotoxy::y#3<=$19) goto gotoxy::@1
Simple Condition gotoxy::$3 [141] if(gotoxy::x#3<$28) goto gotoxy::@2
Simple Condition cputc::$0 [156] if(cputc::c#0=='
') goto cputc::@1
Simple Condition cputc::$2 [162] if(conio_cursor_x!=$28) goto cputc::@return
Simple Condition cscroll::$1 [172] if(conio_cursor_y!=$19) goto cscroll::@return
Simple Condition cscroll::$7 [174] if(0!=conio_scroll_enable) goto cscroll::@3
Simple Condition conio_c64_init::$1 [204] if(conio_c64_init::line#0<$19) goto conio_c64_init::@1
Simple Condition printf_str::$2 [217] if(0!=printf_str::c#1) goto printf_str::@2
Simple Condition printf_padding::$0 [226] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
Simple Condition printf_uint::$5 [234] if(0!=printf_uint::format_sign_always#10) goto printf_uint::@1
Simple Condition printf_number_buffer::$0 [257] if(0==printf_number_buffer::format_min_length#0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$20 [271] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@13
Simple Condition printf_number_buffer::$23 [276] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@1
Simple Condition printf_number_buffer::$7 [280] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@3
Simple Condition printf_number_buffer::$12 [292] if(0==printf_number_buffer::format_upper_case#0) goto printf_number_buffer::@5
Simple Condition main::$17 [337] if(0!=*main::pwd) goto main::@2
Simple Condition main::$7 [355] if(main::pwd[main::$5]!=main::ch#0) goto main::@4
Simple Condition main::$10 [437] if(main::pwd[main::$8]!=main::ch#0) goto main::@5
Simple Condition main::$18 [444] if(0!=*main::pwd) goto main::@7
Simple Condition main::$12 [446] if(*main::pwd!=main::ch#0) goto main::@9
Simple Condition main::$16 [458] if(main::count_b#11==1) goto main::@14
Successful SSA optimization Pass2ConditionalJumpSimplification
Rewriting && if()-condition to two if()s [36] toupper::$2 = toupper::$0 && toupper::$1
Rewriting ! if()-condition to reversed if() [90] utoa::$8 = ! utoa::$7
Rewriting || if()-condition to two if()s [89] utoa::$7 = utoa::started#2 || utoa::$6
Rewriting ! if()-condition to reversed if() [263] printf_number_buffer::$5 = ! printf_number_buffer::$4
Rewriting && if()-condition to two if()s [262] printf_number_buffer::$4 = printf_number_buffer::$3 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [261] printf_number_buffer::$3 = printf_number_buffer::$1 && printf_number_buffer::$2
Rewriting ! if()-condition to reversed if() [286] printf_number_buffer::$10 = ! printf_number_buffer::$9
Rewriting && if()-condition to two if()s [285] printf_number_buffer::$9 = printf_number_buffer::format_zero_padding#0 && printf_number_buffer::padding#10
Rewriting ! if()-condition to reversed if() [303] printf_number_buffer::$17 = ! printf_number_buffer::$16
Rewriting && if()-condition to two if()s [302] printf_number_buffer::$16 = printf_number_buffer::$15 && printf_number_buffer::padding#10
Rewriting && if()-condition to two if()s [301] printf_number_buffer::$15 = printf_number_buffer::format_justify_left#0 && printf_number_buffer::$14
Rewriting && if()-condition to two if()s [319] strtouc::$2 = strtouc::$0 && strtouc::$1
Rewriting && if()-condition to two if()s [449] main::$15 = main::$13 && main::$14
Successful SSA optimization Pass2ConditionalAndOrRewriting
Warning! Adding boolean cast to non-boolean condition utoa::started#2
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_zero_padding#0
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::format_justify_left#0
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Warning! Adding boolean cast to non-boolean condition printf_number_buffer::padding#10
Constant right-side identified [177] memcpy::num#0 = (unumber)$19*$28-$28
Constant right-side identified [182] memcpy::num#1 = (unumber)$19*$28-$28
Constant right-side identified [209] conio_c64_init::line#1 = (unumber)$19-1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant strlen::len#0 = 0
Constant utoa::max_digits#0 = 0
Constant utoa::digit_values#0 = (unsigned int *) 0
Constant utoa::max_digits#1 = 5
Constant utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant utoa::max_digits#2 = 4
Constant utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant utoa::max_digits#3 = 6
Constant utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant utoa::max_digits#4 = $10
Constant utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant utoa::started#0 = 0
Constant utoa::digit#0 = 0
Constant utoa::started#1 = 1
Constant utoa_append::digit#0 = 0
Constant clrscr::line_text#0 = CONIO_SCREEN_TEXT
Constant clrscr::line_cols#0 = CONIO_SCREEN_COLORS
Constant clrscr::l#0 = 0
Constant clrscr::c#0 = 0
Constant gotoxy::y#0 = 0
Constant gotoxy::x#0 = 0
Constant memcpy::destination#0 = (void *)CONIO_SCREEN_TEXT
Constant memcpy::source#0 = (void *)CONIO_SCREEN_TEXT+$28
Constant memcpy::num#0 = (unumber)$19*$28-$28
Constant memcpy::destination#1 = (void *)CONIO_SCREEN_COLORS
Constant memcpy::source#1 = (void *)CONIO_SCREEN_COLORS+$28
Constant memcpy::num#1 = (unumber)$19*$28-$28
Constant memset::str#0 = (void *)CONIO_SCREEN_TEXT+(unsigned int)$19*$28-$28
Constant memset::c#0 = ' '
Constant memset::num#0 = $28
Constant memset::str#1 = (void *)CONIO_SCREEN_COLORS+(unsigned int)$19*$28-$28
Constant memset::num#1 = $28
Constant gotoxy::x#1 = 0
Constant gotoxy::y#1 = 0
Constant gotoxy::x#2 = 0
Constant conio_c64_init::line#1 = (unumber)$19-1
Constant printf_str::c#0 = 0
Constant printf_padding::i#0 = 0
Constant printf_uint::$1 = '+'
Constant printf_uint::$0 = 0
Constant utoa::buffer#5 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant printf_number_buffer::padding#0 = 0
Constant printf_number_buffer::padding#2 = 0
Constant printf_padding::pad#0 = ' '
Constant printf_padding::pad#1 = '0'
Constant printf_padding::pad#2 = ' '
Constant strtouc::val#0 = 0
Constant main::valid_a#0 = 0
Constant main::invalid_a#0 = 0
Constant main::valid_b#0 = 0
Constant main::invalid_b#0 = 0
Constant main::total#0 = 0
Constant strtouc::endptr#0 = &main::pwd
Constant strtouc::endptr#1 = &main::pwd
Constant main::count_b#0 = 0
Constant printf_str::putc#1 = &cputc
Constant printf_str::s#2 = main::s
Constant printf_uint::putc#0 = &cputc
Constant printf_uint::format_min_length#0 = 0
Constant printf_uint::format_justify_left#0 = 0
Constant printf_uint::format_sign_always#0 = 0
Constant printf_uint::format_zero_padding#0 = 0
Constant printf_uint::format_upper_case#0 = 0
Constant printf_uint::format_radix#0 = DECIMAL
Constant printf_str::putc#2 = &cputc
Constant printf_str::s#3 = main::s1
Constant printf_uint::putc#1 = &cputc
Constant printf_uint::format_min_length#1 = 0
Constant printf_uint::format_justify_left#1 = 0
Constant printf_uint::format_sign_always#1 = 0
Constant printf_uint::format_zero_padding#1 = 0
Constant printf_uint::format_upper_case#1 = 0
Constant printf_uint::format_radix#1 = DECIMAL
Constant printf_str::putc#3 = &cputc
Constant printf_str::s#4 = main::s2
Constant printf_uint::putc#2 = &cputc
Constant printf_uint::format_min_length#2 = 0
Constant printf_uint::format_justify_left#2 = 0
Constant printf_uint::format_sign_always#2 = 0
Constant printf_uint::format_zero_padding#2 = 0
Constant printf_uint::format_upper_case#2 = 0
Constant printf_uint::format_radix#2 = DECIMAL
Constant printf_str::putc#4 = &cputc
Constant printf_str::s#5 = main::s3
Constant printf_str::putc#5 = &cputc
Constant printf_str::s#6 = main::s4
Constant printf_uint::putc#3 = &cputc
Constant printf_uint::format_min_length#3 = 0
Constant printf_uint::format_justify_left#3 = 0
Constant printf_uint::format_sign_always#3 = 0
Constant printf_uint::format_zero_padding#3 = 0
Constant printf_uint::format_upper_case#3 = 0
Constant printf_uint::format_radix#3 = DECIMAL
Constant printf_str::putc#6 = &cputc
Constant printf_str::s#7 = main::s5
Constant printf_uint::putc#4 = &cputc
Constant printf_uint::format_min_length#4 = 0
Constant printf_uint::format_justify_left#4 = 0
Constant printf_uint::format_sign_always#4 = 0
Constant printf_uint::format_zero_padding#4 = 0
Constant printf_uint::format_upper_case#4 = 0
Constant printf_uint::format_radix#4 = DECIMAL
Constant printf_str::putc#7 = &cputc
Constant printf_str::s#8 = main::s6
Constant printf_uint::putc#5 = &cputc
Constant printf_uint::format_min_length#5 = 0
Constant printf_uint::format_justify_left#5 = 0
Constant printf_uint::format_sign_always#5 = 0
Constant printf_uint::format_zero_padding#5 = 0
Constant printf_uint::format_upper_case#5 = 0
Constant printf_uint::format_radix#5 = DECIMAL
Constant printf_str::putc#8 = &cputc
Constant printf_str::s#9 = main::s7
Constant main::count_a#0 = 0
Constant conio_textcolor = CONIO_TEXTCOLOR_DEFAULT
Constant conio_scroll_enable = 1
Successful SSA optimization Pass2ConstantIdentification
Constant memset::c#1 = conio_textcolor
Constant strlen::str#1 = printf_number_buffer::buffer_digits#0
Constant printf_str::s#1 = printf_number_buffer::buffer_digits#0
Constant strupr::str#0 = printf_number_buffer::buffer_digits#0
Successful SSA optimization Pass2ConstantIdentification
Constant strupr::return#2 = strupr::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [174] if(0!=conio_scroll_enable) goto cscroll::@3
Successful SSA optimization Pass2ConstantIfs
Consolidated constant strings into main::s1
Consolidated constant strings into main::s2
Consolidated constant strings into main::s3
Successful SSA optimization Pass2ConstantStringConsolidation
Rewriting conditional comparison [138] if(gotoxy::y#3<=$19) goto gotoxy::@1
Simplifying expression containing zero (char *)&printf_buffer in [238] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN) = printf_uint::$2
Simplifying expression containing zero (char *)&printf_buffer in [244] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN)
Successful SSA optimization PassNSimplifyExpressionWithZero
Removing PHI-reference to removed block (cscroll::@2) in block gotoxy
Removing PHI-reference to removed block (cscroll::@2) in block gotoxy
Removing unused block cscroll::@2
Removing unused block cscroll::@8
Removing unused block main::@return
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused variable memcpy::return#2 and assignment [127] memcpy::return#2 = memcpy::destination#2
Eliminating unused variable memcpy::return#3 and assignment [129] memcpy::return#3 = memcpy::destination#2
Eliminating unused variable memset::return#2 and assignment [131] memset::return#2 = memset::str#3
Eliminating unused variable memset::return#3 and assignment [133] memset::return#3 = memset::str#3
Eliminating unused variable printf_number_buffer::format_sign_always#0 and assignment [172] printf_number_buffer::format_sign_always#0 = printf_uint::format_sign_always#10
Eliminating unused variable printf_number_buffer::format_radix#0 and assignment [175] printf_number_buffer::format_radix#0 = printf_uint::format_radix#10
Eliminating unused constant strupr::return#2
Eliminating unused constant utoa::max_digits#0
Eliminating unused constant utoa::digit_values#0
Eliminating unused constant gotoxy::x#1
Eliminating unused constant gotoxy::y#1
Eliminating unused constant printf_str::c#0
Eliminating unused constant OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_SIGN
Eliminating unused constant conio_scroll_enable
Successful SSA optimization PassNEliminateUnusedVars
Adding number conversion cast (unumber) 0 in utoa::$12 = 0 != utoa::started#2
Adding number conversion cast (unumber) $19+1 in if(gotoxy::y#3<$19+1) goto gotoxy::@1
Adding number conversion cast (unumber) 1 in if(gotoxy::y#3<(unumber)$19+1) goto gotoxy::@1
Adding number conversion cast (unumber) 0 in printf_number_buffer::$33 = 0 != printf_number_buffer::format_zero_padding#0
Adding number conversion cast (unumber) 0 in printf_number_buffer::$34 = 0 != printf_number_buffer::format_justify_left#0
Adding number conversion cast (snumber) 0 in printf_number_buffer::$35 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$36 = 0 != printf_number_buffer::padding#10
Adding number conversion cast (snumber) 0 in printf_number_buffer::$37 = 0 != printf_number_buffer::padding#10
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 0
Simplifying constant integer cast $19+(unumber)1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Finalized signed number type (signed char) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values gotoxy::y#3 gotoxy::y#2
Identical Phi Values gotoxy::x#3 gotoxy::x#2
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition toupper::$0 [28] if(toupper::ch#0>='a') goto toupper::@3
Simple Condition utoa::$12 [61] if(0!=utoa::started#2) goto utoa::@14
Simple Condition printf_number_buffer::$1 [176] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@22
Simple Condition printf_number_buffer::$33 [192] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@23
Simple Condition printf_number_buffer::$34 [204] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@25
Simple Condition strtouc::$0 [215] if(strtouc::c#2>='0') goto strtouc::@4
Simple Condition main::$13 [272] if(main::count_a#2>=main::min#0) goto main::@37
Simple Condition toupper::$1 [292] if(toupper::ch#0<='z') goto toupper::@1
Simple Condition utoa::$6 [293] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@14
Simple Condition printf_number_buffer::$35 [295] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8
Simple Condition printf_number_buffer::$2 [296] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@21
Simple Condition printf_number_buffer::$36 [298] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10
Simple Condition printf_number_buffer::$37 [300] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12
Simple Condition printf_number_buffer::$14 [301] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@24
Simple Condition strtouc::$1 [302] if(strtouc::c#2<='9') goto strtouc::@2
Simple Condition main::$14 [303] if(main::count_a#2<=main::max#0) goto main::@12
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [28] if(toupper::ch#0<'a') goto toupper::@2
Negating conditional jump and destination [176] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@2
Negating conditional jump and destination [192] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@4
Negating conditional jump and destination [204] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@return
Negating conditional jump and destination [215] if(strtouc::c#2<'0') goto strtouc::@3
Negating conditional jump and destination [272] if(main::count_a#2<main::min#0) goto main::@11
Negating conditional jump and destination [296] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@2
Negating conditional jump and destination [301] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [46] utoa::buffer#0 = ++ utoa::buffer#5
Constant right-side identified [264] main::count_b#1 = ++ main::count_b#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::buffer#0 = ++utoa::buffer#5
Constant main::count_b#1 = ++main::count_b#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [99] if(gotoxy::x#2<$28) goto gotoxy::@2
Successful SSA optimization Pass2ConstantIfs
Removing PHI-reference to removed block (gotoxy::@4) in block gotoxy::@2
Removing unused block gotoxy::@4
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant gotoxy::x#0
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values gotoxy::x#4 gotoxy::x#2
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [45] utoa::buffer#1 = ++ utoa::buffer#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::buffer#1 = ++utoa::buffer#0
Successful SSA optimization Pass2ConstantIdentification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Constant right-side identified [46] utoa::buffer#2 = ++ utoa::buffer#1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::buffer#2 = ++utoa::buffer#1
Successful SSA optimization Pass2ConstantIdentification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Inlining Noop Cast [1] memcpy::src#0 = (char *)memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [2] memcpy::dst#0 = (char *)memcpy::destination#2 keeping memcpy::destination#2
Inlining Noop Cast [3] memcpy::$2 = (char *)memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [13] memset::$4 = (char *)memset::str#3 keeping memset::str#3
Inlining Noop Cast [15] memset::dst#0 = (char *)memset::str#3 keeping memset::str#3
Inlining Noop Cast [171] printf_number_buffer::$25 = (signed char)printf_number_buffer::format_min_length#0 keeping printf_number_buffer::format_min_length#0
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [52] utoa::$10 = utoa::digit#2 * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift and addition[94] gotoxy::line_offset#0 = gotoxy::$7 * $28
Rewriting multiplication to use shift and addition[199] strtouc::val#1 = strtouc::val#3 * $a
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memcpy::destination#0
Inlining constant with var siblings memcpy::source#0
Inlining constant with var siblings memcpy::num#0
Inlining constant with var siblings memcpy::destination#1
Inlining constant with var siblings memcpy::source#1
Inlining constant with var siblings memcpy::num#1
Inlining constant with var siblings memset::str#0
Inlining constant with var siblings memset::c#0
Inlining constant with var siblings memset::num#0
Inlining constant with var siblings memset::str#1
Inlining constant with var siblings memset::num#1
Inlining constant with var siblings memset::c#1
Inlining constant with var siblings strlen::len#0
Inlining constant with var siblings strlen::str#1
Inlining constant with var siblings utoa::max_digits#1
Inlining constant with var siblings utoa::digit_values#1
Inlining constant with var siblings utoa::max_digits#2
Inlining constant with var siblings utoa::digit_values#2
Inlining constant with var siblings utoa::max_digits#3
Inlining constant with var siblings utoa::digit_values#3
Inlining constant with var siblings utoa::max_digits#4
Inlining constant with var siblings utoa::digit_values#4
Inlining constant with var siblings utoa::started#0
Inlining constant with var siblings utoa::digit#0
Inlining constant with var siblings utoa::started#1
Inlining constant with var siblings utoa::buffer#5
Inlining constant with var siblings utoa::buffer#0
Inlining constant with var siblings utoa::buffer#1
Inlining constant with var siblings utoa::buffer#2
Inlining constant with var siblings utoa_append::digit#0
Inlining constant with var siblings clrscr::line_text#0
Inlining constant with var siblings clrscr::line_cols#0
Inlining constant with var siblings clrscr::l#0
Inlining constant with var siblings clrscr::c#0
Inlining constant with var siblings gotoxy::y#0
Inlining constant with var siblings conio_c64_init::line#1
Inlining constant with var siblings printf_str::putc#1
Inlining constant with var siblings printf_str::s#2
Inlining constant with var siblings printf_str::putc#2
Inlining constant with var siblings printf_str::s#3
Inlining constant with var siblings printf_str::putc#3
Inlining constant with var siblings printf_str::s#4
Inlining constant with var siblings printf_str::putc#4
Inlining constant with var siblings printf_str::s#5
Inlining constant with var siblings printf_str::putc#5
Inlining constant with var siblings printf_str::s#6
Inlining constant with var siblings printf_str::putc#6
Inlining constant with var siblings printf_str::s#7
Inlining constant with var siblings printf_str::putc#7
Inlining constant with var siblings printf_str::s#8
Inlining constant with var siblings printf_str::putc#8
Inlining constant with var siblings printf_str::s#9
Inlining constant with var siblings printf_str::s#1
Inlining constant with var siblings printf_padding::i#0
Inlining constant with var siblings printf_padding::pad#0
Inlining constant with var siblings printf_padding::pad#1
Inlining constant with var siblings printf_padding::pad#2
Inlining constant with var siblings printf_uint::putc#0
Inlining constant with var siblings printf_uint::format_min_length#0
Inlining constant with var siblings printf_uint::format_justify_left#0
Inlining constant with var siblings printf_uint::format_sign_always#0
Inlining constant with var siblings printf_uint::format_zero_padding#0
Inlining constant with var siblings printf_uint::format_upper_case#0
Inlining constant with var siblings printf_uint::format_radix#0
Inlining constant with var siblings printf_uint::putc#1
Inlining constant with var siblings printf_uint::format_min_length#1
Inlining constant with var siblings printf_uint::format_justify_left#1
Inlining constant with var siblings printf_uint::format_sign_always#1
Inlining constant with var siblings printf_uint::format_zero_padding#1
Inlining constant with var siblings printf_uint::format_upper_case#1
Inlining constant with var siblings printf_uint::format_radix#1
Inlining constant with var siblings printf_uint::putc#2
Inlining constant with var siblings printf_uint::format_min_length#2
Inlining constant with var siblings printf_uint::format_justify_left#2
Inlining constant with var siblings printf_uint::format_sign_always#2
Inlining constant with var siblings printf_uint::format_zero_padding#2
Inlining constant with var siblings printf_uint::format_upper_case#2
Inlining constant with var siblings printf_uint::format_radix#2
Inlining constant with var siblings printf_uint::putc#3
Inlining constant with var siblings printf_uint::format_min_length#3
Inlining constant with var siblings printf_uint::format_justify_left#3
Inlining constant with var siblings printf_uint::format_sign_always#3
Inlining constant with var siblings printf_uint::format_zero_padding#3
Inlining constant with var siblings printf_uint::format_upper_case#3
Inlining constant with var siblings printf_uint::format_radix#3
Inlining constant with var siblings printf_uint::putc#4
Inlining constant with var siblings printf_uint::format_min_length#4
Inlining constant with var siblings printf_uint::format_justify_left#4
Inlining constant with var siblings printf_uint::format_sign_always#4
Inlining constant with var siblings printf_uint::format_zero_padding#4
Inlining constant with var siblings printf_uint::format_upper_case#4
Inlining constant with var siblings printf_uint::format_radix#4
Inlining constant with var siblings printf_uint::putc#5
Inlining constant with var siblings printf_uint::format_min_length#5
Inlining constant with var siblings printf_uint::format_justify_left#5
Inlining constant with var siblings printf_uint::format_sign_always#5
Inlining constant with var siblings printf_uint::format_zero_padding#5
Inlining constant with var siblings printf_uint::format_upper_case#5
Inlining constant with var siblings printf_uint::format_radix#5
Inlining constant with var siblings printf_number_buffer::padding#0
Inlining constant with var siblings printf_number_buffer::padding#2
Inlining constant with var siblings strtouc::val#0
Inlining constant with var siblings strtouc::endptr#0
Inlining constant with var siblings strtouc::endptr#1
Inlining constant with var siblings main::valid_a#0
Inlining constant with var siblings main::invalid_a#0
Inlining constant with var siblings main::valid_b#0
Inlining constant with var siblings main::invalid_b#0
Inlining constant with var siblings main::total#0
Inlining constant with var siblings main::count_b#0
Inlining constant with var siblings main::count_a#0
Inlining constant with var siblings main::count_b#1
Constant inlined utoa::digit_values#1 = RADIX_DECIMAL_VALUES
Constant inlined utoa::digit_values#4 = RADIX_BINARY_VALUES
Constant inlined utoa::digit_values#2 = RADIX_HEXADECIMAL_VALUES
Constant inlined utoa::digit_values#3 = RADIX_OCTAL_VALUES
Constant inlined conio_textcolor = LIGHT_BLUE
Constant inlined clrscr::l#0 = 0
Constant inlined strlen::len#0 = 0
Constant inlined printf_str::s#9 = main::s3
Constant inlined printf_str::s#7 = main::s1
Constant inlined printf_str::s#8 = main::s2
Constant inlined printf_str::s#5 = main::s3
Constant inlined main::count_b#1 = ++0
Constant inlined printf_str::s#6 = main::s4
Constant inlined main::count_b#0 = 0
Constant inlined printf_str::s#3 = main::s1
Constant inlined printf_str::s#4 = main::s2
Constant inlined CONIO_SCREEN_TEXT = DEFAULT_SCREEN
Constant inlined printf_str::s#1 = printf_number_buffer::buffer_digits#0
Constant inlined printf_str::s#2 = main::s
Constant inlined clrscr::line_text#0 = DEFAULT_SCREEN
Constant inlined main::valid_b#0 = 0
Constant inlined memcpy::source#0 = (void *)DEFAULT_SCREEN+$28
Constant inlined memset::c#0 = ' '
Constant inlined memset::c#1 = LIGHT_BLUE
Constant inlined utoa_append::digit#0 = 0
Constant inlined memcpy::destination#0 = (void *)DEFAULT_SCREEN
Constant inlined memcpy::destination#1 = (void *)COLORRAM
Constant inlined utoa::digit#0 = 0
Constant inlined main::count_a#0 = 0
Constant inlined printf_uint::format_upper_case#5 = 0
Constant inlined printf_uint::format_upper_case#4 = 0
Constant inlined printf_uint::format_upper_case#3 = 0
Constant inlined printf_uint::format_upper_case#2 = 0
Constant inlined printf_uint::format_upper_case#1 = 0
Constant inlined printf_uint::format_upper_case#0 = 0
Constant inlined strupr::str#0 = printf_number_buffer::buffer_digits#0
Constant inlined CONIO_TEXTCOLOR_DEFAULT = LIGHT_BLUE
Constant inlined strtouc::endptr#1 = &main::pwd
Constant inlined printf_padding::pad#0 = ' '
Constant inlined strtouc::endptr#0 = &main::pwd
Constant inlined printf_padding::i#0 = 0
Constant inlined printf_padding::pad#1 = '0'
Constant inlined printf_padding::pad#2 = ' '
Constant inlined utoa::started#1 = 1
Constant inlined utoa::started#0 = 0
Constant inlined strtouc::val#0 = 0
Constant inlined gotoxy::y#0 = 0
Constant inlined utoa::buffer#0 = ++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined utoa::buffer#1 = ++++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_str::putc#1 = &cputc
Constant inlined memset::num#1 = $28
Constant inlined printf_str::putc#2 = &cputc
Constant inlined memset::num#0 = $28
Constant inlined printf_str::putc#3 = &cputc
Constant inlined printf_str::putc#8 = &cputc
Constant inlined printf_str::putc#4 = &cputc
Constant inlined printf_str::putc#5 = &cputc
Constant inlined printf_str::putc#6 = &cputc
Constant inlined printf_str::putc#7 = &cputc
Constant inlined main::total#0 = 0
Constant inlined printf_uint::format_zero_padding#3 = 0
Constant inlined printf_uint::putc#5 = &cputc
Constant inlined printf_number_buffer::padding#2 = 0
Constant inlined printf_uint::format_zero_padding#4 = 0
Constant inlined printf_uint::format_zero_padding#1 = 0
Constant inlined printf_uint::putc#3 = &cputc
Constant inlined printf_uint::format_zero_padding#2 = 0
Constant inlined printf_uint::putc#4 = &cputc
Constant inlined printf_uint::putc#1 = &cputc
Constant inlined printf_uint::putc#2 = &cputc
Constant inlined printf_uint::format_zero_padding#5 = 0
Constant inlined printf_uint::putc#0 = &cputc
Constant inlined main::invalid_b#0 = 0
Constant inlined utoa::buffer#5 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined utoa::buffer#2 = ++++++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Constant inlined printf_uint::format_sign_always#0 = 0
Constant inlined printf_uint::format_sign_always#1 = 0
Constant inlined utoa::max_digits#1 = 5
Constant inlined printf_uint::format_sign_always#2 = 0
Constant inlined printf_uint::format_radix#0 = DECIMAL
Constant inlined utoa::max_digits#2 = 4
Constant inlined printf_uint::format_sign_always#3 = 0
Constant inlined printf_uint::format_radix#1 = DECIMAL
Constant inlined utoa::max_digits#3 = 6
Constant inlined printf_uint::format_sign_always#4 = 0
Constant inlined printf_uint::format_radix#2 = DECIMAL
Constant inlined utoa::max_digits#4 = $10
Constant inlined printf_uint::format_sign_always#5 = 0
Constant inlined printf_uint::format_radix#3 = DECIMAL
Constant inlined printf_uint::format_radix#4 = DECIMAL
Constant inlined printf_uint::format_zero_padding#0 = 0
Constant inlined printf_uint::format_radix#5 = DECIMAL
Constant inlined printf_number_buffer::padding#0 = 0
Constant inlined printf_uint::format_justify_left#0 = 0
Constant inlined printf_uint::format_justify_left#2 = 0
Constant inlined printf_uint::format_justify_left#1 = 0
Constant inlined printf_uint::format_justify_left#4 = 0
Constant inlined strlen::str#1 = printf_number_buffer::buffer_digits#0
Constant inlined printf_uint::format_justify_left#3 = 0
Constant inlined printf_uint::format_min_length#4 = 0
Constant inlined printf_uint::format_min_length#5 = 0
Constant inlined conio_c64_init::line#1 = (char)$19-1
Constant inlined memcpy::source#1 = (void *)COLORRAM+$28
Constant inlined printf_uint::format_min_length#0 = 0
Constant inlined printf_uint::format_min_length#1 = 0
Constant inlined printf_uint::format_min_length#2 = 0
Constant inlined printf_uint::format_min_length#3 = 0
Constant inlined printf_uint::format_justify_left#5 = 0
Constant inlined memset::str#1 = (void *)COLORRAM+(unsigned int)$19*$28-$28
Constant inlined memset::str#0 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28
Constant inlined CONIO_SCREEN_COLORS = COLORRAM
Constant inlined printf_uint::$1 = '+'
Constant inlined printf_uint::$0 = 0
Constant inlined main::valid_a#0 = 0
Constant inlined main::s5 = main::s1
Constant inlined main::invalid_a#0 = 0
Constant inlined main::s6 = main::s2
Constant inlined main::s7 = main::s3
Constant inlined memcpy::num#1 = (unsigned int)$19*$28-$28
Constant inlined memcpy::num#0 = (unsigned int)$19*$28-$28
Constant inlined clrscr::c#0 = 0
Constant inlined clrscr::line_cols#0 = COLORRAM
Successful SSA optimization Pass2ConstantInlining
Simplifying constant integer increment ++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
Simplifying constant integer increment ++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++0
Successful SSA optimization Pass2ConstantSimplification
Simplifying constant integer increment ++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1
Simplifying constant integer increment ++(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2
Successful SSA optimization Pass2ConstantSimplification
Adding number conversion cast (unumber) 1 in [44] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1) = 'r'
Adding number conversion cast (unumber) 2 in [45] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2) = 'r'
Adding number conversion cast (unumber) 3 in [46] *((char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3) = 0
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 3
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 3
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias gotoxy::line_offset#0 = gotoxy::$10 
Alias strtouc::val#1 = strtouc::$7 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values memcpy::num#2 (unsigned int)$19*$28-$28
Identical Phi Values memset::num#2 $28
Identical Phi Values printf_uint::format_sign_always#10 0
Identical Phi Values printf_uint::format_radix#10 DECIMAL
Identical Phi Values printf_uint::putc#10 &cputc
Identical Phi Values printf_uint::format_min_length#10 0
Identical Phi Values printf_uint::format_justify_left#10 0
Identical Phi Values printf_uint::format_zero_padding#10 0
Identical Phi Values printf_uint::format_upper_case#10 0
Identical Phi Values strtouc::endptr#4 &main::pwd
Successful SSA optimization Pass2IdenticalPhiElimination
Constant utoa::radix#0 = DECIMAL
Constant printf_number_buffer::putc#0 = &cputc
Constant printf_number_buffer::format_min_length#0 = 0
Constant printf_number_buffer::format_justify_left#0 = 0
Constant printf_number_buffer::format_zero_padding#0 = 0
Constant printf_number_buffer::format_upper_case#0 = 0
Successful SSA optimization Pass2ConstantIdentification
Constant printf_padding::putc#0 = printf_number_buffer::putc#0
Constant printf_padding::putc#1 = printf_number_buffer::putc#0
Constant printf_str::putc#0 = printf_number_buffer::putc#0
Constant printf_padding::putc#2 = printf_number_buffer::putc#0
Successful SSA optimization Pass2ConstantIdentification
Constant value identified (signed char)printf_number_buffer::format_min_length#0 in [168] printf_number_buffer::padding#1 = (signed char)printf_number_buffer::format_min_length#0 - printf_number_buffer::len#2
Successful SSA optimization Pass2ConstantValues
Replacing constant pointer function [177] callexecute cputc 
Successful SSA optimization Pass2ConstantCallPointerIdentification
if() condition always false - eliminating [9] if($28<=0) goto memset::@1
if() condition always true - replacing block destination [34] if(utoa::radix#0==DECIMAL) goto utoa::@1
if() condition always false - eliminating [35] if(utoa::radix#0==HEXADECIMAL) goto utoa::@2
if() condition always false - eliminating [36] if(utoa::radix#0==OCTAL) goto utoa::@3
if() condition always false - eliminating [37] if(utoa::radix#0==BINARY) goto utoa::@4
if() condition always false - eliminating [145] if(0!=0) goto printf_uint::@1
if() condition always true - replacing block destination [159] if(0==printf_number_buffer::format_min_length#0) goto printf_number_buffer::@1
if() condition always false - eliminating [161] if(0!=printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@2
if() condition always true - replacing block destination [175] if(0==printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@4
if() condition always true - replacing block destination [179] if(0==printf_number_buffer::format_upper_case#0) goto printf_number_buffer::@5
if() condition always true - replacing block destination [185] if(0==printf_number_buffer::format_justify_left#0) goto printf_number_buffer::@return
if() condition always false - eliminating [273] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@2
if() condition always false - eliminating [276] if(0!=printf_number_buffer::format_zero_padding#0) goto printf_number_buffer::@return
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (signed char)printf_number_buffer::format_min_length#0 in [168] printf_number_buffer::padding#1 = (signed char)printf_number_buffer::format_min_length#0 - printf_number_buffer::len#2
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero printf_number_buffer::len#2 in [168] printf_number_buffer::padding#1 = 0 - printf_number_buffer::len#2
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating variable strlen::str#2 from unused block strlen::@1
Eliminating variable strlen::len#2 from unused block strlen::@1
Eliminating variable strlen::len#1 from unused block strlen::@2
Eliminating variable strlen::str#0 from unused block strlen::@2
Eliminating variable toupper::return#0 from unused block toupper::@1
Eliminating variable toupper::return#2 from unused block toupper::@return
Eliminating variable strupr::src#2 from unused block strupr::@1
Eliminating variable toupper::ch#0 from unused block strupr::@2
Eliminating variable toupper::return#3 from unused block strupr::@2
Eliminating variable strupr::$0 from unused block strupr::@4
Eliminating variable strupr::src#1 from unused block strupr::@4
Eliminating variable strlen::return#2 from unused block printf_number_buffer::@6
Eliminating variable printf_number_buffer::$19 from unused block printf_number_buffer::@15
Eliminating variable printf_number_buffer::len#0 from unused block printf_number_buffer::@15
Eliminating variable printf_number_buffer::len#2 from unused block printf_number_buffer::@13
Eliminating variable printf_number_buffer::padding#1 from unused block printf_number_buffer::@13
Eliminating variable printf_number_buffer::len#1 from unused block printf_number_buffer::@7
Eliminating variable printf_padding::length#1 from unused block printf_number_buffer::@10
Eliminating variable printf_padding::length#2 from unused block printf_number_buffer::@12
Removing unused procedure strlen
Removing unused procedure block strlen
Removing PHI-reference to removed block (strlen) in block strlen::@1
Removing PHI-reference to removed block (strlen) in block strlen::@1
Removing unused procedure block strlen::@1
Removing unused procedure block strlen::@2
Removing unused procedure block strlen::@3
Removing unused procedure block strlen::@return
Removing unused procedure toupper
Removing unused procedure block toupper
Removing unused procedure block toupper::@1
Removing PHI-reference to removed block (toupper::@1) in block toupper::@return
Removing unused procedure block toupper::@2
Removing PHI-reference to removed block (toupper::@2) in block toupper::@return
Removing unused procedure block toupper::@return
Removing unused procedure block toupper::@3
Removing unused procedure strupr
Removing unused procedure block strupr
Removing PHI-reference to removed block (strupr) in block strupr::@1
Removing unused procedure block strupr::@1
Removing unused procedure block strupr::@2
Removing unused procedure block strupr::@4
Removing unused procedure block strupr::@3
Removing unused procedure block strupr::@return
Removing unused block utoa::@6
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing PHI-reference to removed block (utoa::@2) in block utoa::@5
Removing unused block utoa::@2
Removing unused block utoa::@7
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing PHI-reference to removed block (utoa::@3) in block utoa::@5
Removing unused block utoa::@3
Removing unused block utoa::@8
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing PHI-reference to removed block (utoa::@4) in block utoa::@5
Removing unused block utoa::@4
Removing unused block utoa::@9
Removing PHI-reference to removed block (printf_uint::@1) in block printf_uint::@3
Removing unused block printf_uint::@1
Removing unused block printf_number_buffer::@6
Removing PHI-reference to removed block (printf_number_buffer::@15) in block printf_number_buffer::@13
Removing unused block printf_number_buffer::@15
Removing PHI-reference to removed block (printf_number_buffer::@13) in block printf_number_buffer::@1
Removing unused block printf_number_buffer::@13
Removing unused block printf_number_buffer::@7
Removing PHI-reference to removed block (printf_number_buffer::@14) in block printf_number_buffer::@1
Removing unused block printf_number_buffer::@14
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@10) in block printf_padding
Removing unused block printf_number_buffer::@10
Removing unused block printf_number_buffer::@17
Removing unused block printf_number_buffer::@11
Removing unused block printf_number_buffer::@19
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing PHI-reference to removed block (printf_number_buffer::@12) in block printf_padding
Removing unused block printf_number_buffer::@12
Removing unused block printf_number_buffer::@20
Removing unused block printf_number_buffer::@23
Removing unused block printf_number_buffer::@24
Removing unused block printf_number_buffer::@25
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused constant BINARY
Eliminating unused constant OCTAL
Eliminating unused constant HEXADECIMAL
Eliminating unused constant utoa::radix#0
Eliminating unused constant RADIX_BINARY_VALUES
Eliminating unused constant RADIX_OCTAL_VALUES
Eliminating unused constant RADIX_HEXADECIMAL_VALUES
Eliminating unused constant printf_padding::putc#1
Eliminating unused constant printf_padding::putc#2
Eliminating unused constant printf_number_buffer::format_min_length#0
Eliminating unused constant printf_number_buffer::format_justify_left#0
Eliminating unused constant printf_number_buffer::format_zero_padding#0
Eliminating unused constant printf_number_buffer::format_upper_case#0
Eliminating unused constant SIZEOF_UNSIGNED_INT
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant DECIMAL
Successful SSA optimization PassNEliminateUnusedVars
Inlining constant with var siblings printf_str::putc#0
Inlining constant with var siblings printf_padding::putc#0
Constant inlined printf_str::putc#0 = printf_number_buffer::putc#0
Constant inlined printf_padding::putc#0 = printf_number_buffer::putc#0
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values utoa::max_digits#7 5
Identical Phi Values utoa::digit_values#8 RADIX_DECIMAL_VALUES
Identical Phi Values printf_padding::length#4 printf_padding::length#0
Identical Phi Values printf_padding::pad#5 ' '
Identical Phi Values printf_padding::putc#5 printf_number_buffer::putc#0
Identical Phi Values printf_uint::$2 0
Identical Phi Values printf_number_buffer::padding#10 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [18] utoa::$4 = 5 - 1
Constant right-side identified [127] printf_padding::length#0 = (char)0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant utoa::$4 = 5-1
Constant printf_padding::length#0 = (char)0
Successful SSA optimization Pass2ConstantIdentification
Replacing constant pointer function [113] callexecute cputc 
Successful SSA optimization Pass2ConstantCallPointerIdentification
if() condition always false - eliminating [111] if(printf_padding::i#2<printf_padding::length#0) goto printf_padding::@2
if() condition always false - eliminating [214] if(0!=0) goto printf_number_buffer::@8
Successful SSA optimization Pass2ConstantIfs
Simplifying constant evaluating to zero (char)0 in 
Successful SSA optimization PassNSimplifyConstantZero
Eliminating variable printf_padding::i#2 from unused block printf_padding::@1
Eliminating variable printf_padding::i#1 from unused block printf_padding::@3
Removing unused procedure printf_padding
Removing unused procedure block printf_padding
Removing PHI-reference to removed block (printf_padding) in block printf_padding::@1
Removing unused procedure block printf_padding::@1
Removing unused procedure block printf_padding::@2
Removing unused procedure block printf_padding::@3
Removing unused procedure block printf_padding::@return
Removing unused block printf_number_buffer::@8
Removing unused block printf_number_buffer::@16
Successful SSA optimization Pass2EliminateUnusedBlocks
Constant inlined utoa::$4 = 5-1
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $a
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) $b
Finalized unsigned number type (char) $b
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) $19
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Simplifying constant integer cast $19-1
Successful SSA optimization PassNCastSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Added new block during phi lifting utoa::@17(between utoa::@16 and utoa::@13)
Added new block during phi lifting gotoxy::@5(between gotoxy and gotoxy::@1)
Added new block during phi lifting conio_c64_init::@4(between conio_c64_init and conio_c64_init::@1)
Added new block during phi lifting main::@38(between main::@4 and main::@5)
Added new block during phi lifting main::@39(between main::@7 and main::@9)
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@2
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of __start::@3
Adding NOP phi() at start of conio_c64_init::@2
Adding NOP phi() at start of conio_c64_init::@3
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@5
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@36
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of clrscr::@2
Adding NOP phi() at start of printf_uint::@2
Adding NOP phi() at start of printf_uint::@5
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@5
Adding NOP phi() at start of cscroll::@6
Adding NOP phi() at start of utoa
Adding NOP phi() at start of utoa::@1
Adding NOP phi() at start of printf_number_buffer
Adding NOP phi() at start of printf_number_buffer::@1
Adding NOP phi() at start of printf_number_buffer::@22
Adding NOP phi() at start of printf_number_buffer::@21
Adding NOP phi() at start of printf_number_buffer::@3
Adding NOP phi() at start of printf_number_buffer::@4
Adding NOP phi() at start of printf_number_buffer::@5
Adding NOP phi() at start of printf_number_buffer::@18
Adding NOP phi() at start of memcpy::@3
Adding NOP phi() at start of memset::@1
CALL GRAPH
Calls in [__start] to conio_c64_init:5 main:8 
Calls in [conio_c64_init] to gotoxy:16 
Calls in [cputc] to cputln:27 cputln:31 
Calls in [main] to clrscr:34 printf_str:39 printf_uint:42 printf_str:44 printf_uint:47 printf_str:49 printf_uint:52 printf_str:54 printf_str:56 printf_uint:59 printf_str:61 printf_uint:64 printf_str:66 printf_uint:69 printf_str:71 strtouc:76 strtouc:82 
Calls in [cputln] to cscroll:150 
Calls in [printf_str] to null:182 
Calls in [printf_uint] to utoa:189 printf_number_buffer:191 
Calls in [cscroll] to memcpy:216 memcpy:218 memset:220 memset:222 
Calls in [utoa] to utoa_append:253 
Calls in [printf_number_buffer] to cputc:265 printf_str:270 

Created 43 initial phi equivalence classes
Coalesced [19] conio_c64_init::line#3 = conio_c64_init::line#0
Coalesced [41] printf_uint::uvalue#10 = printf_uint::uvalue#0
Coalesced [46] printf_uint::uvalue#11 = printf_uint::uvalue#1
Coalesced [51] printf_uint::uvalue#12 = printf_uint::uvalue#2
Coalesced [58] printf_uint::uvalue#13 = printf_uint::uvalue#3
Coalesced [63] printf_uint::uvalue#14 = printf_uint::uvalue#4
Coalesced [68] printf_uint::uvalue#15 = printf_uint::uvalue#5
Coalesced [75] strtouc::str#7 = strtouc::str#1
Coalesced [81] strtouc::str#8 = strtouc::str#2
Coalesced [95] main::count_b#15 = main::count_b#2
Coalesced [102] main::valid_a#24 = main::valid_a#11
Coalesced [103] main::invalid_a#26 = main::invalid_a#1
Coalesced [107] main::valid_b#32 = main::valid_b#11
Coalesced [108] main::invalid_b#34 = main::invalid_b#1
Coalesced (already) [112] main::valid_a#23 = main::valid_a#15
Coalesced [113] main::invalid_a#25 = main::invalid_a#16
Coalesced [114] main::total#34 = main::total#1
Coalesced (already) [115] main::valid_b#30 = main::valid_b#28
Coalesced [116] main::invalid_b#32 = main::invalid_b#30
Coalesced [118] main::valid_b#31 = main::valid_b#1
Coalesced (already) [119] main::invalid_b#33 = main::invalid_b#11
Coalesced [121] main::valid_a#25 = main::valid_a#1
Coalesced (already) [122] main::invalid_a#27 = main::invalid_a#11
Coalesced [125] main::count_a#8 = main::count_a#1
Coalesced [128] main::count_a#7 = main::count_a#6
Coalesced (already) [129] main::count_a#9 = main::count_a#2
Coalesced [130] main::count_b#16 = main::count_b#4
Coalesced [145] gotoxy::y#7 = gotoxy::y#2
Coalesced [167] clrscr::l#7 = clrscr::l#1
Coalesced [168] clrscr::line_text#7 = clrscr::line_text#1
Coalesced [169] clrscr::line_cols#7 = clrscr::line_cols#1
Coalesced [173] clrscr::c#4 = clrscr::c#1
Coalesced [175] printf_str::s#13 = printf_str::s#11
Coalesced [184] printf_str::s#14 = printf_str::s#0
Coalesced [196] strtouc::c#4 = strtouc::c#0
Coalesced [197] strtouc::str#9 = strtouc::str#3
Coalesced [210] strtouc::c#5 = strtouc::c#1
Coalesced [211] strtouc::val#6 = strtouc::val#2
Coalesced [212] strtouc::str#10 = strtouc::str#0
Coalesced [229] utoa::value#17 = utoa::value#1
Coalesced [241] utoa::value#18 = utoa::value#2
Coalesced [242] utoa::started#6 = utoa::started#2
Coalesced [243] utoa::buffer#23 = utoa::buffer#11
Coalesced [246] utoa::digit#7 = utoa::digit#1
Coalesced (already) [247] utoa::value#16 = utoa::value#6
Coalesced (already) [248] utoa::started#5 = utoa::started#4
Coalesced (already) [249] utoa::buffer#22 = utoa::buffer#14
Coalesced [257] utoa::value#19 = utoa::value#0
Coalesced [258] utoa::buffer#24 = utoa::buffer#4
Coalesced [284] memcpy::src#5 = memcpy::src#1
Coalesced [285] memcpy::dst#5 = memcpy::dst#1
Coalesced [295] memset::dst#5 = memset::dst#1
Coalesced [296] utoa_append::value#6 = utoa_append::value#0
Coalesced [303] utoa_append::value#7 = utoa_append::value#1
Coalesced [304] utoa_append::digit#5 = utoa_append::digit#1
Coalesced down to 32 phi equivalence classes
Culled Empty Block label __start::@2
Culled Empty Block label __start::@3
Culled Empty Block label conio_c64_init::@2
Culled Empty Block label conio_c64_init::@3
Culled Empty Block label cputc::@5
Culled Empty Block label cputc::@4
Culled Empty Block label main::@36
Culled Empty Block label main::@39
Culled Empty Block label main::@38
Culled Empty Block label gotoxy::@3
Culled Empty Block label cputln::@1
Culled Empty Block label clrscr::@2
Culled Empty Block label printf_uint::@2
Culled Empty Block label printf_uint::@5
Culled Empty Block label cscroll::@1
Culled Empty Block label utoa::@1
Culled Empty Block label utoa::@5
Culled Empty Block label utoa::@17
Culled Empty Block label printf_number_buffer::@1
Culled Empty Block label printf_number_buffer::@22
Culled Empty Block label printf_number_buffer::@21
Culled Empty Block label printf_number_buffer::@3
Culled Empty Block label printf_number_buffer::@4
Culled Empty Block label printf_number_buffer::@18
Culled Empty Block label memcpy::@3
Culled Empty Block label memset::@1
Renumbering block memset::@2 to memset::@1
Renumbering block memset::@3 to memset::@2
Renumbering block memset::@4 to memset::@3
Renumbering block utoa::@10 to utoa::@1
Renumbering block utoa::@11 to utoa::@2
Renumbering block utoa::@12 to utoa::@3
Renumbering block utoa::@13 to utoa::@4
Renumbering block utoa::@14 to utoa::@5
Renumbering block utoa::@15 to utoa::@6
Renumbering block utoa::@16 to utoa::@7
Renumbering block clrscr::@3 to clrscr::@2
Renumbering block clrscr::@4 to clrscr::@3
Renumbering block clrscr::@5 to clrscr::@4
Renumbering block clrscr::@6 to clrscr::@5
Renumbering block gotoxy::@5 to gotoxy::@3
Renumbering block cscroll::@3 to cscroll::@1
Renumbering block cscroll::@4 to cscroll::@2
Renumbering block cscroll::@5 to cscroll::@3
Renumbering block cscroll::@6 to cscroll::@4
Renumbering block cscroll::@7 to cscroll::@5
Renumbering block conio_c64_init::@4 to conio_c64_init::@2
Renumbering block printf_uint::@3 to printf_uint::@1
Renumbering block printf_uint::@4 to printf_uint::@2
Renumbering block printf_number_buffer::@2 to printf_number_buffer::@1
Renumbering block printf_number_buffer::@5 to printf_number_buffer::@2
Renumbering block printf_number_buffer::@9 to printf_number_buffer::@3
Renumbering block main::@37 to main::@36
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of conio_c64_init::@2
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of cscroll::@1
Adding NOP phi() at start of cscroll::@2
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of utoa
Adding NOP phi() at start of printf_number_buffer
Adding NOP phi() at start of printf_number_buffer::@2
Adding NOP phi() at start of utoa_append

FINAL CONTROL FLOW GRAPH

void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] call conio_c64_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [6] phi()
  [7] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [11] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [12] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [13] gotoxy::y#2 = conio_c64_init::line#2
  [14] call gotoxy
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [15] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from printf_number_buffer::@3
  [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [17] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [18] conio_line_text[conio_cursor_x] = cputc::c#0
  [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [20] conio_cursor_x = ++ conio_cursor_x
  [21] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [22] phi()
  [23] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [24] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [25] phi()
  [26] call cputln
  to:cputc::@return

void main()
main: scope:[main]  from __start::@1
  [27] phi()
  [28] call clrscr
  to:main::@20
main::@20: scope:[main]  from main
  [29] main::pwd = passwords
  to:main::@1
main::@1: scope:[main]  from main::@15 main::@20
  [30] main::invalid_b#11 = phi( main::@15/main::invalid_b#30, main::@20/0 )
  [30] main::valid_b#11 = phi( main::@15/main::valid_b#28, main::@20/0 )
  [30] main::total#10 = phi( main::@15/main::total#1, main::@20/0 )
  [30] main::invalid_a#11 = phi( main::@15/main::invalid_a#16, main::@20/0 )
  [30] main::valid_a#11 = phi( main::@15/main::valid_a#15, main::@20/0 )
  [31] if(0!=*main::pwd) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [32] phi()
  [33] call printf_str
  to:main::@23
main::@23: scope:[main]  from main::@3
  [34] printf_uint::uvalue#0 = main::valid_a#11
  [35] call printf_uint
  to:main::@24
main::@24: scope:[main]  from main::@23
  [36] phi()
  [37] call printf_str
  to:main::@25
main::@25: scope:[main]  from main::@24
  [38] printf_uint::uvalue#1 = main::invalid_a#11
  [39] call printf_uint
  to:main::@26
main::@26: scope:[main]  from main::@25
  [40] phi()
  [41] call printf_str
  to:main::@27
main::@27: scope:[main]  from main::@26
  [42] printf_uint::uvalue#2 = main::total#10
  [43] call printf_uint
  to:main::@28
main::@28: scope:[main]  from main::@27
  [44] phi()
  [45] call printf_str
  to:main::@29
main::@29: scope:[main]  from main::@28
  [46] phi()
  [47] call printf_str
  to:main::@30
main::@30: scope:[main]  from main::@29
  [48] printf_uint::uvalue#3 = main::valid_b#11
  [49] call printf_uint
  to:main::@31
main::@31: scope:[main]  from main::@30
  [50] phi()
  [51] call printf_str
  to:main::@32
main::@32: scope:[main]  from main::@31
  [52] printf_uint::uvalue#4 = main::invalid_b#11
  [53] call printf_uint
  to:main::@33
main::@33: scope:[main]  from main::@32
  [54] phi()
  [55] call printf_str
  to:main::@34
main::@34: scope:[main]  from main::@33
  [56] printf_uint::uvalue#5 = main::total#10
  [57] call printf_uint
  to:main::@35
main::@35: scope:[main]  from main::@34
  [58] phi()
  [59] call printf_str
  to:main::@19
main::@19: scope:[main]  from main::@19 main::@35
  [60] phi()
  to:main::@19
main::@2: scope:[main]  from main::@1
  [61] strtouc::str#1 = main::pwd
  [62] call strtouc
  [63] strtouc::return#2 = strtouc::val#3
  to:main::@21
main::@21: scope:[main]  from main::@2
  [64] main::min#0 = strtouc::return#2
  [65] main::pwd = ++ main::pwd
  [66] strtouc::str#2 = main::pwd
  [67] call strtouc
  [68] strtouc::return#3 = strtouc::val#3
  to:main::@22
main::@22: scope:[main]  from main::@21
  [69] main::max#0 = strtouc::return#3
  [70] main::pwd = ++ main::pwd
  [71] main::ch#0 = *main::pwd
  [72] main::pwd = main::pwd + 3
  [73] main::$5 = main::min#0 - 1
  [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4
  to:main::@16
main::@16: scope:[main]  from main::@22
  [75] phi()
  to:main::@4
main::@4: scope:[main]  from main::@16 main::@22
  [76] main::count_b#4 = phi( main::@16/1, main::@22/0 )
  [77] main::$8 = main::max#0 - 1
  [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5
  to:main::@17
main::@17: scope:[main]  from main::@4
  [79] main::count_b#2 = ++ main::count_b#4
  to:main::@5
main::@5: scope:[main]  from main::@17 main::@4
  [80] main::count_b#11 = phi( main::@17/main::count_b#2, main::@4/main::count_b#4 )
  to:main::@6
main::@6: scope:[main]  from main::@5 main::@9
  [81] main::count_a#2 = phi( main::@5/0, main::@9/main::count_a#6 )
  [82] if(0!=*main::pwd) goto main::@7
  to:main::@8
main::@8: scope:[main]  from main::@6
  [83] if(main::count_a#2<main::min#0) goto main::@11
  to:main::@36
main::@36: scope:[main]  from main::@8
  [84] if(main::count_a#2<=main::max#0) goto main::@12
  to:main::@11
main::@11: scope:[main]  from main::@36 main::@8
  [85] main::invalid_a#1 = ++ main::invalid_a#11
  to:main::@13
main::@13: scope:[main]  from main::@11 main::@12
  [86] main::invalid_a#16 = phi( main::@11/main::invalid_a#1, main::@12/main::invalid_a#11 )
  [86] main::valid_a#15 = phi( main::@11/main::valid_a#11, main::@12/main::valid_a#1 )
  [87] if(main::count_b#11==1) goto main::@14
  to:main::@18
main::@18: scope:[main]  from main::@13
  [88] main::invalid_b#1 = ++ main::invalid_b#11
  to:main::@15
main::@15: scope:[main]  from main::@14 main::@18
  [89] main::invalid_b#30 = phi( main::@14/main::invalid_b#11, main::@18/main::invalid_b#1 )
  [89] main::valid_b#28 = phi( main::@14/main::valid_b#1, main::@18/main::valid_b#11 )
  [90] main::total#1 = ++ main::total#10
  [91] main::pwd = ++ main::pwd
  to:main::@1
main::@14: scope:[main]  from main::@13
  [92] main::valid_b#1 = ++ main::valid_b#11
  to:main::@15
main::@12: scope:[main]  from main::@36
  [93] main::valid_a#1 = ++ main::valid_a#11
  to:main::@13
main::@7: scope:[main]  from main::@6
  [94] if(*main::pwd!=main::ch#0) goto main::@9
  to:main::@10
main::@10: scope:[main]  from main::@7
  [95] main::count_a#1 = ++ main::count_a#2
  to:main::@9
main::@9: scope:[main]  from main::@10 main::@7
  [96] main::count_a#6 = phi( main::@10/main::count_a#1, main::@7/main::count_a#2 )
  [97] main::pwd = ++ main::pwd
  to:main::@6

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1
  [98] if(gotoxy::y#2<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [99] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [100] gotoxy::y#4 = phi( gotoxy::@3/gotoxy::y#2, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [101] conio_cursor_x = gotoxy::x#2
  [102] conio_cursor_y = gotoxy::y#4
  [103] gotoxy::$7 = (unsigned int)gotoxy::y#4
  [104] gotoxy::$8 = gotoxy::$7 << 2
  [105] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [106] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [107] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [108] conio_line_text = gotoxy::$5
  [109] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [110] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [111] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [112] conio_line_text = conio_line_text + $28
  [113] conio_line_color = conio_line_color + $28
  [114] conio_cursor_x = 0
  [115] conio_cursor_y = ++ conio_cursor_y
  [116] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [117] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  [118] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [119] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [119] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [119] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [120] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [121] conio_cursor_x = 0
  [122] conio_cursor_y = 0
  [123] conio_line_text = DEFAULT_SCREEN
  [124] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [125] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [126] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [127] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [128] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [129] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [130] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [131] clrscr::line_text#5[clrscr::c#2] = ' '
  [132] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [133] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@24 main::@26 main::@28 main::@29 main::@3 main::@31 main::@33 main::@35 printf_number_buffer::@2
  [134] printf_str::putc#11 = phi( main::@24/&cputc, main::@26/&cputc, main::@28/&cputc, main::@29/&cputc, main::@3/&cputc, main::@31/&cputc, main::@33/&cputc, main::@35/&cputc, printf_number_buffer::@2/printf_number_buffer::putc#0 )
  [134] printf_str::s#11 = phi( main::@24/main::s1, main::@26/main::s2, main::@28/main::s3, main::@29/main::s4, main::@3/main::s, main::@31/main::s1, main::@33/main::s2, main::@35/main::s3, printf_number_buffer::@2/printf_number_buffer::buffer_digits#0 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [135] printf_str::s#10 = phi( printf_str/printf_str::s#11, printf_str::@2/printf_str::s#0 )
  [136] printf_str::c#1 = *printf_str::s#10
  [137] printf_str::s#0 = ++ printf_str::s#10
  [138] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [139] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [140] stackpush(char) = printf_str::c#1
  [141] callexecute *printf_str::putc#11 
  sideeffect stackpullbytes(1)
  to:printf_str::@1

void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uint: scope:[printf_uint]  from main::@23 main::@25 main::@27 main::@30 main::@32 main::@34
  [143] printf_uint::uvalue#6 = phi( main::@23/printf_uint::uvalue#0, main::@25/printf_uint::uvalue#1, main::@27/printf_uint::uvalue#2, main::@30/printf_uint::uvalue#3, main::@32/printf_uint::uvalue#4, main::@34/printf_uint::uvalue#5 )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [144] *((char *)&printf_buffer) = 0
  [145] utoa::value#1 = printf_uint::uvalue#6
  [146] call utoa
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [147] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer)
  [148] call printf_number_buffer
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [149] return 
  to:@return

char strtouc(char *str , char **endptr)
strtouc: scope:[strtouc]  from main::@2 main::@21
  [150] strtouc::str#3 = phi( main::@2/strtouc::str#1, main::@21/strtouc::str#2 )
  [151] strtouc::c#0 = *strtouc::str#3
  to:strtouc::@1
strtouc::@1: scope:[strtouc]  from strtouc strtouc::@2
  [152] strtouc::str#4 = phi( strtouc/strtouc::str#3, strtouc::@2/strtouc::str#0 )
  [152] strtouc::val#3 = phi( strtouc/0, strtouc::@2/strtouc::val#2 )
  [152] strtouc::c#2 = phi( strtouc/strtouc::c#0, strtouc::@2/strtouc::c#1 )
  [153] if(strtouc::c#2<'0') goto strtouc::@3
  to:strtouc::@4
strtouc::@4: scope:[strtouc]  from strtouc::@1
  [154] if(strtouc::c#2<='9') goto strtouc::@2
  to:strtouc::@3
strtouc::@3: scope:[strtouc]  from strtouc::@1 strtouc::@4
  [155] *(&main::pwd) = strtouc::str#4
  to:strtouc::@return
strtouc::@return: scope:[strtouc]  from strtouc::@3
  [156] return 
  to:@return
strtouc::@2: scope:[strtouc]  from strtouc::@4
  [157] strtouc::$5 = strtouc::val#3 << 2
  [158] strtouc::$6 = strtouc::$5 + strtouc::val#3
  [159] strtouc::val#1 = strtouc::$6 << 1
  [160] strtouc::$4 = strtouc::c#2 - '0'
  [161] strtouc::val#2 = strtouc::val#1 + strtouc::$4
  [162] strtouc::str#0 = ++ strtouc::str#4
  [163] strtouc::c#1 = *strtouc::str#0
  to:strtouc::@1

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [164] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [165] phi()
  [166] call memcpy
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [167] phi()
  [168] call memcpy
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [169] phi()
  [170] call memset
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [171] phi()
  [172] call memset
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [173] conio_line_text = conio_line_text - $28
  [174] conio_line_color = conio_line_color - $28
  [175] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [176] return 
  to:@return

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_uint::@1
  [177] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [178] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [178] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [178] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/utoa::value#1 )
  [178] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [179] if(utoa::digit#2<5-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [180] utoa::$11 = (char)utoa::value#2
  [181] *utoa::buffer#11 = DIGITS[utoa::$11]
  [182] utoa::buffer#3 = ++ utoa::buffer#11
  [183] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [184] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [185] utoa::$10 = utoa::digit#2 << 1
  [186] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [187] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [188] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [189] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [189] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [189] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [190] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [191] utoa_append::buffer#0 = utoa::buffer#11
  [192] utoa_append::value#0 = utoa::value#2
  [193] utoa_append::sub#0 = utoa::digit_value#0
  [194] call utoa_append
  [195] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [196] utoa::value#0 = utoa_append::return#0
  [197] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_uint::@2
  [198] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer
  [199] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [200] stackpush(char) = printf_number_buffer::buffer_sign#0
  [201] callexecute cputc 
  sideeffect stackpullbytes(1)
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@3
  [203] phi()
  [204] call printf_str
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [205] return 
  to:@return

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [206] memcpy::destination#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN, cscroll::@2/(void *)COLORRAM )
  [206] memcpy::source#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN+$28, cscroll::@2/(void *)COLORRAM+$28 )
  [207] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28
  [208] memcpy::src#4 = (char *)memcpy::source#2
  [209] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [210] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [210] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [211] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [212] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [213] *memcpy::dst#2 = *memcpy::src#2
  [214] memcpy::dst#1 = ++ memcpy::dst#2
  [215] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [216] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [216] memset::str#3 = phi( cscroll::@3/(void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28, cscroll::@4/(void *)COLORRAM+(unsigned int)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [217] memset::end#0 = (char *)memset::str#3 + $28
  [218] memset::dst#4 = (char *)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [219] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [220] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [221] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [222] *memset::dst#2 = memset::c#4
  [223] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [224] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [225] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [225] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [226] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [227] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [228] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [229] utoa_append::digit#1 = ++ utoa_append::digit#2
  [230] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1


VARIABLE REGISTER WEIGHTS
void __start()
void clrscr()
char clrscr::c
char clrscr::c#1 // 20002.0
char clrscr::c#2 // 12501.25
char clrscr::l
char clrscr::l#1 // 2002.0
char clrscr::l#2 // 333.6666666666667
char *clrscr::line_cols
char *clrscr::line_cols#1 // 1001.0
char *clrscr::line_cols#5 // 1500.375
char *clrscr::line_text
char *clrscr::line_text#1 // 667.3333333333334
char *clrscr::line_text#5 // 1714.7142857142858
void conio_c64_init()
char conio_c64_init::line
char conio_c64_init::line#0 // 11.0
char conio_c64_init::line#2 // 22.0
__loadstore char conio_cursor_x // 1517.2727272727273
__loadstore char conio_cursor_y // 27827.904347826086
__loadstore char *conio_line_color // 19559.371681415927
__loadstore char *conio_line_text // 19387.798245614038
__stackcall void cputc(char c)
char cputc::c
char cputc::c#0 // 15001.5
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // 202.0
char *gotoxy::$6 // 202.0
unsigned int gotoxy::$7 // 151.5
unsigned int gotoxy::$8 // 202.0
unsigned int gotoxy::$9 // 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // 101.0
char gotoxy::x
char gotoxy::y
char gotoxy::y#2 // 71.0
char gotoxy::y#4 // 67.33333333333333
void main()
char main::$5 // 202.0
char main::$8 // 202.0
char main::ch
char main::ch#0 // 81.5
char main::count_a
char main::count_a#1 // 2002.0
char main::count_a#2 // 801.25
char main::count_a#6 // 1501.5
char main::count_b
char main::count_b#11 // 25.25
char main::count_b#2 // 202.0
char main::count_b#4 // 67.33333333333333
unsigned int main::invalid_a
unsigned int main::invalid_a#1 // 202.0
unsigned int main::invalid_a#11 // 8.486486486486488
unsigned int main::invalid_a#16 // 43.285714285714285
unsigned int main::invalid_b
unsigned int main::invalid_b#1 // 202.0
unsigned int main::invalid_b#11 // 5.709090909090909
unsigned int main::invalid_b#30 // 101.0
char main::max
char main::max#0 // 15.947368421052632
char main::min
char main::min#0 // 13.173913043478262
__loadstore char * volatile main::pwd // 100.53703703703705
unsigned int main::total
unsigned int main::total#1 // 101.0
unsigned int main::total#10 // 3.672131147540984
unsigned int main::valid_a
unsigned int main::valid_a#1 // 202.0
unsigned int main::valid_a#11 // 9.515151515151516
unsigned int main::valid_a#15 // 43.285714285714285
unsigned int main::valid_b
unsigned int main::valid_b#1 // 202.0
unsigned int main::valid_b#11 // 6.1568627450980395
unsigned int main::valid_b#28 // 101.0
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2
char *memcpy::dst
char *memcpy::dst#1 // 1.00000001E8
char *memcpy::dst#2 // 1.0333333466666667E8
char *memcpy::dst#4 // 2.0000002E7
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2
char *memcpy::src
char *memcpy::src#1 // 2.00000002E8
char *memcpy::src#2 // 1.0250000125E8
char *memcpy::src#4 // 1.0000001E7
char *memcpy::src_end
char *memcpy::src_end#0 // 1.375000025E7
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // 1.428571442857143E7
char *memset::dst
char *memset::dst#1 // 2.00000002E8
char *memset::dst#2 // 1.3666666833333334E8
char *memset::dst#4 // 2.0000002E7
char *memset::end
char *memset::end#0 // 1.8333333666666668E7
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3
__loadstore struct printf_buffer_number printf_buffer = {}
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // 701.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // 100001.0
void (*printf_str::putc)(char)
void (*printf_str::putc#11)(char)
const char *printf_str::s
const char *printf_str::s#0 // 100001.0
const char *printf_str::s#10 // 155002.0
const char *printf_str::s#11 // 10001.0
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // 22.0
unsigned int printf_uint::uvalue#1 // 22.0
unsigned int printf_uint::uvalue#2 // 22.0
unsigned int printf_uint::uvalue#3 // 22.0
unsigned int printf_uint::uvalue#4 // 22.0
unsigned int printf_uint::uvalue#5 // 22.0
unsigned int printf_uint::uvalue#6 // 83.5
char strtouc(char *str , char **endptr)
char strtouc::$4 // 200002.0
char strtouc::$5 // 200002.0
char strtouc::$6 // 200002.0
char strtouc::c
char strtouc::c#0 // 2002.0
char strtouc::c#1 // 200002.0
char strtouc::c#2 // 66834.16666666666
char **strtouc::endptr
char strtouc::return
char strtouc::return#2 // 202.0
char strtouc::return#3 // 202.0
char *strtouc::str
char *strtouc::str#0 // 150001.5
char *strtouc::str#1 // 202.0
char *strtouc::str#2 // 202.0
char *strtouc::str#3 // 1102.0
char *strtouc::str#4 // 25250.5
char strtouc::val
char strtouc::val#1 // 100001.0
char strtouc::val#2 // 66667.33333333333
char strtouc::val#3 // 37525.625
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // 20002.0
char utoa::$11 // 2002.0
char *utoa::buffer
char *utoa::buffer#11 // 3000.4285714285716
char *utoa::buffer#14 // 15001.5
char *utoa::buffer#3 // 2002.0
char *utoa::buffer#4 // 20002.0
char utoa::digit
char utoa::digit#1 // 20002.0
char utoa::digit#2 // 2857.4285714285716
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // 6000.6
unsigned int *utoa::digit_values
char utoa::max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // 5000.5
char utoa::started#4 // 10001.0
unsigned int utoa::value
unsigned int utoa::value#0 // 10001.0
unsigned int utoa::value#1 // 551.0
unsigned int utoa::value#2 // 5857.857142857143
unsigned int utoa::value#6 // 15001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // 13750.25
char utoa_append::digit
char utoa_append::digit#1 // 1.0000001E7
char utoa_append::digit#2 // 1.00500015E7
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // 20002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // 3335000.5
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // 36667.33333333333
unsigned int utoa_append::value#1 // 2.0000002E7
unsigned int utoa_append::value#2 // 5018334.166666666

Initial phi equivalence classes
[ conio_c64_init::line#2 conio_c64_init::line#0 ]
[ main::valid_a#11 main::valid_a#15 main::valid_a#1 ]
[ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ]
[ main::total#10 main::total#1 ]
[ main::valid_b#11 main::valid_b#28 main::valid_b#1 ]
[ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ]
[ main::count_b#11 main::count_b#2 main::count_b#4 ]
[ main::count_a#2 main::count_a#6 main::count_a#1 ]
[ gotoxy::y#4 gotoxy::y#2 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ printf_str::putc#11 ]
[ printf_str::s#10 printf_str::s#11 printf_str::s#0 ]
[ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ]
[ strtouc::c#2 strtouc::c#0 strtouc::c#1 ]
[ strtouc::val#3 strtouc::val#2 ]
[ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
Added variable conio_cursor_x to live range equivalence class [ conio_cursor_x ]
Added variable conio_cursor_y to live range equivalence class [ conio_cursor_y ]
Added variable conio_line_text to live range equivalence class [ conio_line_text ]
Added variable conio_line_color to live range equivalence class [ conio_line_color ]
Added variable cputc::c#0 to live range equivalence class [ cputc::c#0 ]
Added variable main::pwd to live range equivalence class [ main::pwd ]
Added variable strtouc::return#2 to live range equivalence class [ strtouc::return#2 ]
Added variable main::min#0 to live range equivalence class [ main::min#0 ]
Added variable strtouc::return#3 to live range equivalence class [ strtouc::return#3 ]
Added variable main::max#0 to live range equivalence class [ main::max#0 ]
Added variable main::ch#0 to live range equivalence class [ main::ch#0 ]
Added variable main::$5 to live range equivalence class [ main::$5 ]
Added variable main::$8 to live range equivalence class [ main::$8 ]
Added variable gotoxy::$7 to live range equivalence class [ gotoxy::$7 ]
Added variable gotoxy::$8 to live range equivalence class [ gotoxy::$8 ]
Added variable gotoxy::$9 to live range equivalence class [ gotoxy::$9 ]
Added variable gotoxy::line_offset#0 to live range equivalence class [ gotoxy::line_offset#0 ]
Added variable gotoxy::$5 to live range equivalence class [ gotoxy::$5 ]
Added variable gotoxy::$6 to live range equivalence class [ gotoxy::$6 ]
Added variable printf_str::c#1 to live range equivalence class [ printf_str::c#1 ]
Added variable printf_number_buffer::buffer_sign#0 to live range equivalence class [ printf_number_buffer::buffer_sign#0 ]
Added variable strtouc::$5 to live range equivalence class [ strtouc::$5 ]
Added variable strtouc::$6 to live range equivalence class [ strtouc::$6 ]
Added variable strtouc::val#1 to live range equivalence class [ strtouc::val#1 ]
Added variable strtouc::$4 to live range equivalence class [ strtouc::$4 ]
Added variable utoa::$11 to live range equivalence class [ utoa::$11 ]
Added variable utoa::buffer#3 to live range equivalence class [ utoa::buffer#3 ]
Added variable utoa::$10 to live range equivalence class [ utoa::$10 ]
Added variable utoa::digit_value#0 to live range equivalence class [ utoa::digit_value#0 ]
Added variable utoa_append::buffer#0 to live range equivalence class [ utoa_append::buffer#0 ]
Added variable utoa_append::sub#0 to live range equivalence class [ utoa_append::sub#0 ]
Added variable utoa_append::return#0 to live range equivalence class [ utoa_append::return#0 ]
Added variable memcpy::src_end#0 to live range equivalence class [ memcpy::src_end#0 ]
Added variable memset::end#0 to live range equivalence class [ memset::end#0 ]
Added variable printf_buffer to live range equivalence class [ printf_buffer ]
Complete equivalence classes
[ conio_c64_init::line#2 conio_c64_init::line#0 ]
[ main::valid_a#11 main::valid_a#15 main::valid_a#1 ]
[ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ]
[ main::total#10 main::total#1 ]
[ main::valid_b#11 main::valid_b#28 main::valid_b#1 ]
[ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ]
[ main::count_b#11 main::count_b#2 main::count_b#4 ]
[ main::count_a#2 main::count_a#6 main::count_a#1 ]
[ gotoxy::y#4 gotoxy::y#2 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ printf_str::putc#11 ]
[ printf_str::s#10 printf_str::s#11 printf_str::s#0 ]
[ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ]
[ strtouc::c#2 strtouc::c#0 strtouc::c#1 ]
[ strtouc::val#3 strtouc::val#2 ]
[ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ]
[ utoa::digit#2 utoa::digit#1 ]
[ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
[ utoa::started#2 utoa::started#4 ]
[ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
[ utoa_append::digit#2 utoa_append::digit#1 ]
[ conio_cursor_x ]
[ conio_cursor_y ]
[ conio_line_text ]
[ conio_line_color ]
[ cputc::c#0 ]
[ main::pwd ]
[ strtouc::return#2 ]
[ main::min#0 ]
[ strtouc::return#3 ]
[ main::max#0 ]
[ main::ch#0 ]
[ main::$5 ]
[ main::$8 ]
[ gotoxy::$7 ]
[ gotoxy::$8 ]
[ gotoxy::$9 ]
[ gotoxy::line_offset#0 ]
[ gotoxy::$5 ]
[ gotoxy::$6 ]
[ printf_str::c#1 ]
[ printf_number_buffer::buffer_sign#0 ]
[ strtouc::$5 ]
[ strtouc::$6 ]
[ strtouc::val#1 ]
[ strtouc::$4 ]
[ utoa::$11 ]
[ utoa::buffer#3 ]
[ utoa::$10 ]
[ utoa::digit_value#0 ]
[ utoa_append::buffer#0 ]
[ utoa_append::sub#0 ]
[ utoa_append::return#0 ]
[ memcpy::src_end#0 ]
[ memset::end#0 ]
[ printf_buffer ]
Allocated zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated zp[2]:6 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated zp[2]:8 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ]
Allocated zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ]
Allocated zp[2]:11 [ memset::end#0 ]
Allocated zp[1]:13 [ memset::c#4 ]
Allocated zp[2]:14 [ memcpy::src_end#0 ]
Allocated zp[2]:16 [ utoa_append::sub#0 ]
Allocated zp[1]:18 [ strtouc::c#2 strtouc::c#0 strtouc::c#1 ]
Allocated zp[2]:19 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 ]
Allocated zp[1]:21 [ strtouc::$5 ]
Allocated zp[1]:22 [ strtouc::$6 ]
Allocated zp[1]:23 [ strtouc::$4 ]
Allocated zp[2]:24 [ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ]
Allocated zp[1]:26 [ strtouc::val#3 strtouc::val#2 ]
Allocated zp[1]:27 [ printf_str::c#1 ]
Allocated zp[1]:28 [ strtouc::val#1 ]
Allocated zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ]
Allocated zp[1]:31 [ clrscr::c#2 clrscr::c#1 ]
Allocated zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ]
Allocated zp[1]:34 [ conio_cursor_y ]
Allocated zp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Allocated zp[1]:36 [ utoa::$10 ]
Allocated zp[2]:37 [ utoa_append::return#0 ]
Allocated zp[2]:39 [ conio_line_color ]
Allocated zp[2]:41 [ conio_line_text ]
Allocated zp[1]:43 [ utoa::started#2 utoa::started#4 ]
Allocated zp[1]:44 [ cputc::c#0 ]
Allocated zp[2]:45 [ utoa_append::buffer#0 ]
Allocated zp[2]:47 [ utoa::digit_value#0 ]
Allocated zp[1]:49 [ main::count_a#2 main::count_a#6 main::count_a#1 ]
Allocated zp[2]:50 [ clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated zp[2]:52 [ clrscr::line_text#5 clrscr::line_text#1 ]
Allocated zp[1]:54 [ clrscr::l#2 clrscr::l#1 ]
Allocated zp[1]:55 [ utoa::$11 ]
Allocated zp[2]:56 [ utoa::buffer#3 ]
Allocated zp[1]:58 [ conio_cursor_x ]
Allocated zp[1]:59 [ printf_number_buffer::buffer_sign#0 ]
Allocated zp[2]:60 [ main::valid_b#11 main::valid_b#28 main::valid_b#1 ]
Allocated zp[2]:62 [ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ]
Allocated zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ]
Allocated zp[2]:65 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 ]
Allocated zp[2]:67 [ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ]
Allocated zp[2]:69 [ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ]
Allocated zp[1]:71 [ strtouc::return#2 ]
Allocated zp[1]:72 [ strtouc::return#3 ]
Allocated zp[1]:73 [ main::$5 ]
Allocated zp[1]:74 [ main::$8 ]
Allocated zp[2]:75 [ gotoxy::$8 ]
Allocated zp[2]:77 [ gotoxy::$9 ]
Allocated zp[2]:79 [ gotoxy::$5 ]
Allocated zp[2]:81 [ gotoxy::$6 ]
Allocated zp[2]:83 [ gotoxy::$7 ]
Allocated zp[1]:85 [ gotoxy::y#4 gotoxy::y#2 ]
Allocated zp[2]:86 [ main::total#10 main::total#1 ]
Allocated zp[2]:88 [ gotoxy::line_offset#0 ]
Allocated zp[2]:90 [ main::pwd ]
Allocated zp[1]:92 [ main::ch#0 ]
Allocated zp[1]:93 [ conio_c64_init::line#2 conio_c64_init::line#0 ]
Allocated zp[1]:94 [ main::max#0 ]
Allocated zp[1]:95 [ main::min#0 ]
Allocated zp[2]:96 [ printf_str::putc#11 ]
Allocated zp[2]:98 [ memcpy::source#2 ]
Allocated zp[2]:100 [ memcpy::destination#2 ]
Allocated zp[2]:102 [ memset::str#3 ]
Allocated mem[12] [ printf_buffer ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] conio_cursor_x = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] conio_cursor_y = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] conio_line_text = DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] conio_line_color = COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte x 
Statement [18] conio_line_text[conio_cursor_x] = cputc::c#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte y 
Statement [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [21] if(conio_cursor_x!=$28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [29] main::pwd = passwords [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd printf_buffer ] { }  ) always clobbers reg byte a 
Statement [31] if(0!=*main::pwd) goto main::@2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [34] printf_uint::uvalue#0 = main::valid_a#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#0 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  ) always clobbers reg byte a 
Statement [38] printf_uint::uvalue#1 = main::invalid_a#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#1 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  ) always clobbers reg byte a 
Statement [42] printf_uint::uvalue#2 = main::total#10 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#2 printf_buffer ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [48] printf_uint::uvalue#3 = main::valid_b#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_uint::uvalue#3 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_uint::uvalue#3 printf_buffer ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  ) always clobbers reg byte a 
Statement [52] printf_uint::uvalue#4 = main::invalid_b#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_uint::uvalue#4 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_uint::uvalue#4 printf_buffer ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  ) always clobbers reg byte a 
Statement [56] printf_uint::uvalue#5 = main::total#10 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#5 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#5 printf_buffer ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [61] strtouc::str#1 = main::pwd [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 strtouc::str#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 strtouc::str#1 printf_buffer ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [66] strtouc::str#2 = main::pwd [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 strtouc::str#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 strtouc::str#2 printf_buffer ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:95 [ main::min#0 ]
Statement [71] main::ch#0 = *main::pwd [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:95 [ main::min#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:94 [ main::max#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:94 [ main::max#0 ]
Statement [72] main::pwd = main::pwd + 3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:92 [ main::ch#0 ]
Potential register analysis [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4 missing fragment Fragment not found pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1  allocation: zp[2]:90 [ main::pwd ] reg byte a [ main::$5 ] reg byte y [ main::ch#0 ] 
Potential register analysis [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4 missing fragment Fragment not found pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1  allocation: zp[2]:90 [ main::pwd ] reg byte x [ main::$5 ] reg byte y [ main::ch#0 ] 
MISSING FRAGMENTS
  Fragment not found pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1 
  Fragment not found pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1 
Statement [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] { }  ) always clobbers reg byte a 
Potential register analysis [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5 missing fragment Fragment not found pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1  allocation: zp[2]:90 [ main::pwd ] reg byte y [ main::ch#0 ] reg byte a [ main::$8 ] 
Potential register analysis [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5 missing fragment Fragment not found pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1  allocation: zp[2]:90 [ main::pwd ] reg byte y [ main::ch#0 ] reg byte x [ main::$8 ] 
MISSING FRAGMENTS
  Fragment not found pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuaa_neq_vbuyy_then_la1 
  Fragment not found pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1. Attempted variations pbuz1_derefidx_vbuxx_neq_vbuyy_then_la1 
Statement [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#4 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#4 printf_buffer ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ]
Statement [82] if(0!=*main::pwd) goto main::@7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:92 [ main::ch#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ]
Removing always clobbered register reg byte a as potential for zp[1]:49 [ main::count_a#2 main::count_a#6 main::count_a#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:49 [ main::count_a#2 main::count_a#6 main::count_a#1 ]
Statement [94] if(*main::pwd!=main::ch#0) goto main::@9 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [101] conio_cursor_x = gotoxy::x#2 [ gotoxy::y#4 ] ( gotoxy:14 [ gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:85 [ gotoxy::y#4 gotoxy::y#2 ]
Statement [103] gotoxy::$7 = (unsigned int)gotoxy::y#4 [ gotoxy::$7 ] ( gotoxy:14 [ gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [104] gotoxy::$8 = gotoxy::$7 << 2 [ gotoxy::$7 gotoxy::$8 ] ( gotoxy:14 [ gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [105] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 [ gotoxy::$9 ] ( gotoxy:14 [ gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [106] gotoxy::line_offset#0 = gotoxy::$9 << 3 [ gotoxy::line_offset#0 ] ( gotoxy:14 [ gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [107] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 [ gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:14 [ gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [108] conio_line_text = gotoxy::$5 [ gotoxy::line_offset#0 ] ( gotoxy:14 [ gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [109] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 [ gotoxy::$6 ] ( gotoxy:14 [ gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [110] conio_line_color = gotoxy::$6 [ ] ( gotoxy:14 [ ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [112] conio_line_text = conio_line_text + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [113] conio_line_color = conio_line_color + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [114] conio_cursor_x = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [121] conio_cursor_x = 0 [ conio_cursor_x ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [122] conio_cursor_y = 0 [ conio_cursor_x conio_cursor_y ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [123] conio_line_text = DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [124] conio_line_color = COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [128] clrscr::line_text#1 = clrscr::line_text#5 + $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:54 [ clrscr::l#2 clrscr::l#1 ]
Statement [129] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [131] clrscr::line_text#5[clrscr::c#2] = ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:31 [ clrscr::c#2 clrscr::c#1 ]
Statement [132] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [136] printf_str::c#1 = *printf_str::s#10 [ printf_str::s#10 printf_str::c#1 ] ( main:7::printf_str:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:41 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:45 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:47 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:51 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:55 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:59 [ printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_uint:35::printf_number_buffer:148::printf_str:204 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::printf_str:204 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::printf_str:204 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::printf_str:204 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [141] callexecute *printf_str::putc#11  [ printf_str::s#0 ] ( main:7::printf_str:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:41 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:45 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:47 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:51 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:55 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:59 [ printf_str::s#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::printf_str:204 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::printf_str:204 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::printf_str:204 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::printf_str:204 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte x reg byte y 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [144] *((char *)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] ( main:7::printf_uint:35 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [145] utoa::value#1 = printf_uint::uvalue#6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] ( main:7::printf_uint:35 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [151] strtouc::c#0 = *strtouc::str#3 [ main::pwd strtouc::str#3 strtouc::c#0 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::str#3 strtouc::c#0 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::str#3 strtouc::c#0 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a reg byte y 
Statement [155] *(&main::pwd) = strtouc::str#4 [ main::pwd strtouc::val#3 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::val#3 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::val#3 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:26 [ strtouc::val#3 strtouc::val#2 ]
Statement [157] strtouc::$5 = strtouc::val#3 << 2 [ main::pwd strtouc::val#3 strtouc::c#2 strtouc::str#4 strtouc::$5 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::val#3 strtouc::c#2 strtouc::str#4 strtouc::$5 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::val#3 strtouc::c#2 strtouc::str#4 strtouc::$5 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:18 [ strtouc::c#2 strtouc::c#0 strtouc::c#1 ]
Statement [158] strtouc::$6 = strtouc::$5 + strtouc::val#3 [ main::pwd strtouc::c#2 strtouc::str#4 strtouc::$6 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::$6 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::$6 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [159] strtouc::val#1 = strtouc::$6 << 1 [ main::pwd strtouc::c#2 strtouc::str#4 strtouc::val#1 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::val#1 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::val#1 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [160] strtouc::$4 = strtouc::c#2 - '0' [ main::pwd strtouc::str#4 strtouc::val#1 strtouc::$4 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::str#4 strtouc::val#1 strtouc::$4 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::str#4 strtouc::val#1 strtouc::$4 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:28 [ strtouc::val#1 ]
Statement [161] strtouc::val#2 = strtouc::val#1 + strtouc::$4 [ main::pwd strtouc::str#4 strtouc::val#2 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::str#4 strtouc::val#2 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::str#4 strtouc::val#2 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [163] strtouc::c#1 = *strtouc::str#0 [ main::pwd strtouc::c#1 strtouc::val#2 strtouc::str#0 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::c#1 strtouc::val#2 strtouc::str#0 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::c#1 strtouc::val#2 strtouc::str#0 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:26 [ strtouc::val#3 strtouc::val#2 ]
Statement [164] if(conio_cursor_y!=$19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [173] conio_line_text = conio_line_text - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [174] conio_line_color = conio_line_color - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [181] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [182] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [183] *utoa::buffer#3 = 0 [ printf_buffer ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [185] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:43 [ utoa::started#2 utoa::started#4 ]
Statement [186] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [188] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [191] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [192] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [193] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [195] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [196] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [207] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [208] memcpy::src#4 = (char *)memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [209] memcpy::dst#4 = (char *)memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [211] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [213] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [217] memset::end#0 = (char *)memset::str#3 + $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:13 [ memset::c#4 ]
Statement [218] memset::dst#4 = (char *)memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [220] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [222] *memset::dst#2 = memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:13 [ memset::c#4 ]
Statement [226] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:7::printf_uint:35::utoa:146::utoa_append:194 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146::utoa_append:194 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146::utoa_append:194 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146::utoa_append:194 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ]
Statement [227] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( main:7::printf_uint:35::utoa:146::utoa_append:194 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146::utoa_append:194 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146::utoa_append:194 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146::utoa_append:194 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Statement [230] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:7::printf_uint:35::utoa:146::utoa_append:194 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146::utoa_append:194 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146::utoa_append:194 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146::utoa_append:194 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [1] conio_cursor_x = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [2] conio_cursor_y = 0 [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [3] conio_line_text = DEFAULT_SCREEN [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [4] conio_line_color = COLORRAM [ printf_buffer ] (  [ printf_buffer ] { }  ) always clobbers reg byte a 
Statement [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color cputc::c#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte x 
Statement [18] conio_line_text[conio_cursor_x] = cputc::c#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte y 
Statement [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [21] if(conio_cursor_x!=$28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] (  [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [29] main::pwd = passwords [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd printf_buffer ] { }  ) always clobbers reg byte a 
Statement [31] if(0!=*main::pwd) goto main::@2 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [34] printf_uint::uvalue#0 = main::valid_a#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#0 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  ) always clobbers reg byte a 
Statement [38] printf_uint::uvalue#1 = main::invalid_a#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#1 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  ) always clobbers reg byte a 
Statement [42] printf_uint::uvalue#2 = main::total#10 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_uint::uvalue#2 printf_buffer ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [48] printf_uint::uvalue#3 = main::valid_b#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_uint::uvalue#3 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_uint::uvalue#3 printf_buffer ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  ) always clobbers reg byte a 
Statement [52] printf_uint::uvalue#4 = main::invalid_b#11 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_uint::uvalue#4 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_uint::uvalue#4 printf_buffer ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  ) always clobbers reg byte a 
Statement [56] printf_uint::uvalue#5 = main::total#10 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#5 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#5 printf_buffer ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [61] strtouc::str#1 = main::pwd [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 strtouc::str#1 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 strtouc::str#1 printf_buffer ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [66] strtouc::str#2 = main::pwd [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 strtouc::str#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 strtouc::str#2 printf_buffer ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [71] main::ch#0 = *main::pwd [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [72] main::pwd = main::pwd + 3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#4 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#4 printf_buffer ] { }  ) always clobbers reg byte a 
Statement [82] if(0!=*main::pwd) goto main::@7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [94] if(*main::pwd!=main::ch#0) goto main::@9 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] ( main:7 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::pwd main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 main::max#0 main::ch#0 main::count_b#11 main::count_a#2 printf_buffer ] { }  ) always clobbers reg byte a reg byte y 
Statement [101] conio_cursor_x = gotoxy::x#2 [ gotoxy::y#4 ] ( gotoxy:14 [ gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::y#4 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [103] gotoxy::$7 = (unsigned int)gotoxy::y#4 [ gotoxy::$7 ] ( gotoxy:14 [ gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$7 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [104] gotoxy::$8 = gotoxy::$7 << 2 [ gotoxy::$7 gotoxy::$8 ] ( gotoxy:14 [ gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [105] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 [ gotoxy::$9 ] ( gotoxy:14 [ gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$9 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [106] gotoxy::line_offset#0 = gotoxy::$9 << 3 [ gotoxy::line_offset#0 ] ( gotoxy:14 [ gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [107] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 [ gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:14 [ gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [108] conio_line_text = gotoxy::$5 [ gotoxy::line_offset#0 ] ( gotoxy:14 [ gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::line_offset#0 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [109] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 [ gotoxy::$6 ] ( gotoxy:14 [ gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer gotoxy::$6 ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [110] conio_line_color = gotoxy::$6 [ ] ( gotoxy:14 [ ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  conio_c64_init:5::gotoxy:14 [ printf_buffer ] { { gotoxy::y#2 = conio_c64_init::line#2 } }  ) always clobbers reg byte a 
Statement [112] conio_line_text = conio_line_text + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [113] conio_line_color = conio_line_color + $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26 [ conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26 [ printf_buffer conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [114] conio_cursor_x = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( cputln:23 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [121] conio_cursor_x = 0 [ conio_cursor_x ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x ] { }  ) always clobbers reg byte a 
Statement [122] conio_cursor_y = 0 [ conio_cursor_x conio_cursor_y ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x conio_cursor_y ] { }  ) always clobbers reg byte a 
Statement [123] conio_line_text = DEFAULT_SCREEN [ conio_cursor_x conio_cursor_y conio_line_text ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text ] { }  ) always clobbers reg byte a 
Statement [124] conio_line_color = COLORRAM [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:7::clrscr:28 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  ) always clobbers reg byte a 
Statement [128] clrscr::line_text#1 = clrscr::line_text#5 + $28 [ clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [129] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 [ clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [131] clrscr::line_text#5[clrscr::c#2] = ' ' [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [132] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE [ clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:7::clrscr:28 [ printf_buffer clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [136] printf_str::c#1 = *printf_str::s#10 [ printf_str::s#10 printf_str::c#1 ] ( main:7::printf_str:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:41 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:45 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:47 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:51 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:55 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_buffer printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_str:59 [ printf_str::s#10 printf_str::c#1 ] { }  main:7::printf_uint:35::printf_number_buffer:148::printf_str:204 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::printf_str:204 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::printf_str:204 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::printf_str:204 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#10 printf_str::c#1 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [141] callexecute *printf_str::putc#11  [ printf_str::s#0 ] ( main:7::printf_str:33 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:37 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:41 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:45 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:47 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:51 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 main::invalid_b#11 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:55 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::total#10 printf_buffer printf_str::s#0 ] { }  main:7::printf_str:59 [ printf_str::s#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::printf_str:204 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::printf_str:204 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::printf_str:204 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::printf_str:204 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::printf_str:204 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_str::s#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte x reg byte y 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [144] *((char *)&printf_buffer) = 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] ( main:7::printf_uint:35 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_uint::uvalue#6 printf_buffer ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [145] utoa::value#1 = printf_uint::uvalue#6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] ( main:7::printf_uint:35 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::value#1 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [151] strtouc::c#0 = *strtouc::str#3 [ main::pwd strtouc::str#3 strtouc::c#0 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::str#3 strtouc::c#0 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::str#3 strtouc::c#0 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a reg byte y 
Statement [155] *(&main::pwd) = strtouc::str#4 [ main::pwd strtouc::val#3 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::val#3 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::val#3 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [157] strtouc::$5 = strtouc::val#3 << 2 [ main::pwd strtouc::val#3 strtouc::c#2 strtouc::str#4 strtouc::$5 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::val#3 strtouc::c#2 strtouc::str#4 strtouc::$5 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::val#3 strtouc::c#2 strtouc::str#4 strtouc::$5 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [158] strtouc::$6 = strtouc::$5 + strtouc::val#3 [ main::pwd strtouc::c#2 strtouc::str#4 strtouc::$6 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::$6 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::$6 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [159] strtouc::val#1 = strtouc::$6 << 1 [ main::pwd strtouc::c#2 strtouc::str#4 strtouc::val#1 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::val#1 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::c#2 strtouc::str#4 strtouc::val#1 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [160] strtouc::$4 = strtouc::c#2 - '0' [ main::pwd strtouc::str#4 strtouc::val#1 strtouc::$4 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::str#4 strtouc::val#1 strtouc::$4 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::str#4 strtouc::val#1 strtouc::$4 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [161] strtouc::val#2 = strtouc::val#1 + strtouc::$4 [ main::pwd strtouc::str#4 strtouc::val#2 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::str#4 strtouc::val#2 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::str#4 strtouc::val#2 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a 
Statement [163] strtouc::c#1 = *strtouc::str#0 [ main::pwd strtouc::c#1 strtouc::val#2 strtouc::str#0 ] ( main:7::strtouc:62 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer main::pwd strtouc::c#1 strtouc::val#2 strtouc::str#0 ] { { strtouc::str#1 = strtouc::str#3 main::pwd } { strtouc::return#2 = strtouc::val#3 } }  main:7::strtouc:67 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color main::valid_a#11 main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 main::min#0 printf_buffer main::pwd strtouc::c#1 strtouc::val#2 strtouc::str#0 ] { { strtouc::str#2 = strtouc::str#3 main::pwd } { strtouc::return#3 = strtouc::val#3 } }  ) always clobbers reg byte a reg byte y 
Statement [164] if(conio_cursor_y!=$19) goto cscroll::@return [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [173] conio_line_text = conio_line_text - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [174] conio_line_color = conio_line_color - $28 [ conio_cursor_y conio_line_text conio_line_color ] ( cputln:23::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [181] *utoa::buffer#11 = DIGITS[utoa::$11] [ printf_buffer utoa::buffer#11 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#11 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [182] utoa::buffer#3 = ++ utoa::buffer#11 [ printf_buffer utoa::buffer#3 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::buffer#3 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [183] *utoa::buffer#3 = 0 [ printf_buffer ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a reg byte y 
Statement [185] utoa::$10 = utoa::digit#2 << 1 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::$10 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [186] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [188] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::started#2 utoa::buffer#11 utoa::digit_value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement [191] utoa_append::buffer#0 = utoa::buffer#11 [ printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::value#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [192] utoa_append::value#0 = utoa::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::digit_value#0 utoa_append::buffer#0 utoa_append::value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [193] utoa_append::sub#0 = utoa::digit_value#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::value#0 utoa_append::sub#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [195] utoa_append::return#0 = utoa_append::value#2 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::return#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [196] utoa::value#0 = utoa_append::return#0 [ printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] ( main:7::printf_uint:35::utoa:146 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } }  main:7::printf_uint:39::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } }  main:7::printf_uint:43::utoa:146 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  main:7::printf_uint:49::utoa:146 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } }  main:7::printf_uint:53::utoa:146 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } }  main:7::printf_uint:57::utoa:146 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa::value#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } }  ) always clobbers reg byte a 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [207] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [208] memcpy::src#4 = (char *)memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [209] memcpy::dst#4 = (char *)memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [211] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [213] *memcpy::dst#2 = *memcpy::src#2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( cputln:23::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:166 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:166 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memcpy:168 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memcpy:168 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [217] memset::end#0 = (char *)memset::str#3 + $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::str#3 memset::c#4 memset::end#0 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [218] memset::dst#4 = (char *)memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#4 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [220] if(memset::dst#2!=memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a 
Statement [222] *memset::dst#2 = memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( cputln:23::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:170 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:170 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:23::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:23::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  cputln:26::cscroll:116::memset:172 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { }  main:7::printf_uint:35::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 } }  main:7::printf_uint:39::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 } }  main:7::printf_uint:43::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::valid_b#11 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 } }  main:7::printf_uint:49::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 main::invalid_b#11 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 } }  main:7::printf_uint:53::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ main::total#10 printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 } }  main:7::printf_uint:57::printf_number_buffer:148::cputc:201::cputln:26::cscroll:116::memset:172 [ printf_buffer conio_cursor_x conio_cursor_y conio_line_text conio_line_color memset::c#4 memset::end#0 memset::dst#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 } }  ) always clobbers reg byte a reg byte y 
Statement [226] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] ( main:7::printf_uint:35::utoa:146::utoa_append:194 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146::utoa_append:194 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146::utoa_append:194 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146::utoa_append:194 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#2 utoa_append::digit#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Statement [227] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] [ utoa_append::value#2 ] ( main:7::printf_uint:35::utoa:146::utoa_append:194 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146::utoa_append:194 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146::utoa_append:194 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146::utoa_append:194 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::value#2 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a reg byte y 
Statement [230] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 [ utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] ( main:7::printf_uint:35::utoa:146::utoa_append:194 [ main::invalid_a#11 main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#0 = printf_uint::uvalue#6 main::valid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:39::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#1 = printf_uint::uvalue#6 main::invalid_a#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:43::utoa:146::utoa_append:194 [ main::total#10 main::valid_b#11 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#2 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:49::utoa:146::utoa_append:194 [ main::total#10 main::invalid_b#11 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#3 = printf_uint::uvalue#6 main::valid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:53::utoa:146::utoa_append:194 [ main::total#10 conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#4 = printf_uint::uvalue#6 main::invalid_b#11 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  main:7::printf_uint:57::utoa:146::utoa_append:194 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color printf_buffer utoa::digit#2 utoa::buffer#11 utoa_append::buffer#0 utoa_append::sub#0 utoa_append::value#1 utoa_append::digit#1 ] { { printf_uint::uvalue#5 = printf_uint::uvalue#6 main::total#10 utoa::value#1 } { utoa_append::buffer#0 = utoa::buffer#11 } { utoa_append::value#0 = utoa::value#2 } { utoa_append::sub#0 = utoa::digit_value#0 } { utoa_append::return#0 = utoa_append::value#2 } }  ) always clobbers reg byte a 
Potential registers zp[1]:93 [ conio_c64_init::line#2 conio_c64_init::line#0 ] : zp[1]:93 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:65 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 ] : zp[2]:65 , 
Potential registers zp[2]:67 [ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ] : zp[2]:67 , 
Potential registers zp[2]:86 [ main::total#10 main::total#1 ] : zp[2]:86 , 
Potential registers zp[2]:60 [ main::valid_b#11 main::valid_b#28 main::valid_b#1 ] : zp[2]:60 , 
Potential registers zp[2]:62 [ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ] : zp[2]:62 , 
Potential registers zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ] : zp[1]:64 , reg byte x , 
Potential registers zp[1]:49 [ main::count_a#2 main::count_a#6 main::count_a#1 ] : zp[1]:49 , reg byte x , 
Potential registers zp[1]:85 [ gotoxy::y#4 gotoxy::y#2 ] : zp[1]:85 , reg byte x , reg byte y , 
Potential registers zp[1]:54 [ clrscr::l#2 clrscr::l#1 ] : zp[1]:54 , reg byte x , reg byte y , 
Potential registers zp[2]:52 [ clrscr::line_text#5 clrscr::line_text#1 ] : zp[2]:52 , 
Potential registers zp[2]:50 [ clrscr::line_cols#5 clrscr::line_cols#1 ] : zp[2]:50 , 
Potential registers zp[1]:31 [ clrscr::c#2 clrscr::c#1 ] : zp[1]:31 , reg byte x , reg byte y , 
Potential registers zp[2]:96 [ printf_str::putc#11 ] : zp[2]:96 , 
Potential registers zp[2]:19 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 ] : zp[2]:19 , 
Potential registers zp[2]:69 [ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ] : zp[2]:69 , 
Potential registers zp[1]:18 [ strtouc::c#2 strtouc::c#0 strtouc::c#1 ] : zp[1]:18 , reg byte x , reg byte y , 
Potential registers zp[1]:26 [ strtouc::val#3 strtouc::val#2 ] : zp[1]:26 , reg byte x , 
Potential registers zp[2]:24 [ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ] : zp[2]:24 , 
Potential registers zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] : zp[1]:35 , reg byte x , 
Potential registers zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] : zp[2]:32 , 
Potential registers zp[1]:43 [ utoa::started#2 utoa::started#4 ] : zp[1]:43 , reg byte x , reg byte y , 
Potential registers zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] : zp[2]:29 , 
Potential registers zp[2]:98 [ memcpy::source#2 ] : zp[2]:98 , 
Potential registers zp[2]:100 [ memcpy::destination#2 ] : zp[2]:100 , 
Potential registers zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] : zp[2]:4 , 
Potential registers zp[2]:6 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] : zp[2]:6 , 
Potential registers zp[2]:102 [ memset::str#3 ] : zp[2]:102 , 
Potential registers zp[1]:13 [ memset::c#4 ] : zp[1]:13 , reg byte x , 
Potential registers zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] : zp[2]:2 , 
Potential registers zp[2]:8 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] : zp[2]:8 , 
Potential registers zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ] : zp[1]:10 , reg byte x , reg byte y , 
Potential registers zp[1]:58 [ conio_cursor_x ] : zp[1]:58 , 
Potential registers zp[1]:34 [ conio_cursor_y ] : zp[1]:34 , 
Potential registers zp[2]:41 [ conio_line_text ] : zp[2]:41 , 
Potential registers zp[2]:39 [ conio_line_color ] : zp[2]:39 , 
Potential registers zp[1]:44 [ cputc::c#0 ] : zp[1]:44 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:90 [ main::pwd ] : zp[2]:90 , 
Potential registers zp[1]:71 [ strtouc::return#2 ] : zp[1]:71 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:95 [ main::min#0 ] : zp[1]:95 , reg byte x , 
Potential registers zp[1]:72 [ strtouc::return#3 ] : zp[1]:72 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:94 [ main::max#0 ] : zp[1]:94 , reg byte x , 
Potential registers zp[1]:92 [ main::ch#0 ] : zp[1]:92 , reg byte x , 
Potential registers zp[1]:73 [ main::$5 ] : zp[1]:73 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:74 [ main::$8 ] : zp[1]:74 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:83 [ gotoxy::$7 ] : zp[2]:83 , 
Potential registers zp[2]:75 [ gotoxy::$8 ] : zp[2]:75 , 
Potential registers zp[2]:77 [ gotoxy::$9 ] : zp[2]:77 , 
Potential registers zp[2]:88 [ gotoxy::line_offset#0 ] : zp[2]:88 , 
Potential registers zp[2]:79 [ gotoxy::$5 ] : zp[2]:79 , 
Potential registers zp[2]:81 [ gotoxy::$6 ] : zp[2]:81 , 
Potential registers zp[1]:27 [ printf_str::c#1 ] : zp[1]:27 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:59 [ printf_number_buffer::buffer_sign#0 ] : zp[1]:59 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:21 [ strtouc::$5 ] : zp[1]:21 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:22 [ strtouc::$6 ] : zp[1]:22 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:28 [ strtouc::val#1 ] : zp[1]:28 , reg byte x , reg byte y , 
Potential registers zp[1]:23 [ strtouc::$4 ] : zp[1]:23 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:55 [ utoa::$11 ] : zp[1]:55 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:56 [ utoa::buffer#3 ] : zp[2]:56 , 
Potential registers zp[1]:36 [ utoa::$10 ] : zp[1]:36 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:47 [ utoa::digit_value#0 ] : zp[2]:47 , 
Potential registers zp[2]:45 [ utoa_append::buffer#0 ] : zp[2]:45 , 
Potential registers zp[2]:16 [ utoa_append::sub#0 ] : zp[2]:16 , 
Potential registers zp[2]:37 [ utoa_append::return#0 ] : zp[2]:37 , 
Potential registers zp[2]:14 [ memcpy::src_end#0 ] : zp[2]:14 , 
Potential registers zp[2]:11 [ memset::end#0 ] : zp[2]:11 , 
Potential registers mem[12] [ printf_buffer ] : mem[12] , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy] 312,500,004.25: zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] 223,333,337.67: zp[2]:6 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] 13,750,000.25: zp[2]:14 [ memcpy::src_end#0 ] 0: zp[2]:98 [ memcpy::source#2 ] 0: zp[2]:100 [ memcpy::destination#2 ] 
Uplift Scope [memset] 356,666,672.33: zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] 18,333,333.67: zp[2]:11 [ memset::end#0 ] 14,285,714.43: zp[1]:13 [ memset::c#4 ] 0: zp[2]:102 [ memset::str#3 ] 
Uplift Scope [utoa_append] 25,055,003.5: zp[2]:8 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] 20,050,002.5: zp[1]:10 [ utoa_append::digit#2 utoa_append::digit#1 ] 3,335,000.5: zp[2]:16 [ utoa_append::sub#0 ] 20,002: zp[2]:37 [ utoa_append::return#0 ] 13,750.25: zp[2]:45 [ utoa_append::buffer#0 ] 
Uplift Scope [strtouc] 268,838.17: zp[1]:18 [ strtouc::c#2 strtouc::c#0 strtouc::c#1 ] 200,002: zp[1]:21 [ strtouc::$5 ] 200,002: zp[1]:22 [ strtouc::$6 ] 200,002: zp[1]:23 [ strtouc::$4 ] 176,758: zp[2]:24 [ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ] 104,192.96: zp[1]:26 [ strtouc::val#3 strtouc::val#2 ] 100,001: zp[1]:28 [ strtouc::val#1 ] 202: zp[1]:71 [ strtouc::return#2 ] 202: zp[1]:72 [ strtouc::return#3 ] 
Uplift Scope [printf_str] 265,004: zp[2]:19 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 ] 100,001: zp[1]:27 [ printf_str::c#1 ] 0: zp[2]:96 [ printf_str::putc#11 ] 
Uplift Scope [utoa] 38,003.93: zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] 31,411.36: zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] 22,859.43: zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] 20,002: zp[1]:36 [ utoa::$10 ] 15,001.5: zp[1]:43 [ utoa::started#2 utoa::started#4 ] 6,000.6: zp[2]:47 [ utoa::digit_value#0 ] 2,002: zp[1]:55 [ utoa::$11 ] 2,002: zp[2]:56 [ utoa::buffer#3 ] 
Uplift Scope [] 27,827.9: zp[1]:34 [ conio_cursor_y ] 19,559.37: zp[2]:39 [ conio_line_color ] 19,387.8: zp[2]:41 [ conio_line_text ] 1,517.27: zp[1]:58 [ conio_cursor_x ] 0: mem[12] [ printf_buffer ] 
Uplift Scope [clrscr] 32,503.25: zp[1]:31 [ clrscr::c#2 clrscr::c#1 ] 2,501.38: zp[2]:50 [ clrscr::line_cols#5 clrscr::line_cols#1 ] 2,382.05: zp[2]:52 [ clrscr::line_text#5 clrscr::line_text#1 ] 2,335.67: zp[1]:54 [ clrscr::l#2 clrscr::l#1 ] 
Uplift Scope [cputc] 15,001.5: zp[1]:44 [ cputc::c#0 ] 
Uplift Scope [main] 4,304.75: zp[1]:49 [ main::count_a#2 main::count_a#6 main::count_a#1 ] 309.16: zp[2]:60 [ main::valid_b#11 main::valid_b#28 main::valid_b#1 ] 308.71: zp[2]:62 [ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ] 294.58: zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ] 254.8: zp[2]:65 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 ] 253.77: zp[2]:67 [ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ] 202: zp[1]:73 [ main::$5 ] 202: zp[1]:74 [ main::$8 ] 104.67: zp[2]:86 [ main::total#10 main::total#1 ] 100.54: zp[2]:90 [ main::pwd ] 81.5: zp[1]:92 [ main::ch#0 ] 15.95: zp[1]:94 [ main::max#0 ] 13.17: zp[1]:95 [ main::min#0 ] 
Uplift Scope [gotoxy] 202: zp[2]:75 [ gotoxy::$8 ] 202: zp[2]:77 [ gotoxy::$9 ] 202: zp[2]:79 [ gotoxy::$5 ] 202: zp[2]:81 [ gotoxy::$6 ] 151.5: zp[2]:83 [ gotoxy::$7 ] 138.33: zp[1]:85 [ gotoxy::y#4 gotoxy::y#2 ] 101: zp[2]:88 [ gotoxy::line_offset#0 ] 
Uplift Scope [printf_number_buffer] 701: zp[1]:59 [ printf_number_buffer::buffer_sign#0 ] 
Uplift Scope [printf_uint] 215.5: zp[2]:69 [ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ] 
Uplift Scope [conio_c64_init] 33: zp[1]:93 [ conio_c64_init::line#2 conio_c64_init::line#0 ] 
Uplift Scope [RADIX] 
Uplift Scope [cputln] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [MOS6569_VICII] 
Uplift Scope [MOS6581_SID] 
Uplift Scope [cscroll] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_format_string] 
Uplift Scope [__start] 

Uplifting [memcpy] best 36889 combination zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] zp[2]:6 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] zp[2]:14 [ memcpy::src_end#0 ] zp[2]:98 [ memcpy::source#2 ] zp[2]:100 [ memcpy::destination#2 ] 
Uplifting [memset] best 36873 combination zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] zp[2]:11 [ memset::end#0 ] reg byte x [ memset::c#4 ] zp[2]:102 [ memset::str#3 ] 
Uplifting [utoa_append] best 36270 combination zp[2]:8 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ] zp[2]:16 [ utoa_append::sub#0 ] zp[2]:37 [ utoa_append::return#0 ] zp[2]:45 [ utoa_append::buffer#0 ] 
Uplifting [strtouc] best 34119 combination reg byte x [ strtouc::c#2 strtouc::c#0 strtouc::c#1 ] reg byte a [ strtouc::$5 ] reg byte a [ strtouc::$6 ] reg byte a [ strtouc::$4 ] zp[2]:24 [ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ] zp[1]:26 [ strtouc::val#3 strtouc::val#2 ] zp[1]:28 [ strtouc::val#1 ] zp[1]:71 [ strtouc::return#2 ] zp[1]:72 [ strtouc::return#3 ] 
Limited combination testing to 100 combinations of 18432 possible.
Uplifting [printf_str] best 34049 combination zp[2]:19 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 ] reg byte a [ printf_str::c#1 ] zp[2]:96 [ printf_str::putc#11 ] 
Uplifting [utoa] best 33933 combination zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] reg byte a [ utoa::$10 ] reg byte x [ utoa::started#2 utoa::started#4 ] zp[2]:47 [ utoa::digit_value#0 ] reg byte x [ utoa::$11 ] zp[2]:56 [ utoa::buffer#3 ] 
Uplifting [] best 33933 combination zp[1]:34 [ conio_cursor_y ] zp[2]:39 [ conio_line_color ] zp[2]:41 [ conio_line_text ] zp[1]:58 [ conio_cursor_x ] mem[12] [ printf_buffer ] 
Uplifting [clrscr] best 32343 combination reg byte y [ clrscr::c#2 clrscr::c#1 ] zp[2]:50 [ clrscr::line_cols#5 clrscr::line_cols#1 ] zp[2]:52 [ clrscr::line_text#5 clrscr::line_text#1 ] reg byte x [ clrscr::l#2 clrscr::l#1 ] 
Uplifting [cputc] best 32334 combination reg byte a [ cputc::c#0 ] 
Uplifting [main] best 31654 combination reg byte x [ main::count_a#2 main::count_a#6 main::count_a#1 ] zp[2]:60 [ main::valid_b#11 main::valid_b#28 main::valid_b#1 ] zp[2]:62 [ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ] zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ] zp[2]:65 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 ] zp[2]:67 [ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ] reg byte y [ main::$5 ] reg byte y [ main::$8 ] zp[2]:86 [ main::total#10 main::total#1 ] zp[2]:90 [ main::pwd ] zp[1]:92 [ main::ch#0 ] zp[1]:94 [ main::max#0 ] zp[1]:95 [ main::min#0 ] 
Limited combination testing to 100 combinations of 512 possible.
Uplifting [gotoxy] best 31641 combination zp[2]:75 [ gotoxy::$8 ] zp[2]:77 [ gotoxy::$9 ] zp[2]:79 [ gotoxy::$5 ] zp[2]:81 [ gotoxy::$6 ] zp[2]:83 [ gotoxy::$7 ] reg byte x [ gotoxy::y#4 gotoxy::y#2 ] zp[2]:88 [ gotoxy::line_offset#0 ] 
Uplifting [printf_number_buffer] best 31634 combination reg byte a [ printf_number_buffer::buffer_sign#0 ] 
Uplifting [printf_uint] best 31634 combination zp[2]:69 [ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ] 
Uplifting [conio_c64_init] best 31622 combination reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ] 
Uplifting [RADIX] best 31622 combination 
Uplifting [cputln] best 31622 combination 
Uplifting [MOS6526_CIA] best 31622 combination 
Uplifting [MOS6569_VICII] best 31622 combination 
Uplifting [MOS6581_SID] best 31622 combination 
Uplifting [cscroll] best 31622 combination 
Uplifting [printf_format_number] best 31622 combination 
Uplifting [printf_buffer_number] best 31622 combination 
Uplifting [printf_format_string] best 31622 combination 
Uplifting [__start] best 31622 combination 
Attempting to uplift remaining variables inzp[1]:26 [ strtouc::val#3 strtouc::val#2 ]
Uplifting [strtouc] best 31622 combination zp[1]:26 [ strtouc::val#3 strtouc::val#2 ] 
Attempting to uplift remaining variables inzp[1]:28 [ strtouc::val#1 ]
Uplifting [strtouc] best 31622 combination zp[1]:28 [ strtouc::val#1 ] 
Attempting to uplift remaining variables inzp[1]:34 [ conio_cursor_y ]
Uplifting [] best 31622 combination zp[1]:34 [ conio_cursor_y ] 
Attempting to uplift remaining variables inzp[1]:35 [ utoa::digit#2 utoa::digit#1 ]
Uplifting [utoa] best 31622 combination zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] 
Attempting to uplift remaining variables inzp[1]:58 [ conio_cursor_x ]
Uplifting [] best 31622 combination zp[1]:58 [ conio_cursor_x ] 
Attempting to uplift remaining variables inzp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ]
Uplifting [main] best 31622 combination zp[1]:64 [ main::count_b#11 main::count_b#2 main::count_b#4 ] 
Attempting to uplift remaining variables inzp[1]:71 [ strtouc::return#2 ]
Uplifting [strtouc] best 31562 combination reg byte a [ strtouc::return#2 ] 
Attempting to uplift remaining variables inzp[1]:72 [ strtouc::return#3 ]
Uplifting [strtouc] best 31502 combination reg byte a [ strtouc::return#3 ] 
Attempting to uplift remaining variables inzp[1]:92 [ main::ch#0 ]
Uplifting [main] best 31502 combination zp[1]:92 [ main::ch#0 ] 
Attempting to uplift remaining variables inzp[1]:94 [ main::max#0 ]
Uplifting [main] best 31502 combination zp[1]:94 [ main::max#0 ] 
Attempting to uplift remaining variables inzp[1]:95 [ main::min#0 ]
Uplifting [main] best 31502 combination zp[1]:95 [ main::min#0 ] 
Coalescing zero page register [ zp[2]:65 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 ] ] with [ zp[2]:69 [ printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ] ] - score: 1
Coalescing zero page register [ zp[1]:26 [ strtouc::val#3 strtouc::val#2 ] ] with [ zp[1]:28 [ strtouc::val#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 ] ] with [ zp[2]:8 [ utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 ] ] with [ zp[2]:37 [ utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 ] ] with [ zp[2]:56 [ utoa::buffer#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 ] ] with [ zp[2]:45 [ utoa_append::buffer#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:98 [ memcpy::source#2 ] ] with [ zp[2]:4 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:100 [ memcpy::destination#2 ] ] with [ zp[2]:6 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:102 [ memset::str#3 ] ] with [ zp[2]:2 [ memset::dst#2 memset::dst#4 memset::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:83 [ gotoxy::$7 ] ] with [ zp[2]:77 [ gotoxy::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:88 [ gotoxy::line_offset#0 ] ] with [ zp[2]:81 [ gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[2]:47 [ utoa::digit_value#0 ] ] with [ zp[2]:16 [ utoa_append::sub#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:65 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 ] ] with [ zp[2]:32 [ utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:83 [ gotoxy::$7 gotoxy::$9 ] ] with [ zp[2]:88 [ gotoxy::line_offset#0 gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[2]:96 [ printf_str::putc#11 ] ] with [ zp[2]:52 [ clrscr::line_text#5 clrscr::line_text#1 ] ]
Coalescing zero page register [ zp[2]:19 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 ] ] with [ zp[2]:50 [ clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Coalescing zero page register [ zp[1]:35 [ utoa::digit#2 utoa::digit#1 ] ] with [ zp[1]:26 [ strtouc::val#3 strtouc::val#2 strtouc::val#1 ] ]
Coalescing zero page register [ zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 ] ] with [ zp[2]:24 [ strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ] ]
Coalescing zero page register [ zp[2]:102 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ] ] with [ zp[2]:98 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ]
Coalescing zero page register [ zp[2]:11 [ memset::end#0 ] ] with [ zp[2]:100 [ memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ]
Coalescing zero page register [ zp[2]:29 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 ] ] with [ zp[2]:96 [ printf_str::putc#11 clrscr::line_text#5 clrscr::line_text#1 ] ]
Coalescing zero page register [ zp[1]:94 [ main::max#0 ] ] with [ zp[1]:35 [ utoa::digit#2 utoa::digit#1 strtouc::val#3 strtouc::val#2 strtouc::val#1 ] ]
Coalescing zero page register [ zp[2]:47 [ utoa::digit_value#0 utoa_append::sub#0 ] ] with [ zp[2]:19 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Allocated (was zp[2]:102) zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated (was zp[2]:11) zp[2]:4 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated (was zp[2]:65) zp[2]:6 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ]
Allocated (was zp[2]:14) zp[2]:8 [ memcpy::src_end#0 ]
Allocated (was zp[2]:47) zp[2]:10 [ utoa::digit_value#0 utoa_append::sub#0 printf_str::s#10 printf_str::s#11 printf_str::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated (was zp[2]:29) zp[2]:12 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 printf_str::putc#11 clrscr::line_text#5 clrscr::line_text#1 ]
Allocated (was zp[1]:94) zp[1]:14 [ main::max#0 utoa::digit#2 utoa::digit#1 strtouc::val#3 strtouc::val#2 strtouc::val#1 ]
Allocated (was zp[1]:34) zp[1]:15 [ conio_cursor_y ]
Allocated (was zp[2]:39) zp[2]:16 [ conio_line_color ]
Allocated (was zp[2]:41) zp[2]:18 [ conio_line_text ]
Allocated (was zp[1]:58) zp[1]:20 [ conio_cursor_x ]
Allocated (was zp[2]:83) zp[2]:21 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
Allocated (was zp[2]:60) zp[2]:23 [ main::valid_b#11 main::valid_b#28 main::valid_b#1 ]
Allocated (was zp[2]:62) zp[2]:25 [ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ]
Allocated (was zp[1]:64) zp[1]:27 [ main::count_b#11 main::count_b#2 main::count_b#4 ]
Allocated (was zp[2]:67) zp[2]:28 [ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ]
Allocated (was zp[2]:75) zp[2]:30 [ gotoxy::$8 ]
Allocated (was zp[2]:79) zp[2]:32 [ gotoxy::$5 ]
Allocated (was zp[2]:86) zp[2]:34 [ main::total#10 main::total#1 ]
Allocated (was zp[2]:90) zp[2]:36 [ main::pwd ]
Allocated (was zp[1]:92) zp[1]:38 [ main::ch#0 ]
Allocated (was zp[1]:95) zp[1]:39 [ main::min#0 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// https://adventofcode.com/2020/day/2
  // Upstart
  // Commodore 64 PRG executable file
.file [name="2020-02.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const STACK_BASE = $103
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  /// Color Ram
  .label COLORRAM = $d800
  /// Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $14
  // The current cursor y-position
  .label conio_cursor_y = $f
  // The current text cursor line start
  .label conio_line_text = $12
  // The current color cursor line start
  .label conio_line_color = $10
.segment Code
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] conio_cursor_y = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] call conio_c64_init
    jsr conio_c64_init
    // [6] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [7] call main
    // [27] phi from __start::@1 to main [phi:__start::@1->main]
  main_from___b1:
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [8] return 
    rts
}
  // conio_c64_init
// Set initial cursor position
conio_c64_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    // [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE -- vbuxx=_deref_pbuc1 
    ldx BASIC_CURSOR_LINE
    // [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b2_from_conio_c64_init
    // [12] phi from conio_c64_init to conio_c64_init::@1 [phi:conio_c64_init->conio_c64_init::@1]
  __b1_from_conio_c64_init:
    // [12] phi conio_c64_init::line#2 = $19-1 [phi:conio_c64_init->conio_c64_init::@1#0] -- vbuxx=vbuc1 
    ldx #$19-1
    jmp __b1
    // [11] phi from conio_c64_init to conio_c64_init::@2 [phi:conio_c64_init->conio_c64_init::@2]
  __b2_from_conio_c64_init:
    jmp __b2
    // conio_c64_init::@2
  __b2:
    // [12] phi from conio_c64_init::@2 to conio_c64_init::@1 [phi:conio_c64_init::@2->conio_c64_init::@1]
  __b1_from___b2:
    // [12] phi conio_c64_init::line#2 = conio_c64_init::line#0 [phi:conio_c64_init::@2->conio_c64_init::@1#0] -- register_copy 
    jmp __b1
    // conio_c64_init::@1
  __b1:
    // [13] gotoxy::y#2 = conio_c64_init::line#2
    // [14] call gotoxy
    jsr gotoxy
    jmp __breturn
    // conio_c64_init::@return
  __breturn:
    // [15] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// void cputc(__register(A) char c)
cputc: {
    .const OFFSET_STACK_C = 0
    // [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) -- vbuaa=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_C,x
    // [17] if(cputc::c#0==' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [18] conio_line_text[conio_cursor_x] = cputc::c#0 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [20] conio_cursor_x = ++ conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [21] if(conio_cursor_x!=$28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [22] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [23] call cputln
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [24] return 
    rts
    // [25] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [26] call cputln
    jsr cputln
    jmp __breturn
}
  // main
main: {
    .label pwd = $24
    .label min = $27
    .label max = $e
    .label ch = $26
    // skip char and ": "
    // Count whether char at pos min & max matches ch
    .label count_b = $1b
    .label valid_a = 6
    .label invalid_a = $1c
    .label valid_b = $17
    .label invalid_b = $19
    .label total = $22
    // [28] call clrscr
    // [118] phi from main to clrscr [phi:main->clrscr]
  clrscr_from_main:
    jsr clrscr
    jmp __b20
    // main::@20
  __b20:
    // [29] main::pwd = passwords -- pbuz1=pbuc1 
    lda #<passwords
    sta.z pwd
    lda #>passwords
    sta.z pwd+1
    // [30] phi from main::@20 to main::@1 [phi:main::@20->main::@1]
  __b1_from___b20:
    // [30] phi main::invalid_b#11 = 0 [phi:main::@20->main::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z invalid_b
    lda #>0
    sta.z invalid_b+1
    // [30] phi main::valid_b#11 = 0 [phi:main::@20->main::@1#1] -- vwuz1=vwuc1 
    lda #<0
    sta.z valid_b
    lda #>0
    sta.z valid_b+1
    // [30] phi main::total#10 = 0 [phi:main::@20->main::@1#2] -- vwuz1=vwuc1 
    lda #<0
    sta.z total
    lda #>0
    sta.z total+1
    // [30] phi main::invalid_a#11 = 0 [phi:main::@20->main::@1#3] -- vwuz1=vwuc1 
    lda #<0
    sta.z invalid_a
    lda #>0
    sta.z invalid_a+1
    // [30] phi main::valid_a#11 = 0 [phi:main::@20->main::@1#4] -- vwuz1=vwuc1 
    lda #<0
    sta.z valid_a
    lda #>0
    sta.z valid_a+1
    jmp __b1
    // main::@1
  __b1:
    // [31] if(0!=*main::pwd) goto main::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (pwd),y
    cmp #0
    bne __b2
    // [32] phi from main::@1 to main::@3 [phi:main::@1->main::@3]
  __b3_from___b1:
    jmp __b3
    // main::@3
  __b3:
    // [33] call printf_str
    // [134] phi from main::@3 to printf_str [phi:main::@3->printf_str]
  printf_str_from___b3:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@3->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s [phi:main::@3->printf_str#1] -- pbuz1=pbuc1 
    lda #<s
    sta.z printf_str.s
    lda #>s
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b23
    // main::@23
  __b23:
    // [34] printf_uint::uvalue#0 = main::valid_a#11
    // [35] call printf_uint
    // [143] phi from main::@23 to printf_uint [phi:main::@23->printf_uint]
  printf_uint_from___b23:
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#0 [phi:main::@23->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [36] phi from main::@23 to main::@24 [phi:main::@23->main::@24]
  __b24_from___b23:
    jmp __b24
    // main::@24
  __b24:
    // [37] call printf_str
    // [134] phi from main::@24 to printf_str [phi:main::@24->printf_str]
  printf_str_from___b24:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@24->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s1 [phi:main::@24->printf_str#1] -- pbuz1=pbuc1 
    lda #<s1
    sta.z printf_str.s
    lda #>s1
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b25
    // main::@25
  __b25:
    // [38] printf_uint::uvalue#1 = main::invalid_a#11 -- vwuz1=vwuz2 
    lda.z invalid_a
    sta.z printf_uint.uvalue
    lda.z invalid_a+1
    sta.z printf_uint.uvalue+1
    // [39] call printf_uint
    // [143] phi from main::@25 to printf_uint [phi:main::@25->printf_uint]
  printf_uint_from___b25:
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#1 [phi:main::@25->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [40] phi from main::@25 to main::@26 [phi:main::@25->main::@26]
  __b26_from___b25:
    jmp __b26
    // main::@26
  __b26:
    // [41] call printf_str
    // [134] phi from main::@26 to printf_str [phi:main::@26->printf_str]
  printf_str_from___b26:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@26->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s2 [phi:main::@26->printf_str#1] -- pbuz1=pbuc1 
    lda #<s2
    sta.z printf_str.s
    lda #>s2
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b27
    // main::@27
  __b27:
    // [42] printf_uint::uvalue#2 = main::total#10 -- vwuz1=vwuz2 
    lda.z total
    sta.z printf_uint.uvalue
    lda.z total+1
    sta.z printf_uint.uvalue+1
    // [43] call printf_uint
    // [143] phi from main::@27 to printf_uint [phi:main::@27->printf_uint]
  printf_uint_from___b27:
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#2 [phi:main::@27->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [44] phi from main::@27 to main::@28 [phi:main::@27->main::@28]
  __b28_from___b27:
    jmp __b28
    // main::@28
  __b28:
    // [45] call printf_str
    // [134] phi from main::@28 to printf_str [phi:main::@28->printf_str]
  printf_str_from___b28:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@28->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s3 [phi:main::@28->printf_str#1] -- pbuz1=pbuc1 
    lda #<s3
    sta.z printf_str.s
    lda #>s3
    sta.z printf_str.s+1
    jsr printf_str
    // [46] phi from main::@28 to main::@29 [phi:main::@28->main::@29]
  __b29_from___b28:
    jmp __b29
    // main::@29
  __b29:
    // [47] call printf_str
    // [134] phi from main::@29 to printf_str [phi:main::@29->printf_str]
  printf_str_from___b29:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@29->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s4 [phi:main::@29->printf_str#1] -- pbuz1=pbuc1 
    lda #<s4
    sta.z printf_str.s
    lda #>s4
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b30
    // main::@30
  __b30:
    // [48] printf_uint::uvalue#3 = main::valid_b#11 -- vwuz1=vwuz2 
    lda.z valid_b
    sta.z printf_uint.uvalue
    lda.z valid_b+1
    sta.z printf_uint.uvalue+1
    // [49] call printf_uint
    // [143] phi from main::@30 to printf_uint [phi:main::@30->printf_uint]
  printf_uint_from___b30:
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#3 [phi:main::@30->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [50] phi from main::@30 to main::@31 [phi:main::@30->main::@31]
  __b31_from___b30:
    jmp __b31
    // main::@31
  __b31:
    // [51] call printf_str
    // [134] phi from main::@31 to printf_str [phi:main::@31->printf_str]
  printf_str_from___b31:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@31->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s1 [phi:main::@31->printf_str#1] -- pbuz1=pbuc1 
    lda #<s1
    sta.z printf_str.s
    lda #>s1
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b32
    // main::@32
  __b32:
    // [52] printf_uint::uvalue#4 = main::invalid_b#11 -- vwuz1=vwuz2 
    lda.z invalid_b
    sta.z printf_uint.uvalue
    lda.z invalid_b+1
    sta.z printf_uint.uvalue+1
    // [53] call printf_uint
    // [143] phi from main::@32 to printf_uint [phi:main::@32->printf_uint]
  printf_uint_from___b32:
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#4 [phi:main::@32->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [54] phi from main::@32 to main::@33 [phi:main::@32->main::@33]
  __b33_from___b32:
    jmp __b33
    // main::@33
  __b33:
    // [55] call printf_str
    // [134] phi from main::@33 to printf_str [phi:main::@33->printf_str]
  printf_str_from___b33:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@33->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s2 [phi:main::@33->printf_str#1] -- pbuz1=pbuc1 
    lda #<s2
    sta.z printf_str.s
    lda #>s2
    sta.z printf_str.s+1
    jsr printf_str
    jmp __b34
    // main::@34
  __b34:
    // [56] printf_uint::uvalue#5 = main::total#10 -- vwuz1=vwuz2 
    lda.z total
    sta.z printf_uint.uvalue
    lda.z total+1
    sta.z printf_uint.uvalue+1
    // [57] call printf_uint
    // [143] phi from main::@34 to printf_uint [phi:main::@34->printf_uint]
  printf_uint_from___b34:
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#5 [phi:main::@34->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [58] phi from main::@34 to main::@35 [phi:main::@34->main::@35]
  __b35_from___b34:
    jmp __b35
    // main::@35
  __b35:
    // [59] call printf_str
    // [134] phi from main::@35 to printf_str [phi:main::@35->printf_str]
  printf_str_from___b35:
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@35->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s3 [phi:main::@35->printf_str#1] -- pbuz1=pbuc1 
    lda #<s3
    sta.z printf_str.s
    lda #>s3
    sta.z printf_str.s+1
    jsr printf_str
    // [60] phi from main::@19 main::@35 to main::@19 [phi:main::@19/main::@35->main::@19]
  __b19_from___b19:
  __b19_from___b35:
    jmp __b19
    // main::@19
  __b19:
    jmp __b19_from___b19
    // main::@2
  __b2:
    // [61] strtouc::str#1 = main::pwd -- pbuz1=pbuz2 
    lda.z pwd
    sta.z strtouc.str
    lda.z pwd+1
    sta.z strtouc.str+1
    // [62] call strtouc
  // Parse the first number in the policy        
    // [150] phi from main::@2 to strtouc [phi:main::@2->strtouc]
  strtouc_from___b2:
    // [150] phi strtouc::str#3 = strtouc::str#1 [phi:main::@2->strtouc#0] -- register_copy 
    jsr strtouc
    // [63] strtouc::return#2 = strtouc::val#3 -- vbuaa=vbuz1 
    lda.z strtouc.val
    jmp __b21
    // main::@21
  __b21:
    // [64] main::min#0 = strtouc::return#2 -- vbuz1=vbuaa 
    sta.z min
    // [65] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // [66] strtouc::str#2 = main::pwd -- pbuz1=pbuz2 
    lda.z pwd
    sta.z strtouc.str
    lda.z pwd+1
    sta.z strtouc.str+1
    // [67] call strtouc
    // [150] phi from main::@21 to strtouc [phi:main::@21->strtouc]
  strtouc_from___b21:
    // [150] phi strtouc::str#3 = strtouc::str#2 [phi:main::@21->strtouc#0] -- register_copy 
    jsr strtouc
    // [68] strtouc::return#3 = strtouc::val#3 -- vbuaa=vbuz1 
    lda.z strtouc.val
    jmp __b22
    // main::@22
  __b22:
    // [69] main::max#0 = strtouc::return#3 -- vbuz1=vbuaa 
    sta.z max
    // [70] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // [71] main::ch#0 = *main::pwd -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (pwd),y
    sta.z ch
    // [72] main::pwd = main::pwd + 3 -- pbuz1=pbuz1_plus_vbuc1 
    lda #3
    clc
    adc.z pwd
    sta.z pwd
    bcc !+
    inc.z pwd+1
  !:
    // [73] main::$5 = main::min#0 - 1 -- vbuyy=vbuz1_minus_1 
    lda.z min
    tay
    dey
    // [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4 -- pbuz1_derefidx_vbuyy_neq_vbuz2_then_la1 
    lda (pwd),y
    cmp.z ch
    bne __b4_from___b22
    // [75] phi from main::@22 to main::@16 [phi:main::@22->main::@16]
  __b16_from___b22:
    jmp __b16
    // main::@16
  __b16:
    // [76] phi from main::@16 to main::@4 [phi:main::@16->main::@4]
  __b4_from___b16:
    // [76] phi main::count_b#4 = 1 [phi:main::@16->main::@4#0] -- vbuz1=vbuc1 
    lda #1
    sta.z count_b
    jmp __b4
    // [76] phi from main::@22 to main::@4 [phi:main::@22->main::@4]
  __b4_from___b22:
    // [76] phi main::count_b#4 = 0 [phi:main::@22->main::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta.z count_b
    jmp __b4
    // main::@4
  __b4:
    // [77] main::$8 = main::max#0 - 1 -- vbuyy=vbuz1_minus_1 
    lda.z max
    tay
    dey
    // [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5 -- pbuz1_derefidx_vbuyy_neq_vbuz2_then_la1 
    lda (pwd),y
    cmp.z ch
    bne __b5_from___b4
    jmp __b17
    // main::@17
  __b17:
    // [79] main::count_b#2 = ++ main::count_b#4 -- vbuz1=_inc_vbuz1 
    inc.z count_b
    // [80] phi from main::@17 main::@4 to main::@5 [phi:main::@17/main::@4->main::@5]
  __b5_from___b17:
  __b5_from___b4:
    // [80] phi main::count_b#11 = main::count_b#2 [phi:main::@17/main::@4->main::@5#0] -- register_copy 
    jmp __b5
    // main::@5
  __b5:
    // [81] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    // [81] phi main::count_a#2 = 0 [phi:main::@5->main::@6#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b6
    // main::@6
  __b6:
    // [82] if(0!=*main::pwd) goto main::@7 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (pwd),y
    cmp #0
    bne __b7
    jmp __b8
    // main::@8
  __b8:
    // [83] if(main::count_a#2<main::min#0) goto main::@11 -- vbuxx_lt_vbuz1_then_la1 
    //printf("[%u] min: %u max:%u char:%c count:%u\n", idx, min, max, ch, count);
    // Test rule A: 
    cpx.z min
    bcc __b11
    jmp __b36
    // main::@36
  __b36:
    // [84] if(main::count_a#2<=main::max#0) goto main::@12 -- vbuxx_le_vbuz1_then_la1 
    lda.z max
    stx.z $ff
    cmp.z $ff
    bcs __b12
    jmp __b11
    // main::@11
  __b11:
    // [85] main::invalid_a#1 = ++ main::invalid_a#11 -- vwuz1=_inc_vwuz1 
    inc.z invalid_a
    bne !+
    inc.z invalid_a+1
  !:
    // [86] phi from main::@11 main::@12 to main::@13 [phi:main::@11/main::@12->main::@13]
  __b13_from___b11:
  __b13_from___b12:
    // [86] phi main::invalid_a#16 = main::invalid_a#1 [phi:main::@11/main::@12->main::@13#0] -- register_copy 
    // [86] phi main::valid_a#15 = main::valid_a#11 [phi:main::@11/main::@12->main::@13#1] -- register_copy 
    jmp __b13
    // main::@13
  __b13:
    // [87] if(main::count_b#11==1) goto main::@14 -- vbuz1_eq_vbuc1_then_la1 
    // Test rule A: 
    lda #1
    cmp.z count_b
    beq __b14
    jmp __b18
    // main::@18
  __b18:
    // [88] main::invalid_b#1 = ++ main::invalid_b#11 -- vwuz1=_inc_vwuz1 
    inc.z invalid_b
    bne !+
    inc.z invalid_b+1
  !:
    // [89] phi from main::@14 main::@18 to main::@15 [phi:main::@14/main::@18->main::@15]
  __b15_from___b14:
  __b15_from___b18:
    // [89] phi main::invalid_b#30 = main::invalid_b#11 [phi:main::@14/main::@18->main::@15#0] -- register_copy 
    // [89] phi main::valid_b#28 = main::valid_b#1 [phi:main::@14/main::@18->main::@15#1] -- register_copy 
    jmp __b15
    // main::@15
  __b15:
    // [90] main::total#1 = ++ main::total#10 -- vwuz1=_inc_vwuz1 
    inc.z total
    bne !+
    inc.z total+1
  !:
    // [91] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // [30] phi from main::@15 to main::@1 [phi:main::@15->main::@1]
  __b1_from___b15:
    // [30] phi main::invalid_b#11 = main::invalid_b#30 [phi:main::@15->main::@1#0] -- register_copy 
    // [30] phi main::valid_b#11 = main::valid_b#28 [phi:main::@15->main::@1#1] -- register_copy 
    // [30] phi main::total#10 = main::total#1 [phi:main::@15->main::@1#2] -- register_copy 
    // [30] phi main::invalid_a#11 = main::invalid_a#16 [phi:main::@15->main::@1#3] -- register_copy 
    // [30] phi main::valid_a#11 = main::valid_a#15 [phi:main::@15->main::@1#4] -- register_copy 
    jmp __b1
    // main::@14
  __b14:
    // [92] main::valid_b#1 = ++ main::valid_b#11 -- vwuz1=_inc_vwuz1 
    inc.z valid_b
    bne !+
    inc.z valid_b+1
  !:
    jmp __b15_from___b14
    // main::@12
  __b12:
    // [93] main::valid_a#1 = ++ main::valid_a#11 -- vwuz1=_inc_vwuz1 
    inc.z valid_a
    bne !+
    inc.z valid_a+1
  !:
    jmp __b13_from___b12
    // main::@7
  __b7:
    // [94] if(*main::pwd!=main::ch#0) goto main::@9 -- _deref_pbuz1_neq_vbuz2_then_la1 
    ldy #0
    lda (pwd),y
    cmp.z ch
    bne __b9_from___b7
    jmp __b10
    // main::@10
  __b10:
    // [95] main::count_a#1 = ++ main::count_a#2 -- vbuxx=_inc_vbuxx 
    inx
    // [96] phi from main::@10 main::@7 to main::@9 [phi:main::@10/main::@7->main::@9]
  __b9_from___b10:
  __b9_from___b7:
    // [96] phi main::count_a#6 = main::count_a#1 [phi:main::@10/main::@7->main::@9#0] -- register_copy 
    jmp __b9
    // main::@9
  __b9:
    // [97] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // [81] phi from main::@9 to main::@6 [phi:main::@9->main::@6]
  __b6_from___b9:
    // [81] phi main::count_a#2 = main::count_a#6 [phi:main::@9->main::@6#0] -- register_copy 
    jmp __b6
  .segment Data
    s: .text "rule a valid: "
    .byte 0
    s1: .text " invalid:"
    .byte 0
    s2: .text " total:"
    .byte 0
    s3: .text @"\n"
    .byte 0
    s4: .text "rule b valid: "
    .byte 0
}
.segment Code
  // gotoxy
// Set the cursor to the specified position
// void gotoxy(char x, __register(X) char y)
gotoxy: {
    .const x = 0
    .label __5 = $20
    .label __6 = $15
    .label __7 = $15
    .label line_offset = $15
    .label __8 = $1e
    .label __9 = $15
    // [98] if(gotoxy::y#2<$19+1) goto gotoxy::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19+1
    bcc __b3_from_gotoxy
    // [100] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [100] phi gotoxy::y#4 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // [99] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
  __b3_from_gotoxy:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [100] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
  __b1_from___b3:
    // [100] phi gotoxy::y#4 = gotoxy::y#2 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    jmp __b2
    // gotoxy::@2
  __b2:
    // [101] conio_cursor_x = gotoxy::x#2 -- vbuz1=vbuc1 
    lda #x
    sta.z conio_cursor_x
    // [102] conio_cursor_y = gotoxy::y#4 -- vbuz1=vbuxx 
    stx.z conio_cursor_y
    // [103] gotoxy::$7 = (unsigned int)gotoxy::y#4 -- vwuz1=_word_vbuxx 
    txa
    sta.z __7
    lda #0
    sta.z __7+1
    // [104] gotoxy::$8 = gotoxy::$7 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [105] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    clc
    lda.z __9
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [106] gotoxy::line_offset#0 = gotoxy::$9 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // [107] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // [108] conio_line_text = gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // [109] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    lda.z __6
    clc
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // [110] conio_line_color = gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [111] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // [112] conio_line_text = conio_line_text + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [113] conio_line_color = conio_line_color + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [114] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [115] conio_cursor_y = ++ conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [116] call cscroll
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [117] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label line_text = $c
    .label line_cols = $a
    // [119] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
  __b1_from_clrscr:
    // [119] phi clrscr::line_cols#5 = COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [119] phi clrscr::line_text#5 = DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [119] phi clrscr::l#2 = 0 [phi:clrscr->clrscr::@1#2] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // clrscr::@1
  __b1:
    // [120] if(clrscr::l#2<$19) goto clrscr::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b3_from___b1
    jmp __b2
    // clrscr::@2
  __b2:
    // [121] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [122] conio_cursor_y = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [123] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [124] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [125] return 
    rts
    // [126] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b3_from___b1:
    // [126] phi clrscr::c#2 = 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuyy=vbuc1 
    ldy #0
    jmp __b3
    // clrscr::@3
  __b3:
    // [127] if(clrscr::c#2<$28) goto clrscr::@4 -- vbuyy_lt_vbuc1_then_la1 
    cpy #$28
    bcc __b4
    jmp __b5
    // clrscr::@5
  __b5:
    // [128] clrscr::line_text#1 = clrscr::line_text#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // [129] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // [130] clrscr::l#1 = ++ clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [119] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
  __b1_from___b5:
    // [119] phi clrscr::line_cols#5 = clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [119] phi clrscr::line_text#5 = clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [119] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // [131] clrscr::line_text#5[clrscr::c#2] = ' ' -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #' '
    sta (line_text),y
    // [132] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #LIGHT_BLUE
    sta (line_cols),y
    // [133] clrscr::c#1 = ++ clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [126] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
  __b3_from___b4:
    // [126] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // printf_str
/// Print a NUL-terminated string
// void printf_str(__zp($c) void (*putc)(char), __zp($a) const char *s)
printf_str: {
    .label s = $a
    .label putc = $c
    // [135] phi from printf_str printf_str::@2 to printf_str::@1 [phi:printf_str/printf_str::@2->printf_str::@1]
  __b1_from_printf_str:
  __b1_from___b2:
    // [135] phi printf_str::s#10 = printf_str::s#11 [phi:printf_str/printf_str::@2->printf_str::@1#0] -- register_copy 
    jmp __b1
    // printf_str::@1
  __b1:
    // [136] printf_str::c#1 = *printf_str::s#10 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [137] printf_str::s#0 = ++ printf_str::s#10 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [138] if(0!=printf_str::c#1) goto printf_str::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // printf_str::@return
  __breturn:
    // [139] return 
    rts
    // printf_str::@2
  __b2:
    // [140] stackpush(char) = printf_str::c#1 -- _stackpushbyte_=vbuaa 
    pha
    // [141] callexecute *printf_str::putc#11  -- call__deref_pprz1 
    jsr icall1
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    jmp __b1_from___b2
    // Outside Flow
  icall1:
    jmp (putc)
}
  // printf_uint
// Print an unsigned int using a specific format
// void printf_uint(void (*putc)(char), __zp(6) unsigned int uvalue, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_uint: {
    .label uvalue = 6
    jmp __b1
    // printf_uint::@1
  __b1:
    // [144] *((char *)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // [145] utoa::value#1 = printf_uint::uvalue#6
    // [146] call utoa
  // Format number into buffer
    // [177] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
  utoa_from___b1:
    jsr utoa
    jmp __b2
    // printf_uint::@2
  __b2:
    // [147] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer) -- vbuaa=_deref_pbuc1 
    lda printf_buffer
    // [148] call printf_number_buffer
  // Print using format
    // [198] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
  printf_number_buffer_from___b2:
    jsr printf_number_buffer
    jmp __breturn
    // printf_uint::@return
  __breturn:
    // [149] return 
    rts
}
  // strtouc
// Converts the string pointed to, by the argument str to an unsigned char (unsing base 10)
// Modifies *endptr to point to the first unparseable character
// __register(A) char strtouc(__zp($c) char *str, char **endptr)
strtouc: {
    .label val = $e
    .label str = $c
    // [151] strtouc::c#0 = *strtouc::str#3 -- vbuxx=_deref_pbuz1 
    ldy #0
    lda (str),y
    tax
    // [152] phi from strtouc to strtouc::@1 [phi:strtouc->strtouc::@1]
  __b1_from_strtouc:
    // [152] phi strtouc::str#4 = strtouc::str#3 [phi:strtouc->strtouc::@1#0] -- register_copy 
    // [152] phi strtouc::val#3 = 0 [phi:strtouc->strtouc::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z val
    // [152] phi strtouc::c#2 = strtouc::c#0 [phi:strtouc->strtouc::@1#2] -- register_copy 
    jmp __b1
    // strtouc::@1
  __b1:
    // [153] if(strtouc::c#2<'0') goto strtouc::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #'0'
    bcc __b3
    jmp __b4
    // strtouc::@4
  __b4:
    // [154] if(strtouc::c#2<='9') goto strtouc::@2 -- vbuxx_le_vbuc1_then_la1 
    cpx #'9'
    bcc __b2
    beq __b2
    jmp __b3
    // strtouc::@3
  __b3:
    // [155] *(&main::pwd) = strtouc::str#4 -- _deref_qbuc1=pbuz1 
    lda.z str
    sta.z main.pwd
    lda.z str+1
    sta.z main.pwd+1
    jmp __breturn
    // strtouc::@return
  __breturn:
    // [156] return 
    rts
    // strtouc::@2
  __b2:
    // [157] strtouc::$5 = strtouc::val#3 << 2 -- vbuaa=vbuz1_rol_2 
    lda.z val
    asl
    asl
    // [158] strtouc::$6 = strtouc::$5 + strtouc::val#3 -- vbuaa=vbuaa_plus_vbuz1 
    clc
    adc.z val
    // [159] strtouc::val#1 = strtouc::$6 << 1 -- vbuz1=vbuaa_rol_1 
    asl
    sta.z val
    // [160] strtouc::$4 = strtouc::c#2 - '0' -- vbuaa=vbuxx_minus_vbuc1 
    txa
    sec
    sbc #'0'
    // [161] strtouc::val#2 = strtouc::val#1 + strtouc::$4 -- vbuz1=vbuz1_plus_vbuaa 
    clc
    adc.z val
    sta.z val
    // [162] strtouc::str#0 = ++ strtouc::str#4 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [163] strtouc::c#1 = *strtouc::str#0 -- vbuxx=_deref_pbuz1 
    ldy #0
    lda (str),y
    tax
    // [152] phi from strtouc::@2 to strtouc::@1 [phi:strtouc::@2->strtouc::@1]
  __b1_from___b2:
    // [152] phi strtouc::str#4 = strtouc::str#0 [phi:strtouc::@2->strtouc::@1#0] -- register_copy 
    // [152] phi strtouc::val#3 = strtouc::val#2 [phi:strtouc::@2->strtouc::@1#1] -- register_copy 
    // [152] phi strtouc::c#2 = strtouc::c#1 [phi:strtouc::@2->strtouc::@1#2] -- register_copy 
    jmp __b1
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [164] if(conio_cursor_y!=$19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [165] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
  __b1_from_cscroll:
    jmp __b1
    // cscroll::@1
  __b1:
    // [166] call memcpy
    // [206] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
  memcpy_from___b1:
    // [206] phi memcpy::destination#2 = (void *)DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [206] phi memcpy::source#2 = (void *)DEFAULT_SCREEN+$28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [167] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [168] call memcpy
    // [206] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
  memcpy_from___b2:
    // [206] phi memcpy::destination#2 = (void *)COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [206] phi memcpy::source#2 = (void *)COLORRAM+$28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [169] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    // [170] call memset
    // [216] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
  memset_from___b3:
    // [216] phi memset::c#4 = ' ' [phi:cscroll::@3->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [216] phi memset::str#3 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [171] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [172] call memset
    // [216] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
  memset_from___b4:
    // [216] phi memset::c#4 = LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuxx=vbuc1 
    ldx #LIGHT_BLUE
    // [216] phi memset::str#3 = (void *)COLORRAM+(unsigned int)$19*$28-$28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b5
    // cscroll::@5
  __b5:
    // [173] conio_line_text = conio_line_text - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [174] conio_line_color = conio_line_color - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [175] conio_cursor_y = -- conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [176] return 
    rts
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// void utoa(__zp(6) unsigned int value, __zp($c) char *buffer, char radix)
utoa: {
    .label digit_value = $a
    .label buffer = $c
    .label digit = $e
    .label value = 6
    // [178] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
  __b1_from_utoa:
    // [178] phi utoa::buffer#11 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [178] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [178] phi utoa::value#2 = utoa::value#1 [phi:utoa->utoa::@1#2] -- register_copy 
    // [178] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z digit
    jmp __b1
    // utoa::@1
  __b1:
    // [179] if(utoa::digit#2<5-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #5-1
    bcc __b2
    jmp __b3
    // utoa::@3
  __b3:
    // [180] utoa::$11 = (char)utoa::value#2 -- vbuxx=_byte_vwuz1 
    ldx.z value
    // [181] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // [182] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [183] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa::@return
  __breturn:
    // [184] return 
    rts
    // utoa::@2
  __b2:
    // [185] utoa::$10 = utoa::digit#2 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [186] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // [187] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    jmp __b7
    // utoa::@7
  __b7:
    // [188] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    lda.z digit_value+1
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [189] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
  __b4_from___b7:
    // [189] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [189] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [189] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    jmp __b4
    // utoa::@4
  __b4:
    // [190] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [178] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
  __b1_from___b4:
    // [178] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [178] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [178] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [178] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // [191] utoa_append::buffer#0 = utoa::buffer#11
    // [192] utoa_append::value#0 = utoa::value#2
    // [193] utoa_append::sub#0 = utoa::digit_value#0
    // [194] call utoa_append
    // [224] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
  utoa_append_from___b5:
    jsr utoa_append
    // [195] utoa_append::return#0 = utoa_append::value#2
    jmp __b6
    // utoa::@6
  __b6:
    // [196] utoa::value#0 = utoa_append::return#0
    // [197] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [189] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
  __b4_from___b6:
    // [189] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [189] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [189] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// void printf_number_buffer(void (*putc)(char), __register(A) char buffer_sign, char *buffer_digits, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_number_buffer: {
    .label buffer_digits = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label putc = cputc
    jmp __b1
    // printf_number_buffer::@1
  __b1:
    // [199] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2_from___b1
    jmp __b3
    // printf_number_buffer::@3
  __b3:
    // [200] stackpush(char) = printf_number_buffer::buffer_sign#0 -- _stackpushbyte_=vbuaa 
    pha
    // [201] callexecute cputc  -- call_vprc1 
    jsr cputc
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // [203] phi from printf_number_buffer::@1 printf_number_buffer::@3 to printf_number_buffer::@2 [phi:printf_number_buffer::@1/printf_number_buffer::@3->printf_number_buffer::@2]
  __b2_from___b1:
  __b2_from___b3:
    jmp __b2
    // printf_number_buffer::@2
  __b2:
    // [204] call printf_str
    // [134] phi from printf_number_buffer::@2 to printf_str [phi:printf_number_buffer::@2->printf_str]
  printf_str_from___b2:
    // [134] phi printf_str::putc#11 = printf_number_buffer::putc#0 [phi:printf_number_buffer::@2->printf_str#0] -- pprz1=pprc1 
    lda #<putc
    sta.z printf_str.putc
    lda #>putc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = printf_number_buffer::buffer_digits#0 [phi:printf_number_buffer::@2->printf_str#1] -- pbuz1=pbuc1 
    lda #<buffer_digits
    sta.z printf_str.s
    lda #>buffer_digits
    sta.z printf_str.s+1
    jsr printf_str
    jmp __breturn
    // printf_number_buffer::@return
  __breturn:
    // [205] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// void * memcpy(__zp(4) void *destination, __zp(2) void *source, unsigned int num)
memcpy: {
    .label src_end = 8
    .label dst = 4
    .label src = 2
    .label source = 2
    .label destination = 4
    // [207] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [208] memcpy::src#4 = (char *)memcpy::source#2
    // [209] memcpy::dst#4 = (char *)memcpy::destination#2
    // [210] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [210] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [210] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [211] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [212] return 
    rts
    // memcpy::@2
  __b2:
    // [213] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [214] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [215] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// void * memset(__zp(2) void *str, __register(X) char c, unsigned int num)
memset: {
    .label end = 4
    .label dst = 2
    .label str = 2
    jmp __b1
    // memset::@1
  __b1:
    // [217] memset::end#0 = (char *)memset::str#3 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [218] memset::dst#4 = (char *)memset::str#3
    // [219] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [219] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [220] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [221] return 
    rts
    // memset::@3
  __b3:
    // [222] *memset::dst#2 = memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // [223] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// __zp(6) unsigned int utoa_append(__zp($c) char *buffer, __zp(6) unsigned int value, __zp($a) unsigned int sub)
utoa_append: {
    .label buffer = $c
    .label value = 6
    .label sub = $a
    .label return = 6
    // [225] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
  __b1_from_utoa_append:
    // [225] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [225] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    jmp __b1
    // utoa_append::@1
  __b1:
    // [226] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    jmp __b3
    // utoa_append::@3
  __b3:
    // [227] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    jmp __breturn
    // utoa_append::@return
  __breturn:
    // [228] return 
    rts
    // utoa_append::@2
  __b2:
    // [229] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // [230] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [225] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
  __b1_from___b2:
    // [225] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [225] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  // Use one huge string since array of strings is not currently supported
  passwords: .text "4-6 b: bbbdbtbbbj@1-6 g: ggvggbgggstg@1-4 s: lssss@13-14 v: hvvcvvvvvvvvvsvvv@3-5 m: lcmmm@3-4 t: stht@5-6 b: dbkbhb@4-7 p: ppfppppq@4-5 j: jjjjj@3-12 s: sskssssssssss@14-15 z: zrndzbmrzzpzzqzj@12-18 l: tllllllllllllplllbl@8-10 b: bdbvqbtbrb@1-3 c: tcqccc@1-2 n: nbnj@5-7 c: ccccccccc@9-10 l: hpmslrlgll@6-9 n: nnnnnnnnb@6-10 r: rmzjlrsxkbw@6-8 r: bzqnnrrrj@4-14 c: mfffvcbtchzrqcn@1-6 f: ffffffffffffff@2-5 f: wxtkf@8-12 b: rdcbbjbzbbpb@8-18 d: ddtdddddddwvdfdsdd@5-8 s: sssmsgpgszms@6-11 x: xxxxxvxxxxxt@17-18 n: jhrnnzpxzngfqrntmnc@13-14 r: rrrmrrrrlrrshvrrr@4-5 h: hhhhrhh@8-10 d: dgwtdsxnncd@9-13 q: qqbpqmqgmqwqbqqqxcgq@2-5 g: gjjcpgg@6-12 t: ttttvttttttrtt@3-9 h: hhhhhhhhsh@15-16 p: ppppsppppppppppz@2-5 c: csccctcccc@11-14 p: pppppppppppppnp@8-9 j: jvbjjjjrjbjj@8-16 b: qklbmbntmvbhxplbbcb@12-13 j: jjjjsjmfjjjkhj@2-13 t: llckxhfmtznptndcsx@6-8 x: dxxxxvxxtt@3-4 d: ddht@3-4 t: ttdtt@11-12 r: rrrrrrrrrrrd@9-10 h: hhhhhhhhgh@3-16 h: hhhhhhhhhhhhhhnhhh@10-11 h: hxhhhdhhhsh@1-7 n: jnfnjnn@3-4 m: msmnpmpf@15-17 t: tpdtttgltvtttztlv@7-10 v: vvpsvpgjzvvvvjs@1-5 p: pxppg@2-7 w: jwhgkgvxcv@13-14 m: pxxmjznmrzdsbbmmfj@1-4 d: ddddd@14-16 r: rrrrrrrrrrrrrwrr@2-5 l: klbtzzlrlslgswhljtq@6-12 c: qccrcpccccccdccccc@2-18 l: llllllllvllllllllkll@18-20 z: zzzzzzzzszqzwzrzzzzn@5-16 c: cbccclcfcncvqztqc@7-11 m: fnwmtsmgpxncnr@6-7 h: hpjrhbhkshnchbhpph@11-12 s: ssssssssssps@6-9 s: jfsmmssssqz@1-15 l: llllllllllllllbll@2-6 g: gggggwgggpggggggg@6-9 j: jjjpjjjjn@9-13 n: nnnnnnnnnnnnnn@10-13 t: cgntllxnvpkjwxtght@2-11 f: xcftbcdcndkgm@10-13 j: jjjjjjjjjjjjvj@9-17 f: rfrffnsffxqflbffvv@6-11 k: kkkkkrwkqckmk@5-7 q: zfqqqqqn@12-13 c: cfcccvccccckccccv@5-15 z: xhzzzzzzzzfzzknzz@18-19 f: jkfksvmfjbdffffffff@8-11 h: hhhhmhhkhsfdg@14-16 s: ssssssdjssssssssssss@15-16 t: jtmjhsxqqmmthmtttm@5-7 h: hkbjhjhh@2-6 n: knprnfnfhhrcnk@3-4 w: snwd@5-11 w: wwwwnwwwwwwwwwwww@2-12 k: bkqjghpktfsk@14-15 v: vvvsvvvvvvvvvxv@8-9 w: fxwwwwwscwl@9-15 c: sbjvvsmdvqknbccxxx@6-15 t: tpwjtdnnldthxvn@13-15 t: tttttrzmzttjttt@3-11 m: mmvmlmmmwfmjx@13-14 s: gskssssssscssssqjssl@5-10 l: bfnmqlldllp@17-18 q: qkwqqqqqqqqqqqrqqqqq@2-5 r: rsvrrq@3-4 j: jjjdj@3-4 m: mtmk@8-9 k: vsvkvkrkc@10-12 t: ttttttcttttgttt@3-4 n: trzw@5-11 q: qqmpsqbxkqq@13-15 s: sqsssnmwqszfsmv@5-6 b: bbbbzvb@5-13 p: pjjhpnqpzpmpfpfp@4-5 l: mgnwlrw@1-7 k: fkzxwkj@1-10 q: qgxqqqqqqg@8-9 s: ssqssssfss@7-8 c: xxcscclccdvcmqcc@2-6 d: xdlmzdzxrpmlnt@3-9 s: sssssnssgbs@7-10 h: sblrrhqrhh@3-5 n: xnndnnnfnw@9-10 l: vllllqlllhllljxlp@2-5 d: ddxzbxk@10-14 m: mmmmmmmmmmdmmmmsmmm@1-2 f: ffffw@14-15 g: wdjhplhrbcxdgpnt@1-2 l: klllllll@10-11 k: ckkhkkvkkkmkkjkwkkwk@7-9 f: ffrhdvftfpjfqffhnfsf@4-5 c: kkjksrmkccg@5-9 r: rrrrhrrrrr@5-6 p: pppppth@4-10 t: kpfwzjtchtbndblrvst@1-5 l: mllllllnllll@13-16 r: rrrvrrrrrrrrzrrg@17-18 x: xxfxxxxxxxxsxxxxxsxx@8-11 w: rwbnqrngcvpgwwww@4-8 z: zzzzzzzzzz@4-9 b: bbvvbbbbr@2-5 x: qlfhxkx@3-8 t: wvptttttttt@1-3 m: hmmmmqmm@17-19 h: nhhhdvhnhrhhhhnhmdh@11-12 s: psszbdpsgfks@6-7 s: sssssshs@10-15 l: mnkdvnvmxljjtggwcl@1-13 j: qjjjjjjjjjjjdj@4-9 l: jxvkwhlmlhdtgwvgsdzz@5-9 c: ccfghhccccgc@10-11 v: vvvvvvvvvvv@7-8 t: cntwzshkzvmrnnkr@1-11 l: tllllllltllll@15-17 l: lllglvctrvllzkllt@3-5 n: ncnnp@2-3 q: jsqqh@4-10 h: hhhhhhhhhvh@16-18 b: bbnbbbbbtbbkktbbzdr@4-6 g: kbggdhgggggggggggfc@12-13 p: cpvcppqpplwpt@5-10 h: fvhhbrhpghchhhhhh@2-5 b: bbvzn@14-15 x: xxxbxnwxxxxzxxh@13-15 n: nnfgdglfnntnjqn@2-4 c: cfccc@3-5 v: vrvvzdvv@17-19 v: vvvvvvvvvvvvvvvvvvsv@1-20 h: hhhhhhhhhhqhhhhhhhhh@4-15 q: qqqtqqqqqqqqqqqqlq@11-13 h: hhkhvhhhhwhgk@8-11 p: ppvppppppptspf@8-9 m: mmmpmmkmdmpkspmg@1-7 m: lcmvggm@6-12 v: tvfstvvpvzsvcv@8-9 n: nnnqnnwrrdzlmnwlznrn@1-5 s: msssms@1-3 v: vpdzvdvgv@6-9 g: drgrfggcg@6-16 x: djpxhxvncxfghsxx@1-3 b: sjbwwxbvtvbkt@6-8 c: cccccstccjhv@1-11 q: qqqpqqqqqqwqqq@9-11 m: vsbmmmmmmmqmmsm@2-7 g: gqggggggg@2-3 m: mrgvm@6-7 c: cccpcfcc@6-10 w: swbngwswnxnww@13-14 r: rrrrrrrrrrwrrgrdr@3-9 v: vctxhxtfvq@2-9 r: jrrcslgplcprlvgthg@2-3 n: hnnnsxclvdj@10-11 h: zrhghhqhgzh@15-18 z: zzzlzzzzzzzzpzqzpzzz@3-8 f: fffffrfl@1-4 l: rllllfl@1-2 n: nnnnnvtnv@17-19 z: zzzzzzzzzzzzzzzzzzqz@13-15 n: nnnznnnnnnznnnn@2-5 c: gcccncjmsncfcntjc@8-9 h: hhhhhhhhbpsfh@7-11 r: lzvvlbrgjgrr@5-11 x: xxxxqxxxxxxx@4-7 p: gqpkmppzpsmtzhfdfpl@3-4 j: jjdjdg@14-16 z: zzzzzzzgjzzzzpzf@1-2 n: nnnvnwnnnnh@4-5 z: jhzzz@5-7 k: kkkkkkf@8-18 z: khzzrzjzmzzvzzpcclm@5-10 m: kjrhwkhmsm@10-16 v: vvvvvvvvvvvvvvvwv@9-10 l: xhvjsmllkcdtldfxlw@8-10 p: ppjvppbpqhpwhppgbp@4-6 m: jlmkhm@1-3 k: gvpklkkkk@15-16 g: ggjggggvgmgtpgcg@1-4 j: jbjwj@1-3 x: xxxpxxdxxhfx@14-16 v: vxmhhdvvfjjqwhtv@6-7 l: lnkchzlwxlp@3-4 v: vvvcv@13-14 p: pbqpppppzbmppc@6-12 p: glqwzprpqbqf@6-12 l: lllllglllllll@8-9 n: nnsnnnndcn@6-8 p: prwppppp@1-10 q: dqqqqqqqqjq@12-16 w: kwtbdnjqmwwxhwcwswkl@11-14 r: rrnjghfrrrshlrq@2-14 w: vwbbvcvgnxdmxl@7-8 g: sqmggkgslkwlvggg@1-6 q: tqqqqqq@2-3 b: bbbr@7-9 b: jnwbswfpbn@4-5 n: nnlct@3-11 s: ssssssssssp@2-6 f: wjlpwf@5-10 g: gggghqgqgb@1-3 p: ppdg@4-7 j: pjnkjjljjj@1-2 v: ghmjzxmtxjxnv@6-14 k: klgdzfmgdwhqdkhcnzm@6-11 z: tgzpzzzzztc@2-12 b: cxsmjbdgdnrb@4-6 v: lxdvvh@3-8 l: pnpdnrll@7-8 m: mzmswvmmbxmzlmwhdvq@13-14 s: khzssssssssszsssss@10-18 d: dmfdlgcxdbzznbrlqn@13-14 j: jjjjjjjjjjjjdpjj@15-17 j: jjjjjjjjjwjsqjwjj@10-15 x: xxfxkzxxhxxxxxvxxw@7-14 c: wcccwcmmcccccxhcccc@2-7 z: zmzvfzlszr@7-8 k: jjkrklrkkv@8-9 r: rrrrrjrtz@2-3 w: tvws@1-5 b: bbbjm@1-2 q: tqqjf@5-10 j: wlgjghjhjljwtpcdkqwk@2-5 c: dzpkc@5-6 m: mbvmkm@4-15 k: stjkjvvxrmwdpkwsjqvc@6-9 h: hwkgjplmhxwgvnbhwh@12-13 z: zzzzzzzzzzzzz@7-8 q: qqqqqqqqq@2-5 c: clcwmccczclcccc@2-5 l: jlcgfbflklvpfqxtwgg@5-7 n: nnnnnnvnnnnnn@3-5 f: gfktfffqvgltsbff@10-16 p: jppbttppzpqppppp@2-3 m: zmdm@4-6 j: zsmtjjdnrpp@17-18 j: hvvmrkfnnkvrjtjhjj@12-15 d: dtddddddddtwxgld@8-12 r: rdzrwfgrmxwttknxz@6-7 s: rssbktxsgd@11-13 d: ddddmwddddxddndc@3-6 p: ppcpspfp@12-15 j: jjjjjjgjjjjcjlzj@8-12 v: tgjkwfbsxzzvvpmfs@6-7 z: trbfbdz@4-6 v: vvvvvpvv@8-16 p: pnvppdpjppppppph@8-9 z: lzzzzpdzk@1-4 t: qttzz@2-3 d: dhdd@5-8 m: mmmkmmxmkj@2-12 f: hfhzkwdmrlqvfkn@5-6 h: hhhhhph@14-15 b: bbbbxbbbbbbbbbh@2-3 v: vvcj@12-19 d: ddvdwwqdddcdtdmwdqp@3-4 s: ssjssssssss@2-6 c: wzzxqcdcnlgcph@11-12 j: jjdrcjzjkjcs@4-9 z: bzzzzzzxzz@2-8 b: gjbfkxhb@1-3 c: cpksst@1-5 h: hhjhh@14-15 j: jjjjjjjjjjjjjjr@8-9 n: pcndxcfknfbnnls@10-13 k: kkkqzkwbkkkrtn@4-5 r: rzrrrnrj@13-15 p: ppppppppppppppt@3-6 j: fjqqzzzjm@2-9 m: zmjhctkmf@5-6 s: ssmjss@3-4 c: jlfd@8-12 d: qbddfhnddzgvddddd@6-7 p: xfppppcppppxgp@8-13 s: sssssssfssssssss@13-17 g: xskktsjxlvgfxtzzgfj@2-4 q: qqtwfqqnkvbvbhzs@1-5 j: cjmjs@4-5 c: tvccnc@3-14 m: kkfhmnkkmztxtmn@11-15 x: xxxxxpxmxxvbxxxvx@9-11 l: nhgzwmmrkqhblnk@7-10 x: xxxxxdmxxxxxxxx@13-14 v: vvvvvvpvvvjvvcvv@16-17 n: nnnnqnnbnnnnnnnpn@3-4 j: jvjj@15-16 q: zlqsgvpztknqjqqwqvf@3-4 s: sssrsssdss@11-13 g: ggqggmggswggdk@1-4 t: jmtzttztqt@2-3 v: vvvv@11-13 g: cgjgxgggkgbggxg@4-6 g: ggggqlhgmz@8-15 g: prvxwzkvdhgkjlg@6-9 g: gggggnsjlg@12-14 p: mmvlpzkmpgtpvj@7-10 k: kkkxkkjkkkdkkkp@14-16 b: zmztqsrgvjjmswzkbnk@1-2 x: xxbxxxxhx@2-5 l: tlhsx@3-5 x: xxxxn@4-12 c: vdnmtmqwnxkcldc@4-8 x: xxxxjglx@5-13 s: vsssspszssssnsss@3-6 k: kkhkkkknb@3-5 t: pttqtwnprt@10-14 m: ttjqvzmgmmjqzkd@1-5 b: bbbbpbbb@10-15 d: wdjrhvfngdtlkdl@6-7 w: trxwdwww@2-4 n: snxqlgtsmdnnjgwrgmms@16-18 l: klslpljllqlcslqqll@4-7 t: tttwzttjt@9-10 f: ffffffffwf@8-15 h: trhgxjchhxvvhqp@8-12 w: wwwwwwwqwwwg@12-13 x: xxxxxxxxsffqlxx@5-7 k: kkkklkkkktkk@1-7 m: wkmmqmmhf@12-13 h: mhhchwhhhzhhcvh@7-11 k: kkkkkkwkkkgkk@4-6 l: hdlbll@8-12 v: fvvvvvvvrvvv@2-9 h: hzhhhhhhhhhhhhr@6-8 b: qbqjpbbbdsshv@2-3 h: hwhl@4-7 l: mdllxjgdw@3-9 f: rwffzfkpwbzp@3-5 t: ttnttt@7-10 c: mpcccpndqc@6-7 h: fhhhljh@2-7 v: pnvzcns@1-3 v: vvgv@5-9 s: ssssshsspsssssss@4-6 j: mjjjjq@5-14 h: hwbqghmvmmnvhhrqmj@5-6 s: wctjsh@7-8 s: sssscsjs@14-17 v: vvvvvvvvvvvvvvvvv@14-15 w: wxwwwwwwfwwwwsw@6-7 v: ksvvvlpvv@7-18 s: cssstsvsscshsstsss@5-6 b: zzwbpm@6-7 r: bvtmpkxspskr@6-7 v: lvxrvqv@15-17 c: ccccccccccccccccccc@8-12 r: ghxpwhxcqjrr@6-10 k: kzbcdkndqm@5-6 s: tpsxss@1-5 p: qlrlp@4-8 q: qqqkqqqz@7-11 v: vgvsxvwvlxv@2-5 b: bgkbb@3-18 j: jjsplxjxgqjfjrjxjjlx@6-10 k: kxkhkkjkkrvkkk@7-16 t: ttttttzttttttttbtttt@1-7 l: ptzptslrjgwlfgwq@8-10 v: vvqvvvvvvvv@3-5 z: zzzhz@6-7 c: cbrctgc@5-16 l: llllxlllllllllllll@6-7 c: chxclqcdrh@1-10 c: jcmcccccwcccccjbvc@8-14 h: zhhvhhhhhhhhhv@4-7 n: rnnnnnfnnnnnvn@10-12 w: wwwwwwwsgtwww@5-8 c: cmbcctzcj@5-7 f: fffskrf@5-6 l: lllmzl@7-14 m: mmmmmmmmmmmmmmmmmmm@1-9 f: jfffffffzvffff@2-5 g: ggmng@16-17 x: xxxxxxxxxxxxxxxlx@4-10 n: npkgjcfnnnnn@1-13 d: bhkjgsnzxkdgwbdv@6-7 f: ncqfzff@7-10 h: hqhhhhhjhhh@2-4 v: vnvvv@1-6 w: thlmdwgwgtswvtx@3-7 d: ddlkhvfdnpbdr@1-4 q: qbfq@2-6 f: rzfmfrjgcfjk@10-16 b: bbbbblbbbkbbbbbbwqb@13-14 j: jjhcjnkgvrnwjp@5-12 l: lgqwvrlwcllllv@4-8 j: jjgpdjssspjfdbt@1-9 h: hhhhhhhhwhhh@4-6 p: psmppt@2-3 h: zhhhk@2-6 b: bbbbbmbbvb@7-9 z: zzzzzzgzdzz@8-9 d: ddgdmdwddd@2-6 s: nssssv@18-20 x: xxxxxxxxxxxxxxxxxvxx@9-10 m: dzckmrbhcmwvkcxmlx@10-11 v: vwvvvvwvvghvn@3-6 d: wcwxddjhnljfntj@13-15 v: vvvvvvvvvvvvcvc@1-5 x: xxfxfxxkx@7-8 w: wqzjzwwwtw@2-4 f: flgl@3-6 n: ncfngngdnm@5-7 k: kdkmbkkkkxk@5-6 x: xxvxth@5-6 r: rrhhzr@4-6 b: bbbrbbbbbmb@12-13 q: qqqqqqqqqzqkqp@6-14 n: mlbflnrbhlhpdrfln@9-12 q: qqqqqqqqqqqwq@3-4 k: rkncnbk@1-3 j: jjpj@8-9 v: vjvczrvvm@9-16 m: tmnmmmxmbmmmrtmmr@9-11 q: qqqqqzqqsjxq@3-5 h: hhhhcs@11-12 k: kkkkkkkkkkkvqk@11-12 x: xlxxxjjxxxpx@1-12 n: nngtnhlnjfnf@5-7 p: ppptppppp@13-14 l: lllmlflllhllpm@13-14 m: vdkmrdfzmkknmp@13-15 s: ssssssqssssscssss@5-11 h: hhhlxhhhhhhshh@10-11 s: ssssssssssgsssss@6-7 q: kqqqqmqnqq@8-13 l: llllllltlllljll@9-12 j: jjjjjjjjjjjlj@7-11 s: gstcncsssscssssss@4-6 x: lrtjfnhmpmxj@9-20 c: cttccccccnccclcccccc@1-8 w: cwwwwwwwwww@12-13 n: nnnnnnnngnnnnn@1-5 p: pfqwcpnppppwwpqppp@7-8 g: gggsgglghg@6-7 g: gggggggg@4-10 s: ssssssssssss@1-2 n: njsnnln@7-8 z: gzczzwdzkkzz@2-8 b: bbbwjfbh@6-8 r: rrrrbrrbr@2-5 k: lkkkkl@2-3 c: swcgjcm@2-10 t: ttttttttttt@12-13 l: lllllxllllllqhl@2-9 l: qtqxdpqqlwhqwlr@1-5 q: qqxrn@10-11 k: kkkkkkkkkckk@1-2 f: ffff@3-4 r: rrxr@8-9 p: lppppxpsp@2-5 s: ssstchlrds@11-15 m: mmmmmmmmmmmmmmmmm@14-17 k: kkkkkkkkkkgkkkktbkk@1-2 x: xlxx@9-10 w: wwcwptczwzzd@1-3 c: ccgcccccccccccccc@4-5 h: nhhhvh@8-16 l: hlllfllllmltlhlldl@4-5 w: wgwfw@6-15 p: pjpbfrmxqgkxkbqhj@12-17 l: llmtllnlllllllllnns@8-15 n: zjnxzndnznklxzjlx@6-9 r: wpsmstnkgtrmng@3-7 s: csvhxhsgvrsrn@10-15 h: hchhhdhkhghlhgsh@2-9 c: mzbmtccktc@3-4 x: xlzvxg@12-14 k: zmkskknwkkkmkkwkgkkk@4-9 r: vqrrrrdzpl@3-4 g: ggvbxg@5-8 q: xtrqrmqq@16-18 l: zllllllllllllllwlnll@6-7 s: zsqszss@3-4 g: wghgpg@1-6 z: hzzzzrz@3-8 h: hthfqtccnq@15-18 p: ppppppcpppppppnppppp@3-4 l: qplkdmjntlghjlpxlq@10-12 q: xzqkxdvgrqxqqzzxgjj@6-9 q: qqqvsvqqxq@12-13 g: shgcnjlgvcgqg@5-10 l: llklplllmlsl@3-12 l: vllqfzwnsqslpnvrbkh@14-16 g: gjggggggggggggbzcggg@5-11 m: ssmsmbnspmm@11-13 v: mkqvvvvvmcvvz@2-3 k: mkkchtzqsvkbclgxn@4-7 r: rphrrnrrqwknrktrgsg@6-10 z: vpjhzzzkqzjl@16-18 c: ccccccccccccccchccc@1-10 v: qvvvvzvvvvvv@5-7 j: jjrjjjj@14-16 l: zlgdrlqllgpllfhh@3-6 l: llmllll@3-4 l: smdl@4-11 h: kgqhcpvrbldrhbq@1-15 j: ljjjjjjjjjjjjjjj@7-14 c: ccccccccccccccc@2-10 v: vzvjvvvvvvvvv@4-9 p: flbpmqmhkpt@10-12 q: rtdrqmpcsqrhqqchqczw@16-19 w: vlwxgtmjwrzvqgdwbdw@8-15 c: gkcccslctcmszhc@3-7 f: hhffhbbtbwzw@4-9 s: msbsxssds@13-15 p: pppppppppcpppxldp@6-7 m: mmmmmqmm@11-12 m: mxmmzwmmmdqpmp@7-12 l: gncmgzxlqcllqgt@12-14 t: tttttttttttdtt@2-6 f: ffffffbrfffp@14-17 h: hhdhpphhhhhhkhhxqph@7-9 x: xxxxxxxxqxxxxxx@5-18 j: vlwgjljtljtrdbxjnjwm@5-7 n: jmncnsndnbwx@8-9 r: rrrrrrrrr@11-17 j: jjjjjjjjjjjjjjpjr@5-6 x: xxxxjt@13-15 l: nshmnjgzhmjdzvl@9-10 r: wmsvzxsrqnnhfr@8-11 k: kkkxxrkpktg@1-7 r: rrrrrrrfrrrjwrd@5-7 t: rztvtvplbrk@2-7 w: wwwwwwsw@1-2 g: sgggk@12-13 j: jjjjjwjjjjvvjjjrjs@1-2 c: cccccc@3-5 g: khgzr@9-16 b: bbbbbbcbsbbbbbbb@12-13 z: zzzzzzzzzszkz@4-5 r: rkrrrr@1-2 t: tgbqtddbmq@1-2 w: wkwwwww@14-15 q: qqdqqqqqqqqhqnb@6-7 r: rrrrrdmrr@8-9 j: jjjjjjjqhjjjjj@3-6 t: gwmlntffstzllvs@6-8 h: hhhhnhhhqh@9-11 w: cwcwwwwwgxwwbw@5-9 w: wwwwcwwww@8-12 k: snjmkkhrgkkzkkpskk@3-6 q: lvqjqlq@3-4 z: zzzn@9-12 t: dvmvhttxtmzhrr@3-7 k: kkkkkkskkkkkk@6-15 v: vqvvvdvvvvbvvvvvvvvv@3-4 z: jzzzzzdk@8-12 b: bbbbbbbbbbbs@3-9 m: nvhwmwgmmqkbmmmzb@8-10 r: npwjcgwrwcrx@1-5 r: rxdrr@6-9 p: ppppppsbkmppkp@1-4 j: jjjqjjjz@6-7 b: rblbbbbbbp@5-9 t: tttttttttf@8-9 c: czcccccccc@13-14 j: jjjbjjtbjjjjjj@3-8 p: pwppzqvp@3-12 m: mmzmmmmmmmmmmm@3-9 d: ddjddddddqddd@3-4 q: qqfq@6-14 m: mmmmmbmmmmwmmlmmmm@3-4 c: glgzc@6-7 t: ttttttt@1-4 s: sssbs@5-8 r: drrkrrrzrrrr@10-12 q: rvqfqqkllqqqlfrq@11-13 s: szsssssssssssss@8-11 t: tttttttsttvt@11-15 j: zjjjjjjjjjjjjjjjjj@2-4 s: dvfs@3-4 q: zhpq@10-11 c: cccccccccckc@5-11 h: pnrjhtdlkzvhh@5-9 l: nlllxgnrlllllllmq@3-4 f: gfff@8-9 g: grgggggbg@3-4 j: pfwjhh@2-5 l: jlfjr@2-4 l: lblv@3-10 q: qqvzhnqqhqvqq@11-15 t: tfttttttktwttts@12-14 b: gqptrzwclbdbfqd@1-4 r: crrprr@5-13 v: qvdvvvdnrqmrqp@9-12 r: rwrrlsrrsrrjgdnrrr@4-6 c: ccldccnp@16-17 q: qqqqqpqqqqlqqqqmlq@2-8 w: wwwwwwwhwmwws@3-6 m: dmmbmmdmkxm@6-13 t: xflrtblvcvfxnlf@2-6 m: pmnsmm@13-15 k: kstfvnkkgfvvkbk@4-10 w: jqwcwlcwcwvqbfzfzfm@1-5 d: ddndbmjxhfqqn@13-16 p: pzvbszhqtpklpkpdw@2-4 t: thttwmxjsbtp@8-10 s: zbsvjcssfmf@3-5 l: lltlwlllll@12-14 g: hgfvvfpnrvpfggnss@3-13 q: cjmbvgxchmqdqcvc@12-16 j: cjjjjjjjjjjqjjjjjj@1-5 m: kqrgm@11-14 x: xcjpwbrrffxkfxh@12-14 c: kgfnccxqczkcjkcc@3-4 f: sfftf@1-3 f: ffdz@12-14 t: xftfxmkttdsttg@4-9 f: ffhcgfffffff@9-10 b: zjlbbsbzbx@9-14 m: hhxmlmmmzmmtmm@3-5 t: tkcpzjwr@6-9 k: wkfdwflgrntrknsr@1-4 l: gfml@9-10 z: zzzzzzzzzrzzzz@9-11 h: hhhhhhhhhhzhh@1-9 k: kkkkkkkkzkkkkkkk@2-7 h: sswmmkhkvhw@2-5 m: pmbnnmzrkk@9-12 f: xhpfbfdffkfw@3-4 g: gfwg@11-12 n: nnnnnnnnnnnpnnnxn@5-6 d: dddddgddd@7-9 j: cbjgnjqjgj@9-14 r: rrrrrrrhrrrrrzbrr@4-5 p: prphk@2-4 d: dpdd@5-15 p: zjsppzhqqgqspcppqpps@2-7 r: rrrrrrfwrr@1-3 h: hhqh@14-16 g: zgvdgspkjrrvcgdlxg@4-6 c: psgqccccvc@9-14 q: qdqjqmttdtcqggqpqn@13-18 f: ffffffffffffgffffff@8-9 g: gggggggggggg@11-12 x: xxxxxxxxxxxr@2-17 c: cxcccfchcccccccbbcm@7-11 b: nwbrzndvrfxwt@3-4 x: xhwxxxv@16-17 r: rzrrnrrrvxrrzrrrrrr@2-3 f: zcvgbmxvwp@5-6 b: fwbbbf@6-10 m: mmmmmpmmmw@2-4 n: bnnvndbpvzj@3-4 t: dftfhdngqp@1-2 v: vtvvvvvvvvv@2-3 v: vgvv@9-10 s: tsvsshsssgssssmsksss@6-7 t: ttttttxt@3-4 c: jcrc@5-8 l: ztlmjljlb@4-5 w: bwwwww@11-14 r: rrrbrrrrrrnrrrs@10-16 z: zzzzznzzzwzzzzzzzz@7-13 m: mmmmmmfmmmmmmmmmmmmm@15-19 w: fflzcwftmcswcwwnwts@10-19 b: bjbbbbbbmwbbbbbbbbtb@14-16 x: xxxxpxxpxxqxdqxxxx@8-13 r: rkzrjbxrgwkhnb@5-18 r: rrrzfkrrrrrrrrtrrnrr@4-5 b: bbbfzb@6-10 q: qnscxqqfqb@8-13 w: wwwwwwwfwwwwwwwwww@10-11 n: scvnsnpgnjnmdpnwct@7-11 p: pjpppppdqpjpfppsptp@7-9 n: jfsvclhfm@3-8 h: whsggqscd@2-12 r: mrmpxhrqsdmqpjshvck@2-4 g: gdgggg@7-12 s: ssssssssgsss@7-11 l: dlklllnjlslbl@5-11 k: kkkkkkkkkkkkkkk@6-9 g: dhtvcgmfrjhk@4-5 m: lmmmhmsmmmmmcmmmmzmm@11-13 t: zgtnkjzmtkttmtkc@6-7 b: bbbbbbv@3-4 q: qqcq@12-16 z: zzzszjzszzczmxtzzcl@2-5 w: wwfhp@1-2 d: gddkd@5-12 f: fwqgbvrcfmwb@2-5 w: bnxcw@3-15 t: ncwftppphsxvztttjs@7-10 p: ppnsppkcppsp@5-6 v: vvrdvv@5-6 z: hczwbzz@3-12 p: gcphfgmzfkflspmxg@14-19 m: jmfmfjpvbmfmmrdkdnzp@6-7 p: pdwzppppp@4-7 b: bbbnbbqbb@7-8 r: frrrrrxxr@8-18 b: jbphpzgvnppwhkxfzs@1-5 c: pvhcc@4-8 z: fzznzjzztstzxrz@5-10 v: jvvwvvvlvlvqc@7-14 p: svgrzfpxkdpbhph@5-7 n: nncmvkn@11-12 r: rrlrbrrrvrrr@1-5 r: vtngrndhqf@2-4 k: knjp@11-14 h: hhghhhhhhhxhhwhhh@16-18 r: rrrrrrrrrrrrrrrpnb@10-14 d: dpddbvdtdmxfdddd@2-4 t: cztt@5-6 r: rzrprd@2-5 n: ngwdngc@1-6 q: qqqzzwwqqqkqqq@7-8 l: lllzllpxl@1-4 b: kmltzzjzbppgwq@1-4 t: ttttb@3-4 p: dkxpcph@7-15 z: zzzzzzhzzzzzzzzzz@4-7 c: cdljfccm@3-8 p: hbpxhlmc@4-5 w: wwwlw@14-15 b: lbqbbbkgbbwfbdb@6-10 j: jtjjvpwwthwcsj@5-8 t: ltvtttbtqxtzq@12-13 t: ttttttttjttztxt@16-18 p: ppppppppppppppxpxbpp@4-7 n: nnnrnnnnt@1-2 r: rfrr@5-6 g: ggggvggg@3-4 s: ssbw@3-4 l: ldll@8-10 m: mmmmvmmcjkmg@10-18 w: wwvwwvwwhwwjwwwlwxcm@1-2 x: cxxxxxxxxxxxxx@1-5 b: bbbbkbbb@12-14 z: zwqzrrzzvqqzzszrx@1-5 z: lzzfzzzfz@16-17 t: ftgstrgptwmptxrzt@9-10 b: bbbbbbbzbbbb@8-14 w: wwwwwwwjwwwzwzww@3-4 h: qhnh@2-12 d: dnddddkddddzdxdddd@5-17 x: xxxxxxxxxxxxxxxxx@9-10 h: hhhhtqhhhrh@6-7 p: pfmppppp@5-8 v: vbvvvvvs@4-5 h: qhfhqcb@3-12 d: dlddlhhwvcrdrxwpt@2-3 n: nnwnp@4-8 g: ggggjgfgzgdglgg@4-9 h: vrghsphxhxzsxw@12-18 z: qrzzzfwdcwnzdzkckz@6-8 v: zvmlqwwh@10-14 p: pppxwpndfpwppdpptmpp@12-15 q: qqnqkqkqjgrcqfq@2-4 n: pnszjnnn@2-3 c: zkctcfc@17-20 l: lvjlcclllslzllllwgll@16-17 k: dfgskkfkkkfjhfvfks@1-3 t: tjttltt@2-3 b: bbzbb@8-15 t: dtttttsttlttttzlttj@13-14 v: vvkvvjvgwvvvkvf@7-8 v: tvvvvvvhv@3-10 d: bxktdrtddtdtsh@4-12 j: npwxjjjjbjkq@1-4 l: tlllll@12-13 b: lbhpxbbbvbbbqbbbsbb@9-15 v: vqhsggmpvmqtbzzlq@12-14 f: ffhfjfffqfxqff@15-16 m: jtnsjwpggbpxlhqmk@2-4 n: xptncjsstcl@5-8 q: dmwklqjqnzb@3-4 c: vcgl@1-6 h: hhhhhh@8-9 x: ckblstcdx@5-7 w: vwphwwmwwwww@2-4 x: kxxxdh@10-11 m: kmmvmmmfmksmj@4-7 v: zvrvvvdvvv@1-8 p: npxbwqpxbjrnrv@5-11 t: jfkwttkstrxlgts@1-2 g: ggggg@5-7 p: tpppppr@15-17 v: vvvvvvvvvvvvvvvvvvvv@17-19 w: dwjwjznczwgfmkmhdtw@10-13 f: fffffbqfffffffffff@4-14 g: ggggggggggggggg@2-3 d: bdkfd@7-8 x: xxxxxxxx@6-9 h: hmshdhvvhkhbhcshs@14-15 g: gggggggggggggghg@2-16 q: qqsxqqqdgqqghqqk@3-17 p: ppbppprppppppppphppp@8-18 v: vczfvqcvvcspndvxwjdv@1-3 d: fdddd@9-11 j: gfjjnjsdnhb@8-10 s: hkhshttssl@5-10 f: ffsffffffqxfff@7-10 w: wwlwwckwwf@4-8 x: blxxmtbgnblfgnfwz@4-5 p: rlpkprppp@13-14 s: ssssssssssssswss@4-8 h: hhhdhmhhhjhlhh@6-7 h: chhhhhfhzqhdhhh@15-17 m: msvrmwzkzvmmgrmmpm@4-6 x: qgtwwxhgsxxmklgmn@4-7 p: rpzkdpp@3-4 v: vvvhvjv@16-18 p: pppppppppppppppppmp@15-17 k: kpkkkkkhqkkkkklktk@5-7 s: ssbxxsk@2-4 l: cwllll@6-9 v: cvvrrkvrvsdvfwcv@1-7 w: qwwwwslwwwwwwwwrww@2-12 c: clcccccccccccccc@5-10 m: ftcmrpmvrzc@7-11 w: wwwwwwwwwwtwwwww@2-3 n: jngdlvgcvtkmn@1-8 v: hvvvvvvvvv@3-17 p: jrpvltxlcqgpfxwsj@1-5 k: kkkkfkk@1-10 c: cccccccccfc@13-19 f: flfffffxfvffffprfmcb@3-6 g: htglsbvrzcghjmd@9-11 h: wrwghhhhnzhxl@5-12 z: zzkzzhnjpmkvzzzw@7-11 w: qrwcwwstwddw@15-19 m: mmmmmmmmmmmmmmmmmmmm@15-16 m: mmmmmmmmmmmmmmhmm@12-16 x: xxxxxcxxxxxlxxxxxxx@5-10 l: qwfqlllgsdjrlspll@3-4 f: hffmfffg@6-7 l: lwlllbllnl@11-20 t: tttkrtlpttwftmwttttt@11-12 d: ddbdddddddpktdd@4-11 w: sxkmkwdwwnlwxmdvfx@4-5 k: kkzkpk@13-20 n: nnnnnntnnnnnbnnnbnnn@5-7 c: ccccwcc@1-6 h: cckkhhdhhwmhhmzchhwx@1-15 b: hbbbbbbbbhbbhbbbbnbb@1-2 w: mwwww@1-2 f: sfzgwtf@3-4 s: sssj@1-3 w: xwww@1-16 p: ppppppppdppppppp@1-6 c: ccxmccccc@4-8 b: rtpbcfbr@9-10 s: sszssstshss@15-16 x: xxxtxxxxxxxmxxxzx@9-15 k: kkkkkkkkkkgrkkkkk@11-13 x: xtxxxxxxxxrxkxx@1-5 f: rffflfffnf@14-16 n: nnxnnnnnnnnnbnzbnnn@3-6 d: ddddddndbdfdhd@14-15 q: sbqqhvqqqvqgxfq@5-6 b: jglbfjb@1-10 l: llllllcllsll@3-5 z: lwzzz@5-12 k: kkkkmkkkkkkkkkkl@8-12 v: vvtsvfvnzvhpm@5-7 l: llllllll@4-7 f: nqfffkbdf@4-8 j: jjjljkhj@9-15 h: vgzpgfhfhmwdhbqc@1-5 p: ptpsjqpnp@5-8 q: qbqqwqnq@5-7 w: wwswwxsb@3-6 h: nnhrnhkmxqkt@1-3 w: jwwww@2-14 x: cxxxxdxxxxxxxbxx@12-14 x: xxxfxxxxqxxrxt@4-9 f: fffkffbsfkxv@12-13 m: mmmmmmmmmmmwm@6-10 p: ppppphpppxppp@9-12 v: vsvvvvkmjvvvn@3-12 r: shngvhbmjrpr@12-13 w: wqwcwxclwwwfw@4-5 r: nnrrdz@4-19 c: vbcpwzvxssccqkqgmxvj@1-6 g: tglxhggng@9-10 z: lvzhvtglzf@10-16 f: gddxfftggfbmxwts@4-12 k: kkkklkkkkkkpkkk@7-11 m: mmmmmmmmmmtm@2-10 z: vkfpjrrvlwlbjwk@3-7 w: dtdzwjqgxdwjhchwwd@13-14 v: vvvvvvvvvvvvvvvv@11-12 c: cjccccqccccc@14-15 h: hzhrhkhfthrhxht@3-5 v: dtwvvvvvcvvvrvsvvv@10-14 q: qhqqkqcqqqqqlfqgsqq@3-14 f: ffvffffffffzffffff@1-12 x: xxtxjxzxxxxxlxxxxxxx@2-4 c: pgpc@1-4 r: fdrr@5-7 r: rrrrrrt@10-11 d: drdddddddmddddpd@2-5 f: gfrlctftzr@10-13 z: nrzjjrzjzzplzmzzbn@8-10 c: cccccccgbc@5-8 g: fgggcndwgggbjnfgb@6-9 d: ddddghdgbddm@3-7 j: ftjjjvjqcp@5-6 s: sqvfstz@5-18 k: kkkwkkkkkkbkkkkkkkbk@3-6 f: djffffkff@4-6 p: pqppppr@5-9 h: hhkhjhmgcqvfhqvhn@8-12 t: tttttttvttttt@14-15 z: pzrzhjqmtbcnzdzr@1-17 s: ssssssssssssswsss@1-4 s: ssqh@1-5 r: rrrrrrr@17-18 h: hhhhhrhcxhhhhhhhhb@7-9 t: dttttjmtv@1-3 c: mcccp@4-5 x: xprbxql@1-5 q: cqqqqqq@3-4 g: ggggw@1-7 f: ffffffnf@7-9 t: ttttttttttt@11-15 m: mmlmfmmmmmmmmmmqm@4-5 n: npnnnn@4-5 b: zvbbvbjhlkf@11-16 c: gnqmcvtzwpcbvncwcc@12-18 q: qbqkwqqvqwqqnljsqpqt@6-10 r: wcrtdrlkgjr@16-17 p: gppppppppwvlgpptp@1-13 g: gqghbwqqzwwdk@1-6 l: rlllll@3-7 j: pdjjtcqwbqtpfkjbwgq@7-17 z: zzhsnjrhrzzfrqszdhdg@6-7 n: xnvnhnrn@6-7 r: rrrrrrzr@2-3 c: ccmcccc@2-3 v: vvdv@3-9 f: mlfffshbfdff@11-13 v: dfvkltvjvvvvx@12-13 c: mqrccccbccbgcccccvc@9-13 w: wwwwwwwwwwwwcwtww@6-8 d: pdvgddtmvwdkvdtzf@1-9 s: hsssssssssdsls@1-5 c: zbsslcd@1-4 p: bpppppppppp@13-16 s: sssxslsscssbqsspcs@1-10 p: pskwpppzpppppks@3-5 c: ccppccmcc@10-11 b: rhbbbbbbbzbb@2-3 d: ndhjhd@3-4 s: sscs@5-6 d: dtwwnt@4-5 d: dddddddd@5-9 z: zztzvzzzz@2-6 v: vpqdll@13-14 d: nxkmbkkpxkcdld@1-3 s: ssss@8-14 z: zzzzzzzzzzzzzbz@16-17 f: fffnffffffftbzffpkf@3-4 m: mtcm@3-4 r: mrdrd@11-13 k: ljkmhdkkkcpjzlmkkzkk@2-3 d: tdqnxpd@3-7 h: mrvdlthxchpvwvssqpk@13-17 j: jjfjjvjjjjjzjsjjksxr@1-4 n: rnnx@7-10 m: mmmmzmxfmm@1-6 r: lrrvrrrrm@4-18 r: rrrdrrrrrrrrrkblrr@6-7 k: kkkkkkl@4-6 v: vmnfvvvvmcmlh@6-9 g: jgcgggkbbmgbs@7-8 t: ttcfwtgjtcttv@3-4 j: tjjj@"
  .byte 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b20
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b23
Removing instruction jmp __b24
Removing instruction jmp __b25
Removing instruction jmp __b26
Removing instruction jmp __b27
Removing instruction jmp __b28
Removing instruction jmp __b29
Removing instruction jmp __b30
Removing instruction jmp __b31
Removing instruction jmp __b32
Removing instruction jmp __b33
Removing instruction jmp __b34
Removing instruction jmp __b35
Removing instruction jmp __b19
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __b16
Removing instruction jmp __b4
Removing instruction jmp __b17
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b8
Removing instruction jmp __b36
Removing instruction jmp __b11
Removing instruction jmp __b13
Removing instruction jmp __b18
Removing instruction jmp __b15
Removing instruction jmp __b10
Removing instruction jmp __b9
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b5
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction ldy.z conio_cursor_x
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #0
Replacing instruction lda #0 with TXA
Replacing instruction ldy #0 with TAY
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b2_from_conio_c64_init with __b1
Replacing label __b1_from_cputc with __b1
Replacing label __b19_from___b19 with __b19
Replacing label __b5_from___b4 with __b5
Replacing label __b15_from___b14 with __b15
Replacing label __b13_from___b12 with __b13
Replacing label __b9_from___b7 with __b9
Replacing label __b3_from_gotoxy with __b2
Replacing label __b1 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b3 with __b2
Removing instruction __b1_from___init1:
Removing instruction main_from___b1:
Removing instruction __b2_from_conio_c64_init:
Removing instruction __b2:
Removing instruction __b1_from___b2:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_cputc:
Removing instruction __b3_from___b1:
Removing instruction printf_str_from___b3:
Removing instruction printf_uint_from___b23:
Removing instruction __b24_from___b23:
Removing instruction printf_str_from___b24:
Removing instruction __b26_from___b25:
Removing instruction printf_str_from___b26:
Removing instruction __b28_from___b27:
Removing instruction printf_str_from___b28:
Removing instruction __b29_from___b28:
Removing instruction printf_str_from___b29:
Removing instruction __b31_from___b30:
Removing instruction printf_str_from___b31:
Removing instruction __b33_from___b32:
Removing instruction printf_str_from___b33:
Removing instruction __b35_from___b34:
Removing instruction printf_str_from___b35:
Removing instruction __b19_from___b19:
Removing instruction __b19_from___b35:
Removing instruction __b16_from___b22:
Removing instruction __b4_from___b16:
Removing instruction __b5_from___b17:
Removing instruction __b5_from___b4:
Removing instruction __b6_from___b5:
Removing instruction __b13_from___b11:
Removing instruction __b13_from___b12:
Removing instruction __b15_from___b14:
Removing instruction __b15_from___b18:
Removing instruction __b9_from___b10:
Removing instruction __b9_from___b7:
Removing instruction __b3_from_gotoxy:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b1:
Removing instruction __b1_from_printf_str:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_cscroll:
Removing instruction memcpy_from___b1:
Removing instruction __b2_from___b1:
Removing instruction memcpy_from___b2:
Removing instruction __b3_from___b2:
Removing instruction memset_from___b3:
Removing instruction __b4_from___b3:
Removing instruction memset_from___b4:
Removing instruction __b4_from___b7:
Removing instruction utoa_append_from___b5:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Removing instruction printf_str_from___b2:
Removing instruction __b1_from_memcpy:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1_from_conio_c64_init:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction clrscr_from_main:
Removing instruction __b20:
Removing instruction __b1_from___b20:
Removing instruction __b3:
Removing instruction __b23:
Removing instruction __b24:
Removing instruction __b25:
Removing instruction printf_uint_from___b25:
Removing instruction __b26:
Removing instruction __b27:
Removing instruction printf_uint_from___b27:
Removing instruction __b28:
Removing instruction __b29:
Removing instruction __b30:
Removing instruction printf_uint_from___b30:
Removing instruction __b31:
Removing instruction __b32:
Removing instruction printf_uint_from___b32:
Removing instruction __b33:
Removing instruction __b34:
Removing instruction printf_uint_from___b34:
Removing instruction __b35:
Removing instruction strtouc_from___b2:
Removing instruction __b21:
Removing instruction strtouc_from___b21:
Removing instruction __b22:
Removing instruction __b16:
Removing instruction __b17:
Removing instruction __b8:
Removing instruction __b36:
Removing instruction __b18:
Removing instruction __b1_from___b15:
Removing instruction __b10:
Removing instruction __b6_from___b9:
Removing instruction __b1_from_gotoxy:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_clrscr:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b5:
Removing instruction __b1_from___b5:
Removing instruction __b3_from___b4:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction utoa_from___b1:
Removing instruction __b2:
Removing instruction printf_number_buffer_from___b2:
Removing instruction __breturn:
Removing instruction __b1_from_strtouc:
Removing instruction __b4:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b1_from_utoa:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b1_from___b4:
Removing instruction __b6:
Removing instruction __b4_from___b6:
Removing instruction __b1:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1_from_utoa_append:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b4_from___b22 to __b3
Relabelling long label __b3_from___b1 to __b2
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Removing instruction jmp __b2
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction lda #0 with TYA
Removing instruction lda.z digit_value+1
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Fixing long branch [112] bne __b2 to beq

FINAL SYMBOL TABLE
__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant char DIGITS[] = "0123456789abcdef"z
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant unsigned int STACK_BASE = $103
void __start()
void clrscr()
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 12501.25
char clrscr::l
char clrscr::l#1 // reg byte x 2002.0
char clrscr::l#2 // reg byte x 333.6666666666667
char *clrscr::line_cols
char *clrscr::line_cols#1 // line_cols zp[2]:10 1001.0
char *clrscr::line_cols#5 // line_cols zp[2]:10 1500.375
char *clrscr::line_text
char *clrscr::line_text#1 // line_text zp[2]:12 667.3333333333334
char *clrscr::line_text#5 // line_text zp[2]:12 1714.7142857142858
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:20 1517.2727272727273
__loadstore char conio_cursor_y // zp[1]:15 27827.904347826086
__loadstore char *conio_line_color // zp[2]:16 19559.371681415927
__loadstore char *conio_line_text // zp[2]:18 19387.798245614038
__stackcall void cputc(char c)
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // reg byte a 15001.5
void cputln()
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:32 202.0
char *gotoxy::$6 // zp[2]:21 202.0
unsigned int gotoxy::$7 // zp[2]:21 151.5
unsigned int gotoxy::$8 // zp[2]:30 202.0
unsigned int gotoxy::$9 // zp[2]:21 202.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:21 101.0
char gotoxy::x
__constant char gotoxy::x#2 = 0 // x
char gotoxy::y
char gotoxy::y#2 // reg byte x 71.0
char gotoxy::y#4 // reg byte x 67.33333333333333
void main()
char main::$5 // reg byte y 202.0
char main::$8 // reg byte y 202.0
char main::ch
char main::ch#0 // ch zp[1]:38 81.5
char main::count_a
char main::count_a#1 // reg byte x 2002.0
char main::count_a#2 // reg byte x 801.25
char main::count_a#6 // reg byte x 1501.5
char main::count_b
char main::count_b#11 // count_b zp[1]:27 25.25
char main::count_b#2 // count_b zp[1]:27 202.0
char main::count_b#4 // count_b zp[1]:27 67.33333333333333
unsigned int main::invalid_a
unsigned int main::invalid_a#1 // invalid_a zp[2]:28 202.0
unsigned int main::invalid_a#11 // invalid_a zp[2]:28 8.486486486486488
unsigned int main::invalid_a#16 // invalid_a zp[2]:28 43.285714285714285
unsigned int main::invalid_b
unsigned int main::invalid_b#1 // invalid_b zp[2]:25 202.0
unsigned int main::invalid_b#11 // invalid_b zp[2]:25 5.709090909090909
unsigned int main::invalid_b#30 // invalid_b zp[2]:25 101.0
char main::max
char main::max#0 // max zp[1]:14 15.947368421052632
char main::min
char main::min#0 // min zp[1]:39 13.173913043478262
__loadstore char * volatile main::pwd // zp[2]:36 100.53703703703705
__constant char main::s[$f] = "rule a valid: "
__constant char main::s1[$a] = " invalid:"
__constant char main::s2[8] = " total:"
__constant char main::s3[2] = "
"
__constant char main::s4[$f] = "rule b valid: "
unsigned int main::total
unsigned int main::total#1 // total zp[2]:34 101.0
unsigned int main::total#10 // total zp[2]:34 3.672131147540984
unsigned int main::valid_a
unsigned int main::valid_a#1 // valid_a zp[2]:6 202.0
unsigned int main::valid_a#11 // valid_a zp[2]:6 9.515151515151516
unsigned int main::valid_a#15 // valid_a zp[2]:6 43.285714285714285
unsigned int main::valid_b
unsigned int main::valid_b#1 // valid_b zp[2]:23 202.0
unsigned int main::valid_b#11 // valid_b zp[2]:23 6.1568627450980395
unsigned int main::valid_b#28 // valid_b zp[2]:23 101.0
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:4
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:4 1.00000001E8
char *memcpy::dst#2 // dst zp[2]:4 1.0333333466666667E8
char *memcpy::dst#4 // dst zp[2]:4 2.0000002E7
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:2
char *memcpy::src
char *memcpy::src#1 // src zp[2]:2 2.00000002E8
char *memcpy::src#2 // src zp[2]:2 1.0250000125E8
char *memcpy::src#4 // src zp[2]:2 1.0000001E7
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:8 1.375000025E7
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1.428571442857143E7
char *memset::dst
char *memset::dst#1 // dst zp[2]:2 2.00000002E8
char *memset::dst#2 // dst zp[2]:2 1.3666666833333334E8
char *memset::dst#4 // dst zp[2]:2 2.0000002E7
char *memset::end
char *memset::end#0 // end zp[2]:4 1.8333333666666668E7
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:2
__constant char *passwords = "4-6 b: bbbdbtbbbj@1-6 g: ggvggbgggstg@1-4 s: lssss@13-14 v: hvvcvvvvvvvvvsvvv@3-5 m: lcmmm@3-4 t: stht@5-6 b: dbkbhb@4-7 p: ppfppppq@4-5 j: jjjjj@3-12 s: sskssssssssss@14-15 z: zrndzbmrzzpzzqzj@12-18 l: tllllllllllllplllbl@8-10 b: bdbvqbtbrb@1-3 c: tcqccc@1-2 n: nbnj@5-7 c: ccccccccc@9-10 l: hpmslrlgll@6-9 n: nnnnnnnnb@6-10 r: rmzjlrsxkbw@6-8 r: bzqnnrrrj@4-14 c: mfffvcbtchzrqcn@1-6 f: ffffffffffffff@2-5 f: wxtkf@8-12 b: rdcbbjbzbbpb@8-18 d: ddtdddddddwvdfdsdd@5-8 s: sssmsgpgszms@6-11 x: xxxxxvxxxxxt@17-18 n: jhrnnzpxzngfqrntmnc@13-14 r: rrrmrrrrlrrshvrrr@4-5 h: hhhhrhh@8-10 d: dgwtdsxnncd@9-13 q: qqbpqmqgmqwqbqqqxcgq@2-5 g: gjjcpgg@6-12 t: ttttvttttttrtt@3-9 h: hhhhhhhhsh@15-16 p: ppppsppppppppppz@2-5 c: csccctcccc@11-14 p: pppppppppppppnp@8-9 j: jvbjjjjrjbjj@8-16 b: qklbmbntmvbhxplbbcb@12-13 j: jjjjsjmfjjjkhj@2-13 t: llckxhfmtznptndcsx@6-8 x: dxxxxvxxtt@3-4 d: ddht@3-4 t: ttdtt@11-12 r: rrrrrrrrrrrd@9-10 h: hhhhhhhhgh@3-16 h: hhhhhhhhhhhhhhnhhh@10-11 h: hxhhhdhhhsh@1-7 n: jnfnjnn@3-4 m: msmnpmpf@15-17 t: tpdtttgltvtttztlv@7-10 v: vvpsvpgjzvvvvjs@1-5 p: pxppg@2-7 w: jwhgkgvxcv@13-14 m: pxxmjznmrzdsbbmmfj@1-4 d: ddddd@14-16 r: rrrrrrrrrrrrrwrr@2-5 l: klbtzzlrlslgswhljtq@6-12 c: qccrcpccccccdccccc@2-18 l: llllllllvllllllllkll@18-20 z: zzzzzzzzszqzwzrzzzzn@5-16 c: cbccclcfcncvqztqc@7-11 m: fnwmtsmgpxncnr@6-7 h: hpjrhbhkshnchbhpph@11-12 s: ssssssssssps@6-9 s: jfsmmssssqz@1-15 l: llllllllllllllbll@2-6 g: gggggwgggpggggggg@6-9 j: jjjpjjjjn@9-13 n: nnnnnnnnnnnnnn@10-13 t: cgntllxnvpkjwxtght@2-11 f: xcftbcdcndkgm@10-13 j: jjjjjjjjjjjjvj@9-17 f: rfrffnsffxqflbffvv@6-11 k: kkkkkrwkqckmk@5-7 q: zfqqqqqn@12-13 c: cfcccvccccckccccv@5-15 z: xhzzzzzzzzfzzknzz@18-19 f: jkfksvmfjbdffffffff@8-11 h: hhhhmhhkhsfdg@14-16 s: ssssssdjssssssssssss@15-16 t: jtmjhsxqqmmthmtttm@5-7 h: hkbjhjhh@2-6 n: knprnfnfhhrcnk@3-4 w: snwd@5-11 w: wwwwnwwwwwwwwwwww@2-12 k: bkqjghpktfsk@14-15 v: vvvsvvvvvvvvvxv@8-9 w: fxwwwwwscwl@9-15 c: sbjvvsmdvqknbccxxx@6-15 t: tpwjtdnnldthxvn@13-15 t: tttttrzmzttjttt@3-11 m: mmvmlmmmwfmjx@13-14 s: gskssssssscssssqjssl@5-10 l: bfnmqlldllp@17-18 q: qkwqqqqqqqqqqqrqqqqq@2-5 r: rsvrrq@3-4 j: jjjdj@3-4 m: mtmk@8-9 k: vsvkvkrkc@10-12 t: ttttttcttttgttt@3-4 n: trzw@5-11 q: qqmpsqbxkqq@13-15 s: sqsssnmwqszfsmv@5-6 b: bbbbzvb@5-13 p: pjjhpnqpzpmpfpfp@4-5 l: mgnwlrw@1-7 k: fkzxwkj@1-10 q: qgxqqqqqqg@8-9 s: ssqssssfss@7-8 c: xxcscclccdvcmqcc@2-6 d: xdlmzdzxrpmlnt@3-9 s: sssssnssgbs@7-10 h: sblrrhqrhh@3-5 n: xnndnnnfnw@9-10 l: vllllqlllhllljxlp@2-5 d: ddxzbxk@10-14 m: mmmmmmmmmmdmmmmsmmm@1-2 f: ffffw@14-15 g: wdjhplhrbcxdgpnt@1-2 l: klllllll@10-11 k: ckkhkkvkkkmkkjkwkkwk@7-9 f: ffrhdvftfpjfqffhnfsf@4-5 c: kkjksrmkccg@5-9 r: rrrrhrrrrr@5-6 p: pppppth@4-10 t: kpfwzjtchtbndblrvst@1-5 l: mllllllnllll@13-16 r: rrrvrrrrrrrrzrrg@17-18 x: xxfxxxxxxxxsxxxxxsxx@8-11 w: rwbnqrngcvpgwwww@4-8 z: zzzzzzzzzz@4-9 b: bbvvbbbbr@2-5 x: qlfhxkx@3-8 t: wvptttttttt@1-3 m: hmmmmqmm@17-19 h: nhhhdvhnhrhhhhnhmdh@11-12 s: psszbdpsgfks@6-7 s: sssssshs@10-15 l: mnkdvnvmxljjtggwcl@1-13 j: qjjjjjjjjjjjdj@4-9 l: jxvkwhlmlhdtgwvgsdzz@5-9 c: ccfghhccccgc@10-11 v: vvvvvvvvvvv@7-8 t: cntwzshkzvmrnnkr@1-11 l: tllllllltllll@15-17 l: lllglvctrvllzkllt@3-5 n: ncnnp@2-3 q: jsqqh@4-10 h: hhhhhhhhhvh@16-18 b: bbnbbbbbtbbkktbbzdr@4-6 g: kbggdhgggggggggggfc@12-13 p: cpvcppqpplwpt@5-10 h: fvhhbrhpghchhhhhh@2-5 b: bbvzn@14-15 x: xxxbxnwxxxxzxxh@13-15 n: nnfgdglfnntnjqn@2-4 c: cfccc@3-5 v: vrvvzdvv@17-19 v: vvvvvvvvvvvvvvvvvvsv@1-20 h: hhhhhhhhhhqhhhhhhhhh@4-15 q: qqqtqqqqqqqqqqqqlq@11-13 h: hhkhvhhhhwhgk@8-11 p: ppvppppppptspf@8-9 m: mmmpmmkmdmpkspmg@1-7 m: lcmvggm@6-12 v: tvfstvvpvzsvcv@8-9 n: nnnqnnwrrdzlmnwlznrn@1-5 s: msssms@1-3 v: vpdzvdvgv@6-9 g: drgrfggcg@6-16 x: djpxhxvncxfghsxx@1-3 b: sjbwwxbvtvbkt@6-8 c: cccccstccjhv@1-11 q: qqqpqqqqqqwqqq@9-11 m: vsbmmmmmmmqmmsm@2-7 g: gqggggggg@2-3 m: mrgvm@6-7 c: cccpcfcc@6-10 w: swbngwswnxnww@13-14 r: rrrrrrrrrrwrrgrdr@3-9 v: vctxhxtfvq@2-9 r: jrrcslgplcprlvgthg@2-3 n: hnnnsxclvdj@10-11 h: zrhghhqhgzh@15-18 z: zzzlzzzzzzzzpzqzpzzz@3-8 f: fffffrfl@1-4 l: rllllfl@1-2 n: nnnnnvtnv@17-19 z: zzzzzzzzzzzzzzzzzzqz@13-15 n: nnnznnnnnnznnnn@2-5 c: gcccncjmsncfcntjc@8-9 h: hhhhhhhhbpsfh@7-11 r: lzvvlbrgjgrr@5-11 x: xxxxqxxxxxxx@4-7 p: gqpkmppzpsmtzhfdfpl@3-4 j: jjdjdg@14-16 z: zzzzzzzgjzzzzpzf@1-2 n: nnnvnwnnnnh@4-5 z: jhzzz@5-7 k: kkkkkkf@8-18 z: khzzrzjzmzzvzzpcclm@5-10 m: kjrhwkhmsm@10-16 v: vvvvvvvvvvvvvvvwv@9-10 l: xhvjsmllkcdtldfxlw@8-10 p: ppjvppbpqhpwhppgbp@4-6 m: jlmkhm@1-3 k: gvpklkkkk@15-16 g: ggjggggvgmgtpgcg@1-4 j: jbjwj@1-3 x: xxxpxxdxxhfx@14-16 v: vxmhhdvvfjjqwhtv@6-7 l: lnkchzlwxlp@3-4 v: vvvcv@13-14 p: pbqpppppzbmppc@6-12 p: glqwzprpqbqf@6-12 l: lllllglllllll@8-9 n: nnsnnnndcn@6-8 p: prwppppp@1-10 q: dqqqqqqqqjq@12-16 w: kwtbdnjqmwwxhwcwswkl@11-14 r: rrnjghfrrrshlrq@2-14 w: vwbbvcvgnxdmxl@7-8 g: sqmggkgslkwlvggg@1-6 q: tqqqqqq@2-3 b: bbbr@7-9 b: jnwbswfpbn@4-5 n: nnlct@3-11 s: ssssssssssp@2-6 f: wjlpwf@5-10 g: gggghqgqgb@1-3 p: ppdg@4-7 j: pjnkjjljjj@1-2 v: ghmjzxmtxjxnv@6-14 k: klgdzfmgdwhqdkhcnzm@6-11 z: tgzpzzzzztc@2-12 b: cxsmjbdgdnrb@4-6 v: lxdvvh@3-8 l: pnpdnrll@7-8 m: mzmswvmmbxmzlmwhdvq@13-14 s: khzssssssssszsssss@10-18 d: dmfdlgcxdbzznbrlqn@13-14 j: jjjjjjjjjjjjdpjj@15-17 j: jjjjjjjjjwjsqjwjj@10-15 x: xxfxkzxxhxxxxxvxxw@7-14 c: wcccwcmmcccccxhcccc@2-7 z: zmzvfzlszr@7-8 k: jjkrklrkkv@8-9 r: rrrrrjrtz@2-3 w: tvws@1-5 b: bbbjm@1-2 q: tqqjf@5-10 j: wlgjghjhjljwtpcdkqwk@2-5 c: dzpkc@5-6 m: mbvmkm@4-15 k: stjkjvvxrmwdpkwsjqvc@6-9 h: hwkgjplmhxwgvnbhwh@12-13 z: zzzzzzzzzzzzz@7-8 q: qqqqqqqqq@2-5 c: clcwmccczclcccc@2-5 l: jlcgfbflklvpfqxtwgg@5-7 n: nnnnnnvnnnnnn@3-5 f: gfktfffqvgltsbff@10-16 p: jppbttppzpqppppp@2-3 m: zmdm@4-6 j: zsmtjjdnrpp@17-18 j: hvvmrkfnnkvrjtjhjj@12-15 d: dtddddddddtwxgld@8-12 r: rdzrwfgrmxwttknxz@6-7 s: rssbktxsgd@11-13 d: ddddmwddddxddndc@3-6 p: ppcpspfp@12-15 j: jjjjjjgjjjjcjlzj@8-12 v: tgjkwfbsxzzvvpmfs@6-7 z: trbfbdz@4-6 v: vvvvvpvv@8-16 p: pnvppdpjppppppph@8-9 z: lzzzzpdzk@1-4 t: qttzz@2-3 d: dhdd@5-8 m: mmmkmmxmkj@2-12 f: hfhzkwdmrlqvfkn@5-6 h: hhhhhph@14-15 b: bbbbxbbbbbbbbbh@2-3 v: vvcj@12-19 d: ddvdwwqdddcdtdmwdqp@3-4 s: ssjssssssss@2-6 c: wzzxqcdcnlgcph@11-12 j: jjdrcjzjkjcs@4-9 z: bzzzzzzxzz@2-8 b: gjbfkxhb@1-3 c: cpksst@1-5 h: hhjhh@14-15 j: jjjjjjjjjjjjjjr@8-9 n: pcndxcfknfbnnls@10-13 k: kkkqzkwbkkkrtn@4-5 r: rzrrrnrj@13-15 p: ppppppppppppppt@3-6 j: fjqqzzzjm@2-9 m: zmjhctkmf@5-6 s: ssmjss@3-4 c: jlfd@8-12 d: qbddfhnddzgvddddd@6-7 p: xfppppcppppxgp@8-13 s: sssssssfssssssss@13-17 g: xskktsjxlvgfxtzzgfj@2-4 q: qqtwfqqnkvbvbhzs@1-5 j: cjmjs@4-5 c: tvccnc@3-14 m: kkfhmnkkmztxtmn@11-15 x: xxxxxpxmxxvbxxxvx@9-11 l: nhgzwmmrkqhblnk@7-10 x: xxxxxdmxxxxxxxx@13-14 v: vvvvvvpvvvjvvcvv@16-17 n: nnnnqnnbnnnnnnnpn@3-4 j: jvjj@15-16 q: zlqsgvpztknqjqqwqvf@3-4 s: sssrsssdss@11-13 g: ggqggmggswggdk@1-4 t: jmtzttztqt@2-3 v: vvvv@11-13 g: cgjgxgggkgbggxg@4-6 g: ggggqlhgmz@8-15 g: prvxwzkvdhgkjlg@6-9 g: gggggnsjlg@12-14 p: mmvlpzkmpgtpvj@7-10 k: kkkxkkjkkkdkkkp@14-16 b: zmztqsrgvjjmswzkbnk@1-2 x: xxbxxxxhx@2-5 l: tlhsx@3-5 x: xxxxn@4-12 c: vdnmtmqwnxkcldc@4-8 x: xxxxjglx@5-13 s: vsssspszssssnsss@3-6 k: kkhkkkknb@3-5 t: pttqtwnprt@10-14 m: ttjqvzmgmmjqzkd@1-5 b: bbbbpbbb@10-15 d: wdjrhvfngdtlkdl@6-7 w: trxwdwww@2-4 n: snxqlgtsmdnnjgwrgmms@16-18 l: klslpljllqlcslqqll@4-7 t: tttwzttjt@9-10 f: ffffffffwf@8-15 h: trhgxjchhxvvhqp@8-12 w: wwwwwwwqwwwg@12-13 x: xxxxxxxxsffqlxx@5-7 k: kkkklkkkktkk@1-7 m: wkmmqmmhf@12-13 h: mhhchwhhhzhhcvh@7-11 k: kkkkkkwkkkgkk@4-6 l: hdlbll@8-12 v: fvvvvvvvrvvv@2-9 h: hzhhhhhhhhhhhhr@6-8 b: qbqjpbbbdsshv@2-3 h: hwhl@4-7 l: mdllxjgdw@3-9 f: rwffzfkpwbzp@3-5 t: ttnttt@7-10 c: mpcccpndqc@6-7 h: fhhhljh@2-7 v: pnvzcns@1-3 v: vvgv@5-9 s: ssssshsspsssssss@4-6 j: mjjjjq@5-14 h: hwbqghmvmmnvhhrqmj@5-6 s: wctjsh@7-8 s: sssscsjs@14-17 v: vvvvvvvvvvvvvvvvv@14-15 w: wxwwwwwwfwwwwsw@6-7 v: ksvvvlpvv@7-18 s: cssstsvsscshsstsss@5-6 b: zzwbpm@6-7 r: bvtmpkxspskr@6-7 v: lvxrvqv@15-17 c: ccccccccccccccccccc@8-12 r: ghxpwhxcqjrr@6-10 k: kzbcdkndqm@5-6 s: tpsxss@1-5 p: qlrlp@4-8 q: qqqkqqqz@7-11 v: vgvsxvwvlxv@2-5 b: bgkbb@3-18 j: jjsplxjxgqjfjrjxjjlx@6-10 k: kxkhkkjkkrvkkk@7-16 t: ttttttzttttttttbtttt@1-7 l: ptzptslrjgwlfgwq@8-10 v: vvqvvvvvvvv@3-5 z: zzzhz@6-7 c: cbrctgc@5-16 l: llllxlllllllllllll@6-7 c: chxclqcdrh@1-10 c: jcmcccccwcccccjbvc@8-14 h: zhhvhhhhhhhhhv@4-7 n: rnnnnnfnnnnnvn@10-12 w: wwwwwwwsgtwww@5-8 c: cmbcctzcj@5-7 f: fffskrf@5-6 l: lllmzl@7-14 m: mmmmmmmmmmmmmmmmmmm@1-9 f: jfffffffzvffff@2-5 g: ggmng@16-17 x: xxxxxxxxxxxxxxxlx@4-10 n: npkgjcfnnnnn@1-13 d: bhkjgsnzxkdgwbdv@6-7 f: ncqfzff@7-10 h: hqhhhhhjhhh@2-4 v: vnvvv@1-6 w: thlmdwgwgtswvtx@3-7 d: ddlkhvfdnpbdr@1-4 q: qbfq@2-6 f: rzfmfrjgcfjk@10-16 b: bbbbblbbbkbbbbbbwqb@13-14 j: jjhcjnkgvrnwjp@5-12 l: lgqwvrlwcllllv@4-8 j: jjgpdjssspjfdbt@1-9 h: hhhhhhhhwhhh@4-6 p: psmppt@2-3 h: zhhhk@2-6 b: bbbbbmbbvb@7-9 z: zzzzzzgzdzz@8-9 d: ddgdmdwddd@2-6 s: nssssv@18-20 x: xxxxxxxxxxxxxxxxxvxx@9-10 m: dzckmrbhcmwvkcxmlx@10-11 v: vwvvvvwvvghvn@3-6 d: wcwxddjhnljfntj@13-15 v: vvvvvvvvvvvvcvc@1-5 x: xxfxfxxkx@7-8 w: wqzjzwwwtw@2-4 f: flgl@3-6 n: ncfngngdnm@5-7 k: kdkmbkkkkxk@5-6 x: xxvxth@5-6 r: rrhhzr@4-6 b: bbbrbbbbbmb@12-13 q: qqqqqqqqqzqkqp@6-14 n: mlbflnrbhlhpdrfln@9-12 q: qqqqqqqqqqqwq@3-4 k: rkncnbk@1-3 j: jjpj@8-9 v: vjvczrvvm@9-16 m: tmnmmmxmbmmmrtmmr@9-11 q: qqqqqzqqsjxq@3-5 h: hhhhcs@11-12 k: kkkkkkkkkkkvqk@11-12 x: xlxxxjjxxxpx@1-12 n: nngtnhlnjfnf@5-7 p: ppptppppp@13-14 l: lllmlflllhllpm@13-14 m: vdkmrdfzmkknmp@13-15 s: ssssssqssssscssss@5-11 h: hhhlxhhhhhhshh@10-11 s: ssssssssssgsssss@6-7 q: kqqqqmqnqq@8-13 l: llllllltlllljll@9-12 j: jjjjjjjjjjjlj@7-11 s: gstcncsssscssssss@4-6 x: lrtjfnhmpmxj@9-20 c: cttccccccnccclcccccc@1-8 w: cwwwwwwwwww@12-13 n: nnnnnnnngnnnnn@1-5 p: pfqwcpnppppwwpqppp@7-8 g: gggsgglghg@6-7 g: gggggggg@4-10 s: ssssssssssss@1-2 n: njsnnln@7-8 z: gzczzwdzkkzz@2-8 b: bbbwjfbh@6-8 r: rrrrbrrbr@2-5 k: lkkkkl@2-3 c: swcgjcm@2-10 t: ttttttttttt@12-13 l: lllllxllllllqhl@2-9 l: qtqxdpqqlwhqwlr@1-5 q: qqxrn@10-11 k: kkkkkkkkkckk@1-2 f: ffff@3-4 r: rrxr@8-9 p: lppppxpsp@2-5 s: ssstchlrds@11-15 m: mmmmmmmmmmmmmmmmm@14-17 k: kkkkkkkkkkgkkkktbkk@1-2 x: xlxx@9-10 w: wwcwptczwzzd@1-3 c: ccgcccccccccccccc@4-5 h: nhhhvh@8-16 l: hlllfllllmltlhlldl@4-5 w: wgwfw@6-15 p: pjpbfrmxqgkxkbqhj@12-17 l: llmtllnlllllllllnns@8-15 n: zjnxzndnznklxzjlx@6-9 r: wpsmstnkgtrmng@3-7 s: csvhxhsgvrsrn@10-15 h: hchhhdhkhghlhgsh@2-9 c: mzbmtccktc@3-4 x: xlzvxg@12-14 k: zmkskknwkkkmkkwkgkkk@4-9 r: vqrrrrdzpl@3-4 g: ggvbxg@5-8 q: xtrqrmqq@16-18 l: zllllllllllllllwlnll@6-7 s: zsqszss@3-4 g: wghgpg@1-6 z: hzzzzrz@3-8 h: hthfqtccnq@15-18 p: ppppppcpppppppnppppp@3-4 l: qplkdmjntlghjlpxlq@10-12 q: xzqkxdvgrqxqqzzxgjj@6-9 q: qqqvsvqqxq@12-13 g: shgcnjlgvcgqg@5-10 l: llklplllmlsl@3-12 l: vllqfzwnsqslpnvrbkh@14-16 g: gjggggggggggggbzcggg@5-11 m: ssmsmbnspmm@11-13 v: mkqvvvvvmcvvz@2-3 k: mkkchtzqsvkbclgxn@4-7 r: rphrrnrrqwknrktrgsg@6-10 z: vpjhzzzkqzjl@16-18 c: ccccccccccccccchccc@1-10 v: qvvvvzvvvvvv@5-7 j: jjrjjjj@14-16 l: zlgdrlqllgpllfhh@3-6 l: llmllll@3-4 l: smdl@4-11 h: kgqhcpvrbldrhbq@1-15 j: ljjjjjjjjjjjjjjj@7-14 c: ccccccccccccccc@2-10 v: vzvjvvvvvvvvv@4-9 p: flbpmqmhkpt@10-12 q: rtdrqmpcsqrhqqchqczw@16-19 w: vlwxgtmjwrzvqgdwbdw@8-15 c: gkcccslctcmszhc@3-7 f: hhffhbbtbwzw@4-9 s: msbsxssds@13-15 p: pppppppppcpppxldp@6-7 m: mmmmmqmm@11-12 m: mxmmzwmmmdqpmp@7-12 l: gncmgzxlqcllqgt@12-14 t: tttttttttttdtt@2-6 f: ffffffbrfffp@14-17 h: hhdhpphhhhhhkhhxqph@7-9 x: xxxxxxxxqxxxxxx@5-18 j: vlwgjljtljtrdbxjnjwm@5-7 n: jmncnsndnbwx@8-9 r: rrrrrrrrr@11-17 j: jjjjjjjjjjjjjjpjr@5-6 x: xxxxjt@13-15 l: nshmnjgzhmjdzvl@9-10 r: wmsvzxsrqnnhfr@8-11 k: kkkxxrkpktg@1-7 r: rrrrrrrfrrrjwrd@5-7 t: rztvtvplbrk@2-7 w: wwwwwwsw@1-2 g: sgggk@12-13 j: jjjjjwjjjjvvjjjrjs@1-2 c: cccccc@3-5 g: khgzr@9-16 b: bbbbbbcbsbbbbbbb@12-13 z: zzzzzzzzzszkz@4-5 r: rkrrrr@1-2 t: tgbqtddbmq@1-2 w: wkwwwww@14-15 q: qqdqqqqqqqqhqnb@6-7 r: rrrrrdmrr@8-9 j: jjjjjjjqhjjjjj@3-6 t: gwmlntffstzllvs@6-8 h: hhhhnhhhqh@9-11 w: cwcwwwwwgxwwbw@5-9 w: wwwwcwwww@8-12 k: snjmkkhrgkkzkkpskk@3-6 q: lvqjqlq@3-4 z: zzzn@9-12 t: dvmvhttxtmzhrr@3-7 k: kkkkkkskkkkkk@6-15 v: vqvvvdvvvvbvvvvvvvvv@3-4 z: jzzzzzdk@8-12 b: bbbbbbbbbbbs@3-9 m: nvhwmwgmmqkbmmmzb@8-10 r: npwjcgwrwcrx@1-5 r: rxdrr@6-9 p: ppppppsbkmppkp@1-4 j: jjjqjjjz@6-7 b: rblbbbbbbp@5-9 t: tttttttttf@8-9 c: czcccccccc@13-14 j: jjjbjjtbjjjjjj@3-8 p: pwppzqvp@3-12 m: mmzmmmmmmmmmmm@3-9 d: ddjddddddqddd@3-4 q: qqfq@6-14 m: mmmmmbmmmmwmmlmmmm@3-4 c: glgzc@6-7 t: ttttttt@1-4 s: sssbs@5-8 r: drrkrrrzrrrr@10-12 q: rvqfqqkllqqqlfrq@11-13 s: szsssssssssssss@8-11 t: tttttttsttvt@11-15 j: zjjjjjjjjjjjjjjjjj@2-4 s: dvfs@3-4 q: zhpq@10-11 c: cccccccccckc@5-11 h: pnrjhtdlkzvhh@5-9 l: nlllxgnrlllllllmq@3-4 f: gfff@8-9 g: grgggggbg@3-4 j: pfwjhh@2-5 l: jlfjr@2-4 l: lblv@3-10 q: qqvzhnqqhqvqq@11-15 t: tfttttttktwttts@12-14 b: gqptrzwclbdbfqd@1-4 r: crrprr@5-13 v: qvdvvvdnrqmrqp@9-12 r: rwrrlsrrsrrjgdnrrr@4-6 c: ccldccnp@16-17 q: qqqqqpqqqqlqqqqmlq@2-8 w: wwwwwwwhwmwws@3-6 m: dmmbmmdmkxm@6-13 t: xflrtblvcvfxnlf@2-6 m: pmnsmm@13-15 k: kstfvnkkgfvvkbk@4-10 w: jqwcwlcwcwvqbfzfzfm@1-5 d: ddndbmjxhfqqn@13-16 p: pzvbszhqtpklpkpdw@2-4 t: thttwmxjsbtp@8-10 s: zbsvjcssfmf@3-5 l: lltlwlllll@12-14 g: hgfvvfpnrvpfggnss@3-13 q: cjmbvgxchmqdqcvc@12-16 j: cjjjjjjjjjjqjjjjjj@1-5 m: kqrgm@11-14 x: xcjpwbrrffxkfxh@12-14 c: kgfnccxqczkcjkcc@3-4 f: sfftf@1-3 f: ffdz@12-14 t: xftfxmkttdsttg@4-9 f: ffhcgfffffff@9-10 b: zjlbbsbzbx@9-14 m: hhxmlmmmzmmtmm@3-5 t: tkcpzjwr@6-9 k: wkfdwflgrntrknsr@1-4 l: gfml@9-10 z: zzzzzzzzzrzzzz@9-11 h: hhhhhhhhhhzhh@1-9 k: kkkkkkkkzkkkkkkk@2-7 h: sswmmkhkvhw@2-5 m: pmbnnmzrkk@9-12 f: xhpfbfdffkfw@3-4 g: gfwg@11-12 n: nnnnnnnnnnnpnnnxn@5-6 d: dddddgddd@7-9 j: cbjgnjqjgj@9-14 r: rrrrrrrhrrrrrzbrr@4-5 p: prphk@2-4 d: dpdd@5-15 p: zjsppzhqqgqspcppqpps@2-7 r: rrrrrrfwrr@1-3 h: hhqh@14-16 g: zgvdgspkjrrvcgdlxg@4-6 c: psgqccccvc@9-14 q: qdqjqmttdtcqggqpqn@13-18 f: ffffffffffffgffffff@8-9 g: gggggggggggg@11-12 x: xxxxxxxxxxxr@2-17 c: cxcccfchcccccccbbcm@7-11 b: nwbrzndvrfxwt@3-4 x: xhwxxxv@16-17 r: rzrrnrrrvxrrzrrrrrr@2-3 f: zcvgbmxvwp@5-6 b: fwbbbf@6-10 m: mmmmmpmmmw@2-4 n: bnnvndbpvzj@3-4 t: dftfhdngqp@1-2 v: vtvvvvvvvvv@2-3 v: vgvv@9-10 s: tsvsshsssgssssmsksss@6-7 t: ttttttxt@3-4 c: jcrc@5-8 l: ztlmjljlb@4-5 w: bwwwww@11-14 r: rrrbrrrrrrnrrrs@10-16 z: zzzzznzzzwzzzzzzzz@7-13 m: mmmmmmfmmmmmmmmmmmmm@15-19 w: fflzcwftmcswcwwnwts@10-19 b: bjbbbbbbmwbbbbbbbbtb@14-16 x: xxxxpxxpxxqxdqxxxx@8-13 r: rkzrjbxrgwkhnb@5-18 r: rrrzfkrrrrrrrrtrrnrr@4-5 b: bbbfzb@6-10 q: qnscxqqfqb@8-13 w: wwwwwwwfwwwwwwwwww@10-11 n: scvnsnpgnjnmdpnwct@7-11 p: pjpppppdqpjpfppsptp@7-9 n: jfsvclhfm@3-8 h: whsggqscd@2-12 r: mrmpxhrqsdmqpjshvck@2-4 g: gdgggg@7-12 s: ssssssssgsss@7-11 l: dlklllnjlslbl@5-11 k: kkkkkkkkkkkkkkk@6-9 g: dhtvcgmfrjhk@4-5 m: lmmmhmsmmmmmcmmmmzmm@11-13 t: zgtnkjzmtkttmtkc@6-7 b: bbbbbbv@3-4 q: qqcq@12-16 z: zzzszjzszzczmxtzzcl@2-5 w: wwfhp@1-2 d: gddkd@5-12 f: fwqgbvrcfmwb@2-5 w: bnxcw@3-15 t: ncwftppphsxvztttjs@7-10 p: ppnsppkcppsp@5-6 v: vvrdvv@5-6 z: hczwbzz@3-12 p: gcphfgmzfkflspmxg@14-19 m: jmfmfjpvbmfmmrdkdnzp@6-7 p: pdwzppppp@4-7 b: bbbnbbqbb@7-8 r: frrrrrxxr@8-18 b: jbphpzgvnppwhkxfzs@1-5 c: pvhcc@4-8 z: fzznzjzztstzxrz@5-10 v: jvvwvvvlvlvqc@7-14 p: svgrzfpxkdpbhph@5-7 n: nncmvkn@11-12 r: rrlrbrrrvrrr@1-5 r: vtngrndhqf@2-4 k: knjp@11-14 h: hhghhhhhhhxhhwhhh@16-18 r: rrrrrrrrrrrrrrrpnb@10-14 d: dpddbvdtdmxfdddd@2-4 t: cztt@5-6 r: rzrprd@2-5 n: ngwdngc@1-6 q: qqqzzwwqqqkqqq@7-8 l: lllzllpxl@1-4 b: kmltzzjzbppgwq@1-4 t: ttttb@3-4 p: dkxpcph@7-15 z: zzzzzzhzzzzzzzzzz@4-7 c: cdljfccm@3-8 p: hbpxhlmc@4-5 w: wwwlw@14-15 b: lbqbbbkgbbwfbdb@6-10 j: jtjjvpwwthwcsj@5-8 t: ltvtttbtqxtzq@12-13 t: ttttttttjttztxt@16-18 p: ppppppppppppppxpxbpp@4-7 n: nnnrnnnnt@1-2 r: rfrr@5-6 g: ggggvggg@3-4 s: ssbw@3-4 l: ldll@8-10 m: mmmmvmmcjkmg@10-18 w: wwvwwvwwhwwjwwwlwxcm@1-2 x: cxxxxxxxxxxxxx@1-5 b: bbbbkbbb@12-14 z: zwqzrrzzvqqzzszrx@1-5 z: lzzfzzzfz@16-17 t: ftgstrgptwmptxrzt@9-10 b: bbbbbbbzbbbb@8-14 w: wwwwwwwjwwwzwzww@3-4 h: qhnh@2-12 d: dnddddkddddzdxdddd@5-17 x: xxxxxxxxxxxxxxxxx@9-10 h: hhhhtqhhhrh@6-7 p: pfmppppp@5-8 v: vbvvvvvs@4-5 h: qhfhqcb@3-12 d: dlddlhhwvcrdrxwpt@2-3 n: nnwnp@4-8 g: ggggjgfgzgdglgg@4-9 h: vrghsphxhxzsxw@12-18 z: qrzzzfwdcwnzdzkckz@6-8 v: zvmlqwwh@10-14 p: pppxwpndfpwppdpptmpp@12-15 q: qqnqkqkqjgrcqfq@2-4 n: pnszjnnn@2-3 c: zkctcfc@17-20 l: lvjlcclllslzllllwgll@16-17 k: dfgskkfkkkfjhfvfks@1-3 t: tjttltt@2-3 b: bbzbb@8-15 t: dtttttsttlttttzlttj@13-14 v: vvkvvjvgwvvvkvf@7-8 v: tvvvvvvhv@3-10 d: bxktdrtddtdtsh@4-12 j: npwxjjjjbjkq@1-4 l: tlllll@12-13 b: lbhpxbbbvbbbqbbbsbb@9-15 v: vqhsggmpvmqtbzzlq@12-14 f: ffhfjfffqfxqff@15-16 m: jtnsjwpggbpxlhqmk@2-4 n: xptncjsstcl@5-8 q: dmwklqjqnzb@3-4 c: vcgl@1-6 h: hhhhhh@8-9 x: ckblstcdx@5-7 w: vwphwwmwwwww@2-4 x: kxxxdh@10-11 m: kmmvmmmfmksmj@4-7 v: zvrvvvdvvv@1-8 p: npxbwqpxbjrnrv@5-11 t: jfkwttkstrxlgts@1-2 g: ggggg@5-7 p: tpppppr@15-17 v: vvvvvvvvvvvvvvvvvvvv@17-19 w: dwjwjznczwgfmkmhdtw@10-13 f: fffffbqfffffffffff@4-14 g: ggggggggggggggg@2-3 d: bdkfd@7-8 x: xxxxxxxx@6-9 h: hmshdhvvhkhbhcshs@14-15 g: gggggggggggggghg@2-16 q: qqsxqqqdgqqghqqk@3-17 p: ppbppprppppppppphppp@8-18 v: vczfvqcvvcspndvxwjdv@1-3 d: fdddd@9-11 j: gfjjnjsdnhb@8-10 s: hkhshttssl@5-10 f: ffsffffffqxfff@7-10 w: wwlwwckwwf@4-8 x: blxxmtbgnblfgnfwz@4-5 p: rlpkprppp@13-14 s: ssssssssssssswss@4-8 h: hhhdhmhhhjhlhh@6-7 h: chhhhhfhzqhdhhh@15-17 m: msvrmwzkzvmmgrmmpm@4-6 x: qgtwwxhgsxxmklgmn@4-7 p: rpzkdpp@3-4 v: vvvhvjv@16-18 p: pppppppppppppppppmp@15-17 k: kpkkkkkhqkkkkklktk@5-7 s: ssbxxsk@2-4 l: cwllll@6-9 v: cvvrrkvrvsdvfwcv@1-7 w: qwwwwslwwwwwwwwrww@2-12 c: clcccccccccccccc@5-10 m: ftcmrpmvrzc@7-11 w: wwwwwwwwwwtwwwww@2-3 n: jngdlvgcvtkmn@1-8 v: hvvvvvvvvv@3-17 p: jrpvltxlcqgpfxwsj@1-5 k: kkkkfkk@1-10 c: cccccccccfc@13-19 f: flfffffxfvffffprfmcb@3-6 g: htglsbvrzcghjmd@9-11 h: wrwghhhhnzhxl@5-12 z: zzkzzhnjpmkvzzzw@7-11 w: qrwcwwstwddw@15-19 m: mmmmmmmmmmmmmmmmmmmm@15-16 m: mmmmmmmmmmmmmmhmm@12-16 x: xxxxxcxxxxxlxxxxxxx@5-10 l: qwfqlllgsdjrlspll@3-4 f: hffmfffg@6-7 l: lwlllbllnl@11-20 t: tttkrtlpttwftmwttttt@11-12 d: ddbdddddddpktdd@4-11 w: sxkmkwdwwnlwxmdvfx@4-5 k: kkzkpk@13-20 n: nnnnnntnnnnnbnnnbnnn@5-7 c: ccccwcc@1-6 h: cckkhhdhhwmhhmzchhwx@1-15 b: hbbbbbbbbhbbhbbbbnbb@1-2 w: mwwww@1-2 f: sfzgwtf@3-4 s: sssj@1-3 w: xwww@1-16 p: ppppppppdppppppp@1-6 c: ccxmccccc@4-8 b: rtpbcfbr@9-10 s: sszssstshss@15-16 x: xxxtxxxxxxxmxxxzx@9-15 k: kkkkkkkkkkgrkkkkk@11-13 x: xtxxxxxxxxrxkxx@1-5 f: rffflfffnf@14-16 n: nnxnnnnnnnnnbnzbnnn@3-6 d: ddddddndbdfdhd@14-15 q: sbqqhvqqqvqgxfq@5-6 b: jglbfjb@1-10 l: llllllcllsll@3-5 z: lwzzz@5-12 k: kkkkmkkkkkkkkkkl@8-12 v: vvtsvfvnzvhpm@5-7 l: llllllll@4-7 f: nqfffkbdf@4-8 j: jjjljkhj@9-15 h: vgzpgfhfhmwdhbqc@1-5 p: ptpsjqpnp@5-8 q: qbqqwqnq@5-7 w: wwswwxsb@3-6 h: nnhrnhkmxqkt@1-3 w: jwwww@2-14 x: cxxxxdxxxxxxxbxx@12-14 x: xxxfxxxxqxxrxt@4-9 f: fffkffbsfkxv@12-13 m: mmmmmmmmmmmwm@6-10 p: ppppphpppxppp@9-12 v: vsvvvvkmjvvvn@3-12 r: shngvhbmjrpr@12-13 w: wqwcwxclwwwfw@4-5 r: nnrrdz@4-19 c: vbcpwzvxssccqkqgmxvj@1-6 g: tglxhggng@9-10 z: lvzhvtglzf@10-16 f: gddxfftggfbmxwts@4-12 k: kkkklkkkkkkpkkk@7-11 m: mmmmmmmmmmtm@2-10 z: vkfpjrrvlwlbjwk@3-7 w: dtdzwjqgxdwjhchwwd@13-14 v: vvvvvvvvvvvvvvvv@11-12 c: cjccccqccccc@14-15 h: hzhrhkhfthrhxht@3-5 v: dtwvvvvvcvvvrvsvvv@10-14 q: qhqqkqcqqqqqlfqgsqq@3-14 f: ffvffffffffzffffff@1-12 x: xxtxjxzxxxxxlxxxxxxx@2-4 c: pgpc@1-4 r: fdrr@5-7 r: rrrrrrt@10-11 d: drdddddddmddddpd@2-5 f: gfrlctftzr@10-13 z: nrzjjrzjzzplzmzzbn@8-10 c: cccccccgbc@5-8 g: fgggcndwgggbjnfgb@6-9 d: ddddghdgbddm@3-7 j: ftjjjvjqcp@5-6 s: sqvfstz@5-18 k: kkkwkkkkkkbkkkkkkkbk@3-6 f: djffffkff@4-6 p: pqppppr@5-9 h: hhkhjhmgcqvfhqvhn@8-12 t: tttttttvttttt@14-15 z: pzrzhjqmtbcnzdzr@1-17 s: ssssssssssssswsss@1-4 s: ssqh@1-5 r: rrrrrrr@17-18 h: hhhhhrhcxhhhhhhhhb@7-9 t: dttttjmtv@1-3 c: mcccp@4-5 x: xprbxql@1-5 q: cqqqqqq@3-4 g: ggggw@1-7 f: ffffffnf@7-9 t: ttttttttttt@11-15 m: mmlmfmmmmmmmmmmqm@4-5 n: npnnnn@4-5 b: zvbbvbjhlkf@11-16 c: gnqmcvtzwpcbvncwcc@12-18 q: qbqkwqqvqwqqnljsqpqt@6-10 r: wcrtdrlkgjr@16-17 p: gppppppppwvlgpptp@1-13 g: gqghbwqqzwwdk@1-6 l: rlllll@3-7 j: pdjjtcqwbqtpfkjbwgq@7-17 z: zzhsnjrhrzzfrqszdhdg@6-7 n: xnvnhnrn@6-7 r: rrrrrrzr@2-3 c: ccmcccc@2-3 v: vvdv@3-9 f: mlfffshbfdff@11-13 v: dfvkltvjvvvvx@12-13 c: mqrccccbccbgcccccvc@9-13 w: wwwwwwwwwwwwcwtww@6-8 d: pdvgddtmvwdkvdtzf@1-9 s: hsssssssssdsls@1-5 c: zbsslcd@1-4 p: bpppppppppp@13-16 s: sssxslsscssbqsspcs@1-10 p: pskwpppzpppppks@3-5 c: ccppccmcc@10-11 b: rhbbbbbbbzbb@2-3 d: ndhjhd@3-4 s: sscs@5-6 d: dtwwnt@4-5 d: dddddddd@5-9 z: zztzvzzzz@2-6 v: vpqdll@13-14 d: nxkmbkkpxkcdld@1-3 s: ssss@8-14 z: zzzzzzzzzzzzzbz@16-17 f: fffnffffffftbzffpkf@3-4 m: mtcm@3-4 r: mrdrd@11-13 k: ljkmhdkkkcpjzlmkkzkk@2-3 d: tdqnxpd@3-7 h: mrvdlthxchpvwvssqpk@13-17 j: jjfjjvjjjjjzjsjjksxr@1-4 n: rnnx@7-10 m: mmmmzmxfmm@1-6 r: lrrvrrrrm@4-18 r: rrrdrrrrrrrrrkblrr@6-7 k: kkkkkkl@4-6 v: vmnfvvvvmcmlh@6-9 g: jgcgggkbbmgbs@7-8 t: ttcfwtgjtcttv@3-4 j: tjjj@"
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
__constant char *printf_number_buffer::buffer_digits#0 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS // buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // reg byte a 701.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
__constant void (*printf_number_buffer::putc#0)(char) = &cputc // putc
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 100001.0
void (*printf_str::putc)(char)
void (*printf_str::putc#11)(char) // putc zp[2]:12
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:10 100001.0
const char *printf_str::s#10 // s zp[2]:10 155002.0
const char *printf_str::s#11 // s zp[2]:10 10001.0
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#0 // uvalue zp[2]:6 22.0
unsigned int printf_uint::uvalue#1 // uvalue zp[2]:6 22.0
unsigned int printf_uint::uvalue#2 // uvalue zp[2]:6 22.0
unsigned int printf_uint::uvalue#3 // uvalue zp[2]:6 22.0
unsigned int printf_uint::uvalue#4 // uvalue zp[2]:6 22.0
unsigned int printf_uint::uvalue#5 // uvalue zp[2]:6 22.0
unsigned int printf_uint::uvalue#6 // uvalue zp[2]:6 83.5
char strtouc(char *str , char **endptr)
char strtouc::$4 // reg byte a 200002.0
char strtouc::$5 // reg byte a 200002.0
char strtouc::$6 // reg byte a 200002.0
char strtouc::c
char strtouc::c#0 // reg byte x 2002.0
char strtouc::c#1 // reg byte x 200002.0
char strtouc::c#2 // reg byte x 66834.16666666666
char **strtouc::endptr
char strtouc::return
char strtouc::return#2 // reg byte a 202.0
char strtouc::return#3 // reg byte a 202.0
char *strtouc::str
char *strtouc::str#0 // str zp[2]:12 150001.5
char *strtouc::str#1 // str zp[2]:12 202.0
char *strtouc::str#2 // str zp[2]:12 202.0
char *strtouc::str#3 // str zp[2]:12 1102.0
char *strtouc::str#4 // str zp[2]:12 25250.5
char strtouc::val
char strtouc::val#1 // val zp[1]:14 100001.0
char strtouc::val#2 // val zp[1]:14 66667.33333333333
char strtouc::val#3 // val zp[1]:14 37525.625
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 20002.0
char utoa::$11 // reg byte x 2002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:12 3000.4285714285716
char *utoa::buffer#14 // buffer zp[2]:12 15001.5
char *utoa::buffer#3 // buffer zp[2]:12 2002.0
char *utoa::buffer#4 // buffer zp[2]:12 20002.0
char utoa::digit
char utoa::digit#1 // digit zp[1]:14 20002.0
char utoa::digit#2 // digit zp[1]:14 2857.4285714285716
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:10 6000.6
unsigned int *utoa::digit_values
char utoa::max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 5000.5
char utoa::started#4 // reg byte x 10001.0
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:6 10001.0
unsigned int utoa::value#1 // value zp[2]:6 551.0
unsigned int utoa::value#2 // value zp[2]:6 5857.857142857143
unsigned int utoa::value#6 // value zp[2]:6 15001.5
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:12 13750.25
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.0000001E7
char utoa_append::digit#2 // reg byte x 1.00500015E7
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:6 20002.0
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:10 3335000.5
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:6 36667.33333333333
unsigned int utoa_append::value#1 // value zp[2]:6 2.0000002E7
unsigned int utoa_append::value#2 // value zp[2]:6 5018334.166666666

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[2]:6 [ main::valid_a#11 main::valid_a#15 main::valid_a#1 printf_uint::uvalue#6 printf_uint::uvalue#0 printf_uint::uvalue#1 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ]
zp[2]:28 [ main::invalid_a#11 main::invalid_a#16 main::invalid_a#1 ]
zp[2]:34 [ main::total#10 main::total#1 ]
zp[2]:23 [ main::valid_b#11 main::valid_b#28 main::valid_b#1 ]
zp[2]:25 [ main::invalid_b#11 main::invalid_b#30 main::invalid_b#1 ]
zp[1]:27 [ main::count_b#11 main::count_b#2 main::count_b#4 ]
reg byte x [ main::count_a#2 main::count_a#6 main::count_a#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte x [ strtouc::c#2 strtouc::c#0 strtouc::c#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
zp[2]:12 [ utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 strtouc::str#4 strtouc::str#3 strtouc::str#1 strtouc::str#2 strtouc::str#0 printf_str::putc#11 clrscr::line_text#5 clrscr::line_text#1 ]
zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[1]:20 [ conio_cursor_x ]
zp[1]:15 [ conio_cursor_y ]
zp[2]:18 [ conio_line_text ]
zp[2]:16 [ conio_line_color ]
reg byte a [ cputc::c#0 ]
zp[2]:36 [ main::pwd ]
reg byte a [ strtouc::return#2 ]
zp[1]:39 [ main::min#0 ]
reg byte a [ strtouc::return#3 ]
zp[1]:14 [ main::max#0 utoa::digit#2 utoa::digit#1 strtouc::val#3 strtouc::val#2 strtouc::val#1 ]
zp[1]:38 [ main::ch#0 ]
reg byte y [ main::$5 ]
reg byte y [ main::$8 ]
zp[2]:21 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:30 [ gotoxy::$8 ]
zp[2]:32 [ gotoxy::$5 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte a [ strtouc::$5 ]
reg byte a [ strtouc::$6 ]
reg byte a [ strtouc::$4 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:10 [ utoa::digit_value#0 utoa_append::sub#0 printf_str::s#10 printf_str::s#11 printf_str::s#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[2]:8 [ memcpy::src_end#0 ]
zp[2]:4 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]


FINAL ASSEMBLER
Score: 26261

  // File Comments
// https://adventofcode.com/2020/day/2
  // Upstart
  // Commodore 64 PRG executable file
.file [name="2020-02.prg", type="prg", segments="Program"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  .const OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
  .const STACK_BASE = $103
  .const SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
  /// Color Ram
  .label COLORRAM = $d800
  /// Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $14
  // The current cursor y-position
  .label conio_cursor_y = $f
  // The current text cursor line start
  .label conio_line_text = $12
  // The current color cursor line start
  .label conio_line_color = $10
.segment Code
  // __start
__start: {
    // __start::__init1
    // __ma char conio_cursor_x = 0
    // [1] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // __ma char conio_cursor_y = 0
    // [2] conio_cursor_y = 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // __ma char *conio_line_text = CONIO_SCREEN_TEXT
    // [3] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // __ma char *conio_line_color = CONIO_SCREEN_COLORS
    // [4] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // #pragma constructor_for(conio_c64_init, cputc, clrscr, cscroll)
    // [5] call conio_c64_init
    jsr conio_c64_init
    // [6] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
    // __start::@1
    // [7] call main
    // [27] phi from __start::@1 to main [phi:__start::@1->main]
    jsr main
    // __start::@return
    // [8] return 
    rts
}
  // conio_c64_init
// Set initial cursor position
conio_c64_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    // char line = *BASIC_CURSOR_LINE
    // [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE -- vbuxx=_deref_pbuc1 
    ldx BASIC_CURSOR_LINE
    // if(line>=CONIO_HEIGHT)
    // [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b1
    // [12] phi from conio_c64_init to conio_c64_init::@1 [phi:conio_c64_init->conio_c64_init::@1]
    // [12] phi conio_c64_init::line#2 = $19-1 [phi:conio_c64_init->conio_c64_init::@1#0] -- vbuxx=vbuc1 
    ldx #$19-1
    // [11] phi from conio_c64_init to conio_c64_init::@2 [phi:conio_c64_init->conio_c64_init::@2]
    // conio_c64_init::@2
    // [12] phi from conio_c64_init::@2 to conio_c64_init::@1 [phi:conio_c64_init::@2->conio_c64_init::@1]
    // [12] phi conio_c64_init::line#2 = conio_c64_init::line#0 [phi:conio_c64_init::@2->conio_c64_init::@1#0] -- register_copy 
    // conio_c64_init::@1
  __b1:
    // gotoxy(0, line)
    // [13] gotoxy::y#2 = conio_c64_init::line#2
    // [14] call gotoxy
    jsr gotoxy
    // conio_c64_init::@return
    // }
    // [15] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// void cputc(__register(A) char c)
cputc: {
    .const OFFSET_STACK_C = 0
    // [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) -- vbuaa=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_C,x
    // if(c=='\n')
    // [17] if(cputc::c#0==' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1
    // cputc::@2
    // conio_line_text[conio_cursor_x] = c
    // [18] conio_line_text[conio_cursor_x] = cputc::c#0 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // conio_line_color[conio_cursor_x] = conio_textcolor
    // [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #LIGHT_BLUE
    sta (conio_line_color),y
    // if(++conio_cursor_x==CONIO_WIDTH)
    // [20] conio_cursor_x = ++ conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [21] if(conio_cursor_x!=$28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [22] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
    // cputc::@3
    // cputln()
    // [23] call cputln
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [24] return 
    rts
    // [25] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [26] call cputln
    jsr cputln
    rts
}
  // main
main: {
    .label pwd = $24
    .label min = $27
    .label max = $e
    .label ch = $26
    // skip char and ": "
    // Count whether char at pos min & max matches ch
    .label count_b = $1b
    .label valid_a = 6
    .label invalid_a = $1c
    .label valid_b = $17
    .label invalid_b = $19
    .label total = $22
    // clrscr()
    // [28] call clrscr
    // [118] phi from main to clrscr [phi:main->clrscr]
    jsr clrscr
    // main::@20
    // char *pwd = passwords
    // [29] main::pwd = passwords -- pbuz1=pbuc1 
    lda #<passwords
    sta.z pwd
    lda #>passwords
    sta.z pwd+1
    // [30] phi from main::@20 to main::@1 [phi:main::@20->main::@1]
    // [30] phi main::invalid_b#11 = 0 [phi:main::@20->main::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z invalid_b
    sta.z invalid_b+1
    // [30] phi main::valid_b#11 = 0 [phi:main::@20->main::@1#1] -- vwuz1=vwuc1 
    sta.z valid_b
    sta.z valid_b+1
    // [30] phi main::total#10 = 0 [phi:main::@20->main::@1#2] -- vwuz1=vwuc1 
    sta.z total
    sta.z total+1
    // [30] phi main::invalid_a#11 = 0 [phi:main::@20->main::@1#3] -- vwuz1=vwuc1 
    sta.z invalid_a
    sta.z invalid_a+1
    // [30] phi main::valid_a#11 = 0 [phi:main::@20->main::@1#4] -- vwuz1=vwuc1 
    sta.z valid_a
    sta.z valid_a+1
    // main::@1
  __b1:
    // while(*pwd)
    // [31] if(0!=*main::pwd) goto main::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (pwd),y
    cmp #0
    beq !__b2+
    jmp __b2
  !__b2:
    // [32] phi from main::@1 to main::@3 [phi:main::@1->main::@3]
    // main::@3
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [33] call printf_str
    // [134] phi from main::@3 to printf_str [phi:main::@3->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@3->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s [phi:main::@3->printf_str#1] -- pbuz1=pbuc1 
    lda #<s
    sta.z printf_str.s
    lda #>s
    sta.z printf_str.s+1
    jsr printf_str
    // main::@23
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [34] printf_uint::uvalue#0 = main::valid_a#11
    // [35] call printf_uint
    // [143] phi from main::@23 to printf_uint [phi:main::@23->printf_uint]
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#0 [phi:main::@23->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [36] phi from main::@23 to main::@24 [phi:main::@23->main::@24]
    // main::@24
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [37] call printf_str
    // [134] phi from main::@24 to printf_str [phi:main::@24->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@24->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s1 [phi:main::@24->printf_str#1] -- pbuz1=pbuc1 
    lda #<s1
    sta.z printf_str.s
    lda #>s1
    sta.z printf_str.s+1
    jsr printf_str
    // main::@25
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [38] printf_uint::uvalue#1 = main::invalid_a#11 -- vwuz1=vwuz2 
    lda.z invalid_a
    sta.z printf_uint.uvalue
    lda.z invalid_a+1
    sta.z printf_uint.uvalue+1
    // [39] call printf_uint
    // [143] phi from main::@25 to printf_uint [phi:main::@25->printf_uint]
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#1 [phi:main::@25->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [40] phi from main::@25 to main::@26 [phi:main::@25->main::@26]
    // main::@26
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [41] call printf_str
    // [134] phi from main::@26 to printf_str [phi:main::@26->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@26->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s2 [phi:main::@26->printf_str#1] -- pbuz1=pbuc1 
    lda #<s2
    sta.z printf_str.s
    lda #>s2
    sta.z printf_str.s+1
    jsr printf_str
    // main::@27
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [42] printf_uint::uvalue#2 = main::total#10 -- vwuz1=vwuz2 
    lda.z total
    sta.z printf_uint.uvalue
    lda.z total+1
    sta.z printf_uint.uvalue+1
    // [43] call printf_uint
    // [143] phi from main::@27 to printf_uint [phi:main::@27->printf_uint]
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#2 [phi:main::@27->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [44] phi from main::@27 to main::@28 [phi:main::@27->main::@28]
    // main::@28
    // printf("rule a valid: %u invalid:%u total:%u\n", valid_a, invalid_a, total)
    // [45] call printf_str
    // [134] phi from main::@28 to printf_str [phi:main::@28->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@28->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s3 [phi:main::@28->printf_str#1] -- pbuz1=pbuc1 
    lda #<s3
    sta.z printf_str.s
    lda #>s3
    sta.z printf_str.s+1
    jsr printf_str
    // [46] phi from main::@28 to main::@29 [phi:main::@28->main::@29]
    // main::@29
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [47] call printf_str
    // [134] phi from main::@29 to printf_str [phi:main::@29->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@29->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s4 [phi:main::@29->printf_str#1] -- pbuz1=pbuc1 
    lda #<s4
    sta.z printf_str.s
    lda #>s4
    sta.z printf_str.s+1
    jsr printf_str
    // main::@30
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [48] printf_uint::uvalue#3 = main::valid_b#11 -- vwuz1=vwuz2 
    lda.z valid_b
    sta.z printf_uint.uvalue
    lda.z valid_b+1
    sta.z printf_uint.uvalue+1
    // [49] call printf_uint
    // [143] phi from main::@30 to printf_uint [phi:main::@30->printf_uint]
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#3 [phi:main::@30->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [50] phi from main::@30 to main::@31 [phi:main::@30->main::@31]
    // main::@31
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [51] call printf_str
    // [134] phi from main::@31 to printf_str [phi:main::@31->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@31->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s1 [phi:main::@31->printf_str#1] -- pbuz1=pbuc1 
    lda #<s1
    sta.z printf_str.s
    lda #>s1
    sta.z printf_str.s+1
    jsr printf_str
    // main::@32
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [52] printf_uint::uvalue#4 = main::invalid_b#11 -- vwuz1=vwuz2 
    lda.z invalid_b
    sta.z printf_uint.uvalue
    lda.z invalid_b+1
    sta.z printf_uint.uvalue+1
    // [53] call printf_uint
    // [143] phi from main::@32 to printf_uint [phi:main::@32->printf_uint]
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#4 [phi:main::@32->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [54] phi from main::@32 to main::@33 [phi:main::@32->main::@33]
    // main::@33
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [55] call printf_str
    // [134] phi from main::@33 to printf_str [phi:main::@33->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@33->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s2 [phi:main::@33->printf_str#1] -- pbuz1=pbuc1 
    lda #<s2
    sta.z printf_str.s
    lda #>s2
    sta.z printf_str.s+1
    jsr printf_str
    // main::@34
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [56] printf_uint::uvalue#5 = main::total#10 -- vwuz1=vwuz2 
    lda.z total
    sta.z printf_uint.uvalue
    lda.z total+1
    sta.z printf_uint.uvalue+1
    // [57] call printf_uint
    // [143] phi from main::@34 to printf_uint [phi:main::@34->printf_uint]
    // [143] phi printf_uint::uvalue#6 = printf_uint::uvalue#5 [phi:main::@34->printf_uint#0] -- register_copy 
    jsr printf_uint
    // [58] phi from main::@34 to main::@35 [phi:main::@34->main::@35]
    // main::@35
    // printf("rule b valid: %u invalid:%u total:%u\n", valid_b, invalid_b, total)
    // [59] call printf_str
    // [134] phi from main::@35 to printf_str [phi:main::@35->printf_str]
    // [134] phi printf_str::putc#11 = &cputc [phi:main::@35->printf_str#0] -- pprz1=pprc1 
    lda #<cputc
    sta.z printf_str.putc
    lda #>cputc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = main::s3 [phi:main::@35->printf_str#1] -- pbuz1=pbuc1 
    lda #<s3
    sta.z printf_str.s
    lda #>s3
    sta.z printf_str.s+1
    jsr printf_str
    // [60] phi from main::@19 main::@35 to main::@19 [phi:main::@19/main::@35->main::@19]
    // main::@19
  __b19:
    jmp __b19
    // main::@2
  __b2:
    // char min = strtouc(pwd, &pwd)
    // [61] strtouc::str#1 = main::pwd -- pbuz1=pbuz2 
    lda.z pwd
    sta.z strtouc.str
    lda.z pwd+1
    sta.z strtouc.str+1
    // [62] call strtouc
  // Parse the first number in the policy        
    // [150] phi from main::@2 to strtouc [phi:main::@2->strtouc]
    // [150] phi strtouc::str#3 = strtouc::str#1 [phi:main::@2->strtouc#0] -- register_copy 
    jsr strtouc
    // char min = strtouc(pwd, &pwd)
    // [63] strtouc::return#2 = strtouc::val#3 -- vbuaa=vbuz1 
    lda.z strtouc.val
    // main::@21
    // [64] main::min#0 = strtouc::return#2 -- vbuz1=vbuaa 
    sta.z min
    // pwd++;
    // [65] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // char max = strtouc(pwd, &pwd)
    // [66] strtouc::str#2 = main::pwd -- pbuz1=pbuz2 
    lda.z pwd
    sta.z strtouc.str
    lda.z pwd+1
    sta.z strtouc.str+1
    // [67] call strtouc
    // [150] phi from main::@21 to strtouc [phi:main::@21->strtouc]
    // [150] phi strtouc::str#3 = strtouc::str#2 [phi:main::@21->strtouc#0] -- register_copy 
    jsr strtouc
    // char max = strtouc(pwd, &pwd)
    // [68] strtouc::return#3 = strtouc::val#3 -- vbuaa=vbuz1 
    lda.z strtouc.val
    // main::@22
    // [69] main::max#0 = strtouc::return#3 -- vbuz1=vbuaa 
    sta.z max
    // pwd++;
    // [70] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // char ch = *pwd
    // [71] main::ch#0 = *main::pwd -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (pwd),y
    sta.z ch
    // pwd +=3
    // [72] main::pwd = main::pwd + 3 -- pbuz1=pbuz1_plus_vbuc1 
    lda #3
    clc
    adc.z pwd
    sta.z pwd
    bcc !+
    inc.z pwd+1
  !:
    // min-1
    // [73] main::$5 = main::min#0 - 1 -- vbuyy=vbuz1_minus_1 
    lda.z min
    tay
    dey
    // if(pwd[min-1]==ch)
    // [74] if(main::pwd[main::$5]!=main::ch#0) goto main::@4 -- pbuz1_derefidx_vbuyy_neq_vbuz2_then_la1 
    lda (pwd),y
    cmp.z ch
    bne __b3
    // [75] phi from main::@22 to main::@16 [phi:main::@22->main::@16]
    // main::@16
    // [76] phi from main::@16 to main::@4 [phi:main::@16->main::@4]
    // [76] phi main::count_b#4 = 1 [phi:main::@16->main::@4#0] -- vbuz1=vbuc1 
    lda #1
    sta.z count_b
    jmp __b4
    // [76] phi from main::@22 to main::@4 [phi:main::@22->main::@4]
  __b3:
    // [76] phi main::count_b#4 = 0 [phi:main::@22->main::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta.z count_b
    // main::@4
  __b4:
    // max-1
    // [77] main::$8 = main::max#0 - 1 -- vbuyy=vbuz1_minus_1 
    lda.z max
    tay
    dey
    // if(pwd[max-1]==ch)
    // [78] if(main::pwd[main::$8]!=main::ch#0) goto main::@5 -- pbuz1_derefidx_vbuyy_neq_vbuz2_then_la1 
    lda (pwd),y
    cmp.z ch
    bne __b5
    // main::@17
    // count_b++;
    // [79] main::count_b#2 = ++ main::count_b#4 -- vbuz1=_inc_vbuz1 
    inc.z count_b
    // [80] phi from main::@17 main::@4 to main::@5 [phi:main::@17/main::@4->main::@5]
    // [80] phi main::count_b#11 = main::count_b#2 [phi:main::@17/main::@4->main::@5#0] -- register_copy 
    // main::@5
  __b5:
    // [81] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
    // [81] phi main::count_a#2 = 0 [phi:main::@5->main::@6#0] -- vbuxx=vbuc1 
    ldx #0
    // main::@6
  __b6:
    // while(*pwd)
    // [82] if(0!=*main::pwd) goto main::@7 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (pwd),y
    cmp #0
    bne __b7
    // main::@8
    // if(count_a>=min && count_a<=max)
    // [83] if(main::count_a#2<main::min#0) goto main::@11 -- vbuxx_lt_vbuz1_then_la1 
    //printf("[%u] min: %u max:%u char:%c count:%u\n", idx, min, max, ch, count);
    // Test rule A: 
    cpx.z min
    bcc __b11
    // main::@36
    // [84] if(main::count_a#2<=main::max#0) goto main::@12 -- vbuxx_le_vbuz1_then_la1 
    lda.z max
    stx.z $ff
    cmp.z $ff
    bcs __b12
    // main::@11
  __b11:
    // invalid_a++;
    // [85] main::invalid_a#1 = ++ main::invalid_a#11 -- vwuz1=_inc_vwuz1 
    inc.z invalid_a
    bne !+
    inc.z invalid_a+1
  !:
    // [86] phi from main::@11 main::@12 to main::@13 [phi:main::@11/main::@12->main::@13]
    // [86] phi main::invalid_a#16 = main::invalid_a#1 [phi:main::@11/main::@12->main::@13#0] -- register_copy 
    // [86] phi main::valid_a#15 = main::valid_a#11 [phi:main::@11/main::@12->main::@13#1] -- register_copy 
    // main::@13
  __b13:
    // if(count_b==1)
    // [87] if(main::count_b#11==1) goto main::@14 -- vbuz1_eq_vbuc1_then_la1 
    // Test rule A: 
    lda #1
    cmp.z count_b
    beq __b14
    // main::@18
    // invalid_b++;
    // [88] main::invalid_b#1 = ++ main::invalid_b#11 -- vwuz1=_inc_vwuz1 
    inc.z invalid_b
    bne !+
    inc.z invalid_b+1
  !:
    // [89] phi from main::@14 main::@18 to main::@15 [phi:main::@14/main::@18->main::@15]
    // [89] phi main::invalid_b#30 = main::invalid_b#11 [phi:main::@14/main::@18->main::@15#0] -- register_copy 
    // [89] phi main::valid_b#28 = main::valid_b#1 [phi:main::@14/main::@18->main::@15#1] -- register_copy 
    // main::@15
  __b15:
    // total++;
    // [90] main::total#1 = ++ main::total#10 -- vwuz1=_inc_vwuz1 
    inc.z total
    bne !+
    inc.z total+1
  !:
    // pwd++;
    // [91] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // [30] phi from main::@15 to main::@1 [phi:main::@15->main::@1]
    // [30] phi main::invalid_b#11 = main::invalid_b#30 [phi:main::@15->main::@1#0] -- register_copy 
    // [30] phi main::valid_b#11 = main::valid_b#28 [phi:main::@15->main::@1#1] -- register_copy 
    // [30] phi main::total#10 = main::total#1 [phi:main::@15->main::@1#2] -- register_copy 
    // [30] phi main::invalid_a#11 = main::invalid_a#16 [phi:main::@15->main::@1#3] -- register_copy 
    // [30] phi main::valid_a#11 = main::valid_a#15 [phi:main::@15->main::@1#4] -- register_copy 
    jmp __b1
    // main::@14
  __b14:
    // valid_b++;
    // [92] main::valid_b#1 = ++ main::valid_b#11 -- vwuz1=_inc_vwuz1 
    inc.z valid_b
    bne !+
    inc.z valid_b+1
  !:
    jmp __b15
    // main::@12
  __b12:
    // valid_a++;
    // [93] main::valid_a#1 = ++ main::valid_a#11 -- vwuz1=_inc_vwuz1 
    inc.z valid_a
    bne !+
    inc.z valid_a+1
  !:
    jmp __b13
    // main::@7
  __b7:
    // if(*pwd==ch)
    // [94] if(*main::pwd!=main::ch#0) goto main::@9 -- _deref_pbuz1_neq_vbuz2_then_la1 
    ldy #0
    lda (pwd),y
    cmp.z ch
    bne __b9
    // main::@10
    // count_a++;
    // [95] main::count_a#1 = ++ main::count_a#2 -- vbuxx=_inc_vbuxx 
    inx
    // [96] phi from main::@10 main::@7 to main::@9 [phi:main::@10/main::@7->main::@9]
    // [96] phi main::count_a#6 = main::count_a#1 [phi:main::@10/main::@7->main::@9#0] -- register_copy 
    // main::@9
  __b9:
    // pwd++;
    // [97] main::pwd = ++ main::pwd -- pbuz1=_inc_pbuz1 
    inc.z pwd
    bne !+
    inc.z pwd+1
  !:
    // [81] phi from main::@9 to main::@6 [phi:main::@9->main::@6]
    // [81] phi main::count_a#2 = main::count_a#6 [phi:main::@9->main::@6#0] -- register_copy 
    jmp __b6
  .segment Data
    s: .text "rule a valid: "
    .byte 0
    s1: .text " invalid:"
    .byte 0
    s2: .text " total:"
    .byte 0
    s3: .text @"\n"
    .byte 0
    s4: .text "rule b valid: "
    .byte 0
}
.segment Code
  // gotoxy
// Set the cursor to the specified position
// void gotoxy(char x, __register(X) char y)
gotoxy: {
    .const x = 0
    .label __5 = $20
    .label __6 = $15
    .label __7 = $15
    .label line_offset = $15
    .label __8 = $1e
    .label __9 = $15
    // if(y>CONIO_HEIGHT)
    // [98] if(gotoxy::y#2<$19+1) goto gotoxy::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19+1
    bcc __b2
    // [100] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
    // [100] phi gotoxy::y#4 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [99] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
    // gotoxy::@3
    // [100] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
    // [100] phi gotoxy::y#4 = gotoxy::y#2 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    // gotoxy::@1
    // gotoxy::@2
  __b2:
    // conio_cursor_x = x
    // [101] conio_cursor_x = gotoxy::x#2 -- vbuz1=vbuc1 
    lda #x
    sta.z conio_cursor_x
    // conio_cursor_y = y
    // [102] conio_cursor_y = gotoxy::y#4 -- vbuz1=vbuxx 
    stx.z conio_cursor_y
    // unsigned int line_offset = (unsigned int)y*CONIO_WIDTH
    // [103] gotoxy::$7 = (unsigned int)gotoxy::y#4 -- vwuz1=_word_vbuxx 
    txa
    sta.z __7
    lda #0
    sta.z __7+1
    // [104] gotoxy::$8 = gotoxy::$7 << 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [105] gotoxy::$9 = gotoxy::$8 + gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    clc
    lda.z __9
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [106] gotoxy::line_offset#0 = gotoxy::$9 << 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // CONIO_SCREEN_TEXT + line_offset
    // [107] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // conio_line_text = CONIO_SCREEN_TEXT + line_offset
    // [108] conio_line_text = gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // CONIO_SCREEN_COLORS + line_offset
    // [109] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    lda.z __6
    clc
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // conio_line_color = CONIO_SCREEN_COLORS + line_offset
    // [110] conio_line_color = gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    // gotoxy::@return
    // }
    // [111] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // conio_line_text +=  CONIO_WIDTH
    // [112] conio_line_text = conio_line_text + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // conio_line_color += CONIO_WIDTH
    // [113] conio_line_color = conio_line_color + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // conio_cursor_x = 0
    // [114] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y++;
    // [115] conio_cursor_y = ++ conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // cscroll()
    // [116] call cscroll
    jsr cscroll
    // cputln::@return
    // }
    // [117] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label line_text = $c
    .label line_cols = $a
    // [119] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
    // [119] phi clrscr::line_cols#5 = COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [119] phi clrscr::line_text#5 = DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [119] phi clrscr::l#2 = 0 [phi:clrscr->clrscr::@1#2] -- vbuxx=vbuc1 
    ldx #0
    // clrscr::@1
  __b1:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [120] if(clrscr::l#2<$19) goto clrscr::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b2
    // clrscr::@2
    // conio_cursor_x = 0
    // [121] conio_cursor_x = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = 0
    // [122] conio_cursor_y = 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // conio_line_text = CONIO_SCREEN_TEXT
    // [123] conio_line_text = DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // conio_line_color = CONIO_SCREEN_COLORS
    // [124] conio_line_color = COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // clrscr::@return
    // }
    // [125] return 
    rts
    // [126] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b2:
    // [126] phi clrscr::c#2 = 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuyy=vbuc1 
    ldy #0
    // clrscr::@3
  __b3:
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [127] if(clrscr::c#2<$28) goto clrscr::@4 -- vbuyy_lt_vbuc1_then_la1 
    cpy #$28
    bcc __b4
    // clrscr::@5
    // line_text += CONIO_WIDTH
    // [128] clrscr::line_text#1 = clrscr::line_text#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // line_cols += CONIO_WIDTH
    // [129] clrscr::line_cols#1 = clrscr::line_cols#5 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [130] clrscr::l#1 = ++ clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [119] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
    // [119] phi clrscr::line_cols#5 = clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [119] phi clrscr::line_text#5 = clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [119] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // line_text[c] = ' '
    // [131] clrscr::line_text#5[clrscr::c#2] = ' ' -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #' '
    sta (line_text),y
    // line_cols[c] = conio_textcolor
    // [132] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #LIGHT_BLUE
    sta (line_cols),y
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [133] clrscr::c#1 = ++ clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [126] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
    // [126] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // printf_str
/// Print a NUL-terminated string
// void printf_str(__zp($c) void (*putc)(char), __zp($a) const char *s)
printf_str: {
    .label s = $a
    .label putc = $c
    // [135] phi from printf_str printf_str::@2 to printf_str::@1 [phi:printf_str/printf_str::@2->printf_str::@1]
    // [135] phi printf_str::s#10 = printf_str::s#11 [phi:printf_str/printf_str::@2->printf_str::@1#0] -- register_copy 
    // printf_str::@1
  __b1:
    // while(c=*s++)
    // [136] printf_str::c#1 = *printf_str::s#10 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [137] printf_str::s#0 = ++ printf_str::s#10 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [138] if(0!=printf_str::c#1) goto printf_str::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // printf_str::@return
    // }
    // [139] return 
    rts
    // printf_str::@2
  __b2:
    // putc(c)
    // [140] stackpush(char) = printf_str::c#1 -- _stackpushbyte_=vbuaa 
    pha
    // [141] callexecute *printf_str::putc#11  -- call__deref_pprz1 
    jsr icall1
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    jmp __b1
    // Outside Flow
  icall1:
    jmp (putc)
}
  // printf_uint
// Print an unsigned int using a specific format
// void printf_uint(void (*putc)(char), __zp(6) unsigned int uvalue, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_uint: {
    .label uvalue = 6
    // printf_uint::@1
    // printf_buffer.sign = format.sign_always?'+':0
    // [144] *((char *)&printf_buffer) = 0 -- _deref_pbuc1=vbuc2 
    // Handle any sign
    lda #0
    sta printf_buffer
    // utoa(uvalue, printf_buffer.digits, format.radix)
    // [145] utoa::value#1 = printf_uint::uvalue#6
    // [146] call utoa
  // Format number into buffer
    // [177] phi from printf_uint::@1 to utoa [phi:printf_uint::@1->utoa]
    jsr utoa
    // printf_uint::@2
    // printf_number_buffer(putc, printf_buffer, format)
    // [147] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer) -- vbuaa=_deref_pbuc1 
    lda printf_buffer
    // [148] call printf_number_buffer
  // Print using format
    // [198] phi from printf_uint::@2 to printf_number_buffer [phi:printf_uint::@2->printf_number_buffer]
    jsr printf_number_buffer
    // printf_uint::@return
    // }
    // [149] return 
    rts
}
  // strtouc
// Converts the string pointed to, by the argument str to an unsigned char (unsing base 10)
// Modifies *endptr to point to the first unparseable character
// __register(A) char strtouc(__zp($c) char *str, char **endptr)
strtouc: {
    .label val = $e
    .label str = $c
    // char c = *str
    // [151] strtouc::c#0 = *strtouc::str#3 -- vbuxx=_deref_pbuz1 
    ldy #0
    lda (str),y
    tax
    // [152] phi from strtouc to strtouc::@1 [phi:strtouc->strtouc::@1]
    // [152] phi strtouc::str#4 = strtouc::str#3 [phi:strtouc->strtouc::@1#0] -- register_copy 
    // [152] phi strtouc::val#3 = 0 [phi:strtouc->strtouc::@1#1] -- vbuz1=vbuc1 
    tya
    sta.z val
    // [152] phi strtouc::c#2 = strtouc::c#0 [phi:strtouc->strtouc::@1#2] -- register_copy 
    // strtouc::@1
  __b1:
    // while(c>='0' && c<='9')
    // [153] if(strtouc::c#2<'0') goto strtouc::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #'0'
    bcc __b3
    // strtouc::@4
    // [154] if(strtouc::c#2<='9') goto strtouc::@2 -- vbuxx_le_vbuc1_then_la1 
    cpx #'9'
    bcc __b2
    beq __b2
    // strtouc::@3
  __b3:
    // *endptr = str
    // [155] *(&main::pwd) = strtouc::str#4 -- _deref_qbuc1=pbuz1 
    lda.z str
    sta.z main.pwd
    lda.z str+1
    sta.z main.pwd+1
    // strtouc::@return
    // }
    // [156] return 
    rts
    // strtouc::@2
  __b2:
    // val = val*10
    // [157] strtouc::$5 = strtouc::val#3 << 2 -- vbuaa=vbuz1_rol_2 
    lda.z val
    asl
    asl
    // [158] strtouc::$6 = strtouc::$5 + strtouc::val#3 -- vbuaa=vbuaa_plus_vbuz1 
    clc
    adc.z val
    // [159] strtouc::val#1 = strtouc::$6 << 1 -- vbuz1=vbuaa_rol_1 
    asl
    sta.z val
    // c-'0'
    // [160] strtouc::$4 = strtouc::c#2 - '0' -- vbuaa=vbuxx_minus_vbuc1 
    txa
    sec
    sbc #'0'
    // val += c-'0'
    // [161] strtouc::val#2 = strtouc::val#1 + strtouc::$4 -- vbuz1=vbuz1_plus_vbuaa 
    clc
    adc.z val
    sta.z val
    // str++;
    // [162] strtouc::str#0 = ++ strtouc::str#4 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // c = *str
    // [163] strtouc::c#1 = *strtouc::str#0 -- vbuxx=_deref_pbuz1 
    ldy #0
    lda (str),y
    tax
    // [152] phi from strtouc::@2 to strtouc::@1 [phi:strtouc::@2->strtouc::@1]
    // [152] phi strtouc::str#4 = strtouc::str#0 [phi:strtouc::@2->strtouc::@1#0] -- register_copy 
    // [152] phi strtouc::val#3 = strtouc::val#2 [phi:strtouc::@2->strtouc::@1#1] -- register_copy 
    // [152] phi strtouc::c#2 = strtouc::c#1 [phi:strtouc::@2->strtouc::@1#2] -- register_copy 
    jmp __b1
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y==CONIO_HEIGHT)
    // [164] if(conio_cursor_y!=$19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // [165] phi from cscroll to cscroll::@1 [phi:cscroll->cscroll::@1]
    // cscroll::@1
    // memcpy(CONIO_SCREEN_TEXT, CONIO_SCREEN_TEXT+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [166] call memcpy
    // [206] phi from cscroll::@1 to memcpy [phi:cscroll::@1->memcpy]
    // [206] phi memcpy::destination#2 = (void *)DEFAULT_SCREEN [phi:cscroll::@1->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [206] phi memcpy::source#2 = (void *)DEFAULT_SCREEN+$28 [phi:cscroll::@1->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [167] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
    // cscroll::@2
    // memcpy(CONIO_SCREEN_COLORS, CONIO_SCREEN_COLORS+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [168] call memcpy
    // [206] phi from cscroll::@2 to memcpy [phi:cscroll::@2->memcpy]
    // [206] phi memcpy::destination#2 = (void *)COLORRAM [phi:cscroll::@2->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [206] phi memcpy::source#2 = (void *)COLORRAM+$28 [phi:cscroll::@2->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [169] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
    // cscroll::@3
    // memset(CONIO_SCREEN_TEXT+CONIO_BYTES-CONIO_WIDTH, ' ', CONIO_WIDTH)
    // [170] call memset
    // [216] phi from cscroll::@3 to memset [phi:cscroll::@3->memset]
    // [216] phi memset::c#4 = ' ' [phi:cscroll::@3->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [216] phi memset::str#3 = (void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28 [phi:cscroll::@3->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // [171] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
    // cscroll::@4
    // memset(CONIO_SCREEN_COLORS+CONIO_BYTES-CONIO_WIDTH, conio_textcolor, CONIO_WIDTH)
    // [172] call memset
    // [216] phi from cscroll::@4 to memset [phi:cscroll::@4->memset]
    // [216] phi memset::c#4 = LIGHT_BLUE [phi:cscroll::@4->memset#0] -- vbuxx=vbuc1 
    ldx #LIGHT_BLUE
    // [216] phi memset::str#3 = (void *)COLORRAM+(unsigned int)$19*$28-$28 [phi:cscroll::@4->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // cscroll::@5
    // conio_line_text -= CONIO_WIDTH
    // [173] conio_line_text = conio_line_text - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // conio_line_color -= CONIO_WIDTH
    // [174] conio_line_color = conio_line_color - $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // conio_cursor_y--;
    // [175] conio_cursor_y = -- conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    // cscroll::@return
  __breturn:
    // }
    // [176] return 
    rts
}
  // utoa
// Converts unsigned number value to a string representing it in RADIX format.
// If the leading digits are zero they are not included in the string.
// - value : The number to be converted to RADIX
// - buffer : receives the string representing the number and zero-termination.
// - radix : The radix to convert the number to (from the enum RADIX)
// void utoa(__zp(6) unsigned int value, __zp($c) char *buffer, char radix)
utoa: {
    .label digit_value = $a
    .label buffer = $c
    .label digit = $e
    .label value = 6
    // [178] phi from utoa to utoa::@1 [phi:utoa->utoa::@1]
    // [178] phi utoa::buffer#11 = (char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS [phi:utoa->utoa::@1#0] -- pbuz1=pbuc1 
    lda #<printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer
    lda #>printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    sta.z buffer+1
    // [178] phi utoa::started#2 = 0 [phi:utoa->utoa::@1#1] -- vbuxx=vbuc1 
    ldx #0
    // [178] phi utoa::value#2 = utoa::value#1 [phi:utoa->utoa::@1#2] -- register_copy 
    // [178] phi utoa::digit#2 = 0 [phi:utoa->utoa::@1#3] -- vbuz1=vbuc1 
    txa
    sta.z digit
    // utoa::@1
  __b1:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [179] if(utoa::digit#2<5-1) goto utoa::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z digit
    cmp #5-1
    bcc __b2
    // utoa::@3
    // *buffer++ = DIGITS[(char)value]
    // [180] utoa::$11 = (char)utoa::value#2 -- vbuxx=_byte_vwuz1 
    ldx.z value
    // [181] *utoa::buffer#11 = DIGITS[utoa::$11] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // *buffer++ = DIGITS[(char)value];
    // [182] utoa::buffer#3 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // *buffer = 0
    // [183] *utoa::buffer#3 = 0 -- _deref_pbuz1=vbuc1 
    lda #0
    tay
    sta (buffer),y
    // utoa::@return
    // }
    // [184] return 
    rts
    // utoa::@2
  __b2:
    // unsigned int digit_value = digit_values[digit]
    // [185] utoa::$10 = utoa::digit#2 << 1 -- vbuaa=vbuz1_rol_1 
    lda.z digit
    asl
    // [186] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda RADIX_DECIMAL_VALUES,y
    sta.z digit_value
    lda RADIX_DECIMAL_VALUES+1,y
    sta.z digit_value+1
    // if (started || value >= digit_value)
    // [187] if(0!=utoa::started#2) goto utoa::@5 -- 0_neq_vbuxx_then_la1 
    cpx #0
    bne __b5
    // utoa::@7
    // [188] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5 -- vwuz1_ge_vwuz2_then_la1 
    cmp.z value+1
    bne !+
    lda.z digit_value
    cmp.z value
    beq __b5
  !:
    bcc __b5
    // [189] phi from utoa::@7 to utoa::@4 [phi:utoa::@7->utoa::@4]
    // [189] phi utoa::buffer#14 = utoa::buffer#11 [phi:utoa::@7->utoa::@4#0] -- register_copy 
    // [189] phi utoa::started#4 = utoa::started#2 [phi:utoa::@7->utoa::@4#1] -- register_copy 
    // [189] phi utoa::value#6 = utoa::value#2 [phi:utoa::@7->utoa::@4#2] -- register_copy 
    // utoa::@4
  __b4:
    // for( char digit=0; digit<max_digits-1; digit++ )
    // [190] utoa::digit#1 = ++ utoa::digit#2 -- vbuz1=_inc_vbuz1 
    inc.z digit
    // [178] phi from utoa::@4 to utoa::@1 [phi:utoa::@4->utoa::@1]
    // [178] phi utoa::buffer#11 = utoa::buffer#14 [phi:utoa::@4->utoa::@1#0] -- register_copy 
    // [178] phi utoa::started#2 = utoa::started#4 [phi:utoa::@4->utoa::@1#1] -- register_copy 
    // [178] phi utoa::value#2 = utoa::value#6 [phi:utoa::@4->utoa::@1#2] -- register_copy 
    // [178] phi utoa::digit#2 = utoa::digit#1 [phi:utoa::@4->utoa::@1#3] -- register_copy 
    jmp __b1
    // utoa::@5
  __b5:
    // utoa_append(buffer++, value, digit_value)
    // [191] utoa_append::buffer#0 = utoa::buffer#11
    // [192] utoa_append::value#0 = utoa::value#2
    // [193] utoa_append::sub#0 = utoa::digit_value#0
    // [194] call utoa_append
    // [224] phi from utoa::@5 to utoa_append [phi:utoa::@5->utoa_append]
    jsr utoa_append
    // utoa_append(buffer++, value, digit_value)
    // [195] utoa_append::return#0 = utoa_append::value#2
    // utoa::@6
    // value = utoa_append(buffer++, value, digit_value)
    // [196] utoa::value#0 = utoa_append::return#0
    // value = utoa_append(buffer++, value, digit_value);
    // [197] utoa::buffer#4 = ++ utoa::buffer#11 -- pbuz1=_inc_pbuz1 
    inc.z buffer
    bne !+
    inc.z buffer+1
  !:
    // [189] phi from utoa::@6 to utoa::@4 [phi:utoa::@6->utoa::@4]
    // [189] phi utoa::buffer#14 = utoa::buffer#4 [phi:utoa::@6->utoa::@4#0] -- register_copy 
    // [189] phi utoa::started#4 = 1 [phi:utoa::@6->utoa::@4#1] -- vbuxx=vbuc1 
    ldx #1
    // [189] phi utoa::value#6 = utoa::value#0 [phi:utoa::@6->utoa::@4#2] -- register_copy 
    jmp __b4
}
  // printf_number_buffer
// Print the contents of the number buffer using a specific format.
// This handles minimum length, zero-filling, and left/right justification from the format
// void printf_number_buffer(void (*putc)(char), __register(A) char buffer_sign, char *buffer_digits, char format_min_length, char format_justify_left, char format_sign_always, char format_zero_padding, char format_upper_case, char format_radix)
printf_number_buffer: {
    .label buffer_digits = printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
    .label putc = cputc
    // printf_number_buffer::@1
    // if(buffer.sign)
    // [199] if(0==printf_number_buffer::buffer_sign#0) goto printf_number_buffer::@2 -- 0_eq_vbuaa_then_la1 
    cmp #0
    beq __b2
    // printf_number_buffer::@3
    // putc(buffer.sign)
    // [200] stackpush(char) = printf_number_buffer::buffer_sign#0 -- _stackpushbyte_=vbuaa 
    pha
    // [201] callexecute cputc  -- call_vprc1 
    jsr cputc
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // [203] phi from printf_number_buffer::@1 printf_number_buffer::@3 to printf_number_buffer::@2 [phi:printf_number_buffer::@1/printf_number_buffer::@3->printf_number_buffer::@2]
    // printf_number_buffer::@2
  __b2:
    // printf_str(putc, buffer.digits)
    // [204] call printf_str
    // [134] phi from printf_number_buffer::@2 to printf_str [phi:printf_number_buffer::@2->printf_str]
    // [134] phi printf_str::putc#11 = printf_number_buffer::putc#0 [phi:printf_number_buffer::@2->printf_str#0] -- pprz1=pprc1 
    lda #<putc
    sta.z printf_str.putc
    lda #>putc
    sta.z printf_str.putc+1
    // [134] phi printf_str::s#11 = printf_number_buffer::buffer_digits#0 [phi:printf_number_buffer::@2->printf_str#1] -- pbuz1=pbuc1 
    lda #<buffer_digits
    sta.z printf_str.s
    lda #>buffer_digits
    sta.z printf_str.s+1
    jsr printf_str
    // printf_number_buffer::@return
    // }
    // [205] return 
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// void * memcpy(__zp(4) void *destination, __zp(2) void *source, unsigned int num)
memcpy: {
    .label src_end = 8
    .label dst = 4
    .label src = 2
    .label source = 2
    .label destination = 4
    // char* src_end = (char*)source+num
    // [207] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [208] memcpy::src#4 = (char *)memcpy::source#2
    // [209] memcpy::dst#4 = (char *)memcpy::destination#2
    // [210] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
    // [210] phi memcpy::dst#2 = memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [210] phi memcpy::src#2 = memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    // memcpy::@1
  __b1:
    // while(src!=src_end)
    // [211] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    // memcpy::@return
    // }
    // [212] return 
    rts
    // memcpy::@2
  __b2:
    // *dst++ = *src++
    // [213] *memcpy::dst#2 = *memcpy::src#2 -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta (dst),y
    // *dst++ = *src++;
    // [214] memcpy::dst#1 = ++ memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [215] memcpy::src#1 = ++ memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// void * memset(__zp(2) void *str, __register(X) char c, unsigned int num)
memset: {
    .label end = 4
    .label dst = 2
    .label str = 2
    // memset::@1
    // char* end = (char*)str + num
    // [217] memset::end#0 = (char *)memset::str#3 + $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [218] memset::dst#4 = (char *)memset::str#3
    // [219] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
    // [219] phi memset::dst#2 = memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    // memset::@2
  __b2:
    // for(char* dst = str; dst!=end; dst++)
    // [220] if(memset::dst#2!=memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    // memset::@return
    // }
    // [221] return 
    rts
    // memset::@3
  __b3:
    // *dst = c
    // [222] *memset::dst#2 = memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [223] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2
}
  // utoa_append
// Used to convert a single digit of an unsigned number value to a string representation
// Counts a single digit up from '0' as long as the value is larger than sub.
// Each time the digit is increased sub is subtracted from value.
// - buffer : pointer to the char that receives the digit
// - value : The value where the digit will be derived from
// - sub : the value of a '1' in the digit. Subtracted continually while the digit is increased.
//        (For decimal the subs used are 10000, 1000, 100, 10, 1)
// returns : the value reduced by sub * digit so that it is less than sub.
// __zp(6) unsigned int utoa_append(__zp($c) char *buffer, __zp(6) unsigned int value, __zp($a) unsigned int sub)
utoa_append: {
    .label buffer = $c
    .label value = 6
    .label sub = $a
    .label return = 6
    // [225] phi from utoa_append to utoa_append::@1 [phi:utoa_append->utoa_append::@1]
    // [225] phi utoa_append::digit#2 = 0 [phi:utoa_append->utoa_append::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [225] phi utoa_append::value#2 = utoa_append::value#0 [phi:utoa_append->utoa_append::@1#1] -- register_copy 
    // utoa_append::@1
  __b1:
    // while (value >= sub)
    // [226] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2 -- vwuz1_ge_vwuz2_then_la1 
    lda.z sub+1
    cmp.z value+1
    bne !+
    lda.z sub
    cmp.z value
    beq __b2
  !:
    bcc __b2
    // utoa_append::@3
    // *buffer = DIGITS[digit]
    // [227] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2] -- _deref_pbuz1=pbuc1_derefidx_vbuxx 
    lda DIGITS,x
    ldy #0
    sta (buffer),y
    // utoa_append::@return
    // }
    // [228] return 
    rts
    // utoa_append::@2
  __b2:
    // digit++;
    // [229] utoa_append::digit#1 = ++ utoa_append::digit#2 -- vbuxx=_inc_vbuxx 
    inx
    // value -= sub
    // [230] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0 -- vwuz1=vwuz1_minus_vwuz2 
    lda.z value
    sec
    sbc.z sub
    sta.z value
    lda.z value+1
    sbc.z sub+1
    sta.z value+1
    // [225] phi from utoa_append::@2 to utoa_append::@1 [phi:utoa_append::@2->utoa_append::@1]
    // [225] phi utoa_append::digit#2 = utoa_append::digit#1 [phi:utoa_append::@2->utoa_append::@1#0] -- register_copy 
    // [225] phi utoa_append::value#2 = utoa_append::value#1 [phi:utoa_append::@2->utoa_append::@1#1] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  // The digits used for numbers
  DIGITS: .text "0123456789abcdef"
  // Values of decimal digits
  RADIX_DECIMAL_VALUES: .word $2710, $3e8, $64, $a
  // Use one huge string since array of strings is not currently supported
  passwords: .text "4-6 b: bbbdbtbbbj@1-6 g: ggvggbgggstg@1-4 s: lssss@13-14 v: hvvcvvvvvvvvvsvvv@3-5 m: lcmmm@3-4 t: stht@5-6 b: dbkbhb@4-7 p: ppfppppq@4-5 j: jjjjj@3-12 s: sskssssssssss@14-15 z: zrndzbmrzzpzzqzj@12-18 l: tllllllllllllplllbl@8-10 b: bdbvqbtbrb@1-3 c: tcqccc@1-2 n: nbnj@5-7 c: ccccccccc@9-10 l: hpmslrlgll@6-9 n: nnnnnnnnb@6-10 r: rmzjlrsxkbw@6-8 r: bzqnnrrrj@4-14 c: mfffvcbtchzrqcn@1-6 f: ffffffffffffff@2-5 f: wxtkf@8-12 b: rdcbbjbzbbpb@8-18 d: ddtdddddddwvdfdsdd@5-8 s: sssmsgpgszms@6-11 x: xxxxxvxxxxxt@17-18 n: jhrnnzpxzngfqrntmnc@13-14 r: rrrmrrrrlrrshvrrr@4-5 h: hhhhrhh@8-10 d: dgwtdsxnncd@9-13 q: qqbpqmqgmqwqbqqqxcgq@2-5 g: gjjcpgg@6-12 t: ttttvttttttrtt@3-9 h: hhhhhhhhsh@15-16 p: ppppsppppppppppz@2-5 c: csccctcccc@11-14 p: pppppppppppppnp@8-9 j: jvbjjjjrjbjj@8-16 b: qklbmbntmvbhxplbbcb@12-13 j: jjjjsjmfjjjkhj@2-13 t: llckxhfmtznptndcsx@6-8 x: dxxxxvxxtt@3-4 d: ddht@3-4 t: ttdtt@11-12 r: rrrrrrrrrrrd@9-10 h: hhhhhhhhgh@3-16 h: hhhhhhhhhhhhhhnhhh@10-11 h: hxhhhdhhhsh@1-7 n: jnfnjnn@3-4 m: msmnpmpf@15-17 t: tpdtttgltvtttztlv@7-10 v: vvpsvpgjzvvvvjs@1-5 p: pxppg@2-7 w: jwhgkgvxcv@13-14 m: pxxmjznmrzdsbbmmfj@1-4 d: ddddd@14-16 r: rrrrrrrrrrrrrwrr@2-5 l: klbtzzlrlslgswhljtq@6-12 c: qccrcpccccccdccccc@2-18 l: llllllllvllllllllkll@18-20 z: zzzzzzzzszqzwzrzzzzn@5-16 c: cbccclcfcncvqztqc@7-11 m: fnwmtsmgpxncnr@6-7 h: hpjrhbhkshnchbhpph@11-12 s: ssssssssssps@6-9 s: jfsmmssssqz@1-15 l: llllllllllllllbll@2-6 g: gggggwgggpggggggg@6-9 j: jjjpjjjjn@9-13 n: nnnnnnnnnnnnnn@10-13 t: cgntllxnvpkjwxtght@2-11 f: xcftbcdcndkgm@10-13 j: jjjjjjjjjjjjvj@9-17 f: rfrffnsffxqflbffvv@6-11 k: kkkkkrwkqckmk@5-7 q: zfqqqqqn@12-13 c: cfcccvccccckccccv@5-15 z: xhzzzzzzzzfzzknzz@18-19 f: jkfksvmfjbdffffffff@8-11 h: hhhhmhhkhsfdg@14-16 s: ssssssdjssssssssssss@15-16 t: jtmjhsxqqmmthmtttm@5-7 h: hkbjhjhh@2-6 n: knprnfnfhhrcnk@3-4 w: snwd@5-11 w: wwwwnwwwwwwwwwwww@2-12 k: bkqjghpktfsk@14-15 v: vvvsvvvvvvvvvxv@8-9 w: fxwwwwwscwl@9-15 c: sbjvvsmdvqknbccxxx@6-15 t: tpwjtdnnldthxvn@13-15 t: tttttrzmzttjttt@3-11 m: mmvmlmmmwfmjx@13-14 s: gskssssssscssssqjssl@5-10 l: bfnmqlldllp@17-18 q: qkwqqqqqqqqqqqrqqqqq@2-5 r: rsvrrq@3-4 j: jjjdj@3-4 m: mtmk@8-9 k: vsvkvkrkc@10-12 t: ttttttcttttgttt@3-4 n: trzw@5-11 q: qqmpsqbxkqq@13-15 s: sqsssnmwqszfsmv@5-6 b: bbbbzvb@5-13 p: pjjhpnqpzpmpfpfp@4-5 l: mgnwlrw@1-7 k: fkzxwkj@1-10 q: qgxqqqqqqg@8-9 s: ssqssssfss@7-8 c: xxcscclccdvcmqcc@2-6 d: xdlmzdzxrpmlnt@3-9 s: sssssnssgbs@7-10 h: sblrrhqrhh@3-5 n: xnndnnnfnw@9-10 l: vllllqlllhllljxlp@2-5 d: ddxzbxk@10-14 m: mmmmmmmmmmdmmmmsmmm@1-2 f: ffffw@14-15 g: wdjhplhrbcxdgpnt@1-2 l: klllllll@10-11 k: ckkhkkvkkkmkkjkwkkwk@7-9 f: ffrhdvftfpjfqffhnfsf@4-5 c: kkjksrmkccg@5-9 r: rrrrhrrrrr@5-6 p: pppppth@4-10 t: kpfwzjtchtbndblrvst@1-5 l: mllllllnllll@13-16 r: rrrvrrrrrrrrzrrg@17-18 x: xxfxxxxxxxxsxxxxxsxx@8-11 w: rwbnqrngcvpgwwww@4-8 z: zzzzzzzzzz@4-9 b: bbvvbbbbr@2-5 x: qlfhxkx@3-8 t: wvptttttttt@1-3 m: hmmmmqmm@17-19 h: nhhhdvhnhrhhhhnhmdh@11-12 s: psszbdpsgfks@6-7 s: sssssshs@10-15 l: mnkdvnvmxljjtggwcl@1-13 j: qjjjjjjjjjjjdj@4-9 l: jxvkwhlmlhdtgwvgsdzz@5-9 c: ccfghhccccgc@10-11 v: vvvvvvvvvvv@7-8 t: cntwzshkzvmrnnkr@1-11 l: tllllllltllll@15-17 l: lllglvctrvllzkllt@3-5 n: ncnnp@2-3 q: jsqqh@4-10 h: hhhhhhhhhvh@16-18 b: bbnbbbbbtbbkktbbzdr@4-6 g: kbggdhgggggggggggfc@12-13 p: cpvcppqpplwpt@5-10 h: fvhhbrhpghchhhhhh@2-5 b: bbvzn@14-15 x: xxxbxnwxxxxzxxh@13-15 n: nnfgdglfnntnjqn@2-4 c: cfccc@3-5 v: vrvvzdvv@17-19 v: vvvvvvvvvvvvvvvvvvsv@1-20 h: hhhhhhhhhhqhhhhhhhhh@4-15 q: qqqtqqqqqqqqqqqqlq@11-13 h: hhkhvhhhhwhgk@8-11 p: ppvppppppptspf@8-9 m: mmmpmmkmdmpkspmg@1-7 m: lcmvggm@6-12 v: tvfstvvpvzsvcv@8-9 n: nnnqnnwrrdzlmnwlznrn@1-5 s: msssms@1-3 v: vpdzvdvgv@6-9 g: drgrfggcg@6-16 x: djpxhxvncxfghsxx@1-3 b: sjbwwxbvtvbkt@6-8 c: cccccstccjhv@1-11 q: qqqpqqqqqqwqqq@9-11 m: vsbmmmmmmmqmmsm@2-7 g: gqggggggg@2-3 m: mrgvm@6-7 c: cccpcfcc@6-10 w: swbngwswnxnww@13-14 r: rrrrrrrrrrwrrgrdr@3-9 v: vctxhxtfvq@2-9 r: jrrcslgplcprlvgthg@2-3 n: hnnnsxclvdj@10-11 h: zrhghhqhgzh@15-18 z: zzzlzzzzzzzzpzqzpzzz@3-8 f: fffffrfl@1-4 l: rllllfl@1-2 n: nnnnnvtnv@17-19 z: zzzzzzzzzzzzzzzzzzqz@13-15 n: nnnznnnnnnznnnn@2-5 c: gcccncjmsncfcntjc@8-9 h: hhhhhhhhbpsfh@7-11 r: lzvvlbrgjgrr@5-11 x: xxxxqxxxxxxx@4-7 p: gqpkmppzpsmtzhfdfpl@3-4 j: jjdjdg@14-16 z: zzzzzzzgjzzzzpzf@1-2 n: nnnvnwnnnnh@4-5 z: jhzzz@5-7 k: kkkkkkf@8-18 z: khzzrzjzmzzvzzpcclm@5-10 m: kjrhwkhmsm@10-16 v: vvvvvvvvvvvvvvvwv@9-10 l: xhvjsmllkcdtldfxlw@8-10 p: ppjvppbpqhpwhppgbp@4-6 m: jlmkhm@1-3 k: gvpklkkkk@15-16 g: ggjggggvgmgtpgcg@1-4 j: jbjwj@1-3 x: xxxpxxdxxhfx@14-16 v: vxmhhdvvfjjqwhtv@6-7 l: lnkchzlwxlp@3-4 v: vvvcv@13-14 p: pbqpppppzbmppc@6-12 p: glqwzprpqbqf@6-12 l: lllllglllllll@8-9 n: nnsnnnndcn@6-8 p: prwppppp@1-10 q: dqqqqqqqqjq@12-16 w: kwtbdnjqmwwxhwcwswkl@11-14 r: rrnjghfrrrshlrq@2-14 w: vwbbvcvgnxdmxl@7-8 g: sqmggkgslkwlvggg@1-6 q: tqqqqqq@2-3 b: bbbr@7-9 b: jnwbswfpbn@4-5 n: nnlct@3-11 s: ssssssssssp@2-6 f: wjlpwf@5-10 g: gggghqgqgb@1-3 p: ppdg@4-7 j: pjnkjjljjj@1-2 v: ghmjzxmtxjxnv@6-14 k: klgdzfmgdwhqdkhcnzm@6-11 z: tgzpzzzzztc@2-12 b: cxsmjbdgdnrb@4-6 v: lxdvvh@3-8 l: pnpdnrll@7-8 m: mzmswvmmbxmzlmwhdvq@13-14 s: khzssssssssszsssss@10-18 d: dmfdlgcxdbzznbrlqn@13-14 j: jjjjjjjjjjjjdpjj@15-17 j: jjjjjjjjjwjsqjwjj@10-15 x: xxfxkzxxhxxxxxvxxw@7-14 c: wcccwcmmcccccxhcccc@2-7 z: zmzvfzlszr@7-8 k: jjkrklrkkv@8-9 r: rrrrrjrtz@2-3 w: tvws@1-5 b: bbbjm@1-2 q: tqqjf@5-10 j: wlgjghjhjljwtpcdkqwk@2-5 c: dzpkc@5-6 m: mbvmkm@4-15 k: stjkjvvxrmwdpkwsjqvc@6-9 h: hwkgjplmhxwgvnbhwh@12-13 z: zzzzzzzzzzzzz@7-8 q: qqqqqqqqq@2-5 c: clcwmccczclcccc@2-5 l: jlcgfbflklvpfqxtwgg@5-7 n: nnnnnnvnnnnnn@3-5 f: gfktfffqvgltsbff@10-16 p: jppbttppzpqppppp@2-3 m: zmdm@4-6 j: zsmtjjdnrpp@17-18 j: hvvmrkfnnkvrjtjhjj@12-15 d: dtddddddddtwxgld@8-12 r: rdzrwfgrmxwttknxz@6-7 s: rssbktxsgd@11-13 d: ddddmwddddxddndc@3-6 p: ppcpspfp@12-15 j: jjjjjjgjjjjcjlzj@8-12 v: tgjkwfbsxzzvvpmfs@6-7 z: trbfbdz@4-6 v: vvvvvpvv@8-16 p: pnvppdpjppppppph@8-9 z: lzzzzpdzk@1-4 t: qttzz@2-3 d: dhdd@5-8 m: mmmkmmxmkj@2-12 f: hfhzkwdmrlqvfkn@5-6 h: hhhhhph@14-15 b: bbbbxbbbbbbbbbh@2-3 v: vvcj@12-19 d: ddvdwwqdddcdtdmwdqp@3-4 s: ssjssssssss@2-6 c: wzzxqcdcnlgcph@11-12 j: jjdrcjzjkjcs@4-9 z: bzzzzzzxzz@2-8 b: gjbfkxhb@1-3 c: cpksst@1-5 h: hhjhh@14-15 j: jjjjjjjjjjjjjjr@8-9 n: pcndxcfknfbnnls@10-13 k: kkkqzkwbkkkrtn@4-5 r: rzrrrnrj@13-15 p: ppppppppppppppt@3-6 j: fjqqzzzjm@2-9 m: zmjhctkmf@5-6 s: ssmjss@3-4 c: jlfd@8-12 d: qbddfhnddzgvddddd@6-7 p: xfppppcppppxgp@8-13 s: sssssssfssssssss@13-17 g: xskktsjxlvgfxtzzgfj@2-4 q: qqtwfqqnkvbvbhzs@1-5 j: cjmjs@4-5 c: tvccnc@3-14 m: kkfhmnkkmztxtmn@11-15 x: xxxxxpxmxxvbxxxvx@9-11 l: nhgzwmmrkqhblnk@7-10 x: xxxxxdmxxxxxxxx@13-14 v: vvvvvvpvvvjvvcvv@16-17 n: nnnnqnnbnnnnnnnpn@3-4 j: jvjj@15-16 q: zlqsgvpztknqjqqwqvf@3-4 s: sssrsssdss@11-13 g: ggqggmggswggdk@1-4 t: jmtzttztqt@2-3 v: vvvv@11-13 g: cgjgxgggkgbggxg@4-6 g: ggggqlhgmz@8-15 g: prvxwzkvdhgkjlg@6-9 g: gggggnsjlg@12-14 p: mmvlpzkmpgtpvj@7-10 k: kkkxkkjkkkdkkkp@14-16 b: zmztqsrgvjjmswzkbnk@1-2 x: xxbxxxxhx@2-5 l: tlhsx@3-5 x: xxxxn@4-12 c: vdnmtmqwnxkcldc@4-8 x: xxxxjglx@5-13 s: vsssspszssssnsss@3-6 k: kkhkkkknb@3-5 t: pttqtwnprt@10-14 m: ttjqvzmgmmjqzkd@1-5 b: bbbbpbbb@10-15 d: wdjrhvfngdtlkdl@6-7 w: trxwdwww@2-4 n: snxqlgtsmdnnjgwrgmms@16-18 l: klslpljllqlcslqqll@4-7 t: tttwzttjt@9-10 f: ffffffffwf@8-15 h: trhgxjchhxvvhqp@8-12 w: wwwwwwwqwwwg@12-13 x: xxxxxxxxsffqlxx@5-7 k: kkkklkkkktkk@1-7 m: wkmmqmmhf@12-13 h: mhhchwhhhzhhcvh@7-11 k: kkkkkkwkkkgkk@4-6 l: hdlbll@8-12 v: fvvvvvvvrvvv@2-9 h: hzhhhhhhhhhhhhr@6-8 b: qbqjpbbbdsshv@2-3 h: hwhl@4-7 l: mdllxjgdw@3-9 f: rwffzfkpwbzp@3-5 t: ttnttt@7-10 c: mpcccpndqc@6-7 h: fhhhljh@2-7 v: pnvzcns@1-3 v: vvgv@5-9 s: ssssshsspsssssss@4-6 j: mjjjjq@5-14 h: hwbqghmvmmnvhhrqmj@5-6 s: wctjsh@7-8 s: sssscsjs@14-17 v: vvvvvvvvvvvvvvvvv@14-15 w: wxwwwwwwfwwwwsw@6-7 v: ksvvvlpvv@7-18 s: cssstsvsscshsstsss@5-6 b: zzwbpm@6-7 r: bvtmpkxspskr@6-7 v: lvxrvqv@15-17 c: ccccccccccccccccccc@8-12 r: ghxpwhxcqjrr@6-10 k: kzbcdkndqm@5-6 s: tpsxss@1-5 p: qlrlp@4-8 q: qqqkqqqz@7-11 v: vgvsxvwvlxv@2-5 b: bgkbb@3-18 j: jjsplxjxgqjfjrjxjjlx@6-10 k: kxkhkkjkkrvkkk@7-16 t: ttttttzttttttttbtttt@1-7 l: ptzptslrjgwlfgwq@8-10 v: vvqvvvvvvvv@3-5 z: zzzhz@6-7 c: cbrctgc@5-16 l: llllxlllllllllllll@6-7 c: chxclqcdrh@1-10 c: jcmcccccwcccccjbvc@8-14 h: zhhvhhhhhhhhhv@4-7 n: rnnnnnfnnnnnvn@10-12 w: wwwwwwwsgtwww@5-8 c: cmbcctzcj@5-7 f: fffskrf@5-6 l: lllmzl@7-14 m: mmmmmmmmmmmmmmmmmmm@1-9 f: jfffffffzvffff@2-5 g: ggmng@16-17 x: xxxxxxxxxxxxxxxlx@4-10 n: npkgjcfnnnnn@1-13 d: bhkjgsnzxkdgwbdv@6-7 f: ncqfzff@7-10 h: hqhhhhhjhhh@2-4 v: vnvvv@1-6 w: thlmdwgwgtswvtx@3-7 d: ddlkhvfdnpbdr@1-4 q: qbfq@2-6 f: rzfmfrjgcfjk@10-16 b: bbbbblbbbkbbbbbbwqb@13-14 j: jjhcjnkgvrnwjp@5-12 l: lgqwvrlwcllllv@4-8 j: jjgpdjssspjfdbt@1-9 h: hhhhhhhhwhhh@4-6 p: psmppt@2-3 h: zhhhk@2-6 b: bbbbbmbbvb@7-9 z: zzzzzzgzdzz@8-9 d: ddgdmdwddd@2-6 s: nssssv@18-20 x: xxxxxxxxxxxxxxxxxvxx@9-10 m: dzckmrbhcmwvkcxmlx@10-11 v: vwvvvvwvvghvn@3-6 d: wcwxddjhnljfntj@13-15 v: vvvvvvvvvvvvcvc@1-5 x: xxfxfxxkx@7-8 w: wqzjzwwwtw@2-4 f: flgl@3-6 n: ncfngngdnm@5-7 k: kdkmbkkkkxk@5-6 x: xxvxth@5-6 r: rrhhzr@4-6 b: bbbrbbbbbmb@12-13 q: qqqqqqqqqzqkqp@6-14 n: mlbflnrbhlhpdrfln@9-12 q: qqqqqqqqqqqwq@3-4 k: rkncnbk@1-3 j: jjpj@8-9 v: vjvczrvvm@9-16 m: tmnmmmxmbmmmrtmmr@9-11 q: qqqqqzqqsjxq@3-5 h: hhhhcs@11-12 k: kkkkkkkkkkkvqk@11-12 x: xlxxxjjxxxpx@1-12 n: nngtnhlnjfnf@5-7 p: ppptppppp@13-14 l: lllmlflllhllpm@13-14 m: vdkmrdfzmkknmp@13-15 s: ssssssqssssscssss@5-11 h: hhhlxhhhhhhshh@10-11 s: ssssssssssgsssss@6-7 q: kqqqqmqnqq@8-13 l: llllllltlllljll@9-12 j: jjjjjjjjjjjlj@7-11 s: gstcncsssscssssss@4-6 x: lrtjfnhmpmxj@9-20 c: cttccccccnccclcccccc@1-8 w: cwwwwwwwwww@12-13 n: nnnnnnnngnnnnn@1-5 p: pfqwcpnppppwwpqppp@7-8 g: gggsgglghg@6-7 g: gggggggg@4-10 s: ssssssssssss@1-2 n: njsnnln@7-8 z: gzczzwdzkkzz@2-8 b: bbbwjfbh@6-8 r: rrrrbrrbr@2-5 k: lkkkkl@2-3 c: swcgjcm@2-10 t: ttttttttttt@12-13 l: lllllxllllllqhl@2-9 l: qtqxdpqqlwhqwlr@1-5 q: qqxrn@10-11 k: kkkkkkkkkckk@1-2 f: ffff@3-4 r: rrxr@8-9 p: lppppxpsp@2-5 s: ssstchlrds@11-15 m: mmmmmmmmmmmmmmmmm@14-17 k: kkkkkkkkkkgkkkktbkk@1-2 x: xlxx@9-10 w: wwcwptczwzzd@1-3 c: ccgcccccccccccccc@4-5 h: nhhhvh@8-16 l: hlllfllllmltlhlldl@4-5 w: wgwfw@6-15 p: pjpbfrmxqgkxkbqhj@12-17 l: llmtllnlllllllllnns@8-15 n: zjnxzndnznklxzjlx@6-9 r: wpsmstnkgtrmng@3-7 s: csvhxhsgvrsrn@10-15 h: hchhhdhkhghlhgsh@2-9 c: mzbmtccktc@3-4 x: xlzvxg@12-14 k: zmkskknwkkkmkkwkgkkk@4-9 r: vqrrrrdzpl@3-4 g: ggvbxg@5-8 q: xtrqrmqq@16-18 l: zllllllllllllllwlnll@6-7 s: zsqszss@3-4 g: wghgpg@1-6 z: hzzzzrz@3-8 h: hthfqtccnq@15-18 p: ppppppcpppppppnppppp@3-4 l: qplkdmjntlghjlpxlq@10-12 q: xzqkxdvgrqxqqzzxgjj@6-9 q: qqqvsvqqxq@12-13 g: shgcnjlgvcgqg@5-10 l: llklplllmlsl@3-12 l: vllqfzwnsqslpnvrbkh@14-16 g: gjggggggggggggbzcggg@5-11 m: ssmsmbnspmm@11-13 v: mkqvvvvvmcvvz@2-3 k: mkkchtzqsvkbclgxn@4-7 r: rphrrnrrqwknrktrgsg@6-10 z: vpjhzzzkqzjl@16-18 c: ccccccccccccccchccc@1-10 v: qvvvvzvvvvvv@5-7 j: jjrjjjj@14-16 l: zlgdrlqllgpllfhh@3-6 l: llmllll@3-4 l: smdl@4-11 h: kgqhcpvrbldrhbq@1-15 j: ljjjjjjjjjjjjjjj@7-14 c: ccccccccccccccc@2-10 v: vzvjvvvvvvvvv@4-9 p: flbpmqmhkpt@10-12 q: rtdrqmpcsqrhqqchqczw@16-19 w: vlwxgtmjwrzvqgdwbdw@8-15 c: gkcccslctcmszhc@3-7 f: hhffhbbtbwzw@4-9 s: msbsxssds@13-15 p: pppppppppcpppxldp@6-7 m: mmmmmqmm@11-12 m: mxmmzwmmmdqpmp@7-12 l: gncmgzxlqcllqgt@12-14 t: tttttttttttdtt@2-6 f: ffffffbrfffp@14-17 h: hhdhpphhhhhhkhhxqph@7-9 x: xxxxxxxxqxxxxxx@5-18 j: vlwgjljtljtrdbxjnjwm@5-7 n: jmncnsndnbwx@8-9 r: rrrrrrrrr@11-17 j: jjjjjjjjjjjjjjpjr@5-6 x: xxxxjt@13-15 l: nshmnjgzhmjdzvl@9-10 r: wmsvzxsrqnnhfr@8-11 k: kkkxxrkpktg@1-7 r: rrrrrrrfrrrjwrd@5-7 t: rztvtvplbrk@2-7 w: wwwwwwsw@1-2 g: sgggk@12-13 j: jjjjjwjjjjvvjjjrjs@1-2 c: cccccc@3-5 g: khgzr@9-16 b: bbbbbbcbsbbbbbbb@12-13 z: zzzzzzzzzszkz@4-5 r: rkrrrr@1-2 t: tgbqtddbmq@1-2 w: wkwwwww@14-15 q: qqdqqqqqqqqhqnb@6-7 r: rrrrrdmrr@8-9 j: jjjjjjjqhjjjjj@3-6 t: gwmlntffstzllvs@6-8 h: hhhhnhhhqh@9-11 w: cwcwwwwwgxwwbw@5-9 w: wwwwcwwww@8-12 k: snjmkkhrgkkzkkpskk@3-6 q: lvqjqlq@3-4 z: zzzn@9-12 t: dvmvhttxtmzhrr@3-7 k: kkkkkkskkkkkk@6-15 v: vqvvvdvvvvbvvvvvvvvv@3-4 z: jzzzzzdk@8-12 b: bbbbbbbbbbbs@3-9 m: nvhwmwgmmqkbmmmzb@8-10 r: npwjcgwrwcrx@1-5 r: rxdrr@6-9 p: ppppppsbkmppkp@1-4 j: jjjqjjjz@6-7 b: rblbbbbbbp@5-9 t: tttttttttf@8-9 c: czcccccccc@13-14 j: jjjbjjtbjjjjjj@3-8 p: pwppzqvp@3-12 m: mmzmmmmmmmmmmm@3-9 d: ddjddddddqddd@3-4 q: qqfq@6-14 m: mmmmmbmmmmwmmlmmmm@3-4 c: glgzc@6-7 t: ttttttt@1-4 s: sssbs@5-8 r: drrkrrrzrrrr@10-12 q: rvqfqqkllqqqlfrq@11-13 s: szsssssssssssss@8-11 t: tttttttsttvt@11-15 j: zjjjjjjjjjjjjjjjjj@2-4 s: dvfs@3-4 q: zhpq@10-11 c: cccccccccckc@5-11 h: pnrjhtdlkzvhh@5-9 l: nlllxgnrlllllllmq@3-4 f: gfff@8-9 g: grgggggbg@3-4 j: pfwjhh@2-5 l: jlfjr@2-4 l: lblv@3-10 q: qqvzhnqqhqvqq@11-15 t: tfttttttktwttts@12-14 b: gqptrzwclbdbfqd@1-4 r: crrprr@5-13 v: qvdvvvdnrqmrqp@9-12 r: rwrrlsrrsrrjgdnrrr@4-6 c: ccldccnp@16-17 q: qqqqqpqqqqlqqqqmlq@2-8 w: wwwwwwwhwmwws@3-6 m: dmmbmmdmkxm@6-13 t: xflrtblvcvfxnlf@2-6 m: pmnsmm@13-15 k: kstfvnkkgfvvkbk@4-10 w: jqwcwlcwcwvqbfzfzfm@1-5 d: ddndbmjxhfqqn@13-16 p: pzvbszhqtpklpkpdw@2-4 t: thttwmxjsbtp@8-10 s: zbsvjcssfmf@3-5 l: lltlwlllll@12-14 g: hgfvvfpnrvpfggnss@3-13 q: cjmbvgxchmqdqcvc@12-16 j: cjjjjjjjjjjqjjjjjj@1-5 m: kqrgm@11-14 x: xcjpwbrrffxkfxh@12-14 c: kgfnccxqczkcjkcc@3-4 f: sfftf@1-3 f: ffdz@12-14 t: xftfxmkttdsttg@4-9 f: ffhcgfffffff@9-10 b: zjlbbsbzbx@9-14 m: hhxmlmmmzmmtmm@3-5 t: tkcpzjwr@6-9 k: wkfdwflgrntrknsr@1-4 l: gfml@9-10 z: zzzzzzzzzrzzzz@9-11 h: hhhhhhhhhhzhh@1-9 k: kkkkkkkkzkkkkkkk@2-7 h: sswmmkhkvhw@2-5 m: pmbnnmzrkk@9-12 f: xhpfbfdffkfw@3-4 g: gfwg@11-12 n: nnnnnnnnnnnpnnnxn@5-6 d: dddddgddd@7-9 j: cbjgnjqjgj@9-14 r: rrrrrrrhrrrrrzbrr@4-5 p: prphk@2-4 d: dpdd@5-15 p: zjsppzhqqgqspcppqpps@2-7 r: rrrrrrfwrr@1-3 h: hhqh@14-16 g: zgvdgspkjrrvcgdlxg@4-6 c: psgqccccvc@9-14 q: qdqjqmttdtcqggqpqn@13-18 f: ffffffffffffgffffff@8-9 g: gggggggggggg@11-12 x: xxxxxxxxxxxr@2-17 c: cxcccfchcccccccbbcm@7-11 b: nwbrzndvrfxwt@3-4 x: xhwxxxv@16-17 r: rzrrnrrrvxrrzrrrrrr@2-3 f: zcvgbmxvwp@5-6 b: fwbbbf@6-10 m: mmmmmpmmmw@2-4 n: bnnvndbpvzj@3-4 t: dftfhdngqp@1-2 v: vtvvvvvvvvv@2-3 v: vgvv@9-10 s: tsvsshsssgssssmsksss@6-7 t: ttttttxt@3-4 c: jcrc@5-8 l: ztlmjljlb@4-5 w: bwwwww@11-14 r: rrrbrrrrrrnrrrs@10-16 z: zzzzznzzzwzzzzzzzz@7-13 m: mmmmmmfmmmmmmmmmmmmm@15-19 w: fflzcwftmcswcwwnwts@10-19 b: bjbbbbbbmwbbbbbbbbtb@14-16 x: xxxxpxxpxxqxdqxxxx@8-13 r: rkzrjbxrgwkhnb@5-18 r: rrrzfkrrrrrrrrtrrnrr@4-5 b: bbbfzb@6-10 q: qnscxqqfqb@8-13 w: wwwwwwwfwwwwwwwwww@10-11 n: scvnsnpgnjnmdpnwct@7-11 p: pjpppppdqpjpfppsptp@7-9 n: jfsvclhfm@3-8 h: whsggqscd@2-12 r: mrmpxhrqsdmqpjshvck@2-4 g: gdgggg@7-12 s: ssssssssgsss@7-11 l: dlklllnjlslbl@5-11 k: kkkkkkkkkkkkkkk@6-9 g: dhtvcgmfrjhk@4-5 m: lmmmhmsmmmmmcmmmmzmm@11-13 t: zgtnkjzmtkttmtkc@6-7 b: bbbbbbv@3-4 q: qqcq@12-16 z: zzzszjzszzczmxtzzcl@2-5 w: wwfhp@1-2 d: gddkd@5-12 f: fwqgbvrcfmwb@2-5 w: bnxcw@3-15 t: ncwftppphsxvztttjs@7-10 p: ppnsppkcppsp@5-6 v: vvrdvv@5-6 z: hczwbzz@3-12 p: gcphfgmzfkflspmxg@14-19 m: jmfmfjpvbmfmmrdkdnzp@6-7 p: pdwzppppp@4-7 b: bbbnbbqbb@7-8 r: frrrrrxxr@8-18 b: jbphpzgvnppwhkxfzs@1-5 c: pvhcc@4-8 z: fzznzjzztstzxrz@5-10 v: jvvwvvvlvlvqc@7-14 p: svgrzfpxkdpbhph@5-7 n: nncmvkn@11-12 r: rrlrbrrrvrrr@1-5 r: vtngrndhqf@2-4 k: knjp@11-14 h: hhghhhhhhhxhhwhhh@16-18 r: rrrrrrrrrrrrrrrpnb@10-14 d: dpddbvdtdmxfdddd@2-4 t: cztt@5-6 r: rzrprd@2-5 n: ngwdngc@1-6 q: qqqzzwwqqqkqqq@7-8 l: lllzllpxl@1-4 b: kmltzzjzbppgwq@1-4 t: ttttb@3-4 p: dkxpcph@7-15 z: zzzzzzhzzzzzzzzzz@4-7 c: cdljfccm@3-8 p: hbpxhlmc@4-5 w: wwwlw@14-15 b: lbqbbbkgbbwfbdb@6-10 j: jtjjvpwwthwcsj@5-8 t: ltvtttbtqxtzq@12-13 t: ttttttttjttztxt@16-18 p: ppppppppppppppxpxbpp@4-7 n: nnnrnnnnt@1-2 r: rfrr@5-6 g: ggggvggg@3-4 s: ssbw@3-4 l: ldll@8-10 m: mmmmvmmcjkmg@10-18 w: wwvwwvwwhwwjwwwlwxcm@1-2 x: cxxxxxxxxxxxxx@1-5 b: bbbbkbbb@12-14 z: zwqzrrzzvqqzzszrx@1-5 z: lzzfzzzfz@16-17 t: ftgstrgptwmptxrzt@9-10 b: bbbbbbbzbbbb@8-14 w: wwwwwwwjwwwzwzww@3-4 h: qhnh@2-12 d: dnddddkddddzdxdddd@5-17 x: xxxxxxxxxxxxxxxxx@9-10 h: hhhhtqhhhrh@6-7 p: pfmppppp@5-8 v: vbvvvvvs@4-5 h: qhfhqcb@3-12 d: dlddlhhwvcrdrxwpt@2-3 n: nnwnp@4-8 g: ggggjgfgzgdglgg@4-9 h: vrghsphxhxzsxw@12-18 z: qrzzzfwdcwnzdzkckz@6-8 v: zvmlqwwh@10-14 p: pppxwpndfpwppdpptmpp@12-15 q: qqnqkqkqjgrcqfq@2-4 n: pnszjnnn@2-3 c: zkctcfc@17-20 l: lvjlcclllslzllllwgll@16-17 k: dfgskkfkkkfjhfvfks@1-3 t: tjttltt@2-3 b: bbzbb@8-15 t: dtttttsttlttttzlttj@13-14 v: vvkvvjvgwvvvkvf@7-8 v: tvvvvvvhv@3-10 d: bxktdrtddtdtsh@4-12 j: npwxjjjjbjkq@1-4 l: tlllll@12-13 b: lbhpxbbbvbbbqbbbsbb@9-15 v: vqhsggmpvmqtbzzlq@12-14 f: ffhfjfffqfxqff@15-16 m: jtnsjwpggbpxlhqmk@2-4 n: xptncjsstcl@5-8 q: dmwklqjqnzb@3-4 c: vcgl@1-6 h: hhhhhh@8-9 x: ckblstcdx@5-7 w: vwphwwmwwwww@2-4 x: kxxxdh@10-11 m: kmmvmmmfmksmj@4-7 v: zvrvvvdvvv@1-8 p: npxbwqpxbjrnrv@5-11 t: jfkwttkstrxlgts@1-2 g: ggggg@5-7 p: tpppppr@15-17 v: vvvvvvvvvvvvvvvvvvvv@17-19 w: dwjwjznczwgfmkmhdtw@10-13 f: fffffbqfffffffffff@4-14 g: ggggggggggggggg@2-3 d: bdkfd@7-8 x: xxxxxxxx@6-9 h: hmshdhvvhkhbhcshs@14-15 g: gggggggggggggghg@2-16 q: qqsxqqqdgqqghqqk@3-17 p: ppbppprppppppppphppp@8-18 v: vczfvqcvvcspndvxwjdv@1-3 d: fdddd@9-11 j: gfjjnjsdnhb@8-10 s: hkhshttssl@5-10 f: ffsffffffqxfff@7-10 w: wwlwwckwwf@4-8 x: blxxmtbgnblfgnfwz@4-5 p: rlpkprppp@13-14 s: ssssssssssssswss@4-8 h: hhhdhmhhhjhlhh@6-7 h: chhhhhfhzqhdhhh@15-17 m: msvrmwzkzvmmgrmmpm@4-6 x: qgtwwxhgsxxmklgmn@4-7 p: rpzkdpp@3-4 v: vvvhvjv@16-18 p: pppppppppppppppppmp@15-17 k: kpkkkkkhqkkkkklktk@5-7 s: ssbxxsk@2-4 l: cwllll@6-9 v: cvvrrkvrvsdvfwcv@1-7 w: qwwwwslwwwwwwwwrww@2-12 c: clcccccccccccccc@5-10 m: ftcmrpmvrzc@7-11 w: wwwwwwwwwwtwwwww@2-3 n: jngdlvgcvtkmn@1-8 v: hvvvvvvvvv@3-17 p: jrpvltxlcqgpfxwsj@1-5 k: kkkkfkk@1-10 c: cccccccccfc@13-19 f: flfffffxfvffffprfmcb@3-6 g: htglsbvrzcghjmd@9-11 h: wrwghhhhnzhxl@5-12 z: zzkzzhnjpmkvzzzw@7-11 w: qrwcwwstwddw@15-19 m: mmmmmmmmmmmmmmmmmmmm@15-16 m: mmmmmmmmmmmmmmhmm@12-16 x: xxxxxcxxxxxlxxxxxxx@5-10 l: qwfqlllgsdjrlspll@3-4 f: hffmfffg@6-7 l: lwlllbllnl@11-20 t: tttkrtlpttwftmwttttt@11-12 d: ddbdddddddpktdd@4-11 w: sxkmkwdwwnlwxmdvfx@4-5 k: kkzkpk@13-20 n: nnnnnntnnnnnbnnnbnnn@5-7 c: ccccwcc@1-6 h: cckkhhdhhwmhhmzchhwx@1-15 b: hbbbbbbbbhbbhbbbbnbb@1-2 w: mwwww@1-2 f: sfzgwtf@3-4 s: sssj@1-3 w: xwww@1-16 p: ppppppppdppppppp@1-6 c: ccxmccccc@4-8 b: rtpbcfbr@9-10 s: sszssstshss@15-16 x: xxxtxxxxxxxmxxxzx@9-15 k: kkkkkkkkkkgrkkkkk@11-13 x: xtxxxxxxxxrxkxx@1-5 f: rffflfffnf@14-16 n: nnxnnnnnnnnnbnzbnnn@3-6 d: ddddddndbdfdhd@14-15 q: sbqqhvqqqvqgxfq@5-6 b: jglbfjb@1-10 l: llllllcllsll@3-5 z: lwzzz@5-12 k: kkkkmkkkkkkkkkkl@8-12 v: vvtsvfvnzvhpm@5-7 l: llllllll@4-7 f: nqfffkbdf@4-8 j: jjjljkhj@9-15 h: vgzpgfhfhmwdhbqc@1-5 p: ptpsjqpnp@5-8 q: qbqqwqnq@5-7 w: wwswwxsb@3-6 h: nnhrnhkmxqkt@1-3 w: jwwww@2-14 x: cxxxxdxxxxxxxbxx@12-14 x: xxxfxxxxqxxrxt@4-9 f: fffkffbsfkxv@12-13 m: mmmmmmmmmmmwm@6-10 p: ppppphpppxppp@9-12 v: vsvvvvkmjvvvn@3-12 r: shngvhbmjrpr@12-13 w: wqwcwxclwwwfw@4-5 r: nnrrdz@4-19 c: vbcpwzvxssccqkqgmxvj@1-6 g: tglxhggng@9-10 z: lvzhvtglzf@10-16 f: gddxfftggfbmxwts@4-12 k: kkkklkkkkkkpkkk@7-11 m: mmmmmmmmmmtm@2-10 z: vkfpjrrvlwlbjwk@3-7 w: dtdzwjqgxdwjhchwwd@13-14 v: vvvvvvvvvvvvvvvv@11-12 c: cjccccqccccc@14-15 h: hzhrhkhfthrhxht@3-5 v: dtwvvvvvcvvvrvsvvv@10-14 q: qhqqkqcqqqqqlfqgsqq@3-14 f: ffvffffffffzffffff@1-12 x: xxtxjxzxxxxxlxxxxxxx@2-4 c: pgpc@1-4 r: fdrr@5-7 r: rrrrrrt@10-11 d: drdddddddmddddpd@2-5 f: gfrlctftzr@10-13 z: nrzjjrzjzzplzmzzbn@8-10 c: cccccccgbc@5-8 g: fgggcndwgggbjnfgb@6-9 d: ddddghdgbddm@3-7 j: ftjjjvjqcp@5-6 s: sqvfstz@5-18 k: kkkwkkkkkkbkkkkkkkbk@3-6 f: djffffkff@4-6 p: pqppppr@5-9 h: hhkhjhmgcqvfhqvhn@8-12 t: tttttttvttttt@14-15 z: pzrzhjqmtbcnzdzr@1-17 s: ssssssssssssswsss@1-4 s: ssqh@1-5 r: rrrrrrr@17-18 h: hhhhhrhcxhhhhhhhhb@7-9 t: dttttjmtv@1-3 c: mcccp@4-5 x: xprbxql@1-5 q: cqqqqqq@3-4 g: ggggw@1-7 f: ffffffnf@7-9 t: ttttttttttt@11-15 m: mmlmfmmmmmmmmmmqm@4-5 n: npnnnn@4-5 b: zvbbvbjhlkf@11-16 c: gnqmcvtzwpcbvncwcc@12-18 q: qbqkwqqvqwqqnljsqpqt@6-10 r: wcrtdrlkgjr@16-17 p: gppppppppwvlgpptp@1-13 g: gqghbwqqzwwdk@1-6 l: rlllll@3-7 j: pdjjtcqwbqtpfkjbwgq@7-17 z: zzhsnjrhrzzfrqszdhdg@6-7 n: xnvnhnrn@6-7 r: rrrrrrzr@2-3 c: ccmcccc@2-3 v: vvdv@3-9 f: mlfffshbfdff@11-13 v: dfvkltvjvvvvx@12-13 c: mqrccccbccbgcccccvc@9-13 w: wwwwwwwwwwwwcwtww@6-8 d: pdvgddtmvwdkvdtzf@1-9 s: hsssssssssdsls@1-5 c: zbsslcd@1-4 p: bpppppppppp@13-16 s: sssxslsscssbqsspcs@1-10 p: pskwpppzpppppks@3-5 c: ccppccmcc@10-11 b: rhbbbbbbbzbb@2-3 d: ndhjhd@3-4 s: sscs@5-6 d: dtwwnt@4-5 d: dddddddd@5-9 z: zztzvzzzz@2-6 v: vpqdll@13-14 d: nxkmbkkpxkcdld@1-3 s: ssss@8-14 z: zzzzzzzzzzzzzbz@16-17 f: fffnffffffftbzffpkf@3-4 m: mtcm@3-4 r: mrdrd@11-13 k: ljkmhdkkkcpjzlmkkzkk@2-3 d: tdqnxpd@3-7 h: mrvdlthxchpvwvssqpk@13-17 j: jjfjjvjjjjjzjsjjksxr@1-4 n: rnnx@7-10 m: mmmmzmxfmm@1-6 r: lrrvrrrrm@4-18 r: rrrdrrrrrrrrrkblrr@6-7 k: kkkkkkl@4-6 v: vmnfvvvvmcmlh@6-9 g: jgcgggkbbmgbs@7-8 t: ttcfwtgjtcttv@3-4 j: tjjj@"
  .byte 0
  // Buffer used for stringified number being printed
  printf_buffer: .fill SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER, 0

