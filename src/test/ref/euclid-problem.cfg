@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@4
main::@4: scope:[main]  from main main::@2
  [5] (byte) main::b#10 ← phi( main::@2/(byte) main::b#11 main/(byte) 2 )
  [5] (byte) main::a#13 ← phi( main::@2/(byte) main::a#1 main/(byte) $80 )
  [6] (byte) main::a#1 ← (byte) main::a#13 - (byte) main::b#10
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  [7] (byte) main::b#11 ← phi( main::@4/(byte) main::b#10 main::@5/(byte) main::b#1 )
  [8] if((byte) main::a#1!=(byte) main::b#11) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [9] *((const byte*) SCREEN#0) ← (byte) main::a#1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [10] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [11] if((byte) main::a#1>(byte) main::b#11) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@2
  [12] (byte) main::b#1 ← (byte) main::b#11 - (byte) main::a#1
  to:main::@1
