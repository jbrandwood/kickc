@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [5] (byte) main::b#2 ← phi( main/(byte) 0 main::@1/(byte) main::b#1 )
  [6] (byte) main::b2#0 ← (byte) $c8 - (byte) main::b#2
  [7] *((const byte*) SCREEN#0 + (byte) main::b#2) ← (byte) main::b2#0
  [8] (signed byte) main::sb#0 ← - (signed byte)(byte) main::b#2
  [9] *((const byte*) SCREEN2#0 + (byte) main::b#2) ← (byte)(signed byte) main::sb#0
  [10] (byte) main::b#1 ← ++ (byte) main::b#2
  [11] if((byte) main::b#1!=(byte) $65) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [12] phi()
  [13] call w 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [14] return 
  to:@return

(void()) w()
w: scope:[w]  from main::@2
  [15] phi()
  to:w::@1
w::@1: scope:[w]  from w w::@1
  [16] (byte) w::i#2 ← phi( w/(byte) 0 w::@1/(byte) w::i#1 )
  [17] (byte) w::b2#0 ← (byte)(number) $578-(number) $546 + (byte) w::i#2
  [18] *((const byte*) SCREEN3#0 + (byte) w::i#2) ← (const byte) w::b#0
  [19] *((const byte*) SCREEN4#0 + (byte) w::i#2) ← (byte) w::b2#0
  [20] (byte) w::i#1 ← ++ (byte) w::i#2
  [21] if((byte) w::i#1!=(byte) $b) goto w::@1
  to:w::@return
w::@return: scope:[w]  from w::@1
  [22] return 
  to:@return
