@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call printf_str 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call printf_uint 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call printf_str 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [10] return 
  to:@return

(void()) printf_str((byte*) printf_str::str)
printf_str: scope:[printf_str]  from main main::@2
  [11] (byte*) screen#25 ← phi( main/(byte*) 1024 main::@2/(byte*) screen#16 )
  [11] (byte*) printf_str::str#5 ← phi( main/(const byte*) main::str main::@2/(const byte*) main::str1 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [12] (byte*) screen#13 ← phi( printf_str/(byte*) screen#25 printf_str::@2/(byte*) screen#1 )
  [12] (byte*) printf_str::str#3 ← phi( printf_str/(byte*) printf_str::str#5 printf_str::@2/(byte*) printf_str::str#0 )
  [13] if((byte) 0!=*((byte*) printf_str::str#3)) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [14] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [15] *((byte*) screen#13) ← *((byte*) printf_str::str#3)
  [16] (byte*) screen#1 ← ++ (byte*) screen#13
  [17] (byte*) printf_str::str#0 ← ++ (byte*) printf_str::str#3
  to:printf_str::@1

(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@1
  [18] *((byte*) screen#13) ← *((const to_nomodify byte*) printf_hextab)
  [19] (byte*) screen#3 ← ++ (byte*) screen#13
  [20] *((byte*) screen#3) ← *((const to_nomodify byte*) printf_hextab+>(const word) main::pct&(byte) $f)
  [21] (byte*) screen#4 ← ++ (byte*) screen#3
  [22] *((byte*) screen#4) ← *((const to_nomodify byte*) printf_hextab+<(const word) main::pct>>(byte) 4)
  [23] (byte*) screen#5 ← ++ (byte*) screen#4
  [24] *((byte*) screen#5) ← *((const to_nomodify byte*) printf_hextab+<(const word) main::pct&(byte) $f)
  [25] (byte*) screen#16 ← ++ (byte*) screen#5
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint
  [26] return 
  to:@return
