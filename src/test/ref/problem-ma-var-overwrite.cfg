
(void()) _start()
_start: scope:[_start]  from
  [0] phi()
  to:_start::_init1
_start::_init1: scope:[_start]  from _start
  [1] (volatile byte*) h1 ← (byte*) 0
  to:_start::@1
_start::@1: scope:[_start]  from _start::_init1
  [2] phi()
  [3] call main 
  to:_start::@return
_start::@return: scope:[_start]  from _start::@1
  [4] return 
  to:@return

(void()) main()
main: scope:[main]  from _start::@1
  [5] (byte*) test::videoMem#0 ← (volatile byte*) h1
  [6] call test 
  to:main::@return
main::@return: scope:[main]  from main
  [7] return 
  to:@return

(void()) test((byte*) test::videoMem , (byte*) test::colorMem , (byte*) test::other)
test: scope:[test]  from main
  [8] (byte*) test::dst ← (byte*) 0
  [9] (word) test::diff#1 ← (const byte*) test::colorMem#0 - (byte*) test::videoMem#0
  [10] (byte*~) test::$1 ← (const byte*) test::other#0 + (word)(byte*)(word) test::diff#1
  [11] (byte*) test::dst ← (byte*~) test::$1
  [12] *((byte*) test::dst) ← (byte) 1
  asm { ldy#0 lda#1 sta(dst),y  }
  to:test::@return
test::@return: scope:[test]  from test
  [14] return 
  to:@return
