@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] (byte) main::i ← (byte) 0
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) sub1::i#0 ← (byte) main::i
  [6] call sub1 
  [7] (byte) sub1::return#0 ← (byte) sub1::return#1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] (byte~) main::$0 ← (byte) sub1::return#0
  [9] *((const byte*) main::SCREEN + (byte) main::i) ← (byte~) main::$0
  [10] (byte) sub2::i#0 ← (byte) main::i
  [11] call sub2 
  [12] (byte) sub2::return#0 ← (byte) sub2::return#1
  to:main::@3
main::@3: scope:[main]  from main::@2
  [13] (byte~) main::$1 ← (byte) sub2::return#0
  [14] *((const byte*) main::SCREEN+(byte) $28 + (byte) main::i) ← (byte~) main::$1
  [15] (byte) main::i ← ++ (byte) main::i
  [16] if((byte) main::i!=(byte) 3) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [17] return 
  to:@return

(byte()) sub2((byte) sub2::i)
sub2: scope:[sub2]  from main::@2
  [18] (byte~) sub2::$0 ← (byte) sub2::i#0 + (byte) sub2::i#0
  [19] (byte) sub2::return#1 ← (byte~) sub2::$0 + (byte) sub2::i#0
  to:sub2::@return
sub2::@return: scope:[sub2]  from sub2
  [20] return 
  to:@return

(byte()) sub1((byte) sub1::i)
sub1: scope:[sub1]  from main::@1
  [21] (byte) sub1::return#1 ← (byte) sub1::i#0 + (byte) sub1::i#0
  to:sub1::@return
sub1::@return: scope:[sub1]  from sub1
  [22] return 
  to:@return
