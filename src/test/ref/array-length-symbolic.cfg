@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@1
@1: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main  [ ] ( )
  to:@end
@end: scope:[]  from @1
  [3] phi() [ ] ( )
main: scope:[main]  from @1
  [4] phi() [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte*) main::cur_item#4 ← phi( main/(const byte[ITEM_COUNT#0*ITEM_SIZE#0]) items#0 main::@3/(byte*) main::cur_item#1 ) [ main::item#4 main::cur_item#4 ] ( main:2 [ main::item#4 main::cur_item#4 ] )
  [5] (byte) main::item#4 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@3/(byte) main::item#1 ) [ main::item#4 main::cur_item#4 ] ( main:2 [ main::item#4 main::cur_item#4 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [6] (byte) main::sub#2 ← phi( main::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@2/(byte) main::sub#1 ) [ main::item#4 main::cur_item#4 main::sub#2 ] ( main:2 [ main::item#4 main::cur_item#4 main::sub#2 ] )
  [7] (byte~) main::$2 ← (byte) main::item#4 << (byte/signed byte/word/signed word/dword/signed dword) 4 [ main::item#4 main::cur_item#4 main::sub#2 main::$2 ] ( main:2 [ main::item#4 main::cur_item#4 main::sub#2 main::$2 ] )
  [8] (byte~) main::$3 ← (byte~) main::$2 | (byte) main::sub#2 [ main::item#4 main::cur_item#4 main::sub#2 main::$3 ] ( main:2 [ main::item#4 main::cur_item#4 main::sub#2 main::$3 ] )
  [9] *((byte*) main::cur_item#4 + (byte) main::sub#2) ← (byte~) main::$3 [ main::item#4 main::cur_item#4 main::sub#2 ] ( main:2 [ main::item#4 main::cur_item#4 main::sub#2 ] )
  [10] (byte) main::sub#1 ← ++ (byte) main::sub#2 [ main::item#4 main::cur_item#4 main::sub#1 ] ( main:2 [ main::item#4 main::cur_item#4 main::sub#1 ] )
  [11] if((byte) main::sub#1!=(const byte) ITEM_SIZE#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto main::@2 [ main::item#4 main::cur_item#4 main::sub#1 ] ( main:2 [ main::item#4 main::cur_item#4 main::sub#1 ] )
  to:main::@3
main::@3: scope:[main]  from main::@2
  [12] (byte*) main::cur_item#1 ← (byte*) main::cur_item#4 + (const byte) ITEM_SIZE#0 [ main::item#4 main::cur_item#1 ] ( main:2 [ main::item#4 main::cur_item#1 ] )
  [13] (byte) main::item#1 ← ++ (byte) main::item#4 [ main::item#1 main::cur_item#1 ] ( main:2 [ main::item#1 main::cur_item#1 ] )
  [14] if((byte) main::item#1!=(const byte) ITEM_COUNT#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto main::@1 [ main::item#1 main::cur_item#1 ] ( main:2 [ main::item#1 main::cur_item#1 ] )
  to:main::@return
main::@return: scope:[main]  from main::@3
  [15] return  [ ] ( main:2 [ ] )
  to:@return
