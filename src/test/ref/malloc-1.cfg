
(void()) _start()
_start: scope:[_start]  from
  [0] phi()
  to:_start::_init1
_start::_init1: scope:[_start]  from _start
  [1] phi()
  [2] call malloc 
  to:_start::@1
_start::@1: scope:[_start]  from _start::_init1
  [3] phi()
  [4] call main 
  to:_start::@return
_start::@return: scope:[_start]  from _start::@1
  [5] return 
  to:@return

(void()) main()
main: scope:[main]  from _start::@1
  [6] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [7] (word*) main::w#2 ← phi( main/(const word*) WORDS#0 main::@1/(word*) main::w#1 )
  [7] (byte) main::i#2 ← phi( main/(byte) 0 main::@1/(byte) main::i#1 )
  [8] *((word*) main::w#2) ← (byte) main::i#2
  [9] (word*) main::w#1 ← (word*) main::w#2 + (const byte) SIZEOF_WORD
  [10] (byte) main::i#1 ← ++ (byte) main::i#2
  [11] if((byte) main::i#1!=(byte) 0) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@1
  [12] return 
  to:@return

(void*()) malloc((word) malloc::size)
malloc: scope:[malloc]  from _start::_init1
  [13] phi()
  to:malloc::@return
malloc::@return: scope:[malloc]  from malloc
  [14] return 
  to:@return
