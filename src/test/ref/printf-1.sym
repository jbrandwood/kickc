(label) @1
(label) @2
(label) @begin
(label) @end
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@return
(const byte*) main::str[(byte) 4]  = (byte*) "cml"
(const byte*) main::str1[(byte) 6]  = (byte*) "rules"
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(const void*) memcpy::destination#0 destination = (void*) 1024
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:11 1.00000001E8
(byte*) memcpy::dst#2 dst zp[2]:11 1.00000001E8
(word) memcpy::num
(const word) memcpy::num#0 num = (word)(number) $28*(number) $19-(number) $28
(void*) memcpy::return
(void*) memcpy::source
(const void*) memcpy::source#0 source = (void*)(number) $400+(number) $28
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:9 2.00000002E8
(byte*) memcpy::src#2 src zp[2]:9 1.00000001E8
(byte*) memcpy::src_end
(const byte*) memcpy::src_end#0 src_end = (byte*)(const void*) memcpy::source#0+(const word) memcpy::num#0
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1250000.125
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:11 2.0000002E7
(byte*) memset::dst#2 dst zp[2]:11 1.3666668333333332E7
(byte*) memset::dst#4 dst zp[2]:11 2000002.0
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:9 1833333.6666666665
(word) memset::num
(word) memset::num#2 num zp[2]:9 1000001.0
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:11
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(void()) printf_char((byte) printf_char::ch)
(byte*~) printf_char::$6 zp[2]:15 200002.0
(label) printf_char::@1
(label) printf_char::@2
(label) printf_char::@3
(label) printf_char::@4
(label) printf_char::@return
(byte) printf_char::ch
(byte) printf_char::ch#0 reg byte a 20002.0
(byte) printf_char::ch#1 reg byte a 20002.0
(byte) printf_char::ch#2 reg byte a 120003.0
(void()) printf_cls()
(label) printf_cls::@1
(label) printf_cls::@return
(byte*) printf_cursor_ptr loadstore zp[2]:15 9211.973684210527
(byte) printf_cursor_x loadstore zp[1]:13 8001.453333333332
(byte) printf_cursor_y loadstore zp[1]:14 9092.337662337664
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_ln()
(byte*~) printf_ln::$0 zp[2]:15 200002.0
(byte*~) printf_ln::$1 zp[2]:15 200002.0
(label) printf_ln::@return
(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
(label) printf_padding::@1
(label) printf_padding::@2
(label) printf_padding::@3
(label) printf_padding::@return
(byte) printf_padding::i
(byte) printf_padding::i#1 i zp[1]:8 20002.0
(byte) printf_padding::i#2 i zp[1]:8 7500.75
(byte) printf_padding::length
(byte) printf_padding::length#0 length zp[1]:6 202.0
(byte) printf_padding::length#1 length zp[1]:6 202.0
(byte) printf_padding::length#3 length zp[1]:6 1700.5
(byte) printf_padding::pad
(byte) printf_padding::pad#4 pad zp[1]:7 1666.8333333333333
(void()) printf_str((byte*) printf_str::str)
(label) printf_str::@1
(label) printf_str::@2
(label) printf_str::@3
(label) printf_str::@4
(label) printf_str::@5
(label) printf_str::@return
(byte) printf_str::ch
(byte) printf_str::ch#0 reg byte a 10001.0
(byte*) printf_str::str
(byte*) printf_str::str#0 str zp[2]:3 4286.142857142857
(byte*) printf_str::str#1 str zp[2]:3 551.0
(byte*) printf_str::str#2 str zp[2]:3 20502.5
(void()) printf_string((byte*) printf_string::str , (byte) printf_string::format_min_length , (byte) printf_string::format_justify_left)
(word~) printf_string::$9 zp[2]:11 101.0
(label) printf_string::@1
(label) printf_string::@10
(label) printf_string::@2
(label) printf_string::@3
(label) printf_string::@4
(label) printf_string::@5
(label) printf_string::@6
(label) printf_string::@7
(label) printf_string::@8
(label) printf_string::@9
(label) printf_string::@return
(struct printf_format_string) printf_string::format
(byte) printf_string::format_justify_left
(byte) printf_string::format_justify_left#10 format_justify_left zp[1]:2 12.625
(byte) printf_string::format_min_length
(signed byte) printf_string::len
(signed byte) printf_string::len#0 reg byte a 202.0
(signed byte) printf_string::padding
(signed byte) printf_string::padding#1 padding zp[1]:5 101.0
(signed byte) printf_string::padding#3 padding zp[1]:5 33.666666666666664
(byte*) printf_string::str
(byte*) printf_string::str#10 str zp[2]:3 14.428571428571429
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:11 10001.0
(word) strlen::len#2 len zp[2]:11 5025.75
(word) strlen::return
(word) strlen::return#2 return zp[2]:11 202.0
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:9 20002.0
(byte*) strlen::str#1 str zp[2]:9 551.0
(byte*) strlen::str#2 str zp[2]:9 10334.666666666666

zp[1]:2 [ printf_string::format_justify_left#10 ]
zp[2]:3 [ printf_string::str#10 printf_str::str#2 printf_str::str#1 printf_str::str#0 ]
zp[1]:5 [ printf_string::padding#3 printf_string::padding#1 ]
zp[1]:6 [ printf_padding::length#3 printf_padding::length#0 printf_padding::length#1 ]
zp[1]:7 [ printf_padding::pad#4 ]
zp[1]:8 [ printf_padding::i#2 printf_padding::i#1 ]
reg byte a [ printf_char::ch#2 printf_char::ch#0 printf_char::ch#1 ]
reg byte x [ memset::c#4 ]
zp[2]:9 [ strlen::str#2 strlen::str#1 strlen::str#0 memcpy::src#2 memcpy::src#1 memset::num#2 memset::end#0 ]
zp[2]:11 [ strlen::len#2 strlen::len#1 strlen::return#2 printf_string::$9 memcpy::dst#2 memcpy::dst#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
zp[1]:13 [ printf_cursor_x ]
zp[1]:14 [ printf_cursor_y ]
zp[2]:15 [ printf_cursor_ptr printf_char::$6 printf_ln::$0 printf_ln::$1 ]
reg byte a [ printf_string::len#0 ]
reg byte a [ printf_str::ch#0 ]
