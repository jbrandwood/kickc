
void main()
main: scope:[main]  from
  [0] phi()
  to:main::sei1
main::sei1: scope:[main]  from main
  asm { sei  }
  to:main::@28
main::@28: scope:[main]  from main::sei1
  [2] phi()
  [3] call memset 
  to:main::toD0181
main::toD0181: scope:[main]  from main::@28
  [4] phi()
  to:main::@29
main::@29: scope:[main]  from main::toD0181
  [5] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = main::toD0181_return#0
  [6] call next_position 
  to:main::@1
main::@1: scope:[main]  from main::@24 main::@29
  [7] screen_buffer#12 = phi( main::@24/screen_buffer#26, main::@29/0 )
  [8] main::x_pos_coarse_old#0 = x_pos_coarse#17
  [9] main::y_pos_coarse_old#0 = y_pos_coarse#16
  [10] call next_position 
  to:main::@32
main::@32: scope:[main]  from main::@1
  [11] main::$5 = main::y_pos_coarse_old#0 - y_pos_coarse#16
  [12] main::y_movement#0 = (signed byte)main::$5
  [13] if(main::y_movement#0==1) goto main::@2
  to:main::@25
main::@25: scope:[main]  from main::@32
  [14] if(main::y_movement#0!=-1) goto main::@2
  to:main::@26
main::@26: scope:[main]  from main::@25
  [15] phi()
  to:main::@2
main::@2: scope:[main]  from main::@25 main::@26 main::@32
  [16] main::movement#4 = phi( main::@32/-$28, main::@25/0, main::@26/$28 )
  [17] main::$9 = main::x_pos_coarse_old#0 - x_pos_coarse#17
  [18] main::x_movement#0 = (signed byte)main::$9
  [19] main::movement#3 = main::movement#4 - main::x_movement#0
  [20] if(0==main::movement#3) goto main::@21
  to:main::@27
main::@27: scope:[main]  from main::@2
  [21] if(0!=screen_buffer#12) goto main::@3
  to:main::@4
main::@3: scope:[main]  from main::@27
  [22] phi()
  to:main::@4
main::@4: scope:[main]  from main::@27 main::@3
  [23] main::$13 = phi( main::@3/MAIN_SCREEN1, main::@27/MAIN_SCREEN0 )
  [24] main::screen_active#0 = main::$13 + main::movement#3
  [25] if(0!=screen_buffer#12) goto main::@5
  to:main::@6
main::@5: scope:[main]  from main::@4
  [26] phi()
  to:main::@6
main::@6: scope:[main]  from main::@4 main::@5
  [27] main::screen_hidden#0 = phi( main::@5/MAIN_SCREEN0, main::@4/MAIN_SCREEN1 )
  [28] screencpy::dst#0 = main::screen_hidden#0
  [29] screencpy::src#0 = main::screen_active#0
  [30] call screencpy 
  to:main::@33
main::@33: scope:[main]  from main::@6
  [31] if(0==main::y_movement#0) goto main::@7
  to:main::@17
main::@17: scope:[main]  from main::@33
  [32] if(main::y_movement#0==-1) goto main::@8
  to:main::@18
main::@18: scope:[main]  from main::@17
  [33] petscii_ptr::row_x#1 = x_pos_coarse#17 - $14
  [34] petscii_ptr::row_y#1 = y_pos_coarse#16 - $c
  [35] call petscii_ptr 
  [36] petscii_ptr::return#1 = petscii_ptr::return#10
  to:main::@35
main::@35: scope:[main]  from main::@18
  [37] main::petscii#2 = petscii_ptr::return#1
  [38] main::scrn#13 = main::screen_hidden#0
  to:main::@9
main::@9: scope:[main]  from main::@34 main::@35
  [39] main::scrn#10 = phi( main::@34/main::scrn#1, main::@35/main::scrn#13 )
  [39] main::petscii#10 = phi( main::@34/main::petscii#1, main::@35/main::petscii#2 )
  to:main::@10
main::@10: scope:[main]  from main::@11 main::@9
  [40] main::i#2 = phi( main::@9/0, main::@11/main::i#1 )
  [41] if(main::i#2<$28) goto main::@11
  to:main::@7
main::@7: scope:[main]  from main::@10 main::@33
  [42] if(0==main::x_movement#0) goto main::@12
  to:main::@19
main::@19: scope:[main]  from main::@7
  [43] if(main::x_movement#0==-1) goto main::@13
  to:main::@20
main::@20: scope:[main]  from main::@19
  [44] petscii_ptr::row_x#3 = x_pos_coarse#17 - $14
  [45] petscii_ptr::row_y#3 = y_pos_coarse#16 - $c
  [46] call petscii_ptr 
  [47] petscii_ptr::return#3 = petscii_ptr::return#10
  to:main::@37
main::@37: scope:[main]  from main::@20
  [48] main::petscii#4 = petscii_ptr::return#3
  to:main::@14
main::@14: scope:[main]  from main::@36 main::@37
  [49] main::scrn#11 = phi( main::@36/main::scrn#3, main::@37/main::screen_hidden#0 )
  [49] main::petscii#11 = phi( main::@36/main::petscii#3, main::@37/main::petscii#4 )
  to:main::@15
main::@15: scope:[main]  from main::@14 main::@16
  [50] main::scrn#7 = phi( main::@14/main::scrn#11, main::@16/main::scrn#5 )
  [50] main::petscii#7 = phi( main::@14/main::petscii#11, main::@16/main::petscii#5 )
  [50] main::i1#2 = phi( main::@14/0, main::@16/main::i1#1 )
  [51] if(main::i1#2<$19) goto main::@16
  to:main::@12
main::@12: scope:[main]  from main::@15 main::@7
  [52] screen_buffer#0 = screen_buffer#12 ^ 1
  to:main::@21
main::@21: scope:[main]  from main::@12 main::@2 main::@21
  [53] screen_buffer#26 = phi( main::@12/screen_buffer#0, main::@21/screen_buffer#26, main::@2/screen_buffer#12 )
  [54] if(*((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_RASTER)!=$fe) goto main::@21
  to:main::@22
main::@22: scope:[main]  from main::@21 main::@22
  [55] if(*((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_RASTER)!=$ff) goto main::@22
  to:main::@23
main::@23: scope:[main]  from main::@22
  [56] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) = WHITE
  [57] main::$41 = *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_CONTROL1) & $f0
  [58] main::$42 = 7 - y_pos_fine#12
  [59] main::$43 = main::$41 | main::$42
  [60] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_CONTROL1) = main::$43
  [61] main::$44 = *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_CONTROL2) & $f0
  [62] main::$45 = 7 - x_pos_fine#12
  [63] main::$46 = main::$44 | main::$45
  [64] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_CONTROL2) = main::$46
  [65] if(0!=screen_buffer#26) goto main::toD0182
  to:main::toD0183
main::toD0183: scope:[main]  from main::@23
  [66] phi()
  to:main::@31
main::@31: scope:[main]  from main::toD0183
  [67] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = main::toD0183_return#0
  to:main::@24
main::@24: scope:[main]  from main::@30 main::@31
  [68] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) = BLACK
  to:main::@1
main::toD0182: scope:[main]  from main::@23
  [69] phi()
  to:main::@30
main::@30: scope:[main]  from main::toD0182
  [70] *((byte*)VICII+OFFSET_STRUCT_MOS6569_VICII_MEMORY) = main::toD0182_return#0
  to:main::@24
main::@16: scope:[main]  from main::@15
  [71] *main::scrn#7 = *main::petscii#7
  [72] main::scrn#5 = main::scrn#7 + $28
  [73] main::petscii#5 = main::petscii#7 + $8c
  [74] main::i1#1 = ++ main::i1#2
  to:main::@15
main::@13: scope:[main]  from main::@19
  [75] petscii_ptr::row_x#2 = x_pos_coarse#17 + $13
  [76] petscii_ptr::row_y#2 = y_pos_coarse#16 - $c
  [77] call petscii_ptr 
  [78] petscii_ptr::return#2 = petscii_ptr::return#10
  to:main::@36
main::@36: scope:[main]  from main::@13
  [79] main::petscii#3 = petscii_ptr::return#2
  [80] main::scrn#3 = main::screen_hidden#0 + $27
  to:main::@14
main::@11: scope:[main]  from main::@10
  [81] main::scrn#10[main::i#2] = main::petscii#10[main::i#2]
  [82] main::i#1 = ++ main::i#2
  to:main::@10
main::@8: scope:[main]  from main::@17
  [83] petscii_ptr::row_x#0 = x_pos_coarse#17 - $14
  [84] petscii_ptr::row_y#0 = y_pos_coarse#16 + $c
  [85] call petscii_ptr 
  [86] petscii_ptr::return#0 = petscii_ptr::return#10
  to:main::@34
main::@34: scope:[main]  from main::@8
  [87] main::petscii#1 = petscii_ptr::return#0
  [88] main::scrn#1 = main::screen_hidden#0 + (word)$18*$28
  to:main::@9

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from main::@28
  [89] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [90] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [91] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [92] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [93] *memset::dst#2 = memset::c#0
  [94] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void next_position()
next_position: scope:[next_position]  from main::@1 main::@29
  [95] y_sin_idx#12 = phi( main::@1/y_sin_idx#13, main::@29/SINSIZE/4 )
  [95] x_sin_idx#12 = phi( main::@1/x_sin_idx#14, main::@29/0 )
  [96] x_sin_idx#13 = ++ x_sin_idx#12
  [97] if(x_sin_idx#13<SINSIZE) goto next_position::@1
  to:next_position::@3
next_position::@3: scope:[next_position]  from next_position
  [98] x_sin_idx#4 = x_sin_idx#13 - SINSIZE
  to:next_position::@1
next_position::@1: scope:[next_position]  from next_position next_position::@3
  [99] x_sin_idx#14 = phi( next_position/x_sin_idx#13, next_position::@3/x_sin_idx#4 )
  [100] y_sin_idx#14 = ++ y_sin_idx#12
  [101] if(y_sin_idx#14<SINSIZE) goto next_position::@2
  to:next_position::@4
next_position::@4: scope:[next_position]  from next_position::@1
  [102] y_sin_idx#4 = y_sin_idx#14 - SINSIZE
  to:next_position::@2
next_position::@2: scope:[next_position]  from next_position::@1 next_position::@4
  [103] y_sin_idx#13 = phi( next_position::@1/y_sin_idx#14, next_position::@4/y_sin_idx#4 )
  [104] next_position::$12 = x_sin_idx#14 << 1
  [105] next_position::$18 = SINTAB + next_position::$12
  [106] x_pos#11 = *next_position::$18
  [107] next_position::$13 = y_sin_idx#13 << 1
  [108] next_position::$19 = SINTAB + next_position::$13
  [109] y_pos#11 = *next_position::$19
  [110] next_position::$4 = (word)x_pos#11
  [111] next_position::x_pos_u#0 = next_position::$4 + $190+$14*8
  [112] next_position::$15 = (byte)next_position::x_pos_u#0
  [113] x_pos_fine#12 = next_position::$15 & 7
  [114] x_pos_coarse#17 = next_position::x_pos_u#0 >> 3
  [115] next_position::$8 = (word)y_pos#11
  [116] next_position::y_pos_u#0 = next_position::$8 + $190+$c*8
  [117] next_position::$17 = (byte)next_position::y_pos_u#0
  [118] y_pos_fine#12 = next_position::$17 & 7
  [119] y_pos_coarse#16 = next_position::y_pos_u#0 >> 3
  to:next_position::@return
next_position::@return: scope:[next_position]  from next_position::@2
  [120] return 
  to:@return

void screencpy(byte* screencpy::dst , byte* screencpy::src)
screencpy: scope:[screencpy]  from main::@6
  [121] screencpy::src_250#0 = screencpy::src#0 + $fa
  [122] screencpy::dst_250#0 = screencpy::dst#0 + $fa
  [123] screencpy::src_500#0 = screencpy::src#0 + $1f4
  [124] screencpy::dst_500#0 = screencpy::dst#0 + $1f4
  [125] screencpy::src_750#0 = screencpy::src#0 + $2ee
  [126] screencpy::dst_750#0 = screencpy::dst#0 + $2ee
  to:screencpy::@1
screencpy::@1: scope:[screencpy]  from screencpy screencpy::@2
  [127] screencpy::i#2 = phi( screencpy/0, screencpy::@2/screencpy::i#1 )
  [128] if(screencpy::i#2<$fa) goto screencpy::@2
  to:screencpy::@return
screencpy::@return: scope:[screencpy]  from screencpy::@1
  [129] return 
  to:@return
screencpy::@2: scope:[screencpy]  from screencpy::@1
  [130] screencpy::dst#0[screencpy::i#2] = screencpy::src#0[screencpy::i#2]
  [131] screencpy::dst_250#0[screencpy::i#2] = screencpy::src_250#0[screencpy::i#2]
  [132] screencpy::dst_500#0[screencpy::i#2] = screencpy::src_500#0[screencpy::i#2]
  [133] screencpy::dst_750#0[screencpy::i#2] = screencpy::src_750#0[screencpy::i#2]
  [134] screencpy::i#1 = ++ screencpy::i#2
  to:screencpy::@1

byte* petscii_ptr(word petscii_ptr::row_x , word petscii_ptr::row_y)
petscii_ptr: scope:[petscii_ptr]  from main::@13 main::@18 main::@20 main::@8
  [135] petscii_ptr::row_x#4 = phi( main::@8/petscii_ptr::row_x#0, main::@13/petscii_ptr::row_x#2, main::@18/petscii_ptr::row_x#1, main::@20/petscii_ptr::row_x#3 )
  [135] petscii_ptr::row_y#4 = phi( main::@8/petscii_ptr::row_y#0, main::@13/petscii_ptr::row_y#2, main::@18/petscii_ptr::row_y#1, main::@20/petscii_ptr::row_y#3 )
  [136] petscii_ptr::$3 = petscii_ptr::row_y#4 << 4
  [137] petscii_ptr::$4 = petscii_ptr::$3 + petscii_ptr::row_y#4
  [138] petscii_ptr::$5 = petscii_ptr::$4 << 1
  [139] petscii_ptr::$6 = petscii_ptr::$5 + petscii_ptr::row_y#4
  [140] petscii_ptr::$0 = petscii_ptr::$6 << 2
  [141] petscii_ptr::$1 = PETSCII_ART + petscii_ptr::$0
  [142] petscii_ptr::return#10 = petscii_ptr::$1 + petscii_ptr::row_x#4
  to:petscii_ptr::@return
petscii_ptr::@return: scope:[petscii_ptr]  from petscii_ptr
  [143] return 
  to:@return
