@begin: scope:[]  from
  [0] call main param-assignment [ ]
  to:@end
@end: scope:[]  from @begin
main: scope:[main]  from @begin
  [1] phi() [ ]
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [2] (byte) main::i#5 ← phi( main/(byte) 100 main::@3/(byte) main::i#1 ) [ main::i#5 ]
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@5
  [3] (byte) main::j#2 ← phi( main::@1/(byte) 100 main::@5/(byte) main::j#1 ) [ main::i#5 main::j#2 ]
  [4] call nest1 param-assignment [ main::i#5 main::j#2 ]
  to:main::@5
main::@5: scope:[main]  from main::@2
  [5] (byte) main::j#1 ← -- (byte) main::j#2 [ main::i#5 main::j#1 ]
  [6] if((byte) main::j#1>(byte) 0) goto main::@2 [ main::i#5 main::j#1 ]
  to:main::@3
main::@3: scope:[main]  from main::@5
  [7] (byte) main::i#1 ← -- (byte) main::i#5 [ main::i#1 ]
  [8] if((byte) main::i#1>(byte) 0) goto main::@1 [ main::i#1 ]
  to:main::@return
main::@return: scope:[main]  from main::@3
  [9] return  [ ]
  to:@return
nest1: scope:[nest1]  from main::@2
  [10] phi() [ ]
  to:nest1::@1
nest1::@1: scope:[nest1]  from nest1 nest1::@3
  [11] (byte) nest1::i#5 ← phi( nest1/(byte) 100 nest1::@3/(byte) nest1::i#1 ) [ nest1::i#5 ]
  to:nest1::@2
nest1::@2: scope:[nest1]  from nest1::@1 nest1::@5
  [12] (byte) nest1::j#2 ← phi( nest1::@1/(byte) 100 nest1::@5/(byte) nest1::j#1 ) [ nest1::i#5 nest1::j#2 ]
  [13] call nest2 param-assignment [ nest1::i#5 nest1::j#2 ]
  to:nest1::@5
nest1::@5: scope:[nest1]  from nest1::@2
  [14] (byte) nest1::j#1 ← -- (byte) nest1::j#2 [ nest1::i#5 nest1::j#1 ]
  [15] if((byte) nest1::j#1>(byte) 0) goto nest1::@2 [ nest1::i#5 nest1::j#1 ]
  to:nest1::@3
nest1::@3: scope:[nest1]  from nest1::@5
  [16] (byte) nest1::i#1 ← -- (byte) nest1::i#5 [ nest1::i#1 ]
  [17] if((byte) nest1::i#1>(byte) 0) goto nest1::@1 [ nest1::i#1 ]
  to:nest1::@return
nest1::@return: scope:[nest1]  from nest1::@3
  [18] return  [ ]
  to:@return
nest2: scope:[nest2]  from nest1::@2
  [19] phi() [ ]
  to:nest2::@1
nest2::@1: scope:[nest2]  from nest2 nest2::@3
  [20] (byte) nest2::i#4 ← phi( nest2/(byte) 100 nest2::@3/(byte) nest2::i#1 ) [ nest2::i#4 ]
  to:nest2::@2
nest2::@2: scope:[nest2]  from nest2::@1 nest2::@2
  [21] (byte) nest2::j#2 ← phi( nest2::@1/(byte) 100 nest2::@2/(byte) nest2::j#1 ) [ nest2::i#4 nest2::j#2 ]
  [22] *((const byte*) SCREEN#0) ← (byte) nest2::j#2 [ nest2::i#4 nest2::j#2 ]
  [23] (byte) nest2::j#1 ← -- (byte) nest2::j#2 [ nest2::i#4 nest2::j#1 ]
  [24] if((byte) nest2::j#1>(byte) 0) goto nest2::@2 [ nest2::i#4 nest2::j#1 ]
  to:nest2::@3
nest2::@3: scope:[nest2]  from nest2::@2
  [25] (byte) nest2::i#1 ← -- (byte) nest2::i#4 [ nest2::i#1 ]
  [26] if((byte) nest2::i#1>(byte) 0) goto nest2::@1 [ nest2::i#1 ]
  to:nest2::@return
nest2::@return: scope:[nest2]  from nest2::@3
  [27] return  [ ]
  to:@return
