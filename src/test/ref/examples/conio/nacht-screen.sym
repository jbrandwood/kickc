const nomodify byte CH_HLINE = $40
const nomodify byte CH_LLCORNER = $6d
const nomodify byte CH_LRCORNER = $7d
const nomodify byte CH_LTEE = $6b
const nomodify byte CH_RTEE = $73
const nomodify byte CH_ULCORNER = $70
const nomodify byte CH_URCORNER = $6e
const nomodify byte CH_VLINE = $5d
const nomodify byte* COLORRAM = (byte*) 55296
const nomodify byte COLOR_BLACK = 0
const nomodify byte COLOR_GRAY3 = $f
const nomodify byte* DEFAULT_SCREEN = (byte*) 1024
const nomodify byte LIGHT_BLUE = $e
void MakeNiceScreen()
word~ MakeNiceScreen::$22 zp[2]:5 1001.0
byte~ MakeNiceScreen::$23 reg byte a 2002.0
byte~ MakeNiceScreen::$34 reg byte a 2002.0
byte MakeNiceScreen::I
byte MakeNiceScreen::I#2 I zp[1]:2 2002.0
byte MakeNiceScreen::I#3 I zp[1]:2 214.5
to_nomodify struct $0* MakeNiceScreen::T
to_nomodify struct $0* MakeNiceScreen::T#2 T zp[2]:3 1001.0
to_nomodify struct $0* MakeNiceScreen::T#3 T zp[2]:3 154.0
const struct $0* MakeNiceScreen::Text[]  = { { Y: 2, Msg: "Wolfgang Amadeus Mozart" }, { Y: 4, Msg: ""Eine kleine Nachtmusik"" }, { Y: 5, Msg: "(KV 525)" }, { Y: 9, Msg: "Ported to the SID in 1987 by" }, { Y: $b, Msg: "Joachim von Bassewitz" }, { Y: $c, Msg: "(joachim@von-bassewitz.de)" }, { Y: $d, Msg: "and" }, { Y: $e, Msg: "Ullrich von Bassewitz" }, { Y: $f, Msg: "(ullrich@von-bassewitz.de)" }, { Y: $12, Msg: "C Implementation by" }, { Y: $13, Msg: "Ullrich von Bassewitz" }, { Y: $17, Msg: "Press any key to quit..." } }
byte MakeNiceScreen::X
byte MakeNiceScreen::X#1 reg byte x 1001.0
void MakeTeeLine(byte MakeTeeLine::Y)
byte MakeTeeLine::Y
byte MakeTeeLine::Y#2 reg byte a 1001.0
const nomodify byte* VIC_MEMORY = (byte*) 53272
volatile byte XSize loadstore zp[1]:21 39.101694915254235
volatile byte YSize loadstore zp[1]:22 20.0
void __start()
byte bgcolor(byte bgcolor::color)
const nomodify byte* bgcolor::CONIO_BGCOLOR = (byte*) 53281
byte bgcolor::color
byte bgcolor::old
byte bgcolor::return
byte bordercolor(byte bordercolor::color)
const nomodify byte* bordercolor::CONIO_BORDERCOLOR = (byte*) 53280
byte bordercolor::color
byte bordercolor::old
byte bordercolor::return
void chline(byte chline::length)
byte chline::i
byte chline::i#1 i zp[1]:8 200002.0
byte chline::i#2 i zp[1]:8 75000.75
byte chline::length
byte chline::length#0 length zp[1]:7 2002.0
byte chline::length#1 length zp[1]:7 202.0
byte chline::length#2 length zp[1]:7 202.0
byte chline::length#4 length zp[1]:7 16867.333333333332
void clrscr()
byte clrscr::c
byte clrscr::c#1 reg byte y 200002.0
byte clrscr::c#2 reg byte y 125001.25
byte clrscr::l
byte clrscr::l#1 reg byte x 20002.0
byte clrscr::l#2 reg byte x 3333.6666666666665
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:5 10001.0
byte* clrscr::line_cols#5 line_cols zp[2]:5 15000.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:9 6667.333333333333
byte* clrscr::line_text#5 line_text zp[2]:9 17143.285714285714
byte conio_cursor_x loadstore zp[1]:13 1.1941177766E9
byte conio_cursor_y loadstore zp[1]:14 1.5000001251136363E9
byte* conio_line_color loadstore zp[2]:17 1.5262500126125002E9
byte* conio_line_text loadstore zp[2]:15 1.4890244025487807E9
byte conio_scroll_enable loadstore zp[1]:20 7.575758336363636E7
byte conio_textcolor loadstore zp[1]:19 6.558507146753247E7
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 2.0000002E7
byte cputc::c#1 reg byte a 20002.0
byte cputc::c#8 reg byte a 1.05005002E8
void cputcxy(byte cputcxy::x , byte cputcxy::y , byte cputcxy::c)
byte cputcxy::c
byte cputcxy::c#2 reg byte y 3333.6666666666665
byte cputcxy::x
byte cputcxy::y
byte cputcxy::y#0 reg byte a 2002.0
byte cputcxy::y#2 reg byte a 11002.0
void cputln()
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 1.0000001E7
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 s zp[2]:9 5000000.5
to_nomodify byte* cputs::s#1 s zp[2]:9 55001.0
to_nomodify byte* cputs::s#2 s zp[2]:9 1.5050002E7
void cputsxy(byte cputsxy::x , byte cputsxy::y , to_nomodify byte* cputsxy::s)
to_nomodify byte* cputsxy::s
to_nomodify byte* cputsxy::s#0 s zp[2]:9 1833.6666666666665
byte cputsxy::x
byte cputsxy::x#0 reg byte x 5501.0
byte cputsxy::y
byte cputsxy::y#0 reg byte a 5501.0
void cscroll()
void cvline(byte cvline::length)
byte cvline::i
byte cvline::i#1 i zp[1]:7 200002.0
byte cvline::i#2 i zp[1]:7 37500.375
byte cvline::length
const byte cvline::length#0 length = $17
byte cvline::x
byte cvline::x#0 x zp[1]:25 10000.181818181818
byte cvline::y
byte cvline::y#0 y zp[1]:8 20002.0
byte cvline::y#1 y zp[1]:8 60000.600000000006
byte cvline::y#2 y zp[1]:8 52500.75
void cvlinexy(byte cvlinexy::x , byte cvlinexy::y , byte cvlinexy::length)
byte cvlinexy::length
byte cvlinexy::x
byte cvlinexy::x#1 reg byte x 202.0
byte cvlinexy::x#2 reg byte x 1102.0
byte cvlinexy::y
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte*~ gotoxy::$5 zp[2]:15 2.00000000002E11
byte*~ gotoxy::$6 zp[2]:17 2.00000000002E11
word~ gotoxy::$7 zp[2]:17 1.500000000015E11
word~ gotoxy::$8 zp[2]:23 2.00000000002E11
word~ gotoxy::$9 zp[2]:17 2.00000000002E11
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:17 1.00000000001E11
byte gotoxy::x
byte gotoxy::x#3 reg byte x 10001.0
byte gotoxy::x#4 reg byte x 100001.0
byte gotoxy::x#5 reg byte x 2002.0
byte gotoxy::x#6 reg byte x 3.3333351834166668E10
byte gotoxy::x#7 reg byte x 2.00000000002E11
byte gotoxy::y
byte gotoxy::y#2 reg byte a 20002.0
byte gotoxy::y#3 reg byte a 20002.0
byte gotoxy::y#4 reg byte a 200002.0
byte gotoxy::y#6 reg byte a 6.6666706668333336E10
byte gotoxy::y#7 reg byte a 3.3333333333666668E10
byte kbhit()
const nomodify byte* kbhit::CIA1_PORT_A = (byte*) 56320
const nomodify byte* kbhit::CIA1_PORT_B = (byte*) 56321
byte kbhit::return
byte kbhit::return#0 reg byte a 367.33333333333337
byte kbhit::return#2 reg byte a 202.0
void main()
byte~ main::$3 reg byte a 202.0
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:23
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:23 1.00000000000001E14
byte* memcpy::dst#2 dst zp[2]:23 1.0003333333333467E14
byte* memcpy::dst#4 dst zp[2]:23 2.00000000002E11
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:11
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:11 2.00000000000002E14
byte* memcpy::src#2 src zp[2]:11 1.0002500000000125E14
byte* memcpy::src#4 src zp[2]:11 1.00000000001E11
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:26 1.251250000000025E13
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#1 reg byte x 2.0000000002E10
byte memset::c#4 reg byte x 1.4287142857143143E13
byte* memset::dst
byte* memset::dst#1 dst zp[2]:11 2.00000000000002E14
byte* memset::dst#2 dst zp[2]:11 1.3336666666666834E14
byte* memset::dst#4 dst zp[2]:11 2.00000000002E11
byte* memset::end
byte* memset::end#0 end zp[2]:26 1.6683333333333668E13
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:11
void screensize(byte* screensize::x , byte* screensize::y)
byte* screensize::x
const byte* screensize::x#0 x = &XSize
byte* screensize::y
const byte* screensize::y#0 y = &YSize
byte scroll(byte scroll::onoff)
byte scroll::old
byte scroll::onoff
const byte scroll::onoff#0 onoff = 0
byte scroll::return
word strlen(byte* strlen::str)
word strlen::len
word strlen::len#1 len zp[2]:5 1000001.0
word strlen::len#2 len zp[2]:5 500250.75
word strlen::return
word strlen::return#2 return zp[2]:5 2002.0
byte* strlen::str
byte* strlen::str#0 str zp[2]:9 2000002.0
byte* strlen::str#1 str zp[2]:9 5501.0
byte* strlen::str#2 str zp[2]:9 1003334.6666666667
byte textcolor(byte textcolor::color)
byte textcolor::color
byte textcolor::old
byte textcolor::return

zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte a [ cputcxy::y#2 cputcxy::y#0 ]
reg byte y [ cputcxy::c#2 ]
reg byte a [ cputc::c#8 cputc::c#1 cputc::c#0 ]
reg byte x [ cvlinexy::x#2 cvlinexy::x#1 ]
reg byte a [ MakeTeeLine::Y#2 ]
zp[2]:5 [ strlen::len#2 strlen::len#1 strlen::return#2 MakeNiceScreen::$22 clrscr::line_cols#5 clrscr::line_cols#1 ]
reg byte a [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ]
reg byte x [ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ]
zp[1]:7 [ cvline::i#2 cvline::i#1 chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
zp[1]:8 [ cvline::y#2 cvline::y#0 cvline::y#1 chline::i#2 chline::i#1 ]
zp[2]:9 [ cputs::s#2 cputs::s#1 cputs::s#0 cputsxy::s#0 strlen::str#2 strlen::str#1 strlen::str#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[2]:11 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 memset::c#1 ]
zp[1]:13 [ conio_cursor_x ]
zp[1]:14 [ conio_cursor_y ]
zp[2]:15 [ conio_line_text gotoxy::$5 ]
zp[2]:17 [ conio_line_color gotoxy::$6 gotoxy::line_offset#0 gotoxy::$7 gotoxy::$9 ]
zp[1]:19 [ conio_textcolor ]
zp[1]:20 [ conio_scroll_enable ]
zp[1]:21 [ XSize ]
zp[1]:22 [ YSize ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$3 ]
reg byte a [ MakeNiceScreen::$34 ]
reg byte a [ MakeNiceScreen::$23 ]
reg byte x [ MakeNiceScreen::X#1 ]
reg byte x [ cputsxy::x#0 ]
reg byte a [ cputsxy::y#0 ]
reg byte a [ kbhit::return#0 ]
zp[2]:23 [ gotoxy::$8 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
zp[1]:25 [ cvline::x#0 ]
reg byte a [ cputs::c#1 ]
zp[2]:26 [ memset::end#0 memcpy::src_end#0 ]
