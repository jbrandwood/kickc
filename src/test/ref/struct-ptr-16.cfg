@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call get 
  [6] (byte) get::return_x#0 ← (byte) get::return_x#5
  [7] (byte) get::return_y#0 ← (byte) get::return_y#5
  to:main::@2
main::@2: scope:[main]  from main
  [8] (byte) main::$0_x ← (byte) get::return_x#0
  [9] (byte) main::$0_y ← (byte) get::return_y#0
  [10] *((byte*)(const struct Point*) SCREEN) ← (byte) main::$0_x
  [11] *((byte*)(const struct Point*) SCREEN+(const byte) OFFSET_STRUCT_POINT_Y) ← (byte) main::$0_y
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@3
  [12] (byte) main::i#2 ← phi( main::@2/(byte) 1 main::@3/(byte) main::i#1 )
  [13] (byte) get::i#1 ← (byte) main::i#2
  [14] call get 
  [15] (byte) get::return_x#1 ← (byte) get::return_x#5
  [16] (byte) get::return_y#1 ← (byte) get::return_y#5
  to:main::@3
main::@3: scope:[main]  from main::@1
  [17] (byte) main::$1_x ← (byte) get::return_x#1
  [18] (byte) main::$1_y ← (byte) get::return_y#1
  [19] (byte~) main::$3 ← (byte) main::i#2 << (byte) 1
  [20] *((byte*)(const struct Point*) SCREEN + (byte~) main::$3) ← (byte) main::$1_x
  [21] *((byte*)(const struct Point*) SCREEN+(const byte) OFFSET_STRUCT_POINT_Y + (byte~) main::$3) ← (byte) main::$1_y
  [22] (byte) main::i#1 ← ++ (byte) main::i#2
  [23] if((byte) main::i#1!=(byte) 3) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [24] return 
  to:@return

(struct Point()) get((byte) get::i)
get: scope:[get]  from main main::@1
  [25] (byte) get::i#2 ← phi( main/(byte) 0 main::@1/(byte) get::i#1 )
  [26] if((byte) get::i#2==(byte) 0) goto get::@1
  to:get::@3
get::@3: scope:[get]  from get
  [27] if((byte) get::i#2==(byte) 1) goto get::@2
  to:get::@4
get::@4: scope:[get]  from get::@3
  [28] (byte) get::return_x#4 ← *((byte*)(const struct Point*) p2)
  [29] (byte) get::return_y#4 ← *((byte*)(const struct Point*) p2+(const byte) OFFSET_STRUCT_POINT_Y)
  to:get::@return
get::@return: scope:[get]  from get::@1 get::@2 get::@4
  [30] (byte) get::return_y#5 ← phi( get::@1/(byte) get::return_y#2 get::@2/(byte) get::return_y#3 get::@4/(byte) get::return_y#4 )
  [30] (byte) get::return_x#5 ← phi( get::@1/(byte) get::return_x#2 get::@2/(byte) get::return_x#3 get::@4/(byte) get::return_x#4 )
  [31] return 
  to:@return
get::@2: scope:[get]  from get::@3
  [32] (byte) get::return_x#3 ← *((byte*)(const struct Point*) p1)
  [33] (byte) get::return_y#3 ← *((byte*)(const struct Point*) p1+(const byte) OFFSET_STRUCT_POINT_Y)
  to:get::@return
get::@1: scope:[get]  from get
  [34] (byte) get::return_x#2 ← *((byte*)(const struct Point*) p0)
  [35] (byte) get::return_y#2 ← *((byte*)(const struct Point*) p0+(const byte) OFFSET_STRUCT_POINT_Y)
  to:get::@return
