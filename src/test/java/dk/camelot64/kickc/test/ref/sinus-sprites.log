PARSING src/test/java/dk/camelot64/kickc/test/kc/sinus-sprites.kc
import "c64"
import "basic-floats"
import "print"

const byte sinlen_x = 221;
const byte[221] sintab_x;
const byte sinlen_y = 197;
const byte[197] sintab_y;
const byte* sprites = $2000;
const byte* SCREEN = $400;

void main() {
    init();
    do {
        do { } while (*RASTER!=$ff);
        anim();
    } while(true);
}

void init() {
    clear_screen();
    for( byte i : 0..39) {
        COLS[i] = $0;
        COLS[40+i] = $b;
    }
    place_sprites();
    gen_sprites();
    progress_init(SCREEN);
    gen_sintab(sintab_x, sinlen_x, $00, $ff);
    progress_init(SCREEN+40);
    gen_sintab(sintab_y, sinlen_y, $32, $d0);
    clear_screen();
}

void clear_screen() {
    for(byte* sc = SCREEN; sc<SCREEN+1000; sc++) {
        *sc = ' ';
    }
}

// Current position of the progress cursor
byte* progress_cursor = SCREEN;
// Current index within the progress cursor (0-7)
byte progress_idx = 0;

// Initialize the PETSCII progress bar
void progress_init(byte* line) {
    progress_cursor = line;
    progress_idx = 0;
}

// Increase PETSCII progress one bit
// Done by increasing the character until the idx is 8 and then moving to the next char
void progress_inc() {
    // Progress characters
    const byte[] progress_chars = { $20, $65, $74, $75, $61, $f6, $e7, $ea, $e0};
    if(++progress_idx==8) {
        *progress_cursor = progress_chars[8];
        progress_cursor++;
        progress_idx = 0;
    }
    *progress_cursor = progress_chars[progress_idx];
}


byte sin_idx_x = 0;
byte sin_idx_y = 0;

void anim() {
    (*BORDERCOL)++;
    byte xidx = sin_idx_x;
    byte yidx = sin_idx_y;
    byte j2 = 12;
    byte x_msb = 0;
    for( byte j : 0..6) {
        word x = (word)$1e + sintab_x[xidx];
        x_msb = x_msb<<1 | >x;
        SPRITES_XPOS[j2] = <x;
        SPRITES_YPOS[j2] = sintab_y[yidx];
        xidx = xidx+10;
        if(xidx>=sinlen_x) {
            xidx = xidx-sinlen_x;
        }
        yidx = yidx+8;
        if(yidx>=sinlen_y) {
            yidx = yidx-sinlen_y;
        }
        j2 = j2-2;
    }
    *SPRITES_XMSB = x_msb;

    // Increment sin indices
    if(++sin_idx_x>=sinlen_x) {
        sin_idx_x = 0;
    }
    if(++sin_idx_y>=sinlen_y) {
        sin_idx_y = 0;
    }
    (*BORDERCOL)--;
}

void place_sprites() {
    *SPRITES_ENABLE = %01111111;
    *SPRITES_EXPAND_X = %01111111;
    *SPRITES_EXPAND_Y = %01111111;
    byte* sprites_ptr = SCREEN+$3f8;
    byte spr_id = (byte)(sprites/$40);
    byte spr_x = 60;
    byte j2 = 0;
    byte col = $5;
    for( byte j : 0..6) {
        sprites_ptr[j] = spr_id++;
        SPRITES_XPOS[j2] = spr_x;
        SPRITES_YPOS[j2] = 80;
        SPRITES_COLS[j] = col;
        spr_x = spr_x + 32;
        col = col^($7^$5);
        j2++;
        j2++;
    }
}

void gen_sprites() {
    byte[] cml = "camelot";
    byte* spr = sprites;
    for( byte i : 0..6 ) {
        gen_chargen_sprite(cml[i], spr);
        spr = spr + $40;
    }
}

// Generate a sprite from a C64 CHARGEN character (by making each pixel 3x3 pixels large)
// - c is the character to generate
// - sprite is a pointer to the position of the sprite to generate
void gen_chargen_sprite(byte ch, byte* sprite) {
    byte* chargen = CHARGEN+((word)ch)<<3;
    asm { sei }
    *PROCPORT = $32;
    for(byte y:0..7) {
      // current chargen line
      byte bits = chargen[y];
      // current sprite byte
      byte s_gen = 0;
      // #bits filled into current sprite byte
      byte s_gen_cnt = 0;
      for(byte x:0..7) {
        // Find the current chargen pixel (c)
        byte c = 0;
        if((bits & $80) != 0) {
           c = 1;
        }
        // generate 3 pixels in the sprite byte (s_gen)
        for(byte b : 0..2){
            s_gen = s_gen<<1 | c;
            if(++s_gen_cnt==8) {
                // sprite byte filled - store and move to next byte
                sprite[0] = s_gen;
                sprite[3] = s_gen;
                sprite[6] = s_gen;
                sprite++;
                s_gen = 0;
                s_gen_cnt = 0;
            }
        }
        // move to next char pixel
        bits = bits<<1;
      }
      // move 3 lines down in the sprite (already moved 1 through ++)
      sprite = sprite + 6;
    }
    *PROCPORT = $37;
    asm { cli }
}

// Generate a sinus table using BASIC floats
// - sintab is a pointer to the table to fill
// - length is the length of the sine table
// - min is the minimum value of the generated sinus
// - max is the maximum value of the generated sinus
void gen_sintab(byte* sintab, byte length, byte min, byte max) {
    byte[] f_i = {0, 0, 0, 0, 0};   // i * 2 * PI
    byte[] f_min = {0, 0, 0, 0, 0}; // amplitude/2 + min
    byte[] f_amp = {0, 0, 0, 0, 0}; // amplitude/2
    byte* f_2pi = $e2e5;            // 2 * PI
    setFAC((word)max);       // fac = max
    setARGtoFAC();           // arg = max
    // TODO: Kernel JSR clobbers A,X,Y
    asm {
        lda #0
        ldx #0
        ldy #0
    }
    setFAC((word)min);       // fac = min
    setMEMtoFAC(f_min);      // f_min = min
    subFACfromARG();         // fac = max - min
    setMEMtoFAC(f_amp);      // f_amp = max - min
    setFAC(2);               // fac = 2
    divMEMbyFAC(f_amp);      // fac = (max - min) / 2
    setMEMtoFAC(f_amp);      // f_amp = (max - min) / 2
    addMEMtoFAC(f_min);      // fac = min + (max - min) / 2
    setMEMtoFAC(f_min);      // f_min = min + (max - min) / 2
    for(byte i =0; i<length; i++) {
        setFAC((word)i);       // fac = i
        mulFACbyMEM(f_2pi);    // fac = i * 2 * PI
        setMEMtoFAC(f_i);      // f_i = i * 2 * PI
        setFAC((word)length);  // fac = length
        divMEMbyFAC(f_i);      // fac = i * 2 * PI / length
        sinFAC();              // fac = sin( i * 2 * PI / length )
        mulFACbyMEM(f_amp);    // fac =  sin( i * 2 * PI / length ) * (max - min) / 2
        addMEMtoFAC(f_min);    // fac =  sin( i * 2 * PI / length ) * (max - min) / 2 + min + (max - min) / 2
        sintab[i] = (byte)getFAC();
        progress_inc();
    }
}

Importing c64
PARSING src/test/java/dk/camelot64/kickc/test/kc/c64.kc
// Commodore 64 Registers and Constants

// Processor port data direction register
const byte* PROCPORT_DDR = $00;
// Mask for PROCESSOR_PORT_DDR which allows only memory configuration to be written
const byte PROCPORT_DDR_MEMORY_MASK = %00000111;

// Processor Port Register controlling RAM/ROM configuration and the datasette
const byte* PROCPORT = $01;
// RAM in all three areas $A000, $D000, $E000
const byte PROCPORT_RAM_ALL         = %00110000;
// RAM in $A000, $E000 I/O in $D000
const byte PROCPORT_RAM_IO          = %00110101;
// RAM in $A000, $E000 CHAR ROM in $D000
const byte PROCPORT_RAM_CHARROM     = %00110001;
// RAM in $A000, I/O in $D000, KERNEL in $E000
const byte PROCPORT_KERNEL_IO       = %00110110;
// BASIC in $A000, I/O in $D000, KERNEL in $E000
const byte PROCPORT_BASIC_KERNEL_IO = %00110111;

const byte* CHARGEN = $d000;

const byte* SPRITES_XPOS = $d000;
const byte* SPRITES_YPOS = $d001;
const byte* SPRITES_XMSB = $d010;
const byte* RASTER = $d012;
const byte* SPRITES_ENABLE = $d015;
const byte* SPRITES_EXPAND_Y = $d017;
const byte* SPRITES_PRIORITY = $d01b;
const byte* SPRITES_MC = $d01c;
const byte* SPRITES_EXPAND_X = $d01d;
const byte* BORDERCOL = $d020;
const byte* BGCOL = $d021;
const byte* BGCOL1 = $d021;
const byte* BGCOL2 = $d022;
const byte* BGCOL3 = $d023;
const byte* BGCOL4 = $d024;
const byte* SPRITES_MC1 = $d025;
const byte* SPRITES_MC2 = $d026;
const byte* SPRITES_COLS = $d027;

const byte* VIC_CONTROL = $d011;
const byte* D011 = $d011;
const byte VIC_RST8 = %10000000;
const byte VIC_ECM =  %01000000;
const byte VIC_BMM =  %00100000;
const byte VIC_DEN =  %00010000;
const byte VIC_RSEL = %00001000;

const byte* VIC_CONTROL2 = $d016;
const byte* D016 = $d016;
const byte VIC_MCM =  %00010000;
const byte VIC_CSEL = %00001000;

const byte* D018 = $d018;
const byte* VIC_MEMORY = $d018;

const byte* COLS = $d800;

// CIA#1 Port A: keyboard matrix columns and joystick #2
const byte* CIA1_PORT_A = $dc00;
// CIA#1 Port B: keyboard matrix rows and joystick #1.
const byte* CIA1_PORT_B = $dc01;
// CIA #1 Port A data direction register.
const byte* CIA1_PORT_A_DDR = $dc02;
// CIA #1 Port B data direction register.
const byte* CIA1_PORT_B_DDR = $dc03;

// CIA#2 Port A: Serial bus, RS-232, VIC memory bank
const byte* CIA2_PORT_A = $dd00;
// CIA#2 Port B: RS-232
const byte* CIA2_PORT_B = $dd01;
// CIA #2 Port A data direction register.
const byte* CIA2_PORT_A_DDR = $dd02;
// CIA #2 Port B data direction register.
const byte* CIA2_PORT_B_DDR = $dd03;

const byte BLACK = $0;
const byte WHITE = $1;
const byte RED = $2;
const byte CYAN = $3;
const byte PURPLE = $4;
const byte GREEN = $5;
const byte BLUE = $6;
const byte YELLOW = $7;
const byte ORANGE = $8;
const byte BROWN = $9;
const byte PINK = $a;
const byte DARK_GREY= $b;
const byte GREY = $c;
const byte LIGHT_GREEN = $d;
const byte LIGHT_BLUE = $e;
const byte LIGHT_GREY = $f;

Importing basic-floats
PARSING src/test/java/dk/camelot64/kickc/test/kc/basic-floats.kc
// Library wrapping the BASIC floating point functions
// See https://www.c64-wiki.com/wiki/Floating_point_arithmetic
// See http://www.pagetable.com/c64rom/c64rom_sc.html

// Zeropage addresses used to hold lo/hi-bytes of addresses of float numbers in MEM
const byte* memLo = $fe;
const byte* memHi = $ff;

// Prepare MEM pointers for operations using MEM
void prepareMEM(byte* mem) {
    *memLo = <mem;
    *memHi = >mem;
}

// FAC = word
// Set the FAC (floating point accumulator) to the integer value of a 16bit word
void setFAC(word w) {
    prepareMEM((byte*)w);
    // Load word register Y,A into FAC (floating point accumulator)
    asm {
        ldy $fe
        lda $ff
        jsr $b391
    }
}

// word = FAC
// Get the value of the FAC (floating point accumulator) as an integer 16bit word
// Destroys the value in the FAC in the process
word getFAC() {
    // Load FAC (floating point accumulator) integer part into word register Y,A
    asm {
        jsr $b1aa
        sty $fe
        sta $ff
    }
    word w = { *memHi, *memLo};
    return w;
}

// ARG = FAC
// Set the ARG (floating point argument) to the value of the FAC (floating point accumulator)
void setARGtoFAC() {
    asm {
        jsr $bc0f
    }
}

// FAC = ARG
// Set the FAC (floating point accumulator) to the value of the ARG (floating point argument)
void setFACtoARG() {
    asm {
        jsr $bbfc
    }
}

// MEM = FAC
// Stores the value of the FAC to memory
// Stores 5 bytes (means it is necessary to allocate 5 bytes to avoid clobbering other data using eg. byte[] mem = {0, 0, 0, 0, 0};)
void setMEMtoFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        ldx $fe
        ldy $ff
        jsr $bbd4
    }
}

// FAC = MEM
// Set the FAC to value from MEM (float saved in memory)
// Reads 5 bytes
void setFACtoMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $bba2
    }
}

// FAC = PI/2
// Set the FAC to PI/2
// Reads 5 bytes from the BASIC ROM
void setFACtoPIhalf() {
    asm {
        lda #$e0
        ldy #$e2
        jsr $bba2
    }
}

// FAC = 2*PI
// Set the FAC to 2*PI
// Reads 5 bytes from the BASIC ROM
void setFACto2PI() {
    asm {
        lda #$e5
        ldy #$e2
        jsr $bba2
    }
}

// ARG = MEM
// Load the ARG from memory
// Reads 5 bytes
void setARGtoMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $ba8c
    }
}

// FAC = MEM+FAC
// Set FAC to MEM (float saved in memory) plus FAC (float accumulator)
// Reads 5 bytes from memory
void addMEMtoFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe //memLo
        ldy $ff //memHi
        jsr $b867
    }
}

// FAC = ARG+FAC
// Add ARG (floating point argument) to FAC (floating point accumulator)
void addARGtoFAC() {
    asm {
        jsr $b86a
    }
}

// FAC = MEM-FAC
// Set FAC to MEM (float saved in memory) minus FAC (float accumulator)
// Reads 5 bytes from memory
void subFACfromMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $b850
    }
}

// FAC = ARG-FAC
// Set FAC to ARG minus FAC
void subFACfromARG() {
    asm {
        jsr $b853
    }
}

// FAC = MEM/FAC
// Set FAC to MEM (float saved in memory) divided by FAC (float accumulator)
// Reads 5 bytes from memory
void divMEMbyFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $bb0f
    }
}

// FAC = MEM*FAC
// Set FAC to MEM (float saved in memory) multiplied by FAC (float accumulator)
// Reads 5 bytes from memory
void mulFACbyMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $ba28
    }
}

// FAC = MEM^FAC
// Set FAC to MEM (float saved in memory) raised to power of FAC (float accumulator)
// Reads 5 bytes from memory
void pwrMEMbyFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $bf78
    }
}

// FAC = int(FAC)
// Set FAC to integer part of the FAC - int(FAC)
// The integer part is defined as the next lower integer - like java floor()
void intFAC() {
    asm {
        jsr $bccc
    }
}

// FAC = sin(FAC)
// Set FAC to sinus of the FAC - sin(FAC)
// Sinus is calculated on radians (0-2*PI)
void sinFAC() {
    asm {
        jsr $e26b
    }
}

// FAC = cos(FAC)
// Set FAC to cosinus of the FAC - cos(FAC)
// Cosinus is calculated on radians (0-2*PI)
void cosFAC() {
    asm {
        jsr $e264
    }
}

// FAC = tan(FAC)
// Set FAC to the tangens of FAC - tan(FAC)
// Tangens is calculated on radians (0-2*PI)
void tanFAC() {
    asm {
        jsr $e2b4
    }
}

// FAC = atn(FAC)
// Set FAC to the arc tangens of FAC - atn(FAC)
// Arc Tangens is calculated on radians (0-2*PI)
void atnFAC() {
    asm {
        jsr $e303
    }
}

// FAC = sqr(FAC)
// Set FAC to the square root of FAC - sqr(FAC)
void sqrFAC() {
    asm {
        jsr $bf71
    }
}

// FAC = exp(FAC)
// Set FAC to the exponential function of FAC - exp(FAC)
// Exp is based on the natural logarithm e=2.71828183
void expFAC() {
    asm {
        jsr $bfed
    }
}

// FAC = log(FAC)
// Set FAC to the logarithm of FAC - log(FAC)
// Log is based on the natural logarithm e=2.71828183
void logFAC() {
    asm {
        jsr $b9ea
    }
}

// FAC = FAC/10
// Set FAC to FAC divided by 10
void divFACby10() {
    asm {
        jsr $bafe
    }
}

// FAC = FAC*10
// Set FAC to FAC multiplied by 10
void mulFACby10() {
    asm {
        jsr $bae2
    }
}

Importing print
PARSING src/test/java/dk/camelot64/kickc/test/kc/print.kc

byte* print_screen = $0400;
byte* print_line_cursor = print_screen;
byte* print_char_cursor = print_line_cursor;

// Print a number of zero-terminated strings, each followed by a newline.
// The sequence of lines is terminated by another zero.
void print_str_lines(byte* str) {
    while(*str!='@') {
        do {
            byte ch = *(str++);
            if(ch!='@') {
                *(print_char_cursor++) = ch;
            }
        } while (ch!='@');
        print_ln();
    }
}

// Print a zero-terminated string followed by a newline
void print_str_ln(byte* str) {
    print_str(str);
    print_ln();
}

// Print a zero-terminated string
void print_str(byte* str) {
    while(*str!='@') {
        *(print_char_cursor++) = *(str++);
    }
}

// Print a string at a specific screen position
void print_str_at(byte* str, byte* at) {
    while(*str!='@') {
        *(at++) = *(str++);
    }
}

// Print a newline
void print_ln() {
    do {
        print_line_cursor = print_line_cursor + $28;
    } while (print_line_cursor<print_char_cursor);
    print_char_cursor = print_line_cursor;
}

// Print a signed word as HEX
void print_sword(signed word w) {
    if(w<0) {
        print_char('-');
        w = -w;
    }
    print_word((word)w);
}

// Print a signed byte as HEX
void print_sbyte(signed byte b) {
    if(b<0) {
        print_char('-');
        b = -b;
    }
    print_byte((byte)b);
}

// Print a word as HEX
void print_word(word w) {
    print_byte(>w);
    print_byte(<w);
}

// Print a dword as HEX
void print_dword(dword dw) {
    print_word(>dw);
    print_word(<dw);
}

// Print a signed dword as HEX
void print_sdword(signed dword dw) {
    if(dw<0) {
        print_char('-');
        dw = -dw;
    }
    print_dword((dword)dw);
}

const byte[] print_hextab = "0123456789abcdef";

// Print a byte as HEX
void print_byte(byte b) {
    // Table of hexadecimal digits
    print_char(print_hextab[b>>4]);
    print_char(print_hextab[b&$f]);
}

// Print a single char
void print_char(byte ch) {
    *(print_char_cursor++) = ch;
}

// Clear the screen. Also resets current line/char cursor.
void print_cls() {
    for(byte* sc=print_screen; sc!=print_screen+1000; sc++) {
        *sc = ' ';
    }
    print_line_cursor = print_screen;
    print_char_cursor = print_line_cursor;
}

// Set the screen to print on. Also resets current line/char cursor.
void print_set_screen(byte* screen) {
    print_screen = screen;
    print_line_cursor = print_screen;
    print_char_cursor = print_line_cursor;
}

Adding pre/post-modifier (byte*) print_str_lines::str ← ++ (byte*) print_str_lines::str
Adding pre/post-modifier (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
Adding pre/post-modifier (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
Adding pre/post-modifier (byte*) print_str::str ← ++ (byte*) print_str::str
Adding pre/post-modifier (byte*) print_str_at::at ← ++ (byte*) print_str_at::at
Adding pre/post-modifier (byte*) print_str_at::str ← ++ (byte*) print_str_at::str
Adding pre/post-modifier (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
Adding pre/post-modifier (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
Adding pre/post-modifier (byte*) clear_screen::sc ← ++ (byte*) clear_screen::sc
Adding pre/post-modifier (byte) progress_idx ← ++ (byte) progress_idx
Adding pre/post-modifier (byte*) progress_cursor ← ++ (byte*) progress_cursor
Adding pre/post-modifier *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
Adding pre/post-modifier (byte) sin_idx_x ← ++ (byte) sin_idx_x
Adding pre/post-modifier (byte) sin_idx_y ← ++ (byte) sin_idx_y
Adding pre/post-modifier *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
Adding pre/post-modifier (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
Adding pre/post-modifier (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
Adding pre/post-modifier (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
Adding pre/post-modifier (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
Adding pre/post-modifier (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
Adding pre/post-modifier (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
SYMBOLS
(label) @1
(label) @10
(label) @11
(label) @12
(label) @13
(label) @14
(label) @15
(label) @16
(label) @17
(label) @18
(label) @19
(label) @2
(label) @20
(label) @21
(label) @22
(label) @23
(label) @24
(label) @25
(label) @26
(label) @27
(label) @28
(label) @29
(label) @3
(label) @30
(label) @31
(label) @32
(label) @33
(label) @34
(label) @35
(label) @36
(label) @37
(label) @38
(label) @39
(label) @4
(label) @40
(label) @41
(label) @42
(label) @43
(label) @44
(label) @45
(label) @46
(label) @47
(label) @48
(label) @49
(label) @5
(label) @50
(label) @51
(label) @6
(label) @7
(label) @8
(label) @9
(label) @begin
(label) @end
(byte*) BGCOL
(byte*) BGCOL1
(byte*) BGCOL2
(byte*) BGCOL3
(byte*) BGCOL4
(byte) BLACK
(byte) BLUE
(byte*) BORDERCOL
(byte) BROWN
(byte*) CHARGEN
(byte*) CIA1_PORT_A
(byte*) CIA1_PORT_A_DDR
(byte*) CIA1_PORT_B
(byte*) CIA1_PORT_B_DDR
(byte*) CIA2_PORT_A
(byte*) CIA2_PORT_A_DDR
(byte*) CIA2_PORT_B
(byte*) CIA2_PORT_B_DDR
(byte*) COLS
(byte) CYAN
(byte*) D011
(byte*) D016
(byte*) D018
(byte) DARK_GREY
(byte) GREEN
(byte) GREY
(byte) LIGHT_BLUE
(byte) LIGHT_GREEN
(byte) LIGHT_GREY
(byte) ORANGE
(byte) PINK
(byte*) PROCPORT
(byte) PROCPORT_BASIC_KERNEL_IO
(byte*) PROCPORT_DDR
(byte) PROCPORT_DDR_MEMORY_MASK
(byte) PROCPORT_KERNEL_IO
(byte) PROCPORT_RAM_ALL
(byte) PROCPORT_RAM_CHARROM
(byte) PROCPORT_RAM_IO
(byte) PURPLE
(byte*) RASTER
(byte) RED
(byte*) SCREEN
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_MC
(byte*) SPRITES_MC1
(byte*) SPRITES_MC2
(byte*) SPRITES_PRIORITY
(byte*) SPRITES_XMSB
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(byte) VIC_BMM
(byte*) VIC_CONTROL
(byte*) VIC_CONTROL2
(byte) VIC_CSEL
(byte) VIC_DEN
(byte) VIC_ECM
(byte) VIC_MCM
(byte*) VIC_MEMORY
(byte) VIC_RSEL
(byte) VIC_RST8
(byte) WHITE
(byte) YELLOW
(void()) addARGtoFAC()
(label) addARGtoFAC::@return
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(void~) addMEMtoFAC::$0
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(void()) anim()
(byte/signed byte/word/signed word/dword/signed dword~) anim::$0
(byte/signed word/word/dword/signed dword~) anim::$1
(byte/signed word/word/dword/signed dword~) anim::$10
(boolean~) anim::$11
(boolean~) anim::$12
(byte~) anim::$13
(byte/signed word/word/dword/signed dword~) anim::$14
(boolean~) anim::$15
(boolean~) anim::$16
(boolean~) anim::$17
(boolean~) anim::$18
(boolean~) anim::$19
(byte~) anim::$2
(byte~) anim::$3
(byte~) anim::$4
(byte~) anim::$5
(byte/signed word/word/dword/signed dword~) anim::$6
(boolean~) anim::$7
(boolean~) anim::$8
(byte~) anim::$9
(label) anim::@1
(label) anim::@10
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@9
(label) anim::@return
(byte) anim::j
(byte) anim::j2
(word) anim::x
(byte) anim::x_msb
(byte) anim::xidx
(byte) anim::yidx
(void()) atnFAC()
(label) atnFAC::@return
(void()) clear_screen()
(byte*~) clear_screen::$0
(boolean~) clear_screen::$1
(label) clear_screen::@1
(label) clear_screen::@2
(label) clear_screen::@return
(byte*) clear_screen::sc
(void()) cosFAC()
(label) cosFAC::@return
(void()) divFACby10()
(label) divFACby10::@return
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(void~) divMEMbyFAC::$0
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(void()) expFAC()
(label) expFAC::@return
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0
(word~) gen_chargen_sprite::$1
(boolean~) gen_chargen_sprite::$10
(byte~) gen_chargen_sprite::$11
(boolean~) gen_chargen_sprite::$12
(byte*~) gen_chargen_sprite::$13
(boolean~) gen_chargen_sprite::$14
(byte*~) gen_chargen_sprite::$2
(byte~) gen_chargen_sprite::$3
(boolean~) gen_chargen_sprite::$4
(boolean~) gen_chargen_sprite::$5
(byte~) gen_chargen_sprite::$6
(byte~) gen_chargen_sprite::$7
(boolean~) gen_chargen_sprite::$8
(boolean~) gen_chargen_sprite::$9
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@10
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@6
(label) gen_chargen_sprite::@7
(label) gen_chargen_sprite::@8
(label) gen_chargen_sprite::@9
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::ch
(byte*) gen_chargen_sprite::chargen
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen_cnt
(byte*) gen_chargen_sprite::sprite
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::y
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0
(void~) gen_sintab::$1
(void~) gen_sintab::$10
(void~) gen_sintab::$11
(void~) gen_sintab::$12
(word~) gen_sintab::$13
(void~) gen_sintab::$14
(void~) gen_sintab::$15
(void~) gen_sintab::$16
(word~) gen_sintab::$17
(void~) gen_sintab::$18
(void~) gen_sintab::$19
(void~) gen_sintab::$2
(void~) gen_sintab::$20
(void~) gen_sintab::$21
(void~) gen_sintab::$22
(word~) gen_sintab::$23
(byte~) gen_sintab::$24
(void~) gen_sintab::$25
(boolean~) gen_sintab::$26
(word~) gen_sintab::$3
(void~) gen_sintab::$4
(void~) gen_sintab::$5
(void~) gen_sintab::$6
(void~) gen_sintab::$7
(void~) gen_sintab::$8
(void~) gen_sintab::$9
(label) gen_sintab::@1
(label) gen_sintab::@2
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(byte[]) gen_sintab::f_amp
(byte[]) gen_sintab::f_i
(byte[]) gen_sintab::f_min
(byte) gen_sintab::i
(byte) gen_sintab::length
(byte) gen_sintab::max
(byte) gen_sintab::min
(byte*) gen_sintab::sintab
(void()) gen_sprites()
(void~) gen_sprites::$0
(byte*~) gen_sprites::$1
(boolean~) gen_sprites::$2
(label) gen_sprites::@1
(label) gen_sprites::@2
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(byte) gen_sprites::i
(byte*) gen_sprites::spr
(word()) getFAC()
(label) getFAC::@1
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::w
(void()) init()
(void~) init::$0
(byte/signed word/word/dword/signed dword~) init::$1
(void~) init::$10
(boolean~) init::$2
(void~) init::$3
(void~) init::$4
(void~) init::$5
(void~) init::$6
(byte*~) init::$7
(void~) init::$8
(void~) init::$9
(label) init::@1
(label) init::@2
(label) init::@return
(byte) init::i
(void()) intFAC()
(label) intFAC::@return
(void()) logFAC()
(label) logFAC::@return
(void()) main()
(void~) main::$0
(boolean~) main::$1
(void~) main::$2
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@return
(byte*) memHi
(byte*) memLo
(void()) mulFACby10()
(label) mulFACby10::@return
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(void~) mulFACbyMEM::$0
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(void()) place_sprites()
(byte*~) place_sprites::$0
(byte*~) place_sprites::$1
(byte~) place_sprites::$2
(byte/signed word/word/dword/signed dword~) place_sprites::$3
(byte/signed byte/word/signed word/dword/signed dword~) place_sprites::$4
(byte/word/dword~) place_sprites::$5
(boolean~) place_sprites::$6
(label) place_sprites::@1
(label) place_sprites::@2
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::j
(byte) place_sprites::j2
(byte) place_sprites::spr_id
(byte) place_sprites::spr_x
(byte*) place_sprites::sprites_ptr
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0
(byte~) prepareMEM::$1
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(void~) print_byte::$1
(byte~) print_byte::$2
(void~) print_byte::$3
(label) print_byte::@return
(byte) print_byte::b
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte*) print_char_cursor
(void()) print_cls()
(byte*~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@2
(label) print_cls::@return
(byte*) print_cls::sc
(void()) print_dword((dword) print_dword::dw)
(word~) print_dword::$0
(void~) print_dword::$1
(word~) print_dword::$2
(void~) print_dword::$3
(label) print_dword::@return
(dword) print_dword::dw
(byte[]) print_hextab
(byte*) print_line_cursor
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(void()) print_sbyte((signed byte) print_sbyte::b)
(boolean~) print_sbyte::$0
(boolean~) print_sbyte::$1
(void~) print_sbyte::$2
(signed byte~) print_sbyte::$3
(byte~) print_sbyte::$4
(void~) print_sbyte::$5
(label) print_sbyte::@1
(label) print_sbyte::@2
(label) print_sbyte::@return
(signed byte) print_sbyte::b
(byte*) print_screen
(void()) print_sdword((signed dword) print_sdword::dw)
(boolean~) print_sdword::$0
(boolean~) print_sdword::$1
(void~) print_sdword::$2
(signed dword~) print_sdword::$3
(dword~) print_sdword::$4
(void~) print_sdword::$5
(label) print_sdword::@1
(label) print_sdword::@2
(label) print_sdword::@return
(signed dword) print_sdword::dw
(void()) print_set_screen((byte*) print_set_screen::screen)
(label) print_set_screen::@return
(byte*) print_set_screen::screen
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@4
(label) print_str::@5
(label) print_str::@6
(label) print_str::@return
(byte*) print_str::str
(void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
(boolean~) print_str_at::$0
(label) print_str_at::@1
(label) print_str_at::@2
(label) print_str_at::@3
(label) print_str_at::@4
(label) print_str_at::@5
(label) print_str_at::@6
(label) print_str_at::@return
(byte*) print_str_at::at
(byte*) print_str_at::str
(void()) print_str_lines((byte*) print_str_lines::str)
(boolean~) print_str_lines::$0
(boolean~) print_str_lines::$1
(boolean~) print_str_lines::$2
(boolean~) print_str_lines::$3
(void~) print_str_lines::$4
(label) print_str_lines::@1
(label) print_str_lines::@10
(label) print_str_lines::@2
(label) print_str_lines::@3
(label) print_str_lines::@4
(label) print_str_lines::@5
(label) print_str_lines::@6
(label) print_str_lines::@7
(label) print_str_lines::@8
(label) print_str_lines::@9
(label) print_str_lines::@return
(byte) print_str_lines::ch
(byte*) print_str_lines::str
(void()) print_str_ln((byte*) print_str_ln::str)
(void~) print_str_ln::$0
(void~) print_str_ln::$1
(label) print_str_ln::@return
(byte*) print_str_ln::str
(void()) print_sword((signed word) print_sword::w)
(boolean~) print_sword::$0
(boolean~) print_sword::$1
(void~) print_sword::$2
(signed word~) print_sword::$3
(word~) print_sword::$4
(void~) print_sword::$5
(label) print_sword::@1
(label) print_sword::@2
(label) print_sword::@return
(signed word) print_sword::w
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(void~) print_word::$1
(byte~) print_word::$2
(void~) print_word::$3
(label) print_word::@return
(word) print_word::w
(byte*) progress_cursor
(byte) progress_idx
(void()) progress_inc()
(boolean~) progress_inc::$0
(boolean~) progress_inc::$1
(label) progress_inc::@1
(label) progress_inc::@2
(label) progress_inc::@return
(byte[]) progress_inc::progress_chars
(void()) progress_init((byte*) progress_init::line)
(label) progress_init::@return
(byte*) progress_init::line
(void()) pwrMEMbyFAC((byte*) pwrMEMbyFAC::mem)
(void~) pwrMEMbyFAC::$0
(label) pwrMEMbyFAC::@return
(byte*) pwrMEMbyFAC::mem
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setARGtoMEM((byte*) setARGtoMEM::mem)
(void~) setARGtoMEM::$0
(label) setARGtoMEM::@return
(byte*) setARGtoMEM::mem
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0
(void~) setFAC::$1
(label) setFAC::@return
(word) setFAC::w
(void()) setFACto2PI()
(label) setFACto2PI::@return
(void()) setFACtoARG()
(label) setFACtoARG::@return
(void()) setFACtoMEM((byte*) setFACtoMEM::mem)
(void~) setFACtoMEM::$0
(label) setFACtoMEM::@return
(byte*) setFACtoMEM::mem
(void()) setFACtoPIhalf()
(label) setFACtoPIhalf::@return
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(void~) setMEMtoFAC::$0
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_y
(byte) sinlen_x
(byte) sinlen_y
(byte[221]) sintab_x
(byte[197]) sintab_y
(byte*) sprites
(void()) sqrFAC()
(label) sqrFAC::@return
(void()) subFACfromARG()
(label) subFACfromARG::@return
(void()) subFACfromMEM((byte*) subFACfromMEM::mem)
(void~) subFACfromMEM::$0
(label) subFACfromMEM::@return
(byte*) subFACfromMEM::mem
(void()) tanFAC()
(label) tanFAC::@return

Promoting byte/signed byte/word/signed word/dword/signed dword to byte* in PROCPORT_DDR ← ((byte*)) 0
Promoting byte/signed byte/word/signed word/dword/signed dword to byte* in PROCPORT ← ((byte*)) 1
Promoting word/dword/signed dword to byte* in CHARGEN ← ((byte*)) 53248
Promoting word/dword/signed dword to byte* in SPRITES_XPOS ← ((byte*)) 53248
Promoting word/dword/signed dword to byte* in SPRITES_YPOS ← ((byte*)) 53249
Promoting word/dword/signed dword to byte* in SPRITES_XMSB ← ((byte*)) 53264
Promoting word/dword/signed dword to byte* in RASTER ← ((byte*)) 53266
Promoting word/dword/signed dword to byte* in SPRITES_ENABLE ← ((byte*)) 53269
Promoting word/dword/signed dword to byte* in SPRITES_EXPAND_Y ← ((byte*)) 53271
Promoting word/dword/signed dword to byte* in SPRITES_PRIORITY ← ((byte*)) 53275
Promoting word/dword/signed dword to byte* in SPRITES_MC ← ((byte*)) 53276
Promoting word/dword/signed dword to byte* in SPRITES_EXPAND_X ← ((byte*)) 53277
Promoting word/dword/signed dword to byte* in BORDERCOL ← ((byte*)) 53280
Promoting word/dword/signed dword to byte* in BGCOL ← ((byte*)) 53281
Promoting word/dword/signed dword to byte* in BGCOL1 ← ((byte*)) 53281
Promoting word/dword/signed dword to byte* in BGCOL2 ← ((byte*)) 53282
Promoting word/dword/signed dword to byte* in BGCOL3 ← ((byte*)) 53283
Promoting word/dword/signed dword to byte* in BGCOL4 ← ((byte*)) 53284
Promoting word/dword/signed dword to byte* in SPRITES_MC1 ← ((byte*)) 53285
Promoting word/dword/signed dword to byte* in SPRITES_MC2 ← ((byte*)) 53286
Promoting word/dword/signed dword to byte* in SPRITES_COLS ← ((byte*)) 53287
Promoting word/dword/signed dword to byte* in VIC_CONTROL ← ((byte*)) 53265
Promoting word/dword/signed dword to byte* in D011 ← ((byte*)) 53265
Promoting word/dword/signed dword to byte* in VIC_CONTROL2 ← ((byte*)) 53270
Promoting word/dword/signed dword to byte* in D016 ← ((byte*)) 53270
Promoting word/dword/signed dword to byte* in D018 ← ((byte*)) 53272
Promoting word/dword/signed dword to byte* in VIC_MEMORY ← ((byte*)) 53272
Promoting word/dword/signed dword to byte* in COLS ← ((byte*)) 55296
Promoting word/dword/signed dword to byte* in CIA1_PORT_A ← ((byte*)) 56320
Promoting word/dword/signed dword to byte* in CIA1_PORT_B ← ((byte*)) 56321
Promoting word/dword/signed dword to byte* in CIA1_PORT_A_DDR ← ((byte*)) 56322
Promoting word/dword/signed dword to byte* in CIA1_PORT_B_DDR ← ((byte*)) 56323
Promoting word/dword/signed dword to byte* in CIA2_PORT_A ← ((byte*)) 56576
Promoting word/dword/signed dword to byte* in CIA2_PORT_B ← ((byte*)) 56577
Promoting word/dword/signed dword to byte* in CIA2_PORT_A_DDR ← ((byte*)) 56578
Promoting word/dword/signed dword to byte* in CIA2_PORT_B_DDR ← ((byte*)) 56579
Promoting byte/word/signed word/dword/signed dword to byte* in memLo ← ((byte*)) 254
Promoting byte/word/signed word/dword/signed dword to byte* in memHi ← ((byte*)) 255
Promoting word/signed word/dword/signed dword to byte* in print_screen ← ((byte*)) 1024
Promoting word/signed word/dword/signed dword to byte* in sprites ← ((byte*)) 8192
Promoting word/signed word/dword/signed dword to byte* in SCREEN ← ((byte*)) 1024
Promoting word/dword/signed dword to byte* in gen_sintab::f_2pi ← ((byte*)) 58085
INITIAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) PROCPORT_DDR ← ((byte*)) (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) PROCPORT_DDR_MEMORY_MASK ← (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte*) PROCPORT ← ((byte*)) (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) PROCPORT_RAM_ALL ← (byte/signed byte/word/signed word/dword/signed dword) 48
  (byte) PROCPORT_RAM_IO ← (byte/signed byte/word/signed word/dword/signed dword) 53
  (byte) PROCPORT_RAM_CHARROM ← (byte/signed byte/word/signed word/dword/signed dword) 49
  (byte) PROCPORT_KERNEL_IO ← (byte/signed byte/word/signed word/dword/signed dword) 54
  (byte) PROCPORT_BASIC_KERNEL_IO ← (byte/signed byte/word/signed word/dword/signed dword) 55
  (byte*) CHARGEN ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) SPRITES_XPOS ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) SPRITES_YPOS ← ((byte*)) (word/dword/signed dword) 53249
  (byte*) SPRITES_XMSB ← ((byte*)) (word/dword/signed dword) 53264
  (byte*) RASTER ← ((byte*)) (word/dword/signed dword) 53266
  (byte*) SPRITES_ENABLE ← ((byte*)) (word/dword/signed dword) 53269
  (byte*) SPRITES_EXPAND_Y ← ((byte*)) (word/dword/signed dword) 53271
  (byte*) SPRITES_PRIORITY ← ((byte*)) (word/dword/signed dword) 53275
  (byte*) SPRITES_MC ← ((byte*)) (word/dword/signed dword) 53276
  (byte*) SPRITES_EXPAND_X ← ((byte*)) (word/dword/signed dword) 53277
  (byte*) BORDERCOL ← ((byte*)) (word/dword/signed dword) 53280
  (byte*) BGCOL ← ((byte*)) (word/dword/signed dword) 53281
  (byte*) BGCOL1 ← ((byte*)) (word/dword/signed dword) 53281
  (byte*) BGCOL2 ← ((byte*)) (word/dword/signed dword) 53282
  (byte*) BGCOL3 ← ((byte*)) (word/dword/signed dword) 53283
  (byte*) BGCOL4 ← ((byte*)) (word/dword/signed dword) 53284
  (byte*) SPRITES_MC1 ← ((byte*)) (word/dword/signed dword) 53285
  (byte*) SPRITES_MC2 ← ((byte*)) (word/dword/signed dword) 53286
  (byte*) SPRITES_COLS ← ((byte*)) (word/dword/signed dword) 53287
  (byte*) VIC_CONTROL ← ((byte*)) (word/dword/signed dword) 53265
  (byte*) D011 ← ((byte*)) (word/dword/signed dword) 53265
  (byte) VIC_RST8 ← (byte/word/signed word/dword/signed dword) 128
  (byte) VIC_ECM ← (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte) VIC_BMM ← (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) VIC_DEN ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_RSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) VIC_CONTROL2 ← ((byte*)) (word/dword/signed dword) 53270
  (byte*) D016 ← ((byte*)) (word/dword/signed dword) 53270
  (byte) VIC_MCM ← (byte/signed byte/word/signed word/dword/signed dword) 16
  (byte) VIC_CSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte*) D018 ← ((byte*)) (word/dword/signed dword) 53272
  (byte*) VIC_MEMORY ← ((byte*)) (word/dword/signed dword) 53272
  (byte*) COLS ← ((byte*)) (word/dword/signed dword) 55296
  (byte*) CIA1_PORT_A ← ((byte*)) (word/dword/signed dword) 56320
  (byte*) CIA1_PORT_B ← ((byte*)) (word/dword/signed dword) 56321
  (byte*) CIA1_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56322
  (byte*) CIA1_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56323
  (byte*) CIA2_PORT_A ← ((byte*)) (word/dword/signed dword) 56576
  (byte*) CIA2_PORT_B ← ((byte*)) (word/dword/signed dword) 56577
  (byte*) CIA2_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56578
  (byte*) CIA2_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56579
  (byte) BLACK ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) WHITE ← (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) RED ← (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) CYAN ← (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte) PURPLE ← (byte/signed byte/word/signed word/dword/signed dword) 4
  (byte) GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte) YELLOW ← (byte/signed byte/word/signed word/dword/signed dword) 7
  (byte) ORANGE ← (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) BROWN ← (byte/signed byte/word/signed word/dword/signed dword) 9
  (byte) PINK ← (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) DARK_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) GREY ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) LIGHT_GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 13
  (byte) LIGHT_BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 14
  (byte) LIGHT_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 15
  (byte*) memLo ← ((byte*)) (byte/word/signed word/dword/signed dword) 254
  (byte*) memHi ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  to:@1
prepareMEM: scope:[prepareMEM]  from
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem
  *((byte*) memLo) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem
  *((byte*) memHi) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
@1: scope:[]  from @begin
  to:@2
setFAC: scope:[setFAC]  from
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w
  (void~) setFAC::$1 ← call prepareMEM (byte*~) setFAC::$0 
  asm { ldy$fe lda$ff jsr$b391  }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC
  return 
  to:@return
@2: scope:[]  from @1
  to:@3
getFAC: scope:[getFAC]  from
  asm { jsr$b1aa sty$fe sta$ff  }
  (word) getFAC::w ← { *((byte*) memHi), *((byte*) memLo) }
  (word) getFAC::return ← (word) getFAC::w
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC getFAC::@1
  (word) getFAC::return ← (word) getFAC::return
  return (word) getFAC::return
  to:@return
getFAC::@1: scope:[getFAC]  from
  to:getFAC::@return
@3: scope:[]  from @2
  to:@4
setARGtoFAC: scope:[setARGtoFAC]  from
  asm { jsr$bc0f  }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
@4: scope:[]  from @3
  to:@5
setFACtoARG: scope:[setFACtoARG]  from
  asm { jsr$bbfc  }
  to:setFACtoARG::@return
setFACtoARG::@return: scope:[setFACtoARG]  from setFACtoARG
  return 
  to:@return
@5: scope:[]  from @4
  to:@6
setMEMtoFAC: scope:[setMEMtoFAC]  from
  (void~) setMEMtoFAC::$0 ← call prepareMEM (byte*) setMEMtoFAC::mem 
  asm { ldx$fe ldy$ff jsr$bbd4  }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC
  return 
  to:@return
@6: scope:[]  from @5
  to:@7
setFACtoMEM: scope:[setFACtoMEM]  from
  (void~) setFACtoMEM::$0 ← call prepareMEM (byte*) setFACtoMEM::mem 
  asm { lda$fe ldy$ff jsr$bba2  }
  to:setFACtoMEM::@return
setFACtoMEM::@return: scope:[setFACtoMEM]  from setFACtoMEM
  return 
  to:@return
@7: scope:[]  from @6
  to:@8
setFACtoPIhalf: scope:[setFACtoPIhalf]  from
  asm { lda#$e0 ldy#$e2 jsr$bba2  }
  to:setFACtoPIhalf::@return
setFACtoPIhalf::@return: scope:[setFACtoPIhalf]  from setFACtoPIhalf
  return 
  to:@return
@8: scope:[]  from @7
  to:@9
setFACto2PI: scope:[setFACto2PI]  from
  asm { lda#$e5 ldy#$e2 jsr$bba2  }
  to:setFACto2PI::@return
setFACto2PI::@return: scope:[setFACto2PI]  from setFACto2PI
  return 
  to:@return
@9: scope:[]  from @8
  to:@10
setARGtoMEM: scope:[setARGtoMEM]  from
  (void~) setARGtoMEM::$0 ← call prepareMEM (byte*) setARGtoMEM::mem 
  asm { lda$fe ldy$ff jsr$ba8c  }
  to:setARGtoMEM::@return
setARGtoMEM::@return: scope:[setARGtoMEM]  from setARGtoMEM
  return 
  to:@return
@10: scope:[]  from @9
  to:@11
addMEMtoFAC: scope:[addMEMtoFAC]  from
  (void~) addMEMtoFAC::$0 ← call prepareMEM (byte*) addMEMtoFAC::mem 
  asm { lda$fe ldy$ff jsr$b867  }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC
  return 
  to:@return
@11: scope:[]  from @10
  to:@12
addARGtoFAC: scope:[addARGtoFAC]  from
  asm { jsr$b86a  }
  to:addARGtoFAC::@return
addARGtoFAC::@return: scope:[addARGtoFAC]  from addARGtoFAC
  return 
  to:@return
@12: scope:[]  from @11
  to:@13
subFACfromMEM: scope:[subFACfromMEM]  from
  (void~) subFACfromMEM::$0 ← call prepareMEM (byte*) subFACfromMEM::mem 
  asm { lda$fe ldy$ff jsr$b850  }
  to:subFACfromMEM::@return
subFACfromMEM::@return: scope:[subFACfromMEM]  from subFACfromMEM
  return 
  to:@return
@13: scope:[]  from @12
  to:@14
subFACfromARG: scope:[subFACfromARG]  from
  asm { jsr$b853  }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
@14: scope:[]  from @13
  to:@15
divMEMbyFAC: scope:[divMEMbyFAC]  from
  (void~) divMEMbyFAC::$0 ← call prepareMEM (byte*) divMEMbyFAC::mem 
  asm { lda$fe ldy$ff jsr$bb0f  }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC
  return 
  to:@return
@15: scope:[]  from @14
  to:@16
mulFACbyMEM: scope:[mulFACbyMEM]  from
  (void~) mulFACbyMEM::$0 ← call prepareMEM (byte*) mulFACbyMEM::mem 
  asm { lda$fe ldy$ff jsr$ba28  }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM
  return 
  to:@return
@16: scope:[]  from @15
  to:@17
pwrMEMbyFAC: scope:[pwrMEMbyFAC]  from
  (void~) pwrMEMbyFAC::$0 ← call prepareMEM (byte*) pwrMEMbyFAC::mem 
  asm { lda$fe ldy$ff jsr$bf78  }
  to:pwrMEMbyFAC::@return
pwrMEMbyFAC::@return: scope:[pwrMEMbyFAC]  from pwrMEMbyFAC
  return 
  to:@return
@17: scope:[]  from @16
  to:@18
intFAC: scope:[intFAC]  from
  asm { jsr$bccc  }
  to:intFAC::@return
intFAC::@return: scope:[intFAC]  from intFAC
  return 
  to:@return
@18: scope:[]  from @17
  to:@19
sinFAC: scope:[sinFAC]  from
  asm { jsr$e26b  }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@19: scope:[]  from @18
  to:@20
cosFAC: scope:[cosFAC]  from
  asm { jsr$e264  }
  to:cosFAC::@return
cosFAC::@return: scope:[cosFAC]  from cosFAC
  return 
  to:@return
@20: scope:[]  from @19
  to:@21
tanFAC: scope:[tanFAC]  from
  asm { jsr$e2b4  }
  to:tanFAC::@return
tanFAC::@return: scope:[tanFAC]  from tanFAC
  return 
  to:@return
@21: scope:[]  from @20
  to:@22
atnFAC: scope:[atnFAC]  from
  asm { jsr$e303  }
  to:atnFAC::@return
atnFAC::@return: scope:[atnFAC]  from atnFAC
  return 
  to:@return
@22: scope:[]  from @21
  to:@23
sqrFAC: scope:[sqrFAC]  from
  asm { jsr$bf71  }
  to:sqrFAC::@return
sqrFAC::@return: scope:[sqrFAC]  from sqrFAC
  return 
  to:@return
@23: scope:[]  from @22
  to:@24
expFAC: scope:[expFAC]  from
  asm { jsr$bfed  }
  to:expFAC::@return
expFAC::@return: scope:[expFAC]  from expFAC
  return 
  to:@return
@24: scope:[]  from @23
  to:@25
logFAC: scope:[logFAC]  from
  asm { jsr$b9ea  }
  to:logFAC::@return
logFAC::@return: scope:[logFAC]  from logFAC
  return 
  to:@return
@25: scope:[]  from @24
  to:@26
divFACby10: scope:[divFACby10]  from
  asm { jsr$bafe  }
  to:divFACby10::@return
divFACby10::@return: scope:[divFACby10]  from divFACby10
  return 
  to:@return
@26: scope:[]  from @25
  to:@27
mulFACby10: scope:[mulFACby10]  from
  asm { jsr$bae2  }
  to:mulFACby10::@return
mulFACby10::@return: scope:[mulFACby10]  from mulFACby10
  return 
  to:@return
@27: scope:[]  from @26
  (byte*) print_screen ← ((byte*)) (word/signed word/dword/signed dword) 1024
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:@28
print_str_lines: scope:[print_str_lines]  from
  to:print_str_lines::@1
print_str_lines::@1: scope:[print_str_lines]  from print_str_lines print_str_lines::@9
  (boolean~) print_str_lines::$0 ← *((byte*) print_str_lines::str) != (byte) '@'
  if((boolean~) print_str_lines::$0) goto print_str_lines::@2
  to:print_str_lines::@6
print_str_lines::@2: scope:[print_str_lines]  from print_str_lines::@1 print_str_lines::@7
  to:print_str_lines::@4
print_str_lines::@6: scope:[print_str_lines]  from print_str_lines::@1
  to:print_str_lines::@3
print_str_lines::@3: scope:[print_str_lines]  from print_str_lines::@10 print_str_lines::@6
  to:print_str_lines::@return
print_str_lines::@7: scope:[print_str_lines]  from
  to:print_str_lines::@2
print_str_lines::@4: scope:[print_str_lines]  from print_str_lines::@2 print_str_lines::@5
  (byte) print_str_lines::ch ← *((byte*) print_str_lines::str)
  (byte*) print_str_lines::str ← ++ (byte*) print_str_lines::str
  (boolean~) print_str_lines::$1 ← (byte) print_str_lines::ch != (byte) '@'
  (boolean~) print_str_lines::$2 ← ! (boolean~) print_str_lines::$1
  if((boolean~) print_str_lines::$2) goto print_str_lines::@5
  to:print_str_lines::@8
print_str_lines::@5: scope:[print_str_lines]  from print_str_lines::@4 print_str_lines::@8
  (boolean~) print_str_lines::$3 ← (byte) print_str_lines::ch != (byte) '@'
  if((boolean~) print_str_lines::$3) goto print_str_lines::@4
  to:print_str_lines::@9
print_str_lines::@8: scope:[print_str_lines]  from print_str_lines::@4
  *((byte*) print_char_cursor) ← (byte) print_str_lines::ch
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  to:print_str_lines::@5
print_str_lines::@9: scope:[print_str_lines]  from print_str_lines::@5
  (void~) print_str_lines::$4 ← call print_ln 
  to:print_str_lines::@1
print_str_lines::@10: scope:[print_str_lines]  from
  to:print_str_lines::@3
print_str_lines::@return: scope:[print_str_lines]  from print_str_lines::@3
  return 
  to:@return
@28: scope:[]  from @27
  to:@29
print_str_ln: scope:[print_str_ln]  from
  (void~) print_str_ln::$0 ← call print_str (byte*) print_str_ln::str 
  (void~) print_str_ln::$1 ← call print_ln 
  to:print_str_ln::@return
print_str_ln::@return: scope:[print_str_ln]  from print_str_ln
  return 
  to:@return
@29: scope:[]  from @28
  to:@30
print_str: scope:[print_str]  from
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@4
print_str::@2: scope:[print_str]  from print_str::@1 print_str::@5
  *((byte*) print_char_cursor) ← *((byte*) print_str::str)
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  to:print_str::@1
print_str::@4: scope:[print_str]  from print_str::@1
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@4 print_str::@6
  to:print_str::@return
print_str::@5: scope:[print_str]  from
  to:print_str::@2
print_str::@6: scope:[print_str]  from
  to:print_str::@3
print_str::@return: scope:[print_str]  from print_str::@3
  return 
  to:@return
@30: scope:[]  from @29
  to:@31
print_str_at: scope:[print_str_at]  from
  to:print_str_at::@1
print_str_at::@1: scope:[print_str_at]  from print_str_at print_str_at::@2
  (boolean~) print_str_at::$0 ← *((byte*) print_str_at::str) != (byte) '@'
  if((boolean~) print_str_at::$0) goto print_str_at::@2
  to:print_str_at::@4
print_str_at::@2: scope:[print_str_at]  from print_str_at::@1 print_str_at::@5
  *((byte*) print_str_at::at) ← *((byte*) print_str_at::str)
  (byte*) print_str_at::at ← ++ (byte*) print_str_at::at
  (byte*) print_str_at::str ← ++ (byte*) print_str_at::str
  to:print_str_at::@1
print_str_at::@4: scope:[print_str_at]  from print_str_at::@1
  to:print_str_at::@3
print_str_at::@3: scope:[print_str_at]  from print_str_at::@4 print_str_at::@6
  to:print_str_at::@return
print_str_at::@5: scope:[print_str_at]  from
  to:print_str_at::@2
print_str_at::@6: scope:[print_str_at]  from
  to:print_str_at::@3
print_str_at::@return: scope:[print_str_at]  from print_str_at::@3
  return 
  to:@return
@31: scope:[]  from @30
  to:@32
print_ln: scope:[print_ln]  from
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*~) print_ln::$0 ← (byte*) print_line_cursor + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) print_line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) print_line_cursor < (byte*) print_char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  return 
  to:@return
@32: scope:[]  from @31
  to:@33
print_sword: scope:[print_sword]  from
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  to:print_sword::@2
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@2
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
  to:print_sword::@return
print_sword::@2: scope:[print_sword]  from print_sword
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
  to:print_sword::@1
print_sword::@return: scope:[print_sword]  from print_sword::@1
  return 
  to:@return
@33: scope:[]  from @32
  to:@34
print_sbyte: scope:[print_sbyte]  from
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  to:print_sbyte::@2
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@2
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
  to:print_sbyte::@return
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
  to:print_sbyte::@1
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@1
  return 
  to:@return
@34: scope:[]  from @33
  to:@35
print_word: scope:[print_word]  from
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word
  return 
  to:@return
@35: scope:[]  from @34
  to:@36
print_dword: scope:[print_dword]  from
  (word~) print_dword::$0 ← > (dword) print_dword::dw
  (void~) print_dword::$1 ← call print_word (word~) print_dword::$0 
  (word~) print_dword::$2 ← < (dword) print_dword::dw
  (void~) print_dword::$3 ← call print_word (word~) print_dword::$2 
  to:print_dword::@return
print_dword::@return: scope:[print_dword]  from print_dword
  return 
  to:@return
@36: scope:[]  from @35
  to:@37
print_sdword: scope:[print_sdword]  from
  (boolean~) print_sdword::$0 ← (signed dword) print_sdword::dw < (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) print_sdword::$1 ← ! (boolean~) print_sdword::$0
  if((boolean~) print_sdword::$1) goto print_sdword::@1
  to:print_sdword::@2
print_sdword::@1: scope:[print_sdword]  from print_sdword print_sdword::@2
  (dword~) print_sdword::$4 ← ((dword)) (signed dword) print_sdword::dw
  (void~) print_sdword::$5 ← call print_dword (dword~) print_sdword::$4 
  to:print_sdword::@return
print_sdword::@2: scope:[print_sdword]  from print_sdword
  (void~) print_sdword::$2 ← call print_char (byte) '-' 
  (signed dword~) print_sdword::$3 ← - (signed dword) print_sdword::dw
  (signed dword) print_sdword::dw ← (signed dword~) print_sdword::$3
  to:print_sdword::@1
print_sdword::@return: scope:[print_sdword]  from print_sdword::@1
  return 
  to:@return
@37: scope:[]  from @36
  (byte[]) print_hextab ← (string) "0123456789abcdef"
  to:@38
print_byte: scope:[print_byte]  from
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word/dword/signed dword) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word/dword/signed dword) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_hextab + (byte~) print_byte::$2) 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte
  return 
  to:@return
@38: scope:[]  from @37
  to:@39
print_char: scope:[print_char]  from
  *((byte*) print_char_cursor) ← (byte) print_char::ch
  (byte*) print_char_cursor ← ++ (byte*) print_char_cursor
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  return 
  to:@return
@39: scope:[]  from @38
  to:@40
print_cls: scope:[print_cls]  from
  (byte*) print_cls::sc ← (byte*) print_screen
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (byte*~) print_cls::$0 ← (byte*) print_screen + (word/signed word/dword/signed dword) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (byte*~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@2
print_cls::@2: scope:[print_cls]  from print_cls::@1
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@2
  return 
  to:@return
@40: scope:[]  from @39
  to:@41
print_set_screen: scope:[print_set_screen]  from
  (byte*) print_screen ← (byte*) print_set_screen::screen
  (byte*) print_line_cursor ← (byte*) print_screen
  (byte*) print_char_cursor ← (byte*) print_line_cursor
  to:print_set_screen::@return
print_set_screen::@return: scope:[print_set_screen]  from print_set_screen
  return 
  to:@return
@41: scope:[]  from @40
  (byte) sinlen_x ← (byte/word/signed word/dword/signed dword) 221
  (byte[221]) sintab_x ← { fill( 221, 0) }
  (byte) sinlen_y ← (byte/word/signed word/dword/signed dword) 197
  (byte[197]) sintab_y ← { fill( 197, 0) }
  (byte*) sprites ← ((byte*)) (word/signed word/dword/signed dword) 8192
  (byte*) SCREEN ← ((byte*)) (word/signed word/dword/signed dword) 1024
  to:@42
main: scope:[main]  from
  (void~) main::$0 ← call init 
  to:main::@1
main::@1: scope:[main]  from main main::@3
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  (boolean~) main::$1 ← *((byte*) RASTER) != (byte/word/signed word/dword/signed dword) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (void~) main::$2 ← call anim 
  if(true) goto main::@1
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@return
main::@return: scope:[main]  from main::@4
  return 
  to:@return
@42: scope:[]  from @41
  to:@43
init: scope:[init]  from
  (void~) init::$0 ← call clear_screen 
  (byte) init::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:init::@1
init::@1: scope:[init]  from init init::@1
  *((byte*) COLS + (byte) init::i) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte/signed word/word/dword/signed dword~) init::$1 ← (byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i
  *((byte*) COLS + (byte/signed word/word/dword/signed dword~) init::$1) ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) init::i ← ++ (byte) init::i
  (boolean~) init::$2 ← (byte) init::i != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) init::$2) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (void~) init::$3 ← call place_sprites 
  (void~) init::$4 ← call gen_sprites 
  (void~) init::$5 ← call progress_init (byte*) SCREEN 
  (void~) init::$6 ← call gen_sintab (byte[221]) sintab_x (byte) sinlen_x (byte/signed byte/word/signed word/dword/signed dword) 0 (byte/word/signed word/dword/signed dword) 255 
  (byte*~) init::$7 ← (byte*) SCREEN + (byte/signed byte/word/signed word/dword/signed dword) 40
  (void~) init::$8 ← call progress_init (byte*~) init::$7 
  (void~) init::$9 ← call gen_sintab (byte[197]) sintab_y (byte) sinlen_y (byte/signed byte/word/signed word/dword/signed dword) 50 (byte/word/signed word/dword/signed dword) 208 
  (void~) init::$10 ← call clear_screen 
  to:init::@return
init::@return: scope:[init]  from init::@2
  return 
  to:@return
@43: scope:[]  from @42
  to:@44
clear_screen: scope:[clear_screen]  from
  (byte*) clear_screen::sc ← (byte*) SCREEN
  to:clear_screen::@1
clear_screen::@1: scope:[clear_screen]  from clear_screen clear_screen::@1
  *((byte*) clear_screen::sc) ← (byte) ' '
  (byte*) clear_screen::sc ← ++ (byte*) clear_screen::sc
  (byte*~) clear_screen::$0 ← (byte*) SCREEN + (word/signed word/dword/signed dword) 1000
  (boolean~) clear_screen::$1 ← (byte*) clear_screen::sc < (byte*~) clear_screen::$0
  if((boolean~) clear_screen::$1) goto clear_screen::@1
  to:clear_screen::@2
clear_screen::@2: scope:[clear_screen]  from clear_screen::@1
  to:clear_screen::@return
clear_screen::@return: scope:[clear_screen]  from clear_screen::@2
  return 
  to:@return
@44: scope:[]  from @43
  (byte*) progress_cursor ← (byte*) SCREEN
  (byte) progress_idx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:@45
progress_init: scope:[progress_init]  from
  (byte*) progress_cursor ← (byte*) progress_init::line
  (byte) progress_idx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:progress_init::@return
progress_init::@return: scope:[progress_init]  from progress_init
  return 
  to:@return
@45: scope:[]  from @44
  to:@46
progress_inc: scope:[progress_inc]  from
  (byte[]) progress_inc::progress_chars ← { (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 101, (byte/signed byte/word/signed word/dword/signed dword) 116, (byte/signed byte/word/signed word/dword/signed dword) 117, (byte/signed byte/word/signed word/dword/signed dword) 97, (byte/word/signed word/dword/signed dword) 246, (byte/word/signed word/dword/signed dword) 231, (byte/word/signed word/dword/signed dword) 234, (byte/word/signed word/dword/signed dword) 224 }
  (byte) progress_idx ← ++ (byte) progress_idx
  (boolean~) progress_inc::$0 ← (byte) progress_idx == (byte/signed byte/word/signed word/dword/signed dword) 8
  (boolean~) progress_inc::$1 ← ! (boolean~) progress_inc::$0
  if((boolean~) progress_inc::$1) goto progress_inc::@1
  to:progress_inc::@2
progress_inc::@1: scope:[progress_inc]  from progress_inc progress_inc::@2
  *((byte*) progress_cursor) ← *((byte[]) progress_inc::progress_chars + (byte) progress_idx)
  to:progress_inc::@return
progress_inc::@2: scope:[progress_inc]  from progress_inc
  *((byte*) progress_cursor) ← *((byte[]) progress_inc::progress_chars + (byte/signed byte/word/signed word/dword/signed dword) 8)
  (byte*) progress_cursor ← ++ (byte*) progress_cursor
  (byte) progress_idx ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:progress_inc::@1
progress_inc::@return: scope:[progress_inc]  from progress_inc::@1
  return 
  to:@return
@46: scope:[]  from @45
  (byte) sin_idx_x ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) sin_idx_y ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:@47
anim: scope:[anim]  from
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) anim::xidx ← (byte) sin_idx_x
  (byte) anim::yidx ← (byte) sin_idx_y
  (byte) anim::j2 ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) anim::x_msb ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) anim::j ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte/signed byte/word/signed word/dword/signed dword~) anim::$0 ← ((word)) (byte/signed byte/word/signed word/dword/signed dword) 30
  (byte/signed word/word/dword/signed dword~) anim::$1 ← (byte/signed byte/word/signed word/dword/signed dword~) anim::$0 + *((byte[221]) sintab_x + (byte) anim::xidx)
  (word) anim::x ← (byte/signed word/word/dword/signed dword~) anim::$1
  (byte~) anim::$2 ← (byte) anim::x_msb << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) anim::$3 ← > (word) anim::x
  (byte~) anim::$4 ← (byte~) anim::$2 | (byte~) anim::$3
  (byte) anim::x_msb ← (byte~) anim::$4
  (byte~) anim::$5 ← < (word) anim::x
  *((byte*) SPRITES_XPOS + (byte) anim::j2) ← (byte~) anim::$5
  *((byte*) SPRITES_YPOS + (byte) anim::j2) ← *((byte[197]) sintab_y + (byte) anim::yidx)
  (byte/signed word/word/dword/signed dword~) anim::$6 ← (byte) anim::xidx + (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) anim::xidx ← (byte/signed word/word/dword/signed dword~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::xidx >= (byte) sinlen_x
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte/signed word/word/dword/signed dword~) anim::$10 ← (byte) anim::yidx + (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) anim::yidx ← (byte/signed word/word/dword/signed dword~) anim::$10
  (boolean~) anim::$11 ← (byte) anim::yidx >= (byte) sinlen_y
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte~) anim::$9 ← (byte) anim::xidx - (byte) sinlen_x
  (byte) anim::xidx ← (byte~) anim::$9
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte/signed word/word/dword/signed dword~) anim::$14 ← (byte) anim::j2 - (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) anim::j2 ← (byte/signed word/word/dword/signed dword~) anim::$14
  (byte) anim::j ← ++ (byte) anim::j
  (boolean~) anim::$15 ← (byte) anim::j != (byte/signed byte/word/signed word/dword/signed dword) 7
  if((boolean~) anim::$15) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte~) anim::$13 ← (byte) anim::yidx - (byte) sinlen_y
  (byte) anim::yidx ← (byte~) anim::$13
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  *((byte*) SPRITES_XMSB) ← (byte) anim::x_msb
  (byte) sin_idx_x ← ++ (byte) sin_idx_x
  (boolean~) anim::$16 ← (byte) sin_idx_x >= (byte) sinlen_x
  (boolean~) anim::$17 ← ! (boolean~) anim::$16
  if((boolean~) anim::$17) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_y ← ++ (byte) sin_idx_y
  (boolean~) anim::$18 ← (byte) sin_idx_y >= (byte) sinlen_y
  (boolean~) anim::$19 ← ! (boolean~) anim::$18
  if((boolean~) anim::$19) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
@47: scope:[]  from @46
  to:@48
place_sprites: scope:[place_sprites]  from
  *((byte*) SPRITES_ENABLE) ← (byte/signed byte/word/signed word/dword/signed dword) 127
  *((byte*) SPRITES_EXPAND_X) ← (byte/signed byte/word/signed word/dword/signed dword) 127
  *((byte*) SPRITES_EXPAND_Y) ← (byte/signed byte/word/signed word/dword/signed dword) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN + (word/signed word/dword/signed dword) 1016
  (byte*) place_sprites::sprites_ptr ← (byte*~) place_sprites::$0
  (byte*~) place_sprites::$1 ← (byte*) sprites / (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte*~) place_sprites::$1
  (byte) place_sprites::spr_id ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x ← (byte/signed byte/word/signed word/dword/signed dword) 60
  (byte) place_sprites::j2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) place_sprites::col ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) place_sprites::j ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  *((byte*) place_sprites::sprites_ptr + (byte) place_sprites::j) ← (byte) place_sprites::spr_id
  (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
  *((byte*) SPRITES_XPOS + (byte) place_sprites::j2) ← (byte) place_sprites::spr_x
  *((byte*) SPRITES_YPOS + (byte) place_sprites::j2) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) SPRITES_COLS + (byte) place_sprites::j) ← (byte) place_sprites::col
  (byte/signed word/word/dword/signed dword~) place_sprites::$3 ← (byte) place_sprites::spr_x + (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) place_sprites::spr_x ← (byte/signed word/word/dword/signed dword~) place_sprites::$3
  (byte/signed byte/word/signed word/dword/signed dword~) place_sprites::$4 ← (byte/signed byte/word/signed word/dword/signed dword) 7 ^ (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte/word/dword~) place_sprites::$5 ← (byte) place_sprites::col ^ (byte/signed byte/word/signed word/dword/signed dword~) place_sprites::$4
  (byte) place_sprites::col ← (byte/word/dword~) place_sprites::$5
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j ← ++ (byte) place_sprites::j
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j != (byte/signed byte/word/signed word/dword/signed dword) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@2
place_sprites::@2: scope:[place_sprites]  from place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@2
  return 
  to:@return
@48: scope:[]  from @47
  to:@49
gen_sprites: scope:[gen_sprites]  from
  (byte[]) gen_sprites::cml ← (string) "camelot"
  (byte*) gen_sprites::spr ← (byte*) sprites
  (byte) gen_sprites::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@1
  (void~) gen_sprites::$0 ← call gen_chargen_sprite *((byte[]) gen_sprites::cml + (byte) gen_sprites::i) (byte*) gen_sprites::spr 
  (byte*~) gen_sprites::$1 ← (byte*) gen_sprites::spr + (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte*) gen_sprites::spr ← (byte*~) gen_sprites::$1
  (byte) gen_sprites::i ← ++ (byte) gen_sprites::i
  (boolean~) gen_sprites::$2 ← (byte) gen_sprites::i != (byte/signed byte/word/signed word/dword/signed dword) 7
  if((boolean~) gen_sprites::$2) goto gen_sprites::@1
  to:gen_sprites::@2
gen_sprites::@2: scope:[gen_sprites]  from gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@2
  return 
  to:@return
@49: scope:[]  from @48
  to:@50
gen_chargen_sprite: scope:[gen_chargen_sprite]  from
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen ← (byte*~) gen_chargen_sprite::$2
  asm { sei  }
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte) gen_chargen_sprite::y ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte) gen_chargen_sprite::bits ← *((byte*) gen_chargen_sprite::chargen + (byte) gen_chargen_sprite::y)
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_chargen_sprite::x ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits & (byte/word/signed word/dword/signed dword) 128
  (boolean~) gen_chargen_sprite::$4 ← (byte~) gen_chargen_sprite::$3 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) gen_chargen_sprite::$5 ← ! (boolean~) gen_chargen_sprite::$4
  if((boolean~) gen_chargen_sprite::$5) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::b ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word/dword/signed dword) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) gen_chargen_sprite::$7 ← (byte~) gen_chargen_sprite::$6 | (byte) gen_chargen_sprite::c
  (byte) gen_chargen_sprite::s_gen ← (byte~) gen_chargen_sprite::$7
  (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
  (boolean~) gen_chargen_sprite::$8 ← (byte) gen_chargen_sprite::s_gen_cnt == (byte/signed byte/word/signed word/dword/signed dword) 8
  (boolean~) gen_chargen_sprite::$9 ← ! (boolean~) gen_chargen_sprite::$8
  if((boolean~) gen_chargen_sprite::$9) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte) gen_chargen_sprite::b ← ++ (byte) gen_chargen_sprite::b
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::b != (byte/signed byte/word/signed word/dword/signed dword) 3
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen
  (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::bits << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$11
  (byte) gen_chargen_sprite::x ← ++ (byte) gen_chargen_sprite::x
  (boolean~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::x != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) gen_chargen_sprite::$12) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*~) gen_chargen_sprite::$13 ← (byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte*) gen_chargen_sprite::sprite ← (byte*~) gen_chargen_sprite::$13
  (byte) gen_chargen_sprite::y ← ++ (byte) gen_chargen_sprite::y
  (boolean~) gen_chargen_sprite::$14 ← (byte) gen_chargen_sprite::y != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) gen_chargen_sprite::$14) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word/dword/signed dword) 55
  asm { cli  }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
@50: scope:[]  from @49
  to:@51
gen_sintab: scope:[gen_sintab]  from
  (byte[]) gen_sintab::f_i ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
  (byte[]) gen_sintab::f_min ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
  (byte[]) gen_sintab::f_amp ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
  (byte*) gen_sintab::f_2pi ← ((byte*)) (word/dword/signed dword) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max
  (void~) gen_sintab::$1 ← call setFAC (word~) gen_sintab::$0 
  (void~) gen_sintab::$2 ← call setARGtoFAC 
  asm { lda#0 ldx#0 ldy#0  }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min
  (void~) gen_sintab::$4 ← call setFAC (word~) gen_sintab::$3 
  (void~) gen_sintab::$5 ← call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (void~) gen_sintab::$6 ← call subFACfromARG 
  (void~) gen_sintab::$7 ← call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$8 ← call setFAC (byte/signed byte/word/signed word/dword/signed dword) 2 
  (void~) gen_sintab::$9 ← call divMEMbyFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$10 ← call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$11 ← call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (void~) gen_sintab::$12 ← call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (byte) gen_sintab::i ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab gen_sintab::@1
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i
  (void~) gen_sintab::$14 ← call setFAC (word~) gen_sintab::$13 
  (void~) gen_sintab::$15 ← call mulFACbyMEM (byte*) gen_sintab::f_2pi 
  (void~) gen_sintab::$16 ← call setMEMtoFAC (byte[]) gen_sintab::f_i 
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length
  (void~) gen_sintab::$18 ← call setFAC (word~) gen_sintab::$17 
  (void~) gen_sintab::$19 ← call divMEMbyFAC (byte[]) gen_sintab::f_i 
  (void~) gen_sintab::$20 ← call sinFAC 
  (void~) gen_sintab::$21 ← call mulFACbyMEM (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$22 ← call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (word~) gen_sintab::$23 ← call getFAC 
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab + (byte) gen_sintab::i) ← (byte~) gen_sintab::$24
  (void~) gen_sintab::$25 ← call progress_inc 
  (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
  (boolean~) gen_sintab::$26 ← (byte) gen_sintab::i < (byte) gen_sintab::length
  if((boolean~) gen_sintab::$26) goto gen_sintab::@1
  to:gen_sintab::@2
gen_sintab::@2: scope:[gen_sintab]  from gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@2
  return 
  to:@return
@51: scope:[]  from @50
  call main 
  to:@end
@end: scope:[]  from @51

Removing unused procedure setFACtoARG
Removing unused procedure setFACtoMEM
Removing unused procedure setFACtoPIhalf
Removing unused procedure setFACto2PI
Removing unused procedure setARGtoMEM
Removing unused procedure addARGtoFAC
Removing unused procedure subFACfromMEM
Removing unused procedure pwrMEMbyFAC
Removing unused procedure intFAC
Removing unused procedure cosFAC
Removing unused procedure tanFAC
Removing unused procedure atnFAC
Removing unused procedure sqrFAC
Removing unused procedure expFAC
Removing unused procedure logFAC
Removing unused procedure divFACby10
Removing unused procedure mulFACby10
Removing unused procedure print_str_lines
Removing unused procedure print_str_ln
Removing unused procedure print_str_at
Removing unused procedure print_sword
Removing unused procedure print_sbyte
Removing unused procedure print_sdword
Removing unused procedure print_cls
Removing unused procedure print_set_screen
Removing unused procedure print_str
Removing unused procedure print_ln
Removing unused procedure print_dword
Removing unused procedure print_word
Removing unused procedure print_byte
Removing unused procedure print_char
Eliminating unused variable (byte*) PROCPORT_DDR and assignment [0] (byte*) PROCPORT_DDR ← ((byte*)) (byte/signed byte/word/signed word/dword/signed dword) 0
Eliminating unused variable (byte) PROCPORT_DDR_MEMORY_MASK and assignment [1] (byte) PROCPORT_DDR_MEMORY_MASK ← (byte/signed byte/word/signed word/dword/signed dword) 7
Eliminating unused variable (byte) PROCPORT_RAM_ALL and assignment [3] (byte) PROCPORT_RAM_ALL ← (byte/signed byte/word/signed word/dword/signed dword) 48
Eliminating unused variable (byte) PROCPORT_RAM_IO and assignment [4] (byte) PROCPORT_RAM_IO ← (byte/signed byte/word/signed word/dword/signed dword) 53
Eliminating unused variable (byte) PROCPORT_RAM_CHARROM and assignment [5] (byte) PROCPORT_RAM_CHARROM ← (byte/signed byte/word/signed word/dword/signed dword) 49
Eliminating unused variable (byte) PROCPORT_KERNEL_IO and assignment [6] (byte) PROCPORT_KERNEL_IO ← (byte/signed byte/word/signed word/dword/signed dword) 54
Eliminating unused variable (byte) PROCPORT_BASIC_KERNEL_IO and assignment [7] (byte) PROCPORT_BASIC_KERNEL_IO ← (byte/signed byte/word/signed word/dword/signed dword) 55
Eliminating unused variable (byte*) SPRITES_PRIORITY and assignment [15] (byte*) SPRITES_PRIORITY ← ((byte*)) (word/dword/signed dword) 53275
Eliminating unused variable (byte*) SPRITES_MC and assignment [16] (byte*) SPRITES_MC ← ((byte*)) (word/dword/signed dword) 53276
Eliminating unused variable (byte*) BGCOL and assignment [19] (byte*) BGCOL ← ((byte*)) (word/dword/signed dword) 53281
Eliminating unused variable (byte*) BGCOL1 and assignment [20] (byte*) BGCOL1 ← ((byte*)) (word/dword/signed dword) 53281
Eliminating unused variable (byte*) BGCOL2 and assignment [21] (byte*) BGCOL2 ← ((byte*)) (word/dword/signed dword) 53282
Eliminating unused variable (byte*) BGCOL3 and assignment [22] (byte*) BGCOL3 ← ((byte*)) (word/dword/signed dword) 53283
Eliminating unused variable (byte*) BGCOL4 and assignment [23] (byte*) BGCOL4 ← ((byte*)) (word/dword/signed dword) 53284
Eliminating unused variable (byte*) SPRITES_MC1 and assignment [24] (byte*) SPRITES_MC1 ← ((byte*)) (word/dword/signed dword) 53285
Eliminating unused variable (byte*) SPRITES_MC2 and assignment [25] (byte*) SPRITES_MC2 ← ((byte*)) (word/dword/signed dword) 53286
Eliminating unused variable (byte*) VIC_CONTROL and assignment [27] (byte*) VIC_CONTROL ← ((byte*)) (word/dword/signed dword) 53265
Eliminating unused variable (byte*) D011 and assignment [28] (byte*) D011 ← ((byte*)) (word/dword/signed dword) 53265
Eliminating unused variable (byte) VIC_RST8 and assignment [29] (byte) VIC_RST8 ← (byte/word/signed word/dword/signed dword) 128
Eliminating unused variable (byte) VIC_ECM and assignment [30] (byte) VIC_ECM ← (byte/signed byte/word/signed word/dword/signed dword) 64
Eliminating unused variable (byte) VIC_BMM and assignment [31] (byte) VIC_BMM ← (byte/signed byte/word/signed word/dword/signed dword) 32
Eliminating unused variable (byte) VIC_DEN and assignment [32] (byte) VIC_DEN ← (byte/signed byte/word/signed word/dword/signed dword) 16
Eliminating unused variable (byte) VIC_RSEL and assignment [33] (byte) VIC_RSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
Eliminating unused variable (byte*) VIC_CONTROL2 and assignment [34] (byte*) VIC_CONTROL2 ← ((byte*)) (word/dword/signed dword) 53270
Eliminating unused variable (byte*) D016 and assignment [35] (byte*) D016 ← ((byte*)) (word/dword/signed dword) 53270
Eliminating unused variable (byte) VIC_MCM and assignment [36] (byte) VIC_MCM ← (byte/signed byte/word/signed word/dword/signed dword) 16
Eliminating unused variable (byte) VIC_CSEL and assignment [37] (byte) VIC_CSEL ← (byte/signed byte/word/signed word/dword/signed dword) 8
Eliminating unused variable (byte*) D018 and assignment [38] (byte*) D018 ← ((byte*)) (word/dword/signed dword) 53272
Eliminating unused variable (byte*) VIC_MEMORY and assignment [39] (byte*) VIC_MEMORY ← ((byte*)) (word/dword/signed dword) 53272
Eliminating unused variable (byte*) CIA1_PORT_A and assignment [41] (byte*) CIA1_PORT_A ← ((byte*)) (word/dword/signed dword) 56320
Eliminating unused variable (byte*) CIA1_PORT_B and assignment [42] (byte*) CIA1_PORT_B ← ((byte*)) (word/dword/signed dword) 56321
Eliminating unused variable (byte*) CIA1_PORT_A_DDR and assignment [43] (byte*) CIA1_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56322
Eliminating unused variable (byte*) CIA1_PORT_B_DDR and assignment [44] (byte*) CIA1_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56323
Eliminating unused variable (byte*) CIA2_PORT_A and assignment [45] (byte*) CIA2_PORT_A ← ((byte*)) (word/dword/signed dword) 56576
Eliminating unused variable (byte*) CIA2_PORT_B and assignment [46] (byte*) CIA2_PORT_B ← ((byte*)) (word/dword/signed dword) 56577
Eliminating unused variable (byte*) CIA2_PORT_A_DDR and assignment [47] (byte*) CIA2_PORT_A_DDR ← ((byte*)) (word/dword/signed dword) 56578
Eliminating unused variable (byte*) CIA2_PORT_B_DDR and assignment [48] (byte*) CIA2_PORT_B_DDR ← ((byte*)) (word/dword/signed dword) 56579
Eliminating unused variable (byte) BLACK and assignment [49] (byte) BLACK ← (byte/signed byte/word/signed word/dword/signed dword) 0
Eliminating unused variable (byte) WHITE and assignment [50] (byte) WHITE ← (byte/signed byte/word/signed word/dword/signed dword) 1
Eliminating unused variable (byte) RED and assignment [51] (byte) RED ← (byte/signed byte/word/signed word/dword/signed dword) 2
Eliminating unused variable (byte) CYAN and assignment [52] (byte) CYAN ← (byte/signed byte/word/signed word/dword/signed dword) 3
Eliminating unused variable (byte) PURPLE and assignment [53] (byte) PURPLE ← (byte/signed byte/word/signed word/dword/signed dword) 4
Eliminating unused variable (byte) GREEN and assignment [54] (byte) GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 5
Eliminating unused variable (byte) BLUE and assignment [55] (byte) BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 6
Eliminating unused variable (byte) YELLOW and assignment [56] (byte) YELLOW ← (byte/signed byte/word/signed word/dword/signed dword) 7
Eliminating unused variable (byte) ORANGE and assignment [57] (byte) ORANGE ← (byte/signed byte/word/signed word/dword/signed dword) 8
Eliminating unused variable (byte) BROWN and assignment [58] (byte) BROWN ← (byte/signed byte/word/signed word/dword/signed dword) 9
Eliminating unused variable (byte) PINK and assignment [59] (byte) PINK ← (byte/signed byte/word/signed word/dword/signed dword) 10
Eliminating unused variable (byte) DARK_GREY and assignment [60] (byte) DARK_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 11
Eliminating unused variable (byte) GREY and assignment [61] (byte) GREY ← (byte/signed byte/word/signed word/dword/signed dword) 12
Eliminating unused variable (byte) LIGHT_GREEN and assignment [62] (byte) LIGHT_GREEN ← (byte/signed byte/word/signed word/dword/signed dword) 13
Eliminating unused variable (byte) LIGHT_BLUE and assignment [63] (byte) LIGHT_BLUE ← (byte/signed byte/word/signed word/dword/signed dword) 14
Eliminating unused variable (byte) LIGHT_GREY and assignment [64] (byte) LIGHT_GREY ← (byte/signed byte/word/signed word/dword/signed dword) 15
Eliminating unused variable - keeping the call (void~) setFAC::$1
Eliminating unused variable - keeping the call (void~) setMEMtoFAC::$0
Eliminating unused variable - keeping the call (void~) addMEMtoFAC::$0
Eliminating unused variable - keeping the call (void~) divMEMbyFAC::$0
Eliminating unused variable - keeping the call (void~) mulFACbyMEM::$0
Eliminating unused variable (byte*) print_char_cursor and assignment [101] (byte*) print_char_cursor ← (byte*) print_line_cursor
Eliminating unused variable (byte[]) print_hextab and assignment [102] (byte[]) print_hextab ← (string) "0123456789abcdef"
Eliminating unused variable - keeping the call (void~) main::$0
Eliminating unused variable - keeping the call (void~) main::$2
Eliminating unused variable - keeping the call (void~) init::$0
Eliminating unused variable - keeping the call (void~) init::$3
Eliminating unused variable - keeping the call (void~) init::$4
Eliminating unused variable - keeping the call (void~) init::$5
Eliminating unused variable - keeping the call (void~) init::$6
Eliminating unused variable - keeping the call (void~) init::$8
Eliminating unused variable - keeping the call (void~) init::$9
Eliminating unused variable - keeping the call (void~) init::$10
Eliminating unused variable - keeping the call (void~) gen_sprites::$0
Eliminating unused variable - keeping the call (void~) gen_sintab::$1
Eliminating unused variable - keeping the call (void~) gen_sintab::$2
Eliminating unused variable - keeping the call (void~) gen_sintab::$4
Eliminating unused variable - keeping the call (void~) gen_sintab::$5
Eliminating unused variable - keeping the call (void~) gen_sintab::$6
Eliminating unused variable - keeping the call (void~) gen_sintab::$7
Eliminating unused variable - keeping the call (void~) gen_sintab::$8
Eliminating unused variable - keeping the call (void~) gen_sintab::$9
Eliminating unused variable - keeping the call (void~) gen_sintab::$10
Eliminating unused variable - keeping the call (void~) gen_sintab::$11
Eliminating unused variable - keeping the call (void~) gen_sintab::$12
Eliminating unused variable - keeping the call (void~) gen_sintab::$14
Eliminating unused variable - keeping the call (void~) gen_sintab::$15
Eliminating unused variable - keeping the call (void~) gen_sintab::$16
Eliminating unused variable - keeping the call (void~) gen_sintab::$18
Eliminating unused variable - keeping the call (void~) gen_sintab::$19
Eliminating unused variable - keeping the call (void~) gen_sintab::$20
Eliminating unused variable - keeping the call (void~) gen_sintab::$21
Eliminating unused variable - keeping the call (void~) gen_sintab::$22
Eliminating unused variable - keeping the call (void~) gen_sintab::$25
Eliminating unused variable (byte*) print_line_cursor and assignment [47] (byte*) print_line_cursor ← (byte*) print_screen
Eliminating unused variable (byte*) print_screen and assignment [46] (byte*) print_screen ← ((byte*)) (word/signed word/dword/signed dword) 1024
Creating constant string variable for inline (const string) gen_sprites::$3 "camelot"
Removing empty block @1
Removing empty block @2
Removing empty block getFAC::@1
Removing empty block @3
Removing empty block @4
Removing empty block @5
Removing empty block @6
Removing empty block @7
Removing empty block @8
Removing empty block @9
Removing empty block @10
Removing empty block @11
Removing empty block @12
Removing empty block @13
Removing empty block @14
Removing empty block @15
Removing empty block @16
Removing empty block @17
Removing empty block @18
Removing empty block @19
Removing empty block @20
Removing empty block @21
Removing empty block @22
Removing empty block @23
Removing empty block @24
Removing empty block @25
Removing empty block @26
Removing empty block @27
Removing empty block @28
Removing empty block @29
Removing empty block @30
Removing empty block @31
Removing empty block @32
Removing empty block @33
Removing empty block @34
Removing empty block @35
Removing empty block @36
Removing empty block @37
Removing empty block @38
Removing empty block @39
Removing empty block @40
Removing empty block main::@4
Removing empty block @42
Removing empty block @43
Removing empty block clear_screen::@2
Removing empty block @45
Removing empty block @47
Removing empty block place_sprites::@2
Removing empty block @48
Removing empty block gen_sprites::@2
Removing empty block @49
Removing empty block @50
Removing empty block gen_sintab::@2
PROCEDURE MODIFY VARIABLE ANALYSIS
main modifies progress_cursor
main modifies progress_idx
main modifies sin_idx_x
main modifies sin_idx_y
init modifies progress_cursor
init modifies progress_idx
progress_init modifies progress_cursor
progress_init modifies progress_idx
progress_inc modifies progress_idx
progress_inc modifies progress_cursor
anim modifies sin_idx_x
anim modifies sin_idx_y
gen_sintab modifies progress_idx
gen_sintab modifies progress_cursor

Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...

CONTROL FLOW GRAPH SSA WITH ASSIGNMENT CALL & RETURN
@begin: scope:[]  from
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word/dword/signed dword) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word/dword/signed dword) 53249
  (byte*) SPRITES_XMSB#0 ← ((byte*)) (word/dword/signed dword) 53264
  (byte*) RASTER#0 ← ((byte*)) (word/dword/signed dword) 53266
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word/dword/signed dword) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word/dword/signed dword) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word/dword/signed dword) 53277
  (byte*) BORDERCOL#0 ← ((byte*)) (word/dword/signed dword) 53280
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word/dword/signed dword) 53287
  (byte*) COLS#0 ← ((byte*)) (word/dword/signed dword) 55296
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word/dword/signed dword) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word/dword/signed dword) 255
  to:@41
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$fe lda$ff jsr$b391  }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aa sty$fe sta$ff  }
  (word) getFAC::w#0 ← { *((byte*) memHi#0), *((byte*) memLo#0) }
  (word) getFAC::return#0 ← (word) getFAC::w#0
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return#3 ← phi( getFAC/(word) getFAC::return#0 )
  (word) getFAC::return#1 ← (word) getFAC::return#3
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f  }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$fe ldy$ff jsr$bbd4  }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$fe ldy$ff jsr$b867  }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853  }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$fe ldy$ff jsr$bb0f  }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$fe ldy$ff jsr$ba28  }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b  }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@41: scope:[]  from @begin
  (byte) sinlen_x#0 ← (byte/word/signed word/dword/signed dword) 221
  (byte[221]) sintab_x#0 ← { fill( 221, 0) }
  (byte) sinlen_y#0 ← (byte/word/signed word/dword/signed dword) 197
  (byte[197]) sintab_y#0 ← { fill( 197, 0) }
  (byte*) sprites#0 ← ((byte*)) (word/signed word/dword/signed dword) 8192
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word/dword/signed dword) 1024
  to:@44
main: scope:[main]  from @51
  (byte) sin_idx_y#24 ← phi( @51/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#26 ← phi( @51/(byte) sin_idx_x#16 )
  (byte) progress_idx#30 ← phi( @51/(byte) progress_idx#35 )
  (byte*) progress_cursor#29 ← phi( @51/(byte*) progress_cursor#35 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  (byte) sin_idx_y#21 ← phi( main/(byte) sin_idx_y#24 )
  (byte) sin_idx_x#23 ← phi( main/(byte) sin_idx_x#26 )
  (byte) progress_idx#16 ← phi( main/(byte) progress_idx#6 )
  (byte*) progress_cursor#15 ← phi( main/(byte*) progress_cursor#6 )
  (byte*) progress_cursor#0 ← (byte*) progress_cursor#15
  (byte) progress_idx#0 ← (byte) progress_idx#16
  to:main::@2
main::@1: scope:[main]  from main::@6
  (byte) progress_idx#43 ← phi( main::@6/(byte) progress_idx#31 )
  (byte*) progress_cursor#43 ← phi( main::@6/(byte*) progress_cursor#30 )
  (byte) sin_idx_y#20 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#22 ← phi( main::@6/(byte) sin_idx_x#0 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte) progress_idx#40 ← phi( main::@1/(byte) progress_idx#43 main::@2/(byte) progress_idx#40 main::@5/(byte) progress_idx#0 )
  (byte*) progress_cursor#40 ← phi( main::@1/(byte*) progress_cursor#43 main::@2/(byte*) progress_cursor#40 main::@5/(byte*) progress_cursor#0 )
  (byte) sin_idx_y#18 ← phi( main::@1/(byte) sin_idx_y#20 main::@2/(byte) sin_idx_y#18 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#17 ← phi( main::@1/(byte) sin_idx_x#22 main::@2/(byte) sin_idx_x#17 main::@5/(byte) sin_idx_x#23 )
  (boolean~) main::$1 ← *((byte*) RASTER#0) != (byte/word/signed word/dword/signed dword) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (byte) progress_idx#36 ← phi( main::@2/(byte) progress_idx#40 )
  (byte*) progress_cursor#36 ← phi( main::@2/(byte*) progress_cursor#40 )
  (byte) sin_idx_y#13 ← phi( main::@2/(byte) sin_idx_y#18 )
  (byte) sin_idx_x#13 ← phi( main::@2/(byte) sin_idx_x#17 )
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte) progress_idx#31 ← phi( main::@3/(byte) progress_idx#36 )
  (byte*) progress_cursor#30 ← phi( main::@3/(byte*) progress_cursor#36 )
  (byte) sin_idx_y#7 ← phi( main::@3/(byte) sin_idx_y#5 )
  (byte) sin_idx_x#7 ← phi( main::@3/(byte) sin_idx_x#5 )
  (byte) sin_idx_x#0 ← (byte) sin_idx_x#7
  (byte) sin_idx_y#0 ← (byte) sin_idx_y#7
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte) sin_idx_y#8 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#8 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte) progress_idx#17 ← phi( main::@6/(byte) progress_idx#31 )
  (byte*) progress_cursor#16 ← phi( main::@6/(byte*) progress_cursor#30 )
  (byte*) progress_cursor#1 ← (byte*) progress_cursor#16
  (byte) progress_idx#1 ← (byte) progress_idx#17
  (byte) sin_idx_x#1 ← (byte) sin_idx_x#8
  (byte) sin_idx_y#1 ← (byte) sin_idx_y#8
  return 
  to:@return
init: scope:[init]  from main
  (byte) progress_idx#48 ← phi( main/(byte) progress_idx#30 )
  (byte*) progress_cursor#48 ← phi( main/(byte*) progress_cursor#29 )
  call clear_screen param-assignment
  to:init::@3
init::@3: scope:[init]  from init
  (byte) progress_idx#46 ← phi( init/(byte) progress_idx#48 )
  (byte*) progress_cursor#46 ← phi( init/(byte*) progress_cursor#48 )
  (byte) init::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:init::@1
init::@1: scope:[init]  from init::@1 init::@3
  (byte) progress_idx#44 ← phi( init::@1/(byte) progress_idx#44 init::@3/(byte) progress_idx#46 )
  (byte*) progress_cursor#44 ← phi( init::@1/(byte*) progress_cursor#44 init::@3/(byte*) progress_cursor#46 )
  (byte) init::i#2 ← phi( init::@1/(byte) init::i#1 init::@3/(byte) init::i#0 )
  *((byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte/signed word/word/dword/signed dword~) init::$1 ← (byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2
  *((byte*) COLS#0 + (byte/signed word/word/dword/signed dword~) init::$1) ← (byte/signed byte/word/signed word/dword/signed dword) 11
  (byte) init::i#1 ← ++ (byte) init::i#2
  (boolean~) init::$2 ← (byte) init::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 40
  if((boolean~) init::$2) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (byte) progress_idx#41 ← phi( init::@1/(byte) progress_idx#44 )
  (byte*) progress_cursor#41 ← phi( init::@1/(byte*) progress_cursor#44 )
  call place_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@2
  (byte) progress_idx#37 ← phi( init::@2/(byte) progress_idx#41 )
  (byte*) progress_cursor#37 ← phi( init::@2/(byte*) progress_cursor#41 )
  call gen_sprites param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte) progress_idx#32 ← phi( init::@4/(byte) progress_idx#37 )
  (byte*) progress_cursor#31 ← phi( init::@4/(byte*) progress_cursor#37 )
  (byte*) progress_init::line#0 ← (byte*) SCREEN#0
  call progress_init param-assignment
  to:init::@6
init::@6: scope:[init]  from init::@5
  (byte) progress_idx#18 ← phi( init::@5/(byte) progress_idx#9 )
  (byte*) progress_cursor#17 ← phi( init::@5/(byte*) progress_cursor#9 )
  (byte*) progress_cursor#2 ← (byte*) progress_cursor#17
  (byte) progress_idx#2 ← (byte) progress_idx#18
  (byte*) gen_sintab::sintab#0 ← (byte[221]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_sintab::max#0 ← (byte/word/signed word/dword/signed dword) 255
  call gen_sintab param-assignment
  to:init::@7
init::@7: scope:[init]  from init::@6
  (byte*) progress_cursor#18 ← phi( init::@6/(byte*) progress_cursor#13 )
  (byte) progress_idx#19 ← phi( init::@6/(byte) progress_idx#14 )
  (byte) progress_idx#3 ← (byte) progress_idx#19
  (byte*) progress_cursor#3 ← (byte*) progress_cursor#18
  (byte*~) init::$7 ← (byte*) SCREEN#0 + (byte/signed byte/word/signed word/dword/signed dword) 40
  (byte*) progress_init::line#1 ← (byte*~) init::$7
  call progress_init param-assignment
  to:init::@8
init::@8: scope:[init]  from init::@7
  (byte) progress_idx#20 ← phi( init::@7/(byte) progress_idx#9 )
  (byte*) progress_cursor#19 ← phi( init::@7/(byte*) progress_cursor#9 )
  (byte*) progress_cursor#4 ← (byte*) progress_cursor#19
  (byte) progress_idx#4 ← (byte) progress_idx#20
  (byte*) gen_sintab::sintab#1 ← (byte[197]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte) gen_sintab::max#1 ← (byte/word/signed word/dword/signed dword) 208
  call gen_sintab param-assignment
  to:init::@9
init::@9: scope:[init]  from init::@8
  (byte*) progress_cursor#20 ← phi( init::@8/(byte*) progress_cursor#13 )
  (byte) progress_idx#21 ← phi( init::@8/(byte) progress_idx#14 )
  (byte) progress_idx#5 ← (byte) progress_idx#21
  (byte*) progress_cursor#5 ← (byte*) progress_cursor#20
  call clear_screen param-assignment
  to:init::@10
init::@10: scope:[init]  from init::@9
  (byte) progress_idx#33 ← phi( init::@9/(byte) progress_idx#5 )
  (byte*) progress_cursor#32 ← phi( init::@9/(byte*) progress_cursor#5 )
  to:init::@return
init::@return: scope:[init]  from init::@10
  (byte) progress_idx#22 ← phi( init::@10/(byte) progress_idx#33 )
  (byte*) progress_cursor#21 ← phi( init::@10/(byte*) progress_cursor#32 )
  (byte*) progress_cursor#6 ← (byte*) progress_cursor#21
  (byte) progress_idx#6 ← (byte) progress_idx#22
  return 
  to:@return
clear_screen: scope:[clear_screen]  from init init::@9
  (byte*) clear_screen::sc#0 ← (byte*) SCREEN#0
  to:clear_screen::@1
clear_screen::@1: scope:[clear_screen]  from clear_screen clear_screen::@1
  (byte*) clear_screen::sc#2 ← phi( clear_screen/(byte*) clear_screen::sc#0 clear_screen::@1/(byte*) clear_screen::sc#1 )
  *((byte*) clear_screen::sc#2) ← (byte) ' '
  (byte*) clear_screen::sc#1 ← ++ (byte*) clear_screen::sc#2
  (byte*~) clear_screen::$0 ← (byte*) SCREEN#0 + (word/signed word/dword/signed dword) 1000
  (boolean~) clear_screen::$1 ← (byte*) clear_screen::sc#1 < (byte*~) clear_screen::$0
  if((boolean~) clear_screen::$1) goto clear_screen::@1
  to:clear_screen::@return
clear_screen::@return: scope:[clear_screen]  from clear_screen::@1
  return 
  to:@return
@44: scope:[]  from @41
  (byte*) progress_cursor#7 ← (byte*) SCREEN#0
  (byte) progress_idx#7 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:@46
progress_init: scope:[progress_init]  from init::@5 init::@7
  (byte*) progress_init::line#2 ← phi( init::@5/(byte*) progress_init::line#0 init::@7/(byte*) progress_init::line#1 )
  (byte*) progress_cursor#8 ← (byte*) progress_init::line#2
  (byte) progress_idx#8 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:progress_init::@return
progress_init::@return: scope:[progress_init]  from progress_init
  (byte) progress_idx#23 ← phi( progress_init/(byte) progress_idx#8 )
  (byte*) progress_cursor#22 ← phi( progress_init/(byte*) progress_cursor#8 )
  (byte*) progress_cursor#9 ← (byte*) progress_cursor#22
  (byte) progress_idx#9 ← (byte) progress_idx#23
  return 
  to:@return
progress_inc: scope:[progress_inc]  from gen_sintab::@22
  (byte*) progress_cursor#33 ← phi( gen_sintab::@22/(byte*) progress_cursor#34 )
  (byte) progress_idx#24 ← phi( gen_sintab::@22/(byte) progress_idx#34 )
  (byte[]) progress_inc::progress_chars#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 101, (byte/signed byte/word/signed word/dword/signed dword) 116, (byte/signed byte/word/signed word/dword/signed dword) 117, (byte/signed byte/word/signed word/dword/signed dword) 97, (byte/word/signed word/dword/signed dword) 246, (byte/word/signed word/dword/signed dword) 231, (byte/word/signed word/dword/signed dword) 234, (byte/word/signed word/dword/signed dword) 224 }
  (byte) progress_idx#10 ← ++ (byte) progress_idx#24
  (boolean~) progress_inc::$0 ← (byte) progress_idx#10 == (byte/signed byte/word/signed word/dword/signed dword) 8
  (boolean~) progress_inc::$1 ← ! (boolean~) progress_inc::$0
  if((boolean~) progress_inc::$1) goto progress_inc::@1
  to:progress_inc::@2
progress_inc::@1: scope:[progress_inc]  from progress_inc progress_inc::@2
  (byte*) progress_cursor#23 ← phi( progress_inc/(byte*) progress_cursor#33 progress_inc::@2/(byte*) progress_cursor#10 )
  (byte) progress_idx#25 ← phi( progress_inc/(byte) progress_idx#10 progress_inc::@2/(byte) progress_idx#11 )
  *((byte*) progress_cursor#23) ← *((byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#25)
  to:progress_inc::@return
progress_inc::@2: scope:[progress_inc]  from progress_inc
  (byte*) progress_cursor#24 ← phi( progress_inc/(byte*) progress_cursor#33 )
  *((byte*) progress_cursor#24) ← *((byte[]) progress_inc::progress_chars#0 + (byte/signed byte/word/signed word/dword/signed dword) 8)
  (byte*) progress_cursor#10 ← ++ (byte*) progress_cursor#24
  (byte) progress_idx#11 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:progress_inc::@1
progress_inc::@return: scope:[progress_inc]  from progress_inc::@1
  (byte*) progress_cursor#25 ← phi( progress_inc::@1/(byte*) progress_cursor#23 )
  (byte) progress_idx#26 ← phi( progress_inc::@1/(byte) progress_idx#25 )
  (byte) progress_idx#12 ← (byte) progress_idx#26
  (byte*) progress_cursor#11 ← (byte*) progress_cursor#25
  return 
  to:@return
@46: scope:[]  from @44
  (byte) progress_idx#39 ← phi( @44/(byte) progress_idx#7 )
  (byte*) progress_cursor#39 ← phi( @44/(byte*) progress_cursor#7 )
  (byte) sin_idx_x#2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) sin_idx_y#2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:@51
anim: scope:[anim]  from main::@3
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  *((byte*) BORDERCOL#0) ← ++ *((byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word/dword/signed dword) 12
  (byte) anim::x_msb#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) anim::j#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) sin_idx_y#25 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#24 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#14 )
  (byte) anim::j#5 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#2 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#1 )
  (byte) anim::x_msb#2 ← phi( anim/(byte) anim::x_msb#0 anim::@3/(byte) anim::x_msb#4 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte/signed byte/word/signed word/dword/signed dword~) anim::$0 ← ((word)) (byte/signed byte/word/signed word/dword/signed dword) 30
  (byte/signed word/word/dword/signed dword~) anim::$1 ← (byte/signed byte/word/signed word/dword/signed dword~) anim::$0 + *((byte[221]) sintab_x#0 + (byte) anim::xidx#3)
  (word) anim::x#0 ← (byte/signed word/word/dword/signed dword~) anim::$1
  (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) anim::$3 ← > (word) anim::x#0
  (byte~) anim::$4 ← (byte~) anim::$2 | (byte~) anim::$3
  (byte) anim::x_msb#1 ← (byte~) anim::$4
  (byte~) anim::$5 ← < (word) anim::x#0
  *((byte*) SPRITES_XPOS#0 + (byte) anim::j2#2) ← (byte~) anim::$5
  *((byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((byte[197]) sintab_y#0 + (byte) anim::yidx#3)
  (byte/signed word/word/dword/signed dword~) anim::$6 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10
  (byte) anim::xidx#1 ← (byte/signed word/word/dword/signed dword~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::xidx#1 >= (byte) sinlen_x#0
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) sin_idx_y#22 ← phi( anim::@1/(byte) sin_idx_y#25 anim::@6/(byte) sin_idx_y#26 )
  (byte) sin_idx_x#18 ← phi( anim::@1/(byte) sin_idx_x#24 anim::@6/(byte) sin_idx_x#25 )
  (byte) anim::x_msb#5 ← phi( anim::@1/(byte) anim::x_msb#1 anim::@6/(byte) anim::x_msb#7 )
  (byte) anim::xidx#6 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::j#3 ← phi( anim::@1/(byte) anim::j#5 anim::@6/(byte) anim::j#6 )
  (byte) anim::j2#4 ← phi( anim::@1/(byte) anim::j2#2 anim::@6/(byte) anim::j2#6 )
  (byte) anim::yidx#4 ← phi( anim::@1/(byte) anim::yidx#3 anim::@6/(byte) anim::yidx#7 )
  (byte/signed word/word/dword/signed dword~) anim::$10 ← (byte) anim::yidx#4 + (byte/signed byte/word/signed word/dword/signed dword) 8
  (byte) anim::yidx#1 ← (byte/signed word/word/dword/signed dword~) anim::$10
  (boolean~) anim::$11 ← (byte) anim::yidx#1 >= (byte) sinlen_y#0
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) sin_idx_y#26 ← phi( anim::@1/(byte) sin_idx_y#25 )
  (byte) sin_idx_x#25 ← phi( anim::@1/(byte) sin_idx_x#24 )
  (byte) anim::x_msb#7 ← phi( anim::@1/(byte) anim::x_msb#1 )
  (byte) anim::j#6 ← phi( anim::@1/(byte) anim::j#5 )
  (byte) anim::j2#6 ← phi( anim::@1/(byte) anim::j2#2 )
  (byte) anim::yidx#7 ← phi( anim::@1/(byte) anim::yidx#3 )
  (byte) anim::xidx#4 ← phi( anim::@1/(byte) anim::xidx#1 )
  (byte~) anim::$9 ← (byte) anim::xidx#4 - (byte) sinlen_x#0
  (byte) anim::xidx#2 ← (byte~) anim::$9
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) sin_idx_y#19 ← phi( anim::@2/(byte) sin_idx_y#22 anim::@7/(byte) sin_idx_y#23 )
  (byte) sin_idx_x#14 ← phi( anim::@2/(byte) sin_idx_x#18 anim::@7/(byte) sin_idx_x#19 )
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::x_msb#4 ← phi( anim::@2/(byte) anim::x_msb#5 anim::@7/(byte) anim::x_msb#6 )
  (byte) anim::xidx#5 ← phi( anim::@2/(byte) anim::xidx#6 anim::@7/(byte) anim::xidx#7 )
  (byte) anim::j#2 ← phi( anim::@2/(byte) anim::j#3 anim::@7/(byte) anim::j#4 )
  (byte) anim::j2#3 ← phi( anim::@2/(byte) anim::j2#4 anim::@7/(byte) anim::j2#5 )
  (byte/signed word/word/dword/signed dword~) anim::$14 ← (byte) anim::j2#3 - (byte/signed byte/word/signed word/dword/signed dword) 2
  (byte) anim::j2#1 ← (byte/signed word/word/dword/signed dword~) anim::$14
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$15 ← (byte) anim::j#1 != (byte/signed byte/word/signed word/dword/signed dword) 7
  if((boolean~) anim::$15) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) sin_idx_y#23 ← phi( anim::@2/(byte) sin_idx_y#22 )
  (byte) sin_idx_x#19 ← phi( anim::@2/(byte) sin_idx_x#18 )
  (byte) anim::x_msb#6 ← phi( anim::@2/(byte) anim::x_msb#5 )
  (byte) anim::xidx#7 ← phi( anim::@2/(byte) anim::xidx#6 )
  (byte) anim::j#4 ← phi( anim::@2/(byte) anim::j#3 )
  (byte) anim::j2#5 ← phi( anim::@2/(byte) anim::j2#4 )
  (byte) anim::yidx#5 ← phi( anim::@2/(byte) anim::yidx#1 )
  (byte~) anim::$13 ← (byte) anim::yidx#5 - (byte) sinlen_y#0
  (byte) anim::yidx#2 ← (byte~) anim::$13
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_y#14 ← phi( anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#10 ← phi( anim::@3/(byte) sin_idx_x#14 )
  (byte) anim::x_msb#3 ← phi( anim::@3/(byte) anim::x_msb#4 )
  *((byte*) SPRITES_XMSB#0) ← (byte) anim::x_msb#3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$16 ← (byte) sin_idx_x#3 >= (byte) sinlen_x#0
  (boolean~) anim::$17 ← ! (boolean~) anim::$16
  if((boolean~) anim::$17) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#21 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte) sin_idx_y#10 ← phi( anim::@8/(byte) sin_idx_y#14 anim::@9/(byte) sin_idx_y#15 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$18 ← (byte) sin_idx_y#3 >= (byte) sinlen_y#0
  (boolean~) anim::$19 ← ! (boolean~) anim::$18
  if((boolean~) anim::$19) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_y#15 ← phi( anim::@8/(byte) sin_idx_y#14 )
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#16 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  (byte) sin_idx_x#15 ← phi( anim::@10/(byte) sin_idx_x#20 anim::@4/(byte) sin_idx_x#21 )
  *((byte*) BORDERCOL#0) ← -- *((byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_x#20 ← phi( anim::@4/(byte) sin_idx_x#21 )
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  (byte) sin_idx_y#11 ← phi( anim::@5/(byte) sin_idx_y#16 )
  (byte) sin_idx_x#11 ← phi( anim::@5/(byte) sin_idx_x#15 )
  (byte) sin_idx_x#5 ← (byte) sin_idx_x#11
  (byte) sin_idx_y#5 ← (byte) sin_idx_y#11
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127
  *((byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127
  *((byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN#0 + (word/signed word/dword/signed dword) 1016
  (byte*) place_sprites::sprites_ptr#0 ← (byte*~) place_sprites::$0
  (byte*~) place_sprites::$1 ← (byte*) sprites#0 / (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte*~) place_sprites::$1
  (byte) place_sprites::spr_id#0 ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word/dword/signed dword) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80
  *((byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte/signed word/word/dword/signed dword~) place_sprites::$3 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32
  (byte) place_sprites::spr_x#1 ← (byte/signed word/word/dword/signed dword~) place_sprites::$3
  (byte/signed byte/word/signed word/dword/signed dword~) place_sprites::$4 ← (byte/signed byte/word/signed word/dword/signed dword) 7 ^ (byte/signed byte/word/signed word/dword/signed dword) 5
  (byte/word/dword~) place_sprites::$5 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword~) place_sprites::$4
  (byte) place_sprites::col#1 ← (byte/word/dword~) place_sprites::$5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word/dword/signed dword) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@4
  (byte[]) gen_sprites::cml#0 ← (const string) gen_sprites::$3
  (byte*) gen_sprites::spr#0 ← (byte*) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte) gen_chargen_sprite::ch#0 ← *((byte[]) gen_sprites::cml#0 + (byte) gen_sprites::i#2)
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte) gen_sprites::i#3 ← phi( gen_sprites::@1/(byte) gen_sprites::i#2 )
  (byte*) gen_sprites::spr#3 ← phi( gen_sprites::@1/(byte*) gen_sprites::spr#2 )
  (byte*~) gen_sprites::$1 ← (byte*) gen_sprites::spr#3 + (byte/signed byte/word/signed word/dword/signed dword) 64
  (byte*) gen_sprites::spr#1 ← (byte*~) gen_sprites::$1
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#3
  (boolean~) gen_sprites::$2 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word/dword/signed dword) 7
  if((boolean~) gen_sprites::$2) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*~) gen_chargen_sprite::$2
  asm { sei  }
  *((byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#1 + (byte) gen_chargen_sprite::y#2)
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::chargen#8 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#9 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte) gen_chargen_sprite::x#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#9 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#8 )
  (byte) gen_chargen_sprite::s_gen#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#9 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128
  (boolean~) gen_chargen_sprite::$4 ← (byte~) gen_chargen_sprite::$3 != (byte/signed byte/word/signed word/dword/signed dword) 0
  (boolean~) gen_chargen_sprite::$5 ← ! (boolean~) gen_chargen_sprite::$4
  if((boolean~) gen_chargen_sprite::$5) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::chargen#9 )
  (byte) gen_chargen_sprite::y#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::x#8 )
  (byte) gen_chargen_sprite::bits#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::bits#8 )
  (byte*) gen_chargen_sprite::sprite#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::sprite#10 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen_cnt#7 )
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen#8 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte*) gen_chargen_sprite::chargen#9 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 )
  (byte) gen_chargen_sprite::x#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 )
  (byte) gen_chargen_sprite::bits#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 )
  (byte) gen_chargen_sprite::s_gen_cnt#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 )
  (byte) gen_chargen_sprite::s_gen#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 )
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word/dword/signed dword) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::chargen#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#6 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#8 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte) gen_chargen_sprite::x#4 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#5 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#7 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte*) gen_chargen_sprite::sprite#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::b#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#4 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte~) gen_chargen_sprite::$7 ← (byte~) gen_chargen_sprite::$6 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$8 ← (byte) gen_chargen_sprite::s_gen_cnt#1 == (byte/signed byte/word/signed word/dword/signed dword) 8
  (boolean~) gen_chargen_sprite::$9 ← ! (boolean~) gen_chargen_sprite::$8
  if((boolean~) gen_chargen_sprite::$9) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::chargen#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::chargen#6 )
  (byte) gen_chargen_sprite::y#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::y#7 )
  (byte*) gen_chargen_sprite::sprite#8 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::x#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::x#5 )
  (byte) gen_chargen_sprite::bits#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::bits#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::c#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::c#5 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::b#4 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word/dword/signed dword) 3
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  (byte*) gen_chargen_sprite::chargen#6 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 )
  (byte) gen_chargen_sprite::y#7 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 )
  (byte) gen_chargen_sprite::x#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 )
  (byte) gen_chargen_sprite::bits#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 )
  (byte) gen_chargen_sprite::c#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::b#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 )
  (byte) gen_chargen_sprite::s_gen#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 )
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#4
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::s_gen_cnt#8 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#9 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte*) gen_chargen_sprite::chargen#3 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#4 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte*) gen_chargen_sprite::sprite#6 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word/dword/signed dword) 1
  (byte) gen_chargen_sprite::bits#1 ← (byte~) gen_chargen_sprite::$11
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) gen_chargen_sprite::$12) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte*~) gen_chargen_sprite::$13 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*~) gen_chargen_sprite::$13
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$14 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word/dword/signed dword) 8
  if((boolean~) gen_chargen_sprite::$14) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55
  asm { cli  }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@6 init::@8
  (byte*) progress_cursor#65 ← phi( init::@6/(byte*) progress_cursor#2 init::@8/(byte*) progress_cursor#4 )
  (byte) progress_idx#65 ← phi( init::@6/(byte) progress_idx#2 init::@8/(byte) progress_idx#4 )
  (byte*) gen_sintab::sintab#24 ← phi( init::@6/(byte*) gen_sintab::sintab#0 init::@8/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#24 ← phi( init::@6/(byte) gen_sintab::length#0 init::@8/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#4 ← phi( init::@6/(byte) gen_sintab::min#0 init::@8/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@6/(byte) gen_sintab::max#0 init::@8/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word/dword/signed dword) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  (byte*) progress_cursor#64 ← phi( gen_sintab/(byte*) progress_cursor#65 )
  (byte) progress_idx#64 ← phi( gen_sintab/(byte) progress_idx#65 )
  (byte*) gen_sintab::sintab#23 ← phi( gen_sintab/(byte*) gen_sintab::sintab#24 )
  (byte) gen_sintab::length#23 ← phi( gen_sintab/(byte) gen_sintab::length#24 )
  (byte*) gen_sintab::f_2pi#22 ← phi( gen_sintab/(byte*) gen_sintab::f_2pi#0 )
  (byte) gen_sintab::min#3 ← phi( gen_sintab/(byte) gen_sintab::min#4 )
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  (byte*) progress_cursor#63 ← phi( gen_sintab::@3/(byte*) progress_cursor#64 )
  (byte) progress_idx#63 ← phi( gen_sintab::@3/(byte) progress_idx#64 )
  (byte*) gen_sintab::sintab#22 ← phi( gen_sintab::@3/(byte*) gen_sintab::sintab#23 )
  (byte) gen_sintab::length#22 ← phi( gen_sintab::@3/(byte) gen_sintab::length#23 )
  (byte*) gen_sintab::f_2pi#21 ← phi( gen_sintab::@3/(byte*) gen_sintab::f_2pi#22 )
  (byte) gen_sintab::min#2 ← phi( gen_sintab::@3/(byte) gen_sintab::min#3 )
  asm { lda#0 ldx#0 ldy#0  }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) progress_cursor#62 ← phi( gen_sintab::@4/(byte*) progress_cursor#63 )
  (byte) progress_idx#62 ← phi( gen_sintab::@4/(byte) progress_idx#63 )
  (byte*) gen_sintab::sintab#21 ← phi( gen_sintab::@4/(byte*) gen_sintab::sintab#22 )
  (byte) gen_sintab::length#21 ← phi( gen_sintab::@4/(byte) gen_sintab::length#22 )
  (byte*) gen_sintab::f_2pi#19 ← phi( gen_sintab::@4/(byte*) gen_sintab::f_2pi#21 )
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  (byte*) progress_cursor#61 ← phi( gen_sintab::@5/(byte*) progress_cursor#62 )
  (byte) progress_idx#61 ← phi( gen_sintab::@5/(byte) progress_idx#62 )
  (byte*) gen_sintab::sintab#20 ← phi( gen_sintab::@5/(byte*) gen_sintab::sintab#21 )
  (byte) gen_sintab::length#20 ← phi( gen_sintab::@5/(byte) gen_sintab::length#21 )
  (byte*) gen_sintab::f_2pi#17 ← phi( gen_sintab::@5/(byte*) gen_sintab::f_2pi#19 )
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) progress_cursor#60 ← phi( gen_sintab::@6/(byte*) progress_cursor#61 )
  (byte) progress_idx#60 ← phi( gen_sintab::@6/(byte) progress_idx#61 )
  (byte*) gen_sintab::sintab#19 ← phi( gen_sintab::@6/(byte*) gen_sintab::sintab#20 )
  (byte) gen_sintab::length#19 ← phi( gen_sintab::@6/(byte) gen_sintab::length#20 )
  (byte*) gen_sintab::f_2pi#15 ← phi( gen_sintab::@6/(byte*) gen_sintab::f_2pi#17 )
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (byte*) progress_cursor#59 ← phi( gen_sintab::@7/(byte*) progress_cursor#60 )
  (byte) progress_idx#59 ← phi( gen_sintab::@7/(byte) progress_idx#60 )
  (byte*) gen_sintab::sintab#18 ← phi( gen_sintab::@7/(byte*) gen_sintab::sintab#19 )
  (byte) gen_sintab::length#18 ← phi( gen_sintab::@7/(byte) gen_sintab::length#19 )
  (byte*) gen_sintab::f_2pi#13 ← phi( gen_sintab::@7/(byte*) gen_sintab::f_2pi#15 )
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word/dword/signed dword) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) progress_cursor#58 ← phi( gen_sintab::@8/(byte*) progress_cursor#59 )
  (byte) progress_idx#58 ← phi( gen_sintab::@8/(byte) progress_idx#59 )
  (byte*) gen_sintab::sintab#17 ← phi( gen_sintab::@8/(byte*) gen_sintab::sintab#18 )
  (byte) gen_sintab::length#17 ← phi( gen_sintab::@8/(byte) gen_sintab::length#18 )
  (byte*) gen_sintab::f_2pi#11 ← phi( gen_sintab::@8/(byte*) gen_sintab::f_2pi#13 )
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) progress_cursor#57 ← phi( gen_sintab::@9/(byte*) progress_cursor#58 )
  (byte) progress_idx#57 ← phi( gen_sintab::@9/(byte) progress_idx#58 )
  (byte*) gen_sintab::sintab#16 ← phi( gen_sintab::@9/(byte*) gen_sintab::sintab#17 )
  (byte) gen_sintab::length#16 ← phi( gen_sintab::@9/(byte) gen_sintab::length#17 )
  (byte*) gen_sintab::f_2pi#9 ← phi( gen_sintab::@9/(byte*) gen_sintab::f_2pi#11 )
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) progress_cursor#56 ← phi( gen_sintab::@10/(byte*) progress_cursor#57 )
  (byte) progress_idx#56 ← phi( gen_sintab::@10/(byte) progress_idx#57 )
  (byte*) gen_sintab::sintab#15 ← phi( gen_sintab::@10/(byte*) gen_sintab::sintab#16 )
  (byte) gen_sintab::length#14 ← phi( gen_sintab::@10/(byte) gen_sintab::length#16 )
  (byte*) gen_sintab::f_2pi#7 ← phi( gen_sintab::@10/(byte*) gen_sintab::f_2pi#9 )
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) progress_cursor#55 ← phi( gen_sintab::@11/(byte*) progress_cursor#56 )
  (byte) progress_idx#55 ← phi( gen_sintab::@11/(byte) progress_idx#56 )
  (byte*) gen_sintab::sintab#14 ← phi( gen_sintab::@11/(byte*) gen_sintab::sintab#15 )
  (byte) gen_sintab::length#12 ← phi( gen_sintab::@11/(byte) gen_sintab::length#14 )
  (byte*) gen_sintab::f_2pi#5 ← phi( gen_sintab::@11/(byte*) gen_sintab::f_2pi#7 )
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte*) progress_cursor#54 ← phi( gen_sintab::@12/(byte*) progress_cursor#55 )
  (byte) progress_idx#54 ← phi( gen_sintab::@12/(byte) progress_idx#55 )
  (byte*) gen_sintab::sintab#12 ← phi( gen_sintab::@12/(byte*) gen_sintab::sintab#14 )
  (byte) gen_sintab::length#10 ← phi( gen_sintab::@12/(byte) gen_sintab::length#12 )
  (byte*) gen_sintab::f_2pi#3 ← phi( gen_sintab::@12/(byte*) gen_sintab::f_2pi#5 )
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word/dword/signed dword) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@23
  (byte*) progress_cursor#53 ← phi( gen_sintab::@13/(byte*) progress_cursor#54 gen_sintab::@23/(byte*) progress_cursor#12 )
  (byte) progress_idx#53 ← phi( gen_sintab::@13/(byte) progress_idx#54 gen_sintab::@23/(byte) progress_idx#13 )
  (byte*) gen_sintab::sintab#11 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@23/(byte*) gen_sintab::sintab#13 )
  (byte) gen_sintab::length#8 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@23/(byte) gen_sintab::length#3 )
  (byte*) gen_sintab::f_2pi#2 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#3 gen_sintab::@23/(byte*) gen_sintab::f_2pi#4 )
  (byte) gen_sintab::i#2 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@23/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#2
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) progress_cursor#52 ← phi( gen_sintab::@1/(byte*) progress_cursor#53 )
  (byte) progress_idx#52 ← phi( gen_sintab::@1/(byte) progress_idx#53 )
  (byte) gen_sintab::i#12 ← phi( gen_sintab::@1/(byte) gen_sintab::i#2 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@1/(byte*) gen_sintab::sintab#11 )
  (byte) gen_sintab::length#6 ← phi( gen_sintab::@1/(byte) gen_sintab::length#8 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@1/(byte*) gen_sintab::f_2pi#2 )
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) gen_sintab::f_2pi#20 ← phi( gen_sintab::@14/(byte*) gen_sintab::f_2pi#1 )
  (byte*) progress_cursor#51 ← phi( gen_sintab::@14/(byte*) progress_cursor#52 )
  (byte) progress_idx#51 ← phi( gen_sintab::@14/(byte) progress_idx#52 )
  (byte) gen_sintab::i#11 ← phi( gen_sintab::@14/(byte) gen_sintab::i#12 )
  (byte*) gen_sintab::sintab#9 ← phi( gen_sintab::@14/(byte*) gen_sintab::sintab#10 )
  (byte) gen_sintab::length#4 ← phi( gen_sintab::@14/(byte) gen_sintab::length#6 )
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (byte*) gen_sintab::f_2pi#18 ← phi( gen_sintab::@15/(byte*) gen_sintab::f_2pi#20 )
  (byte*) progress_cursor#50 ← phi( gen_sintab::@15/(byte*) progress_cursor#51 )
  (byte) progress_idx#50 ← phi( gen_sintab::@15/(byte) progress_idx#51 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@15/(byte) gen_sintab::i#11 )
  (byte*) gen_sintab::sintab#8 ← phi( gen_sintab::@15/(byte*) gen_sintab::sintab#9 )
  (byte) gen_sintab::length#2 ← phi( gen_sintab::@15/(byte) gen_sintab::length#4 )
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#2
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) gen_sintab::f_2pi#16 ← phi( gen_sintab::@16/(byte*) gen_sintab::f_2pi#18 )
  (byte) gen_sintab::length#15 ← phi( gen_sintab::@16/(byte) gen_sintab::length#2 )
  (byte*) progress_cursor#49 ← phi( gen_sintab::@16/(byte*) progress_cursor#50 )
  (byte) progress_idx#49 ← phi( gen_sintab::@16/(byte) progress_idx#50 )
  (byte) gen_sintab::i#9 ← phi( gen_sintab::@16/(byte) gen_sintab::i#10 )
  (byte*) gen_sintab::sintab#7 ← phi( gen_sintab::@16/(byte*) gen_sintab::sintab#8 )
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  (byte*) gen_sintab::f_2pi#14 ← phi( gen_sintab::@17/(byte*) gen_sintab::f_2pi#16 )
  (byte) gen_sintab::length#13 ← phi( gen_sintab::@17/(byte) gen_sintab::length#15 )
  (byte*) progress_cursor#47 ← phi( gen_sintab::@17/(byte*) progress_cursor#49 )
  (byte) progress_idx#47 ← phi( gen_sintab::@17/(byte) progress_idx#49 )
  (byte) gen_sintab::i#8 ← phi( gen_sintab::@17/(byte) gen_sintab::i#9 )
  (byte*) gen_sintab::sintab#6 ← phi( gen_sintab::@17/(byte*) gen_sintab::sintab#7 )
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) gen_sintab::f_2pi#12 ← phi( gen_sintab::@18/(byte*) gen_sintab::f_2pi#14 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@18/(byte) gen_sintab::length#13 )
  (byte*) progress_cursor#45 ← phi( gen_sintab::@18/(byte*) progress_cursor#47 )
  (byte) progress_idx#45 ← phi( gen_sintab::@18/(byte) progress_idx#47 )
  (byte) gen_sintab::i#7 ← phi( gen_sintab::@18/(byte) gen_sintab::i#8 )
  (byte*) gen_sintab::sintab#5 ← phi( gen_sintab::@18/(byte*) gen_sintab::sintab#6 )
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) gen_sintab::f_2pi#10 ← phi( gen_sintab::@19/(byte*) gen_sintab::f_2pi#12 )
  (byte) gen_sintab::length#9 ← phi( gen_sintab::@19/(byte) gen_sintab::length#11 )
  (byte*) progress_cursor#42 ← phi( gen_sintab::@19/(byte*) progress_cursor#45 )
  (byte) progress_idx#42 ← phi( gen_sintab::@19/(byte) progress_idx#45 )
  (byte) gen_sintab::i#6 ← phi( gen_sintab::@19/(byte) gen_sintab::i#7 )
  (byte*) gen_sintab::sintab#4 ← phi( gen_sintab::@19/(byte*) gen_sintab::sintab#5 )
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  (byte*) gen_sintab::f_2pi#8 ← phi( gen_sintab::@20/(byte*) gen_sintab::f_2pi#10 )
  (byte) gen_sintab::length#7 ← phi( gen_sintab::@20/(byte) gen_sintab::length#9 )
  (byte*) progress_cursor#38 ← phi( gen_sintab::@20/(byte*) progress_cursor#42 )
  (byte) progress_idx#38 ← phi( gen_sintab::@20/(byte) progress_idx#42 )
  (byte) gen_sintab::i#5 ← phi( gen_sintab::@20/(byte) gen_sintab::i#6 )
  (byte*) gen_sintab::sintab#3 ← phi( gen_sintab::@20/(byte*) gen_sintab::sintab#4 )
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#1
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (byte*) gen_sintab::f_2pi#6 ← phi( gen_sintab::@21/(byte*) gen_sintab::f_2pi#8 )
  (byte) gen_sintab::length#5 ← phi( gen_sintab::@21/(byte) gen_sintab::length#7 )
  (byte*) progress_cursor#34 ← phi( gen_sintab::@21/(byte*) progress_cursor#38 )
  (byte) progress_idx#34 ← phi( gen_sintab::@21/(byte) progress_idx#38 )
  (byte) gen_sintab::i#3 ← phi( gen_sintab::@21/(byte) gen_sintab::i#5 )
  (byte*) gen_sintab::sintab#2 ← phi( gen_sintab::@21/(byte*) gen_sintab::sintab#3 )
  (word) getFAC::return#4 ← phi( gen_sintab::@21/(word) getFAC::return#2 )
  (word~) gen_sintab::$23 ← (word) getFAC::return#4
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#2 + (byte) gen_sintab::i#3) ← (byte~) gen_sintab::$24
  call progress_inc param-assignment
  to:gen_sintab::@23
gen_sintab::@23: scope:[gen_sintab]  from gen_sintab::@22
  (byte*) gen_sintab::sintab#13 ← phi( gen_sintab::@22/(byte*) gen_sintab::sintab#2 )
  (byte*) gen_sintab::f_2pi#4 ← phi( gen_sintab::@22/(byte*) gen_sintab::f_2pi#6 )
  (byte) gen_sintab::length#3 ← phi( gen_sintab::@22/(byte) gen_sintab::length#5 )
  (byte) gen_sintab::i#4 ← phi( gen_sintab::@22/(byte) gen_sintab::i#3 )
  (byte*) progress_cursor#26 ← phi( gen_sintab::@22/(byte*) progress_cursor#11 )
  (byte) progress_idx#27 ← phi( gen_sintab::@22/(byte) progress_idx#12 )
  (byte) progress_idx#13 ← (byte) progress_idx#27
  (byte*) progress_cursor#12 ← (byte*) progress_cursor#26
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#4
  (boolean~) gen_sintab::$26 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#3
  if((boolean~) gen_sintab::$26) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@23
  (byte*) progress_cursor#27 ← phi( gen_sintab::@23/(byte*) progress_cursor#12 )
  (byte) progress_idx#28 ← phi( gen_sintab::@23/(byte) progress_idx#13 )
  (byte) progress_idx#14 ← (byte) progress_idx#28
  (byte*) progress_cursor#13 ← (byte*) progress_cursor#27
  return 
  to:@return
@51: scope:[]  from @46
  (byte) sin_idx_y#17 ← phi( @46/(byte) sin_idx_y#2 )
  (byte) sin_idx_x#16 ← phi( @46/(byte) sin_idx_x#2 )
  (byte) progress_idx#35 ← phi( @46/(byte) progress_idx#39 )
  (byte*) progress_cursor#35 ← phi( @46/(byte*) progress_cursor#39 )
  call main param-assignment
  to:@52
@52: scope:[]  from @51
  (byte) sin_idx_y#12 ← phi( @51/(byte) sin_idx_y#1 )
  (byte) sin_idx_x#12 ← phi( @51/(byte) sin_idx_x#1 )
  (byte) progress_idx#29 ← phi( @51/(byte) progress_idx#1 )
  (byte*) progress_cursor#28 ← phi( @51/(byte*) progress_cursor#1 )
  (byte*) progress_cursor#14 ← (byte*) progress_cursor#28
  (byte) progress_idx#15 ← (byte) progress_idx#29
  (byte) sin_idx_x#6 ← (byte) sin_idx_x#12
  (byte) sin_idx_y#6 ← (byte) sin_idx_y#12
  to:@end
@end: scope:[]  from @52

SYMBOL TABLE SSA
(label) @41
(label) @44
(label) @46
(label) @51
(label) @52
(label) @begin
(label) @end
(byte*) BORDERCOL
(byte*) BORDERCOL#0
(byte*) CHARGEN
(byte*) CHARGEN#0
(byte*) COLS
(byte*) COLS#0
(byte*) PROCPORT
(byte*) PROCPORT#0
(byte*) RASTER
(byte*) RASTER#0
(byte*) SCREEN
(byte*) SCREEN#0
(byte*) SPRITES_COLS
(byte*) SPRITES_COLS#0
(byte*) SPRITES_ENABLE
(byte*) SPRITES_ENABLE#0
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_X#0
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_EXPAND_Y#0
(byte*) SPRITES_XMSB
(byte*) SPRITES_XMSB#0
(byte*) SPRITES_XPOS
(byte*) SPRITES_XPOS#0
(byte*) SPRITES_YPOS
(byte*) SPRITES_YPOS#0
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(label) addMEMtoFAC::@1
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(byte*) addMEMtoFAC::mem#0
(byte*) addMEMtoFAC::mem#1
(byte*) addMEMtoFAC::mem#2
(void()) anim()
(byte/signed byte/word/signed word/dword/signed dword~) anim::$0
(byte/signed word/word/dword/signed dword~) anim::$1
(byte/signed word/word/dword/signed dword~) anim::$10
(boolean~) anim::$11
(boolean~) anim::$12
(byte~) anim::$13
(byte/signed word/word/dword/signed dword~) anim::$14
(boolean~) anim::$15
(boolean~) anim::$16
(boolean~) anim::$17
(boolean~) anim::$18
(boolean~) anim::$19
(byte~) anim::$2
(byte~) anim::$3
(byte~) anim::$4
(byte~) anim::$5
(byte/signed word/word/dword/signed dword~) anim::$6
(boolean~) anim::$7
(boolean~) anim::$8
(byte~) anim::$9
(label) anim::@1
(label) anim::@10
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@9
(label) anim::@return
(byte) anim::j
(byte) anim::j#0
(byte) anim::j#1
(byte) anim::j#2
(byte) anim::j#3
(byte) anim::j#4
(byte) anim::j#5
(byte) anim::j#6
(byte) anim::j2
(byte) anim::j2#0
(byte) anim::j2#1
(byte) anim::j2#2
(byte) anim::j2#3
(byte) anim::j2#4
(byte) anim::j2#5
(byte) anim::j2#6
(word) anim::x
(word) anim::x#0
(byte) anim::x_msb
(byte) anim::x_msb#0
(byte) anim::x_msb#1
(byte) anim::x_msb#2
(byte) anim::x_msb#3
(byte) anim::x_msb#4
(byte) anim::x_msb#5
(byte) anim::x_msb#6
(byte) anim::x_msb#7
(byte) anim::xidx
(byte) anim::xidx#0
(byte) anim::xidx#1
(byte) anim::xidx#2
(byte) anim::xidx#3
(byte) anim::xidx#4
(byte) anim::xidx#5
(byte) anim::xidx#6
(byte) anim::xidx#7
(byte) anim::yidx
(byte) anim::yidx#0
(byte) anim::yidx#1
(byte) anim::yidx#2
(byte) anim::yidx#3
(byte) anim::yidx#4
(byte) anim::yidx#5
(byte) anim::yidx#6
(byte) anim::yidx#7
(void()) clear_screen()
(byte*~) clear_screen::$0
(boolean~) clear_screen::$1
(label) clear_screen::@1
(label) clear_screen::@return
(byte*) clear_screen::sc
(byte*) clear_screen::sc#0
(byte*) clear_screen::sc#1
(byte*) clear_screen::sc#2
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(label) divMEMbyFAC::@1
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#0
(byte*) divMEMbyFAC::mem#1
(byte*) divMEMbyFAC::mem#2
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0
(word~) gen_chargen_sprite::$1
(boolean~) gen_chargen_sprite::$10
(byte~) gen_chargen_sprite::$11
(boolean~) gen_chargen_sprite::$12
(byte*~) gen_chargen_sprite::$13
(boolean~) gen_chargen_sprite::$14
(byte*~) gen_chargen_sprite::$2
(byte~) gen_chargen_sprite::$3
(boolean~) gen_chargen_sprite::$4
(boolean~) gen_chargen_sprite::$5
(byte~) gen_chargen_sprite::$6
(byte~) gen_chargen_sprite::$7
(boolean~) gen_chargen_sprite::$8
(boolean~) gen_chargen_sprite::$9
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@10
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@6
(label) gen_chargen_sprite::@7
(label) gen_chargen_sprite::@8
(label) gen_chargen_sprite::@9
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#0
(byte) gen_chargen_sprite::b#1
(byte) gen_chargen_sprite::b#2
(byte) gen_chargen_sprite::b#3
(byte) gen_chargen_sprite::b#4
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0
(byte) gen_chargen_sprite::bits#1
(byte) gen_chargen_sprite::bits#2
(byte) gen_chargen_sprite::bits#3
(byte) gen_chargen_sprite::bits#4
(byte) gen_chargen_sprite::bits#5
(byte) gen_chargen_sprite::bits#6
(byte) gen_chargen_sprite::bits#7
(byte) gen_chargen_sprite::bits#8
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#0
(byte) gen_chargen_sprite::c#1
(byte) gen_chargen_sprite::c#2
(byte) gen_chargen_sprite::c#3
(byte) gen_chargen_sprite::c#4
(byte) gen_chargen_sprite::c#5
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0
(byte) gen_chargen_sprite::ch#1
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0
(byte*) gen_chargen_sprite::chargen#1
(byte*) gen_chargen_sprite::chargen#2
(byte*) gen_chargen_sprite::chargen#3
(byte*) gen_chargen_sprite::chargen#4
(byte*) gen_chargen_sprite::chargen#5
(byte*) gen_chargen_sprite::chargen#6
(byte*) gen_chargen_sprite::chargen#7
(byte*) gen_chargen_sprite::chargen#8
(byte*) gen_chargen_sprite::chargen#9
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#0
(byte) gen_chargen_sprite::s_gen#1
(byte) gen_chargen_sprite::s_gen#2
(byte) gen_chargen_sprite::s_gen#3
(byte) gen_chargen_sprite::s_gen#4
(byte) gen_chargen_sprite::s_gen#5
(byte) gen_chargen_sprite::s_gen#6
(byte) gen_chargen_sprite::s_gen#7
(byte) gen_chargen_sprite::s_gen#8
(byte) gen_chargen_sprite::s_gen#9
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#0
(byte) gen_chargen_sprite::s_gen_cnt#1
(byte) gen_chargen_sprite::s_gen_cnt#2
(byte) gen_chargen_sprite::s_gen_cnt#3
(byte) gen_chargen_sprite::s_gen_cnt#4
(byte) gen_chargen_sprite::s_gen_cnt#5
(byte) gen_chargen_sprite::s_gen_cnt#6
(byte) gen_chargen_sprite::s_gen_cnt#7
(byte) gen_chargen_sprite::s_gen_cnt#8
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0
(byte*) gen_chargen_sprite::sprite#1
(byte*) gen_chargen_sprite::sprite#10
(byte*) gen_chargen_sprite::sprite#11
(byte*) gen_chargen_sprite::sprite#12
(byte*) gen_chargen_sprite::sprite#2
(byte*) gen_chargen_sprite::sprite#3
(byte*) gen_chargen_sprite::sprite#4
(byte*) gen_chargen_sprite::sprite#5
(byte*) gen_chargen_sprite::sprite#6
(byte*) gen_chargen_sprite::sprite#7
(byte*) gen_chargen_sprite::sprite#8
(byte*) gen_chargen_sprite::sprite#9
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#0
(byte) gen_chargen_sprite::x#1
(byte) gen_chargen_sprite::x#2
(byte) gen_chargen_sprite::x#3
(byte) gen_chargen_sprite::x#4
(byte) gen_chargen_sprite::x#5
(byte) gen_chargen_sprite::x#6
(byte) gen_chargen_sprite::x#7
(byte) gen_chargen_sprite::x#8
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#0
(byte) gen_chargen_sprite::y#1
(byte) gen_chargen_sprite::y#10
(byte) gen_chargen_sprite::y#2
(byte) gen_chargen_sprite::y#3
(byte) gen_chargen_sprite::y#4
(byte) gen_chargen_sprite::y#5
(byte) gen_chargen_sprite::y#6
(byte) gen_chargen_sprite::y#7
(byte) gen_chargen_sprite::y#8
(byte) gen_chargen_sprite::y#9
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0
(word~) gen_sintab::$13
(word~) gen_sintab::$17
(word~) gen_sintab::$23
(byte~) gen_sintab::$24
(boolean~) gen_sintab::$26
(word~) gen_sintab::$3
(label) gen_sintab::@1
(label) gen_sintab::@10
(label) gen_sintab::@11
(label) gen_sintab::@12
(label) gen_sintab::@13
(label) gen_sintab::@14
(label) gen_sintab::@15
(label) gen_sintab::@16
(label) gen_sintab::@17
(label) gen_sintab::@18
(label) gen_sintab::@19
(label) gen_sintab::@20
(label) gen_sintab::@21
(label) gen_sintab::@22
(label) gen_sintab::@23
(label) gen_sintab::@3
(label) gen_sintab::@4
(label) gen_sintab::@5
(label) gen_sintab::@6
(label) gen_sintab::@7
(label) gen_sintab::@8
(label) gen_sintab::@9
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(byte*) gen_sintab::f_2pi#0
(byte*) gen_sintab::f_2pi#1
(byte*) gen_sintab::f_2pi#10
(byte*) gen_sintab::f_2pi#11
(byte*) gen_sintab::f_2pi#12
(byte*) gen_sintab::f_2pi#13
(byte*) gen_sintab::f_2pi#14
(byte*) gen_sintab::f_2pi#15
(byte*) gen_sintab::f_2pi#16
(byte*) gen_sintab::f_2pi#17
(byte*) gen_sintab::f_2pi#18
(byte*) gen_sintab::f_2pi#19
(byte*) gen_sintab::f_2pi#2
(byte*) gen_sintab::f_2pi#20
(byte*) gen_sintab::f_2pi#21
(byte*) gen_sintab::f_2pi#22
(byte*) gen_sintab::f_2pi#3
(byte*) gen_sintab::f_2pi#4
(byte*) gen_sintab::f_2pi#5
(byte*) gen_sintab::f_2pi#6
(byte*) gen_sintab::f_2pi#7
(byte*) gen_sintab::f_2pi#8
(byte*) gen_sintab::f_2pi#9
(byte[]) gen_sintab::f_amp
(byte[]) gen_sintab::f_amp#0
(byte[]) gen_sintab::f_i
(byte[]) gen_sintab::f_i#0
(byte[]) gen_sintab::f_min
(byte[]) gen_sintab::f_min#0
(byte) gen_sintab::i
(byte) gen_sintab::i#0
(byte) gen_sintab::i#1
(byte) gen_sintab::i#10
(byte) gen_sintab::i#11
(byte) gen_sintab::i#12
(byte) gen_sintab::i#2
(byte) gen_sintab::i#3
(byte) gen_sintab::i#4
(byte) gen_sintab::i#5
(byte) gen_sintab::i#6
(byte) gen_sintab::i#7
(byte) gen_sintab::i#8
(byte) gen_sintab::i#9
(byte) gen_sintab::length
(byte) gen_sintab::length#0
(byte) gen_sintab::length#1
(byte) gen_sintab::length#10
(byte) gen_sintab::length#11
(byte) gen_sintab::length#12
(byte) gen_sintab::length#13
(byte) gen_sintab::length#14
(byte) gen_sintab::length#15
(byte) gen_sintab::length#16
(byte) gen_sintab::length#17
(byte) gen_sintab::length#18
(byte) gen_sintab::length#19
(byte) gen_sintab::length#2
(byte) gen_sintab::length#20
(byte) gen_sintab::length#21
(byte) gen_sintab::length#22
(byte) gen_sintab::length#23
(byte) gen_sintab::length#24
(byte) gen_sintab::length#3
(byte) gen_sintab::length#4
(byte) gen_sintab::length#5
(byte) gen_sintab::length#6
(byte) gen_sintab::length#7
(byte) gen_sintab::length#8
(byte) gen_sintab::length#9
(byte) gen_sintab::max
(byte) gen_sintab::max#0
(byte) gen_sintab::max#1
(byte) gen_sintab::max#2
(byte) gen_sintab::min
(byte) gen_sintab::min#0
(byte) gen_sintab::min#1
(byte) gen_sintab::min#2
(byte) gen_sintab::min#3
(byte) gen_sintab::min#4
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#0
(byte*) gen_sintab::sintab#1
(byte*) gen_sintab::sintab#10
(byte*) gen_sintab::sintab#11
(byte*) gen_sintab::sintab#12
(byte*) gen_sintab::sintab#13
(byte*) gen_sintab::sintab#14
(byte*) gen_sintab::sintab#15
(byte*) gen_sintab::sintab#16
(byte*) gen_sintab::sintab#17
(byte*) gen_sintab::sintab#18
(byte*) gen_sintab::sintab#19
(byte*) gen_sintab::sintab#2
(byte*) gen_sintab::sintab#20
(byte*) gen_sintab::sintab#21
(byte*) gen_sintab::sintab#22
(byte*) gen_sintab::sintab#23
(byte*) gen_sintab::sintab#24
(byte*) gen_sintab::sintab#3
(byte*) gen_sintab::sintab#4
(byte*) gen_sintab::sintab#5
(byte*) gen_sintab::sintab#6
(byte*) gen_sintab::sintab#7
(byte*) gen_sintab::sintab#8
(byte*) gen_sintab::sintab#9
(void()) gen_sprites()
(byte*~) gen_sprites::$1
(boolean~) gen_sprites::$2
(const string) gen_sprites::$3 = (string) "camelot"
(label) gen_sprites::@1
(label) gen_sprites::@3
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(byte[]) gen_sprites::cml#0
(byte) gen_sprites::i
(byte) gen_sprites::i#0
(byte) gen_sprites::i#1
(byte) gen_sprites::i#2
(byte) gen_sprites::i#3
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#0
(byte*) gen_sprites::spr#1
(byte*) gen_sprites::spr#2
(byte*) gen_sprites::spr#3
(word()) getFAC()
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::return#0
(word) getFAC::return#1
(word) getFAC::return#2
(word) getFAC::return#3
(word) getFAC::return#4
(word) getFAC::w
(word) getFAC::w#0
(void()) init()
(byte/signed word/word/dword/signed dword~) init::$1
(boolean~) init::$2
(byte*~) init::$7
(label) init::@1
(label) init::@10
(label) init::@2
(label) init::@3
(label) init::@4
(label) init::@5
(label) init::@6
(label) init::@7
(label) init::@8
(label) init::@9
(label) init::@return
(byte) init::i
(byte) init::i#0
(byte) init::i#1
(byte) init::i#2
(void()) main()
(boolean~) main::$1
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@5
(label) main::@6
(label) main::@return
(byte*) memHi
(byte*) memHi#0
(byte*) memLo
(byte*) memLo#0
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(label) mulFACbyMEM::@1
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#0
(byte*) mulFACbyMEM::mem#1
(byte*) mulFACbyMEM::mem#2
(void()) place_sprites()
(byte*~) place_sprites::$0
(byte*~) place_sprites::$1
(byte~) place_sprites::$2
(byte/signed word/word/dword/signed dword~) place_sprites::$3
(byte/signed byte/word/signed word/dword/signed dword~) place_sprites::$4
(byte/word/dword~) place_sprites::$5
(boolean~) place_sprites::$6
(label) place_sprites::@1
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::col#0
(byte) place_sprites::col#1
(byte) place_sprites::col#2
(byte) place_sprites::j
(byte) place_sprites::j#0
(byte) place_sprites::j#1
(byte) place_sprites::j#2
(byte) place_sprites::j2
(byte) place_sprites::j2#0
(byte) place_sprites::j2#1
(byte) place_sprites::j2#2
(byte) place_sprites::j2#3
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#0
(byte) place_sprites::spr_id#1
(byte) place_sprites::spr_id#2
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#0
(byte) place_sprites::spr_x#1
(byte) place_sprites::spr_x#2
(byte*) place_sprites::sprites_ptr
(byte*) place_sprites::sprites_ptr#0
(byte*) place_sprites::sprites_ptr#1
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0
(byte~) prepareMEM::$1
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#0
(byte*) prepareMEM::mem#1
(byte*) prepareMEM::mem#2
(byte*) prepareMEM::mem#3
(byte*) prepareMEM::mem#4
(byte*) prepareMEM::mem#5
(byte*) progress_cursor
(byte*) progress_cursor#0
(byte*) progress_cursor#1
(byte*) progress_cursor#10
(byte*) progress_cursor#11
(byte*) progress_cursor#12
(byte*) progress_cursor#13
(byte*) progress_cursor#14
(byte*) progress_cursor#15
(byte*) progress_cursor#16
(byte*) progress_cursor#17
(byte*) progress_cursor#18
(byte*) progress_cursor#19
(byte*) progress_cursor#2
(byte*) progress_cursor#20
(byte*) progress_cursor#21
(byte*) progress_cursor#22
(byte*) progress_cursor#23
(byte*) progress_cursor#24
(byte*) progress_cursor#25
(byte*) progress_cursor#26
(byte*) progress_cursor#27
(byte*) progress_cursor#28
(byte*) progress_cursor#29
(byte*) progress_cursor#3
(byte*) progress_cursor#30
(byte*) progress_cursor#31
(byte*) progress_cursor#32
(byte*) progress_cursor#33
(byte*) progress_cursor#34
(byte*) progress_cursor#35
(byte*) progress_cursor#36
(byte*) progress_cursor#37
(byte*) progress_cursor#38
(byte*) progress_cursor#39
(byte*) progress_cursor#4
(byte*) progress_cursor#40
(byte*) progress_cursor#41
(byte*) progress_cursor#42
(byte*) progress_cursor#43
(byte*) progress_cursor#44
(byte*) progress_cursor#45
(byte*) progress_cursor#46
(byte*) progress_cursor#47
(byte*) progress_cursor#48
(byte*) progress_cursor#49
(byte*) progress_cursor#5
(byte*) progress_cursor#50
(byte*) progress_cursor#51
(byte*) progress_cursor#52
(byte*) progress_cursor#53
(byte*) progress_cursor#54
(byte*) progress_cursor#55
(byte*) progress_cursor#56
(byte*) progress_cursor#57
(byte*) progress_cursor#58
(byte*) progress_cursor#59
(byte*) progress_cursor#6
(byte*) progress_cursor#60
(byte*) progress_cursor#61
(byte*) progress_cursor#62
(byte*) progress_cursor#63
(byte*) progress_cursor#64
(byte*) progress_cursor#65
(byte*) progress_cursor#7
(byte*) progress_cursor#8
(byte*) progress_cursor#9
(byte) progress_idx
(byte) progress_idx#0
(byte) progress_idx#1
(byte) progress_idx#10
(byte) progress_idx#11
(byte) progress_idx#12
(byte) progress_idx#13
(byte) progress_idx#14
(byte) progress_idx#15
(byte) progress_idx#16
(byte) progress_idx#17
(byte) progress_idx#18
(byte) progress_idx#19
(byte) progress_idx#2
(byte) progress_idx#20
(byte) progress_idx#21
(byte) progress_idx#22
(byte) progress_idx#23
(byte) progress_idx#24
(byte) progress_idx#25
(byte) progress_idx#26
(byte) progress_idx#27
(byte) progress_idx#28
(byte) progress_idx#29
(byte) progress_idx#3
(byte) progress_idx#30
(byte) progress_idx#31
(byte) progress_idx#32
(byte) progress_idx#33
(byte) progress_idx#34
(byte) progress_idx#35
(byte) progress_idx#36
(byte) progress_idx#37
(byte) progress_idx#38
(byte) progress_idx#39
(byte) progress_idx#4
(byte) progress_idx#40
(byte) progress_idx#41
(byte) progress_idx#42
(byte) progress_idx#43
(byte) progress_idx#44
(byte) progress_idx#45
(byte) progress_idx#46
(byte) progress_idx#47
(byte) progress_idx#48
(byte) progress_idx#49
(byte) progress_idx#5
(byte) progress_idx#50
(byte) progress_idx#51
(byte) progress_idx#52
(byte) progress_idx#53
(byte) progress_idx#54
(byte) progress_idx#55
(byte) progress_idx#56
(byte) progress_idx#57
(byte) progress_idx#58
(byte) progress_idx#59
(byte) progress_idx#6
(byte) progress_idx#60
(byte) progress_idx#61
(byte) progress_idx#62
(byte) progress_idx#63
(byte) progress_idx#64
(byte) progress_idx#65
(byte) progress_idx#7
(byte) progress_idx#8
(byte) progress_idx#9
(void()) progress_inc()
(boolean~) progress_inc::$0
(boolean~) progress_inc::$1
(label) progress_inc::@1
(label) progress_inc::@2
(label) progress_inc::@return
(byte[]) progress_inc::progress_chars
(byte[]) progress_inc::progress_chars#0
(void()) progress_init((byte*) progress_init::line)
(label) progress_init::@return
(byte*) progress_init::line
(byte*) progress_init::line#0
(byte*) progress_init::line#1
(byte*) progress_init::line#2
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0
(label) setFAC::@1
(label) setFAC::@return
(word) setFAC::w
(word) setFAC::w#0
(word) setFAC::w#1
(word) setFAC::w#2
(word) setFAC::w#3
(word) setFAC::w#4
(word) setFAC::w#5
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(label) setMEMtoFAC::@1
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#0
(byte*) setMEMtoFAC::mem#1
(byte*) setMEMtoFAC::mem#2
(byte*) setMEMtoFAC::mem#3
(byte*) setMEMtoFAC::mem#4
(byte*) setMEMtoFAC::mem#5
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_x#0
(byte) sin_idx_x#1
(byte) sin_idx_x#10
(byte) sin_idx_x#11
(byte) sin_idx_x#12
(byte) sin_idx_x#13
(byte) sin_idx_x#14
(byte) sin_idx_x#15
(byte) sin_idx_x#16
(byte) sin_idx_x#17
(byte) sin_idx_x#18
(byte) sin_idx_x#19
(byte) sin_idx_x#2
(byte) sin_idx_x#20
(byte) sin_idx_x#21
(byte) sin_idx_x#22
(byte) sin_idx_x#23
(byte) sin_idx_x#24
(byte) sin_idx_x#25
(byte) sin_idx_x#26
(byte) sin_idx_x#3
(byte) sin_idx_x#4
(byte) sin_idx_x#5
(byte) sin_idx_x#6
(byte) sin_idx_x#7
(byte) sin_idx_x#8
(byte) sin_idx_x#9
(byte) sin_idx_y
(byte) sin_idx_y#0
(byte) sin_idx_y#1
(byte) sin_idx_y#10
(byte) sin_idx_y#11
(byte) sin_idx_y#12
(byte) sin_idx_y#13
(byte) sin_idx_y#14
(byte) sin_idx_y#15
(byte) sin_idx_y#16
(byte) sin_idx_y#17
(byte) sin_idx_y#18
(byte) sin_idx_y#19
(byte) sin_idx_y#2
(byte) sin_idx_y#20
(byte) sin_idx_y#21
(byte) sin_idx_y#22
(byte) sin_idx_y#23
(byte) sin_idx_y#24
(byte) sin_idx_y#25
(byte) sin_idx_y#26
(byte) sin_idx_y#3
(byte) sin_idx_y#4
(byte) sin_idx_y#5
(byte) sin_idx_y#6
(byte) sin_idx_y#7
(byte) sin_idx_y#8
(byte) sin_idx_y#9
(byte) sinlen_x
(byte) sinlen_x#0
(byte) sinlen_y
(byte) sinlen_y#0
(byte[221]) sintab_x
(byte[221]) sintab_x#0
(byte[197]) sintab_y
(byte[197]) sintab_y#0
(byte*) sprites
(byte*) sprites#0
(void()) subFACfromARG()
(label) subFACfromARG::@return

OPTIMIZING CONTROL FLOW GRAPH
Inversing boolean not (boolean~) progress_inc::$1 ← (byte) progress_idx#10 != (byte/signed byte/word/signed word/dword/signed dword) 8 from (boolean~) progress_inc::$0 ← (byte) progress_idx#10 == (byte/signed byte/word/signed word/dword/signed dword) 8
Inversing boolean not (boolean~) anim::$8 ← (byte) anim::xidx#1 < (byte) sinlen_x#0 from (boolean~) anim::$7 ← (byte) anim::xidx#1 >= (byte) sinlen_x#0
Inversing boolean not (boolean~) anim::$12 ← (byte) anim::yidx#1 < (byte) sinlen_y#0 from (boolean~) anim::$11 ← (byte) anim::yidx#1 >= (byte) sinlen_y#0
Inversing boolean not (boolean~) anim::$17 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0 from (boolean~) anim::$16 ← (byte) sin_idx_x#3 >= (byte) sinlen_x#0
Inversing boolean not (boolean~) anim::$19 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0 from (boolean~) anim::$18 ← (byte) sin_idx_y#3 >= (byte) sinlen_y#0
Inversing boolean not (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$3 == (byte/signed byte/word/signed word/dword/signed dword) 0 from (boolean~) gen_chargen_sprite::$4 ← (byte~) gen_chargen_sprite::$3 != (byte/signed byte/word/signed word/dword/signed dword) 0
Inversing boolean not (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word/dword/signed dword) 8 from (boolean~) gen_chargen_sprite::$8 ← (byte) gen_chargen_sprite::s_gen_cnt#1 == (byte/signed byte/word/signed word/dword/signed dword) 8
Succesful SSA optimization Pass2UnaryNotSimplification
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: setMEMtoFAC::mem#5 setMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: addMEMtoFAC::mem#2 addMEMtoFAC::mem#0
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: divMEMbyFAC::mem#2 divMEMbyFAC::mem#1
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: mulFACbyMEM::mem#2 mulFACbyMEM::mem#0
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: progress_cursor#29 progress_cursor#35
Not aliassing across scopes: progress_idx#30 progress_idx#35
Not aliassing across scopes: sin_idx_x#26 sin_idx_x#16
Not aliassing across scopes: sin_idx_y#24 sin_idx_y#17
Not aliassing across scopes: progress_cursor#15 progress_cursor#6
Not aliassing across scopes: progress_idx#16 progress_idx#6
Not aliassing across scopes: sin_idx_x#7 sin_idx_x#5
Not aliassing across scopes: sin_idx_y#7 sin_idx_y#5
Not aliassing across scopes: progress_cursor#48 progress_cursor#29
Not aliassing across scopes: progress_idx#48 progress_idx#30
Not aliassing identity: progress_cursor#44 progress_cursor#44
Not aliassing identity: progress_idx#44 progress_idx#44
Not aliassing across scopes: progress_init::line#0 SCREEN#0
Not aliassing across scopes: progress_cursor#17 progress_cursor#9
Not aliassing across scopes: progress_idx#18 progress_idx#9
Not aliassing across scopes: gen_sintab::sintab#0 sintab_x#0
Not aliassing across scopes: gen_sintab::length#0 sinlen_x#0
Not aliassing across scopes: progress_idx#19 progress_idx#14
Not aliassing across scopes: progress_cursor#18 progress_cursor#13
Not aliassing across scopes: progress_cursor#19 progress_cursor#9
Not aliassing across scopes: progress_idx#20 progress_idx#9
Not aliassing across scopes: gen_sintab::sintab#1 sintab_y#0
Not aliassing across scopes: gen_sintab::length#1 sinlen_y#0
Not aliassing across scopes: progress_idx#21 progress_idx#14
Not aliassing across scopes: progress_cursor#20 progress_cursor#13
Not aliassing across scopes: clear_screen::sc#0 SCREEN#0
Not aliassing across scopes: progress_init::line#2 progress_init::line#0
Not aliassing across scopes: progress_cursor#8 progress_init::line#2
Not aliassing across scopes: progress_idx#24 progress_idx#34
Not aliassing across scopes: progress_cursor#33 progress_cursor#34
Not aliassing across scopes: sin_idx_x#9 sin_idx_x#13
Not aliassing across scopes: sin_idx_y#9 sin_idx_y#13
Not aliassing across scopes: anim::xidx#0 sin_idx_x#9
Not aliassing across scopes: anim::yidx#0 sin_idx_y#9
Not aliassing across scopes: gen_sprites::spr#0 sprites#0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::ch#1 gen_chargen_sprite::ch#0
Not aliassing across scopes: gen_chargen_sprite::sprite#12 gen_chargen_sprite::sprite#0
Not aliassing across scopes: gen_sintab::max#2 gen_sintab::max#0
Not aliassing across scopes: gen_sintab::min#4 gen_sintab::min#0
Not aliassing across scopes: gen_sintab::length#24 gen_sintab::length#0
Not aliassing across scopes: gen_sintab::sintab#24 gen_sintab::sintab#0
Not aliassing across scopes: progress_idx#65 progress_idx#2
Not aliassing across scopes: progress_cursor#65 progress_cursor#2
Not aliassing across scopes: setMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: divMEMbyFAC::mem#0 gen_sintab::f_amp#0
Not aliassing across scopes: setMEMtoFAC::mem#2 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#3 gen_sintab::f_min#0
Not aliassing across scopes: mulFACbyMEM::mem#0 gen_sintab::f_2pi#1
Not aliassing across scopes: setMEMtoFAC::mem#4 gen_sintab::f_i#0
Not aliassing across scopes: divMEMbyFAC::mem#1 gen_sintab::f_i#0
Not aliassing across scopes: mulFACbyMEM::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#1 gen_sintab::f_min#0
Not aliassing across scopes: getFAC::return#2 getFAC::return#1
Not aliassing across scopes: gen_sintab::$23 getFAC::return#4
Not aliassing across scopes: progress_idx#27 progress_idx#12
Not aliassing across scopes: progress_cursor#26 progress_cursor#11
Not aliassing across scopes: progress_cursor#28 progress_cursor#1
Not aliassing across scopes: progress_idx#29 progress_idx#1
Not aliassing across scopes: sin_idx_x#12 sin_idx_x#1
Not aliassing across scopes: sin_idx_y#12 sin_idx_y#1
Alias (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0 
Alias (word) getFAC::return#0 = (word) getFAC::w#0 (word) getFAC::return#3 (word) getFAC::return#1 
Alias (byte) sin_idx_x#23 = (byte) sin_idx_x#26 
Alias (byte) sin_idx_y#21 = (byte) sin_idx_y#24 
Alias (byte*) progress_cursor#0 = (byte*) progress_cursor#15 
Alias (byte) progress_idx#0 = (byte) progress_idx#16 
Alias (byte) sin_idx_x#0 = (byte) sin_idx_x#22 (byte) sin_idx_x#7 (byte) sin_idx_x#8 (byte) sin_idx_x#1 
Alias (byte) sin_idx_y#0 = (byte) sin_idx_y#20 (byte) sin_idx_y#7 (byte) sin_idx_y#8 (byte) sin_idx_y#1 
Alias (byte*) progress_cursor#1 = (byte*) progress_cursor#43 (byte*) progress_cursor#30 (byte*) progress_cursor#36 (byte*) progress_cursor#40 (byte*) progress_cursor#16 
Alias (byte) progress_idx#1 = (byte) progress_idx#43 (byte) progress_idx#31 (byte) progress_idx#36 (byte) progress_idx#40 (byte) progress_idx#17 
Alias (byte) sin_idx_x#13 = (byte) sin_idx_x#17 
Alias (byte) sin_idx_y#13 = (byte) sin_idx_y#18 
Alias (byte*) progress_cursor#46 = (byte*) progress_cursor#48 
Alias (byte) progress_idx#46 = (byte) progress_idx#48 
Alias (byte*) progress_cursor#31 = (byte*) progress_cursor#41 (byte*) progress_cursor#44 (byte*) progress_cursor#37 
Alias (byte) progress_idx#32 = (byte) progress_idx#41 (byte) progress_idx#44 (byte) progress_idx#37 
Alias (byte*) progress_cursor#17 = (byte*) progress_cursor#2 
Alias (byte) progress_idx#18 = (byte) progress_idx#2 
Alias (byte) progress_idx#19 = (byte) progress_idx#3 
Alias (byte*) progress_cursor#18 = (byte*) progress_cursor#3 
Alias (byte*) progress_init::line#1 = (byte*~) init::$7 
Alias (byte*) progress_cursor#19 = (byte*) progress_cursor#4 
Alias (byte) progress_idx#20 = (byte) progress_idx#4 
Alias (byte) progress_idx#21 = (byte) progress_idx#5 (byte) progress_idx#33 (byte) progress_idx#22 (byte) progress_idx#6 
Alias (byte*) progress_cursor#20 = (byte*) progress_cursor#5 (byte*) progress_cursor#32 (byte*) progress_cursor#21 (byte*) progress_cursor#6 
Alias (byte*) SCREEN#0 = (byte*) progress_cursor#7 (byte*) progress_cursor#39 (byte*) progress_cursor#35 
Alias (byte*) progress_cursor#22 = (byte*) progress_cursor#8 (byte*) progress_cursor#9 
Alias (byte) progress_idx#23 = (byte) progress_idx#8 (byte) progress_idx#9 
Alias (byte*) progress_cursor#24 = (byte*) progress_cursor#33 
Alias (byte) progress_idx#12 = (byte) progress_idx#26 (byte) progress_idx#25 
Alias (byte*) progress_cursor#11 = (byte*) progress_cursor#25 (byte*) progress_cursor#23 
Alias (byte) progress_idx#35 = (byte) progress_idx#39 (byte) progress_idx#7 
Alias (word) anim::x#0 = (byte/signed word/word/dword/signed dword~) anim::$1 
Alias (byte) anim::x_msb#1 = (byte~) anim::$4 (byte) anim::x_msb#7 
Alias (byte) anim::xidx#1 = (byte/signed word/word/dword/signed dword~) anim::$6 (byte) anim::xidx#4 
Alias (byte) anim::yidx#1 = (byte/signed word/word/dword/signed dword~) anim::$10 (byte) anim::yidx#5 
Alias (byte) anim::yidx#3 = (byte) anim::yidx#7 
Alias (byte) anim::j2#2 = (byte) anim::j2#6 
Alias (byte) anim::j#5 = (byte) anim::j#6 
Alias (byte) sin_idx_x#24 = (byte) sin_idx_x#25 
Alias (byte) sin_idx_y#25 = (byte) sin_idx_y#26 
Alias (byte) anim::xidx#2 = (byte~) anim::$9 
Alias (byte) anim::j2#1 = (byte/signed word/word/dword/signed dword~) anim::$14 
Alias (byte) anim::j2#4 = (byte) anim::j2#5 
Alias (byte) anim::j#3 = (byte) anim::j#4 
Alias (byte) anim::xidx#6 = (byte) anim::xidx#7 
Alias (byte) anim::x_msb#5 = (byte) anim::x_msb#6 
Alias (byte) sin_idx_x#18 = (byte) sin_idx_x#19 
Alias (byte) sin_idx_y#22 = (byte) sin_idx_y#23 
Alias (byte) anim::yidx#2 = (byte~) anim::$13 
Alias (byte) anim::x_msb#3 = (byte) anim::x_msb#4 
Alias (byte) sin_idx_x#10 = (byte) sin_idx_x#14 
Alias (byte) sin_idx_y#14 = (byte) sin_idx_y#19 (byte) sin_idx_y#15 
Alias (byte) sin_idx_x#20 = (byte) sin_idx_x#21 
Alias (byte) sin_idx_x#11 = (byte) sin_idx_x#15 (byte) sin_idx_x#5 
Alias (byte) sin_idx_y#11 = (byte) sin_idx_y#16 (byte) sin_idx_y#5 
Alias (byte*) place_sprites::sprites_ptr#0 = (byte*~) place_sprites::$0 
Alias (byte) place_sprites::spr_id#0 = (byte~) place_sprites::$2 
Alias (byte) place_sprites::spr_x#1 = (byte/signed word/word/dword/signed dword~) place_sprites::$3 
Alias (byte) place_sprites::col#1 = (byte/word/dword~) place_sprites::$5 
Alias (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#3 
Alias (byte) gen_sprites::i#2 = (byte) gen_sprites::i#3 
Alias (byte*) gen_sprites::spr#1 = (byte*~) gen_sprites::$1 
Alias (byte*) gen_chargen_sprite::chargen#0 = (byte*~) gen_chargen_sprite::$2 
Alias (byte) gen_chargen_sprite::s_gen#7 = (byte) gen_chargen_sprite::s_gen#8 
Alias (byte) gen_chargen_sprite::s_gen_cnt#6 = (byte) gen_chargen_sprite::s_gen_cnt#7 
Alias (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#9 
Alias (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#8 
Alias (byte) gen_chargen_sprite::x#7 = (byte) gen_chargen_sprite::x#8 
Alias (byte) gen_chargen_sprite::y#10 = (byte) gen_chargen_sprite::y#9 
Alias (byte*) gen_chargen_sprite::chargen#8 = (byte*) gen_chargen_sprite::chargen#9 
Alias (byte) gen_chargen_sprite::s_gen#1 = (byte~) gen_chargen_sprite::$7 (byte) gen_chargen_sprite::s_gen#4 
Alias (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#5 
Alias (byte) gen_chargen_sprite::b#3 = (byte) gen_chargen_sprite::b#4 
Alias (byte) gen_chargen_sprite::c#2 = (byte) gen_chargen_sprite::c#5 
Alias (byte) gen_chargen_sprite::bits#5 = (byte) gen_chargen_sprite::bits#6 
Alias (byte) gen_chargen_sprite::x#4 = (byte) gen_chargen_sprite::x#5 
Alias (byte) gen_chargen_sprite::y#6 = (byte) gen_chargen_sprite::y#7 
Alias (byte*) gen_chargen_sprite::chargen#5 = (byte*) gen_chargen_sprite::chargen#6 
Alias (byte) gen_chargen_sprite::bits#3 = (byte) gen_chargen_sprite::bits#4 
Alias (byte) gen_chargen_sprite::x#2 = (byte) gen_chargen_sprite::x#3 
Alias (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#6 (byte*) gen_chargen_sprite::sprite#8 
Alias (byte) gen_chargen_sprite::y#3 = (byte) gen_chargen_sprite::y#4 (byte) gen_chargen_sprite::y#5 
Alias (byte*) gen_chargen_sprite::chargen#2 = (byte*) gen_chargen_sprite::chargen#3 (byte*) gen_chargen_sprite::chargen#4 
Alias (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#9 
Alias (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#8 
Alias (byte) gen_chargen_sprite::bits#1 = (byte~) gen_chargen_sprite::$11 
Alias (byte*) gen_chargen_sprite::sprite#2 = (byte*~) gen_chargen_sprite::$13 
Alias (word) setFAC::w#0 = (word~) gen_sintab::$0 
Alias (byte) gen_sintab::min#2 = (byte) gen_sintab::min#3 (byte) gen_sintab::min#4 
Alias (byte*) gen_sintab::f_2pi#0 = (byte*) gen_sintab::f_2pi#22 (byte*) gen_sintab::f_2pi#21 (byte*) gen_sintab::f_2pi#19 (byte*) gen_sintab::f_2pi#17 (byte*) gen_sintab::f_2pi#15 (byte*) gen_sintab::f_2pi#13 (byte*) gen_sintab::f_2pi#11 (byte*) gen_sintab::f_2pi#9 (byte*) gen_sintab::f_2pi#7 (byte*) gen_sintab::f_2pi#5 (byte*) gen_sintab::f_2pi#3 
Alias (byte) gen_sintab::length#10 = (byte) gen_sintab::length#23 (byte) gen_sintab::length#24 (byte) gen_sintab::length#22 (byte) gen_sintab::length#21 (byte) gen_sintab::length#20 (byte) gen_sintab::length#19 (byte) gen_sintab::length#18 (byte) gen_sintab::length#17 (byte) gen_sintab::length#16 (byte) gen_sintab::length#14 (byte) gen_sintab::length#12 
Alias (byte*) gen_sintab::sintab#12 = (byte*) gen_sintab::sintab#23 (byte*) gen_sintab::sintab#24 (byte*) gen_sintab::sintab#22 (byte*) gen_sintab::sintab#21 (byte*) gen_sintab::sintab#20 (byte*) gen_sintab::sintab#19 (byte*) gen_sintab::sintab#18 (byte*) gen_sintab::sintab#17 (byte*) gen_sintab::sintab#16 (byte*) gen_sintab::sintab#15 (byte*) gen_sintab::sintab#14 
Alias (byte) progress_idx#54 = (byte) progress_idx#64 (byte) progress_idx#65 (byte) progress_idx#63 (byte) progress_idx#62 (byte) progress_idx#61 (byte) progress_idx#60 (byte) progress_idx#59 (byte) progress_idx#58 (byte) progress_idx#57 (byte) progress_idx#56 (byte) progress_idx#55 
Alias (byte*) progress_cursor#54 = (byte*) progress_cursor#64 (byte*) progress_cursor#65 (byte*) progress_cursor#63 (byte*) progress_cursor#62 (byte*) progress_cursor#61 (byte*) progress_cursor#60 (byte*) progress_cursor#59 (byte*) progress_cursor#58 (byte*) progress_cursor#57 (byte*) progress_cursor#56 (byte*) progress_cursor#55 
Alias (word) setFAC::w#1 = (word~) gen_sintab::$3 
Alias (word) setFAC::w#3 = (word~) gen_sintab::$13 
Alias (byte*) gen_sintab::f_2pi#1 = (byte*) gen_sintab::f_2pi#2 (byte*) gen_sintab::f_2pi#20 (byte*) gen_sintab::f_2pi#18 (byte*) gen_sintab::f_2pi#16 (byte*) gen_sintab::f_2pi#14 (byte*) gen_sintab::f_2pi#12 (byte*) gen_sintab::f_2pi#10 (byte*) gen_sintab::f_2pi#8 (byte*) gen_sintab::f_2pi#6 (byte*) gen_sintab::f_2pi#4 
Alias (byte) gen_sintab::length#11 = (byte) gen_sintab::length#6 (byte) gen_sintab::length#8 (byte) gen_sintab::length#4 (byte) gen_sintab::length#2 (byte) gen_sintab::length#15 (byte) gen_sintab::length#13 (byte) gen_sintab::length#9 (byte) gen_sintab::length#7 (byte) gen_sintab::length#5 (byte) gen_sintab::length#3 
Alias (byte*) gen_sintab::sintab#10 = (byte*) gen_sintab::sintab#11 (byte*) gen_sintab::sintab#9 (byte*) gen_sintab::sintab#8 (byte*) gen_sintab::sintab#7 (byte*) gen_sintab::sintab#6 (byte*) gen_sintab::sintab#5 (byte*) gen_sintab::sintab#4 (byte*) gen_sintab::sintab#3 (byte*) gen_sintab::sintab#2 (byte*) gen_sintab::sintab#13 
Alias (byte) gen_sintab::i#10 = (byte) gen_sintab::i#12 (byte) gen_sintab::i#2 (byte) gen_sintab::i#11 (byte) gen_sintab::i#9 (byte) gen_sintab::i#8 (byte) gen_sintab::i#7 (byte) gen_sintab::i#6 (byte) gen_sintab::i#5 (byte) gen_sintab::i#3 (byte) gen_sintab::i#4 
Alias (byte) progress_idx#34 = (byte) progress_idx#52 (byte) progress_idx#53 (byte) progress_idx#51 (byte) progress_idx#50 (byte) progress_idx#49 (byte) progress_idx#47 (byte) progress_idx#45 (byte) progress_idx#42 (byte) progress_idx#38 
Alias (byte*) progress_cursor#34 = (byte*) progress_cursor#52 (byte*) progress_cursor#53 (byte*) progress_cursor#51 (byte*) progress_cursor#50 (byte*) progress_cursor#49 (byte*) progress_cursor#47 (byte*) progress_cursor#45 (byte*) progress_cursor#42 (byte*) progress_cursor#38 
Alias (word) setFAC::w#4 = (word~) gen_sintab::$17 
Alias (word) getFAC::return#2 = (word) getFAC::return#4 
Alias (byte) progress_idx#13 = (byte) progress_idx#27 (byte) progress_idx#28 (byte) progress_idx#14 
Alias (byte*) progress_cursor#12 = (byte*) progress_cursor#26 (byte*) progress_cursor#27 (byte*) progress_cursor#13 
Alias (byte) sin_idx_x#16 = (byte) sin_idx_x#2 
Alias (byte) sin_idx_y#17 = (byte) sin_idx_y#2 
Alias (byte*) progress_cursor#14 = (byte*) progress_cursor#28 
Alias (byte) progress_idx#15 = (byte) progress_idx#29 
Alias (byte) sin_idx_x#12 = (byte) sin_idx_x#6 
Alias (byte) sin_idx_y#12 = (byte) sin_idx_y#6 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: setMEMtoFAC::mem#5 setMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: addMEMtoFAC::mem#2 addMEMtoFAC::mem#0
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: divMEMbyFAC::mem#2 divMEMbyFAC::mem#1
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: mulFACbyMEM::mem#2 mulFACbyMEM::mem#0
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: progress_cursor#29 SCREEN#0
Not aliassing across scopes: progress_idx#30 progress_idx#35
Not aliassing across scopes: sin_idx_x#23 sin_idx_x#16
Not aliassing across scopes: sin_idx_y#21 sin_idx_y#17
Not aliassing across scopes: progress_cursor#0 progress_cursor#20
Not aliassing across scopes: progress_idx#0 progress_idx#21
Not aliassing identity: progress_cursor#1 progress_cursor#1
Not aliassing identity: progress_idx#1 progress_idx#1
Not aliassing across scopes: sin_idx_x#0 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#0 sin_idx_y#11
Not aliassing across scopes: progress_cursor#46 progress_cursor#29
Not aliassing across scopes: progress_idx#46 progress_idx#30
Not aliassing identity: progress_cursor#31 progress_cursor#31
Not aliassing identity: progress_idx#32 progress_idx#32
Not aliassing across scopes: progress_init::line#0 SCREEN#0
Not aliassing across scopes: progress_cursor#17 progress_cursor#22
Not aliassing across scopes: progress_idx#18 progress_idx#23
Not aliassing across scopes: gen_sintab::sintab#0 sintab_x#0
Not aliassing across scopes: gen_sintab::length#0 sinlen_x#0
Not aliassing across scopes: progress_idx#19 progress_idx#13
Not aliassing across scopes: progress_cursor#18 progress_cursor#12
Not aliassing across scopes: progress_cursor#19 progress_cursor#22
Not aliassing across scopes: progress_idx#20 progress_idx#23
Not aliassing across scopes: gen_sintab::sintab#1 sintab_y#0
Not aliassing across scopes: gen_sintab::length#1 sinlen_y#0
Not aliassing across scopes: progress_idx#21 progress_idx#13
Not aliassing across scopes: progress_cursor#20 progress_cursor#12
Not aliassing across scopes: clear_screen::sc#0 SCREEN#0
Not aliassing across scopes: progress_init::line#2 progress_init::line#0
Not aliassing across scopes: progress_cursor#22 progress_init::line#2
Not aliassing across scopes: progress_idx#24 progress_idx#34
Not aliassing across scopes: progress_cursor#24 progress_cursor#34
Not aliassing across scopes: sin_idx_x#9 sin_idx_x#13
Not aliassing across scopes: sin_idx_y#9 sin_idx_y#13
Not aliassing across scopes: anim::xidx#0 sin_idx_x#9
Not aliassing across scopes: anim::yidx#0 sin_idx_y#9
Not aliassing across scopes: gen_sprites::spr#0 sprites#0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::ch#1 gen_chargen_sprite::ch#0
Not aliassing across scopes: gen_chargen_sprite::sprite#12 gen_chargen_sprite::sprite#0
Not aliassing across scopes: gen_sintab::max#2 gen_sintab::max#0
Not aliassing across scopes: gen_sintab::min#2 gen_sintab::min#0
Not aliassing across scopes: gen_sintab::length#10 gen_sintab::length#0
Not aliassing across scopes: gen_sintab::sintab#12 gen_sintab::sintab#0
Not aliassing across scopes: progress_idx#54 progress_idx#18
Not aliassing across scopes: progress_cursor#54 progress_cursor#17
Not aliassing across scopes: setMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: divMEMbyFAC::mem#0 gen_sintab::f_amp#0
Not aliassing across scopes: setMEMtoFAC::mem#2 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#3 gen_sintab::f_min#0
Not aliassing across scopes: mulFACbyMEM::mem#0 gen_sintab::f_2pi#1
Not aliassing across scopes: setMEMtoFAC::mem#4 gen_sintab::f_i#0
Not aliassing across scopes: divMEMbyFAC::mem#1 gen_sintab::f_i#0
Not aliassing across scopes: mulFACbyMEM::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#1 gen_sintab::f_min#0
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Not aliassing across scopes: progress_idx#13 progress_idx#12
Not aliassing across scopes: progress_cursor#12 progress_cursor#11
Not aliassing across scopes: progress_cursor#14 progress_cursor#1
Not aliassing across scopes: progress_idx#15 progress_idx#1
Not aliassing across scopes: sin_idx_x#12 sin_idx_x#0
Not aliassing across scopes: sin_idx_y#12 sin_idx_y#0
Alias (byte) anim::yidx#3 = (byte) anim::yidx#4 
Alias (byte) anim::j2#2 = (byte) anim::j2#4 (byte) anim::j2#3 
Alias (byte) anim::j#2 = (byte) anim::j#3 (byte) anim::j#5 
Alias (byte) anim::x_msb#1 = (byte) anim::x_msb#5 (byte) anim::x_msb#3 
Alias (byte) sin_idx_x#10 = (byte) sin_idx_x#18 (byte) sin_idx_x#24 
Alias (byte) sin_idx_y#10 = (byte) sin_idx_y#22 (byte) sin_idx_y#25 (byte) sin_idx_y#14 
Alias (byte) anim::xidx#5 = (byte) anim::xidx#6 
Alias (byte) sin_idx_x#11 = (byte) sin_idx_x#20 
Alias (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#7 
Alias (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#6 
Alias (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#7 
Alias (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#7 
Alias (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#7 
Alias (byte) gen_chargen_sprite::y#10 = (byte) gen_chargen_sprite::y#8 
Alias (byte*) gen_chargen_sprite::chargen#7 = (byte*) gen_chargen_sprite::chargen#8 
Alias (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#3 
Alias (byte) gen_chargen_sprite::c#2 = (byte) gen_chargen_sprite::c#4 
Alias (byte) gen_chargen_sprite::bits#3 = (byte) gen_chargen_sprite::bits#5 
Alias (byte) gen_chargen_sprite::x#2 = (byte) gen_chargen_sprite::x#4 
Alias (byte) gen_chargen_sprite::y#3 = (byte) gen_chargen_sprite::y#6 
Alias (byte*) gen_chargen_sprite::chargen#2 = (byte*) gen_chargen_sprite::chargen#5 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: setMEMtoFAC::mem#5 setMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: addMEMtoFAC::mem#2 addMEMtoFAC::mem#0
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: divMEMbyFAC::mem#2 divMEMbyFAC::mem#1
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: mulFACbyMEM::mem#2 mulFACbyMEM::mem#0
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: progress_cursor#29 SCREEN#0
Not aliassing across scopes: progress_idx#30 progress_idx#35
Not aliassing across scopes: sin_idx_x#23 sin_idx_x#16
Not aliassing across scopes: sin_idx_y#21 sin_idx_y#17
Not aliassing across scopes: progress_cursor#0 progress_cursor#20
Not aliassing across scopes: progress_idx#0 progress_idx#21
Not aliassing identity: progress_cursor#1 progress_cursor#1
Not aliassing identity: progress_idx#1 progress_idx#1
Not aliassing across scopes: sin_idx_x#0 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#0 sin_idx_y#11
Not aliassing across scopes: progress_cursor#46 progress_cursor#29
Not aliassing across scopes: progress_idx#46 progress_idx#30
Not aliassing identity: progress_cursor#31 progress_cursor#31
Not aliassing identity: progress_idx#32 progress_idx#32
Not aliassing across scopes: progress_init::line#0 SCREEN#0
Not aliassing across scopes: progress_cursor#17 progress_cursor#22
Not aliassing across scopes: progress_idx#18 progress_idx#23
Not aliassing across scopes: gen_sintab::sintab#0 sintab_x#0
Not aliassing across scopes: gen_sintab::length#0 sinlen_x#0
Not aliassing across scopes: progress_idx#19 progress_idx#13
Not aliassing across scopes: progress_cursor#18 progress_cursor#12
Not aliassing across scopes: progress_cursor#19 progress_cursor#22
Not aliassing across scopes: progress_idx#20 progress_idx#23
Not aliassing across scopes: gen_sintab::sintab#1 sintab_y#0
Not aliassing across scopes: gen_sintab::length#1 sinlen_y#0
Not aliassing across scopes: progress_idx#21 progress_idx#13
Not aliassing across scopes: progress_cursor#20 progress_cursor#12
Not aliassing across scopes: clear_screen::sc#0 SCREEN#0
Not aliassing across scopes: progress_init::line#2 progress_init::line#0
Not aliassing across scopes: progress_cursor#22 progress_init::line#2
Not aliassing across scopes: progress_idx#24 progress_idx#34
Not aliassing across scopes: progress_cursor#24 progress_cursor#34
Not aliassing across scopes: sin_idx_x#9 sin_idx_x#13
Not aliassing across scopes: sin_idx_y#9 sin_idx_y#13
Not aliassing across scopes: anim::xidx#0 sin_idx_x#9
Not aliassing across scopes: anim::yidx#0 sin_idx_y#9
Not aliassing across scopes: gen_sprites::spr#0 sprites#0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::ch#1 gen_chargen_sprite::ch#0
Not aliassing across scopes: gen_chargen_sprite::sprite#12 gen_chargen_sprite::sprite#0
Not aliassing across scopes: gen_sintab::max#2 gen_sintab::max#0
Not aliassing across scopes: gen_sintab::min#2 gen_sintab::min#0
Not aliassing across scopes: gen_sintab::length#10 gen_sintab::length#0
Not aliassing across scopes: gen_sintab::sintab#12 gen_sintab::sintab#0
Not aliassing across scopes: progress_idx#54 progress_idx#18
Not aliassing across scopes: progress_cursor#54 progress_cursor#17
Not aliassing across scopes: setMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: divMEMbyFAC::mem#0 gen_sintab::f_amp#0
Not aliassing across scopes: setMEMtoFAC::mem#2 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#3 gen_sintab::f_min#0
Not aliassing across scopes: mulFACbyMEM::mem#0 gen_sintab::f_2pi#1
Not aliassing across scopes: setMEMtoFAC::mem#4 gen_sintab::f_i#0
Not aliassing across scopes: divMEMbyFAC::mem#1 gen_sintab::f_i#0
Not aliassing across scopes: mulFACbyMEM::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#1 gen_sintab::f_min#0
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Not aliassing across scopes: progress_idx#13 progress_idx#12
Not aliassing across scopes: progress_cursor#12 progress_cursor#11
Not aliassing across scopes: progress_cursor#14 progress_cursor#1
Not aliassing across scopes: progress_idx#15 progress_idx#1
Not aliassing across scopes: sin_idx_x#12 sin_idx_x#0
Not aliassing across scopes: sin_idx_y#12 sin_idx_y#0
Self Phi Eliminated (byte) sin_idx_x#13
Self Phi Eliminated (byte) sin_idx_y#13
Self Phi Eliminated (byte*) progress_cursor#1
Self Phi Eliminated (byte*) progress_cursor#1
Self Phi Eliminated (byte) progress_idx#1
Self Phi Eliminated (byte) progress_idx#1
Self Phi Eliminated (byte*) progress_cursor#31
Self Phi Eliminated (byte) progress_idx#32
Self Phi Eliminated (byte) sin_idx_x#10
Self Phi Eliminated (byte) sin_idx_y#10
Self Phi Eliminated (byte*) place_sprites::sprites_ptr#1
Self Phi Eliminated (byte) gen_chargen_sprite::c#2
Self Phi Eliminated (byte) gen_chargen_sprite::bits#3
Self Phi Eliminated (byte) gen_chargen_sprite::x#2
Self Phi Eliminated (byte) gen_chargen_sprite::y#3
Self Phi Eliminated (byte*) gen_chargen_sprite::chargen#2
Self Phi Eliminated (byte*) gen_sintab::f_2pi#1
Self Phi Eliminated (byte) gen_sintab::length#11
Self Phi Eliminated (byte*) gen_sintab::sintab#10
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte*) progress_cursor#29 (byte*) SCREEN#0
Redundant Phi (byte) progress_idx#30 (byte) progress_idx#35
Redundant Phi (byte) sin_idx_x#23 (byte) sin_idx_x#16
Redundant Phi (byte) sin_idx_y#21 (byte) sin_idx_y#17
Redundant Phi (byte*) progress_cursor#0 (byte*) progress_cursor#20
Redundant Phi (byte) progress_idx#0 (byte) progress_idx#21
Redundant Phi (byte*) progress_cursor#1 (byte*) progress_cursor#0
Redundant Phi (byte) progress_idx#1 (byte) progress_idx#0
Redundant Phi (byte) sin_idx_x#0 (byte) sin_idx_x#11
Redundant Phi (byte) sin_idx_y#0 (byte) sin_idx_y#11
Redundant Phi (byte*) progress_cursor#46 (byte*) progress_cursor#29
Redundant Phi (byte) progress_idx#46 (byte) progress_idx#30
Redundant Phi (byte*) progress_cursor#31 (byte*) progress_cursor#46
Redundant Phi (byte) progress_idx#32 (byte) progress_idx#46
Redundant Phi (byte*) progress_cursor#17 (byte*) progress_cursor#22
Redundant Phi (byte) progress_idx#18 (byte) progress_idx#23
Redundant Phi (byte) progress_idx#19 (byte) progress_idx#13
Redundant Phi (byte*) progress_cursor#18 (byte*) progress_cursor#12
Redundant Phi (byte*) progress_cursor#19 (byte*) progress_cursor#22
Redundant Phi (byte) progress_idx#20 (byte) progress_idx#23
Redundant Phi (byte) progress_idx#21 (byte) progress_idx#13
Redundant Phi (byte*) progress_cursor#20 (byte*) progress_cursor#12
Redundant Phi (byte) progress_idx#24 (byte) progress_idx#34
Redundant Phi (byte*) progress_cursor#24 (byte*) progress_cursor#34
Redundant Phi (byte) sin_idx_x#9 (byte) sin_idx_x#13
Redundant Phi (byte) sin_idx_y#9 (byte) sin_idx_y#13
Redundant Phi (byte) sin_idx_x#10 (byte) sin_idx_x#9
Redundant Phi (byte) sin_idx_y#10 (byte) sin_idx_y#9
Redundant Phi (byte*) place_sprites::sprites_ptr#1 (byte*) place_sprites::sprites_ptr#0
Redundant Phi (byte) gen_chargen_sprite::ch#1 (byte) gen_chargen_sprite::ch#0
Redundant Phi (byte*) gen_chargen_sprite::sprite#12 (byte*) gen_chargen_sprite::sprite#0
Redundant Phi (byte) gen_chargen_sprite::c#2 (byte) gen_chargen_sprite::c#3
Redundant Phi (byte) gen_chargen_sprite::bits#3 (byte) gen_chargen_sprite::bits#2
Redundant Phi (byte) gen_chargen_sprite::x#2 (byte) gen_chargen_sprite::x#6
Redundant Phi (byte) gen_chargen_sprite::y#3 (byte) gen_chargen_sprite::y#10
Redundant Phi (byte*) gen_chargen_sprite::chargen#2 (byte*) gen_chargen_sprite::chargen#7
Redundant Phi (byte*) gen_sintab::f_2pi#1 (byte*) gen_sintab::f_2pi#0
Redundant Phi (byte) gen_sintab::length#11 (byte) gen_sintab::length#10
Redundant Phi (byte*) gen_sintab::sintab#10 (byte*) gen_sintab::sintab#12
Redundant Phi (byte) progress_idx#13 (byte) progress_idx#12
Redundant Phi (byte*) progress_cursor#12 (byte*) progress_cursor#11
Redundant Phi (byte*) progress_cursor#14 (byte*) progress_cursor#1
Redundant Phi (byte) progress_idx#15 (byte) progress_idx#1
Redundant Phi (byte) sin_idx_x#12 (byte) sin_idx_x#0
Redundant Phi (byte) sin_idx_y#12 (byte) sin_idx_y#0
Succesful SSA optimization Pass2RedundantPhiElimination
Redundant Phi (byte) progress_idx#54 (byte) progress_idx#23
Redundant Phi (byte*) progress_cursor#54 (byte*) progress_cursor#22
Succesful SSA optimization Pass2RedundantPhiElimination
Simple Condition (boolean~) main::$1 if(*((byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2
Simple Condition (boolean~) init::$2 if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto init::@1
Simple Condition (boolean~) clear_screen::$1 if((byte*) clear_screen::sc#1<(byte*~) clear_screen::$0) goto clear_screen::@1
Simple Condition (boolean~) progress_inc::$1 if((byte) progress_idx#10!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto progress_inc::@1
Simple Condition (boolean~) anim::$8 if((byte) anim::xidx#1<(byte) sinlen_x#0) goto anim::@2
Simple Condition (boolean~) anim::$12 if((byte) anim::yidx#1<(byte) sinlen_y#0) goto anim::@3
Simple Condition (boolean~) anim::$15 if((byte) anim::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto anim::@1
Simple Condition (boolean~) anim::$17 if((byte) sin_idx_x#3<(byte) sinlen_x#0) goto anim::@4
Simple Condition (boolean~) anim::$19 if((byte) sin_idx_y#3<(byte) sinlen_y#0) goto anim::@5
Simple Condition (boolean~) place_sprites::$6 if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto place_sprites::@1
Simple Condition (boolean~) gen_sprites::$2 if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto gen_sprites::@1
Simple Condition (boolean~) gen_chargen_sprite::$5 if((byte~) gen_chargen_sprite::$3==(byte/signed byte/word/signed word/dword/signed dword) 0) goto gen_chargen_sprite::@3
Simple Condition (boolean~) gen_chargen_sprite::$9 if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@5
Simple Condition (boolean~) gen_chargen_sprite::$10 if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto gen_chargen_sprite::@4
Simple Condition (boolean~) gen_chargen_sprite::$12 if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@2
Simple Condition (boolean~) gen_chargen_sprite::$14 if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@1
Simple Condition (boolean~) gen_sintab::$26 if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
Succesful SSA optimization Pass2ConditionalJumpSimplification
Constant (const byte*) PROCPORT#0 = ((byte*))1
Constant (const byte*) CHARGEN#0 = ((byte*))53248
Constant (const byte*) SPRITES_XPOS#0 = ((byte*))53248
Constant (const byte*) SPRITES_YPOS#0 = ((byte*))53249
Constant (const byte*) SPRITES_XMSB#0 = ((byte*))53264
Constant (const byte*) RASTER#0 = ((byte*))53266
Constant (const byte*) SPRITES_ENABLE#0 = ((byte*))53269
Constant (const byte*) SPRITES_EXPAND_Y#0 = ((byte*))53271
Constant (const byte*) SPRITES_EXPAND_X#0 = ((byte*))53277
Constant (const byte*) BORDERCOL#0 = ((byte*))53280
Constant (const byte*) SPRITES_COLS#0 = ((byte*))53287
Constant (const byte*) COLS#0 = ((byte*))55296
Constant (const byte*) memLo#0 = ((byte*))254
Constant (const byte*) memHi#0 = ((byte*))255
Constant (const byte) sinlen_x#0 = 221
Constant (const byte[221]) sintab_x#0 = { fill( 221, 0) }
Constant (const byte) sinlen_y#0 = 197
Constant (const byte[197]) sintab_y#0 = { fill( 197, 0) }
Constant (const byte*) sprites#0 = ((byte*))8192
Constant (const byte*) SCREEN#0 = ((byte*))1024
Constant (const byte) init::i#0 = 0
Constant (const byte) gen_sintab::min#0 = 0
Constant (const byte) gen_sintab::max#0 = 255
Constant (const byte) gen_sintab::min#1 = 50
Constant (const byte) gen_sintab::max#1 = 208
Constant (const byte) progress_idx#35 = 0
Constant (const byte) progress_idx#23 = 0
Constant (const byte[]) progress_inc::progress_chars#0 = { 32, 101, 116, 117, 97, 246, 231, 234, 224 }
Constant (const byte) progress_idx#11 = 0
Constant (const byte) sin_idx_x#16 = 0
Constant (const byte) sin_idx_y#17 = 0
Constant (const byte) anim::j2#0 = 12
Constant (const byte) anim::x_msb#0 = 0
Constant (const byte) anim::j#0 = 0
Constant (const byte/signed byte/word/signed word/dword/signed dword) anim::$0 = ((word))30
Constant (const byte) sin_idx_x#4 = 0
Constant (const byte) sin_idx_y#4 = 0
Constant (const byte) place_sprites::spr_x#0 = 60
Constant (const byte) place_sprites::j2#0 = 0
Constant (const byte) place_sprites::col#0 = 5
Constant (const byte) place_sprites::j#0 = 0
Constant (const byte/signed byte/word/signed word/dword/signed dword) place_sprites::$4 = 7^5
Constant (const string) gen_sprites::cml#0 = gen_sprites::$3
Constant (const byte) gen_sprites::i#0 = 0
Constant (const byte) gen_chargen_sprite::y#0 = 0
Constant (const byte) gen_chargen_sprite::s_gen#0 = 0
Constant (const byte) gen_chargen_sprite::s_gen_cnt#0 = 0
Constant (const byte) gen_chargen_sprite::x#0 = 0
Constant (const byte) gen_chargen_sprite::c#0 = 0
Constant (const byte) gen_chargen_sprite::b#0 = 0
Constant (const byte) gen_chargen_sprite::c#1 = 1
Constant (const byte) gen_chargen_sprite::s_gen#2 = 0
Constant (const byte) gen_chargen_sprite::s_gen_cnt#2 = 0
Constant (const byte[]) gen_sintab::f_i#0 = { 0, 0, 0, 0, 0 }
Constant (const byte[]) gen_sintab::f_min#0 = { 0, 0, 0, 0, 0 }
Constant (const byte[]) gen_sintab::f_amp#0 = { 0, 0, 0, 0, 0 }
Constant (const byte*) gen_sintab::f_2pi#0 = ((byte*))58085
Constant (const word) setFAC::w#2 = 2
Constant (const byte) gen_sintab::i#0 = 0
Succesful SSA optimization Pass2ConstantIdentification
Constant (const byte*) progress_init::line#0 = SCREEN#0
Constant (const byte[221]) gen_sintab::sintab#0 = sintab_x#0
Constant (const byte) gen_sintab::length#0 = sinlen_x#0
Constant (const byte*) progress_init::line#1 = SCREEN#0+40
Constant (const byte[197]) gen_sintab::sintab#1 = sintab_y#0
Constant (const byte) gen_sintab::length#1 = sinlen_y#0
Constant (const byte*) clear_screen::sc#0 = SCREEN#0
Constant (const byte*) clear_screen::$0 = SCREEN#0+1000
Constant (const byte*) place_sprites::sprites_ptr#0 = SCREEN#0+1016
Constant (const byte*) place_sprites::$1 = sprites#0/64
Constant (const byte*) gen_sprites::spr#0 = sprites#0
Constant (const byte[]) setMEMtoFAC::mem#0 = gen_sintab::f_min#0
Constant (const byte[]) setMEMtoFAC::mem#1 = gen_sintab::f_amp#0
Constant (const byte[]) divMEMbyFAC::mem#0 = gen_sintab::f_amp#0
Constant (const byte[]) setMEMtoFAC::mem#2 = gen_sintab::f_amp#0
Constant (const byte[]) addMEMtoFAC::mem#0 = gen_sintab::f_min#0
Constant (const byte[]) setMEMtoFAC::mem#3 = gen_sintab::f_min#0
Constant (const byte*) mulFACbyMEM::mem#0 = gen_sintab::f_2pi#0
Constant (const byte[]) setMEMtoFAC::mem#4 = gen_sintab::f_i#0
Constant (const byte[]) divMEMbyFAC::mem#1 = gen_sintab::f_i#0
Constant (const byte[]) mulFACbyMEM::mem#1 = gen_sintab::f_amp#0
Constant (const byte[]) addMEMtoFAC::mem#1 = gen_sintab::f_min#0
Succesful SSA optimization Pass2ConstantIdentification
Constant (const byte) place_sprites::spr_id#0 = ((byte))place_sprites::$1
Succesful SSA optimization Pass2ConstantIdentification
Consolidated array index constant in assignment *(COLS#0+40 + init::$1)
Consolidated array index constant in *(progress_inc::progress_chars#0+8)
Succesful SSA optimization Pass2ConstantAdditionElimination
if() condition always true - replacing block destination if(true) goto main::@1
Succesful SSA optimization Pass2ConstantIfs
Fixing inline constructor with getFAC::$0 ← *(memHi#0) w= *(memLo#0)
Succesful SSA optimization Pass2FixInlineConstructors
Inferred type updated to byte in (byte/signed word/word/dword/signed dword~) init::$1 ← (byte) init::i#2
Eliminating unused constant (const byte) progress_idx#35
Succesful SSA optimization PassNEliminateUnusedVars
Eliminating Noop Cast (byte*) prepareMEM::mem#0 ← ((byte*)) (word) setFAC::w#5
Succesful SSA optimization Pass2NopCastElimination
Removing unused block main::@return
Succesful SSA optimization Pass2EliminateUnusedBlocks
Culled Empty Block (label) @41
Culled Empty Block (label) main::@5
Culled Empty Block (label) main::@1
Culled Empty Block (label) main::@6
Culled Empty Block (label) init::@3
Culled Empty Block (label) init::@10
Culled Empty Block (label) @44
Culled Empty Block (label) @46
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Culled Empty Block (label) gen_sintab::@13
Culled Empty Block (label) @52
Succesful SSA optimization Pass2CullEmptyBlocks
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: progress_cursor#22 progress_init::line#2
Not aliassing across scopes: progress_cursor#11 progress_cursor#34
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: progress_cursor#34 progress_cursor#22
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Alias (word) getFAC::return#0 = (word~) getFAC::$0 
Alias (byte) init::i#2 = (byte~) init::$1 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: progress_cursor#22 progress_init::line#2
Not aliassing across scopes: progress_cursor#11 progress_cursor#34
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: progress_cursor#34 progress_cursor#22
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Self Phi Eliminated (byte) gen_chargen_sprite::y#10
Self Phi Eliminated (byte*) gen_chargen_sprite::chargen#7
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte) gen_chargen_sprite::y#10 (byte) gen_chargen_sprite::y#2
Redundant Phi (byte*) gen_chargen_sprite::chargen#7 (byte*) gen_chargen_sprite::chargen#1
Succesful SSA optimization Pass2RedundantPhiElimination
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: progress_cursor#22 progress_init::line#2
Not aliassing across scopes: progress_cursor#11 progress_cursor#34
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: progress_cursor#34 progress_cursor#22
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Self Phi Eliminated (byte*) gen_chargen_sprite::chargen#1
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte*) gen_chargen_sprite::chargen#1 (byte*) gen_chargen_sprite::chargen#0
Succesful SSA optimization Pass2RedundantPhiElimination
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: progress_cursor#22 progress_init::line#2
Not aliassing across scopes: progress_cursor#11 progress_cursor#34
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: progress_cursor#34 progress_cursor#22
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
OPTIMIZING CONTROL FLOW GRAPH
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const byte[]) setMEMtoFAC::mem#0
Inlining constant with var siblings (const byte[]) setMEMtoFAC::mem#1
Inlining constant with var siblings (const byte[]) setMEMtoFAC::mem#2
Inlining constant with var siblings (const byte[]) setMEMtoFAC::mem#3
Inlining constant with var siblings (const byte[]) setMEMtoFAC::mem#4
Inlining constant with var siblings (const byte[]) addMEMtoFAC::mem#0
Inlining constant with var siblings (const byte[]) addMEMtoFAC::mem#1
Inlining constant with var siblings (const byte[]) divMEMbyFAC::mem#0
Inlining constant with var siblings (const byte[]) divMEMbyFAC::mem#1
Inlining constant with var siblings (const byte*) mulFACbyMEM::mem#0
Inlining constant with var siblings (const byte[]) mulFACbyMEM::mem#1
Inlining constant with var siblings (const byte) init::i#0
Inlining constant with var siblings (const byte) init::i#0
Inlining constant with var siblings (const byte*) clear_screen::sc#0
Inlining constant with var siblings (const byte*) clear_screen::sc#0
Inlining constant with var siblings (const byte*) progress_init::line#0
Inlining constant with different constant siblings (const byte*) progress_init::line#0
Inlining constant with var siblings (const byte*) progress_init::line#1
Inlining constant with var siblings (const byte) anim::j2#0
Inlining constant with var siblings (const byte) anim::j2#0
Inlining constant with var siblings (const byte) anim::x_msb#0
Inlining constant with var siblings (const byte) anim::x_msb#0
Inlining constant with var siblings (const byte) anim::j#0
Inlining constant with var siblings (const byte) anim::j#0
Inlining constant with var siblings (const byte) place_sprites::spr_x#0
Inlining constant with var siblings (const byte) place_sprites::spr_x#0
Inlining constant with var siblings (const byte) place_sprites::j2#0
Inlining constant with var siblings (const byte) place_sprites::j2#0
Inlining constant with var siblings (const byte) place_sprites::j2#0
Inlining constant with var siblings (const byte) place_sprites::col#0
Inlining constant with var siblings (const byte) place_sprites::col#0
Inlining constant with var siblings (const byte) place_sprites::j#0
Inlining constant with var siblings (const byte) place_sprites::j#0
Inlining constant with var siblings (const byte) place_sprites::spr_id#0
Inlining constant with var siblings (const byte) place_sprites::spr_id#0
Inlining constant with var siblings (const byte) gen_sprites::i#0
Inlining constant with var siblings (const byte) gen_sprites::i#0
Inlining constant with var siblings (const byte*) gen_sprites::spr#0
Inlining constant with var siblings (const byte*) gen_sprites::spr#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::y#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::y#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::x#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::x#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::c#0
Inlining constant with different constant siblings (const byte) gen_chargen_sprite::c#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::b#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::b#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::c#1
Inlining constant with different constant siblings (const byte) gen_chargen_sprite::c#1
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_sintab::min#0
Inlining constant with different constant siblings (const byte) gen_sintab::min#0
Inlining constant with var siblings (const byte) gen_sintab::max#0
Inlining constant with different constant siblings (const byte) gen_sintab::max#0
Inlining constant with var siblings (const byte) gen_sintab::min#1
Inlining constant with different constant siblings (const byte) gen_sintab::min#1
Inlining constant with var siblings (const byte) gen_sintab::max#1
Inlining constant with different constant siblings (const byte) gen_sintab::max#1
Inlining constant with var siblings (const byte) gen_sintab::i#0
Inlining constant with var siblings (const byte) gen_sintab::i#0
Inlining constant with var siblings (const byte[221]) gen_sintab::sintab#0
Inlining constant with var siblings (const byte) gen_sintab::length#0
Inlining constant with var siblings (const byte[197]) gen_sintab::sintab#1
Inlining constant with var siblings (const byte) gen_sintab::length#1
Inlining constant with var siblings (const byte) progress_idx#23
Inlining constant with var siblings (const byte) progress_idx#23
Inlining constant with var siblings (const byte) progress_idx#23
Inlining constant with var siblings (const byte) progress_idx#11
Inlining constant with var siblings (const byte) progress_idx#11
Inlining constant with var siblings (const byte) progress_idx#11
Inlining constant with var siblings (const byte) sin_idx_x#16
Inlining constant with var siblings (const byte) sin_idx_x#16
Inlining constant with var siblings (const byte) sin_idx_x#16
Inlining constant with var siblings (const byte) sin_idx_y#17
Inlining constant with var siblings (const byte) sin_idx_y#17
Inlining constant with var siblings (const byte) sin_idx_y#17
Inlining constant with var siblings (const byte) sin_idx_x#4
Inlining constant with var siblings (const byte) sin_idx_x#4
Inlining constant with var siblings (const byte) sin_idx_x#4
Inlining constant with var siblings (const byte) sin_idx_y#4
Inlining constant with var siblings (const byte) sin_idx_y#4
Inlining constant with var siblings (const byte) sin_idx_y#4
Constant inlined setFAC::w#2 = (byte/signed byte/word/signed word/dword/signed dword) 2
Constant inlined place_sprites::j#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sintab::length#1 = (const byte) sinlen_y#0
Constant inlined progress_idx#23 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_chargen_sprite::c#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined place_sprites::spr_id#0 = ((byte))(const byte*) sprites#0/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined divMEMbyFAC::mem#1 = (const byte[]) gen_sintab::f_i#0
Constant inlined divMEMbyFAC::mem#0 = (const byte[]) gen_sintab::f_amp#0
Constant inlined setMEMtoFAC::mem#3 = (const byte[]) gen_sintab::f_min#0
Constant inlined setMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0
Constant inlined setMEMtoFAC::mem#1 = (const byte[]) gen_sintab::f_amp#0
Constant inlined setMEMtoFAC::mem#0 = (const byte[]) gen_sintab::f_min#0
Constant inlined gen_chargen_sprite::c#1 = (byte/signed byte/word/signed word/dword/signed dword) 1
Constant inlined setMEMtoFAC::mem#4 = (const byte[]) gen_sintab::f_i#0
Constant inlined addMEMtoFAC::mem#0 = (const byte[]) gen_sintab::f_min#0
Constant inlined addMEMtoFAC::mem#1 = (const byte[]) gen_sintab::f_min#0
Constant inlined gen_sprites::spr#0 = (const byte*) sprites#0
Constant inlined clear_screen::sc#0 = (const byte*) SCREEN#0
Constant inlined sin_idx_y#17 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_chargen_sprite::x#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sintab::sintab#0 = (const byte[221]) sintab_x#0
Constant inlined place_sprites::j2#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sintab::sintab#1 = (const byte[197]) sintab_y#0
Constant inlined sin_idx_x#4 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sintab::length#0 = (const byte) sinlen_x#0
Constant inlined gen_sintab::max#0 = (byte/word/signed word/dword/signed dword) 255
Constant inlined gen_sintab::max#1 = (byte/word/signed word/dword/signed dword) 208
Constant inlined mulFACbyMEM::mem#0 = (const byte*) gen_sintab::f_2pi#0
Constant inlined mulFACbyMEM::mem#1 = (const byte[]) gen_sintab::f_amp#0
Constant inlined gen_sintab::min#1 = (byte/signed byte/word/signed word/dword/signed dword) 50
Constant inlined clear_screen::$0 = (const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000
Constant inlined init::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sintab::min#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined place_sprites::$4 = (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5
Constant inlined sin_idx_x#16 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined progress_init::line#0 = (const byte*) SCREEN#0
Constant inlined gen_chargen_sprite::s_gen_cnt#2 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined place_sprites::$1 = (const byte*) sprites#0/(byte/signed byte/word/signed word/dword/signed dword) 64
Constant inlined gen_chargen_sprite::s_gen_cnt#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined progress_init::line#1 = (const byte*) SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 40
Constant inlined anim::j#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_chargen_sprite::b#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined anim::$0 = ((word))(byte/signed byte/word/signed word/dword/signed dword) 30
Constant inlined gen_sintab::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_chargen_sprite::s_gen#2 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined place_sprites::spr_x#0 = (byte/signed byte/word/signed word/dword/signed dword) 60
Constant inlined gen_chargen_sprite::s_gen#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined anim::x_msb#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sprites::i#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined place_sprites::col#0 = (byte/signed byte/word/signed word/dword/signed dword) 5
Constant inlined gen_chargen_sprite::y#0 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined sin_idx_y#4 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined progress_idx#11 = (byte/signed byte/word/signed word/dword/signed dword) 0
Constant inlined gen_sprites::$3 = (const string) gen_sprites::cml#0
Constant inlined anim::j2#0 = (byte/signed byte/word/signed word/dword/signed dword) 12
Succesful SSA optimization Pass2ConstantInlining
Identical Phi Values (byte*) addMEMtoFAC::mem#2 (const byte[]) gen_sintab::f_min#0
Succesful SSA optimization Pass2IdenticalPhiElimination
Constant (const byte[]) prepareMEM::mem#2 = gen_sintab::f_min#0
Succesful SSA optimization Pass2ConstantIdentification
Inlining constant with var siblings (const byte[]) prepareMEM::mem#2
Inlining constant with var siblings (const byte[]) prepareMEM::mem#2
Inlining constant with var siblings (const byte[]) prepareMEM::mem#2
Inlining constant with var siblings (const byte[]) prepareMEM::mem#2
Constant inlined prepareMEM::mem#2 = (const byte[]) gen_sintab::f_min#0
Succesful SSA optimization Pass2ConstantInlining
Block Sequence Planned @begin @51 @end main main::@2 main::@3 anim anim::@1 anim::@6 anim::@2 anim::@7 anim::@3 anim::@8 anim::@9 anim::@4 anim::@10 anim::@5 anim::@return init init::@1 init::@2 init::@4 init::@5 init::@6 init::@7 init::@8 init::@9 init::@return clear_screen clear_screen::@1 clear_screen::@return gen_sintab gen_sintab::@3 gen_sintab::@4 gen_sintab::@5 gen_sintab::@6 gen_sintab::@7 gen_sintab::@8 gen_sintab::@9 gen_sintab::@10 gen_sintab::@11 gen_sintab::@12 gen_sintab::@1 gen_sintab::@14 gen_sintab::@15 gen_sintab::@16 gen_sintab::@17 gen_sintab::@18 gen_sintab::@19 gen_sintab::@20 gen_sintab::@21 gen_sintab::@22 gen_sintab::@23 gen_sintab::@return progress_inc progress_inc::@2 progress_inc::@1 progress_inc::@return getFAC getFAC::@return addMEMtoFAC addMEMtoFAC::@1 addMEMtoFAC::@return prepareMEM prepareMEM::@return mulFACbyMEM mulFACbyMEM::@1 mulFACbyMEM::@return sinFAC sinFAC::@return divMEMbyFAC divMEMbyFAC::@1 divMEMbyFAC::@return setFAC setFAC::@1 setFAC::@return setMEMtoFAC setMEMtoFAC::@1 setMEMtoFAC::@return subFACfromARG subFACfromARG::@return setARGtoFAC setARGtoFAC::@return progress_init progress_init::@return gen_sprites gen_sprites::@1 gen_sprites::@3 gen_sprites::@return gen_chargen_sprite gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@5 gen_chargen_sprite::@8 gen_chargen_sprite::@9 gen_chargen_sprite::@10 gen_chargen_sprite::@return place_sprites place_sprites::@1 place_sprites::@return 
Added new block during phi lifting anim::@11(between anim::@3 and anim::@1)
Added new block during phi lifting anim::@12(between anim::@1 and anim::@2)
Added new block during phi lifting anim::@13(between anim::@2 and anim::@3)
Added new block during phi lifting anim::@14(between anim::@8 and anim::@4)
Added new block during phi lifting anim::@15(between anim::@4 and anim::@5)
Added new block during phi lifting init::@11(between init::@1 and init::@1)
Added new block during phi lifting clear_screen::@3(between clear_screen::@1 and clear_screen::@1)
Added new block during phi lifting gen_sintab::@24(between gen_sintab::@23 and gen_sintab::@1)
Added new block during phi lifting progress_inc::@3(between progress_inc and progress_inc::@1)
Added new block during phi lifting gen_sprites::@4(between gen_sprites::@3 and gen_sprites::@1)
Added new block during phi lifting gen_chargen_sprite::@11(between gen_chargen_sprite::@9 and gen_chargen_sprite::@1)
Added new block during phi lifting gen_chargen_sprite::@12(between gen_chargen_sprite::@8 and gen_chargen_sprite::@2)
Added new block during phi lifting gen_chargen_sprite::@13(between gen_chargen_sprite::@5 and gen_chargen_sprite::@4)
Added new block during phi lifting gen_chargen_sprite::@14(between gen_chargen_sprite::@4 and gen_chargen_sprite::@5)
Added new block during phi lifting place_sprites::@3(between place_sprites::@1 and place_sprites::@1)
Block Sequence Planned @begin @51 @end main main::@2 main::@3 anim anim::@1 anim::@6 anim::@2 anim::@7 anim::@3 anim::@8 anim::@9 anim::@4 anim::@10 anim::@5 anim::@return anim::@15 anim::@14 anim::@11 anim::@13 anim::@12 init init::@1 init::@2 init::@4 init::@5 init::@6 init::@7 init::@8 init::@9 init::@return init::@11 clear_screen clear_screen::@1 clear_screen::@return clear_screen::@3 gen_sintab gen_sintab::@3 gen_sintab::@4 gen_sintab::@5 gen_sintab::@6 gen_sintab::@7 gen_sintab::@8 gen_sintab::@9 gen_sintab::@10 gen_sintab::@11 gen_sintab::@12 gen_sintab::@1 gen_sintab::@14 gen_sintab::@15 gen_sintab::@16 gen_sintab::@17 gen_sintab::@18 gen_sintab::@19 gen_sintab::@20 gen_sintab::@21 gen_sintab::@22 gen_sintab::@23 gen_sintab::@return gen_sintab::@24 progress_inc progress_inc::@2 progress_inc::@1 progress_inc::@return progress_inc::@3 getFAC getFAC::@return addMEMtoFAC addMEMtoFAC::@1 addMEMtoFAC::@return prepareMEM prepareMEM::@return mulFACbyMEM mulFACbyMEM::@1 mulFACbyMEM::@return sinFAC sinFAC::@return divMEMbyFAC divMEMbyFAC::@1 divMEMbyFAC::@return setFAC setFAC::@1 setFAC::@return setMEMtoFAC setMEMtoFAC::@1 setMEMtoFAC::@return subFACfromARG subFACfromARG::@return setARGtoFAC setARGtoFAC::@return progress_init progress_init::@return gen_sprites gen_sprites::@1 gen_sprites::@3 gen_sprites::@return gen_sprites::@4 gen_chargen_sprite gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@5 gen_chargen_sprite::@8 gen_chargen_sprite::@9 gen_chargen_sprite::@10 gen_chargen_sprite::@return gen_chargen_sprite::@11 gen_chargen_sprite::@12 gen_chargen_sprite::@13 gen_chargen_sprite::@14 place_sprites place_sprites::@1 place_sprites::@return place_sprites::@3 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @51
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of anim::@9
Adding NOP phi() at start of anim::@10
Adding NOP phi() at start of init
Adding NOP phi() at start of init::@2
Adding NOP phi() at start of init::@4
Adding NOP phi() at start of init::@5
Adding NOP phi() at start of init::@6
Adding NOP phi() at start of init::@7
Adding NOP phi() at start of init::@8
Adding NOP phi() at start of init::@9
Adding NOP phi() at start of clear_screen
Adding NOP phi() at start of gen_sintab::@3
Adding NOP phi() at start of gen_sintab::@5
Adding NOP phi() at start of gen_sintab::@6
Adding NOP phi() at start of gen_sintab::@7
Adding NOP phi() at start of gen_sintab::@8
Adding NOP phi() at start of gen_sintab::@9
Adding NOP phi() at start of gen_sintab::@10
Adding NOP phi() at start of gen_sintab::@11
Adding NOP phi() at start of gen_sintab::@12
Adding NOP phi() at start of gen_sintab::@14
Adding NOP phi() at start of gen_sintab::@15
Adding NOP phi() at start of gen_sintab::@17
Adding NOP phi() at start of gen_sintab::@18
Adding NOP phi() at start of gen_sintab::@19
Adding NOP phi() at start of gen_sintab::@20
Adding NOP phi() at start of gen_sintab::@21
Adding NOP phi() at start of addMEMtoFAC
Adding NOP phi() at start of gen_sprites
Adding NOP phi() at start of gen_chargen_sprite::@6
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to init:5 anim:9 
Calls in [init] to clear_screen:59 place_sprites:66 gen_sprites:68 progress_init:70 gen_sintab:72 progress_init:74 gen_sintab:76 clear_screen:78 
Calls in [gen_sintab] to setFAC:91 setARGtoFAC:93 setFAC:97 setMEMtoFAC:99 subFACfromARG:101 setMEMtoFAC:103 setFAC:105 divMEMbyFAC:107 setMEMtoFAC:109 addMEMtoFAC:111 setMEMtoFAC:113 setFAC:118 mulFACbyMEM:120 setMEMtoFAC:122 setFAC:125 divMEMbyFAC:127 sinFAC:129 mulFACbyMEM:131 addMEMtoFAC:133 getFAC:135 progress_inc:140 
Calls in [addMEMtoFAC] to prepareMEM:161 
Calls in [mulFACbyMEM] to prepareMEM:173 
Calls in [divMEMbyFAC] to prepareMEM:181 
Calls in [setFAC] to prepareMEM:186 
Calls in [setMEMtoFAC] to prepareMEM:192 
Calls in [gen_sprites] to gen_chargen_sprite:206 

Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Created 50 initial phi equivalence classes
Coalesced [10] sin_idx_x#27 ← sin_idx_x#11
Coalesced [11] sin_idx_y#27 ← sin_idx_y#11
Coalesced [15] anim::xidx#8 ← anim::xidx#0
Coalesced [16] anim::yidx#8 ← anim::yidx#0
Coalesced [28] anim::xidx#11 ← anim::xidx#2
Coalesced [33] anim::yidx#11 ← anim::yidx#2
Coalesced [49] sin_idx_y#28 ← sin_idx_y#3
Coalesced [50] sin_idx_x#28 ← sin_idx_x#3
Coalesced [51] anim::xidx#9 ← anim::xidx#5
Coalesced [52] anim::x_msb#8 ← anim::x_msb#1
Coalesced [53] anim::j2#7 ← anim::j2#1
Coalesced [54] anim::yidx#9 ← anim::yidx#6
Coalesced [55] anim::j#7 ← anim::j#1
Coalesced [56] anim::yidx#10 ← anim::yidx#1
Coalesced [57] anim::xidx#10 ← anim::xidx#1
Coalesced [80] init::i#3 ← init::i#1
Coalesced [87] clear_screen::sc#3 ← clear_screen::sc#1
Coalesced [90] setFAC::w#6 ← setFAC::w#0
Coalesced [96] setFAC::w#9 ← setFAC::w#1
Coalesced [114] progress_cursor#66 ← progress_cursor#22
Coalesced [117] setFAC::w#7 ← setFAC::w#3
Coalesced [124] setFAC::w#8 ← setFAC::w#4
Coalesced [144] gen_sintab::i#13 ← gen_sintab::i#1
Coalesced [145] progress_idx#66 ← progress_idx#12
Coalesced [146] progress_cursor#67 ← progress_cursor#11
Coalesced [151] progress_cursor#69 ← progress_cursor#10
Coalesced [155] progress_idx#67 ← progress_idx#10
Coalesced (already) [156] progress_cursor#68 ← progress_cursor#34
Coalesced [172] prepareMEM::mem#7 ← prepareMEM::mem#4
Coalesced [180] prepareMEM::mem#6 ← prepareMEM::mem#3
Coalesced [191] prepareMEM::mem#9 ← prepareMEM::mem#1
Coalesced [200] progress_cursor#22 ← progress_init::line#2
Coalesced [211] gen_sprites::i#4 ← gen_sprites::i#1
Coalesced [212] gen_sprites::spr#4 ← gen_sprites::spr#1
Coalesced [218] gen_chargen_sprite::sprite#13 ← gen_chargen_sprite::sprite#0
Coalesced [221] gen_chargen_sprite::bits#9 ← gen_chargen_sprite::bits#0
Coalesced [222] gen_chargen_sprite::sprite#15 ← gen_chargen_sprite::sprite#11
Coalesced [228] gen_chargen_sprite::s_gen#11 ← gen_chargen_sprite::s_gen#5
Coalesced [229] gen_chargen_sprite::s_gen_cnt#10 ← gen_chargen_sprite::s_gen_cnt#4
Coalesced [230] gen_chargen_sprite::sprite#17 ← gen_chargen_sprite::sprite#10
Coalesced [240] gen_chargen_sprite::sprite#20 ← gen_chargen_sprite::sprite#1
Coalesced [253] gen_chargen_sprite::y#11 ← gen_chargen_sprite::y#1
Coalesced [254] gen_chargen_sprite::sprite#14 ← gen_chargen_sprite::sprite#2
Coalesced [255] gen_chargen_sprite::bits#10 ← gen_chargen_sprite::bits#1
Coalesced [256] gen_chargen_sprite::s_gen#10 ← gen_chargen_sprite::s_gen#6
Coalesced [257] gen_chargen_sprite::s_gen_cnt#9 ← gen_chargen_sprite::s_gen_cnt#5
Coalesced [258] gen_chargen_sprite::sprite#16 ← gen_chargen_sprite::sprite#4
Coalesced [259] gen_chargen_sprite::x#9 ← gen_chargen_sprite::x#1
Coalesced (already) [260] gen_chargen_sprite::s_gen#12 ← gen_chargen_sprite::s_gen#6
Coalesced (already) [261] gen_chargen_sprite::s_gen_cnt#11 ← gen_chargen_sprite::s_gen_cnt#5
Coalesced [262] gen_chargen_sprite::b#5 ← gen_chargen_sprite::b#1
Coalesced (already) [263] gen_chargen_sprite::sprite#18 ← gen_chargen_sprite::sprite#4
Coalesced [264] gen_chargen_sprite::s_gen#13 ← gen_chargen_sprite::s_gen#1
Coalesced [265] gen_chargen_sprite::s_gen_cnt#12 ← gen_chargen_sprite::s_gen_cnt#1
Coalesced (already) [266] gen_chargen_sprite::sprite#19 ← gen_chargen_sprite::sprite#3
Coalesced [283] place_sprites::spr_id#3 ← place_sprites::spr_id#1
Coalesced [284] place_sprites::j#3 ← place_sprites::j#1
Coalesced [285] place_sprites::spr_x#3 ← place_sprites::spr_x#1
Coalesced [286] place_sprites::j2#4 ← place_sprites::j2#2
Coalesced [287] place_sprites::col#3 ← place_sprites::col#1
Coalesced down to 36 phi equivalence classes
Culled Empty Block (label) anim::@9
Culled Empty Block (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) anim::@15
Not culling empty block because it shares successor with its predecessor. (label) anim::@14
Culled Empty Block (label) anim::@11
Culled Empty Block (label) anim::@13
Culled Empty Block (label) anim::@12
Culled Empty Block (label) init::@11
Culled Empty Block (label) clear_screen::@3
Culled Empty Block (label) gen_sintab::@24
Culled Empty Block (label) progress_inc::@3
Culled Empty Block (label) gen_sprites::@4
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Culled Empty Block (label) gen_chargen_sprite::@11
Culled Empty Block (label) gen_chargen_sprite::@12
Culled Empty Block (label) gen_chargen_sprite::@13
Culled Empty Block (label) gen_chargen_sprite::@14
Culled Empty Block (label) place_sprites::@3
Block Sequence Planned @begin @51 @end main main::@2 main::@3 anim anim::@1 anim::@6 anim::@2 anim::@7 anim::@3 anim::@8 anim::@4 anim::@5 anim::@return anim::@15 anim::@14 init init::@1 init::@2 init::@4 init::@5 init::@6 init::@7 init::@8 init::@9 init::@return clear_screen clear_screen::@1 clear_screen::@return gen_sintab gen_sintab::@3 gen_sintab::@4 gen_sintab::@5 gen_sintab::@6 gen_sintab::@7 gen_sintab::@8 gen_sintab::@9 gen_sintab::@10 gen_sintab::@11 gen_sintab::@12 gen_sintab::@1 gen_sintab::@14 gen_sintab::@15 gen_sintab::@16 gen_sintab::@17 gen_sintab::@18 gen_sintab::@19 gen_sintab::@20 gen_sintab::@21 gen_sintab::@22 gen_sintab::@23 gen_sintab::@return progress_inc progress_inc::@2 progress_inc::@1 progress_inc::@return getFAC getFAC::@return addMEMtoFAC addMEMtoFAC::@1 addMEMtoFAC::@return prepareMEM prepareMEM::@return mulFACbyMEM mulFACbyMEM::@1 mulFACbyMEM::@return sinFAC sinFAC::@return divMEMbyFAC divMEMbyFAC::@1 divMEMbyFAC::@return setFAC setFAC::@1 setFAC::@return setMEMtoFAC setMEMtoFAC::@1 setMEMtoFAC::@return subFACfromARG subFACfromARG::@return setARGtoFAC setARGtoFAC::@return progress_init progress_init::@return gen_sprites gen_sprites::@1 gen_sprites::@3 gen_sprites::@return gen_chargen_sprite gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@5 gen_chargen_sprite::@8 gen_chargen_sprite::@9 gen_chargen_sprite::@10 gen_chargen_sprite::@return place_sprites place_sprites::@1 place_sprites::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @51
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of anim::@15
Adding NOP phi() at start of anim::@14
Adding NOP phi() at start of init
Adding NOP phi() at start of init::@2
Adding NOP phi() at start of init::@4
Adding NOP phi() at start of init::@5
Adding NOP phi() at start of init::@6
Adding NOP phi() at start of init::@7
Adding NOP phi() at start of init::@8
Adding NOP phi() at start of init::@9
Adding NOP phi() at start of clear_screen
Adding NOP phi() at start of gen_sintab::@3
Adding NOP phi() at start of gen_sintab::@5
Adding NOP phi() at start of gen_sintab::@6
Adding NOP phi() at start of gen_sintab::@7
Adding NOP phi() at start of gen_sintab::@8
Adding NOP phi() at start of gen_sintab::@9
Adding NOP phi() at start of gen_sintab::@10
Adding NOP phi() at start of gen_sintab::@11
Adding NOP phi() at start of gen_sintab::@12
Adding NOP phi() at start of gen_sintab::@14
Adding NOP phi() at start of gen_sintab::@15
Adding NOP phi() at start of gen_sintab::@17
Adding NOP phi() at start of gen_sintab::@18
Adding NOP phi() at start of gen_sintab::@19
Adding NOP phi() at start of gen_sintab::@20
Adding NOP phi() at start of gen_sintab::@21
Adding NOP phi() at start of addMEMtoFAC
Adding NOP phi() at start of gen_sprites
Adding NOP phi() at start of gen_chargen_sprite::@6
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@51
@51: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @51
  [3] phi() [ ] ( )
main: scope:[main]  from @51
  [4] phi() [ ] ( main:2 [ ] )
  [5] call init param-assignment [ ] ( main:2 [ ] )
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@3
  [6] (byte) sin_idx_y#13 ← phi( main::@3/(byte) sin_idx_y#11 main/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  [6] (byte) sin_idx_x#13 ← phi( main::@3/(byte) sin_idx_x#11 main/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  to:main::@3
main::@3: scope:[main]  from main::@2
  [8] phi() [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:main::@2
anim: scope:[anim]  from main::@3
  [10] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] )
  [11] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] )
  [12] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] )
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  [13] (byte) anim::j#2 ← phi( anim/(byte/signed byte/word/signed word/dword/signed dword) 0 anim::@3/(byte) anim::j#1 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] )
  [13] (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] )
  [13] (byte) anim::j2#2 ← phi( anim/(byte/signed byte/word/signed word/dword/signed dword) 12 anim::@3/(byte) anim::j2#1 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] )
  [13] (byte) anim::x_msb#2 ← phi( anim/(byte/signed byte/word/signed word/dword/signed dword) 0 anim::@3/(byte) anim::x_msb#1 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] )
  [13] (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 ] )
  [14] (word) anim::x#0 ← ((word))(byte/signed byte/word/signed word/dword/signed dword) 30 + *((const byte[221]) sintab_x#0 + (byte) anim::xidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] )
  [15] (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] )
  [16] (byte~) anim::$3 ← > (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] )
  [17] (byte) anim::x_msb#1 ← (byte~) anim::$2 | (byte~) anim::$3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] )
  [18] (byte~) anim::$5 ← < (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] )
  [19] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#2) ← (byte~) anim::$5 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] )
  [20] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((const byte[197]) sintab_y#0 + (byte) anim::yidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] )
  [21] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] )
  [22] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] )
  to:anim::@6
anim::@6: scope:[anim]  from anim::@1
  [23] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] )
  to:anim::@2
anim::@2: scope:[anim]  from anim::@1 anim::@6
  [24] (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::xidx#5 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::xidx#5 anim::x_msb#1 ] )
  [25] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] )
  [26] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] )
  to:anim::@7
anim::@7: scope:[anim]  from anim::@2
  [27] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] )
  to:anim::@3
anim::@3: scope:[anim]  from anim::@2 anim::@7
  [28] (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#6 ] )
  [29] (byte) anim::j2#1 ← (byte) anim::j2#2 - (byte/signed byte/word/signed word/dword/signed dword) 2 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] )
  [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] )
  [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] )
  to:anim::@8
anim::@8: scope:[anim]  from anim::@3
  [32] *((const byte*) SPRITES_XMSB#0) ← (byte) anim::x_msb#1 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] )
  [33] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] )
  [34] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] )
  to:anim::@4
anim::@4: scope:[anim]  from anim::@14 anim::@8
  [35] (byte) sin_idx_x#11 ← phi( anim::@14/(byte) sin_idx_x#3 anim::@8/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ sin_idx_y#13 sin_idx_x#11 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#11 ] )
  [36] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] )
  [37] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] )
  to:anim::@5
anim::@5: scope:[anim]  from anim::@15 anim::@4
  [38] (byte) sin_idx_y#11 ← phi( anim::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 anim::@15/(byte) sin_idx_y#3 ) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
  [39] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:anim::@return
anim::@return: scope:[anim]  from anim::@5
  [40] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:@return
anim::@15: scope:[anim]  from anim::@4
  [41] phi() [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] )
  to:anim::@5
anim::@14: scope:[anim]  from anim::@8
  [42] phi() [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] )
  to:anim::@4
init: scope:[init]  from main
  [43] phi() [ ] ( main:2::init:5 [ ] )
  [44] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@1
init::@1: scope:[init]  from init init::@1
  [45] (byte) init::i#2 ← phi( init::@1/(byte) init::i#1 init/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] )
  [46] *((const byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] )
  [47] *((const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 11 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] )
  [48] (byte) init::i#1 ← ++ (byte) init::i#2 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] )
  [49] if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto init::@1 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] )
  to:init::@2
init::@2: scope:[init]  from init::@1
  [50] phi() [ ] ( main:2::init:5 [ ] )
  [51] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@4
init::@4: scope:[init]  from init::@2
  [52] phi() [ ] ( main:2::init:5 [ ] )
  [53] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@5
init::@5: scope:[init]  from init::@4
  [54] phi() [ ] ( main:2::init:5 [ ] )
  [55] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  to:init::@6
init::@6: scope:[init]  from init::@5
  [56] phi() [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  [57] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@7
init::@7: scope:[init]  from init::@6
  [58] phi() [ ] ( main:2::init:5 [ ] )
  [59] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  to:init::@8
init::@8: scope:[init]  from init::@7
  [60] phi() [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  [61] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@9
init::@9: scope:[init]  from init::@8
  [62] phi() [ ] ( main:2::init:5 [ ] )
  [63] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@return
init::@return: scope:[init]  from init::@9
  [64] return  [ ] ( main:2::init:5 [ ] )
  to:@return
clear_screen: scope:[clear_screen]  from init init::@9
  [65] phi() [ ] ( main:2::init:5::clear_screen:44 [ ] main:2::init:5::clear_screen:63 [ ] )
  to:clear_screen::@1
clear_screen::@1: scope:[clear_screen]  from clear_screen clear_screen::@1
  [66] (byte*) clear_screen::sc#2 ← phi( clear_screen/(const byte*) SCREEN#0 clear_screen::@1/(byte*) clear_screen::sc#1 ) [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] )
  [67] *((byte*) clear_screen::sc#2) ← (byte) ' ' [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] )
  [68] (byte*) clear_screen::sc#1 ← ++ (byte*) clear_screen::sc#2 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] )
  [69] if((byte*) clear_screen::sc#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto clear_screen::@1 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] )
  to:clear_screen::@return
clear_screen::@return: scope:[clear_screen]  from clear_screen::@1
  [70] return  [ ] ( main:2::init:5::clear_screen:44 [ ] main:2::init:5::clear_screen:63 [ ] )
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@6 init::@8
  [71] (byte*) gen_sintab::sintab#12 ← phi( init::@6/(const byte[221]) sintab_x#0 init::@8/(const byte[197]) sintab_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [71] (byte) gen_sintab::length#10 ← phi( init::@6/(const byte) sinlen_x#0 init::@8/(const byte) sinlen_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [71] (byte) gen_sintab::min#2 ← phi( init::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 init::@8/(byte/signed byte/word/signed word/dword/signed dword) 50 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [71] (byte) gen_sintab::max#2 ← phi( init::@6/(byte/word/signed word/dword/signed dword) 255 init::@8/(byte/word/signed word/dword/signed dword) 208 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [72] (word) setFAC::w#0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] )
  [73] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  [74] phi() [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [75] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0 ldx#0 ldy#0  }
  [77] (word) setFAC::w#1 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] )
  [78] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  [79] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [80] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  [81] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [82] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  [83] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [84] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  [85] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [86] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  [87] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [88] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  [89] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [90] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  [91] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [92] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  [93] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  [94] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@23
  [95] (byte*) progress_cursor#34 ← phi( gen_sintab::@12/(byte*) progress_init::line#2 gen_sintab::@23/(byte*) progress_cursor#11 ) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [95] (byte) progress_idx#34 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_sintab::@23/(byte) progress_idx#12 ) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [95] (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_sintab::@23/(byte) gen_sintab::i#1 ) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [96] (word) setFAC::w#3 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] )
  [97] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  [98] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [99] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  [100] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [101] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  [102] (word) setFAC::w#4 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] )
  [103] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  [104] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [105] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  [106] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [107] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  [108] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [109] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  [110] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [111] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  [112] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [113] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
  [114] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] )
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  [115] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] )
  [116] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] )
  [117] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [118] call progress_inc param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
  to:gen_sintab::@23
gen_sintab::@23: scope:[gen_sintab]  from gen_sintab::@22
  [119] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] )
  [120] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] )
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@23
  [121] return  [ ] ( main:2::init:5::gen_sintab:57 [ ] main:2::init:5::gen_sintab:61 [ ] )
  to:@return
progress_inc: scope:[progress_inc]  from gen_sintab::@22
  [122] (byte) progress_idx#10 ← ++ (byte) progress_idx#34 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] )
  [123] if((byte) progress_idx#10!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto progress_inc::@1 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] )
  to:progress_inc::@2
progress_inc::@2: scope:[progress_inc]  from progress_inc
  [124] *((byte*) progress_cursor#34) ← *((const byte[]) progress_inc::progress_chars#0+(byte/signed byte/word/signed word/dword/signed dword) 8) [ progress_cursor#34 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] )
  [125] (byte*) progress_cursor#10 ← ++ (byte*) progress_cursor#34 [ progress_cursor#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] )
  to:progress_inc::@1
progress_inc::@1: scope:[progress_inc]  from progress_inc progress_inc::@2
  [126] (byte*) progress_cursor#11 ← phi( progress_inc/(byte*) progress_cursor#34 progress_inc::@2/(byte*) progress_cursor#10 ) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
  [126] (byte) progress_idx#12 ← phi( progress_inc/(byte) progress_idx#10 progress_inc::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
  [127] *((byte*) progress_cursor#11) ← *((const byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#12) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
  to:progress_inc::@return
progress_inc::@return: scope:[progress_inc]  from progress_inc::@1
  [128] return  [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aa sty$fe sta$ff  }
  [130] (word) getFAC::return#0 ← *((const byte*) memHi#0) w= *((const byte*) memLo#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  [131] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  [132] phi() [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  [133] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$fe ldy$ff jsr$b867  }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  [135] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  [136] (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(const byte[]) gen_sintab::f_min#0 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*~) prepareMEM::mem#8 setMEMtoFAC/(byte*) prepareMEM::mem#1 ) [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] )
  [137] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] )
  [138] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] )
  [139] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] )
  [140] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  [141] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  [142] (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) gen_sintab::f_2pi#0 gen_sintab::@19/(const byte[]) gen_sintab::f_amp#0 ) [ mulFACbyMEM::mem#2 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 mulFACbyMEM::mem#2 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 mulFACbyMEM::mem#2 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 mulFACbyMEM::mem#2 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 mulFACbyMEM::mem#2 ] )
  [143] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] )
  [144] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$fe ldy$ff jsr$ba28  }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  [146] return  [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b  }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  [148] return  [ ] ( main:2::init:5::gen_sintab:57::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  [149] (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte[]) gen_sintab::f_i#0 gen_sintab::@9/(const byte[]) gen_sintab::f_amp#0 ) [ divMEMbyFAC::mem#2 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 divMEMbyFAC::mem#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 divMEMbyFAC::mem#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 divMEMbyFAC::mem#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 divMEMbyFAC::mem#2 ] )
  [150] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] )
  [151] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$fe ldy$ff jsr$bb0f  }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  [153] return  [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  [154] (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(byte/signed byte/word/signed word/dword/signed dword) 2 ) [ setFAC::w#5 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setFAC::w#5 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setFAC::w#5 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setFAC::w#5 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setFAC::w#5 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setFAC::w#5 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setFAC::w#5 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#5 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#5 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#5 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#5 ] )
  [155] (byte*~) prepareMEM::mem#8 ← (byte*)(word) setFAC::w#5 [ prepareMEM::mem#8 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] )
  [156] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$fe lda$ff jsr$b391  }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  [158] return  [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  [159] (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte[]) gen_sintab::f_amp#0 gen_sintab::@12/(const byte[]) gen_sintab::f_min#0 gen_sintab::@15/(const byte[]) gen_sintab::f_i#0 gen_sintab::@5/(const byte[]) gen_sintab::f_min#0 gen_sintab::@7/(const byte[]) gen_sintab::f_amp#0 ) [ setMEMtoFAC::mem#5 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setMEMtoFAC::mem#5 ] )
  [160] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] )
  [161] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$fe ldy$ff jsr$bbd4  }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  [163] return  [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853  }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  [165] return  [ ] ( main:2::init:5::gen_sintab:57::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f  }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  [167] return  [ ] ( main:2::init:5::gen_sintab:57::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  to:@return
progress_init: scope:[progress_init]  from init::@5 init::@7
  [168] (byte*) progress_init::line#2 ← phi( init::@5/(const byte*) SCREEN#0 init::@7/(const byte*) SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 40 ) [ progress_init::line#2 ] ( main:2::init:5::progress_init:55 [ progress_init::line#2 ] main:2::init:5::progress_init:59 [ progress_init::line#2 ] )
  to:progress_init::@return
progress_init::@return: scope:[progress_init]  from progress_init
  [169] return  [ progress_init::line#2 ] ( main:2::init:5::progress_init:55 [ progress_init::line#2 ] main:2::init:5::progress_init:59 [ progress_init::line#2 ] )
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@4
  [170] phi() [ ] ( main:2::init:5::gen_sprites:53 [ ] )
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  [171] (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) sprites#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 ) [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  [171] (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_sprites::@3/(byte) gen_sprites::i#1 ) [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  [172] (byte) gen_chargen_sprite::ch#0 ← *((const string) gen_sprites::cml#0 + (byte) gen_sprites::i#2) [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] )
  [173] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] )
  [174] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  [175] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word/dword/signed dword) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#1 ] )
  [176] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] )
  [177] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] )
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  [178] return  [ ] ( main:2::init:5::gen_sprites:53 [ ] )
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  [179] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] )
  [180] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] )
  [181] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] )
  asm { sei  }
  [183] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] )
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  [184] (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] )
  [184] (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] )
  [185] (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#0 + (byte) gen_chargen_sprite::y#2) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] )
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  [186] (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [186] (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [186] (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [186] (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [186] (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [187] (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] )
  [188] if((byte~) gen_chargen_sprite::$3==(byte/signed byte/word/signed word/dword/signed dword) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  [189] phi() [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  [190] (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_chargen_sprite::@6/(byte/signed byte/word/signed word/dword/signed dword) 1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 ] )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  [191] (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [191] (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte/signed byte/word/signed word/dword/signed dword) 0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [191] (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [191] (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [192] (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] )
  [193] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$6 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] )
  [194] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] )
  [195] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] )
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  [196] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] )
  [197] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] )
  [198] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [199] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] )
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  [200] (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] )
  [200] (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] )
  [200] (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word/dword/signed dword) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] )
  [201] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] )
  [202] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] )
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  [203] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] )
  [204] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] )
  [205] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] )
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  [206] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] )
  [207] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] )
  [208] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] )
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  [209] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  asm { cli  }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  [211] return  [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  [212] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] )
  [213] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] )
  [214] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] )
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  [215] (byte) place_sprites::col#2 ← phi( place_sprites/(byte/signed byte/word/signed word/dword/signed dword) 5 place_sprites::@1/(byte) place_sprites::col#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [215] (byte) place_sprites::j2#3 ← phi( place_sprites/(byte/signed byte/word/signed word/dword/signed dword) 0 place_sprites::@1/(byte) place_sprites::j2#2 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [215] (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte/signed byte/word/signed word/dword/signed dword) 60 place_sprites::@1/(byte) place_sprites::spr_x#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [215] (byte) place_sprites::j#2 ← phi( place_sprites/(byte/signed byte/word/signed word/dword/signed dword) 0 place_sprites::@1/(byte) place_sprites::j#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [215] (byte) place_sprites::spr_id#2 ← phi( place_sprites/((byte))(const byte*) sprites#0/(byte/signed byte/word/signed word/dword/signed dword) 64 place_sprites::@1/(byte) place_sprites::spr_id#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [216] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [217] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [218] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [219] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [220] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [221] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] )
  [222] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] )
  [223] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] )
  [224] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] )
  [225] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] )
  [226] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] )
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  [227] return  [ ] ( main:2::init:5::place_sprites:51 [ ] )
  to:@return

DOMINATORS
@begin dominated by  @begin 
@51 dominated by  @begin @51 
@end dominated by  @end @begin @51 
main dominated by  main @begin @51 
main::@2 dominated by  main::@2 main @begin @51 
main::@3 dominated by  main::@2 main::@3 main @begin @51 
anim dominated by  main::@2 main::@3 anim main @begin @51 
anim::@1 dominated by  main::@2 main::@3 anim anim::@1 main @begin @51 
anim::@6 dominated by  main::@2 main::@3 anim anim::@6 anim::@1 main @begin @51 
anim::@2 dominated by  main::@2 main::@3 anim anim::@2 anim::@1 main @begin @51 
anim::@7 dominated by  main::@2 main::@3 anim anim::@2 anim::@1 anim::@7 main @begin @51 
anim::@3 dominated by  main::@2 main::@3 anim anim::@3 anim::@2 anim::@1 main @begin @51 
anim::@8 dominated by  main::@2 main::@3 anim anim::@3 anim::@2 anim::@1 anim::@8 main @begin @51 
anim::@4 dominated by  main::@2 main::@3 anim anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 main @begin @51 
anim::@5 dominated by  main::@2 main::@3 anim anim::@5 anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 main @begin @51 
anim::@return dominated by  main::@2 main::@3 anim anim::@5 anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 anim::@return main @begin @51 
anim::@15 dominated by  main::@2 main::@3 anim anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 main @begin anim::@15 @51 
anim::@14 dominated by  main::@2 main::@3 anim anim::@3 anim::@2 anim::@1 anim::@8 main @begin anim::@14 @51 
init dominated by  init main @begin @51 
init::@1 dominated by  init main @begin init::@1 @51 
init::@2 dominated by  init main @begin init::@2 init::@1 @51 
init::@4 dominated by  init main @begin init::@2 init::@1 init::@4 @51 
init::@5 dominated by  init main @begin init::@2 init::@1 init::@5 init::@4 @51 
init::@6 dominated by  init main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 
init::@7 dominated by  init main @begin init::@2 init::@1 init::@7 init::@6 init::@5 init::@4 @51 
init::@8 dominated by  init main @begin init::@2 init::@1 init::@7 init::@6 init::@5 init::@4 init::@8 @51 
init::@9 dominated by  init main @begin init::@2 init::@1 init::@7 init::@6 init::@5 init::@4 init::@9 init::@8 @51 
init::@return dominated by  init main @begin init::@return init::@2 init::@1 init::@7 init::@6 init::@5 init::@4 init::@9 init::@8 @51 
clear_screen dominated by  init clear_screen main @begin @51 
clear_screen::@1 dominated by  init clear_screen main @begin @51 clear_screen::@1 
clear_screen::@return dominated by  init clear_screen main @begin @51 clear_screen::@1 clear_screen::@return 
gen_sintab dominated by  init gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 
gen_sintab::@3 dominated by  init gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@4 dominated by  init gen_sintab main gen_sintab::@4 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@5 dominated by  init gen_sintab main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@6 dominated by  init gen_sintab gen_sintab::@6 main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@7 dominated by  init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@8 dominated by  init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@9 dominated by  init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@10 dominated by  gen_sintab::@10 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@11 dominated by  gen_sintab::@10 gen_sintab::@11 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@12 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
gen_sintab::@1 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@14 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@15 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@15 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@16 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@17 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@17 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@18 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@19 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@20 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@20 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@21 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@22 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@22 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@23 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@23 gen_sintab::@22 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
gen_sintab::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@23 gen_sintab::@22 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 gen_sintab::@return @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
progress_inc dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 progress_inc gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@22 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
progress_inc::@2 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 progress_inc gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@22 progress_inc::@2 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
progress_inc::@1 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 progress_inc gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@22 progress_inc::@1 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
progress_inc::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 progress_inc gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 gen_sintab::@22 progress_inc::@1 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 progress_inc::@return @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
getFAC dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 getFAC gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
getFAC::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 gen_sintab::@19 init gen_sintab::@21 gen_sintab::@20 getFAC gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 getFAC::@return 
addMEMtoFAC dominated by  gen_sintab::@10 gen_sintab::@11 init addMEMtoFAC gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
addMEMtoFAC::@1 dominated by  gen_sintab::@10 gen_sintab::@11 init addMEMtoFAC::@1 addMEMtoFAC gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
addMEMtoFAC::@return dominated by  gen_sintab::@10 gen_sintab::@11 init addMEMtoFAC::@1 addMEMtoFAC addMEMtoFAC::@return gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
prepareMEM dominated by  init prepareMEM gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 
prepareMEM::@return dominated by  init prepareMEM gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 prepareMEM::@return 
mulFACbyMEM dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 mulFACbyMEM init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
mulFACbyMEM::@1 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 mulFACbyMEM init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 mulFACbyMEM::@1 gen_sintab::@3 gen_sintab::@1 
mulFACbyMEM::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 mulFACbyMEM::@return mulFACbyMEM init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 mulFACbyMEM::@1 gen_sintab::@3 gen_sintab::@1 
sinFAC dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 init sinFAC gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
sinFAC::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@16 gen_sintab::@15 gen_sintab::@18 gen_sintab::@17 init sinFAC sinFAC::@return gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 gen_sintab::@1 
divMEMbyFAC dominated by  init gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 divMEMbyFAC gen_sintab::@3 
divMEMbyFAC::@1 dominated by  init divMEMbyFAC::@1 gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 divMEMbyFAC gen_sintab::@3 
divMEMbyFAC::@return dominated by  init divMEMbyFAC::@1 divMEMbyFAC::@return gen_sintab gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 divMEMbyFAC gen_sintab::@3 
setFAC dominated by  init setFAC gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 
setFAC::@1 dominated by  init setFAC gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 setFAC::@1 @51 
setFAC::@return dominated by  setFAC::@return init setFAC gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 setFAC::@1 @51 
setMEMtoFAC dominated by  init setMEMtoFAC gen_sintab main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
setMEMtoFAC::@1 dominated by  init setMEMtoFAC setMEMtoFAC::@1 gen_sintab main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
setMEMtoFAC::@return dominated by  init setMEMtoFAC setMEMtoFAC::@1 gen_sintab main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 setMEMtoFAC::@return gen_sintab::@3 
subFACfromARG dominated by  init subFACfromARG gen_sintab gen_sintab::@6 main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
subFACfromARG::@return dominated by  init subFACfromARG gen_sintab gen_sintab::@6 main gen_sintab::@4 gen_sintab::@5 @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 subFACfromARG::@return gen_sintab::@3 
setARGtoFAC dominated by  setARGtoFAC init gen_sintab main @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
setARGtoFAC::@return dominated by  setARGtoFAC init gen_sintab main setARGtoFAC::@return @begin init::@2 init::@1 init::@6 init::@5 init::@4 @51 gen_sintab::@3 
progress_init dominated by  init progress_init main @begin init::@2 init::@1 init::@5 init::@4 @51 
progress_init::@return dominated by  init progress_init main @begin init::@2 init::@1 init::@5 init::@4 progress_init::@return @51 
gen_sprites dominated by  init main @begin gen_sprites init::@2 init::@1 init::@4 @51 
gen_sprites::@1 dominated by  init main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_sprites::@3 dominated by  init main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 gen_sprites::@3 @51 
gen_sprites::@return dominated by  init main gen_sprites::@return @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 gen_sprites::@3 @51 
gen_chargen_sprite dominated by  init gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@1 dominated by  init gen_chargen_sprite::@1 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@2 dominated by  init gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@6 dominated by  init gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@3 dominated by  init gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@3 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@4 dominated by  init gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@7 dominated by  init gen_chargen_sprite::@7 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@5 dominated by  init gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@8 dominated by  init gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@9 dominated by  init gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@10 dominated by  init gen_chargen_sprite::@10 gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
gen_chargen_sprite::@return dominated by  init gen_chargen_sprite::@10 gen_chargen_sprite::@return gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite main @begin gen_sprites init::@2 init::@1 init::@4 gen_sprites::@1 @51 
place_sprites dominated by  init main @begin init::@2 init::@1 @51 place_sprites 
place_sprites::@1 dominated by  init place_sprites::@1 main @begin init::@2 init::@1 @51 place_sprites 
place_sprites::@return dominated by  init place_sprites::@return place_sprites::@1 main @begin init::@2 init::@1 @51 place_sprites 

NATURAL LOOPS
Found back edge: Loop head: main::@2 tails: main::@2 blocks: null
Found back edge: Loop head: main::@2 tails: main::@3 blocks: null
Found back edge: Loop head: anim::@1 tails: anim::@3 blocks: null
Found back edge: Loop head: init::@1 tails: init::@1 blocks: null
Found back edge: Loop head: clear_screen::@1 tails: clear_screen::@1 blocks: null
Found back edge: Loop head: gen_sintab::@1 tails: gen_sintab::@23 blocks: null
Found back edge: Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: null
Found back edge: Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: null
Found back edge: Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: null
Found back edge: Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: null
Found back edge: Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: null
Populated: Loop head: main::@2 tails: main::@2 blocks: main::@2 
Populated: Loop head: main::@2 tails: main::@3 blocks: main::@3 main::@2 
Populated: Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6 
Populated: Loop head: init::@1 tails: init::@1 blocks: init::@1 
Populated: Loop head: clear_screen::@1 tails: clear_screen::@1 blocks: clear_screen::@1 
Populated: Loop head: gen_sintab::@1 tails: gen_sintab::@23 blocks: gen_sintab::@23 gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1 
Populated: Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1 
Populated: Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 
Populated: Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 
Populated: Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1 
Populated: Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1 
Loop head: main::@2 tails: main::@2 blocks: main::@2 
Loop head: main::@2 tails: main::@3 blocks: main::@3 main::@2 
Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6 
Loop head: init::@1 tails: init::@1 blocks: init::@1 
Loop head: clear_screen::@1 tails: clear_screen::@1 blocks: clear_screen::@1 
Loop head: gen_sintab::@1 tails: gen_sintab::@23 blocks: gen_sintab::@23 gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1 
Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1 
Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 
Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 
Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1 
Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1 

NATURAL LOOPS WITH DEPTH
Found 0 loops in scope []
Found 2 loops in scope [main]
  Loop head: main::@2 tails: main::@2 blocks: main::@2 
  Loop head: main::@2 tails: main::@3 blocks: main::@3 main::@2 
Found 1 loops in scope [init]
  Loop head: init::@1 tails: init::@1 blocks: init::@1 
Found 1 loops in scope [anim]
  Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6 
Found 1 loops in scope [clear_screen]
  Loop head: clear_screen::@1 tails: clear_screen::@1 blocks: clear_screen::@1 
Found 1 loops in scope [place_sprites]
  Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1 
Found 1 loops in scope [gen_sprites]
  Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1 
Found 0 loops in scope [progress_init]
Found 1 loops in scope [gen_sintab]
  Loop head: gen_sintab::@1 tails: gen_sintab::@23 blocks: gen_sintab::@23 gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1 
Found 3 loops in scope [gen_chargen_sprite]
  Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 
  Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 
  Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1 
Found 0 loops in scope [setFAC]
Found 0 loops in scope [setARGtoFAC]
Found 0 loops in scope [setMEMtoFAC]
Found 0 loops in scope [subFACfromARG]
Found 0 loops in scope [divMEMbyFAC]
Found 0 loops in scope [addMEMtoFAC]
Found 0 loops in scope [mulFACbyMEM]
Found 0 loops in scope [sinFAC]
Found 0 loops in scope [getFAC]
Found 0 loops in scope [progress_inc]
Found 0 loops in scope [prepareMEM]
Loop head: main::@2 tails: main::@2 blocks: main::@2  depth: 2
Loop head: main::@2 tails: main::@3 blocks: main::@3 main::@2  depth: 1
Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6  depth: 2
Loop head: init::@1 tails: init::@1 blocks: init::@1  depth: 1
Loop head: clear_screen::@1 tails: clear_screen::@1 blocks: clear_screen::@1  depth: 1
Loop head: gen_sintab::@1 tails: gen_sintab::@23 blocks: gen_sintab::@23 gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1  depth: 1
Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1  depth: 1
Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7  depth: 4
Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6  depth: 3
Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1  depth: 2
Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1  depth: 1


VARIABLE REGISTER WEIGHTS
(byte*) BORDERCOL
(byte*) CHARGEN
(byte*) COLS
(byte*) PROCPORT
(byte*) RASTER
(byte*) SCREEN
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_XMSB
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(byte*) addMEMtoFAC::mem
(void()) anim()
(byte~) anim::$2 101.0
(byte~) anim::$3 202.0
(byte~) anim::$5 202.0
(byte) anim::j
(byte) anim::j#1 151.5
(byte) anim::j#2 11.882352941176471
(byte) anim::j2
(byte) anim::j2#1 67.33333333333333
(byte) anim::j2#2 25.25
(word) anim::x
(word) anim::x#0 75.75
(byte) anim::x_msb
(byte) anim::x_msb#1 13.6
(byte) anim::x_msb#2 101.0
(byte) anim::xidx
(byte) anim::xidx#0 2.0
(byte) anim::xidx#1 202.0
(byte) anim::xidx#2 202.0
(byte) anim::xidx#3 38.125
(byte) anim::xidx#5 37.875
(byte) anim::yidx
(byte) anim::yidx#0 4.0
(byte) anim::yidx#1 202.0
(byte) anim::yidx#2 202.0
(byte) anim::yidx#3 25.416666666666664
(byte) anim::yidx#6 75.75
(void()) clear_screen()
(byte*) clear_screen::sc
(byte*) clear_screen::sc#1 16.5
(byte*) clear_screen::sc#2 16.5
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#2 2.0
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0 4.0
(word~) gen_chargen_sprite::$1 4.0
(byte~) gen_chargen_sprite::$3 2002.0
(byte~) gen_chargen_sprite::$6 20002.0
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#1 15001.5
(byte) gen_chargen_sprite::b#2 2000.2
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0 202.0
(byte) gen_chargen_sprite::bits#1 667.3333333333334
(byte) gen_chargen_sprite::bits#2 182.58823529411765
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#3 769.3076923076923
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0 6.5
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0 3.678571428571429
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#1 10001.0
(byte) gen_chargen_sprite::s_gen#3 21003.0
(byte) gen_chargen_sprite::s_gen#5 400.4
(byte) gen_chargen_sprite::s_gen#6 3500.5
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#1 15001.5
(byte) gen_chargen_sprite::s_gen_cnt#3 7001.0
(byte) gen_chargen_sprite::s_gen_cnt#4 400.4
(byte) gen_chargen_sprite::s_gen_cnt#5 3500.5
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0 2.1666666666666665
(byte*) gen_chargen_sprite::sprite#1 20002.0
(byte*) gen_chargen_sprite::sprite#10 420.59999999999997
(byte*) gen_chargen_sprite::sprite#11 102.0
(byte*) gen_chargen_sprite::sprite#2 67.33333333333333
(byte*) gen_chargen_sprite::sprite#3 7625.875
(byte*) gen_chargen_sprite::sprite#4 5184.166666666666
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#1 1501.5
(byte) gen_chargen_sprite::x#6 111.22222222222223
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#1 151.5
(byte) gen_chargen_sprite::y#2 13.173913043478262
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$23 22.0
(byte~) gen_sintab::$24 22.0
(byte*) gen_sintab::f_2pi
(byte[]) gen_sintab::f_amp
(byte[]) gen_sintab::f_i
(byte[]) gen_sintab::f_min
(byte) gen_sintab::i
(byte) gen_sintab::i#1 16.5
(byte) gen_sintab::i#10 1.8333333333333333
(byte) gen_sintab::length
(byte) gen_sintab::length#10 0.44
(byte) gen_sintab::max
(byte) gen_sintab::max#2 2.0
(byte) gen_sintab::min
(byte) gen_sintab::min#2 0.3333333333333333
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#12 0.22
(void()) gen_sprites()
(byte[]) gen_sprites::cml
(byte) gen_sprites::i
(byte) gen_sprites::i#1 16.5
(byte) gen_sprites::i#2 6.6000000000000005
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#1 7.333333333333333
(byte*) gen_sprites::spr#2 8.25
(word()) getFAC()
(word) getFAC::return
(word) getFAC::return#0 4.333333333333333
(word) getFAC::return#2 22.0
(word) getFAC::w
(void()) init()
(byte) init::i
(byte) init::i#1 16.5
(byte) init::i#2 14.666666666666666
(void()) main()
(byte*) memHi
(byte*) memLo
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#2 2.0
(void()) place_sprites()
(byte) place_sprites::col
(byte) place_sprites::col#1 4.4
(byte) place_sprites::col#2 4.714285714285714
(byte) place_sprites::j
(byte) place_sprites::j#1 16.5
(byte) place_sprites::j#2 4.4
(byte) place_sprites::j2
(byte) place_sprites::j2#1 22.0
(byte) place_sprites::j2#2 7.333333333333333
(byte) place_sprites::j2#3 5.5
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#1 2.2
(byte) place_sprites::spr_id#2 16.5
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#1 3.6666666666666665
(byte) place_sprites::spr_x#2 5.5
(byte*) place_sprites::sprites_ptr
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0 4.0
(byte~) prepareMEM::$1 4.0
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#1 4.0
(byte*) prepareMEM::mem#3 4.0
(byte*) prepareMEM::mem#4 4.0
(byte*) prepareMEM::mem#5 3.9999999999999996
(byte*~) prepareMEM::mem#8 4.0
(byte*) progress_cursor
(byte*) progress_cursor#10 4.0
(byte*) progress_cursor#11 2.8333333333333335
(byte*) progress_cursor#34 0.7307692307692306
(byte) progress_idx
(byte) progress_idx#10 3.0
(byte) progress_idx#12 2.5
(byte) progress_idx#34 0.5652173913043479
(void()) progress_inc()
(byte[]) progress_inc::progress_chars
(void()) progress_init((byte*) progress_init::line)
(byte*) progress_init::line
(byte*) progress_init::line#2 0.06666666666666667
(void()) setARGtoFAC()
(void()) setFAC((word) setFAC::w)
(word) setFAC::w
(word) setFAC::w#0 4.0
(word) setFAC::w#1 4.0
(word) setFAC::w#3 22.0
(word) setFAC::w#4 22.0
(word) setFAC::w#5 26.0
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#5 2.0
(void()) sinFAC()
(byte) sin_idx_x
(byte) sin_idx_x#11 1.625
(byte) sin_idx_x#13 0.5769230769230769
(byte) sin_idx_x#3 2.0
(byte) sin_idx_y
(byte) sin_idx_y#11 3.25
(byte) sin_idx_y#13 0.49999999999999994
(byte) sin_idx_y#3 2.0
(byte) sinlen_x
(byte) sinlen_y
(byte[221]) sintab_x
(byte[197]) sintab_y
(byte*) sprites
(void()) subFACfromARG()

Initial phi equivalence classes
[ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
[ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
[ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
[ anim::x_msb#2 anim::x_msb#1 ]
[ anim::j2#2 anim::j2#1 ]
[ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
[ anim::j#2 anim::j#1 ]
[ init::i#2 init::i#1 ]
[ clear_screen::sc#2 clear_screen::sc#1 ]
[ gen_sintab::max#2 ]
[ gen_sintab::min#2 ]
[ gen_sintab::length#10 ]
[ gen_sintab::sintab#12 ]
[ gen_sintab::i#10 gen_sintab::i#1 ]
[ progress_idx#34 progress_idx#12 progress_idx#10 ]
[ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ]
[ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ]
[ mulFACbyMEM::mem#2 ]
[ divMEMbyFAC::mem#2 ]
[ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ]
[ setMEMtoFAC::mem#5 ]
[ gen_sprites::i#2 gen_sprites::i#1 ]
[ gen_sprites::spr#2 gen_sprites::spr#1 ]
[ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
[ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
[ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
[ gen_chargen_sprite::c#3 ]
[ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
[ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
[ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
[ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
[ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
[ place_sprites::j#2 place_sprites::j#1 ]
[ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
[ place_sprites::j2#3 place_sprites::j2#2 ]
[ place_sprites::col#2 place_sprites::col#1 ]
Added variable anim::x#0 to zero page equivalence class [ anim::x#0 ]
Added variable anim::$2 to zero page equivalence class [ anim::$2 ]
Added variable anim::$3 to zero page equivalence class [ anim::$3 ]
Added variable anim::$5 to zero page equivalence class [ anim::$5 ]
Added variable getFAC::return#2 to zero page equivalence class [ getFAC::return#2 ]
Added variable gen_sintab::$23 to zero page equivalence class [ gen_sintab::$23 ]
Added variable gen_sintab::$24 to zero page equivalence class [ gen_sintab::$24 ]
Added variable getFAC::return#0 to zero page equivalence class [ getFAC::return#0 ]
Added variable prepareMEM::$0 to zero page equivalence class [ prepareMEM::$0 ]
Added variable prepareMEM::$1 to zero page equivalence class [ prepareMEM::$1 ]
Added variable gen_chargen_sprite::ch#0 to zero page equivalence class [ gen_chargen_sprite::ch#0 ]
Added variable gen_chargen_sprite::$0 to zero page equivalence class [ gen_chargen_sprite::$0 ]
Added variable gen_chargen_sprite::$1 to zero page equivalence class [ gen_chargen_sprite::$1 ]
Added variable gen_chargen_sprite::chargen#0 to zero page equivalence class [ gen_chargen_sprite::chargen#0 ]
Added variable gen_chargen_sprite::$3 to zero page equivalence class [ gen_chargen_sprite::$3 ]
Added variable gen_chargen_sprite::$6 to zero page equivalence class [ gen_chargen_sprite::$6 ]
Added variable place_sprites::j2#1 to zero page equivalence class [ place_sprites::j2#1 ]
Complete equivalence classes
[ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
[ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
[ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
[ anim::x_msb#2 anim::x_msb#1 ]
[ anim::j2#2 anim::j2#1 ]
[ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
[ anim::j#2 anim::j#1 ]
[ init::i#2 init::i#1 ]
[ clear_screen::sc#2 clear_screen::sc#1 ]
[ gen_sintab::max#2 ]
[ gen_sintab::min#2 ]
[ gen_sintab::length#10 ]
[ gen_sintab::sintab#12 ]
[ gen_sintab::i#10 gen_sintab::i#1 ]
[ progress_idx#34 progress_idx#12 progress_idx#10 ]
[ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ]
[ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ]
[ mulFACbyMEM::mem#2 ]
[ divMEMbyFAC::mem#2 ]
[ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ]
[ setMEMtoFAC::mem#5 ]
[ gen_sprites::i#2 gen_sprites::i#1 ]
[ gen_sprites::spr#2 gen_sprites::spr#1 ]
[ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
[ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
[ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
[ gen_chargen_sprite::c#3 ]
[ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
[ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
[ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
[ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
[ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
[ place_sprites::j#2 place_sprites::j#1 ]
[ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
[ place_sprites::j2#3 place_sprites::j2#2 ]
[ place_sprites::col#2 place_sprites::col#1 ]
[ anim::x#0 ]
[ anim::$2 ]
[ anim::$3 ]
[ anim::$5 ]
[ getFAC::return#2 ]
[ gen_sintab::$23 ]
[ gen_sintab::$24 ]
[ getFAC::return#0 ]
[ prepareMEM::$0 ]
[ prepareMEM::$1 ]
[ gen_chargen_sprite::ch#0 ]
[ gen_chargen_sprite::$0 ]
[ gen_chargen_sprite::$1 ]
[ gen_chargen_sprite::chargen#0 ]
[ gen_chargen_sprite::$3 ]
[ gen_chargen_sprite::$6 ]
[ place_sprites::j2#1 ]
Allocated zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
Allocated zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
Allocated zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
Allocated zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ]
Allocated zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ]
Allocated zp ZP_BYTE:7 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
Allocated zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ]
Allocated zp ZP_BYTE:9 [ init::i#2 init::i#1 ]
Allocated zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 ]
Allocated zp ZP_BYTE:12 [ gen_sintab::max#2 ]
Allocated zp ZP_BYTE:13 [ gen_sintab::min#2 ]
Allocated zp ZP_BYTE:14 [ gen_sintab::length#10 ]
Allocated zp ZP_WORD:15 [ gen_sintab::sintab#12 ]
Allocated zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ]
Allocated zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ]
Allocated zp ZP_WORD:19 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ]
Allocated zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ]
Allocated zp ZP_WORD:23 [ mulFACbyMEM::mem#2 ]
Allocated zp ZP_WORD:25 [ divMEMbyFAC::mem#2 ]
Allocated zp ZP_WORD:27 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ]
Allocated zp ZP_WORD:29 [ setMEMtoFAC::mem#5 ]
Allocated zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ]
Allocated zp ZP_WORD:32 [ gen_sprites::spr#2 gen_sprites::spr#1 ]
Allocated zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Allocated zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Allocated zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Allocated zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ]
Allocated zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Allocated zp ZP_BYTE:39 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
Allocated zp ZP_BYTE:40 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
Allocated zp ZP_WORD:41 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
Allocated zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
Allocated zp ZP_BYTE:44 [ place_sprites::j#2 place_sprites::j#1 ]
Allocated zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
Allocated zp ZP_BYTE:46 [ place_sprites::j2#3 place_sprites::j2#2 ]
Allocated zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ]
Allocated zp ZP_WORD:48 [ anim::x#0 ]
Allocated zp ZP_BYTE:50 [ anim::$2 ]
Allocated zp ZP_BYTE:51 [ anim::$3 ]
Allocated zp ZP_BYTE:52 [ anim::$5 ]
Allocated zp ZP_WORD:53 [ getFAC::return#2 ]
Allocated zp ZP_WORD:55 [ gen_sintab::$23 ]
Allocated zp ZP_BYTE:57 [ gen_sintab::$24 ]
Allocated zp ZP_WORD:58 [ getFAC::return#0 ]
Allocated zp ZP_BYTE:60 [ prepareMEM::$0 ]
Allocated zp ZP_BYTE:61 [ prepareMEM::$1 ]
Allocated zp ZP_BYTE:62 [ gen_chargen_sprite::ch#0 ]
Allocated zp ZP_WORD:63 [ gen_chargen_sprite::$0 ]
Allocated zp ZP_WORD:65 [ gen_chargen_sprite::$1 ]
Allocated zp ZP_WORD:67 [ gen_chargen_sprite::chargen#0 ]
Allocated zp ZP_BYTE:69 [ gen_chargen_sprite::$3 ]
Allocated zp ZP_BYTE:70 [ gen_chargen_sprite::$6 ]
Allocated zp ZP_BYTE:71 [ place_sprites::j2#1 ]

INITIAL ASM
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label PROCPORT = 1
  .label CHARGEN = $d000
  .label SPRITES_XPOS = $d000
  .label SPRITES_YPOS = $d001
  .label SPRITES_XMSB = $d010
  .label RASTER = $d012
  .label SPRITES_ENABLE = $d015
  .label SPRITES_EXPAND_Y = $d017
  .label SPRITES_EXPAND_X = $d01d
  .label BORDERCOL = $d020
  .label SPRITES_COLS = $d027
  .label COLS = $d800
  .label memLo = $fe
  .label memHi = $ff
  .const sinlen_x = $dd
  .const sinlen_y = $c5
  .label sprites = $2000
  .label SCREEN = $400
  .label progress_idx = $12
  .label progress_cursor = $13
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @51 [phi:@begin->@51]
b51_from_bbegin:
  jmp b51
//SEG4 @51
b51:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @51 to main [phi:@51->main]
main_from_b51:
  jsr main
//SEG7 [3] phi from @51 to @end [phi:@51->@end]
bend_from_b51:
  jmp bend
//SEG8 @end
bend:
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [43] phi from main to init [phi:main->init]
  init_from_main:
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  b2_from_main:
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:main->main::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:main->main::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 main::@2
  b2:
  //SEG17 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1_neq_vbuc2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG18 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
    jmp b3
  //SEG19 main::@3
  b3:
  //SEG20 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG21 [6] phi from main::@3 to main::@2 [phi:main::@3->main::@2]
  b2_from_b3:
  //SEG22 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@3->main::@2#0] -- register_copy 
  //SEG23 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@3->main::@2#1] -- register_copy 
    jmp b2
}
//SEG24 anim
anim: {
    .label _2 = $32
    .label _3 = $33
    .label _5 = $34
    .label xidx = 4
    .label yidx = 7
    .label x = $30
    .label x_msb = 5
    .label j2 = 6
    .label j = 8
  //SEG25 [10] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc BORDERCOL
  //SEG26 [11] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- vbuz1=vbuz2 
    lda sin_idx_x
    sta xidx
  //SEG27 [12] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- vbuz1=vbuz2 
    lda sin_idx_y
    sta yidx
  //SEG28 [13] phi from anim to anim::@1 [phi:anim->anim::@1]
  b1_from_anim:
  //SEG29 [13] phi (byte) anim::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim->anim::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta j
  //SEG30 [13] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG31 [13] phi (byte) anim::j2#2 = (byte/signed byte/word/signed word/dword/signed dword) 12 [phi:anim->anim::@1#2] -- vbuz1=vbuc1 
    lda #$c
    sta j2
  //SEG32 [13] phi (byte) anim::x_msb#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim->anim::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta x_msb
  //SEG33 [13] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#4] -- register_copy 
    jmp b1
  //SEG34 [13] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  b1_from_b3:
  //SEG35 [13] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG36 [13] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG37 [13] phi (byte) anim::j2#2 = (byte) anim::j2#1 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG38 [13] phi (byte) anim::x_msb#2 = (byte) anim::x_msb#1 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG39 [13] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#4] -- register_copy 
    jmp b1
  //SEG40 anim::@1
  b1:
  //SEG41 [14] (word) anim::x#0 ← ((word))(byte/signed byte/word/signed word/dword/signed dword) 30 + *((const byte[221]) sintab_x#0 + (byte) anim::xidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ) -- vwuz1=vbuc1_plus_pbuc2_derefidx_vbuz2 
    ldy xidx
    lda sintab_x,y
    clc
    adc #$1e
    sta x
    lda #0
    adc #0
    sta x+1
  //SEG42 [15] (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ) -- vbuz1=vbuz2_rol_1 
    lda x_msb
    asl
    sta _2
  //SEG43 [16] (byte~) anim::$3 ← > (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ) -- vbuz1=_hi_vwuz2 
    lda x+1
    sta _3
  //SEG44 [17] (byte) anim::x_msb#1 ← (byte~) anim::$2 | (byte~) anim::$3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _2
    ora _3
    sta x_msb
  //SEG45 [18] (byte~) anim::$5 ← < (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ) -- vbuz1=_lo_vwuz2 
    lda x
    sta _5
  //SEG46 [19] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#2) ← (byte~) anim::$5 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) -- pbuc1_derefidx_vbuz1=vbuz2 
    lda _5
    ldy j2
    sta SPRITES_XPOS,y
  //SEG47 [20] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((const byte[197]) sintab_y#0 + (byte) anim::yidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuz2 
    ldy yidx
    lda sintab_y,y
    ldy j2
    sta SPRITES_YPOS,y
  //SEG48 [21] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$a
    clc
    adc xidx
    sta xidx
  //SEG49 [22] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda xidx
    cmp #sinlen_x
    bcc b2_from_b1
    jmp b6
  //SEG50 anim::@6
  b6:
  //SEG51 [23] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ) -- vbuz1=vbuz1_minus_vbuc1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG52 [24] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  b2_from_b1:
  b2_from_b6:
  //SEG53 [24] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
    jmp b2
  //SEG54 anim::@2
  b2:
  //SEG55 [25] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #8
    clc
    adc yidx
    sta yidx
  //SEG56 [26] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda yidx
    cmp #sinlen_y
    bcc b3_from_b2
    jmp b7
  //SEG57 anim::@7
  b7:
  //SEG58 [27] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ) -- vbuz1=vbuz1_minus_vbuc1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG59 [28] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  b3_from_b2:
  b3_from_b7:
  //SEG60 [28] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
    jmp b3
  //SEG61 anim::@3
  b3:
  //SEG62 [29] (byte) anim::j2#1 ← (byte) anim::j2#2 - (byte/signed byte/word/signed word/dword/signed dword) 2 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ) -- vbuz1=vbuz1_minus_2 
    dec j2
    dec j2
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ) -- vbuz1=_inc_vbuz1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda j
    cmp #7
    bne b1_from_b3
    jmp b8
  //SEG65 anim::@8
  b8:
  //SEG66 [32] *((const byte*) SPRITES_XMSB#0) ← (byte) anim::x_msb#1 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1=vbuz1 
    lda x_msb
    sta SPRITES_XMSB
  //SEG67 [33] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- vbuz1=_inc_vbuz1 
    inc sin_idx_x
  //SEG68 [34] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14_from_b8
  //SEG69 [35] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  b4_from_b8:
  //SEG70 [35] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim::@8->anim::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_x
    jmp b4
  //SEG71 anim::@4
  b4:
  //SEG72 [36] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- vbuz1=_inc_vbuz1 
    inc sin_idx_y
  //SEG73 [37] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15_from_b4
  //SEG74 [38] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  b5_from_b4:
  //SEG75 [38] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim::@4->anim::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_y
    jmp b5
  //SEG76 anim::@5
  b5:
  //SEG77 [39] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_pbuc1=_dec__deref_pbuc1 
    dec BORDERCOL
    jmp breturn
  //SEG78 anim::@return
  breturn:
  //SEG79 [40] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG80 [41] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  b15_from_b4:
    jmp b15
  //SEG81 anim::@15
  b15:
  //SEG82 [38] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  b5_from_b15:
  //SEG83 [38] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG84 [42] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  b14_from_b8:
    jmp b14
  //SEG85 anim::@14
  b14:
  //SEG86 [35] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  b4_from_b14:
  //SEG87 [35] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG88 init
init: {
    .label i = 9
  //SEG89 [44] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG90 [65] phi from init to clear_screen [phi:init->clear_screen]
  clear_screen_from_init:
    jsr clear_screen
  //SEG91 [45] phi from init to init::@1 [phi:init->init::@1]
  b1_from_init:
  //SEG92 [45] phi (byte) init::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init->init::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG93 [45] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  b1_from_b1:
  //SEG94 [45] phi (byte) init::i#2 = (byte) init::i#1 [phi:init::@1->init::@1#0] -- register_copy 
    jmp b1
  //SEG95 init::@1
  b1:
  //SEG96 [46] *((const byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuc2 
    ldy i
    lda #0
    sta COLS,y
  //SEG97 [47] *((const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 11 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) -- pbuc1_derefidx_vbuz1=vbuc2 
    ldy i
    lda #$b
    sta COLS+$28,y
  //SEG98 [48] (byte) init::i#1 ← ++ (byte) init::i#2 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG99 [49] if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto init::@1 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #$28
    bne b1_from_b1
  //SEG100 [50] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  b2_from_b1:
    jmp b2
  //SEG101 init::@2
  b2:
  //SEG102 [51] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG103 [52] phi from init::@2 to init::@4 [phi:init::@2->init::@4]
  b4_from_b2:
    jmp b4
  //SEG104 init::@4
  b4:
  //SEG105 [53] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [170] phi from init::@4 to gen_sprites [phi:init::@4->gen_sprites]
  gen_sprites_from_b4:
    jsr gen_sprites
  //SEG107 [54] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  b5_from_b4:
    jmp b5
  //SEG108 init::@5
  b5:
  //SEG109 [55] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  //SEG110 [168] phi from init::@5 to progress_init [phi:init::@5->progress_init]
  progress_init_from_b5:
  //SEG111 [168] phi (byte*) progress_init::line#2 = (const byte*) SCREEN#0 [phi:init::@5->progress_init#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta progress_init.line
    lda #>SCREEN
    sta progress_init.line+1
    jsr progress_init
  //SEG112 [56] phi from init::@5 to init::@6 [phi:init::@5->init::@6]
  b6_from_b5:
    jmp b6
  //SEG113 init::@6
  b6:
  //SEG114 [57] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG115 [71] phi from init::@6 to gen_sintab [phi:init::@6->gen_sintab]
  gen_sintab_from_b6:
  //SEG116 [71] phi (byte*) gen_sintab::sintab#12 = (const byte[221]) sintab_x#0 [phi:init::@6->gen_sintab#0] -- pbuz1=pbuc1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG117 [71] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@6->gen_sintab#1] -- vbuz1=vbuc1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG118 [71] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init::@6->gen_sintab#2] -- vbuz1=vbuc1 
    lda #0
    sta gen_sintab.min
  //SEG119 [71] phi (byte) gen_sintab::max#2 = (byte/word/signed word/dword/signed dword) 255 [phi:init::@6->gen_sintab#3] -- vbuz1=vbuc1 
    lda #$ff
    sta gen_sintab.max
    jsr gen_sintab
  //SEG120 [58] phi from init::@6 to init::@7 [phi:init::@6->init::@7]
  b7_from_b6:
    jmp b7
  //SEG121 init::@7
  b7:
  //SEG122 [59] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  //SEG123 [168] phi from init::@7 to progress_init [phi:init::@7->progress_init]
  progress_init_from_b7:
  //SEG124 [168] phi (byte*) progress_init::line#2 = (const byte*) SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 40 [phi:init::@7->progress_init#0] -- pbuz1=pbuc1 
    lda #<SCREEN+$28
    sta progress_init.line
    lda #>SCREEN+$28
    sta progress_init.line+1
    jsr progress_init
  //SEG125 [60] phi from init::@7 to init::@8 [phi:init::@7->init::@8]
  b8_from_b7:
    jmp b8
  //SEG126 init::@8
  b8:
  //SEG127 [61] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG128 [71] phi from init::@8 to gen_sintab [phi:init::@8->gen_sintab]
  gen_sintab_from_b8:
  //SEG129 [71] phi (byte*) gen_sintab::sintab#12 = (const byte[197]) sintab_y#0 [phi:init::@8->gen_sintab#0] -- pbuz1=pbuc1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG130 [71] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@8->gen_sintab#1] -- vbuz1=vbuc1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG131 [71] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word/dword/signed dword) 50 [phi:init::@8->gen_sintab#2] -- vbuz1=vbuc1 
    lda #$32
    sta gen_sintab.min
  //SEG132 [71] phi (byte) gen_sintab::max#2 = (byte/word/signed word/dword/signed dword) 208 [phi:init::@8->gen_sintab#3] -- vbuz1=vbuc1 
    lda #$d0
    sta gen_sintab.max
    jsr gen_sintab
  //SEG133 [62] phi from init::@8 to init::@9 [phi:init::@8->init::@9]
  b9_from_b8:
    jmp b9
  //SEG134 init::@9
  b9:
  //SEG135 [63] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG136 [65] phi from init::@9 to clear_screen [phi:init::@9->clear_screen]
  clear_screen_from_b9:
    jsr clear_screen
    jmp breturn
  //SEG137 init::@return
  breturn:
  //SEG138 [64] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG139 clear_screen
clear_screen: {
    .label sc = $a
  //SEG140 [66] phi from clear_screen to clear_screen::@1 [phi:clear_screen->clear_screen::@1]
  b1_from_clear_screen:
  //SEG141 [66] phi (byte*) clear_screen::sc#2 = (const byte*) SCREEN#0 [phi:clear_screen->clear_screen::@1#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG142 [66] phi from clear_screen::@1 to clear_screen::@1 [phi:clear_screen::@1->clear_screen::@1]
  b1_from_b1:
  //SEG143 [66] phi (byte*) clear_screen::sc#2 = (byte*) clear_screen::sc#1 [phi:clear_screen::@1->clear_screen::@1#0] -- register_copy 
    jmp b1
  //SEG144 clear_screen::@1
  b1:
  //SEG145 [67] *((byte*) clear_screen::sc#2) ← (byte) ' ' [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG146 [68] (byte*) clear_screen::sc#1 ← ++ (byte*) clear_screen::sc#2 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG147 [69] if((byte*) clear_screen::sc#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto clear_screen::@1 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) -- pbuz1_lt_pbuc1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1_from_b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG148 clear_screen::@return
  breturn:
  //SEG149 [70] return  [ ] ( main:2::init:5::clear_screen:44 [ ] main:2::init:5::clear_screen:63 [ ] )
    rts
}
//SEG150 gen_sintab
gen_sintab: {
    .label f_2pi = $e2e5
    .label _23 = $37
    .label _24 = $39
    .label i = $11
    .label max = $c
    .label min = $d
    .label length = $e
    .label sintab = $f
  //SEG151 [72] (word) setFAC::w#0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ) -- vwuz1=_word_vbuz2 
    lda max
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG153 [154] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  setFAC_from_gen_sintab:
  //SEG154 [154] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG155 [74] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  b3_from_gen_sintab:
    jmp b3
  //SEG156 gen_sintab::@3
  b3:
  //SEG157 [75] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    jsr setARGtoFAC
    jmp b4
  //SEG158 gen_sintab::@4
  b4:
  //SEG159 asm { lda#0 ldx#0 ldy#0  }
    lda #0
    ldx #0
    ldy #0
  //SEG160 [77] (word) setFAC::w#1 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ) -- vwuz1=_word_vbuz2 
    lda min
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG161 [78] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG162 [154] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  setFAC_from_b4:
  //SEG163 [154] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG164 [79] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  b5_from_b4:
    jmp b5
  //SEG165 gen_sintab::@5
  b5:
  //SEG166 [80] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG167 [159] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  setMEMtoFAC_from_b5:
  //SEG168 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG169 [81] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  b6_from_b5:
    jmp b6
  //SEG170 gen_sintab::@6
  b6:
  //SEG171 [82] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    jsr subFACfromARG
  //SEG172 [83] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  b7_from_b6:
    jmp b7
  //SEG173 gen_sintab::@7
  b7:
  //SEG174 [84] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG175 [159] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  setMEMtoFAC_from_b7:
  //SEG176 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG177 [85] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  b8_from_b7:
    jmp b8
  //SEG178 gen_sintab::@8
  b8:
  //SEG179 [86] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG180 [154] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  setFAC_from_b8:
  //SEG181 [154] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word/dword/signed dword) 2 [phi:gen_sintab::@8->setFAC#0] -- vwuz1=vbuc1 
    lda #<2
    sta setFAC.w
    lda #>2
    sta setFAC.w+1
    jsr setFAC
  //SEG182 [87] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  b9_from_b8:
    jmp b9
  //SEG183 gen_sintab::@9
  b9:
  //SEG184 [88] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG185 [149] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  divMEMbyFAC_from_b9:
  //SEG186 [149] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG187 [89] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  b10_from_b9:
    jmp b10
  //SEG188 gen_sintab::@10
  b10:
  //SEG189 [90] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG190 [159] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  setMEMtoFAC_from_b10:
  //SEG191 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG192 [91] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  b11_from_b10:
    jmp b11
  //SEG193 gen_sintab::@11
  b11:
  //SEG194 [92] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG195 [132] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  addMEMtoFAC_from_b11:
    jsr addMEMtoFAC
  //SEG196 [93] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  b12_from_b11:
    jmp b12
  //SEG197 gen_sintab::@12
  b12:
  //SEG198 [94] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG199 [159] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  setMEMtoFAC_from_b12:
  //SEG200 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG201 [95] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  b1_from_b12:
  //SEG202 [95] phi (byte*) progress_cursor#34 = (byte*) progress_init::line#2 [phi:gen_sintab::@12->gen_sintab::@1#0] -- register_copy 
  //SEG203 [95] phi (byte) progress_idx#34 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sintab::@12->gen_sintab::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta progress_idx
  //SEG204 [95] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sintab::@12->gen_sintab::@1#2] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG205 [95] phi from gen_sintab::@23 to gen_sintab::@1 [phi:gen_sintab::@23->gen_sintab::@1]
  b1_from_b23:
  //SEG206 [95] phi (byte*) progress_cursor#34 = (byte*) progress_cursor#11 [phi:gen_sintab::@23->gen_sintab::@1#0] -- register_copy 
  //SEG207 [95] phi (byte) progress_idx#34 = (byte) progress_idx#12 [phi:gen_sintab::@23->gen_sintab::@1#1] -- register_copy 
  //SEG208 [95] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@23->gen_sintab::@1#2] -- register_copy 
    jmp b1
  //SEG209 gen_sintab::@1
  b1:
  //SEG210 [96] (word) setFAC::w#3 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ) -- vwuz1=_word_vbuz2 
    lda i
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG211 [97] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG212 [154] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  setFAC_from_b1:
  //SEG213 [154] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG214 [98] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  b14_from_b1:
    jmp b14
  //SEG215 gen_sintab::@14
  b14:
  //SEG216 [99] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG217 [142] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  mulFACbyMEM_from_b14:
  //SEG218 [142] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- pbuz1=pbuc1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG219 [100] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  b15_from_b14:
    jmp b15
  //SEG220 gen_sintab::@15
  b15:
  //SEG221 [101] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG222 [159] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  setMEMtoFAC_from_b15:
  //SEG223 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
    jmp b16
  //SEG224 gen_sintab::@16
  b16:
  //SEG225 [102] (word) setFAC::w#4 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ) -- vwuz1=_word_vbuz2 
    lda length
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG226 [103] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG227 [154] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  setFAC_from_b16:
  //SEG228 [154] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG229 [104] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  b17_from_b16:
    jmp b17
  //SEG230 gen_sintab::@17
  b17:
  //SEG231 [105] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG232 [149] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  divMEMbyFAC_from_b17:
  //SEG233 [149] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- pbuz1=pbuc1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG234 [106] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  b18_from_b17:
    jmp b18
  //SEG235 gen_sintab::@18
  b18:
  //SEG236 [107] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    jsr sinFAC
  //SEG237 [108] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  b19_from_b18:
    jmp b19
  //SEG238 gen_sintab::@19
  b19:
  //SEG239 [109] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG240 [142] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  mulFACbyMEM_from_b19:
  //SEG241 [142] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG242 [110] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  b20_from_b19:
    jmp b20
  //SEG243 gen_sintab::@20
  b20:
  //SEG244 [111] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG245 [132] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  addMEMtoFAC_from_b20:
    jsr addMEMtoFAC
  //SEG246 [112] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  b21_from_b20:
    jmp b21
  //SEG247 gen_sintab::@21
  b21:
  //SEG248 [113] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
    jsr getFAC
  //SEG249 [114] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ) -- vwuz1=vwuz2 
    lda getFAC.return
    sta getFAC.return_2
    lda getFAC.return+1
    sta getFAC.return_2+1
    jmp b22
  //SEG250 gen_sintab::@22
  b22:
  //SEG251 [115] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ) -- vwuz1=vwuz2 
    lda getFAC.return_2
    sta _23
    lda getFAC.return_2+1
    sta _23+1
  //SEG252 [116] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ) -- vbuz1=_byte_vwuz2 
    lda _23
    sta _24
  //SEG253 [117] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) -- pbuz1_derefidx_vbuz2=vbuz3 
    lda _24
    ldy i
    sta (sintab),y
  //SEG254 [118] call progress_inc param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
    jsr progress_inc
    jmp b23
  //SEG255 gen_sintab::@23
  b23:
  //SEG256 [119] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG257 [120] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) -- vbuz1_lt_vbuz2_then_la1 
    lda i
    cmp length
    bcc b1_from_b23
    jmp breturn
  //SEG258 gen_sintab::@return
  breturn:
  //SEG259 [121] return  [ ] ( main:2::init:5::gen_sintab:57 [ ] main:2::init:5::gen_sintab:61 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG260 progress_inc
progress_inc: {
  //SEG261 [122] (byte) progress_idx#10 ← ++ (byte) progress_idx#34 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) -- vbuz1=_inc_vbuz1 
    inc progress_idx
  //SEG262 [123] if((byte) progress_idx#10!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto progress_inc::@1 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda progress_idx
    cmp #8
    bne b1_from_progress_inc
    jmp b2
  //SEG263 progress_inc::@2
  b2:
  //SEG264 [124] *((byte*) progress_cursor#34) ← *((const byte[]) progress_inc::progress_chars#0+(byte/signed byte/word/signed word/dword/signed dword) 8) [ progress_cursor#34 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] ) -- _deref_pbuz1=_deref_pbuc1 
    lda progress_chars+8
    ldy #0
    sta (progress_cursor),y
  //SEG265 [125] (byte*) progress_cursor#10 ← ++ (byte*) progress_cursor#34 [ progress_cursor#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] ) -- pbuz1=_inc_pbuz1 
    inc progress_cursor
    bne !+
    inc progress_cursor+1
  !:
  //SEG266 [126] phi from progress_inc::@2 to progress_inc::@1 [phi:progress_inc::@2->progress_inc::@1]
  b1_from_b2:
  //SEG267 [126] phi (byte*) progress_cursor#11 = (byte*) progress_cursor#10 [phi:progress_inc::@2->progress_inc::@1#0] -- register_copy 
  //SEG268 [126] phi (byte) progress_idx#12 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:progress_inc::@2->progress_inc::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta progress_idx
    jmp b1
  //SEG269 [126] phi from progress_inc to progress_inc::@1 [phi:progress_inc->progress_inc::@1]
  b1_from_progress_inc:
  //SEG270 [126] phi (byte*) progress_cursor#11 = (byte*) progress_cursor#34 [phi:progress_inc->progress_inc::@1#0] -- register_copy 
  //SEG271 [126] phi (byte) progress_idx#12 = (byte) progress_idx#10 [phi:progress_inc->progress_inc::@1#1] -- register_copy 
    jmp b1
  //SEG272 progress_inc::@1
  b1:
  //SEG273 [127] *((byte*) progress_cursor#11) ← *((const byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#12) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy progress_idx
    lda progress_chars,y
    ldy #0
    sta (progress_cursor),y
    jmp breturn
  //SEG274 progress_inc::@return
  breturn:
  //SEG275 [128] return  [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
    rts
    progress_chars: .byte $20, $65, $74, $75, $61, $f6, $e7, $ea, $e0
}
//SEG276 getFAC
getFAC: {
    .label return = $3a
    .label return_2 = $35
  //SEG277 asm { jsr$b1aa sty$fe sta$ff  }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG278 [130] (word) getFAC::return#0 ← *((const byte*) memHi#0) w= *((const byte*) memLo#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ) -- vwuz1=_deref_pbuc1_word__deref_pbuc2 
    lda memLo
    sta return
    lda memHi
    sta return+1
    jmp breturn
  //SEG279 getFAC::@return
  breturn:
  //SEG280 [131] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
    rts
}
//SEG281 addMEMtoFAC
addMEMtoFAC: {
  //SEG282 [133] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG283 [136] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  prepareMEM_from_addMEMtoFAC:
  //SEG284 [136] phi (byte*) prepareMEM::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:addMEMtoFAC->prepareMEM#0] -- pbuz1=pbuc1 
    lda #<gen_sintab.f_min
    sta prepareMEM.mem
    lda #>gen_sintab.f_min
    sta prepareMEM.mem+1
    jsr prepareMEM
    jmp b1
  //SEG285 addMEMtoFAC::@1
  b1:
  //SEG286 asm { lda$fe ldy$ff jsr$b867  }
    lda $fe
    ldy $ff
    jsr $b867
    jmp breturn
  //SEG287 addMEMtoFAC::@return
  breturn:
  //SEG288 [135] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG289 prepareMEM
prepareMEM: {
    .label _0 = $3c
    .label _1 = $3d
    .label mem = $15
  //SEG290 [137] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] ) -- vbuz1=_lo_pbuz2 
    lda mem
    sta _0
  //SEG291 [138] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] ) -- _deref_pbuc1=vbuz1 
    lda _0
    sta memLo
  //SEG292 [139] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] ) -- vbuz1=_hi_pbuz2 
    lda mem+1
    sta _1
  //SEG293 [140] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) -- _deref_pbuc1=vbuz1 
    lda _1
    sta memHi
    jmp breturn
  //SEG294 prepareMEM::@return
  breturn:
  //SEG295 [141] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG296 mulFACbyMEM
mulFACbyMEM: {
    .label mem = $17
  //SEG297 [143] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] ) -- pbuz1=pbuz2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG298 [144] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG299 [136] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  prepareMEM_from_mulFACbyMEM:
  //SEG300 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG301 mulFACbyMEM::@1
  b1:
  //SEG302 asm { lda$fe ldy$ff jsr$ba28  }
    lda $fe
    ldy $ff
    jsr $ba28
    jmp breturn
  //SEG303 mulFACbyMEM::@return
  breturn:
  //SEG304 [146] return  [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG305 sinFAC
sinFAC: {
  //SEG306 asm { jsr$e26b  }
    jsr $e26b
    jmp breturn
  //SEG307 sinFAC::@return
  breturn:
  //SEG308 [148] return  [ ] ( main:2::init:5::gen_sintab:57::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG309 divMEMbyFAC
divMEMbyFAC: {
    .label mem = $19
  //SEG310 [150] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] ) -- pbuz1=pbuz2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG311 [151] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG312 [136] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  prepareMEM_from_divMEMbyFAC:
  //SEG313 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG314 divMEMbyFAC::@1
  b1:
  //SEG315 asm { lda$fe ldy$ff jsr$bb0f  }
    lda $fe
    ldy $ff
    jsr $bb0f
    jmp breturn
  //SEG316 divMEMbyFAC::@return
  breturn:
  //SEG317 [153] return  [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG318 setFAC
setFAC: {
    .label w = $1b
  //SEG319 [155] (byte*~) prepareMEM::mem#8 ← (byte*)(word) setFAC::w#5 [ prepareMEM::mem#8 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] ) -- pbuz1=pbuz2 
    lda w
    sta prepareMEM.mem
    lda w+1
    sta prepareMEM.mem+1
  //SEG320 [156] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG321 [136] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  prepareMEM_from_setFAC:
  //SEG322 [136] phi (byte*) prepareMEM::mem#5 = (byte*~) prepareMEM::mem#8 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG323 setFAC::@1
  b1:
  //SEG324 asm { ldy$fe lda$ff jsr$b391  }
    ldy $fe
    lda $ff
    jsr $b391
    jmp breturn
  //SEG325 setFAC::@return
  breturn:
  //SEG326 [158] return  [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG327 setMEMtoFAC
setMEMtoFAC: {
    .label mem = $1d
  //SEG328 [160] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] ) -- pbuz1=pbuz2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG329 [161] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG330 [136] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  prepareMEM_from_setMEMtoFAC:
  //SEG331 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG332 setMEMtoFAC::@1
  b1:
  //SEG333 asm { ldx$fe ldy$ff jsr$bbd4  }
    ldx $fe
    ldy $ff
    jsr $bbd4
    jmp breturn
  //SEG334 setMEMtoFAC::@return
  breturn:
  //SEG335 [163] return  [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG336 subFACfromARG
subFACfromARG: {
  //SEG337 asm { jsr$b853  }
    jsr $b853
    jmp breturn
  //SEG338 subFACfromARG::@return
  breturn:
  //SEG339 [165] return  [ ] ( main:2::init:5::gen_sintab:57::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    rts
}
//SEG340 setARGtoFAC
setARGtoFAC: {
  //SEG341 asm { jsr$bc0f  }
    jsr $bc0f
    jmp breturn
  //SEG342 setARGtoFAC::@return
  breturn:
  //SEG343 [167] return  [ ] ( main:2::init:5::gen_sintab:57::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    rts
}
//SEG344 progress_init
progress_init: {
    .label line = $13
    jmp breturn
  //SEG345 progress_init::@return
  breturn:
  //SEG346 [169] return  [ progress_init::line#2 ] ( main:2::init:5::progress_init:55 [ progress_init::line#2 ] main:2::init:5::progress_init:59 [ progress_init::line#2 ] )
    rts
}
//SEG347 gen_sprites
gen_sprites: {
    .label spr = $20
    .label i = $1f
  //SEG348 [171] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  b1_from_gen_sprites:
  //SEG349 [171] phi (byte*) gen_sprites::spr#2 = (const byte*) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- pbuz1=pbuc1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG350 [171] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sprites->gen_sprites::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG351 [171] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  b1_from_b3:
  //SEG352 [171] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG353 [171] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
    jmp b1
  //SEG354 gen_sprites::@1
  b1:
  //SEG355 [172] (byte) gen_chargen_sprite::ch#0 ← *((const string) gen_sprites::cml#0 + (byte) gen_sprites::i#2) [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cml,y
    sta gen_chargen_sprite.ch
  //SEG356 [173] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- pbuz1=pbuz2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG357 [174] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
    jmp b3
  //SEG358 gen_sprites::@3
  b3:
  //SEG359 [175] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word/dword/signed dword) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG360 [176] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG361 [177] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #7
    bne b1_from_b3
    jmp breturn
  //SEG362 gen_sprites::@return
  breturn:
  //SEG363 [178] return  [ ] ( main:2::init:5::gen_sprites:53 [ ] )
    rts
    cml: .text "camelot"
}
//SEG364 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $3f
    .label _1 = $41
    .label _3 = $45
    .label _6 = $46
    .label ch = $3e
    .label sprite = $29
    .label chargen = $43
    .label bits = $23
    .label s_gen = $26
    .label s_gen_cnt = $27
    .label b = $28
    .label x = $24
    .label y = $22
    .label c = $25
  //SEG365 [179] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- vwuz1=_word_vbuz2 
    lda ch
    sta _0
    lda #0
    sta _0+1
  //SEG366 [180] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- vwuz1=vwuz2_rol_3 
    lda _0
    asl
    sta _1
    lda _0+1
    rol
    sta _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG367 [181] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- pbuz1=pbuc1_plus_vwuz2 
    lda _1
    clc
    adc #<CHARGEN
    sta chargen
    lda _1+1
    adc #>CHARGEN
    sta chargen+1
  //SEG368 asm { sei  }
    sei
  //SEG369 [183] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_pbuc1=vbuc2 
    lda #$32
    sta PROCPORT
  //SEG370 [184] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  b1_from_gen_chargen_sprite:
  //SEG371 [184] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG372 [184] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta y
    jmp b1
  //SEG373 [184] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  b1_from_b9:
  //SEG374 [184] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG375 [184] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
    jmp b1
  //SEG376 gen_chargen_sprite::@1
  b1:
  //SEG377 [185] (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#0 + (byte) gen_chargen_sprite::y#2) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- vbuz1=pbuz2_derefidx_vbuz3 
    ldy y
    lda (chargen),y
    sta bits
  //SEG378 [186] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  b2_from_b1:
  //SEG379 [186] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta x
  //SEG380 [186] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG381 [186] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- vbuz1=vbuc1 
    lda #0
    sta s_gen_cnt
  //SEG382 [186] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- vbuz1=vbuc1 
    lda #0
    sta s_gen
  //SEG383 [186] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG384 [186] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  b2_from_b8:
  //SEG385 [186] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG386 [186] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG387 [186] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG388 [186] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG389 [186] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG390 gen_chargen_sprite::@2
  b2:
  //SEG391 [187] (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda #$80
    and bits
    sta _3
  //SEG392 [188] if((byte~) gen_chargen_sprite::$3==(byte/signed byte/word/signed word/dword/signed dword) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- vbuz1_eq_0_then_la1 
    lda _3
    beq b3_from_b2
  //SEG393 [189] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  b6_from_b2:
    jmp b6
  //SEG394 gen_chargen_sprite::@6
  b6:
  //SEG395 [190] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  b3_from_b6:
  //SEG396 [190] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word/dword/signed dword) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- vbuz1=vbuc1 
    lda #1
    sta c
    jmp b3
  //SEG397 [190] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG398 [190] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta c
    jmp b3
  //SEG399 gen_chargen_sprite::@3
  b3:
  //SEG400 [191] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  b4_from_b3:
  //SEG401 [191] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG402 [191] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- vbuz1=vbuc1 
    lda #0
    sta b
  //SEG403 [191] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG404 [191] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG405 [191] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  b4_from_b5:
  //SEG406 [191] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG407 [191] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG408 [191] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG409 [191] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG410 gen_chargen_sprite::@4
  b4:
  //SEG411 [192] (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ) -- vbuz1=vbuz2_rol_1 
    lda s_gen
    asl
    sta _6
  //SEG412 [193] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$6 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- vbuz1=vbuz2_bor_vbuz3 
    lda _6
    ora c
    sta s_gen
  //SEG413 [194] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- vbuz1=_inc_vbuz1 
    inc s_gen_cnt
  //SEG414 [195] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda s_gen_cnt
    cmp #8
    bne b5_from_b4
    jmp b7
  //SEG415 gen_chargen_sprite::@7
  b7:
  //SEG416 [196] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG417 [197] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG418 [198] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG419 [199] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG420 [200] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  b5_from_b7:
  //SEG421 [200] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG422 [200] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- vbuz1=vbuc1 
    lda #0
    sta s_gen_cnt
  //SEG423 [200] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- vbuz1=vbuc1 
    lda #0
    sta s_gen
    jmp b5
  //SEG424 [200] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  b5_from_b4:
  //SEG425 [200] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG426 [200] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG427 [200] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
    jmp b5
  //SEG428 gen_chargen_sprite::@5
  b5:
  //SEG429 [201] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- vbuz1=_inc_vbuz1 
    inc b
  //SEG430 [202] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda b
    cmp #3
    bne b4_from_b5
    jmp b8
  //SEG431 gen_chargen_sprite::@8
  b8:
  //SEG432 [203] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- vbuz1=vbuz1_rol_1 
    asl bits
  //SEG433 [204] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- vbuz1=_inc_vbuz1 
    inc x
  //SEG434 [205] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda x
    cmp #8
    bne b2_from_b8
    jmp b9
  //SEG435 gen_chargen_sprite::@9
  b9:
  //SEG436 [206] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG437 [207] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- vbuz1=_inc_vbuz1 
    inc y
  //SEG438 [208] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda y
    cmp #8
    bne b1_from_b9
    jmp b10
  //SEG439 gen_chargen_sprite::@10
  b10:
  //SEG440 [209] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_pbuc1=vbuc2 
    lda #$37
    sta PROCPORT
  //SEG441 asm { cli  }
    cli
    jmp breturn
  //SEG442 gen_chargen_sprite::@return
  breturn:
  //SEG443 [211] return  [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG444 place_sprites
place_sprites: {
    .label sprites_ptr = SCREEN+$3f8
    .label spr_id = $2b
    .label spr_x = $2d
    .label col = $2f
    .label j2 = $47
    .label j2_2 = $2e
    .label j = $2c
    .label j2_3 = $2e
  //SEG445 [212] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG446 [213] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_EXPAND_X
  //SEG447 [214] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_EXPAND_Y
  //SEG448 [215] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  b1_from_place_sprites:
  //SEG449 [215] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word/dword/signed dword) 5 [phi:place_sprites->place_sprites::@1#0] -- vbuz1=vbuc1 
    lda #5
    sta col
  //SEG450 [215] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:place_sprites->place_sprites::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta j2_3
  //SEG451 [215] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word/dword/signed dword) 60 [phi:place_sprites->place_sprites::@1#2] -- vbuz1=vbuc1 
    lda #$3c
    sta spr_x
  //SEG452 [215] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:place_sprites->place_sprites::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta j
  //SEG453 [215] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte*) sprites#0/(byte/signed byte/word/signed word/dword/signed dword) 64 [phi:place_sprites->place_sprites::@1#4] -- vbuz1=vbuc1 
    lda #$ff&sprites/$40
    sta spr_id
    jmp b1
  //SEG454 [215] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  b1_from_b1:
  //SEG455 [215] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG456 [215] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG457 [215] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG458 [215] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG459 [215] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
    jmp b1
  //SEG460 place_sprites::@1
  b1:
  //SEG461 [216] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- pbuc1_derefidx_vbuz1=vbuz2 
    lda spr_id
    ldy j
    sta sprites_ptr,y
  //SEG462 [217] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- vbuz1=_inc_vbuz1 
    inc spr_id
  //SEG463 [218] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuz1=vbuz2 
    lda spr_x
    ldy j2_3
    sta SPRITES_XPOS,y
  //SEG464 [219] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuz1=vbuc2 
    ldy j2_3
    lda #$50
    sta SPRITES_YPOS,y
  //SEG465 [220] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuz1=vbuz2 
    lda col
    ldy j
    sta SPRITES_COLS,y
  //SEG466 [221] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$20
    clc
    adc spr_x
    sta spr_x
  //SEG467 [222] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- vbuz1=vbuz1_bxor_vbuc1 
    lda col
    eor #7^5
    sta col
  //SEG468 [223] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- vbuz1=_inc_vbuz2 
    ldy j2_3
    iny
    sty j2
  //SEG469 [224] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuz1=_inc_vbuz2 
    ldy j2
    iny
    sty j2_2
  //SEG470 [225] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuz1=_inc_vbuz1 
    inc j
  //SEG471 [226] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda j
    cmp #7
    bne b1_from_b1
    jmp breturn
  //SEG472 place_sprites::@return
  breturn:
  //SEG473 [227] return  [ ] ( main:2::init:5::place_sprites:51 [ ] )
    rts
}
  sintab_x: .fill $dd, 0
  sintab_y: .fill $c5, 0

REGISTER UPLIFT POTENTIAL REGISTERS
Equivalence Class zp ZP_BYTE:51 [ anim::$3 ] has ALU potential.
Statement [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
Statement [14] (word) anim::x#0 ← ((word))(byte/signed byte/word/signed word/dword/signed dword) 30 + *((const byte[221]) sintab_x#0 + (byte) anim::xidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:7 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ]
Statement [15] (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ) always clobbers reg byte a 
Statement [18] (byte~) anim::$5 ← < (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ) always clobbers reg byte a 
Statement [20] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((const byte[197]) sintab_y#0 + (byte) anim::yidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) always clobbers reg byte a 
Statement [21] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) always clobbers reg byte a 
Statement [23] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ) always clobbers reg byte a 
Statement [25] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) always clobbers reg byte a 
Statement [27] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ) always clobbers reg byte a 
Statement [46] *((const byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:9 [ init::i#2 init::i#1 ]
Statement [47] *((const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 11 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) always clobbers reg byte a 
Statement [67] *((byte*) clear_screen::sc#2) ← (byte) ' ' [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [69] if((byte*) clear_screen::sc#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto clear_screen::@1 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) always clobbers reg byte a 
Statement [72] (word) setFAC::w#0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:13 [ gen_sintab::min#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:14 [ gen_sintab::length#10 ]
Statement asm { lda#0 ldx#0 ldy#0  } always clobbers reg byte a reg byte x reg byte y 
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:13 [ gen_sintab::min#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:13 [ gen_sintab::min#2 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:14 [ gen_sintab::length#10 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:14 [ gen_sintab::length#10 ]
Statement [77] (word) setFAC::w#1 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ) always clobbers reg byte a 
Statement [96] (word) setFAC::w#3 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ]
Statement [102] (word) setFAC::w#4 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ) always clobbers reg byte a 
Statement [114] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ) always clobbers reg byte a 
Statement [115] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ) always clobbers reg byte a 
Statement [116] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ) always clobbers reg byte a 
Statement [124] *((byte*) progress_cursor#34) ← *((const byte[]) progress_inc::progress_chars#0+(byte/signed byte/word/signed word/dword/signed dword) 8) [ progress_cursor#34 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ]
Statement [127] *((byte*) progress_cursor#11) ← *((const byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#12) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ]
Statement [130] (word) getFAC::return#0 ← *((const byte*) memHi#0) w= *((const byte*) memLo#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ) always clobbers reg byte a 
Statement asm { lda$fe ldy$ff jsr$b867  } always clobbers reg byte a reg byte y 
Statement [143] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] ) always clobbers reg byte a 
Statement asm { lda$fe ldy$ff jsr$ba28  } always clobbers reg byte a reg byte y 
Statement [150] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] ) always clobbers reg byte a 
Statement asm { lda$fe ldy$ff jsr$bb0f  } always clobbers reg byte a reg byte y 
Statement [155] (byte*~) prepareMEM::mem#8 ← (byte*)(word) setFAC::w#5 [ prepareMEM::mem#8 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] ) always clobbers reg byte a 
Statement asm { ldy$fe lda$ff jsr$b391  } always clobbers reg byte a reg byte y 
Statement [160] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] ) always clobbers reg byte a 
Statement asm { ldx$fe ldy$ff jsr$bbd4  } always clobbers reg byte x reg byte y 
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ]
Statement [173] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:62 [ gen_chargen_sprite::ch#0 ]
Statement [175] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word/dword/signed dword) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) always clobbers reg byte a 
Statement [179] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) always clobbers reg byte a 
Statement [180] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) always clobbers reg byte a 
Statement [181] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [183] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [185] (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#0 + (byte) gen_chargen_sprite::y#2) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Statement [187] (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:39 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Statement [192] (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:40 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
Statement [196] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:40 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Statement [197] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Statement [198] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) always clobbers reg byte a reg byte y 
Statement [206] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) always clobbers reg byte a 
Statement [209] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) always clobbers reg byte a 
Statement [212] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) always clobbers reg byte a 
Statement [213] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) always clobbers reg byte a 
Statement [214] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) always clobbers reg byte a 
Statement [219] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:44 [ place_sprites::j#2 place_sprites::j#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:46 [ place_sprites::j2#3 place_sprites::j2#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
Statement [220] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [221] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) always clobbers reg byte a 
Statement [222] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) always clobbers reg byte a 
Statement [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) always clobbers reg byte a 
Statement [14] (word) anim::x#0 ← ((word))(byte/signed byte/word/signed word/dword/signed dword) 30 + *((const byte[221]) sintab_x#0 + (byte) anim::xidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ) always clobbers reg byte a 
Statement [15] (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ) always clobbers reg byte a 
Statement [18] (byte~) anim::$5 ← < (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ) always clobbers reg byte a 
Statement [20] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((const byte[197]) sintab_y#0 + (byte) anim::yidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) always clobbers reg byte a 
Statement [21] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) always clobbers reg byte a 
Statement [23] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ) always clobbers reg byte a 
Statement [25] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) always clobbers reg byte a 
Statement [27] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ) always clobbers reg byte a 
Statement [46] *((const byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) always clobbers reg byte a 
Statement [47] *((const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 11 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) always clobbers reg byte a 
Statement [67] *((byte*) clear_screen::sc#2) ← (byte) ' ' [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [69] if((byte*) clear_screen::sc#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto clear_screen::@1 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) always clobbers reg byte a 
Statement [72] (word) setFAC::w#0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ) always clobbers reg byte a 
Statement asm { lda#0 ldx#0 ldy#0  } always clobbers reg byte a reg byte x reg byte y 
Statement [77] (word) setFAC::w#1 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ) always clobbers reg byte a 
Statement [96] (word) setFAC::w#3 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ) always clobbers reg byte a 
Statement [102] (word) setFAC::w#4 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ) always clobbers reg byte a 
Statement [114] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ) always clobbers reg byte a 
Statement [115] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ) always clobbers reg byte a 
Statement [116] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ) always clobbers reg byte a 
Statement [117] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) always clobbers reg byte y 
Statement [120] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) always clobbers reg byte a 
Statement [123] if((byte) progress_idx#10!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto progress_inc::@1 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) always clobbers reg byte a 
Statement [124] *((byte*) progress_cursor#34) ← *((const byte[]) progress_inc::progress_chars#0+(byte/signed byte/word/signed word/dword/signed dword) 8) [ progress_cursor#34 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] ) always clobbers reg byte a reg byte y 
Statement [127] *((byte*) progress_cursor#11) ← *((const byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#12) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ) always clobbers reg byte a reg byte y 
Statement [130] (word) getFAC::return#0 ← *((const byte*) memHi#0) w= *((const byte*) memLo#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ) always clobbers reg byte a 
Statement asm { lda$fe ldy$ff jsr$b867  } always clobbers reg byte a reg byte y 
Statement [143] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] ) always clobbers reg byte a 
Statement asm { lda$fe ldy$ff jsr$ba28  } always clobbers reg byte a reg byte y 
Statement [150] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] ) always clobbers reg byte a 
Statement asm { lda$fe ldy$ff jsr$bb0f  } always clobbers reg byte a reg byte y 
Statement [155] (byte*~) prepareMEM::mem#8 ← (byte*)(word) setFAC::w#5 [ prepareMEM::mem#8 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] ) always clobbers reg byte a 
Statement asm { ldy$fe lda$ff jsr$b391  } always clobbers reg byte a reg byte y 
Statement [160] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] ) always clobbers reg byte a 
Statement asm { ldx$fe ldy$ff jsr$bbd4  } always clobbers reg byte x reg byte y 
Statement [173] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) always clobbers reg byte a 
Statement [175] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word/dword/signed dword) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) always clobbers reg byte a 
Statement [179] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) always clobbers reg byte a 
Statement [180] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) always clobbers reg byte a 
Statement [181] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [183] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [185] (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#0 + (byte) gen_chargen_sprite::y#2) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) always clobbers reg byte a reg byte y 
Statement [187] (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ) always clobbers reg byte a 
Statement [192] (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ) always clobbers reg byte a 
Statement [196] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Statement [197] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Statement [198] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) always clobbers reg byte a reg byte y 
Statement [206] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) always clobbers reg byte a 
Statement [209] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) always clobbers reg byte a 
Statement [212] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) always clobbers reg byte a 
Statement [213] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) always clobbers reg byte a 
Statement [214] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) always clobbers reg byte a 
Statement [216] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) always clobbers reg byte a 
Statement [218] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [219] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [220] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [221] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) always clobbers reg byte a 
Statement [222] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) always clobbers reg byte a 
Potential registers zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] : zp ZP_BYTE:2 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] : zp ZP_BYTE:3 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] : zp ZP_BYTE:4 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ] : zp ZP_BYTE:5 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ] : zp ZP_BYTE:6 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:7 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] : zp ZP_BYTE:7 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ] : zp ZP_BYTE:8 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:9 [ init::i#2 init::i#1 ] : zp ZP_BYTE:9 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 ] : zp ZP_WORD:10 , 
Potential registers zp ZP_BYTE:12 [ gen_sintab::max#2 ] : zp ZP_BYTE:12 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:13 [ gen_sintab::min#2 ] : zp ZP_BYTE:13 , 
Potential registers zp ZP_BYTE:14 [ gen_sintab::length#10 ] : zp ZP_BYTE:14 , 
Potential registers zp ZP_WORD:15 [ gen_sintab::sintab#12 ] : zp ZP_WORD:15 , 
Potential registers zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ] : zp ZP_BYTE:17 , 
Potential registers zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ] : zp ZP_BYTE:18 , 
Potential registers zp ZP_WORD:19 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ] : zp ZP_WORD:19 , 
Potential registers zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ] : zp ZP_WORD:21 , 
Potential registers zp ZP_WORD:23 [ mulFACbyMEM::mem#2 ] : zp ZP_WORD:23 , 
Potential registers zp ZP_WORD:25 [ divMEMbyFAC::mem#2 ] : zp ZP_WORD:25 , 
Potential registers zp ZP_WORD:27 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] : zp ZP_WORD:27 , 
Potential registers zp ZP_WORD:29 [ setMEMtoFAC::mem#5 ] : zp ZP_WORD:29 , 
Potential registers zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ] : zp ZP_BYTE:31 , reg byte x , 
Potential registers zp ZP_WORD:32 [ gen_sprites::spr#2 gen_sprites::spr#1 ] : zp ZP_WORD:32 , 
Potential registers zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] : zp ZP_BYTE:34 , reg byte x , 
Potential registers zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] : zp ZP_BYTE:35 , reg byte x , 
Potential registers zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] : zp ZP_BYTE:36 , reg byte x , 
Potential registers zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ] : zp ZP_BYTE:37 , reg byte x , 
Potential registers zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] : zp ZP_BYTE:38 , reg byte x , 
Potential registers zp ZP_BYTE:39 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ] : zp ZP_BYTE:39 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:40 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ] : zp ZP_BYTE:40 , reg byte x , 
Potential registers zp ZP_WORD:41 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] : zp ZP_WORD:41 , 
Potential registers zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] : zp ZP_BYTE:43 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:44 [ place_sprites::j#2 place_sprites::j#1 ] : zp ZP_BYTE:44 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] : zp ZP_BYTE:45 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:46 [ place_sprites::j2#3 place_sprites::j2#2 ] : zp ZP_BYTE:46 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ] : zp ZP_BYTE:47 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:48 [ anim::x#0 ] : zp ZP_WORD:48 , 
Potential registers zp ZP_BYTE:50 [ anim::$2 ] : zp ZP_BYTE:50 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:51 [ anim::$3 ] : zp ZP_BYTE:51 , reg byte a , reg byte x , reg byte y , reg byte alu , 
Potential registers zp ZP_BYTE:52 [ anim::$5 ] : zp ZP_BYTE:52 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:53 [ getFAC::return#2 ] : zp ZP_WORD:53 , 
Potential registers zp ZP_WORD:55 [ gen_sintab::$23 ] : zp ZP_WORD:55 , 
Potential registers zp ZP_BYTE:57 [ gen_sintab::$24 ] : zp ZP_BYTE:57 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:58 [ getFAC::return#0 ] : zp ZP_WORD:58 , 
Potential registers zp ZP_BYTE:60 [ prepareMEM::$0 ] : zp ZP_BYTE:60 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:61 [ prepareMEM::$1 ] : zp ZP_BYTE:61 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:62 [ gen_chargen_sprite::ch#0 ] : zp ZP_BYTE:62 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:63 [ gen_chargen_sprite::$0 ] : zp ZP_WORD:63 , 
Potential registers zp ZP_WORD:65 [ gen_chargen_sprite::$1 ] : zp ZP_WORD:65 , 
Potential registers zp ZP_WORD:67 [ gen_chargen_sprite::chargen#0 ] : zp ZP_WORD:67 , 
Potential registers zp ZP_BYTE:69 [ gen_chargen_sprite::$3 ] : zp ZP_BYTE:69 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:70 [ gen_chargen_sprite::$6 ] : zp ZP_BYTE:70 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:71 [ place_sprites::j2#1 ] : zp ZP_BYTE:71 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [gen_chargen_sprite] 34,904.9: zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] 33,404.14: zp ZP_WORD:41 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] 25,903.4: zp ZP_BYTE:39 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ] 20,002: zp ZP_BYTE:70 [ gen_chargen_sprite::$6 ] 17,001.7: zp ZP_BYTE:40 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ] 2,002: zp ZP_BYTE:69 [ gen_chargen_sprite::$3 ] 1,612.72: zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] 1,051.92: zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] 769.31: zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ] 164.67: zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] 6.5: zp ZP_BYTE:62 [ gen_chargen_sprite::ch#0 ] 4: zp ZP_WORD:63 [ gen_chargen_sprite::$0 ] 4: zp ZP_WORD:65 [ gen_chargen_sprite::$1 ] 3.68: zp ZP_WORD:67 [ gen_chargen_sprite::chargen#0 ] 
Uplift Scope [anim] 509.17: zp ZP_BYTE:7 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] 482: zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] 202: zp ZP_BYTE:51 [ anim::$3 ] 202: zp ZP_BYTE:52 [ anim::$5 ] 163.38: zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ] 114.6: zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ] 101: zp ZP_BYTE:50 [ anim::$2 ] 92.58: zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ] 75.75: zp ZP_WORD:48 [ anim::x#0 ] 
Uplift Scope [place_sprites] 22: zp ZP_BYTE:71 [ place_sprites::j2#1 ] 20.9: zp ZP_BYTE:44 [ place_sprites::j#2 place_sprites::j#1 ] 18.7: zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] 12.83: zp ZP_BYTE:46 [ place_sprites::j2#3 place_sprites::j2#2 ] 9.17: zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] 9.11: zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ] 
Uplift Scope [setFAC] 78: zp ZP_WORD:27 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] 
Uplift Scope [gen_sintab] 22: zp ZP_WORD:55 [ gen_sintab::$23 ] 22: zp ZP_BYTE:57 [ gen_sintab::$24 ] 18.33: zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ] 2: zp ZP_BYTE:12 [ gen_sintab::max#2 ] 0.44: zp ZP_BYTE:14 [ gen_sintab::length#10 ] 0.33: zp ZP_BYTE:13 [ gen_sintab::min#2 ] 0.22: zp ZP_WORD:15 [ gen_sintab::sintab#12 ] 
Uplift Scope [gen_sprites] 23.1: zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ] 15.58: zp ZP_WORD:32 [ gen_sprites::spr#2 gen_sprites::spr#1 ] 
Uplift Scope [clear_screen] 33: zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 ] 
Uplift Scope [init] 31.17: zp ZP_BYTE:9 [ init::i#2 init::i#1 ] 
Uplift Scope [prepareMEM] 20: zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ] 4: zp ZP_BYTE:60 [ prepareMEM::$0 ] 4: zp ZP_BYTE:61 [ prepareMEM::$1 ] 
Uplift Scope [getFAC] 22: zp ZP_WORD:53 [ getFAC::return#2 ] 4.33: zp ZP_WORD:58 [ getFAC::return#0 ] 
Uplift Scope [] 7.63: zp ZP_WORD:19 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ] 6.07: zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ] 5.75: zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] 4.2: zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] 
Uplift Scope [setMEMtoFAC] 2: zp ZP_WORD:29 [ setMEMtoFAC::mem#5 ] 
Uplift Scope [divMEMbyFAC] 2: zp ZP_WORD:25 [ divMEMbyFAC::mem#2 ] 
Uplift Scope [mulFACbyMEM] 2: zp ZP_WORD:23 [ mulFACbyMEM::mem#2 ] 
Uplift Scope [setARGtoFAC] 
Uplift Scope [addMEMtoFAC] 
Uplift Scope [subFACfromARG] 
Uplift Scope [sinFAC] 
Uplift Scope [main] 
Uplift Scope [progress_init] 
Uplift Scope [progress_inc] 

Uplifting [gen_chargen_sprite] best 1065112 combination zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] zp ZP_WORD:41 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] reg byte y [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ] reg byte a [ gen_chargen_sprite::$6 ] reg byte x [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ] reg byte a [ gen_chargen_sprite::$3 ] zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ] zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] zp ZP_BYTE:62 [ gen_chargen_sprite::ch#0 ] zp ZP_WORD:63 [ gen_chargen_sprite::$0 ] zp ZP_WORD:65 [ gen_chargen_sprite::$1 ] zp ZP_WORD:67 [ gen_chargen_sprite::chargen#0 ] 
Limited combination testing to 100 combinations of 9216 possible.
Uplifting [anim] best 1062909 combination reg byte x [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] reg byte a [ anim::$3 ] reg byte a [ anim::$5 ] zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ] zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ] zp ZP_BYTE:50 [ anim::$2 ] zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ] zp ZP_WORD:48 [ anim::x#0 ] 
Limited combination testing to 100 combinations of 19440 possible.
Uplifting [place_sprites] best 1062549 combination reg byte x [ place_sprites::j2#1 ] reg byte y [ place_sprites::j#2 place_sprites::j#1 ] zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] reg byte x [ place_sprites::j2#3 place_sprites::j2#2 ] zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ] 
Limited combination testing to 100 combinations of 972 possible.
Uplifting [setFAC] best 1062549 combination zp ZP_WORD:27 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] 
Uplifting [gen_sintab] best 1062482 combination zp ZP_WORD:55 [ gen_sintab::$23 ] reg byte a [ gen_sintab::$24 ] zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ] reg byte x [ gen_sintab::max#2 ] zp ZP_BYTE:14 [ gen_sintab::length#10 ] zp ZP_BYTE:13 [ gen_sintab::min#2 ] zp ZP_WORD:15 [ gen_sintab::sintab#12 ] 
Uplifting [gen_sprites] best 1062482 combination zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ] zp ZP_WORD:32 [ gen_sprites::spr#2 gen_sprites::spr#1 ] 
Uplifting [clear_screen] best 1062482 combination zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 ] 
Uplifting [init] best 1062332 combination reg byte x [ init::i#2 init::i#1 ] 
Uplifting [prepareMEM] best 1062320 combination zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ] reg byte a [ prepareMEM::$0 ] reg byte a [ prepareMEM::$1 ] 
Uplifting [getFAC] best 1062320 combination zp ZP_WORD:53 [ getFAC::return#2 ] zp ZP_WORD:58 [ getFAC::return#0 ] 
Uplifting [] best 1062320 combination zp ZP_WORD:19 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ] zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ] zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] 
Uplifting [setMEMtoFAC] best 1062320 combination zp ZP_WORD:29 [ setMEMtoFAC::mem#5 ] 
Uplifting [divMEMbyFAC] best 1062320 combination zp ZP_WORD:25 [ divMEMbyFAC::mem#2 ] 
Uplifting [mulFACbyMEM] best 1062320 combination zp ZP_WORD:23 [ mulFACbyMEM::mem#2 ] 
Uplifting [setARGtoFAC] best 1062320 combination 
Uplifting [addMEMtoFAC] best 1062320 combination 
Uplifting [subFACfromARG] best 1062320 combination 
Uplifting [sinFAC] best 1062320 combination 
Uplifting [main] best 1062320 combination 
Uplifting [progress_init] best 1062320 combination 
Uplifting [progress_inc] best 1062320 combination 
Attempting to uplift remaining variables inzp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Uplifting [gen_chargen_sprite] best 1062320 combination zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Uplifting [gen_chargen_sprite] best 1062320 combination zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Uplifting [gen_chargen_sprite] best 1062320 combination zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ]
Uplifting [gen_chargen_sprite] best 1062320 combination zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
Uplifting [anim] best 1062320 combination zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Uplifting [gen_chargen_sprite] best 1062320 combination zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:8 [ anim::j#2 anim::j#1 ]
Uplifting [anim] best 1062320 combination zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ]
Uplifting [anim] best 1062320 combination zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:50 [ anim::$2 ]
Uplifting [anim] best 1062320 combination zp ZP_BYTE:50 [ anim::$2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ]
Uplifting [anim] best 1062320 combination zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ]
Uplifting [gen_sprites] best 1062320 combination zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
Uplifting [place_sprites] best 1062320 combination zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ]
Uplifting [gen_sintab] best 1062320 combination zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
Uplifting [place_sprites] best 1062320 combination zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ]
Uplifting [place_sprites] best 1062320 combination zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:62 [ gen_chargen_sprite::ch#0 ]
Uplifting [gen_chargen_sprite] best 1062289 combination reg byte y [ gen_chargen_sprite::ch#0 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ]
Uplifting [] best 1062289 combination zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
Uplifting [] best 1062289 combination zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
Uplifting [] best 1062289 combination zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:14 [ gen_sintab::length#10 ]
Uplifting [gen_sintab] best 1062289 combination zp ZP_BYTE:14 [ gen_sintab::length#10 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:13 [ gen_sintab::min#2 ]
Uplifting [gen_sintab] best 1062289 combination zp ZP_BYTE:13 [ gen_sintab::min#2 ] 
Coalescing zero page register with common assignment [ zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 ] ] with [ zp ZP_BYTE:50 [ anim::$2 ] ] - score: 2
Coalescing zero page register with common assignment [ zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 ] ] with [ zp ZP_WORD:23 [ mulFACbyMEM::mem#2 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 ] ] with [ zp ZP_WORD:25 [ divMEMbyFAC::mem#2 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 ] ] with [ zp ZP_WORD:27 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] ] with [ zp ZP_WORD:29 [ setMEMtoFAC::mem#5 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:53 [ getFAC::return#2 ] ] with [ zp ZP_WORD:55 [ gen_sintab::$23 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:53 [ getFAC::return#2 gen_sintab::$23 ] ] with [ zp ZP_WORD:58 [ getFAC::return#0 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:63 [ gen_chargen_sprite::$0 ] ] with [ zp ZP_WORD:65 [ gen_chargen_sprite::$1 ] ] - score: 1
Coalescing zero page register with common assignment [ zp ZP_WORD:63 [ gen_chargen_sprite::$0 gen_chargen_sprite::$1 ] ] with [ zp ZP_WORD:67 [ gen_chargen_sprite::chargen#0 ] ] - score: 1
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] ] with [ zp ZP_BYTE:13 [ gen_sintab::min#2 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 ] ] with [ zp ZP_BYTE:17 [ gen_sintab::i#10 gen_sintab::i#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 gen_sintab::i#10 gen_sintab::i#1 ] ] with [ zp ZP_BYTE:31 [ gen_sprites::i#2 gen_sprites::i#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 gen_sintab::i#10 gen_sintab::i#1 gen_sprites::i#2 gen_sprites::i#1 ] ] with [ zp ZP_BYTE:43 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] ] with [ zp ZP_BYTE:14 [ gen_sintab::length#10 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 gen_sintab::length#10 ] ] with [ zp ZP_BYTE:34 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 gen_sintab::length#10 gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] ] with [ zp ZP_BYTE:45 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] ] with [ zp ZP_BYTE:18 [ progress_idx#34 progress_idx#12 progress_idx#10 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 progress_idx#34 progress_idx#12 progress_idx#10 ] ] with [ zp ZP_BYTE:35 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 progress_idx#34 progress_idx#12 progress_idx#10 gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] ] with [ zp ZP_BYTE:47 [ place_sprites::col#2 place_sprites::col#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 anim::$2 ] ] with [ zp ZP_BYTE:36 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 ] ] with [ zp ZP_BYTE:37 [ gen_chargen_sprite::c#3 ] ]
Coalescing zero page register [ zp ZP_BYTE:8 [ anim::j#2 anim::j#1 ] ] with [ zp ZP_BYTE:38 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 ] ] with [ zp ZP_WORD:15 [ gen_sintab::sintab#12 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 gen_sintab::sintab#12 ] ] with [ zp ZP_WORD:32 [ gen_sprites::spr#2 gen_sprites::spr#1 ] ]
Coalescing zero page register [ zp ZP_WORD:10 [ clear_screen::sc#2 clear_screen::sc#1 gen_sintab::sintab#12 gen_sprites::spr#2 gen_sprites::spr#1 ] ] with [ zp ZP_WORD:48 [ anim::x#0 ] ]
Coalescing zero page register [ zp ZP_WORD:19 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 ] ] with [ zp ZP_WORD:41 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] ]
Coalescing zero page register [ zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 setMEMtoFAC::mem#5 ] ] with [ zp ZP_WORD:53 [ getFAC::return#2 gen_sintab::$23 getFAC::return#0 ] ]
Coalescing zero page register [ zp ZP_WORD:21 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 setMEMtoFAC::mem#5 getFAC::return#2 gen_sintab::$23 getFAC::return#0 ] ] with [ zp ZP_WORD:63 [ gen_chargen_sprite::$0 gen_chargen_sprite::$1 gen_chargen_sprite::chargen#0 ] ]
Allocated (was zp ZP_BYTE:8) zp ZP_BYTE:7 [ anim::j#2 anim::j#1 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Allocated (was zp ZP_WORD:10) zp ZP_WORD:8 [ clear_screen::sc#2 clear_screen::sc#1 gen_sintab::sintab#12 gen_sprites::spr#2 gen_sprites::spr#1 anim::x#0 ]
Allocated (was zp ZP_WORD:19) zp ZP_WORD:10 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
Allocated (was zp ZP_WORD:21) zp ZP_WORD:12 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 setMEMtoFAC::mem#5 getFAC::return#2 gen_sintab::$23 getFAC::return#0 gen_chargen_sprite::$0 gen_chargen_sprite::$1 gen_chargen_sprite::chargen#0 ]

ASSEMBLER BEFORE OPTIMIZATION
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label PROCPORT = 1
  .label CHARGEN = $d000
  .label SPRITES_XPOS = $d000
  .label SPRITES_YPOS = $d001
  .label SPRITES_XMSB = $d010
  .label RASTER = $d012
  .label SPRITES_ENABLE = $d015
  .label SPRITES_EXPAND_Y = $d017
  .label SPRITES_EXPAND_X = $d01d
  .label BORDERCOL = $d020
  .label SPRITES_COLS = $d027
  .label COLS = $d800
  .label memLo = $fe
  .label memHi = $ff
  .const sinlen_x = $dd
  .const sinlen_y = $c5
  .label sprites = $2000
  .label SCREEN = $400
  .label progress_idx = 4
  .label progress_cursor = $a
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @51 [phi:@begin->@51]
b51_from_bbegin:
  jmp b51
//SEG4 @51
b51:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @51 to main [phi:@51->main]
main_from_b51:
  jsr main
//SEG7 [3] phi from @51 to @end [phi:@51->@end]
bend_from_b51:
  jmp bend
//SEG8 @end
bend:
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [43] phi from main to init [phi:main->init]
  init_from_main:
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  b2_from_main:
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:main->main::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:main->main::@2#1] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 main::@2
  b2:
  //SEG17 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1_neq_vbuc2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG18 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
    jmp b3
  //SEG19 main::@3
  b3:
  //SEG20 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG21 [6] phi from main::@3 to main::@2 [phi:main::@3->main::@2]
  b2_from_b3:
  //SEG22 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@3->main::@2#0] -- register_copy 
  //SEG23 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@3->main::@2#1] -- register_copy 
    jmp b2
}
//SEG24 anim
anim: {
    .label _2 = 5
    .label xidx = 4
    .label x = 8
    .label x_msb = 5
    .label j2 = 6
    .label j = 7
  //SEG25 [10] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc BORDERCOL
  //SEG26 [11] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- vbuz1=vbuz2 
    lda sin_idx_x
    sta xidx
  //SEG27 [12] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- vbuxx=vbuz1 
    ldx sin_idx_y
  //SEG28 [13] phi from anim to anim::@1 [phi:anim->anim::@1]
  b1_from_anim:
  //SEG29 [13] phi (byte) anim::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim->anim::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta j
  //SEG30 [13] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG31 [13] phi (byte) anim::j2#2 = (byte/signed byte/word/signed word/dword/signed dword) 12 [phi:anim->anim::@1#2] -- vbuz1=vbuc1 
    lda #$c
    sta j2
  //SEG32 [13] phi (byte) anim::x_msb#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim->anim::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta x_msb
  //SEG33 [13] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#4] -- register_copy 
    jmp b1
  //SEG34 [13] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  b1_from_b3:
  //SEG35 [13] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG36 [13] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG37 [13] phi (byte) anim::j2#2 = (byte) anim::j2#1 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG38 [13] phi (byte) anim::x_msb#2 = (byte) anim::x_msb#1 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG39 [13] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#4] -- register_copy 
    jmp b1
  //SEG40 anim::@1
  b1:
  //SEG41 [14] (word) anim::x#0 ← ((word))(byte/signed byte/word/signed word/dword/signed dword) 30 + *((const byte[221]) sintab_x#0 + (byte) anim::xidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ) -- vwuz1=vbuc1_plus_pbuc2_derefidx_vbuz2 
    ldy xidx
    lda sintab_x,y
    clc
    adc #$1e
    sta x
    lda #0
    adc #0
    sta x+1
  //SEG42 [15] (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ) -- vbuz1=vbuz1_rol_1 
    asl _2
  //SEG43 [16] (byte~) anim::$3 ← > (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ) -- vbuaa=_hi_vwuz1 
    lda x+1
  //SEG44 [17] (byte) anim::x_msb#1 ← (byte~) anim::$2 | (byte~) anim::$3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ) -- vbuz1=vbuz1_bor_vbuaa 
    ora x_msb
    sta x_msb
  //SEG45 [18] (byte~) anim::$5 ← < (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ) -- vbuaa=_lo_vwuz1 
    lda x
  //SEG46 [19] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#2) ← (byte~) anim::$5 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) -- pbuc1_derefidx_vbuz1=vbuaa 
    ldy j2
    sta SPRITES_XPOS,y
  //SEG47 [20] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((const byte[197]) sintab_y#0 + (byte) anim::yidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuxx 
    lda sintab_y,x
    ldy j2
    sta SPRITES_YPOS,y
  //SEG48 [21] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$a
    clc
    adc xidx
    sta xidx
  //SEG49 [22] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda xidx
    cmp #sinlen_x
    bcc b2_from_b1
    jmp b6
  //SEG50 anim::@6
  b6:
  //SEG51 [23] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ) -- vbuz1=vbuz1_minus_vbuc1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG52 [24] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  b2_from_b1:
  b2_from_b6:
  //SEG53 [24] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
    jmp b2
  //SEG54 anim::@2
  b2:
  //SEG55 [25] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) -- vbuxx=vbuxx_plus_vbuc1 
    txa
    clc
    adc #8
    tax
  //SEG56 [26] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) -- vbuxx_lt_vbuc1_then_la1 
    cpx #sinlen_y
    bcc b3_from_b2
    jmp b7
  //SEG57 anim::@7
  b7:
  //SEG58 [27] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ) -- vbuxx=vbuxx_minus_vbuc1 
    txa
    sec
    sbc #sinlen_y
    tax
  //SEG59 [28] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  b3_from_b2:
  b3_from_b7:
  //SEG60 [28] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
    jmp b3
  //SEG61 anim::@3
  b3:
  //SEG62 [29] (byte) anim::j2#1 ← (byte) anim::j2#2 - (byte/signed byte/word/signed word/dword/signed dword) 2 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ) -- vbuz1=vbuz1_minus_2 
    dec j2
    dec j2
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ) -- vbuz1=_inc_vbuz1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda j
    cmp #7
    bne b1_from_b3
    jmp b8
  //SEG65 anim::@8
  b8:
  //SEG66 [32] *((const byte*) SPRITES_XMSB#0) ← (byte) anim::x_msb#1 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1=vbuz1 
    lda x_msb
    sta SPRITES_XMSB
  //SEG67 [33] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- vbuz1=_inc_vbuz1 
    inc sin_idx_x
  //SEG68 [34] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14_from_b8
  //SEG69 [35] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  b4_from_b8:
  //SEG70 [35] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim::@8->anim::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_x
    jmp b4
  //SEG71 anim::@4
  b4:
  //SEG72 [36] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- vbuz1=_inc_vbuz1 
    inc sin_idx_y
  //SEG73 [37] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15_from_b4
  //SEG74 [38] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  b5_from_b4:
  //SEG75 [38] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim::@4->anim::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_y
    jmp b5
  //SEG76 anim::@5
  b5:
  //SEG77 [39] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_pbuc1=_dec__deref_pbuc1 
    dec BORDERCOL
    jmp breturn
  //SEG78 anim::@return
  breturn:
  //SEG79 [40] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG80 [41] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  b15_from_b4:
    jmp b15
  //SEG81 anim::@15
  b15:
  //SEG82 [38] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  b5_from_b15:
  //SEG83 [38] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG84 [42] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  b14_from_b8:
    jmp b14
  //SEG85 anim::@14
  b14:
  //SEG86 [35] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  b4_from_b14:
  //SEG87 [35] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG88 init
init: {
  //SEG89 [44] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG90 [65] phi from init to clear_screen [phi:init->clear_screen]
  clear_screen_from_init:
    jsr clear_screen
  //SEG91 [45] phi from init to init::@1 [phi:init->init::@1]
  b1_from_init:
  //SEG92 [45] phi (byte) init::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init->init::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp b1
  //SEG93 [45] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  b1_from_b1:
  //SEG94 [45] phi (byte) init::i#2 = (byte) init::i#1 [phi:init::@1->init::@1#0] -- register_copy 
    jmp b1
  //SEG95 init::@1
  b1:
  //SEG96 [46] *((const byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #0
    sta COLS,x
  //SEG97 [47] *((const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 11 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #$b
    sta COLS+$28,x
  //SEG98 [48] (byte) init::i#1 ← ++ (byte) init::i#2 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG99 [49] if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto init::@1 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b1_from_b1
  //SEG100 [50] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  b2_from_b1:
    jmp b2
  //SEG101 init::@2
  b2:
  //SEG102 [51] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG103 [52] phi from init::@2 to init::@4 [phi:init::@2->init::@4]
  b4_from_b2:
    jmp b4
  //SEG104 init::@4
  b4:
  //SEG105 [53] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [170] phi from init::@4 to gen_sprites [phi:init::@4->gen_sprites]
  gen_sprites_from_b4:
    jsr gen_sprites
  //SEG107 [54] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  b5_from_b4:
    jmp b5
  //SEG108 init::@5
  b5:
  //SEG109 [55] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  //SEG110 [168] phi from init::@5 to progress_init [phi:init::@5->progress_init]
  progress_init_from_b5:
  //SEG111 [168] phi (byte*) progress_init::line#2 = (const byte*) SCREEN#0 [phi:init::@5->progress_init#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta progress_init.line
    lda #>SCREEN
    sta progress_init.line+1
    jsr progress_init
  //SEG112 [56] phi from init::@5 to init::@6 [phi:init::@5->init::@6]
  b6_from_b5:
    jmp b6
  //SEG113 init::@6
  b6:
  //SEG114 [57] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG115 [71] phi from init::@6 to gen_sintab [phi:init::@6->gen_sintab]
  gen_sintab_from_b6:
  //SEG116 [71] phi (byte*) gen_sintab::sintab#12 = (const byte[221]) sintab_x#0 [phi:init::@6->gen_sintab#0] -- pbuz1=pbuc1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG117 [71] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@6->gen_sintab#1] -- vbuz1=vbuc1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG118 [71] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init::@6->gen_sintab#2] -- vbuz1=vbuc1 
    lda #0
    sta gen_sintab.min
  //SEG119 [71] phi (byte) gen_sintab::max#2 = (byte/word/signed word/dword/signed dword) 255 [phi:init::@6->gen_sintab#3] -- vbuxx=vbuc1 
    ldx #$ff
    jsr gen_sintab
  //SEG120 [58] phi from init::@6 to init::@7 [phi:init::@6->init::@7]
  b7_from_b6:
    jmp b7
  //SEG121 init::@7
  b7:
  //SEG122 [59] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  //SEG123 [168] phi from init::@7 to progress_init [phi:init::@7->progress_init]
  progress_init_from_b7:
  //SEG124 [168] phi (byte*) progress_init::line#2 = (const byte*) SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 40 [phi:init::@7->progress_init#0] -- pbuz1=pbuc1 
    lda #<SCREEN+$28
    sta progress_init.line
    lda #>SCREEN+$28
    sta progress_init.line+1
    jsr progress_init
  //SEG125 [60] phi from init::@7 to init::@8 [phi:init::@7->init::@8]
  b8_from_b7:
    jmp b8
  //SEG126 init::@8
  b8:
  //SEG127 [61] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG128 [71] phi from init::@8 to gen_sintab [phi:init::@8->gen_sintab]
  gen_sintab_from_b8:
  //SEG129 [71] phi (byte*) gen_sintab::sintab#12 = (const byte[197]) sintab_y#0 [phi:init::@8->gen_sintab#0] -- pbuz1=pbuc1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG130 [71] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@8->gen_sintab#1] -- vbuz1=vbuc1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG131 [71] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word/dword/signed dword) 50 [phi:init::@8->gen_sintab#2] -- vbuz1=vbuc1 
    lda #$32
    sta gen_sintab.min
  //SEG132 [71] phi (byte) gen_sintab::max#2 = (byte/word/signed word/dword/signed dword) 208 [phi:init::@8->gen_sintab#3] -- vbuxx=vbuc1 
    ldx #$d0
    jsr gen_sintab
  //SEG133 [62] phi from init::@8 to init::@9 [phi:init::@8->init::@9]
  b9_from_b8:
    jmp b9
  //SEG134 init::@9
  b9:
  //SEG135 [63] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG136 [65] phi from init::@9 to clear_screen [phi:init::@9->clear_screen]
  clear_screen_from_b9:
    jsr clear_screen
    jmp breturn
  //SEG137 init::@return
  breturn:
  //SEG138 [64] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG139 clear_screen
clear_screen: {
    .label sc = 8
  //SEG140 [66] phi from clear_screen to clear_screen::@1 [phi:clear_screen->clear_screen::@1]
  b1_from_clear_screen:
  //SEG141 [66] phi (byte*) clear_screen::sc#2 = (const byte*) SCREEN#0 [phi:clear_screen->clear_screen::@1#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG142 [66] phi from clear_screen::@1 to clear_screen::@1 [phi:clear_screen::@1->clear_screen::@1]
  b1_from_b1:
  //SEG143 [66] phi (byte*) clear_screen::sc#2 = (byte*) clear_screen::sc#1 [phi:clear_screen::@1->clear_screen::@1#0] -- register_copy 
    jmp b1
  //SEG144 clear_screen::@1
  b1:
  //SEG145 [67] *((byte*) clear_screen::sc#2) ← (byte) ' ' [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG146 [68] (byte*) clear_screen::sc#1 ← ++ (byte*) clear_screen::sc#2 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG147 [69] if((byte*) clear_screen::sc#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto clear_screen::@1 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) -- pbuz1_lt_pbuc1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1_from_b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG148 clear_screen::@return
  breturn:
  //SEG149 [70] return  [ ] ( main:2::init:5::clear_screen:44 [ ] main:2::init:5::clear_screen:63 [ ] )
    rts
}
//SEG150 gen_sintab
gen_sintab: {
    .label f_2pi = $e2e5
    .label _23 = $c
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 8
  //SEG151 [72] (word) setFAC::w#0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ) -- vwuz1=_word_vbuxx 
    txa
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG153 [154] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  setFAC_from_gen_sintab:
  //SEG154 [154] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG155 [74] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  b3_from_gen_sintab:
    jmp b3
  //SEG156 gen_sintab::@3
  b3:
  //SEG157 [75] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    jsr setARGtoFAC
    jmp b4
  //SEG158 gen_sintab::@4
  b4:
  //SEG159 asm { lda#0 ldx#0 ldy#0  }
    lda #0
    ldx #0
    ldy #0
  //SEG160 [77] (word) setFAC::w#1 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ) -- vwuz1=_word_vbuz2 
    lda min
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG161 [78] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG162 [154] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  setFAC_from_b4:
  //SEG163 [154] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG164 [79] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  b5_from_b4:
    jmp b5
  //SEG165 gen_sintab::@5
  b5:
  //SEG166 [80] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG167 [159] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  setMEMtoFAC_from_b5:
  //SEG168 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG169 [81] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  b6_from_b5:
    jmp b6
  //SEG170 gen_sintab::@6
  b6:
  //SEG171 [82] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    jsr subFACfromARG
  //SEG172 [83] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  b7_from_b6:
    jmp b7
  //SEG173 gen_sintab::@7
  b7:
  //SEG174 [84] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG175 [159] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  setMEMtoFAC_from_b7:
  //SEG176 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG177 [85] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  b8_from_b7:
    jmp b8
  //SEG178 gen_sintab::@8
  b8:
  //SEG179 [86] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG180 [154] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  setFAC_from_b8:
  //SEG181 [154] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word/dword/signed dword) 2 [phi:gen_sintab::@8->setFAC#0] -- vwuz1=vbuc1 
    lda #<2
    sta setFAC.w
    lda #>2
    sta setFAC.w+1
    jsr setFAC
  //SEG182 [87] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  b9_from_b8:
    jmp b9
  //SEG183 gen_sintab::@9
  b9:
  //SEG184 [88] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG185 [149] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  divMEMbyFAC_from_b9:
  //SEG186 [149] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG187 [89] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  b10_from_b9:
    jmp b10
  //SEG188 gen_sintab::@10
  b10:
  //SEG189 [90] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG190 [159] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  setMEMtoFAC_from_b10:
  //SEG191 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG192 [91] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  b11_from_b10:
    jmp b11
  //SEG193 gen_sintab::@11
  b11:
  //SEG194 [92] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG195 [132] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  addMEMtoFAC_from_b11:
    jsr addMEMtoFAC
  //SEG196 [93] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  b12_from_b11:
    jmp b12
  //SEG197 gen_sintab::@12
  b12:
  //SEG198 [94] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG199 [159] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  setMEMtoFAC_from_b12:
  //SEG200 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG201 [95] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  b1_from_b12:
  //SEG202 [95] phi (byte*) progress_cursor#34 = (byte*) progress_init::line#2 [phi:gen_sintab::@12->gen_sintab::@1#0] -- register_copy 
  //SEG203 [95] phi (byte) progress_idx#34 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sintab::@12->gen_sintab::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta progress_idx
  //SEG204 [95] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sintab::@12->gen_sintab::@1#2] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG205 [95] phi from gen_sintab::@23 to gen_sintab::@1 [phi:gen_sintab::@23->gen_sintab::@1]
  b1_from_b23:
  //SEG206 [95] phi (byte*) progress_cursor#34 = (byte*) progress_cursor#11 [phi:gen_sintab::@23->gen_sintab::@1#0] -- register_copy 
  //SEG207 [95] phi (byte) progress_idx#34 = (byte) progress_idx#12 [phi:gen_sintab::@23->gen_sintab::@1#1] -- register_copy 
  //SEG208 [95] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@23->gen_sintab::@1#2] -- register_copy 
    jmp b1
  //SEG209 gen_sintab::@1
  b1:
  //SEG210 [96] (word) setFAC::w#3 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ) -- vwuz1=_word_vbuz2 
    lda i
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG211 [97] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG212 [154] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  setFAC_from_b1:
  //SEG213 [154] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG214 [98] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  b14_from_b1:
    jmp b14
  //SEG215 gen_sintab::@14
  b14:
  //SEG216 [99] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG217 [142] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  mulFACbyMEM_from_b14:
  //SEG218 [142] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- pbuz1=pbuc1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG219 [100] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  b15_from_b14:
    jmp b15
  //SEG220 gen_sintab::@15
  b15:
  //SEG221 [101] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG222 [159] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  setMEMtoFAC_from_b15:
  //SEG223 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
    jmp b16
  //SEG224 gen_sintab::@16
  b16:
  //SEG225 [102] (word) setFAC::w#4 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ) -- vwuz1=_word_vbuz2 
    lda length
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG226 [103] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG227 [154] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  setFAC_from_b16:
  //SEG228 [154] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG229 [104] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  b17_from_b16:
    jmp b17
  //SEG230 gen_sintab::@17
  b17:
  //SEG231 [105] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG232 [149] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  divMEMbyFAC_from_b17:
  //SEG233 [149] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- pbuz1=pbuc1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG234 [106] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  b18_from_b17:
    jmp b18
  //SEG235 gen_sintab::@18
  b18:
  //SEG236 [107] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    jsr sinFAC
  //SEG237 [108] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  b19_from_b18:
    jmp b19
  //SEG238 gen_sintab::@19
  b19:
  //SEG239 [109] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG240 [142] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  mulFACbyMEM_from_b19:
  //SEG241 [142] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG242 [110] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  b20_from_b19:
    jmp b20
  //SEG243 gen_sintab::@20
  b20:
  //SEG244 [111] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG245 [132] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  addMEMtoFAC_from_b20:
    jsr addMEMtoFAC
  //SEG246 [112] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  b21_from_b20:
    jmp b21
  //SEG247 gen_sintab::@21
  b21:
  //SEG248 [113] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
    jsr getFAC
  //SEG249 [114] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:12
    jmp b22
  //SEG250 gen_sintab::@22
  b22:
  //SEG251 [115] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:12
  //SEG252 [116] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ) -- vbuaa=_byte_vwuz1 
    lda _23
  //SEG253 [117] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy i
    sta (sintab),y
  //SEG254 [118] call progress_inc param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
    jsr progress_inc
    jmp b23
  //SEG255 gen_sintab::@23
  b23:
  //SEG256 [119] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG257 [120] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) -- vbuz1_lt_vbuz2_then_la1 
    lda i
    cmp length
    bcc b1_from_b23
    jmp breturn
  //SEG258 gen_sintab::@return
  breturn:
  //SEG259 [121] return  [ ] ( main:2::init:5::gen_sintab:57 [ ] main:2::init:5::gen_sintab:61 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG260 progress_inc
progress_inc: {
  //SEG261 [122] (byte) progress_idx#10 ← ++ (byte) progress_idx#34 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) -- vbuz1=_inc_vbuz1 
    inc progress_idx
  //SEG262 [123] if((byte) progress_idx#10!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto progress_inc::@1 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda progress_idx
    cmp #8
    bne b1_from_progress_inc
    jmp b2
  //SEG263 progress_inc::@2
  b2:
  //SEG264 [124] *((byte*) progress_cursor#34) ← *((const byte[]) progress_inc::progress_chars#0+(byte/signed byte/word/signed word/dword/signed dword) 8) [ progress_cursor#34 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] ) -- _deref_pbuz1=_deref_pbuc1 
    lda progress_chars+8
    ldy #0
    sta (progress_cursor),y
  //SEG265 [125] (byte*) progress_cursor#10 ← ++ (byte*) progress_cursor#34 [ progress_cursor#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] ) -- pbuz1=_inc_pbuz1 
    inc progress_cursor
    bne !+
    inc progress_cursor+1
  !:
  //SEG266 [126] phi from progress_inc::@2 to progress_inc::@1 [phi:progress_inc::@2->progress_inc::@1]
  b1_from_b2:
  //SEG267 [126] phi (byte*) progress_cursor#11 = (byte*) progress_cursor#10 [phi:progress_inc::@2->progress_inc::@1#0] -- register_copy 
  //SEG268 [126] phi (byte) progress_idx#12 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:progress_inc::@2->progress_inc::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta progress_idx
    jmp b1
  //SEG269 [126] phi from progress_inc to progress_inc::@1 [phi:progress_inc->progress_inc::@1]
  b1_from_progress_inc:
  //SEG270 [126] phi (byte*) progress_cursor#11 = (byte*) progress_cursor#34 [phi:progress_inc->progress_inc::@1#0] -- register_copy 
  //SEG271 [126] phi (byte) progress_idx#12 = (byte) progress_idx#10 [phi:progress_inc->progress_inc::@1#1] -- register_copy 
    jmp b1
  //SEG272 progress_inc::@1
  b1:
  //SEG273 [127] *((byte*) progress_cursor#11) ← *((const byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#12) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy progress_idx
    lda progress_chars,y
    ldy #0
    sta (progress_cursor),y
    jmp breturn
  //SEG274 progress_inc::@return
  breturn:
  //SEG275 [128] return  [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
    rts
    progress_chars: .byte $20, $65, $74, $75, $61, $f6, $e7, $ea, $e0
}
//SEG276 getFAC
getFAC: {
    .label return = $c
  //SEG277 asm { jsr$b1aa sty$fe sta$ff  }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG278 [130] (word) getFAC::return#0 ← *((const byte*) memHi#0) w= *((const byte*) memLo#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ) -- vwuz1=_deref_pbuc1_word__deref_pbuc2 
    lda memLo
    sta return
    lda memHi
    sta return+1
    jmp breturn
  //SEG279 getFAC::@return
  breturn:
  //SEG280 [131] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
    rts
}
//SEG281 addMEMtoFAC
addMEMtoFAC: {
  //SEG282 [133] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG283 [136] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  prepareMEM_from_addMEMtoFAC:
  //SEG284 [136] phi (byte*) prepareMEM::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:addMEMtoFAC->prepareMEM#0] -- pbuz1=pbuc1 
    lda #<gen_sintab.f_min
    sta prepareMEM.mem
    lda #>gen_sintab.f_min
    sta prepareMEM.mem+1
    jsr prepareMEM
    jmp b1
  //SEG285 addMEMtoFAC::@1
  b1:
  //SEG286 asm { lda$fe ldy$ff jsr$b867  }
    lda $fe
    ldy $ff
    jsr $b867
    jmp breturn
  //SEG287 addMEMtoFAC::@return
  breturn:
  //SEG288 [135] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG289 prepareMEM
prepareMEM: {
    .label mem = $c
  //SEG290 [137] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] ) -- vbuaa=_lo_pbuz1 
    lda mem
  //SEG291 [138] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] ) -- _deref_pbuc1=vbuaa 
    sta memLo
  //SEG292 [139] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] ) -- vbuaa=_hi_pbuz1 
    lda mem+1
  //SEG293 [140] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) -- _deref_pbuc1=vbuaa 
    sta memHi
    jmp breturn
  //SEG294 prepareMEM::@return
  breturn:
  //SEG295 [141] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG296 mulFACbyMEM
mulFACbyMEM: {
    .label mem = $c
  //SEG297 [143] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_WORD:12
  //SEG298 [144] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG299 [136] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  prepareMEM_from_mulFACbyMEM:
  //SEG300 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG301 mulFACbyMEM::@1
  b1:
  //SEG302 asm { lda$fe ldy$ff jsr$ba28  }
    lda $fe
    ldy $ff
    jsr $ba28
    jmp breturn
  //SEG303 mulFACbyMEM::@return
  breturn:
  //SEG304 [146] return  [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG305 sinFAC
sinFAC: {
  //SEG306 asm { jsr$e26b  }
    jsr $e26b
    jmp breturn
  //SEG307 sinFAC::@return
  breturn:
  //SEG308 [148] return  [ ] ( main:2::init:5::gen_sintab:57::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG309 divMEMbyFAC
divMEMbyFAC: {
    .label mem = $c
  //SEG310 [150] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_WORD:12
  //SEG311 [151] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG312 [136] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  prepareMEM_from_divMEMbyFAC:
  //SEG313 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG314 divMEMbyFAC::@1
  b1:
  //SEG315 asm { lda$fe ldy$ff jsr$bb0f  }
    lda $fe
    ldy $ff
    jsr $bb0f
    jmp breturn
  //SEG316 divMEMbyFAC::@return
  breturn:
  //SEG317 [153] return  [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG318 setFAC
setFAC: {
    .label w = $c
  //SEG319 [155] (byte*~) prepareMEM::mem#8 ← (byte*)(word) setFAC::w#5 [ prepareMEM::mem#8 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] )
    // (byte*~) prepareMEM::mem#8 = (byte*)(word) setFAC::w#5  // register copy zp ZP_WORD:12
  //SEG320 [156] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG321 [136] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  prepareMEM_from_setFAC:
  //SEG322 [136] phi (byte*) prepareMEM::mem#5 = (byte*~) prepareMEM::mem#8 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG323 setFAC::@1
  b1:
  //SEG324 asm { ldy$fe lda$ff jsr$b391  }
    ldy $fe
    lda $ff
    jsr $b391
    jmp breturn
  //SEG325 setFAC::@return
  breturn:
  //SEG326 [158] return  [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG327 setMEMtoFAC
setMEMtoFAC: {
    .label mem = $c
  //SEG328 [160] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_WORD:12
  //SEG329 [161] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG330 [136] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  prepareMEM_from_setMEMtoFAC:
  //SEG331 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG332 setMEMtoFAC::@1
  b1:
  //SEG333 asm { ldx$fe ldy$ff jsr$bbd4  }
    ldx $fe
    ldy $ff
    jsr $bbd4
    jmp breturn
  //SEG334 setMEMtoFAC::@return
  breturn:
  //SEG335 [163] return  [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG336 subFACfromARG
subFACfromARG: {
  //SEG337 asm { jsr$b853  }
    jsr $b853
    jmp breturn
  //SEG338 subFACfromARG::@return
  breturn:
  //SEG339 [165] return  [ ] ( main:2::init:5::gen_sintab:57::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    rts
}
//SEG340 setARGtoFAC
setARGtoFAC: {
  //SEG341 asm { jsr$bc0f  }
    jsr $bc0f
    jmp breturn
  //SEG342 setARGtoFAC::@return
  breturn:
  //SEG343 [167] return  [ ] ( main:2::init:5::gen_sintab:57::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    rts
}
//SEG344 progress_init
progress_init: {
    .label line = $a
    jmp breturn
  //SEG345 progress_init::@return
  breturn:
  //SEG346 [169] return  [ progress_init::line#2 ] ( main:2::init:5::progress_init:55 [ progress_init::line#2 ] main:2::init:5::progress_init:59 [ progress_init::line#2 ] )
    rts
}
//SEG347 gen_sprites
gen_sprites: {
    .label spr = 8
    .label i = 2
  //SEG348 [171] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  b1_from_gen_sprites:
  //SEG349 [171] phi (byte*) gen_sprites::spr#2 = (const byte*) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- pbuz1=pbuc1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG350 [171] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sprites->gen_sprites::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta i
    jmp b1
  //SEG351 [171] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  b1_from_b3:
  //SEG352 [171] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG353 [171] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
    jmp b1
  //SEG354 gen_sprites::@1
  b1:
  //SEG355 [172] (byte) gen_chargen_sprite::ch#0 ← *((const string) gen_sprites::cml#0 + (byte) gen_sprites::i#2) [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- vbuyy=pbuc1_derefidx_vbuz1 
    ldx i
    ldy cml,x
  //SEG356 [173] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- pbuz1=pbuz2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG357 [174] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
    jmp b3
  //SEG358 gen_sprites::@3
  b3:
  //SEG359 [175] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word/dword/signed dword) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG360 [176] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG361 [177] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #7
    bne b1_from_b3
    jmp breturn
  //SEG362 gen_sprites::@return
  breturn:
  //SEG363 [178] return  [ ] ( main:2::init:5::gen_sprites:53 [ ] )
    rts
    cml: .text "camelot"
}
//SEG364 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $c
    .label _1 = $c
    .label sprite = $a
    .label chargen = $c
    .label bits = 4
    .label s_gen = 7
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG365 [179] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- vwuz1=_word_vbuyy 
    tya
    sta _0
    lda #0
    sta _0+1
  //SEG366 [180] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- vwuz1=vwuz1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG367 [181] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda chargen
    adc #<CHARGEN
    sta chargen
    lda chargen+1
    adc #>CHARGEN
    sta chargen+1
  //SEG368 asm { sei  }
    sei
  //SEG369 [183] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_pbuc1=vbuc2 
    lda #$32
    sta PROCPORT
  //SEG370 [184] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  b1_from_gen_chargen_sprite:
  //SEG371 [184] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG372 [184] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta y
    jmp b1
  //SEG373 [184] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  b1_from_b9:
  //SEG374 [184] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG375 [184] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
    jmp b1
  //SEG376 gen_chargen_sprite::@1
  b1:
  //SEG377 [185] (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#0 + (byte) gen_chargen_sprite::y#2) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- vbuz1=pbuz2_derefidx_vbuz3 
    ldy y
    lda (chargen),y
    sta bits
  //SEG378 [186] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  b2_from_b1:
  //SEG379 [186] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta x
  //SEG380 [186] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG381 [186] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- vbuyy=vbuc1 
    ldy #0
  //SEG382 [186] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- vbuz1=vbuc1 
    lda #0
    sta s_gen
  //SEG383 [186] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG384 [186] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  b2_from_b8:
  //SEG385 [186] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG386 [186] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG387 [186] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG388 [186] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG389 [186] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG390 gen_chargen_sprite::@2
  b2:
  //SEG391 [187] (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$80
    and bits
  //SEG392 [188] if((byte~) gen_chargen_sprite::$3==(byte/signed byte/word/signed word/dword/signed dword) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG393 [189] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  b6_from_b2:
    jmp b6
  //SEG394 gen_chargen_sprite::@6
  b6:
  //SEG395 [190] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  b3_from_b6:
  //SEG396 [190] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word/dword/signed dword) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- vbuz1=vbuc1 
    lda #1
    sta c
    jmp b3
  //SEG397 [190] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG398 [190] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta c
    jmp b3
  //SEG399 gen_chargen_sprite::@3
  b3:
  //SEG400 [191] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  b4_from_b3:
  //SEG401 [191] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG402 [191] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG403 [191] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG404 [191] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG405 [191] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  b4_from_b5:
  //SEG406 [191] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG407 [191] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG408 [191] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG409 [191] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG410 gen_chargen_sprite::@4
  b4:
  //SEG411 [192] (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ) -- vbuaa=vbuz1_rol_1 
    lda s_gen
    asl
  //SEG412 [193] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$6 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- vbuz1=vbuaa_bor_vbuz2 
    ora c
    sta s_gen
  //SEG413 [194] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- vbuyy=_inc_vbuyy 
    iny
  //SEG414 [195] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- vbuyy_neq_vbuc1_then_la1 
    cpy #8
    bne b5_from_b4
    jmp b7
  //SEG415 gen_chargen_sprite::@7
  b7:
  //SEG416 [196] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG417 [197] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG418 [198] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG419 [199] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG420 [200] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  b5_from_b7:
  //SEG421 [200] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG422 [200] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- vbuyy=vbuc1 
    ldy #0
  //SEG423 [200] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- vbuz1=vbuc1 
    lda #0
    sta s_gen
    jmp b5
  //SEG424 [200] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  b5_from_b4:
  //SEG425 [200] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG426 [200] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG427 [200] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
    jmp b5
  //SEG428 gen_chargen_sprite::@5
  b5:
  //SEG429 [201] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG430 [202] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #3
    bne b4_from_b5
    jmp b8
  //SEG431 gen_chargen_sprite::@8
  b8:
  //SEG432 [203] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- vbuz1=vbuz1_rol_1 
    asl bits
  //SEG433 [204] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- vbuz1=_inc_vbuz1 
    inc x
  //SEG434 [205] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda x
    cmp #8
    bne b2_from_b8
    jmp b9
  //SEG435 gen_chargen_sprite::@9
  b9:
  //SEG436 [206] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG437 [207] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- vbuz1=_inc_vbuz1 
    inc y
  //SEG438 [208] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda y
    cmp #8
    bne b1_from_b9
    jmp b10
  //SEG439 gen_chargen_sprite::@10
  b10:
  //SEG440 [209] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_pbuc1=vbuc2 
    lda #$37
    sta PROCPORT
  //SEG441 asm { cli  }
    cli
    jmp breturn
  //SEG442 gen_chargen_sprite::@return
  breturn:
  //SEG443 [211] return  [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG444 place_sprites
place_sprites: {
    .label sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG445 [212] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG446 [213] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_EXPAND_X
  //SEG447 [214] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_EXPAND_Y
  //SEG448 [215] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  b1_from_place_sprites:
  //SEG449 [215] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word/dword/signed dword) 5 [phi:place_sprites->place_sprites::@1#0] -- vbuz1=vbuc1 
    lda #5
    sta col
  //SEG450 [215] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:place_sprites->place_sprites::@1#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG451 [215] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word/dword/signed dword) 60 [phi:place_sprites->place_sprites::@1#2] -- vbuz1=vbuc1 
    lda #$3c
    sta spr_x
  //SEG452 [215] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:place_sprites->place_sprites::@1#3] -- vbuyy=vbuc1 
    ldy #0
  //SEG453 [215] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte*) sprites#0/(byte/signed byte/word/signed word/dword/signed dword) 64 [phi:place_sprites->place_sprites::@1#4] -- vbuz1=vbuc1 
    lda #$ff&sprites/$40
    sta spr_id
    jmp b1
  //SEG454 [215] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  b1_from_b1:
  //SEG455 [215] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG456 [215] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG457 [215] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG458 [215] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG459 [215] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
    jmp b1
  //SEG460 place_sprites::@1
  b1:
  //SEG461 [216] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- pbuc1_derefidx_vbuyy=vbuz1 
    lda spr_id
    sta sprites_ptr,y
  //SEG462 [217] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- vbuz1=_inc_vbuz1 
    inc spr_id
  //SEG463 [218] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuxx=vbuz1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG464 [219] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG465 [220] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuyy=vbuz1 
    lda col
    sta SPRITES_COLS,y
  //SEG466 [221] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$20
    clc
    adc spr_x
    sta spr_x
  //SEG467 [222] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- vbuz1=vbuz1_bxor_vbuc1 
    lda col
    eor #7^5
    sta col
  //SEG468 [223] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG469 [224] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG470 [225] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuyy=_inc_vbuyy 
    iny
  //SEG471 [226] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuyy_neq_vbuc1_then_la1 
    cpy #7
    bne b1_from_b1
    jmp breturn
  //SEG472 place_sprites::@return
  breturn:
  //SEG473 [227] return  [ ] ( main:2::init:5::place_sprites:51 [ ] )
    rts
}
  sintab_x: .fill $dd, 0
  sintab_y: .fill $c5, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp b51
Removing instruction jmp bend
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b1
Removing instruction jmp b6
Removing instruction jmp b2
Removing instruction jmp b7
Removing instruction jmp b3
Removing instruction jmp b8
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp b15
Removing instruction jmp b14
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b10
Removing instruction jmp b11
Removing instruction jmp b12
Removing instruction jmp b1
Removing instruction jmp b14
Removing instruction jmp b15
Removing instruction jmp b16
Removing instruction jmp b17
Removing instruction jmp b18
Removing instruction jmp b19
Removing instruction jmp b20
Removing instruction jmp b21
Removing instruction jmp b22
Removing instruction jmp b23
Removing instruction jmp breturn
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b3
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b6
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b7
Removing instruction jmp b5
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b10
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda x+1
Removing instruction ldy j2
Removing instruction lda xidx
Replacing instruction ldx #0 with TAX
Replacing instruction ldy #0 with TAY
Replacing instruction lda #0 with TXA
Removing instruction lda #0
Replacing instruction ldy #0 with TAY
Removing instruction lda #0
Removing instruction lda s_gen
Removing instruction lda s_gen
Replacing instruction lda #0 with TYA
Removing instruction lda #$7f
Removing instruction lda #$7f
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label b2_from_b2 with b2
Replacing label b2_from_b1 with b2
Replacing label b3_from_b2 with b3
Replacing label b1_from_b3 with b1
Replacing label b14_from_b8 with b14
Replacing label b15_from_b4 with b15
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b23 with b1
Replacing label b1_from_progress_inc with b1
Replacing label b1_from_b3 with b1
Replacing label b5_from_b4 with b5
Replacing label b4_from_b5 with b4
Replacing label b2_from_b8 with b2
Replacing label b1_from_b9 with b1
Replacing label b1_from_b1 with b1
Removing instruction bbegin:
Removing instruction b51_from_bbegin:
Removing instruction main_from_b51:
Removing instruction bend_from_b51:
Removing instruction b2_from_b2:
Removing instruction b3_from_b2:
Removing instruction b1_from_b3:
Removing instruction b2_from_b1:
Removing instruction b2_from_b6:
Removing instruction b3_from_b2:
Removing instruction b3_from_b7:
Removing instruction b15_from_b4:
Removing instruction b5_from_b15:
Removing instruction b14_from_b8:
Removing instruction b4_from_b14:
Removing instruction b1_from_b1:
Removing instruction b2_from_b1:
Removing instruction b4_from_b2:
Removing instruction gen_sprites_from_b4:
Removing instruction b5_from_b4:
Removing instruction progress_init_from_b5:
Removing instruction b6_from_b5:
Removing instruction gen_sintab_from_b6:
Removing instruction b7_from_b6:
Removing instruction progress_init_from_b7:
Removing instruction b8_from_b7:
Removing instruction gen_sintab_from_b8:
Removing instruction b9_from_b8:
Removing instruction clear_screen_from_b9:
Removing instruction b1_from_b1:
Removing instruction b3_from_gen_sintab:
Removing instruction b5_from_b4:
Removing instruction setMEMtoFAC_from_b5:
Removing instruction b6_from_b5:
Removing instruction b7_from_b6:
Removing instruction setMEMtoFAC_from_b7:
Removing instruction b8_from_b7:
Removing instruction setFAC_from_b8:
Removing instruction b9_from_b8:
Removing instruction divMEMbyFAC_from_b9:
Removing instruction b10_from_b9:
Removing instruction setMEMtoFAC_from_b10:
Removing instruction b11_from_b10:
Removing instruction addMEMtoFAC_from_b11:
Removing instruction b12_from_b11:
Removing instruction setMEMtoFAC_from_b12:
Removing instruction b1_from_b23:
Removing instruction b14_from_b1:
Removing instruction mulFACbyMEM_from_b14:
Removing instruction b15_from_b14:
Removing instruction setMEMtoFAC_from_b15:
Removing instruction b17_from_b16:
Removing instruction divMEMbyFAC_from_b17:
Removing instruction b18_from_b17:
Removing instruction b19_from_b18:
Removing instruction mulFACbyMEM_from_b19:
Removing instruction b20_from_b19:
Removing instruction addMEMtoFAC_from_b20:
Removing instruction b21_from_b20:
Removing instruction b1_from_progress_inc:
Removing instruction b1_from_b3:
Removing instruction b1_from_b9:
Removing instruction b2_from_b8:
Removing instruction b6_from_b2:
Removing instruction b3_from_b6:
Removing instruction b4_from_b3:
Removing instruction b4_from_b5:
Removing instruction b5_from_b4:
Removing instruction b1_from_b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction b51:
Removing instruction bend:
Removing instruction init_from_main:
Removing instruction b2_from_main:
Removing instruction b3:
Removing instruction b2_from_b3:
Removing instruction b1_from_anim:
Removing instruction b6:
Removing instruction b7:
Removing instruction b8:
Removing instruction b4_from_b8:
Removing instruction b5_from_b4:
Removing instruction breturn:
Removing instruction clear_screen_from_init:
Removing instruction b1_from_init:
Removing instruction b2:
Removing instruction b4:
Removing instruction b5:
Removing instruction b6:
Removing instruction b7:
Removing instruction b8:
Removing instruction b9:
Removing instruction breturn:
Removing instruction b1_from_clear_screen:
Removing instruction breturn:
Removing instruction setFAC_from_gen_sintab:
Removing instruction b3:
Removing instruction b4:
Removing instruction setFAC_from_b4:
Removing instruction b5:
Removing instruction b6:
Removing instruction b7:
Removing instruction b8:
Removing instruction b9:
Removing instruction b10:
Removing instruction b11:
Removing instruction b12:
Removing instruction b1_from_b12:
Removing instruction setFAC_from_b1:
Removing instruction b14:
Removing instruction b15:
Removing instruction b16:
Removing instruction setFAC_from_b16:
Removing instruction b17:
Removing instruction b18:
Removing instruction b19:
Removing instruction b20:
Removing instruction b21:
Removing instruction b22:
Removing instruction b23:
Removing instruction breturn:
Removing instruction b2:
Removing instruction b1_from_b2:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction prepareMEM_from_addMEMtoFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction prepareMEM_from_mulFACbyMEM:
Removing instruction b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction prepareMEM_from_divMEMbyFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction prepareMEM_from_setFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction prepareMEM_from_setMEMtoFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction b1_from_gen_sprites:
Removing instruction b3:
Removing instruction breturn:
Removing instruction b1_from_gen_chargen_sprite:
Removing instruction b2_from_b1:
Removing instruction b6:
Removing instruction b7:
Removing instruction b5_from_b7:
Removing instruction b8:
Removing instruction b9:
Removing instruction b10:
Removing instruction breturn:
Removing instruction b1_from_place_sprites:
Removing instruction breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Skipping double jump to b4 in bcc b14
Skipping double jump to b5 in bcc b15
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label b3_from_b2 to b6
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b1
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda xidx
Removing instruction lda s_gen
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction b15:
Removing instruction b14:
Succesful ASM optimization Pass5UnusedLabelElimination
Removing unreachable instruction jmp b5
Removing unreachable instruction jmp b4
Succesful ASM optimization Pass5UnreachableCodeElimination

FINAL SYMBOL TABLE
(label) @51
(label) @begin
(label) @end
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word/dword/signed dword) 53280
(byte*) CHARGEN
(const byte*) CHARGEN#0 CHARGEN = ((byte*))(word/dword/signed dword) 53248
(byte*) COLS
(const byte*) COLS#0 COLS = ((byte*))(word/dword/signed dword) 55296
(byte*) PROCPORT
(const byte*) PROCPORT#0 PROCPORT = ((byte*))(byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) RASTER
(const byte*) RASTER#0 RASTER = ((byte*))(word/dword/signed dword) 53266
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word/dword/signed dword) 1024
(byte*) SPRITES_COLS
(const byte*) SPRITES_COLS#0 SPRITES_COLS = ((byte*))(word/dword/signed dword) 53287
(byte*) SPRITES_ENABLE
(const byte*) SPRITES_ENABLE#0 SPRITES_ENABLE = ((byte*))(word/dword/signed dword) 53269
(byte*) SPRITES_EXPAND_X
(const byte*) SPRITES_EXPAND_X#0 SPRITES_EXPAND_X = ((byte*))(word/dword/signed dword) 53277
(byte*) SPRITES_EXPAND_Y
(const byte*) SPRITES_EXPAND_Y#0 SPRITES_EXPAND_Y = ((byte*))(word/dword/signed dword) 53271
(byte*) SPRITES_XMSB
(const byte*) SPRITES_XMSB#0 SPRITES_XMSB = ((byte*))(word/dword/signed dword) 53264
(byte*) SPRITES_XPOS
(const byte*) SPRITES_XPOS#0 SPRITES_XPOS = ((byte*))(word/dword/signed dword) 53248
(byte*) SPRITES_YPOS
(const byte*) SPRITES_YPOS#0 SPRITES_YPOS = ((byte*))(word/dword/signed dword) 53249
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(label) addMEMtoFAC::@1
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(void()) anim()
(byte~) anim::$2 $2 zp ZP_BYTE:5 101.0
(byte~) anim::$3 reg byte a 202.0
(byte~) anim::$5 reg byte a 202.0
(label) anim::@1
(label) anim::@14
(label) anim::@15
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@return
(byte) anim::j
(byte) anim::j#1 j zp ZP_BYTE:7 151.5
(byte) anim::j#2 j zp ZP_BYTE:7 11.882352941176471
(byte) anim::j2
(byte) anim::j2#1 j2 zp ZP_BYTE:6 67.33333333333333
(byte) anim::j2#2 j2 zp ZP_BYTE:6 25.25
(word) anim::x
(word) anim::x#0 x zp ZP_WORD:8 75.75
(byte) anim::x_msb
(byte) anim::x_msb#1 x_msb zp ZP_BYTE:5 13.6
(byte) anim::x_msb#2 x_msb zp ZP_BYTE:5 101.0
(byte) anim::xidx
(byte) anim::xidx#0 xidx zp ZP_BYTE:4 2.0
(byte) anim::xidx#1 xidx zp ZP_BYTE:4 202.0
(byte) anim::xidx#2 xidx zp ZP_BYTE:4 202.0
(byte) anim::xidx#3 xidx zp ZP_BYTE:4 38.125
(byte) anim::xidx#5 xidx zp ZP_BYTE:4 37.875
(byte) anim::yidx
(byte) anim::yidx#0 reg byte x 4.0
(byte) anim::yidx#1 reg byte x 202.0
(byte) anim::yidx#2 reg byte x 202.0
(byte) anim::yidx#3 reg byte x 25.416666666666664
(byte) anim::yidx#6 reg byte x 75.75
(void()) clear_screen()
(label) clear_screen::@1
(label) clear_screen::@return
(byte*) clear_screen::sc
(byte*) clear_screen::sc#1 sc zp ZP_WORD:8 16.5
(byte*) clear_screen::sc#2 sc zp ZP_WORD:8 16.5
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(label) divMEMbyFAC::@1
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#2 mem zp ZP_WORD:12 2.0
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0 $0 zp ZP_WORD:12 4.0
(word~) gen_chargen_sprite::$1 $1 zp ZP_WORD:12 4.0
(byte~) gen_chargen_sprite::$3 reg byte a 2002.0
(byte~) gen_chargen_sprite::$6 reg byte a 20002.0
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@10
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@6
(label) gen_chargen_sprite::@7
(label) gen_chargen_sprite::@8
(label) gen_chargen_sprite::@9
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#1 reg byte x 15001.5
(byte) gen_chargen_sprite::b#2 reg byte x 2000.2
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0 bits zp ZP_BYTE:4 202.0
(byte) gen_chargen_sprite::bits#1 bits zp ZP_BYTE:4 667.3333333333334
(byte) gen_chargen_sprite::bits#2 bits zp ZP_BYTE:4 182.58823529411765
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#3 c zp ZP_BYTE:6 769.3076923076923
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0 reg byte y 6.5
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0 chargen zp ZP_WORD:12 3.678571428571429
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#1 s_gen zp ZP_BYTE:7 10001.0
(byte) gen_chargen_sprite::s_gen#3 s_gen zp ZP_BYTE:7 21003.0
(byte) gen_chargen_sprite::s_gen#5 s_gen zp ZP_BYTE:7 400.4
(byte) gen_chargen_sprite::s_gen#6 s_gen zp ZP_BYTE:7 3500.5
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#1 reg byte y 15001.5
(byte) gen_chargen_sprite::s_gen_cnt#3 reg byte y 7001.0
(byte) gen_chargen_sprite::s_gen_cnt#4 reg byte y 400.4
(byte) gen_chargen_sprite::s_gen_cnt#5 reg byte y 3500.5
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0 sprite zp ZP_WORD:10 2.1666666666666665
(byte*) gen_chargen_sprite::sprite#1 sprite zp ZP_WORD:10 20002.0
(byte*) gen_chargen_sprite::sprite#10 sprite zp ZP_WORD:10 420.59999999999997
(byte*) gen_chargen_sprite::sprite#11 sprite zp ZP_WORD:10 102.0
(byte*) gen_chargen_sprite::sprite#2 sprite zp ZP_WORD:10 67.33333333333333
(byte*) gen_chargen_sprite::sprite#3 sprite zp ZP_WORD:10 7625.875
(byte*) gen_chargen_sprite::sprite#4 sprite zp ZP_WORD:10 5184.166666666666
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#1 x zp ZP_BYTE:5 1501.5
(byte) gen_chargen_sprite::x#6 x zp ZP_BYTE:5 111.22222222222223
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#1 y zp ZP_BYTE:3 151.5
(byte) gen_chargen_sprite::y#2 y zp ZP_BYTE:3 13.173913043478262
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$23 $23 zp ZP_WORD:12 22.0
(byte~) gen_sintab::$24 reg byte a 22.0
(label) gen_sintab::@1
(label) gen_sintab::@10
(label) gen_sintab::@11
(label) gen_sintab::@12
(label) gen_sintab::@14
(label) gen_sintab::@15
(label) gen_sintab::@16
(label) gen_sintab::@17
(label) gen_sintab::@18
(label) gen_sintab::@19
(label) gen_sintab::@20
(label) gen_sintab::@21
(label) gen_sintab::@22
(label) gen_sintab::@23
(label) gen_sintab::@3
(label) gen_sintab::@4
(label) gen_sintab::@5
(label) gen_sintab::@6
(label) gen_sintab::@7
(label) gen_sintab::@8
(label) gen_sintab::@9
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(const byte*) gen_sintab::f_2pi#0 f_2pi = ((byte*))(word/dword/signed dword) 58085
(byte[]) gen_sintab::f_amp
(const byte[]) gen_sintab::f_amp#0 f_amp = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) gen_sintab::f_i
(const byte[]) gen_sintab::f_i#0 f_i = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) gen_sintab::f_min
(const byte[]) gen_sintab::f_min#0 f_min = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte) gen_sintab::i
(byte) gen_sintab::i#1 i zp ZP_BYTE:2 16.5
(byte) gen_sintab::i#10 i zp ZP_BYTE:2 1.8333333333333333
(byte) gen_sintab::length
(byte) gen_sintab::length#10 length zp ZP_BYTE:3 0.44
(byte) gen_sintab::max
(byte) gen_sintab::max#2 reg byte x 2.0
(byte) gen_sintab::min
(byte) gen_sintab::min#2 min zp ZP_BYTE:2 0.3333333333333333
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#12 sintab zp ZP_WORD:8 0.22
(void()) gen_sprites()
(label) gen_sprites::@1
(label) gen_sprites::@3
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(const string) gen_sprites::cml#0 cml = (string) "camelot"
(byte) gen_sprites::i
(byte) gen_sprites::i#1 i zp ZP_BYTE:2 16.5
(byte) gen_sprites::i#2 i zp ZP_BYTE:2 6.6000000000000005
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#1 spr zp ZP_WORD:8 7.333333333333333
(byte*) gen_sprites::spr#2 spr zp ZP_WORD:8 8.25
(word()) getFAC()
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::return#0 return zp ZP_WORD:12 4.333333333333333
(word) getFAC::return#2 return zp ZP_WORD:12 22.0
(word) getFAC::w
(void()) init()
(label) init::@1
(label) init::@2
(label) init::@4
(label) init::@5
(label) init::@6
(label) init::@7
(label) init::@8
(label) init::@9
(label) init::@return
(byte) init::i
(byte) init::i#1 reg byte x 16.5
(byte) init::i#2 reg byte x 14.666666666666666
(void()) main()
(label) main::@2
(label) main::@3
(byte*) memHi
(const byte*) memHi#0 memHi = ((byte*))(byte/word/signed word/dword/signed dword) 255
(byte*) memLo
(const byte*) memLo#0 memLo = ((byte*))(byte/word/signed word/dword/signed dword) 254
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(label) mulFACbyMEM::@1
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#2 mem zp ZP_WORD:12 2.0
(void()) place_sprites()
(label) place_sprites::@1
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::col#1 col zp ZP_BYTE:4 4.4
(byte) place_sprites::col#2 col zp ZP_BYTE:4 4.714285714285714
(byte) place_sprites::j
(byte) place_sprites::j#1 reg byte y 16.5
(byte) place_sprites::j#2 reg byte y 4.4
(byte) place_sprites::j2
(byte) place_sprites::j2#1 reg byte x 22.0
(byte) place_sprites::j2#2 reg byte x 7.333333333333333
(byte) place_sprites::j2#3 reg byte x 5.5
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#1 spr_id zp ZP_BYTE:2 2.2
(byte) place_sprites::spr_id#2 spr_id zp ZP_BYTE:2 16.5
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#1 spr_x zp ZP_BYTE:3 3.6666666666666665
(byte) place_sprites::spr_x#2 spr_x zp ZP_BYTE:3 5.5
(byte*) place_sprites::sprites_ptr
(const byte*) place_sprites::sprites_ptr#0 sprites_ptr = (const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1016
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0 reg byte a 4.0
(byte~) prepareMEM::$1 reg byte a 4.0
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#1 mem zp ZP_WORD:12 4.0
(byte*) prepareMEM::mem#3 mem zp ZP_WORD:12 4.0
(byte*) prepareMEM::mem#4 mem zp ZP_WORD:12 4.0
(byte*) prepareMEM::mem#5 mem zp ZP_WORD:12 3.9999999999999996
(byte*~) prepareMEM::mem#8 mem zp ZP_WORD:12 4.0
(byte*) progress_cursor
(byte*) progress_cursor#10 progress_cursor zp ZP_WORD:10 4.0
(byte*) progress_cursor#11 progress_cursor zp ZP_WORD:10 2.8333333333333335
(byte*) progress_cursor#34 progress_cursor zp ZP_WORD:10 0.7307692307692306
(byte) progress_idx
(byte) progress_idx#10 progress_idx zp ZP_BYTE:4 3.0
(byte) progress_idx#12 progress_idx zp ZP_BYTE:4 2.5
(byte) progress_idx#34 progress_idx zp ZP_BYTE:4 0.5652173913043479
(void()) progress_inc()
(label) progress_inc::@1
(label) progress_inc::@2
(label) progress_inc::@return
(byte[]) progress_inc::progress_chars
(const byte[]) progress_inc::progress_chars#0 progress_chars = { (byte/signed byte/word/signed word/dword/signed dword) 32, (byte/signed byte/word/signed word/dword/signed dword) 101, (byte/signed byte/word/signed word/dword/signed dword) 116, (byte/signed byte/word/signed word/dword/signed dword) 117, (byte/signed byte/word/signed word/dword/signed dword) 97, (byte/word/signed word/dword/signed dword) 246, (byte/word/signed word/dword/signed dword) 231, (byte/word/signed word/dword/signed dword) 234, (byte/word/signed word/dword/signed dword) 224 }
(void()) progress_init((byte*) progress_init::line)
(label) progress_init::@return
(byte*) progress_init::line
(byte*) progress_init::line#2 line zp ZP_WORD:10 0.06666666666666667
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setFAC((word) setFAC::w)
(label) setFAC::@1
(label) setFAC::@return
(word) setFAC::w
(word) setFAC::w#0 w zp ZP_WORD:12 4.0
(word) setFAC::w#1 w zp ZP_WORD:12 4.0
(word) setFAC::w#3 w zp ZP_WORD:12 22.0
(word) setFAC::w#4 w zp ZP_WORD:12 22.0
(word) setFAC::w#5 w zp ZP_WORD:12 26.0
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(label) setMEMtoFAC::@1
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#5 mem zp ZP_WORD:12 2.0
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_x#11 sin_idx_x zp ZP_BYTE:2 1.625
(byte) sin_idx_x#13 sin_idx_x zp ZP_BYTE:2 0.5769230769230769
(byte) sin_idx_x#3 sin_idx_x zp ZP_BYTE:2 2.0
(byte) sin_idx_y
(byte) sin_idx_y#11 sin_idx_y zp ZP_BYTE:3 3.25
(byte) sin_idx_y#13 sin_idx_y zp ZP_BYTE:3 0.49999999999999994
(byte) sin_idx_y#3 sin_idx_y zp ZP_BYTE:3 2.0
(byte) sinlen_x
(const byte) sinlen_x#0 sinlen_x = (byte/word/signed word/dword/signed dword) 221
(byte) sinlen_y
(const byte) sinlen_y#0 sinlen_y = (byte/word/signed word/dword/signed dword) 197
(byte[221]) sintab_x
(const byte[221]) sintab_x#0 sintab_x = { fill( 221, 0) }
(byte[197]) sintab_y
(const byte[197]) sintab_y#0 sintab_y = { fill( 197, 0) }
(byte*) sprites
(const byte*) sprites#0 sprites = ((byte*))(word/signed word/dword/signed dword) 8192
(void()) subFACfromARG()
(label) subFACfromARG::@return

zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 gen_sintab::i#10 gen_sintab::i#1 gen_sprites::i#2 gen_sprites::i#1 place_sprites::spr_id#2 place_sprites::spr_id#1 ]
zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 gen_sintab::length#10 gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 place_sprites::spr_x#2 place_sprites::spr_x#1 ]
zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 progress_idx#34 progress_idx#12 progress_idx#10 gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 place_sprites::col#2 place_sprites::col#1 ]
zp ZP_BYTE:5 [ anim::x_msb#2 anim::x_msb#1 anim::$2 gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
zp ZP_BYTE:6 [ anim::j2#2 anim::j2#1 gen_chargen_sprite::c#3 ]
reg byte x [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
zp ZP_BYTE:7 [ anim::j#2 anim::j#1 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
reg byte x [ init::i#2 init::i#1 ]
zp ZP_WORD:8 [ clear_screen::sc#2 clear_screen::sc#1 gen_sintab::sintab#12 gen_sprites::spr#2 gen_sprites::spr#1 anim::x#0 ]
reg byte x [ gen_sintab::max#2 ]
zp ZP_WORD:10 [ progress_cursor#34 progress_init::line#2 progress_cursor#11 progress_cursor#10 gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
zp ZP_WORD:12 [ prepareMEM::mem#5 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#8 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 setMEMtoFAC::mem#5 getFAC::return#2 gen_sintab::$23 getFAC::return#0 gen_chargen_sprite::$0 gen_chargen_sprite::$1 gen_chargen_sprite::chargen#0 ]
reg byte y [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
reg byte x [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
reg byte y [ place_sprites::j#2 place_sprites::j#1 ]
reg byte x [ place_sprites::j2#3 place_sprites::j2#2 ]
reg byte a [ anim::$3 ]
reg byte a [ anim::$5 ]
reg byte a [ gen_sintab::$24 ]
reg byte a [ prepareMEM::$0 ]
reg byte a [ prepareMEM::$1 ]
reg byte y [ gen_chargen_sprite::ch#0 ]
reg byte a [ gen_chargen_sprite::$3 ]
reg byte a [ gen_chargen_sprite::$6 ]
reg byte x [ place_sprites::j2#1 ]


FINAL ASSEMBLER
Score: 768747

//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label PROCPORT = 1
  .label CHARGEN = $d000
  .label SPRITES_XPOS = $d000
  .label SPRITES_YPOS = $d001
  .label SPRITES_XMSB = $d010
  .label RASTER = $d012
  .label SPRITES_ENABLE = $d015
  .label SPRITES_EXPAND_Y = $d017
  .label SPRITES_EXPAND_X = $d01d
  .label BORDERCOL = $d020
  .label SPRITES_COLS = $d027
  .label COLS = $d800
  .label memLo = $fe
  .label memHi = $ff
  .const sinlen_x = $dd
  .const sinlen_y = $c5
  .label sprites = $2000
  .label SCREEN = $400
  .label progress_idx = 4
  .label progress_cursor = $a
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @51 [phi:@begin->@51]
//SEG4 @51
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @51 to main [phi:@51->main]
  jsr main
//SEG7 [3] phi from @51 to @end [phi:@51->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [43] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:main->main::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:main->main::@2#1] -- vbuz1=vbuc1 
    sta sin_idx_x
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 main::@2
  b2:
  //SEG17 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1_neq_vbuc2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG18 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG19 main::@3
  //SEG20 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG21 [6] phi from main::@3 to main::@2 [phi:main::@3->main::@2]
  //SEG22 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@3->main::@2#0] -- register_copy 
  //SEG23 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@3->main::@2#1] -- register_copy 
    jmp b2
}
//SEG24 anim
anim: {
    .label _2 = 5
    .label xidx = 4
    .label x = 8
    .label x_msb = 5
    .label j2 = 6
    .label j = 7
  //SEG25 [10] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc BORDERCOL
  //SEG26 [11] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- vbuz1=vbuz2 
    lda sin_idx_x
    sta xidx
  //SEG27 [12] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- vbuxx=vbuz1 
    ldx sin_idx_y
  //SEG28 [13] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG29 [13] phi (byte) anim::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim->anim::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta j
  //SEG30 [13] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG31 [13] phi (byte) anim::j2#2 = (byte/signed byte/word/signed word/dword/signed dword) 12 [phi:anim->anim::@1#2] -- vbuz1=vbuc1 
    lda #$c
    sta j2
  //SEG32 [13] phi (byte) anim::x_msb#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim->anim::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta x_msb
  //SEG33 [13] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#4] -- register_copy 
  //SEG34 [13] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG35 [13] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG36 [13] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG37 [13] phi (byte) anim::j2#2 = (byte) anim::j2#1 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG38 [13] phi (byte) anim::x_msb#2 = (byte) anim::x_msb#1 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG39 [13] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#4] -- register_copy 
  //SEG40 anim::@1
  b1:
  //SEG41 [14] (word) anim::x#0 ← ((word))(byte/signed byte/word/signed word/dword/signed dword) 30 + *((const byte[221]) sintab_x#0 + (byte) anim::xidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::x_msb#2 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 ] ) -- vwuz1=vbuc1_plus_pbuc2_derefidx_vbuz2 
    ldy xidx
    lda sintab_x,y
    clc
    adc #$1e
    sta x
    lda #0
    adc #0
    sta x+1
  //SEG42 [15] (byte~) anim::$2 ← (byte) anim::x_msb#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 ] ) -- vbuz1=vbuz1_rol_1 
    asl _2
  //SEG43 [16] (byte~) anim::$3 ← > (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x#0 anim::$2 anim::$3 ] ) -- vbuaa=_hi_vwuz1 
  //SEG44 [17] (byte) anim::x_msb#1 ← (byte~) anim::$2 | (byte~) anim::$3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::x#0 ] ) -- vbuz1=vbuz1_bor_vbuaa 
    ora x_msb
    sta x_msb
  //SEG45 [18] (byte~) anim::$5 ← < (word) anim::x#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::$5 ] ) -- vbuaa=_lo_vwuz1 
    lda x
  //SEG46 [19] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#2) ← (byte~) anim::$5 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) -- pbuc1_derefidx_vbuz1=vbuaa 
    ldy j2
    sta SPRITES_XPOS,y
  //SEG47 [20] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#2) ← *((const byte[197]) sintab_y#0 + (byte) anim::yidx#3) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 ] ) -- pbuc1_derefidx_vbuz1=pbuc2_derefidx_vbuxx 
    lda sintab_y,x
    sta SPRITES_YPOS,y
  //SEG48 [21] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$a
    clc
    adc xidx
    sta xidx
  //SEG49 [22] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#1 ] ) -- vbuz1_lt_vbuc1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG50 anim::@6
  //SEG51 [23] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::yidx#3 anim::j#2 anim::x_msb#1 anim::xidx#2 ] ) -- vbuz1=vbuz1_minus_vbuc1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG52 [24] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG53 [24] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG54 anim::@2
  b2:
  //SEG55 [25] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word/dword/signed dword) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) -- vbuxx=vbuxx_plus_vbuc1 
    txa
    clc
    adc #8
    tax
  //SEG56 [26] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#1 ] ) -- vbuxx_lt_vbuc1_then_la1 
    cpx #sinlen_y
    bcc b3
  //SEG57 anim::@7
  //SEG58 [27] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#2 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::yidx#2 ] ) -- vbuxx=vbuxx_minus_vbuc1 
    txa
    sec
    sbc #sinlen_y
    tax
  //SEG59 [28] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG60 [28] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG61 anim::@3
  b3:
  //SEG62 [29] (byte) anim::j2#1 ← (byte) anim::j2#2 - (byte/signed byte/word/signed word/dword/signed dword) 2 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 ] ) -- vbuz1=vbuz1_minus_2 
    dec j2
    dec j2
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ) -- vbuz1=_inc_vbuz1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::x_msb#1 anim::j2#1 anim::yidx#6 anim::j#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] *((const byte*) SPRITES_XMSB#0) ← (byte) anim::x_msb#1 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_pbuc1=vbuz1 
    lda x_msb
    sta SPRITES_XMSB
  //SEG67 [33] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- vbuz1=_inc_vbuz1 
    inc sin_idx_x
  //SEG68 [34] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG69 [35] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG70 [35] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim::@8->anim::@4#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_x
  //SEG71 anim::@4
  b4:
  //SEG72 [36] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- vbuz1=_inc_vbuz1 
    inc sin_idx_y
  //SEG73 [37] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG74 [38] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG75 [38] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:anim::@4->anim::@5#0] -- vbuz1=vbuc1 
    lda #0
    sta sin_idx_y
  //SEG76 anim::@5
  b5:
  //SEG77 [39] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_pbuc1=_dec__deref_pbuc1 
    dec BORDERCOL
  //SEG78 anim::@return
  //SEG79 [40] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG80 [41] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG81 anim::@15
  //SEG82 [38] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG83 [38] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
  //SEG84 [42] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG85 anim::@14
  //SEG86 [35] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG87 [35] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
}
//SEG88 init
init: {
  //SEG89 [44] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG90 [65] phi from init to clear_screen [phi:init->clear_screen]
    jsr clear_screen
  //SEG91 [45] phi from init to init::@1 [phi:init->init::@1]
  //SEG92 [45] phi (byte) init::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init->init::@1#0] -- vbuxx=vbuc1 
    ldx #0
  //SEG93 [45] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG94 [45] phi (byte) init::i#2 = (byte) init::i#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG95 init::@1
  b1:
  //SEG96 [46] *((const byte*) COLS#0 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 0 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #0
    sta COLS,x
  //SEG97 [47] *((const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40 + (byte) init::i#2) ← (byte/signed byte/word/signed word/dword/signed dword) 11 [ init::i#2 ] ( main:2::init:5 [ init::i#2 ] ) -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #$b
    sta COLS+$28,x
  //SEG98 [48] (byte) init::i#1 ← ++ (byte) init::i#2 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG99 [49] if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto init::@1 [ init::i#1 ] ( main:2::init:5 [ init::i#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #$28
    bne b1
  //SEG100 [50] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG101 init::@2
  //SEG102 [51] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG103 [52] phi from init::@2 to init::@4 [phi:init::@2->init::@4]
  //SEG104 init::@4
  //SEG105 [53] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [170] phi from init::@4 to gen_sprites [phi:init::@4->gen_sprites]
    jsr gen_sprites
  //SEG107 [54] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG108 init::@5
  //SEG109 [55] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  //SEG110 [168] phi from init::@5 to progress_init [phi:init::@5->progress_init]
  //SEG111 [168] phi (byte*) progress_init::line#2 = (const byte*) SCREEN#0 [phi:init::@5->progress_init#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta progress_init.line
    lda #>SCREEN
    sta progress_init.line+1
    jsr progress_init
  //SEG112 [56] phi from init::@5 to init::@6 [phi:init::@5->init::@6]
  //SEG113 init::@6
  //SEG114 [57] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG115 [71] phi from init::@6 to gen_sintab [phi:init::@6->gen_sintab]
  //SEG116 [71] phi (byte*) gen_sintab::sintab#12 = (const byte[221]) sintab_x#0 [phi:init::@6->gen_sintab#0] -- pbuz1=pbuc1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG117 [71] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@6->gen_sintab#1] -- vbuz1=vbuc1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG118 [71] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:init::@6->gen_sintab#2] -- vbuz1=vbuc1 
    lda #0
    sta gen_sintab.min
  //SEG119 [71] phi (byte) gen_sintab::max#2 = (byte/word/signed word/dword/signed dword) 255 [phi:init::@6->gen_sintab#3] -- vbuxx=vbuc1 
    ldx #$ff
    jsr gen_sintab
  //SEG120 [58] phi from init::@6 to init::@7 [phi:init::@6->init::@7]
  //SEG121 init::@7
  //SEG122 [59] call progress_init param-assignment [ progress_init::line#2 ] ( main:2::init:5 [ progress_init::line#2 ] )
  //SEG123 [168] phi from init::@7 to progress_init [phi:init::@7->progress_init]
  //SEG124 [168] phi (byte*) progress_init::line#2 = (const byte*) SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 40 [phi:init::@7->progress_init#0] -- pbuz1=pbuc1 
    lda #<SCREEN+$28
    sta progress_init.line
    lda #>SCREEN+$28
    sta progress_init.line+1
    jsr progress_init
  //SEG125 [60] phi from init::@7 to init::@8 [phi:init::@7->init::@8]
  //SEG126 init::@8
  //SEG127 [61] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG128 [71] phi from init::@8 to gen_sintab [phi:init::@8->gen_sintab]
  //SEG129 [71] phi (byte*) gen_sintab::sintab#12 = (const byte[197]) sintab_y#0 [phi:init::@8->gen_sintab#0] -- pbuz1=pbuc1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG130 [71] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@8->gen_sintab#1] -- vbuz1=vbuc1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG131 [71] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word/dword/signed dword) 50 [phi:init::@8->gen_sintab#2] -- vbuz1=vbuc1 
    lda #$32
    sta gen_sintab.min
  //SEG132 [71] phi (byte) gen_sintab::max#2 = (byte/word/signed word/dword/signed dword) 208 [phi:init::@8->gen_sintab#3] -- vbuxx=vbuc1 
    ldx #$d0
    jsr gen_sintab
  //SEG133 [62] phi from init::@8 to init::@9 [phi:init::@8->init::@9]
  //SEG134 init::@9
  //SEG135 [63] call clear_screen param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG136 [65] phi from init::@9 to clear_screen [phi:init::@9->clear_screen]
    jsr clear_screen
  //SEG137 init::@return
  //SEG138 [64] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG139 clear_screen
clear_screen: {
    .label sc = 8
  //SEG140 [66] phi from clear_screen to clear_screen::@1 [phi:clear_screen->clear_screen::@1]
  //SEG141 [66] phi (byte*) clear_screen::sc#2 = (const byte*) SCREEN#0 [phi:clear_screen->clear_screen::@1#0] -- pbuz1=pbuc1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG142 [66] phi from clear_screen::@1 to clear_screen::@1 [phi:clear_screen::@1->clear_screen::@1]
  //SEG143 [66] phi (byte*) clear_screen::sc#2 = (byte*) clear_screen::sc#1 [phi:clear_screen::@1->clear_screen::@1#0] -- register_copy 
  //SEG144 clear_screen::@1
  b1:
  //SEG145 [67] *((byte*) clear_screen::sc#2) ← (byte) ' ' [ clear_screen::sc#2 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#2 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG146 [68] (byte*) clear_screen::sc#1 ← ++ (byte*) clear_screen::sc#2 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG147 [69] if((byte*) clear_screen::sc#1<(const byte*) SCREEN#0+(word/signed word/dword/signed dword) 1000) goto clear_screen::@1 [ clear_screen::sc#1 ] ( main:2::init:5::clear_screen:44 [ clear_screen::sc#1 ] main:2::init:5::clear_screen:63 [ clear_screen::sc#1 ] ) -- pbuz1_lt_pbuc1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG148 clear_screen::@return
  //SEG149 [70] return  [ ] ( main:2::init:5::clear_screen:44 [ ] main:2::init:5::clear_screen:63 [ ] )
    rts
}
//SEG150 gen_sintab
gen_sintab: {
    .label f_2pi = $e2e5
    .label _23 = $c
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 8
  //SEG151 [72] (word) setFAC::w#0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 progress_init::line#2 ] ) -- vwuz1=_word_vbuxx 
    txa
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG153 [154] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG154 [154] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG155 [74] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG156 gen_sintab::@3
  //SEG157 [75] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    jsr setARGtoFAC
  //SEG158 gen_sintab::@4
  //SEG159 asm { lda#0 ldx#0 ldy#0  }
    lda #0
    tax
    tay
  //SEG160 [77] (word) setFAC::w#1 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 progress_init::line#2 ] ) -- vwuz1=_word_vbuz2 
    lda min
    sta setFAC.w
    txa
    sta setFAC.w+1
  //SEG161 [78] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG162 [154] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG163 [154] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG164 [79] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG165 gen_sintab::@5
  //SEG166 [80] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG167 [159] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG168 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG169 [81] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG170 gen_sintab::@6
  //SEG171 [82] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    jsr subFACfromARG
  //SEG172 [83] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG173 gen_sintab::@7
  //SEG174 [84] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG175 [159] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG176 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG177 [85] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG178 gen_sintab::@8
  //SEG179 [86] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG180 [154] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG181 [154] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word/dword/signed dword) 2 [phi:gen_sintab::@8->setFAC#0] -- vwuz1=vbuc1 
    lda #<2
    sta setFAC.w
    lda #>2
    sta setFAC.w+1
    jsr setFAC
  //SEG182 [87] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG183 gen_sintab::@9
  //SEG184 [88] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG185 [149] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG186 [149] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG187 [89] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG188 gen_sintab::@10
  //SEG189 [90] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG190 [159] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG191 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG192 [91] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG193 gen_sintab::@11
  //SEG194 [92] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG195 [132] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
    jsr addMEMtoFAC
  //SEG196 [93] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG197 gen_sintab::@12
  //SEG198 [94] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
  //SEG199 [159] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG200 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG201 [95] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG202 [95] phi (byte*) progress_cursor#34 = (byte*) progress_init::line#2 [phi:gen_sintab::@12->gen_sintab::@1#0] -- register_copy 
  //SEG203 [95] phi (byte) progress_idx#34 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sintab::@12->gen_sintab::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta progress_idx
  //SEG204 [95] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sintab::@12->gen_sintab::@1#2] -- vbuz1=vbuc1 
    sta i
  //SEG205 [95] phi from gen_sintab::@23 to gen_sintab::@1 [phi:gen_sintab::@23->gen_sintab::@1]
  //SEG206 [95] phi (byte*) progress_cursor#34 = (byte*) progress_cursor#11 [phi:gen_sintab::@23->gen_sintab::@1#0] -- register_copy 
  //SEG207 [95] phi (byte) progress_idx#34 = (byte) progress_idx#12 [phi:gen_sintab::@23->gen_sintab::@1#1] -- register_copy 
  //SEG208 [95] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@23->gen_sintab::@1#2] -- register_copy 
  //SEG209 gen_sintab::@1
  b1:
  //SEG210 [96] (word) setFAC::w#3 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#3 ] ) -- vwuz1=_word_vbuz2 
    lda i
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG211 [97] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG212 [154] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG213 [154] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG214 [98] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG215 gen_sintab::@14
  //SEG216 [99] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG217 [142] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG218 [142] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- pbuz1=pbuc1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG219 [100] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG220 gen_sintab::@15
  //SEG221 [101] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG222 [159] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG223 [159] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- pbuz1=pbuc1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG224 gen_sintab::@16
  //SEG225 [102] (word) setFAC::w#4 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 setFAC::w#4 ] ) -- vwuz1=_word_vbuz2 
    lda length
    sta setFAC.w
    lda #0
    sta setFAC.w+1
  //SEG226 [103] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG227 [154] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG228 [154] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG229 [104] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG230 gen_sintab::@17
  //SEG231 [105] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG232 [149] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG233 [149] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- pbuz1=pbuc1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG234 [106] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG235 gen_sintab::@18
  //SEG236 [107] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    jsr sinFAC
  //SEG237 [108] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG238 gen_sintab::@19
  //SEG239 [109] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG240 [142] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG241 [142] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- pbuz1=pbuc1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG242 [110] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG243 gen_sintab::@20
  //SEG244 [111] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG245 [132] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
    jsr addMEMtoFAC
  //SEG246 [112] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG247 gen_sintab::@21
  //SEG248 [113] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
    jsr getFAC
  //SEG249 [114] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:12
  //SEG250 gen_sintab::@22
  //SEG251 [115] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:12
  //SEG252 [116] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 gen_sintab::$24 ] ) -- vbuaa=_byte_vwuz1 
    lda _23
  //SEG253 [117] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy i
    sta (sintab),y
  //SEG254 [118] call progress_inc param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
    jsr progress_inc
  //SEG255 gen_sintab::@23
  //SEG256 [119] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG257 [120] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 progress_idx#12 progress_cursor#11 ] ) -- vbuz1_lt_vbuz2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG258 gen_sintab::@return
  //SEG259 [121] return  [ ] ( main:2::init:5::gen_sintab:57 [ ] main:2::init:5::gen_sintab:61 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG260 progress_inc
progress_inc: {
  //SEG261 [122] (byte) progress_idx#10 ← ++ (byte) progress_idx#34 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) -- vbuz1=_inc_vbuz1 
    inc progress_idx
  //SEG262 [123] if((byte) progress_idx#10!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto progress_inc::@1 [ progress_cursor#34 progress_idx#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 progress_idx#10 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda progress_idx
    cmp #8
    bne b1
  //SEG263 progress_inc::@2
  //SEG264 [124] *((byte*) progress_cursor#34) ← *((const byte[]) progress_inc::progress_chars#0+(byte/signed byte/word/signed word/dword/signed dword) 8) [ progress_cursor#34 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#34 ] ) -- _deref_pbuz1=_deref_pbuc1 
    lda progress_chars+8
    ldy #0
    sta (progress_cursor),y
  //SEG265 [125] (byte*) progress_cursor#10 ← ++ (byte*) progress_cursor#34 [ progress_cursor#10 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_cursor#10 ] ) -- pbuz1=_inc_pbuz1 
    inc progress_cursor
    bne !+
    inc progress_cursor+1
  !:
  //SEG266 [126] phi from progress_inc::@2 to progress_inc::@1 [phi:progress_inc::@2->progress_inc::@1]
  //SEG267 [126] phi (byte*) progress_cursor#11 = (byte*) progress_cursor#10 [phi:progress_inc::@2->progress_inc::@1#0] -- register_copy 
  //SEG268 [126] phi (byte) progress_idx#12 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:progress_inc::@2->progress_inc::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta progress_idx
  //SEG269 [126] phi from progress_inc to progress_inc::@1 [phi:progress_inc->progress_inc::@1]
  //SEG270 [126] phi (byte*) progress_cursor#11 = (byte*) progress_cursor#34 [phi:progress_inc->progress_inc::@1#0] -- register_copy 
  //SEG271 [126] phi (byte) progress_idx#12 = (byte) progress_idx#10 [phi:progress_inc->progress_inc::@1#1] -- register_copy 
  //SEG272 progress_inc::@1
  b1:
  //SEG273 [127] *((byte*) progress_cursor#11) ← *((const byte[]) progress_inc::progress_chars#0 + (byte) progress_idx#12) [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] ) -- _deref_pbuz1=pbuc1_derefidx_vbuz2 
    ldy progress_idx
    lda progress_chars,y
    ldy #0
    sta (progress_cursor),y
  //SEG274 progress_inc::@return
  //SEG275 [128] return  [ progress_idx#12 progress_cursor#11 ] ( main:2::init:5::gen_sintab:57::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] main:2::init:5::gen_sintab:61::progress_inc:118 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#12 progress_cursor#11 ] )
    rts
    progress_chars: .byte $20, $65, $74, $75, $61, $f6, $e7, $ea, $e0
}
//SEG276 getFAC
getFAC: {
    .label return = $c
  //SEG277 asm { jsr$b1aa sty$fe sta$ff  }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG278 [130] (word) getFAC::return#0 ← *((const byte*) memHi#0) w= *((const byte*) memLo#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] ) -- vwuz1=_deref_pbuc1_word__deref_pbuc2 
    lda memLo
    sta return
    lda memHi
    sta return+1
  //SEG279 getFAC::@return
  //SEG280 [131] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:57::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] main:2::init:5::gen_sintab:61::getFAC:113 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 getFAC::return#0 ] )
    rts
}
//SEG281 addMEMtoFAC
addMEMtoFAC: {
  //SEG282 [133] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG283 [136] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG284 [136] phi (byte*) prepareMEM::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:addMEMtoFAC->prepareMEM#0] -- pbuz1=pbuc1 
    lda #<gen_sintab.f_min
    sta prepareMEM.mem
    lda #>gen_sintab.f_min
    sta prepareMEM.mem+1
    jsr prepareMEM
  //SEG285 addMEMtoFAC::@1
  //SEG286 asm { lda$fe ldy$ff jsr$b867  }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG287 addMEMtoFAC::@return
  //SEG288 [135] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG289 prepareMEM
prepareMEM: {
    .label mem = $c
  //SEG290 [137] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 prepareMEM::$0 ] ) -- vbuaa=_lo_pbuz1 
    lda mem
  //SEG291 [138] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#5 ] ) -- _deref_pbuc1=vbuaa 
    sta memLo
  //SEG292 [139] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::$1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::$1 ] ) -- vbuaa=_hi_pbuz1 
    lda mem+1
  //SEG293 [140] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] ) -- _deref_pbuc1=vbuaa 
    sta memHi
  //SEG294 prepareMEM::@return
  //SEG295 [141] return  [ ] ( main:2::init:5::gen_sintab:57::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:92::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::addMEMtoFAC:111::prepareMEM:133 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109::prepareMEM:144 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105::prepareMEM:151 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73::prepareMEM:156 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103::prepareMEM:156 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101::prepareMEM:161 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG296 mulFACbyMEM
mulFACbyMEM: {
    .label mem = $c
  //SEG297 [143] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_WORD:12
  //SEG298 [144] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG299 [136] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG300 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG301 mulFACbyMEM::@1
  //SEG302 asm { lda$fe ldy$ff jsr$ba28  }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG303 mulFACbyMEM::@return
  //SEG304 [146] return  [ ] ( main:2::init:5::gen_sintab:57::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:99 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::mulFACbyMEM:109 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG305 sinFAC
sinFAC: {
  //SEG306 asm { jsr$e26b  }
    jsr $e26b
  //SEG307 sinFAC::@return
  //SEG308 [148] return  [ ] ( main:2::init:5::gen_sintab:57::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::sinFAC:107 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG309 divMEMbyFAC
divMEMbyFAC: {
    .label mem = $c
  //SEG310 [150] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_WORD:12
  //SEG311 [151] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG312 [136] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG313 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG314 divMEMbyFAC::@1
  //SEG315 asm { lda$fe ldy$ff jsr$bb0f  }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG316 divMEMbyFAC::@return
  //SEG317 [153] return  [ ] ( main:2::init:5::gen_sintab:57::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:88 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::divMEMbyFAC:105 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG318 setFAC
setFAC: {
    .label w = $c
  //SEG319 [155] (byte*~) prepareMEM::mem#8 ← (byte*)(word) setFAC::w#5 [ prepareMEM::mem#8 ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#8 ] )
    // (byte*~) prepareMEM::mem#8 = (byte*)(word) setFAC::w#5  // register copy zp ZP_WORD:12
  //SEG320 [156] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG321 [136] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG322 [136] phi (byte*) prepareMEM::mem#5 = (byte*~) prepareMEM::mem#8 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG323 setFAC::@1
  //SEG324 asm { ldy$fe lda$ff jsr$b391  }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG325 setFAC::@return
  //SEG326 [158] return  [ ] ( main:2::init:5::gen_sintab:57::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:73 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:78 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setFAC:86 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:97 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:57::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setFAC:103 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG327 setMEMtoFAC
setMEMtoFAC: {
    .label mem = $c
  //SEG328 [160] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_WORD:12
  //SEG329 [161] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
  //SEG330 [136] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG331 [136] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG332 setMEMtoFAC::@1
  //SEG333 asm { ldx$fe ldy$ff jsr$bbd4  }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG334 setMEMtoFAC::@return
  //SEG335 [163] return  [ ] ( main:2::init:5::gen_sintab:57::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:80 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:84 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:90 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:57::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] main:2::init:5::gen_sintab:61::setMEMtoFAC:101 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 progress_idx#34 progress_cursor#34 ] )
    rts
}
//SEG336 subFACfromARG
subFACfromARG: {
  //SEG337 asm { jsr$b853  }
    jsr $b853
  //SEG338 subFACfromARG::@return
  //SEG339 [165] return  [ ] ( main:2::init:5::gen_sintab:57::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::subFACfromARG:82 [ gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    rts
}
//SEG340 setARGtoFAC
setARGtoFAC: {
  //SEG341 asm { jsr$bc0f  }
    jsr $bc0f
  //SEG342 setARGtoFAC::@return
  //SEG343 [167] return  [ ] ( main:2::init:5::gen_sintab:57::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] main:2::init:5::gen_sintab:61::setARGtoFAC:75 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 progress_init::line#2 ] )
    rts
}
//SEG344 progress_init
progress_init: {
    .label line = $a
  //SEG345 progress_init::@return
  //SEG346 [169] return  [ progress_init::line#2 ] ( main:2::init:5::progress_init:55 [ progress_init::line#2 ] main:2::init:5::progress_init:59 [ progress_init::line#2 ] )
    rts
}
//SEG347 gen_sprites
gen_sprites: {
    .label spr = 8
    .label i = 2
  //SEG348 [171] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG349 [171] phi (byte*) gen_sprites::spr#2 = (const byte*) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- pbuz1=pbuc1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG350 [171] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_sprites->gen_sprites::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta i
  //SEG351 [171] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG352 [171] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG353 [171] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG354 gen_sprites::@1
  b1:
  //SEG355 [172] (byte) gen_chargen_sprite::ch#0 ← *((const string) gen_sprites::cml#0 + (byte) gen_sprites::i#2) [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- vbuyy=pbuc1_derefidx_vbuz1 
    ldx i
    ldy cml,x
  //SEG356 [173] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- pbuz1=pbuz2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG357 [174] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG358 gen_sprites::@3
  //SEG359 [175] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word/dword/signed dword) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG360 [176] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG361 [177] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:53 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG362 gen_sprites::@return
  //SEG363 [178] return  [ ] ( main:2::init:5::gen_sprites:53 [ ] )
    rts
    cml: .text "camelot"
}
//SEG364 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $c
    .label _1 = $c
    .label sprite = $a
    .label chargen = $c
    .label bits = 4
    .label s_gen = 7
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG365 [179] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- vwuz1=_word_vbuyy 
    tya
    sta _0
    lda #0
    sta _0+1
  //SEG366 [180] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word/dword/signed dword) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- vwuz1=vwuz1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG367 [181] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda chargen
    adc #<CHARGEN
    sta chargen
    lda chargen+1
    adc #>CHARGEN
    sta chargen+1
  //SEG368 asm { sei  }
    sei
  //SEG369 [183] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_pbuc1=vbuc2 
    lda #$32
    sta PROCPORT
  //SEG370 [184] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG371 [184] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG372 [184] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta y
  //SEG373 [184] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG374 [184] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG375 [184] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG376 gen_chargen_sprite::@1
  b1:
  //SEG377 [185] (byte) gen_chargen_sprite::bits#0 ← *((byte*) gen_chargen_sprite::chargen#0 + (byte) gen_chargen_sprite::y#2) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- vbuz1=pbuz2_derefidx_vbuz3 
    ldy y
    lda (chargen),y
    sta bits
  //SEG378 [186] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG379 [186] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta x
  //SEG380 [186] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG381 [186] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- vbuyy=vbuc1 
    tay
  //SEG382 [186] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- vbuz1=vbuc1 
    sta s_gen
  //SEG383 [186] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG384 [186] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG385 [186] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG386 [186] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG387 [186] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG388 [186] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG389 [186] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG390 gen_chargen_sprite::@2
  b2:
  //SEG391 [187] (byte~) gen_chargen_sprite::$3 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word/dword/signed dword) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$3 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$80
    and bits
  //SEG392 [188] if((byte~) gen_chargen_sprite::$3==(byte/signed byte/word/signed word/dword/signed dword) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- vbuaa_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG393 [189] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG394 gen_chargen_sprite::@6
  //SEG395 [190] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG396 [190] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word/dword/signed dword) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- vbuz1=vbuc1 
    lda #1
    sta c
    jmp b3
  //SEG397 [190] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG398 [190] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta c
  //SEG399 gen_chargen_sprite::@3
  b3:
  //SEG400 [191] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG401 [191] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG402 [191] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG403 [191] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG404 [191] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG405 [191] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG406 [191] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG407 [191] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG408 [191] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG409 [191] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG410 gen_chargen_sprite::@4
  b4:
  //SEG411 [192] (byte~) gen_chargen_sprite::$6 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$6 ] ) -- vbuaa=vbuz1_rol_1 
    lda s_gen
    asl
  //SEG412 [193] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$6 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- vbuz1=vbuaa_bor_vbuz2 
    ora c
    sta s_gen
  //SEG413 [194] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- vbuyy=_inc_vbuyy 
    iny
  //SEG414 [195] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- vbuyy_neq_vbuc1_then_la1 
    cpy #8
    bne b5
  //SEG415 gen_chargen_sprite::@7
  //SEG416 [196] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    ldy #0
    sta (sprite),y
  //SEG417 [197] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    ldy #3
    sta (sprite),y
  //SEG418 [198] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word/dword/signed dword) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- pbuz1_derefidx_vbuc1=vbuz2 
    ldy #6
    sta (sprite),y
  //SEG419 [199] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG420 [200] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG421 [200] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG422 [200] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- vbuyy=vbuc1 
    ldy #0
  //SEG423 [200] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- vbuz1=vbuc1 
    tya
    sta s_gen
  //SEG424 [200] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG425 [200] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG426 [200] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG427 [200] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG428 gen_chargen_sprite::@5
  b5:
  //SEG429 [201] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG430 [202] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- vbuxx_neq_vbuc1_then_la1 
    cpx #3
    bne b4
  //SEG431 gen_chargen_sprite::@8
  //SEG432 [203] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word/dword/signed dword) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- vbuz1=vbuz1_rol_1 
    asl bits
  //SEG433 [204] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- vbuz1=_inc_vbuz1 
    inc x
  //SEG434 [205] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG435 gen_chargen_sprite::@9
  //SEG436 [206] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word/dword/signed dword) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG437 [207] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- vbuz1=_inc_vbuz1 
    inc y
  //SEG438 [208] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG439 gen_chargen_sprite::@10
  //SEG440 [209] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word/dword/signed dword) 55 [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_pbuc1=vbuc2 
    lda #$37
    sta PROCPORT
  //SEG441 asm { cli  }
    cli
  //SEG442 gen_chargen_sprite::@return
  //SEG443 [211] return  [ ] ( main:2::init:5::gen_sprites:53::gen_chargen_sprite:174 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG444 place_sprites
place_sprites: {
    .label sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG445 [212] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG446 [213] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    sta SPRITES_EXPAND_X
  //SEG447 [214] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word/dword/signed dword) 127 [ ] ( main:2::init:5::place_sprites:51 [ ] ) -- _deref_pbuc1=vbuc2 
    sta SPRITES_EXPAND_Y
  //SEG448 [215] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG449 [215] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word/dword/signed dword) 5 [phi:place_sprites->place_sprites::@1#0] -- vbuz1=vbuc1 
    lda #5
    sta col
  //SEG450 [215] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:place_sprites->place_sprites::@1#1] -- vbuxx=vbuc1 
    ldx #0
  //SEG451 [215] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word/dword/signed dword) 60 [phi:place_sprites->place_sprites::@1#2] -- vbuz1=vbuc1 
    lda #$3c
    sta spr_x
  //SEG452 [215] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word/dword/signed dword) 0 [phi:place_sprites->place_sprites::@1#3] -- vbuyy=vbuc1 
    ldy #0
  //SEG453 [215] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte*) sprites#0/(byte/signed byte/word/signed word/dword/signed dword) 64 [phi:place_sprites->place_sprites::@1#4] -- vbuz1=vbuc1 
    lda #$ff&sprites/$40
    sta spr_id
  //SEG454 [215] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG455 [215] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG456 [215] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG457 [215] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG458 [215] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG459 [215] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG460 place_sprites::@1
  b1:
  //SEG461 [216] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- pbuc1_derefidx_vbuyy=vbuz1 
    lda spr_id
    sta sprites_ptr,y
  //SEG462 [217] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- vbuz1=_inc_vbuz1 
    inc spr_id
  //SEG463 [218] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuxx=vbuz1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG464 [219] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word/dword/signed dword) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuxx=vbuc2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG465 [220] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- pbuc1_derefidx_vbuyy=vbuz1 
    lda col
    sta SPRITES_COLS,y
  //SEG466 [221] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word/dword/signed dword) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$20
    clc
    adc spr_x
    sta spr_x
  //SEG467 [222] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word/dword/signed dword) 7^(byte/signed byte/word/signed word/dword/signed dword) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- vbuz1=vbuz1_bxor_vbuc1 
    lda col
    eor #7^5
    sta col
  //SEG468 [223] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG469 [224] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuxx=_inc_vbuxx 
    inx
  //SEG470 [225] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuyy=_inc_vbuyy 
    iny
  //SEG471 [226] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word/dword/signed dword) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:51 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- vbuyy_neq_vbuc1_then_la1 
    cpy #7
    bne b1
  //SEG472 place_sprites::@return
  //SEG473 [227] return  [ ] ( main:2::init:5::place_sprites:51 [ ] )
    rts
}
  sintab_x: .fill $dd, 0
  sintab_y: .fill $c5, 0

