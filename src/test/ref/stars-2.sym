constant byte* const COLORRAM = (byte*) 55296
constant byte* const DEFAULT_SCREEN = (byte*) 1024
constant byte* DIGITS[]  = "0123456789abcdef"z
constant const byte LIGHT_BLUE = $e
constant byte OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
constant byte* RADIX_DECIMAL_VALUES_CHAR[]  = { $64, $a }
constant byte SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
void __start()
void clrscr()
byte clrscr::c
byte clrscr::c#1 reg byte y 20002.0
byte clrscr::c#2 reg byte y 12501.25
byte clrscr::l
byte clrscr::l#1 reg byte x 2002.0
byte clrscr::l#2 reg byte x 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:7 1001.0
byte* clrscr::line_cols#5 line_cols zp[2]:7 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:3 667.3333333333334
byte* clrscr::line_text#5 line_text zp[2]:3 1714.7142857142858
void conio_c64_init()
constant byte* const conio_c64_init::BASIC_CURSOR_LINE = (byte*) 214
byte conio_c64_init::line
byte conio_c64_init::line#0 reg byte x 11.0
byte conio_c64_init::line#2 reg byte x 22.0
byte conio_cursor_x loadstore zp[1]:9 2.8846157884615384E7
byte conio_cursor_y loadstore zp[1]:10 4.705882383676472E8
byte* conio_line_color loadstore zp[2]:13 3.348484880151515E8
byte* conio_line_text loadstore zp[2]:11 3.2985074938805974E8
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 2.0000002E7
byte cputc::c#2 reg byte a 20002.0
byte cputc::c#3 reg byte a 1.05005002E8
void cputln()
void cputs(const byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 1.0000001E7
const byte* cputs::s
const byte* cputs::s#0 s zp[2]:3 5000000.5
const byte* cputs::s#4 s zp[2]:3 1.5050002E7
const byte* cputs::s#5 s zp[2]:3 100001.0
void cscroll()
void gotoxy(byte gotoxy::x , byte gotoxy::y)
byte*~ gotoxy::$5 zp[2]:19 202.0
byte*~ gotoxy::$6 zp[2]:15 202.0
word~ gotoxy::$7 zp[2]:15 151.5
word~ gotoxy::$8 zp[2]:17 202.0
word~ gotoxy::$9 zp[2]:15 202.0
word gotoxy::line_offset
word gotoxy::line_offset#0 line_offset zp[2]:15 101.0
byte gotoxy::x
constant byte gotoxy::x#2 x = 0
byte gotoxy::y
byte gotoxy::y#2 reg byte x 71.0
byte gotoxy::y#4 reg byte x 67.33333333333333
void main()
byte main::i
byte main::i#1 i zp[1]:2 202.0
byte main::i#2 i zp[1]:2 50.5
constant byte* main::s[2]  = " "
constant byte* main::s1[2]  = "
"
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:24
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:24 1.00000000000001E14
byte* memcpy::dst#2 dst zp[2]:24 1.0003333333333467E14
byte* memcpy::dst#4 dst zp[2]:24 2.00000000002E11
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:7
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:7 2.00000000000002E14
byte* memcpy::src#2 src zp[2]:7 1.0002500000000125E14
byte* memcpy::src#4 src zp[2]:7 1.00000000001E11
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:22 1.251250000000025E13
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 1.4285714285714428E13
byte* memset::dst
byte* memset::dst#1 dst zp[2]:7 2.00000000000002E14
byte* memset::dst#2 dst zp[2]:7 1.3336666666666834E14
byte* memset::dst#4 dst zp[2]:7 2.00000000002E11
byte* memset::end
byte* memset::end#0 end zp[2]:24 1.6683333333333668E13
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:7
struct printf_buffer_number printf_buffer loadstore mem[12] = {}
void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
struct printf_buffer_number printf_number_buffer::buffer
byte* printf_number_buffer::buffer_digits
constant byte* printf_number_buffer::buffer_digits#0 buffer_digits = (byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
byte printf_number_buffer::buffer_sign
byte printf_number_buffer::buffer_sign#0 reg byte a 7001.0
struct printf_format_number printf_number_buffer::format
byte printf_number_buffer::format_justify_left
byte printf_number_buffer::format_min_length
byte printf_number_buffer::format_radix
byte printf_number_buffer::format_sign_always
byte printf_number_buffer::format_upper_case
byte printf_number_buffer::format_zero_padding
signed byte printf_number_buffer::len
signed byte printf_number_buffer::padding
void printf_uchar(byte printf_uchar::uvalue , byte printf_uchar::format_min_length , byte printf_uchar::format_justify_left , byte printf_uchar::format_sign_always , byte printf_uchar::format_zero_padding , byte printf_uchar::format_upper_case , byte printf_uchar::format_radix)
struct printf_format_number printf_uchar::format
byte printf_uchar::format_justify_left
byte printf_uchar::format_min_length
byte printf_uchar::format_radix
byte printf_uchar::format_sign_always
byte printf_uchar::format_upper_case
byte printf_uchar::format_zero_padding
byte printf_uchar::uvalue
byte printf_uchar::uvalue#0 reg byte x 202.0
byte printf_uchar::uvalue#1 reg byte x 202.0
byte printf_uchar::uvalue#2 reg byte x 601.5
struct $0 stars loadstore mem[20] = { star_x: { $32, $28, $1e, $46, $28 }, star_y: { $32, $46, $14, $a, $50 }, speed_x: { 2, 2, 2, 2, 2 }, speed_y: { 7, 7, 7, 7, 7 } }
void uctoa(byte uctoa::value , byte* uctoa::buffer , byte uctoa::radix)
byte* uctoa::buffer
byte* uctoa::buffer#11 buffer zp[2]:7 335000.50000000006
byte* uctoa::buffer#14 buffer zp[2]:7 1500001.5
byte* uctoa::buffer#3 buffer zp[2]:7 20002.0
byte* uctoa::buffer#4 buffer zp[2]:7 2000002.0
byte uctoa::digit
byte uctoa::digit#1 digit zp[1]:5 2000002.0
byte uctoa::digit#2 digit zp[1]:5 307692.6153846154
byte uctoa::digit_value
byte uctoa::digit_value#0 digit_value zp[1]:21 600000.6000000001
byte* uctoa::digit_values
byte uctoa::max_digits
byte uctoa::radix
byte uctoa::started
byte uctoa::started#2 started zp[1]:6 600000.6000000001
byte uctoa::started#4 started zp[1]:6 1000001.0
byte uctoa::value
byte uctoa::value#0 reg byte x 1000001.0
byte uctoa::value#1 reg byte x 5501.0
byte uctoa::value#2 reg byte x 670001.0000000001
byte uctoa::value#6 reg byte x 1500001.5
byte uctoa_append(byte* uctoa_append::buffer , byte uctoa_append::value , byte uctoa_append::sub)
byte* uctoa_append::buffer
byte* uctoa_append::buffer#0 buffer zp[2]:7 1375000.25
byte uctoa_append::digit
byte uctoa_append::digit#1 reg byte y 1.0000000001E10
byte uctoa_append::digit#2 reg byte y 1.00050000015E10
byte uctoa_append::return
byte uctoa_append::return#0 reg byte x 2000002.0
byte uctoa_append::sub
byte uctoa_append::sub#0 sub zp[1]:21 3.3335000005E9
byte uctoa_append::value
byte uctoa_append::value#0 reg byte x 3666667.333333333
byte uctoa_append::value#1 reg byte x 2.0000000002E10
byte uctoa_append::value#2 reg byte x 5.001833334166666E9

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
zp[1]:2 [ main::i#2 main::i#1 ]
reg byte x [ gotoxy::y#4 gotoxy::y#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte x [ printf_uchar::uvalue#2 printf_uchar::uvalue#0 printf_uchar::uvalue#1 ]
zp[2]:3 [ cputs::s#4 cputs::s#5 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[1]:5 [ uctoa::digit#2 uctoa::digit#1 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:6 [ uctoa::started#2 uctoa::started#4 ]
reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
zp[2]:7 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
reg byte x [ memset::c#4 ]
zp[1]:9 [ conio_cursor_x ]
zp[1]:10 [ conio_cursor_y ]
zp[2]:11 [ conio_line_text ]
zp[2]:13 [ conio_line_color ]
zp[2]:15 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:17 [ gotoxy::$8 ]
zp[2]:19 [ gotoxy::$5 ]
reg byte a [ printf_number_buffer::buffer_sign#0 ]
reg byte a [ cputs::c#1 ]
zp[1]:21 [ uctoa::digit_value#0 uctoa_append::sub#0 ]
reg byte x [ uctoa_append::return#0 ]
zp[2]:22 [ memcpy::src_end#0 ]
zp[2]:24 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[12] [ printf_buffer ]
mem[20] [ stars ]
