(const nomodify dword) PI2_u4f28 = (dword) $6487ed51
(const nomodify dword) PI_HALF_u4f28 = (dword) $1921fb54
(const nomodify dword) PI_u4f28 = (dword) $3243f6a9
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte) SIZEOF_SIGNED_WORD = (byte) 2
(dword()) div32u16u((dword) div32u16u::dividend , (word) div32u16u::divisor)
(label) div32u16u::@1
(label) div32u16u::@2
(label) div32u16u::@return
(dword) div32u16u::dividend
(word) div32u16u::divisor
(dword) div32u16u::quotient
(word) div32u16u::quotient_hi
(word) div32u16u::quotient_hi#0 quotient_hi zp[2]:36 40.4
(word) div32u16u::quotient_lo
(word) div32u16u::quotient_lo#0 quotient_lo zp[2]:20 202.0
(dword) div32u16u::return
(dword) div32u16u::return#0 return zp[4]:26 37.33333333333333
(dword) div32u16u::return#2 return zp[4]:26 22.0
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 20002.0
(byte~) divr16u::$2 reg byte a 20002.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@6
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp[2]:34 2500.25
(word) divr16u::dividend#3 dividend zp[2]:34 4429.142857142857
(word) divr16u::dividend#5 dividend zp[2]:34 1001.0
(word) divr16u::divisor
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 15001.5
(byte) divr16u::i#2 reg byte x 1538.6153846153845
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp[2]:20 15001.5
(word) divr16u::quotient#2 quotient zp[2]:20 10001.0
(word) divr16u::quotient#3 quotient zp[2]:20 2500.25
(word) divr16u::rem
(word) divr16u::rem#0 rem zp[2]:18 7500.75
(word) divr16u::rem#1 rem zp[2]:18 20002.0
(word) divr16u::rem#10 rem zp[2]:18 1102.0
(word) divr16u::rem#11 rem zp[2]:18 10334.666666666666
(word) divr16u::rem#2 rem zp[2]:18 20002.0
(word) divr16u::rem#4 rem zp[2]:18 202.0
(word) divr16u::rem#5 rem zp[2]:18 21003.0
(word) divr16u::rem#6 rem zp[2]:18 10001.0
(word) divr16u::return
(word) divr16u::return#0 return zp[2]:20 4315.0
(word) divr16u::return#2 return zp[2]:20 202.0
(word) divr16u::return#3 return zp[2]:20 202.0
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@return
(const signed word*) main::sintab1[(number) $78]  = { fill( $78, 0) }
(signed word*) main::st1
(signed word*) main::st1#1 st1 zp[2]:2 22.0
(signed word*) main::st1#2 st1 zp[2]:2 4.0
(const byte*) main::str[(byte) 4]  = (byte*) "   "
(const byte*) main::str1[(byte) 2]  = (byte*) " "
(signed word) main::sw
(signed word) main::sw#0 sw zp[2]:10 6.6000000000000005
(const word) main::wavelength = (word) $78
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:16 2002.0
(byte*) memset::dst#2 dst zp[2]:16 1334.6666666666667
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) print_screen#0
(dword()) mul16u((word) mul16u::a , (word) mul16u::b)
(byte~) mul16u::$1 reg byte a 2.0000002E7
(label) mul16u::@1
(label) mul16u::@2
(label) mul16u::@3
(label) mul16u::@4
(label) mul16u::@return
(word) mul16u::a
(word) mul16u::a#0 a zp[2]:36 1.0000001E7
(word) mul16u::a#1 a zp[2]:36 36667.33333333333
(word) mul16u::a#2 a zp[2]:36 6683334.166666666
(word) mul16u::b
(word) mul16u::b#0 b zp[2]:20 10001.0
(dword) mul16u::mb
(dword) mul16u::mb#0 mb zp[4]:22 200002.0
(dword) mul16u::mb#1 mb zp[4]:22 2.0000002E7
(dword) mul16u::mb#2 mb zp[4]:22 4300000.571428571
(dword) mul16u::res
(dword) mul16u::res#1 res zp[4]:30 2.0000002E7
(dword) mul16u::res#2 res zp[4]:30 5001667.333333333
(dword) mul16u::res#6 res zp[4]:30 1.0000001E7
(dword) mul16u::return
(dword) mul16u::return#2 return zp[4]:30 20002.0
(word()) mulu16_sel((word) mulu16_sel::v1 , (word) mulu16_sel::v2 , (byte) mulu16_sel::select)
(dword~) mulu16_sel::$0 zp[4]:30 20002.0
(dword~) mulu16_sel::$1 zp[4]:30 20002.0
(label) mulu16_sel::@1
(label) mulu16_sel::@return
(word) mulu16_sel::return
(word) mulu16_sel::return#0 return zp[2]:36 2002.0
(word) mulu16_sel::return#1 return_1 zp[2]:18 2002.0
(word) mulu16_sel::return#10 return_1 zp[2]:18 2002.0
(word) mulu16_sel::return#11 return zp[2]:36 2002.0
(word) mulu16_sel::return#12 return zp[2]:36 2143.714285714286
(word) mulu16_sel::return#2 return zp[2]:36 2002.0
(byte) mulu16_sel::select
(byte) mulu16_sel::select#5 reg byte x 1666.8333333333333
(word) mulu16_sel::v1
(word) mulu16_sel::v1#0 v1 zp[2]:18 1001.0
(word) mulu16_sel::v1#1 v1 zp[2]:18 1001.0
(word) mulu16_sel::v1#2 v1 zp[2]:18 2002.0
(word) mulu16_sel::v1#3 v1 zp[2]:18 1001.0
(word) mulu16_sel::v1#4 v1 zp[2]:18 1001.0
(word) mulu16_sel::v1#5 v1 zp[2]:18 15006.0
(word) mulu16_sel::v2
(word) mulu16_sel::v2#0 v2 zp[2]:20 2002.0
(word) mulu16_sel::v2#1 v2 zp[2]:20 2002.0
(word) mulu16_sel::v2#3 v2 zp[2]:20 2002.0
(word) mulu16_sel::v2#4 v2 zp[2]:20 2002.0
(word) mulu16_sel::v2#5 v2 zp[2]:20 7002.5
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 20002.0
(byte) print_char::ch#3 reg byte a 20002.0
(byte) print_char::ch#4 reg byte a 20002.0
(byte) print_char::ch#5 reg byte a 130004.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:34 2875.0
(byte*) print_char_cursor#12 print_char_cursor zp[2]:34 5000.576923076923
(byte*) print_char_cursor#20 print_char_cursor zp[2]:34 6.6000000000000005
(byte*) print_char_cursor#36 print_char_cursor zp[2]:34 115103.5
(byte*) print_char_cursor#54 print_char_cursor zp[2]:34 44.8
(byte*) print_char_cursor#58 print_char_cursor zp[2]:34 123.0
(void()) print_cls()
(label) print_cls::@return
(const to_nomodify byte*) print_hextab[]  = (byte*) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_screen
(const byte*) print_screen#0 print_screen = (byte*) 1024
(void()) print_sint((signed word) print_sint::w)
(label) print_sint::@1
(label) print_sint::@2
(label) print_sint::@3
(label) print_sint::@4
(label) print_sint::@return
(signed word) print_sint::w
(signed word) print_sint::w#0 w zp[2]:10 202.0
(signed word) print_sint::w#1 w zp[2]:10 52.33333333333333
(signed word) print_sint::w#4 w zp[2]:10 202.0
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:8 20002.0
(byte*) print_str::str#3 str zp[2]:8 10026.25
(byte*) print_str::str#6 str zp[2]:8 101.0
(void()) print_uchar((byte) print_uchar::b)
(byte~) print_uchar::$0 reg byte a 20002.0
(byte~) print_uchar::$2 reg byte x 20002.0
(label) print_uchar::@1
(label) print_uchar::@return
(byte) print_uchar::b
(byte) print_uchar::b#0 reg byte x 2002.0
(byte) print_uchar::b#1 reg byte x 2002.0
(byte) print_uchar::b#2 reg byte x 5501.0
(void()) print_uint((word) print_uint::w)
(label) print_uint::@1
(label) print_uint::@return
(word) print_uint::w
(word) print_uint::w#0 w zp[2]:10 701.0
(word) rem16u
(word) rem16u#0 rem16u zp[2]:18 220.39999999999998
(signed word()) sin16s((dword) sin16s::x)
(dword~) sin16s::$4 zp[4]:30 2002.0
(label) sin16s::@1
(label) sin16s::@10
(label) sin16s::@11
(label) sin16s::@12
(label) sin16s::@2
(label) sin16s::@3
(label) sin16s::@4
(label) sin16s::@5
(label) sin16s::@6
(label) sin16s::@7
(label) sin16s::@8
(label) sin16s::@9
(label) sin16s::@return
(byte) sin16s::isUpper
(byte) sin16s::isUpper#2 reg byte y 30.333333333333332
(signed word) sin16s::return
(signed word) sin16s::return#0 return zp[2]:16 202.0
(signed word) sin16s::return#1 return zp[2]:16 701.0
(signed word) sin16s::return#5 return zp[2]:16 2002.0
(signed word) sin16s::sinx
(signed word) sin16s::sinx#1 sinx zp[2]:16 2002.0
(word) sin16s::usinx
(word) sin16s::usinx#0 usinx zp[2]:16 166.83333333333334
(word) sin16s::usinx#1 usinx zp[2]:16 500.5
(dword) sin16s::x
(dword) sin16s::x#0 x zp[4]:12 1552.0
(dword) sin16s::x#1 x zp[4]:12 2002.0
(dword) sin16s::x#2 x zp[4]:12 2002.0
(dword) sin16s::x#4 x zp[4]:12 2502.5
(dword) sin16s::x#6 x zp[4]:12 3003.0
(word) sin16s::x1
(word) sin16s::x1#0 x1 zp[2]:34 318.5
(word) sin16s::x2
(word) sin16s::x2#0 x2 zp[2]:18 2002.0
(word) sin16s::x3
(word) sin16s::x3#0 x3 zp[2]:18 500.5
(word) sin16s::x3_6
(word) sin16s::x3_6#0 x3_6 zp[2]:36 2002.0
(word) sin16s::x4
(word) sin16s::x4#0 x4 zp[2]:18 2002.0
(word) sin16s::x5
(word) sin16s::x5#0 x5 zp[2]:36 2002.0
(word) sin16s::x5_128
(word) sin16s::x5_128#0 x5_128 zp[2]:36 2002.0
(void()) sin16s_gen((signed word*) sin16s_gen::sintab , (word) sin16s_gen::wavelength)
(signed word~) sin16s_gen::$2 zp[2]:16 202.0
(label) sin16s_gen::@1
(label) sin16s_gen::@2
(label) sin16s_gen::@3
(label) sin16s_gen::@4
(label) sin16s_gen::@return
(word) sin16s_gen::i
(word) sin16s_gen::i#1 i zp[2]:8 202.0
(word) sin16s_gen::i#2 i zp[2]:8 33.666666666666664
(signed word*) sin16s_gen::sintab
(signed word*) sin16s_gen::sintab#0 sintab zp[2]:10 67.33333333333333
(signed word*) sin16s_gen::sintab#2 sintab zp[2]:10 43.285714285714285
(dword) sin16s_gen::step
(dword) sin16s_gen::step#0 step zp[4]:26 10.181818181818182
(word) sin16s_gen::wavelength
(dword) sin16s_gen::x
(dword) sin16s_gen::x#1 x zp[4]:4 101.0
(dword) sin16s_gen::x#2 x zp[4]:4 37.875

zp[2]:2 [ main::st1#2 main::st1#1 ]
zp[4]:4 [ sin16s_gen::x#2 sin16s_gen::x#1 ]
zp[2]:8 [ print_str::str#3 print_str::str#6 print_str::str#0 sin16s_gen::i#2 sin16s_gen::i#1 ]
zp[2]:10 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 main::sw#0 print_uint::w#0 sin16s_gen::sintab#2 sin16s_gen::sintab#0 ]
reg byte y [ sin16s::isUpper#2 ]
zp[4]:12 [ sin16s::x#6 sin16s::x#4 sin16s::x#0 sin16s::x#1 sin16s::x#2 ]
zp[2]:16 [ memset::dst#2 memset::dst#1 sin16s::return#1 sin16s::return#5 sin16s::sinx#1 sin16s::usinx#1 sin16s::return#0 sin16s_gen::$2 sin16s::usinx#0 ]
reg byte a [ print_char::ch#5 print_char::ch#0 print_char::ch#3 print_char::ch#4 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp[2]:18 [ mulu16_sel::v1#5 mulu16_sel::v1#4 mulu16_sel::v1#0 mulu16_sel::v1#1 mulu16_sel::v1#2 mulu16_sel::v1#3 sin16s::x3#0 sin16s::x2#0 sin16s::x4#0 mulu16_sel::return#1 mulu16_sel::return#10 divr16u::rem#5 divr16u::rem#10 divr16u::rem#4 divr16u::rem#11 divr16u::rem#6 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 rem16u#0 ]
zp[2]:20 [ mulu16_sel::v2#5 mulu16_sel::v2#4 mulu16_sel::v2#0 mulu16_sel::v2#1 mulu16_sel::v2#3 mul16u::b#0 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 divr16u::return#3 div32u16u::quotient_lo#0 ]
reg byte x [ mulu16_sel::select#5 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
zp[4]:22 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
zp[4]:26 [ div32u16u::return#2 sin16s_gen::step#0 div32u16u::return#0 ]
zp[4]:30 [ sin16s::$4 mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#2 mulu16_sel::$0 mulu16_sel::$1 ]
zp[2]:34 [ sin16s::x1#0 divr16u::dividend#3 divr16u::dividend#5 divr16u::dividend#0 print_char_cursor#36 print_char_cursor#58 print_char_cursor#54 print_char_cursor#20 print_char_cursor#1 print_char_cursor#12 ]
zp[2]:36 [ mulu16_sel::return#0 mulu16_sel::return#12 mulu16_sel::return#2 sin16s::x3_6#0 mulu16_sel::return#11 sin16s::x5#0 sin16s::x5_128#0 div32u16u::quotient_hi#0 mul16u::a#2 mul16u::a#1 mul16u::a#0 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
reg byte a [ mul16u::$1 ]
