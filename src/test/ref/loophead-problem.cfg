@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((const nomodify byte*) screen+(byte) $28) ← (byte) 'a'
  [5] call popup_selector 
  to:main::@1
main::@1: scope:[main]  from main
  [6] *((const nomodify byte*) screen+(byte) $29) ← (byte) opcode#12
  to:main::@return
main::@return: scope:[main]  from main::@1
  [7] return 
  to:@return

(void()) popup_selector()
popup_selector: scope:[popup_selector]  from main
  [8] phi()
  to:popup_selector::@1
popup_selector::@1: scope:[popup_selector]  from popup_selector popup_selector::@2
  [9] (byte) opcode#12 ← phi( popup_selector/(byte) 'a' popup_selector::@2/(byte) 'b' )
  [9] (byte) popup_selector::k#2 ← phi( popup_selector/(byte) 0 popup_selector::@2/(byte) popup_selector::k#1 )
  [10] if((byte) popup_selector::k#2<(byte) 2+(byte) 1) goto popup_selector::@2
  to:popup_selector::@return
popup_selector::@return: scope:[popup_selector]  from popup_selector::@1
  [11] return 
  to:@return
popup_selector::@2: scope:[popup_selector]  from popup_selector::@1
  [12] *((const nomodify byte*) screen + (byte) popup_selector::k#2) ← (byte) 'b'
  [13] (byte) popup_selector::k#1 ← ++ (byte) popup_selector::k#2
  to:popup_selector::@1
