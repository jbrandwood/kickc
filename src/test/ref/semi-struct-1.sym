__constant const char NUM_POINTS = 4
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant const char SIZEOF_POINT = 2
void init_points()
char init_points::getPoint1_$0 // reg byte y 101.0
char init_points::getPoint1_idx
char *init_points::getPoint1_return
char *init_points::getPoint1_return#0 // getPoint1_return zp[2]:7 40.4
char init_points::i
char init_points::i#1 // reg byte x 151.5
char init_points::i#10 // reg byte x 33.666666666666664
char *init_points::point
char *init_points::pointXpos1_point
char *init_points::pointXpos1_return
char *init_points::pointYpos1_point
char *init_points::pointYpos1_return
char init_points::pos
char init_points::pos#1 // reg byte a 101.0
char init_points::pos#10 // pos zp[1]:2 60.599999999999994
char init_points::pos#2 // pos zp[1]:2 67.33333333333333
void main()
void * memset(void *str , char c , unsigned int num)
char memset::c
__constant char memset::c#0 = ' ' // c
char *memset::dst
char *memset::dst#1 // dst zp[2]:3 20002.0
char *memset::dst#2 // dst zp[2]:3 13334.666666666666
char *memset::end
__constant char *memset::end#0 = (char *)memset::str#0+memset::num#0 // end
unsigned int memset::num
__constant unsigned int memset::num#0 = $3e8 // num
void *memset::return
void *memset::str
__constant void *memset::str#0 = (void *)print_screen#0 // str
__constant char points[NUM_POINTS*SIZEOF_POINT] = { fill( NUM_POINTS*SIZEOF_POINT, 0) }
void print_char(char ch)
char print_char::ch
char print_char::ch#0 // reg byte a 200002.0
char print_char::ch#1 // reg byte a 2002.0
char print_char::ch#2 // reg byte a 2002.0
char print_char::ch#3 // reg byte a 1102004.0
char *print_char_cursor
char *print_char_cursor#29 // print_char_cursor zp[2]:5 1051002.5
char *print_char_cursor#30 // print_char_cursor zp[2]:5 48044.2
char *print_char_cursor#45 // print_char_cursor zp[2]:5 401.0
char *print_char_cursor#48 // print_char_cursor zp[2]:5 40.4
char *print_char_cursor#66 // print_char_cursor zp[2]:5 202.0
void print_cls()
__constant const char print_hextab[] = "0123456789abcdef"z
char *print_line_cursor
char *print_line_cursor#0 // print_line_cursor zp[2]:7 42886.42857142857
char *print_line_cursor#12 // print_line_cursor zp[2]:7 201003.0
char *print_line_cursor#26 // print_line_cursor zp[2]:7 84.76923076923077
void print_ln()
void print_points()
char print_points::getPoint1_$0 // reg byte y 101.0
char print_points::getPoint1_idx
char *print_points::getPoint1_return
char print_points::i
char print_points::i#1 // i zp[1]:2 101.0
char print_points::i#10 // i zp[1]:2 23.307692307692307
char *print_points::point
char *print_points::point#0 // point zp[2]:9 28.857142857142858
char *print_points::pointXpos1_point
char *print_points::pointXpos1_return
char *print_points::pointYpos1_point
char *print_points::pointYpos1_return
__constant char print_points::str[2] = " "
char *print_screen
__constant char *print_screen#0 = (char *) 1024 // print_screen
void print_str(char *str)
char *print_str::str
char *print_str::str#0 // str zp[2]:3 200002.0
char *print_str::str#2 // str zp[2]:3 100001.0
void print_uchar(char b)
char print_uchar::$0 // reg byte a 2002.0
char print_uchar::$2 // reg byte x 2002.0
char print_uchar::b
char print_uchar::b#0 // reg byte x 202.0
char print_uchar::b#1 // reg byte x 202.0
char print_uchar::b#2 // reg byte x 551.0

reg byte x [ init_points::i#10 init_points::i#1 ]
zp[1]:2 [ print_points::i#10 print_points::i#1 init_points::pos#10 init_points::pos#2 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
zp[2]:3 [ memset::dst#2 memset::dst#1 print_str::str#2 print_str::str#0 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
zp[2]:5 [ print_char_cursor#29 print_char_cursor#45 print_char_cursor#48 print_char_cursor#66 print_char_cursor#30 ]
reg byte y [ init_points::getPoint1_$0 ]
zp[2]:7 [ init_points::getPoint1_return#0 print_line_cursor#12 print_line_cursor#26 print_line_cursor#0 ]
reg byte a [ init_points::pos#1 ]
reg byte y [ print_points::getPoint1_$0 ]
zp[2]:9 [ print_points::point#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
