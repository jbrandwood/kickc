@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  asm { sei  }
  to:main::@1
main::@1: scope:[main]  from main main::@1 main::@3
  [5] if(*((const byte*) RASTER)!=(byte) $a) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [6] if(*((const byte*) RASTER)!=(byte) $b) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [7] phi()
  [8] call raster 
  to:main::@1

(void()) raster()
raster: scope:[raster]  from main::@3
  asm { nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop  }
  [10] (byte) raster::col#0 ← *((const byte*) rastercols)
  to:raster::@1
raster::@1: scope:[raster]  from raster raster::@1
  [11] (byte) raster::i#2 ← phi( raster/(byte) 0 raster::@1/(byte) raster::i#1 )
  [11] (byte) raster::col#2 ← phi( raster/(byte) raster::col#0 raster::@1/(byte) raster::col#1 )
  [12] *((const byte*) BGCOL) ← (byte) raster::col#2
  [13] *((const byte*) BORDERCOL) ← (byte) raster::col#2
  [14] (byte) raster::i#1 ← ++ (byte) raster::i#2
  [15] (byte) raster::col#1 ← *((const byte*) rastercols + (byte) raster::i#1)
  asm { nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop  }
  [17] if((byte) raster::col#1!=(byte) $ff) goto raster::@1
  to:raster::@return
raster::@return: scope:[raster]  from raster::@1
  [18] return 
  to:@return
