__constant char *CHARGEN = (char *) 53248
__constant char *CHARSET4 = (char *) 10240
__constant char *D018 = (char *) 53272
__constant char *PROCPORT = (char *) 1
__constant char *SCREEN = (char *) 1024
__constant char bits_count[] = { 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 }
void main()
char main::$1 // zp[1]:8 7.333333333333333
char main::$11 // zp[1]:9 7.333333333333333
char main::$12 // reg byte a 22.0
char main::$13 // reg byte a 22.0
char main::$14 // reg byte a 22.0
char main::$15 // reg byte a 22.0
char main::$2 // reg byte a 22.0
char main::$20 // reg byte a 22.0
char main::$21 // zp[1]:10 7.333333333333333
char main::$22 // reg byte a 22.0
char main::$23 // reg byte a 22.0
char main::$24 // reg byte a 22.0
char main::$29 // reg byte a 22.0
char main::$3 // reg byte a 22.0
char main::$30 // zp[1]:11 11.0
char main::$31 // reg byte a 22.0
char main::$32 // reg byte a 22.0
char main::$4 // reg byte a 22.0
char main::$5 // reg byte a 22.0
char main::$6 // reg byte a 22.0
char main::bits
char main::bits#0 // reg byte a 22.0
char main::bits#1 // reg byte a 22.0
char main::bits#2 // reg byte a 22.0
char main::bits#3 // reg byte a 22.0
char main::bits_gen
char main::bits_gen#1 // reg byte x 4.125
char main::bits_gen#11 // reg byte x 33.0
char main::bits_gen#13 // reg byte x 33.0
char main::bits_gen#14 // reg byte x 4.125
char main::bits_gen#15 // reg byte x 33.0
char main::bits_gen#16 // reg byte x 4.714285714285714
char main::bits_gen#4 // reg byte x 22.0
char main::bits_gen#6 // reg byte x 22.0
char main::bits_gen#7 // reg byte a 22.0
char main::bits_gen#8 // reg byte x 22.0
char main::bits_gen#9 // reg byte a 11.0
char *main::chargen
char *main::chargen#1 // chargen zp[2]:2 16.5
char *main::chargen#10 // chargen zp[2]:2 1.75
char *main::chargen1
char *main::chargen1#0 // chargen1 zp[2]:6 1.6176470588235294
char *main::charset4
char *main::charset4#1 // charset4 zp[2]:4 7.333333333333333
char *main::charset4#10 // charset4 zp[2]:4 0.7674418604651163
char main::i
char main::i#1 // reg byte x 16.5
char main::i#2 // reg byte x 22.0

zp[2]:2 [ main::chargen#10 main::chargen#1 ]
zp[2]:4 [ main::charset4#10 main::charset4#1 ]
reg byte a [ main::bits_gen#9 ]
reg byte x [ main::bits_gen#11 main::bits_gen#1 main::bits_gen#4 ]
reg byte x [ main::bits_gen#13 main::bits_gen#14 main::bits_gen#6 ]
reg byte x [ main::bits_gen#15 main::bits_gen#16 main::bits_gen#8 ]
reg byte x [ main::i#2 main::i#1 ]
zp[2]:6 [ main::chargen1#0 ]
zp[1]:8 [ main::$1 ]
reg byte a [ main::$2 ]
reg byte a [ main::$3 ]
reg byte a [ main::$4 ]
reg byte a [ main::$5 ]
reg byte a [ main::$6 ]
reg byte a [ main::bits#0 ]
zp[1]:9 [ main::$11 ]
reg byte a [ main::$12 ]
reg byte a [ main::$13 ]
reg byte a [ main::$14 ]
reg byte a [ main::$15 ]
reg byte a [ main::bits#1 ]
reg byte a [ main::$20 ]
zp[1]:10 [ main::$21 ]
reg byte a [ main::$22 ]
reg byte a [ main::$23 ]
reg byte a [ main::$24 ]
reg byte a [ main::bits#2 ]
reg byte a [ main::$29 ]
zp[1]:11 [ main::$30 ]
reg byte a [ main::$31 ]
reg byte a [ main::$32 ]
reg byte a [ main::bits#3 ]
reg byte a [ main::bits_gen#7 ]
