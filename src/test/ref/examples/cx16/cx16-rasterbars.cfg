
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] BRAM = 0
  [2] BROM = 4
  [3] hstart = 0
  [4] hstop = (char)$280/4
  [5] vstart = 0
  [6] vstop = (char)$1e0/2
  [7] cnt = 2
  [8] sin_idx = $64
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [9] phi()
  [10] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [11] return 
  to:@return

__interrupt(rom_min_cx16) void irq_line()
irq_line: scope:[irq_line]  from
  [12] *VERA_CTRL = *VERA_CTRL | VERA_DCSEL
  [13] *VERA_DC_HSTART = hstart
  [14] *VERA_DC_HSTOP = hstop
  [15] *VERA_DC_VSTART = vstart
  [16] *VERA_DC_VSTOP = vstop
  [17] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL
  to:irq_line::@2
irq_line::@2: scope:[irq_line]  from irq_line irq_line::@10
  [18] irq_line::l#2 = phi( irq_line/0, irq_line::@10/irq_line::l#1 )
  [19] if(irq_line::l#2!=$e6) goto irq_line::@3
  to:irq_line::@4
irq_line::@4: scope:[irq_line]  from irq_line::@2
  [20] cnt = -- cnt
  [21] if(cnt!=0) goto irq_line::@1
  to:irq_line::@11
irq_line::@11: scope:[irq_line]  from irq_line::@4
  [22] cnt = 2
  [23] if(hstart>=(char)$140/4+1) goto irq_line::@1
  to:irq_line::@12
irq_line::@12: scope:[irq_line]  from irq_line::@11
  [24] hstart = ++ hstart
  [25] hstop = -- hstop
  [26] vstart = ++ vstart
  [27] vstop = -- vstop
  to:irq_line::@1
irq_line::@1: scope:[irq_line]  from irq_line::@11 irq_line::@12 irq_line::@4
  [28] phi()
  [29] call memset
  to:irq_line::@19
irq_line::@19: scope:[irq_line]  from irq_line::@1
  [30] irq_line::idx#0 = sin_idx
  [31] sin_idx = -- sin_idx
  to:irq_line::@13
irq_line::@13: scope:[irq_line]  from irq_line::@18 irq_line::@19
  [32] irq_line::idx#2 = phi( irq_line::@18/irq_line::idx#1, irq_line::@19/irq_line::idx#0 )
  [32] irq_line::b#2 = phi( irq_line::@18/irq_line::b#1, irq_line::@19/0 )
  [33] if(irq_line::b#2<8) goto irq_line::@14
  to:irq_line::@15
irq_line::@15: scope:[irq_line]  from irq_line::@13
  [34] *VERA_ISR = VERA_LINE
  to:irq_line::@return
irq_line::@return: scope:[irq_line]  from irq_line::@15
  [35] return 
  to:@return
irq_line::@14: scope:[irq_line]  from irq_line::@13
  [36] irq_line::bar#0 = BARS + SIN[irq_line::idx#2]
  to:irq_line::@16
irq_line::@16: scope:[irq_line]  from irq_line::@14 irq_line::@17
  [37] irq_line::i2#2 = phi( irq_line::@14/0, irq_line::@17/irq_line::i2#1 )
  [38] if(irq_line::i2#2<$20*SIZEOF_CHAR) goto irq_line::@17
  to:irq_line::@18
irq_line::@18: scope:[irq_line]  from irq_line::@16
  [39] irq_line::idx#1 = irq_line::idx#2 + $d
  [40] irq_line::b#1 = ++ irq_line::b#2
  to:irq_line::@13
irq_line::@17: scope:[irq_line]  from irq_line::@16
  [41] irq_line::bar#0[irq_line::i2#2] = BAR[irq_line::i2#2]
  [42] irq_line::i2#1 = ++ irq_line::i2#2
  to:irq_line::@16
irq_line::@3: scope:[irq_line]  from irq_line::@2
  [43] *VERA_DC_BORDER = BARS[irq_line::l#2]
  to:irq_line::@5
irq_line::@5: scope:[irq_line]  from irq_line::@3 irq_line::@6
  [44] irq_line::i#2 = phi( irq_line::@3/0, irq_line::@6/irq_line::i#1 )
  [45] if(irq_line::i#2<$18) goto irq_line::@6
  to:irq_line::@7
irq_line::@7: scope:[irq_line]  from irq_line::@5
  [46] *VERA_DC_BORDER = 0
  to:irq_line::@8
irq_line::@8: scope:[irq_line]  from irq_line::@7 irq_line::@9
  [47] irq_line::i1#2 = phi( irq_line::@7/0, irq_line::@9/irq_line::i1#1 )
  [48] if(irq_line::i1#2<$17) goto irq_line::@9
  to:irq_line::@10
irq_line::@10: scope:[irq_line]  from irq_line::@8
  asm { nop nop  }
  [50] irq_line::l#1 = ++ irq_line::l#2
  to:irq_line::@2
irq_line::@9: scope:[irq_line]  from irq_line::@8
  [51] irq_line::i1#1 = ++ irq_line::i1#2
  to:irq_line::@8
irq_line::@6: scope:[irq_line]  from irq_line::@5
  [52] irq_line::i#1 = ++ irq_line::i#2
  to:irq_line::@5

void main()
main: scope:[main]  from __start::@1
  [53] phi()
  to:main::SEI1
main::SEI1: scope:[main]  from main
  asm { sei  }
  to:main::@2
main::@2: scope:[main]  from main::SEI1
  [55] *KERNEL_IRQ = &irq_line
  [56] *VERA_IEN = VERA_LINE
  [57] *VERA_IRQLINE_L = 5
  to:main::CLI1
main::CLI1: scope:[main]  from main::@2
  asm { cli  }
  to:main::@1
main::@1: scope:[main]  from main::@1 main::CLI1
  [59] phi()
  to:main::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from irq_line::@1
  [60] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [61] memset::dst#2 = phi( memset/(char *)memset::str#0, memset::@2/memset::dst#1 )
  [62] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [63] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [64] *memset::dst#2 = memset::c#0
  [65] memset::dst#1 = ++ memset::dst#2
  to:memset::@1
