@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@1
@1: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @1
  [3] phi() [ ] ( )
main: scope:[main]  from @1
  [4] phi() [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [5] (byte) main::s#2 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@2/(byte) main::s#4 ) [ main::i#2 main::s#2 ] ( main:2 [ main::i#2 main::s#2 ] )
  [5] (byte) main::i#2 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 10 main::@2/(byte) main::i#1 ) [ main::i#2 main::s#2 ] ( main:2 [ main::i#2 main::s#2 ] )
  [6] if((byte) main::i#2<=(byte/signed byte/word/signed word/dword/signed dword) 5) goto main::@2 [ main::i#2 main::s#2 ] ( main:2 [ main::i#2 main::s#2 ] )
  to:main::@3
main::@3: scope:[main]  from main::@1
  [7] (byte) main::s#1 ← (byte) main::s#2 + (byte) main::i#2 [ main::i#2 main::s#1 ] ( main:2 [ main::i#2 main::s#1 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@3
  [8] (byte) main::s#4 ← phi( main::@1/(byte) main::s#2 main::@3/(byte) main::s#1 ) [ main::i#2 main::s#4 ] ( main:2 [ main::i#2 main::s#4 ] )
  [9] (byte) main::i#1 ← -- (byte) main::i#2 [ main::i#1 main::s#4 ] ( main:2 [ main::i#1 main::s#4 ] )
  [10] if((byte) main::i#1>(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@1 [ main::i#1 main::s#4 ] ( main:2 [ main::i#1 main::s#4 ] )
  to:main::@return
main::@return: scope:[main]  from main::@2
  [11] return  [ ] ( main:2 [ ] )
  to:@return
