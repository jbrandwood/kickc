
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@1/(byte) main::i#1 )
  [2] *((const nomodify byte*) plots + (byte) main::i#2) ← (byte) main::i#2
  [3] *((const nomodify byte*) SCREEN + (byte) main::i#2) ← (byte) 0
  [4] (byte) main::i#1 ← ++ (byte) main::i#2
  [5] if((byte) main::i#1!=(byte) $28) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [6] phi()
  [7] call line 
  to:main::@2

(void()) line((byte) line::x0 , (byte) line::x1)
line: scope:[line]  from main::@2
  [8] phi()
  to:line::@1
line::@1: scope:[line]  from line line::@3
  [9] (byte) line::x#2 ← phi( line/(const byte) line::x0#0 line::@3/(byte) line::x#1 )
  [10] if((byte) line::x#2<(const byte) line::x1#0+(byte) 1) goto line::@2
  to:line::@return
line::@return: scope:[line]  from line::@1
  [11] return 
  to:@return
line::@2: scope:[line]  from line::@1
  [12] (byte) plot::x#1 ← (byte) line::x#2
  [13] call plot 
  to:line::@3
line::@3: scope:[line]  from line::@2
  [14] (byte) line::x#1 ← ++ (byte) line::x#2
  to:line::@1

(void()) plot((byte) plot::x)
plot: scope:[plot]  from line::@2
  [15] (byte) plot::idx#0 ← *((const nomodify byte*) plots + (byte) plot::x#1)
  [16] (byte~) plot::$0 ← *((const nomodify byte*) SCREEN + (byte) plot::idx#0) + (byte) 1
  [17] *((const nomodify byte*) SCREEN + (byte) plot::idx#0) ← (byte~) plot::$0
  to:plot::@return
plot::@return: scope:[plot]  from plot
  [18] return 
  to:@return
