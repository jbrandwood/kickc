
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] render_screen_showing = 0
  [2] irq_raster_next = IRQ_RASTER_FIRST
  [3] irq_sprite_ypos = SPRITES_FIRST_YPOS+$15
  to:__start::__init1_toSpritePtr1
__start::__init1_toSpritePtr1: scope:[__start]  from __start::__init1
  [4] phi()
  to:__start::__init1_@1
__start::__init1_@1: scope:[__start]  from __start::__init1_toSpritePtr1
  [5] irq_sprite_ptr = __start::__init1_toSpritePtr1_return#0+3
  [6] irq_cnt = 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1_@1
  [7] phi()
  [8] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [9] return 
  to:@return

__interrupt(hardware_clobber) void sprites_irq()
sprites_irq: scope:[sprites_irq]  from
  asm { cld  }
  [11] sprites_irq::ypos#0 = irq_sprite_ypos
  [12] *SPRITES_YPOS = sprites_irq::ypos#0
  [13] *(SPRITES_YPOS+2) = sprites_irq::ypos#0
  [14] *(SPRITES_YPOS+4) = sprites_irq::ypos#0
  [15] *(SPRITES_YPOS+6) = sprites_irq::ypos#0
  [16] sprites_irq::$0 = irq_raster_next + 1
  [17] sprites_irq::raster_sprite_gfx_modify = sprites_irq::$0
  to:sprites_irq::@8
sprites_irq::@8: scope:[sprites_irq]  from sprites_irq sprites_irq::@8
  [18] if(*RASTER<sprites_irq::raster_sprite_gfx_modify) goto sprites_irq::@8
  to:sprites_irq::@9
sprites_irq::@9: scope:[sprites_irq]  from sprites_irq::@8
  [19] sprites_irq::ptr#0 = irq_sprite_ptr
  [20] if(render_screen_showing==0) goto sprites_irq::@1
  to:sprites_irq::@10
sprites_irq::@10: scope:[sprites_irq]  from sprites_irq::@9
  [21] *PLAYFIELD_SPRITE_PTRS_2 = sprites_irq::ptr#0
  [22] sprites_irq::ptr#3 = ++ sprites_irq::ptr#0
  [23] *(PLAYFIELD_SPRITE_PTRS_2+1) = sprites_irq::ptr#3
  [24] *(PLAYFIELD_SPRITE_PTRS_2+2) = sprites_irq::ptr#3
  [25] sprites_irq::ptr#4 = ++ sprites_irq::ptr#3
  [26] *(PLAYFIELD_SPRITE_PTRS_2+3) = sprites_irq::ptr#4
  to:sprites_irq::@2
sprites_irq::@2: scope:[sprites_irq]  from sprites_irq::@1 sprites_irq::@10
  [27] irq_cnt = ++ irq_cnt
  [28] if(irq_cnt==9) goto sprites_irq::@3
  to:sprites_irq::@6
sprites_irq::@6: scope:[sprites_irq]  from sprites_irq::@2
  [29] if(irq_cnt==$a) goto sprites_irq::@4
  to:sprites_irq::@7
sprites_irq::@7: scope:[sprites_irq]  from sprites_irq::@6
  [30] irq_raster_next = irq_raster_next + $14
  [31] irq_sprite_ypos = irq_sprite_ypos + $15
  [32] irq_sprite_ptr = irq_sprite_ptr + 3
  to:sprites_irq::@5
sprites_irq::@5: scope:[sprites_irq]  from sprites_irq::@11 sprites_irq::@4 sprites_irq::@7
  [33] *RASTER = irq_raster_next
  [34] *IRQ_STATUS = IRQ_RASTER
  to:sprites_irq::@return
sprites_irq::@return: scope:[sprites_irq]  from sprites_irq::@5
  [35] return 
  to:@return
sprites_irq::@4: scope:[sprites_irq]  from sprites_irq::@6
  [36] irq_cnt = 0
  [37] irq_raster_next = IRQ_RASTER_FIRST
  [38] irq_sprite_ypos = irq_sprite_ypos + $15
  [39] irq_sprite_ptr = irq_sprite_ptr + 3
  to:sprites_irq::@5
sprites_irq::@3: scope:[sprites_irq]  from sprites_irq::@2
  [40] irq_raster_next = irq_raster_next + $15
  [41] irq_sprite_ypos = SPRITES_FIRST_YPOS
  to:sprites_irq::toSpritePtr1
sprites_irq::toSpritePtr1: scope:[sprites_irq]  from sprites_irq::@3
  [42] phi()
  to:sprites_irq::@11
sprites_irq::@11: scope:[sprites_irq]  from sprites_irq::toSpritePtr1
  [43] irq_sprite_ptr = sprites_irq::toSpritePtr1_return#0
  to:sprites_irq::@5
sprites_irq::@1: scope:[sprites_irq]  from sprites_irq::@9
  [44] *PLAYFIELD_SPRITE_PTRS_1 = sprites_irq::ptr#0
  [45] sprites_irq::ptr#1 = ++ sprites_irq::ptr#0
  [46] *(PLAYFIELD_SPRITE_PTRS_1+1) = sprites_irq::ptr#1
  [47] *(PLAYFIELD_SPRITE_PTRS_1+2) = sprites_irq::ptr#1
  [48] sprites_irq::ptr#2 = ++ sprites_irq::ptr#1
  [49] *(PLAYFIELD_SPRITE_PTRS_1+3) = sprites_irq::ptr#2
  to:sprites_irq::@2

void main()
main: scope:[main]  from __start::@1
  [50] phi()
  to:main::vicSelectGfxBank1
main::vicSelectGfxBank1: scope:[main]  from main
  [51] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  to:main::vicSelectGfxBank1_toDd001
main::vicSelectGfxBank1_toDd001: scope:[main]  from main::vicSelectGfxBank1
  [52] phi()
  to:main::vicSelectGfxBank1_@1
main::vicSelectGfxBank1_@1: scope:[main]  from main::vicSelectGfxBank1_toDd001
  [53] *((byte*)CIA2) = main::vicSelectGfxBank1_toDd001_return#0
  to:main::toD0181
main::toD0181: scope:[main]  from main::vicSelectGfxBank1_@1
  [54] phi()
  to:main::@3
main::@3: scope:[main]  from main::toD0181
  [55] *D018 = main::toD0181_return#0
  [56] call sprites_init 
  to:main::@5
main::@5: scope:[main]  from main::@3
  [57] *SPRITES_ENABLE = $ff
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  [58] main::ypos#2 = phi( main::@4/main::ypos#1, main::@5/$32 )
  [58] main::xpos#2 = phi( main::@4/main::xpos#1, main::@5/$18 )
  [58] main::s#2 = phi( main::@4/main::s#1, main::@5/4 )
  [59] main::s2#0 = main::s#2 << 1
  [60] SPRITES_XPOS[main::s2#0] = main::xpos#2
  [61] SPRITES_YPOS[main::s2#0] = main::ypos#2
  [62] main::$6 = main::s#2 - 3
  [63] SPRITES_COLOR[main::s#2] = main::$6
  to:main::toSpritePtr1
main::toSpritePtr1: scope:[main]  from main::@1
  [64] phi()
  to:main::@4
main::@4: scope:[main]  from main::toSpritePtr1
  [65] PLAYFIELD_SPRITE_PTRS_1[main::s#2] = main::toSpritePtr1_return#0
  [66] main::xpos#1 = main::xpos#2 + $18
  [67] main::ypos#1 = main::ypos#2 + $18
  [68] main::s#1 = ++ main::s#2
  [69] if(main::s#1!=8) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@4
  [70] phi()
  [71] call sprites_irq_init 
  to:main::@6
main::@6: scope:[main]  from main::@2
  [72] phi()
  [73] call loop 
  to:main::@return
main::@return: scope:[main]  from main::@6
  [74] return 
  to:@return

void sprites_init()
sprites_init: scope:[sprites_init]  from main::@3
  [75] *SPRITES_ENABLE = $f
  [76] *SPRITES_MC = 0
  [77] *SPRITES_EXPAND_Y = *SPRITES_MC
  [78] *SPRITES_EXPAND_X = *SPRITES_EXPAND_Y
  to:sprites_init::@1
sprites_init::@1: scope:[sprites_init]  from sprites_init sprites_init::@1
  [79] sprites_init::xpos#2 = phi( sprites_init/$18+$f*8, sprites_init::@1/sprites_init::xpos#1 )
  [79] sprites_init::s#2 = phi( sprites_init/0, sprites_init::@1/sprites_init::s#1 )
  [80] sprites_init::s2#0 = sprites_init::s#2 << 1
  [81] SPRITES_XPOS[sprites_init::s2#0] = sprites_init::xpos#2
  [82] SPRITES_COLOR[sprites_init::s#2] = BLACK
  [83] sprites_init::xpos#1 = sprites_init::xpos#2 + $18
  [84] sprites_init::s#1 = ++ sprites_init::s#2
  [85] if(sprites_init::s#1!=4) goto sprites_init::@1
  to:sprites_init::@return
sprites_init::@return: scope:[sprites_init]  from sprites_init::@1
  [86] return 
  to:@return

void sprites_irq_init()
sprites_irq_init: scope:[sprites_irq_init]  from main::@2
  asm { sei  }
  [88] *IRQ_STATUS = IRQ_RASTER
  asm { ldaCIA1_INTERRUPT  }
  [90] *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
  [91] *PROCPORT = PROCPORT_RAM_IO
  [92] *((byte*)CIA1+OFFSET_STRUCT_MOS6526_CIA_INTERRUPT) = CIA_INTERRUPT_CLEAR
  [93] *VIC_CONTROL = *VIC_CONTROL & $7f
  [94] *RASTER = IRQ_RASTER_FIRST
  [95] *IRQ_ENABLE = IRQ_RASTER
  [96] *HARDWARE_IRQ = &sprites_irq
  asm { cli  }
  to:sprites_irq_init::@return
sprites_irq_init::@return: scope:[sprites_irq_init]  from sprites_irq_init
  [98] return 
  to:@return

void loop()
loop: scope:[loop]  from main::@6
  [99] phi()
  to:loop::@1
loop::@1: scope:[loop]  from loop loop::@5
  [100] sin_idx#11 = phi( loop/0, loop::@5/sin_idx#2 )
  to:loop::@2
loop::@2: scope:[loop]  from loop::@1 loop::@2
  [101] if(*RASTER!=$ff) goto loop::@2
  to:loop::@3
loop::@3: scope:[loop]  from loop::@2
  [102] loop::idx#0 = sin_idx#11
  to:loop::@4
loop::@4: scope:[loop]  from loop::@3 loop::@4
  [103] loop::idx#2 = phi( loop::@3/loop::idx#0, loop::@4/loop::idx#1 )
  [103] loop::s#2 = phi( loop::@3/4, loop::@4/loop::s#1 )
  [104] loop::$1 = loop::s#2 << 1
  [105] SPRITES_YPOS[loop::$1] = SIN[loop::idx#2]
  [106] loop::idx#1 = loop::idx#2 + $a
  [107] loop::s#1 = ++ loop::s#2
  [108] if(loop::s#1!=8) goto loop::@4
  to:loop::@5
loop::@5: scope:[loop]  from loop::@4
  [109] sin_idx#2 = ++ sin_idx#11
  to:loop::@1
