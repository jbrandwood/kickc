__constant char * const BG_COLOR = (char *) 53281
__constant char * const BG_COLOR1 = (char *) 53282
__constant char * const BG_COLOR2 = (char *) 53283
__constant char * const BG_COLOR3 = (char *) 53284
__constant const char BLACK = 0
__constant const char BLUE = 6
__constant char * const BORDER_COLOR = (char *) 53280
__constant char * const D018 = (char *) 53272
__constant const char GREEN = 5
__constant const char RED = 2
__constant char * const SPRITES_COLOR = (char *) 53287
__constant char * const SPRITES_ENABLE = (char *) 53269
__constant char * const SPRITES_EXPAND_X = (char *) 53277
__constant char * const SPRITES_EXPAND_Y = (char *) 53271
__constant char * const SPRITES_MC = (char *) 53276
__constant char * const SPRITES_XMSB = (char *) 53264
__constant const char WHITE = 1
__constant const char YELLOW = 7
__constant char * const charset = (char *) 8192
__constant char * const colors = (char *) 55296
void draw_block(char tileno , char x , char y , char color)
unsigned int draw_block::$10 // zp[2]:20 1001.0
char *draw_block::$11 // zp[2]:6 2002.0
char *draw_block::$12 // zp[2]:8 2002.0
char *draw_block::$13 // zp[2]:12 2002.0
char *draw_block::$14 // zp[2]:10 2002.0
char *draw_block::$15 // zp[2]:16 2002.0
char *draw_block::$16 // zp[2]:14 2002.0
char *draw_block::$17 // zp[2]:18 2002.0
char *draw_block::$18 // zp[2]:20 2002.0
unsigned int draw_block::$6 // zp[2]:10 1001.0
unsigned int draw_block::$8 // zp[2]:14 1001.0
char draw_block::color
char draw_block::drawtile
char draw_block::drawtile#0 // reg byte x 1001.0
char draw_block::tileno
char draw_block::tileno#0 // reg byte y 367.33333333333337
char draw_block::tileno#1 // reg byte y 250.25
char draw_block::x
char draw_block::x#0 // reg byte x 367.33333333333337
unsigned int draw_block::x1
unsigned int draw_block::x1#0 // x1 zp[2]:20 333.6666666666667
char draw_block::y
char draw_block::y#0 // y zp[1]:3 367.33333333333337
char draw_block::y#1 // reg byte a 2002.0
unsigned int draw_block::z
unsigned int draw_block::z#0 // z zp[2]:4 2002.0
unsigned int draw_block::z#1 // z_1 zp[2]:20 375.375
void init()
char *init::toD0181_gfx
char init::toD0181_return
__constant char init::toD0181_return#0 = byte1 (unsigned int)screen&$3fff*4|byte1 (unsigned int)charset/4&$f // toD0181_return
char *init::toD0181_screen
void init_sprites()
__constant char * const level_address = (char *) 12288
void main()
char main::tile
char main::tile#0 // reg byte y 202.0
char main::x
char main::x#1 // x zp[1]:2 22.0
char main::x#2 // x zp[1]:2 21.363636363636363
char main::y
char main::y#1 // y zp[1]:3 202.0
char main::y#2 // y zp[1]:3 63.125
char main::z
char main::z#0 // reg byte a 202.0
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 143.0
char *memset::dst
char *memset::dst#1 // dst zp[2]:4 2002.0
char *memset::dst#2 // dst zp[2]:4 1368.3333333333335
char *memset::dst#4 // dst zp[2]:4 202.0
char *memset::end
char *memset::end#0 // end zp[2]:20 183.66666666666669
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:4
unsigned int mul8u(char a , char b)
char mul8u::$1 // reg byte a 2.0000002E7
char mul8u::a
char mul8u::a#0 // reg byte x 1.0000001E7
char mul8u::a#1 // reg byte x 5501.0
char mul8u::a#2 // reg byte x 6668334.166666666
char mul8u::b
__constant char mul8u::b#0 = $28 // b
unsigned int mul8u::mb
unsigned int mul8u::mb#1 // mb zp[2]:6 2.0000002E7
unsigned int mul8u::mb#2 // mb zp[2]:6 4285714.714285715
unsigned int mul8u::res
unsigned int mul8u::res#1 // res zp[2]:4 2.0000002E7
unsigned int mul8u::res#2 // res zp[2]:4 5000167.333333333
unsigned int mul8u::res#6 // res zp[2]:4 1.0000001E7
unsigned int mul8u::return
unsigned int mul8u::return#2 // return zp[2]:4 2002.0
__constant char * const screen = (char *) 1024
__constant char * const tileset = (char *) 10240

zp[1]:2 [ main::x#2 main::x#1 ]
zp[1]:3 [ main::y#2 main::y#1 draw_block::y#0 ]
reg byte x [ memset::c#4 ]
reg byte x [ mul8u::a#2 mul8u::a#1 mul8u::a#0 ]
zp[2]:4 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 draw_block::z#0 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte a [ main::z#0 ]
reg byte y [ main::tile#0 ]
reg byte y [ draw_block::tileno#0 ]
reg byte x [ draw_block::x#0 ]
reg byte y [ draw_block::tileno#1 ]
reg byte a [ draw_block::y#1 ]
reg byte x [ draw_block::drawtile#0 ]
zp[2]:6 [ draw_block::$11 mul8u::mb#2 mul8u::mb#1 ]
zp[2]:8 [ draw_block::$12 ]
zp[2]:10 [ draw_block::$6 draw_block::$14 ]
zp[2]:12 [ draw_block::$13 ]
zp[2]:14 [ draw_block::$8 draw_block::$16 ]
zp[2]:16 [ draw_block::$15 ]
zp[2]:18 [ draw_block::$17 ]
zp[2]:20 [ memset::end#0 draw_block::x1#0 draw_block::z#1 draw_block::$10 draw_block::$18 ]
reg byte a [ mul8u::$1 ]
