@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::y#2 ← phi( main/(byte) 5 main::@3/(byte) main::y#1 )
  [6] (word~) main::$0 ← (word)(byte) main::y#2
  [7] (word~) main::$6 ← (word~) main::$0 << (byte) 2
  [8] (word~) main::$7 ← (word~) main::$6 + (word~) main::$0
  [9] (word~) main::$1 ← (word~) main::$7 << (byte) 3
  [10] (byte*) main::line#0 ← (const byte*) SCREEN + (word~) main::$1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [11] (byte) main::x#2 ← phi( main::@1/(byte) 5 main::@2/(byte) main::x#1 )
  [12] (byte~) main::$3 ← (byte) main::x#2 + (byte) main::y#2
  [13] *((byte*) main::line#0 + (byte) main::x#2) ← (byte~) main::$3
  [14] (byte) main::x#1 ← ++ (byte) main::x#2
  [15] if((byte) main::x#1!=(byte) $10) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  [16] (byte) main::y#1 ← ++ (byte) main::y#2
  [17] if((byte) main::y#1!=(byte) $10) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [18] return 
  to:@return
