@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@2
main::@2: scope:[main]  from main
  [5] *((const byte*) SCREEN#0) ← (byte) '0'
  to:main::@1
main::@1: scope:[main]  from main::@2
  [6] *((const byte*) SCREEN#0+(byte) 1) ← (byte) ' '
  to:main::@5
main::@5: scope:[main]  from main::@1 main::@3
  [7] (byte) main::idx#18 ← phi( main::@3/(byte) main::idx#4 main::@1/(byte) 2 )
  [7] (byte) main::i#6 ← phi( main::@3/(byte) main::i#1 main::@1/(byte) 0 )
  [8] *((const byte*) SCREEN#0 + (byte) main::idx#18) ← (byte) '0'
  [9] (byte) main::idx#4 ← ++ (byte) main::idx#18
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@5
  [10] (byte) main::i#5 ← phi( main::@3/(byte) main::i#1 main::@5/(byte) main::i#6 )
  [11] (byte) main::i#1 ← ++ (byte) main::i#5
  [12] if((byte) main::i#1!=(byte) 3) goto main::@3
  to:main::@6
main::@6: scope:[main]  from main::@4
  [13] *((const byte*) SCREEN#0 + (byte) main::idx#4) ← (byte) ' '
  [14] (byte) main::idx#21 ← ++ (byte) main::idx#4
  to:main::@9
main::@9: scope:[main]  from main::@6 main::@7
  [15] (byte) main::idx#20 ← phi( main::@7/(byte) main::idx#6 main::@6/(byte) main::idx#21 )
  [15] (word) main::i1#6 ← phi( main::@7/(word) main::i1#1 main::@6/(word) 0 )
  [16] *((const byte*) SCREEN#0 + (byte) main::idx#20) ← (byte) '0'
  [17] (byte) main::idx#6 ← ++ (byte) main::idx#20
  to:main::@8
main::@8: scope:[main]  from main::@7 main::@9
  [18] (word) main::i1#5 ← phi( main::@9/(word) main::i1#6 main::@7/(word) main::i1#1 )
  [19] (word) main::i1#1 ← ++ (word) main::i1#5
  [20] if((word) main::i1#1!=(byte) 3) goto main::@7
  to:main::@return
main::@return: scope:[main]  from main::@8
  [21] return 
  to:@return
main::@7: scope:[main]  from main::@8
  [22] if((byte) 0!=(word) main::i1#1) goto main::@8
  to:main::@9
main::@3: scope:[main]  from main::@4
  [23] if((byte) 0!=(byte) main::i#1) goto main::@4
  to:main::@5
