
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] col1 = 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [2] phi()
  [3] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [4] return 
  to:@return

interrupt(KERNEL_MIN) void irq()
irq: scope:[irq]  from
  [5] *IRQ_STATUS = 1
  asm { lda$dc0d  }
  [7] *(SCREEN+$28) = col1
  [8] col1 = ++ col1
  to:irq::@return
irq::@return: scope:[irq]  from irq
  [9] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [10] *KERNEL_IRQ = &irq
  to:main::@1
main::@1: scope:[main]  from main main::@5 main::@6
  [11] main::x#6 = phi( main/0, main::@6/main::x#1, main::@5/0 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@4
  [12] main::y#4 = phi( main::@1/0, main::@4/main::y#1 )
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@3
  [13] main::a#2 = phi( main::@2/0, main::@3/main::a#1 )
  [14] main::$0 = main::a#2 + main::y#4
  [15] SCREEN[main::x#6] = main::$0
  [16] main::a#1 = ++ main::a#2
  [17] if(main::a#1!=$b) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  [18] main::y#1 = ++ main::y#4
  [19] if(main::y#1!=$b) goto main::@2
  to:main::@5
main::@5: scope:[main]  from main::@4
  [20] main::x#1 = ++ main::x#6
  [21] if(main::x#1!=$b) goto main::@6
  to:main::@1
main::@6: scope:[main]  from main::@5
  [22] phi()
  to:main::@1
