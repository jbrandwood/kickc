__constant struct MOS6526_CIA * const CIA1 = (struct MOS6526_CIA *) 56320
__constant char * const COLORRAM = (char *) 55296
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant const char LIGHT_BLUE = $e
__constant char OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
__constant char OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = 8
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = $b
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = $a
__constant char OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = 9
__constant char OFFSET_STRUCT_TIME_OF_DAY_HOURS = 3
__constant char OFFSET_STRUCT_TIME_OF_DAY_MIN = 2
__constant char OFFSET_STRUCT_TIME_OF_DAY_SEC = 1
__loadstore struct TIME_OF_DAY TOD_ZERO = { TENTHS: 0, SEC: 0, MIN: 0, HOURS: 0 } // mem[4]
void __start()
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte x 11.0
char conio_c64_init::line#2 // reg byte x 22.0
__loadstore char conio_cursor_x // zp[1]:6 348860.67441860464
__loadstore char conio_cursor_y // zp[1]:7 5423745.898305085
__loadstore char *conio_line_color // zp[2]:10 4333353.098039215
__loadstore char *conio_line_text // zp[2]:8 4169830.3396226414
void cputc(char c)
char cputc::c
char cputc::c#0 // reg byte a 1050001.5
void cputln()
void cputs(const char *s)
char cputs::c
char cputs::c#1 // reg byte a 100001.0
const char *cputs::s
const char *cputs::s#0 // s zp[2]:2 50000.5
const char *cputs::s#2 // s zp[2]:2 150001.5
void cscroll()
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:18 2002.0
char *gotoxy::$6 // zp[2]:14 2002.0
unsigned int gotoxy::$7 // zp[2]:14 1501.5
unsigned int gotoxy::$8 // zp[2]:16 2002.0
unsigned int gotoxy::$9 // zp[2]:14 2002.0
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:14 1001.0
char gotoxy::x
char gotoxy::y
char gotoxy::y#2 // reg byte x 22.0
char gotoxy::y#4 // reg byte x 671.0
char gotoxy::y#5 // reg byte x 667.3333333333334
void main()
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:23
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:23 1.000000000001E12
char *memcpy::dst#2 // dst zp[2]:23 1.0003333333346667E12
char *memcpy::dst#4 // dst zp[2]:23 2.000000002E9
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:4
char *memcpy::src
char *memcpy::src#1 // src zp[2]:4 2.000000000002E12
char *memcpy::src#2 // src zp[2]:4 1.00025000000125E12
char *memcpy::src#4 // src zp[2]:4 1.000000001E9
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:21 1.2512500000025E11
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#4 // reg byte x 1.428571428572857E11
char *memset::dst
char *memset::dst#1 // dst zp[2]:4 2.000000000002E12
char *memset::dst#2 // dst zp[2]:4 1.3336666666683335E12
char *memset::dst#4 // dst zp[2]:4 2.000000002E9
char *memset::end
char *memset::end#0 // end zp[2]:23 1.668333333336667E11
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:4
__constant char tod_buffer[] = "00:00:00:00"
void tod_init(char tod_TENTHS , char tod_SEC , char tod_MIN , char tod_HOURS)
struct TIME_OF_DAY tod_init::tod
char tod_init::tod_HOURS
char tod_init::tod_HOURS#0 // reg byte y 37.33333333333333
char tod_init::tod_MIN
char tod_init::tod_MIN#0 // reg byte x 22.4
char tod_init::tod_SEC
char tod_init::tod_SEC#0 // tod_SEC zp[1]:13 16.0
char tod_init::tod_TENTHS
char tod_init::tod_TENTHS#0 // tod_TENTHS zp[1]:12 12.444444444444443
struct TIME_OF_DAY tod_read()
char tod_read::hours
char tod_read::mins
struct TIME_OF_DAY tod_read::return
char tod_read::return_HOURS
char tod_read::return_HOURS#0 // return_HOURS zp[1]:20 122.44444444444446
char tod_read::return_HOURS#1 // reg byte a 50.5
char tod_read::return_MIN
char tod_read::return_MIN#0 // reg byte a 157.42857142857142
char tod_read::return_MIN#1 // return_MIN zp[1]:12 50.5
char tod_read::return_SEC
char tod_read::return_SEC#0 // reg byte x 220.39999999999998
char tod_read::return_SEC#1 // reg byte x 50.5
char tod_read::return_TENTHS
char tod_read::return_TENTHS#0 // reg byte y 367.33333333333337
char tod_read::return_TENTHS#1 // reg byte y 50.5
char tod_read::secs
char tod_read::tenths
char tod_read::tod_HOURS
char tod_read::tod_MIN
char tod_read::tod_SEC
char tod_read::tod_TENTHS
char * tod_str(char tod_TENTHS , char tod_SEC , char tod_MIN , char tod_HOURS)
char tod_str::$0 // reg byte a 2002.0
char tod_str::$1 // reg byte a 2002.0
char tod_str::$10 // reg byte a 2002.0
char tod_str::$11 // reg byte a 2002.0
char tod_str::$12 // reg byte a 2002.0
char tod_str::$13 // reg byte a 2002.0
char tod_str::$14 // reg byte a 2002.0
char tod_str::$15 // reg byte a 2002.0
char tod_str::$2 // reg byte a 2002.0
char tod_str::$3 // reg byte a 2002.0
char tod_str::$4 // reg byte a 2002.0
char tod_str::$5 // reg byte a 2002.0
char tod_str::$6 // reg byte a 2002.0
char tod_str::$7 // reg byte a 2002.0
char tod_str::$8 // reg byte a 2002.0
char tod_str::$9 // reg byte a 2002.0
char *tod_str::return
struct TIME_OF_DAY tod_str::tod
char tod_str::tod_HOURS
char tod_str::tod_HOURS#0 // reg byte x 525.75
char tod_str::tod_MIN
char tod_str::tod_MIN#0 // reg byte y 191.1818181818182
char tod_str::tod_SEC
char tod_str::tod_SEC#0 // tod_SEC zp[1]:20 116.83333333333334
char tod_str::tod_TENTHS
char tod_str::tod_TENTHS#0 // tod_TENTHS zp[1]:13 84.12

reg byte x [ conio_c64_init::line#2 conio_c64_init::line#0 ]
reg byte x [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#2 ]
zp[2]:2 [ cputs::s#2 cputs::s#0 ]
zp[2]:4 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 ]
zp[1]:6 [ conio_cursor_x ]
zp[1]:7 [ conio_cursor_y ]
zp[2]:8 [ conio_line_text ]
zp[2]:10 [ conio_line_color ]
reg byte x [ tod_init::tod_MIN#0 ]
reg byte y [ tod_init::tod_HOURS#0 ]
reg byte y [ tod_read::return_TENTHS#1 ]
reg byte x [ tod_read::return_SEC#1 ]
zp[1]:12 [ tod_read::return_MIN#1 tod_init::tod_TENTHS#0 ]
reg byte a [ tod_read::return_HOURS#1 ]
zp[1]:13 [ tod_str::tod_TENTHS#0 tod_init::tod_SEC#0 ]
reg byte y [ tod_str::tod_MIN#0 ]
reg byte x [ tod_str::tod_HOURS#0 ]
zp[2]:14 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:16 [ gotoxy::$8 ]
zp[2]:18 [ gotoxy::$5 ]
zp[1]:20 [ tod_read::return_HOURS#0 tod_str::tod_SEC#0 ]
reg byte a [ tod_read::return_MIN#0 ]
reg byte x [ tod_read::return_SEC#0 ]
reg byte y [ tod_read::return_TENTHS#0 ]
reg byte a [ tod_str::$0 ]
reg byte a [ tod_str::$1 ]
reg byte a [ tod_str::$2 ]
reg byte a [ tod_str::$3 ]
reg byte a [ tod_str::$4 ]
reg byte a [ tod_str::$5 ]
reg byte a [ tod_str::$6 ]
reg byte a [ tod_str::$7 ]
reg byte a [ tod_str::$8 ]
reg byte a [ tod_str::$9 ]
reg byte a [ tod_str::$10 ]
reg byte a [ tod_str::$11 ]
reg byte a [ tod_str::$12 ]
reg byte a [ tod_str::$13 ]
reg byte a [ tod_str::$14 ]
reg byte a [ tod_str::$15 ]
reg byte a [ cputs::c#1 ]
reg byte a [ cputc::c#0 ]
zp[2]:21 [ memcpy::src_end#0 ]
zp[2]:23 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
mem[4] [ TOD_ZERO ]
