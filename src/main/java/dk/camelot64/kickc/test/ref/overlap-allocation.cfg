@begin: scope:[]  from
  to:@2
@2: scope:[]  from @begin
  [0] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @2
main: scope:[main]  from @2
  [1] phi() [ ] ( main:0 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@7
  [2] (byte) main::i#2 ← phi( main/(byte/signed byte/word/signed word) 0 main::@7/(byte) main::i#1 ) [ main::i#2 ] ( main:0 [ main::i#2 ] )
  [3] (byte) plot::x#0 ← (byte) main::i#2 [ main::i#2 plot::x#0 ] ( main:0 [ main::i#2 plot::x#0 ] )
  [4] call plot param-assignment [ main::i#2 ] ( main:0 [ main::i#2 ] )
  to:main::@7
main::@7: scope:[main]  from main::@1
  [5] (byte) main::i#1 ← ++ (byte) main::i#2 [ main::i#1 ] ( main:0 [ main::i#1 ] )
  [6] if((byte) main::i#1!=(byte/signed byte/word/signed word) 11) goto main::@1 [ main::i#1 ] ( main:0 [ main::i#1 ] )
  to:main::@2
main::@2: scope:[main]  from main::@7 main::@8
  [7] (byte) main::j#2 ← phi( main::@7/(byte/signed byte/word/signed word) 0 main::@8/(byte) main::j#1 ) [ main::j#2 ] ( main:0 [ main::j#2 ] )
  [8] (byte) plot::x#1 ← (byte) main::j#2 [ main::j#2 plot::x#1 ] ( main:0 [ main::j#2 plot::x#1 ] )
  [9] call plot param-assignment [ main::j#2 ] ( main:0 [ main::j#2 ] )
  to:main::@8
main::@8: scope:[main]  from main::@2
  [10] (byte) main::j#1 ← ++ (byte) main::j#2 [ main::j#1 ] ( main:0 [ main::j#1 ] )
  [11] if((byte) main::j#1!=(byte/signed byte/word/signed word) 11) goto main::@2 [ main::j#1 ] ( main:0 [ main::j#1 ] )
  to:main::@3
main::@3: scope:[main]  from main::@8 main::@9
  [12] (byte) main::k#2 ← phi( main::@8/(byte/signed byte/word/signed word) 0 main::@9/(byte) main::k#1 ) [ main::k#2 ] ( main:0 [ main::k#2 ] )
  [13] (byte) plot::x#2 ← (byte) main::k#2 [ main::k#2 plot::x#2 ] ( main:0 [ main::k#2 plot::x#2 ] )
  [14] call plot param-assignment [ main::k#2 ] ( main:0 [ main::k#2 ] )
  to:main::@9
main::@9: scope:[main]  from main::@3
  [15] (byte) main::k#1 ← ++ (byte) main::k#2 [ main::k#1 ] ( main:0 [ main::k#1 ] )
  [16] if((byte) main::k#1!=(byte/signed byte/word/signed word) 11) goto main::@3 [ main::k#1 ] ( main:0 [ main::k#1 ] )
  to:main::@return
main::@return: scope:[main]  from main::@9
  [17] return  [ ] ( main:0 [ ] )
  to:@return
plot: scope:[plot]  from main::@1 main::@2 main::@3
  [18] (byte) plot::x#3 ← phi( main::@1/(byte) plot::x#0 main::@2/(byte) plot::x#1 main::@3/(byte) plot::x#2 ) [ plot::x#3 ] ( main:0::plot:4 [ main::i#2 plot::x#3 ] main:0::plot:9 [ main::j#2 plot::x#3 ] main:0::plot:14 [ main::k#2 plot::x#3 ] )
  [19] *((const byte*) SCREEN#0 + (byte) plot::x#3) ← (byte) '*' [ ] ( main:0::plot:4 [ main::i#2 ] main:0::plot:9 [ main::j#2 ] main:0::plot:14 [ main::k#2 ] )
  to:plot::@return
plot::@return: scope:[plot]  from plot
  [20] return  [ ] ( main:0::plot:4 [ main::i#2 ] main:0::plot:9 [ main::j#2 ] main:0::plot:14 [ main::k#2 ] )
  to:@return
