Inlined call call __init 

CONTROL FLOW GRAPH SSA

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  memset::c#4 = phi( print_cls/memset::c#0 )
  memset::str#3 = phi( print_cls/memset::str#0 )
  memset::num#1 = phi( print_cls/memset::num#0 )
  memset::$0 = memset::num#1 > 0
  memset::$1 = ! memset::$0
  if(memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  memset::str#1 = phi( memset/memset::str#3, memset::@3/memset::str#4 )
  memset::return#0 = memset::str#1
  to:memset::@return
memset::@2: scope:[memset]  from memset
  memset::c#3 = phi( memset/memset::c#4 )
  memset::num#2 = phi( memset/memset::num#1 )
  memset::str#2 = phi( memset/memset::str#3 )
  memset::$4 = (byte*)memset::str#2
  memset::$2 = memset::$4 + memset::num#2
  memset::end#0 = memset::$2
  memset::dst#0 = ((byte*)) memset::str#2
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  memset::c#2 = phi( memset::@2/memset::c#3, memset::@4/memset::c#1 )
  memset::str#4 = phi( memset::@2/memset::str#2, memset::@4/memset::str#5 )
  memset::end#1 = phi( memset::@2/memset::end#0, memset::@4/memset::end#2 )
  memset::dst#2 = phi( memset::@2/memset::dst#0, memset::@4/memset::dst#1 )
  memset::$3 = memset::dst#2 != memset::end#1
  if(memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  memset::str#5 = phi( memset::@3/memset::str#4 )
  memset::end#2 = phi( memset::@3/memset::end#1 )
  memset::dst#3 = phi( memset::@3/memset::dst#2 )
  memset::c#1 = phi( memset::@3/memset::c#2 )
  *memset::dst#3 = memset::c#1
  memset::dst#1 = ++ memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  memset::return#3 = phi( memset::@1/memset::return#0 )
  memset::return#1 = memset::return#3
  return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from main::@1 main::@11
  print_char_cursor#139 = phi( main::@1/print_char_cursor#22, main::@11/print_char_cursor#32 )
  print_str::str#6 = phi( main::@1/print_str::str#1, main::@11/print_str::str#2 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  print_char_cursor#125 = phi( print_str/print_char_cursor#139, print_str::@3/print_char_cursor#0 )
  print_str::str#3 = phi( print_str/print_str::str#6, print_str::@3/print_str::str#0 )
  print_str::$1 = 0 != *print_str::str#3
  if(print_str::$1) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  print_char_cursor#124 = phi( print_str::@1/print_char_cursor#125 )
  print_str::str#4 = phi( print_str::@1/print_str::str#3 )
  print_char::ch#0 = *print_str::str#4
  call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  print_str::str#5 = phi( print_str::@2/print_str::str#4 )
  print_char_cursor#63 = phi( print_str::@2/print_char_cursor#19 )
  print_char_cursor#0 = print_char_cursor#63
  print_str::str#0 = ++ print_str::str#5
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  print_char_cursor#64 = phi( print_str::@1/print_char_cursor#125 )
  print_char_cursor#1 = print_char_cursor#64
  return 
  to:@return

void print_ln()
print_ln: scope:[print_ln]  from main::@12 main::@2 print_mulf8s127::@6 print_mulf8u127::@6
  print_char_cursor#126 = phi( main::@12/print_char_cursor#33, main::@2/print_char_cursor#23, print_mulf8s127::@6/print_char_cursor#57, print_mulf8u127::@6/print_char_cursor#50 )
  print_line_cursor#65 = phi( main::@12/print_line_cursor#68, main::@2/print_line_cursor#67, print_mulf8s127::@6/print_line_cursor#70, print_mulf8u127::@6/print_line_cursor#69 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  print_char_cursor#65 = phi( print_ln/print_char_cursor#126, print_ln::@1/print_char_cursor#65 )
  print_line_cursor#33 = phi( print_ln/print_line_cursor#65, print_ln::@1/print_line_cursor#0 )
  print_ln::$0 = print_line_cursor#33 + $28
  print_line_cursor#0 = print_ln::$0
  print_ln::$1 = print_line_cursor#0 < print_char_cursor#65
  if(print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  print_line_cursor#34 = phi( print_ln::@1/print_line_cursor#0 )
  print_char_cursor#2 = print_line_cursor#34
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  print_char_cursor#66 = phi( print_ln::@2/print_char_cursor#2 )
  print_line_cursor#35 = phi( print_ln::@2/print_line_cursor#34 )
  print_line_cursor#1 = print_line_cursor#35
  print_char_cursor#3 = print_char_cursor#66
  return 
  to:@return

void print_sint(signed word print_sint::w)
print_sint: scope:[print_sint]  from print_mulf8s127::@5
  print_char_cursor#140 = phi( print_mulf8s127::@5/print_char_cursor#56 )
  print_sint::w#2 = phi( print_mulf8s127::@5/print_sint::w#1 )
  print_sint::$0 = print_sint::w#2 < 0
  if(print_sint::$0) goto print_sint::@1
  to:print_sint::@3
print_sint::@1: scope:[print_sint]  from print_sint
  print_sint::w#5 = phi( print_sint/print_sint::w#2 )
  print_char_cursor#127 = phi( print_sint/print_char_cursor#140 )
  print_char::ch#1 = '-'
  call print_char 
  to:print_sint::@4
print_sint::@4: scope:[print_sint]  from print_sint::@1
  print_sint::w#3 = phi( print_sint::@1/print_sint::w#5 )
  print_char_cursor#67 = phi( print_sint::@1/print_char_cursor#19 )
  print_char_cursor#4 = print_char_cursor#67
  print_sint::$4 = - print_sint::w#3
  print_sint::w#0 = print_sint::$4
  to:print_sint::@2
print_sint::@3: scope:[print_sint]  from print_sint
  print_sint::w#7 = phi( print_sint/print_sint::w#2 )
  print_char_cursor#128 = phi( print_sint/print_char_cursor#140 )
  print_char::ch#2 = ' '
  call print_char 
  to:print_sint::@5
print_sint::@5: scope:[print_sint]  from print_sint::@3
  print_sint::w#6 = phi( print_sint::@3/print_sint::w#7 )
  print_char_cursor#68 = phi( print_sint::@3/print_char_cursor#19 )
  print_char_cursor#5 = print_char_cursor#68
  to:print_sint::@2
print_sint::@2: scope:[print_sint]  from print_sint::@4 print_sint::@5
  print_char_cursor#129 = phi( print_sint::@4/print_char_cursor#4, print_sint::@5/print_char_cursor#5 )
  print_sint::w#4 = phi( print_sint::@4/print_sint::w#0, print_sint::@5/print_sint::w#6 )
  print_uint::w#0 = (word)print_sint::w#4
  call print_uint 
  to:print_sint::@6
print_sint::@6: scope:[print_sint]  from print_sint::@2
  print_char_cursor#69 = phi( print_sint::@2/print_char_cursor#14 )
  print_char_cursor#6 = print_char_cursor#69
  to:print_sint::@return
print_sint::@return: scope:[print_sint]  from print_sint::@6
  print_char_cursor#70 = phi( print_sint::@6/print_char_cursor#6 )
  print_char_cursor#7 = print_char_cursor#70
  return 
  to:@return

void print_schar(signed byte print_schar::b)
print_schar: scope:[print_schar]  from print_mulf8s127::@1 print_mulf8s127::@3
  print_char_cursor#141 = phi( print_mulf8s127::@1/print_char_cursor#137, print_mulf8s127::@3/print_char_cursor#54 )
  print_schar::b#3 = phi( print_mulf8s127::@1/print_schar::b#1, print_mulf8s127::@3/print_schar::b#2 )
  print_schar::$0 = print_schar::b#3 < 0
  if(print_schar::$0) goto print_schar::@1
  to:print_schar::@3
print_schar::@1: scope:[print_schar]  from print_schar
  print_schar::b#6 = phi( print_schar/print_schar::b#3 )
  print_char_cursor#130 = phi( print_schar/print_char_cursor#141 )
  print_char::ch#3 = '-'
  call print_char 
  to:print_schar::@4
print_schar::@4: scope:[print_schar]  from print_schar::@1
  print_schar::b#4 = phi( print_schar::@1/print_schar::b#6 )
  print_char_cursor#71 = phi( print_schar::@1/print_char_cursor#19 )
  print_char_cursor#8 = print_char_cursor#71
  print_schar::$4 = - print_schar::b#4
  print_schar::b#0 = print_schar::$4
  to:print_schar::@2
print_schar::@3: scope:[print_schar]  from print_schar
  print_schar::b#8 = phi( print_schar/print_schar::b#3 )
  print_char_cursor#131 = phi( print_schar/print_char_cursor#141 )
  print_char::ch#4 = ' '
  call print_char 
  to:print_schar::@5
print_schar::@5: scope:[print_schar]  from print_schar::@3
  print_schar::b#7 = phi( print_schar::@3/print_schar::b#8 )
  print_char_cursor#72 = phi( print_schar::@3/print_char_cursor#19 )
  print_char_cursor#9 = print_char_cursor#72
  to:print_schar::@2
print_schar::@2: scope:[print_schar]  from print_schar::@4 print_schar::@5
  print_char_cursor#132 = phi( print_schar::@4/print_char_cursor#8, print_schar::@5/print_char_cursor#9 )
  print_schar::b#5 = phi( print_schar::@4/print_schar::b#0, print_schar::@5/print_schar::b#7 )
  print_uchar::b#0 = (byte)print_schar::b#5
  call print_uchar 
  to:print_schar::@6
print_schar::@6: scope:[print_schar]  from print_schar::@2
  print_char_cursor#73 = phi( print_schar::@2/print_char_cursor#17 )
  print_char_cursor#10 = print_char_cursor#73
  to:print_schar::@return
print_schar::@return: scope:[print_schar]  from print_schar::@6
  print_char_cursor#74 = phi( print_schar::@6/print_char_cursor#10 )
  print_char_cursor#11 = print_char_cursor#74
  return 
  to:@return

void print_uint(word print_uint::w)
print_uint: scope:[print_uint]  from print_mulf8u127::@5 print_sint::@2
  print_char_cursor#133 = phi( print_mulf8u127::@5/print_char_cursor#49, print_sint::@2/print_char_cursor#129 )
  print_uint::w#2 = phi( print_mulf8u127::@5/print_uint::w#1, print_sint::@2/print_uint::w#0 )
  print_uint::$0 = > print_uint::w#2
  print_uchar::b#1 = print_uint::$0
  call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  print_uint::w#3 = phi( print_uint/print_uint::w#2 )
  print_char_cursor#75 = phi( print_uint/print_char_cursor#17 )
  print_char_cursor#12 = print_char_cursor#75
  print_uint::$2 = < print_uint::w#3
  print_uchar::b#2 = print_uint::$2
  call print_uchar 
  to:print_uint::@2
print_uint::@2: scope:[print_uint]  from print_uint::@1
  print_char_cursor#76 = phi( print_uint::@1/print_char_cursor#17 )
  print_char_cursor#13 = print_char_cursor#76
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@2
  print_char_cursor#77 = phi( print_uint::@2/print_char_cursor#13 )
  print_char_cursor#14 = print_char_cursor#77
  return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from print_mulf8u127::@1 print_mulf8u127::@3 print_schar::@2 print_uint print_uint::@1
  print_char_cursor#134 = phi( print_mulf8u127::@1/print_char_cursor#136, print_mulf8u127::@3/print_char_cursor#47, print_schar::@2/print_char_cursor#132, print_uint/print_char_cursor#133, print_uint::@1/print_char_cursor#12 )
  print_uchar::b#5 = phi( print_mulf8u127::@1/print_uchar::b#3, print_mulf8u127::@3/print_uchar::b#4, print_schar::@2/print_uchar::b#0, print_uint/print_uchar::b#1, print_uint::@1/print_uchar::b#2 )
  print_uchar::$0 = print_uchar::b#5 >> 4
  print_char::ch#5 = print_hextab[print_uchar::$0]
  call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  print_uchar::b#6 = phi( print_uchar/print_uchar::b#5 )
  print_char_cursor#78 = phi( print_uchar/print_char_cursor#19 )
  print_char_cursor#15 = print_char_cursor#78
  print_uchar::$2 = print_uchar::b#6 & $f
  print_char::ch#6 = print_hextab[print_uchar::$2]
  call print_char 
  to:print_uchar::@2
print_uchar::@2: scope:[print_uchar]  from print_uchar::@1
  print_char_cursor#79 = phi( print_uchar::@1/print_char_cursor#19 )
  print_char_cursor#16 = print_char_cursor#79
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@2
  print_char_cursor#80 = phi( print_uchar::@2/print_char_cursor#16 )
  print_char_cursor#17 = print_char_cursor#80
  return 
  to:@return

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_mulf8s127::@2 print_mulf8s127::@4 print_mulf8u127::@2 print_mulf8u127::@4 print_schar::@1 print_schar::@3 print_sint::@1 print_sint::@3 print_str::@2 print_uchar print_uchar::@1
  print_char_cursor#81 = phi( print_mulf8s127::@2/print_char_cursor#53, print_mulf8s127::@4/print_char_cursor#55, print_mulf8u127::@2/print_char_cursor#46, print_mulf8u127::@4/print_char_cursor#48, print_schar::@1/print_char_cursor#130, print_schar::@3/print_char_cursor#131, print_sint::@1/print_char_cursor#127, print_sint::@3/print_char_cursor#128, print_str::@2/print_char_cursor#124, print_uchar/print_char_cursor#134, print_uchar::@1/print_char_cursor#15 )
  print_char::ch#11 = phi( print_mulf8s127::@2/print_char::ch#9, print_mulf8s127::@4/print_char::ch#10, print_mulf8u127::@2/print_char::ch#7, print_mulf8u127::@4/print_char::ch#8, print_schar::@1/print_char::ch#3, print_schar::@3/print_char::ch#4, print_sint::@1/print_char::ch#1, print_sint::@3/print_char::ch#2, print_str::@2/print_char::ch#0, print_uchar/print_char::ch#5, print_uchar::@1/print_char::ch#6 )
  *print_char_cursor#81 = print_char::ch#11
  print_char_cursor#18 = ++ print_char_cursor#81
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  print_char_cursor#82 = phi( print_char/print_char_cursor#18 )
  print_char_cursor#19 = print_char_cursor#82
  return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main
  print_screen#2 = phi( main/print_screen#5 )
  memset::str#0 = (void*)print_screen#2
  memset::c#0 = ' '
  memset::num#0 = $3e8
  call memset 
  memset::return#2 = memset::return#1
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls
  print_screen#3 = phi( print_cls/print_screen#2 )
  print_line_cursor#2 = print_screen#3
  print_char_cursor#20 = print_line_cursor#2
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  print_char_cursor#83 = phi( print_cls::@1/print_char_cursor#20 )
  print_line_cursor#36 = phi( print_cls::@1/print_line_cursor#2 )
  print_line_cursor#3 = print_line_cursor#36
  print_char_cursor#21 = print_char_cursor#83
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  print_char_cursor#135 = phi( __start::@1/print_char_cursor#138 )
  print_line_cursor#66 = phi( __start::@1/print_line_cursor#71 )
  print_screen#5 = phi( __start::@1/print_screen#7 )
  call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  print_char_cursor#84 = phi( main/print_char_cursor#21 )
  print_line_cursor#37 = phi( main/print_line_cursor#3 )
  print_line_cursor#4 = print_line_cursor#37
  print_char_cursor#22 = print_char_cursor#84
  print_str::str#1 = main::str
  call print_str 
  to:main::@2
main::@2: scope:[main]  from main::@1
  print_line_cursor#67 = phi( main::@1/print_line_cursor#4 )
  print_char_cursor#85 = phi( main::@1/print_char_cursor#1 )
  print_char_cursor#23 = print_char_cursor#85
  call print_ln 
  to:main::@3
main::@3: scope:[main]  from main::@2
  print_char_cursor#86 = phi( main::@2/print_char_cursor#3 )
  print_line_cursor#38 = phi( main::@2/print_line_cursor#1 )
  print_line_cursor#5 = print_line_cursor#38
  print_char_cursor#24 = print_char_cursor#86
  print_mulf8u127::a#0 = 0
  print_mulf8u127::b#0 = 0
  call print_mulf8u127 
  to:main::@4
main::@4: scope:[main]  from main::@3
  print_line_cursor#39 = phi( main::@3/print_line_cursor#27 )
  print_char_cursor#87 = phi( main::@3/print_char_cursor#52 )
  print_char_cursor#25 = print_char_cursor#87
  print_line_cursor#6 = print_line_cursor#39
  print_mulf8u127::a#1 = $7f
  print_mulf8u127::b#1 = $7f
  call print_mulf8u127 
  to:main::@5
main::@5: scope:[main]  from main::@4
  print_line_cursor#40 = phi( main::@4/print_line_cursor#27 )
  print_char_cursor#88 = phi( main::@4/print_char_cursor#52 )
  print_char_cursor#26 = print_char_cursor#88
  print_line_cursor#7 = print_line_cursor#40
  print_mulf8u127::a#2 = $40
  print_mulf8u127::b#2 = $40
  call print_mulf8u127 
  to:main::@6
main::@6: scope:[main]  from main::@5
  print_line_cursor#41 = phi( main::@5/print_line_cursor#27 )
  print_char_cursor#89 = phi( main::@5/print_char_cursor#52 )
  print_char_cursor#27 = print_char_cursor#89
  print_line_cursor#8 = print_line_cursor#41
  print_mulf8u127::a#3 = $40
  print_mulf8u127::b#3 = $7f
  call print_mulf8u127 
  to:main::@7
main::@7: scope:[main]  from main::@6
  print_line_cursor#42 = phi( main::@6/print_line_cursor#27 )
  print_char_cursor#90 = phi( main::@6/print_char_cursor#52 )
  print_char_cursor#28 = print_char_cursor#90
  print_line_cursor#9 = print_line_cursor#42
  print_mulf8u127::a#4 = $40
  print_mulf8u127::b#4 = $c0
  call print_mulf8u127 
  to:main::@8
main::@8: scope:[main]  from main::@7
  print_line_cursor#43 = phi( main::@7/print_line_cursor#27 )
  print_char_cursor#91 = phi( main::@7/print_char_cursor#52 )
  print_char_cursor#29 = print_char_cursor#91
  print_line_cursor#10 = print_line_cursor#43
  print_mulf8u127::a#5 = $ff
  print_mulf8u127::b#5 = $7f
  call print_mulf8u127 
  to:main::@9
main::@9: scope:[main]  from main::@8
  print_line_cursor#44 = phi( main::@8/print_line_cursor#27 )
  print_char_cursor#92 = phi( main::@8/print_char_cursor#52 )
  print_char_cursor#30 = print_char_cursor#92
  print_line_cursor#11 = print_line_cursor#44
  print_mulf8u127::a#6 = $c0
  print_mulf8u127::b#6 = $c0
  call print_mulf8u127 
  to:main::@10
main::@10: scope:[main]  from main::@9
  print_line_cursor#45 = phi( main::@9/print_line_cursor#27 )
  print_char_cursor#93 = phi( main::@9/print_char_cursor#52 )
  print_char_cursor#31 = print_char_cursor#93
  print_line_cursor#12 = print_line_cursor#45
  print_mulf8u127::a#7 = $ff
  print_mulf8u127::b#7 = $ff
  call print_mulf8u127 
  to:main::@11
main::@11: scope:[main]  from main::@10
  print_line_cursor#46 = phi( main::@10/print_line_cursor#27 )
  print_char_cursor#94 = phi( main::@10/print_char_cursor#52 )
  print_char_cursor#32 = print_char_cursor#94
  print_line_cursor#13 = print_line_cursor#46
  print_str::str#2 = main::str1
  call print_str 
  to:main::@12
main::@12: scope:[main]  from main::@11
  print_line_cursor#68 = phi( main::@11/print_line_cursor#13 )
  print_char_cursor#95 = phi( main::@11/print_char_cursor#1 )
  print_char_cursor#33 = print_char_cursor#95
  call print_ln 
  to:main::@13
main::@13: scope:[main]  from main::@12
  print_char_cursor#96 = phi( main::@12/print_char_cursor#3 )
  print_line_cursor#47 = phi( main::@12/print_line_cursor#1 )
  print_line_cursor#14 = print_line_cursor#47
  print_char_cursor#34 = print_char_cursor#96
  print_mulf8s127::a#0 = 0
  print_mulf8s127::b#0 = 0
  call print_mulf8s127 
  to:main::@14
main::@14: scope:[main]  from main::@13
  print_line_cursor#48 = phi( main::@13/print_line_cursor#29 )
  print_char_cursor#97 = phi( main::@13/print_char_cursor#59 )
  print_char_cursor#35 = print_char_cursor#97
  print_line_cursor#15 = print_line_cursor#48
  print_mulf8s127::a#1 = $40
  print_mulf8s127::b#1 = $40
  call print_mulf8s127 
  to:main::@15
main::@15: scope:[main]  from main::@14
  print_line_cursor#49 = phi( main::@14/print_line_cursor#29 )
  print_char_cursor#98 = phi( main::@14/print_char_cursor#59 )
  print_char_cursor#36 = print_char_cursor#98
  print_line_cursor#16 = print_line_cursor#49
  print_mulf8s127::a#2 = $40
  print_mulf8s127::b#2 = $7f
  call print_mulf8s127 
  to:main::@16
main::@16: scope:[main]  from main::@15
  print_line_cursor#50 = phi( main::@15/print_line_cursor#29 )
  print_char_cursor#99 = phi( main::@15/print_char_cursor#59 )
  print_char_cursor#37 = print_char_cursor#99
  print_line_cursor#17 = print_line_cursor#50
  print_mulf8s127::a#3 = -$40
  print_mulf8s127::b#3 = $40
  call print_mulf8s127 
  to:main::@17
main::@17: scope:[main]  from main::@16
  print_line_cursor#51 = phi( main::@16/print_line_cursor#29 )
  print_char_cursor#100 = phi( main::@16/print_char_cursor#59 )
  print_char_cursor#38 = print_char_cursor#100
  print_line_cursor#18 = print_line_cursor#51
  print_mulf8s127::a#4 = $40
  print_mulf8s127::b#4 = -$40
  call print_mulf8s127 
  to:main::@18
main::@18: scope:[main]  from main::@17
  print_line_cursor#52 = phi( main::@17/print_line_cursor#29 )
  print_char_cursor#101 = phi( main::@17/print_char_cursor#59 )
  print_char_cursor#39 = print_char_cursor#101
  print_line_cursor#19 = print_line_cursor#52
  print_mulf8s127::a#5 = -$40
  print_mulf8s127::b#5 = -$40
  call print_mulf8s127 
  to:main::@19
main::@19: scope:[main]  from main::@18
  print_line_cursor#53 = phi( main::@18/print_line_cursor#29 )
  print_char_cursor#102 = phi( main::@18/print_char_cursor#59 )
  print_char_cursor#40 = print_char_cursor#102
  print_line_cursor#20 = print_line_cursor#53
  print_mulf8s127::a#6 = $7f
  print_mulf8s127::b#6 = $7f
  call print_mulf8s127 
  to:main::@20
main::@20: scope:[main]  from main::@19
  print_line_cursor#54 = phi( main::@19/print_line_cursor#29 )
  print_char_cursor#103 = phi( main::@19/print_char_cursor#59 )
  print_char_cursor#41 = print_char_cursor#103
  print_line_cursor#21 = print_line_cursor#54
  print_mulf8s127::a#7 = -$7f
  print_mulf8s127::b#7 = $7f
  call print_mulf8s127 
  to:main::@21
main::@21: scope:[main]  from main::@20
  print_line_cursor#55 = phi( main::@20/print_line_cursor#29 )
  print_char_cursor#104 = phi( main::@20/print_char_cursor#59 )
  print_char_cursor#42 = print_char_cursor#104
  print_line_cursor#22 = print_line_cursor#55
  print_mulf8s127::a#8 = $7f
  print_mulf8s127::b#8 = -$7f
  call print_mulf8s127 
  to:main::@22
main::@22: scope:[main]  from main::@21
  print_line_cursor#56 = phi( main::@21/print_line_cursor#29 )
  print_char_cursor#105 = phi( main::@21/print_char_cursor#59 )
  print_char_cursor#43 = print_char_cursor#105
  print_line_cursor#23 = print_line_cursor#56
  print_mulf8s127::a#9 = -$7f
  print_mulf8s127::b#9 = -$7f
  call print_mulf8s127 
  to:main::@23
main::@23: scope:[main]  from main::@22
  print_line_cursor#57 = phi( main::@22/print_line_cursor#29 )
  print_char_cursor#106 = phi( main::@22/print_char_cursor#59 )
  print_char_cursor#44 = print_char_cursor#106
  print_line_cursor#24 = print_line_cursor#57
  to:main::@return
main::@return: scope:[main]  from main::@23
  print_char_cursor#107 = phi( main::@23/print_char_cursor#44 )
  print_line_cursor#58 = phi( main::@23/print_line_cursor#24 )
  print_line_cursor#25 = print_line_cursor#58
  print_char_cursor#45 = print_char_cursor#107
  return 
  to:@return

void print_mulf8u127(byte print_mulf8u127::a , byte print_mulf8u127::b)
print_mulf8u127: scope:[print_mulf8u127]  from main::@10 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  print_line_cursor#82 = phi( main::@10/print_line_cursor#12, main::@3/print_line_cursor#5, main::@4/print_line_cursor#6, main::@5/print_line_cursor#7, main::@6/print_line_cursor#8, main::@7/print_line_cursor#9, main::@8/print_line_cursor#10, main::@9/print_line_cursor#11 )
  print_char_cursor#142 = phi( main::@10/print_char_cursor#31, main::@3/print_char_cursor#24, main::@4/print_char_cursor#25, main::@5/print_char_cursor#26, main::@6/print_char_cursor#27, main::@7/print_char_cursor#28, main::@8/print_char_cursor#29, main::@9/print_char_cursor#30 )
  print_mulf8u127::b#8 = phi( main::@10/print_mulf8u127::b#7, main::@3/print_mulf8u127::b#0, main::@4/print_mulf8u127::b#1, main::@5/print_mulf8u127::b#2, main::@6/print_mulf8u127::b#3, main::@7/print_mulf8u127::b#4, main::@8/print_mulf8u127::b#5, main::@9/print_mulf8u127::b#6 )
  print_mulf8u127::a#8 = phi( main::@10/print_mulf8u127::a#7, main::@3/print_mulf8u127::a#0, main::@4/print_mulf8u127::a#1, main::@5/print_mulf8u127::a#2, main::@6/print_mulf8u127::a#3, main::@7/print_mulf8u127::a#4, main::@8/print_mulf8u127::a#5, main::@9/print_mulf8u127::a#6 )
  mulf8u127::a#0 = print_mulf8u127::a#8
  mulf8u127::b#0 = print_mulf8u127::b#8
  call mulf8u127 
  mulf8u127::return#0 = mulf8u127::return#2
  to:print_mulf8u127::@1
print_mulf8u127::@1: scope:[print_mulf8u127]  from print_mulf8u127
  print_line_cursor#80 = phi( print_mulf8u127/print_line_cursor#82 )
  print_mulf8u127::b#11 = phi( print_mulf8u127/print_mulf8u127::b#8 )
  print_char_cursor#136 = phi( print_mulf8u127/print_char_cursor#142 )
  print_mulf8u127::a#9 = phi( print_mulf8u127/print_mulf8u127::a#8 )
  mulf8u127::return#4 = phi( print_mulf8u127/mulf8u127::return#0 )
  print_mulf8u127::$0 = mulf8u127::return#4
  print_mulf8u127::c#0 = print_mulf8u127::$0
  print_uchar::b#3 = print_mulf8u127::a#9
  call print_uchar 
  to:print_mulf8u127::@2
print_mulf8u127::@2: scope:[print_mulf8u127]  from print_mulf8u127::@1
  print_line_cursor#78 = phi( print_mulf8u127::@1/print_line_cursor#80 )
  print_mulf8u127::c#4 = phi( print_mulf8u127::@1/print_mulf8u127::c#0 )
  print_mulf8u127::b#10 = phi( print_mulf8u127::@1/print_mulf8u127::b#11 )
  print_char_cursor#108 = phi( print_mulf8u127::@1/print_char_cursor#17 )
  print_char_cursor#46 = print_char_cursor#108
  print_char::ch#7 = '*'
  call print_char 
  to:print_mulf8u127::@3
print_mulf8u127::@3: scope:[print_mulf8u127]  from print_mulf8u127::@2
  print_line_cursor#76 = phi( print_mulf8u127::@2/print_line_cursor#78 )
  print_mulf8u127::c#3 = phi( print_mulf8u127::@2/print_mulf8u127::c#4 )
  print_mulf8u127::b#9 = phi( print_mulf8u127::@2/print_mulf8u127::b#10 )
  print_char_cursor#109 = phi( print_mulf8u127::@2/print_char_cursor#19 )
  print_char_cursor#47 = print_char_cursor#109
  print_uchar::b#4 = print_mulf8u127::b#9
  call print_uchar 
  to:print_mulf8u127::@4
print_mulf8u127::@4: scope:[print_mulf8u127]  from print_mulf8u127::@3
  print_line_cursor#74 = phi( print_mulf8u127::@3/print_line_cursor#76 )
  print_mulf8u127::c#2 = phi( print_mulf8u127::@3/print_mulf8u127::c#3 )
  print_char_cursor#110 = phi( print_mulf8u127::@3/print_char_cursor#17 )
  print_char_cursor#48 = print_char_cursor#110
  print_char::ch#8 = '='
  call print_char 
  to:print_mulf8u127::@5
print_mulf8u127::@5: scope:[print_mulf8u127]  from print_mulf8u127::@4
  print_line_cursor#72 = phi( print_mulf8u127::@4/print_line_cursor#74 )
  print_mulf8u127::c#1 = phi( print_mulf8u127::@4/print_mulf8u127::c#2 )
  print_char_cursor#111 = phi( print_mulf8u127::@4/print_char_cursor#19 )
  print_char_cursor#49 = print_char_cursor#111
  print_uint::w#1 = print_mulf8u127::c#1
  call print_uint 
  to:print_mulf8u127::@6
print_mulf8u127::@6: scope:[print_mulf8u127]  from print_mulf8u127::@5
  print_line_cursor#69 = phi( print_mulf8u127::@5/print_line_cursor#72 )
  print_char_cursor#112 = phi( print_mulf8u127::@5/print_char_cursor#14 )
  print_char_cursor#50 = print_char_cursor#112
  call print_ln 
  to:print_mulf8u127::@7
print_mulf8u127::@7: scope:[print_mulf8u127]  from print_mulf8u127::@6
  print_char_cursor#113 = phi( print_mulf8u127::@6/print_char_cursor#3 )
  print_line_cursor#59 = phi( print_mulf8u127::@6/print_line_cursor#1 )
  print_line_cursor#26 = print_line_cursor#59
  print_char_cursor#51 = print_char_cursor#113
  to:print_mulf8u127::@return
print_mulf8u127::@return: scope:[print_mulf8u127]  from print_mulf8u127::@7
  print_line_cursor#60 = phi( print_mulf8u127::@7/print_line_cursor#26 )
  print_char_cursor#114 = phi( print_mulf8u127::@7/print_char_cursor#51 )
  print_char_cursor#52 = print_char_cursor#114
  print_line_cursor#27 = print_line_cursor#60
  return 
  to:@return

void print_mulf8s127(signed byte print_mulf8s127::a , signed byte print_mulf8s127::b)
print_mulf8s127: scope:[print_mulf8s127]  from main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@20 main::@21 main::@22
  print_line_cursor#83 = phi( main::@13/print_line_cursor#14, main::@14/print_line_cursor#15, main::@15/print_line_cursor#16, main::@16/print_line_cursor#17, main::@17/print_line_cursor#18, main::@18/print_line_cursor#19, main::@19/print_line_cursor#20, main::@20/print_line_cursor#21, main::@21/print_line_cursor#22, main::@22/print_line_cursor#23 )
  print_char_cursor#143 = phi( main::@13/print_char_cursor#34, main::@14/print_char_cursor#35, main::@15/print_char_cursor#36, main::@16/print_char_cursor#37, main::@17/print_char_cursor#38, main::@18/print_char_cursor#39, main::@19/print_char_cursor#40, main::@20/print_char_cursor#41, main::@21/print_char_cursor#42, main::@22/print_char_cursor#43 )
  print_mulf8s127::b#10 = phi( main::@13/print_mulf8s127::b#0, main::@14/print_mulf8s127::b#1, main::@15/print_mulf8s127::b#2, main::@16/print_mulf8s127::b#3, main::@17/print_mulf8s127::b#4, main::@18/print_mulf8s127::b#5, main::@19/print_mulf8s127::b#6, main::@20/print_mulf8s127::b#7, main::@21/print_mulf8s127::b#8, main::@22/print_mulf8s127::b#9 )
  print_mulf8s127::a#10 = phi( main::@13/print_mulf8s127::a#0, main::@14/print_mulf8s127::a#1, main::@15/print_mulf8s127::a#2, main::@16/print_mulf8s127::a#3, main::@17/print_mulf8s127::a#4, main::@18/print_mulf8s127::a#5, main::@19/print_mulf8s127::a#6, main::@20/print_mulf8s127::a#7, main::@21/print_mulf8s127::a#8, main::@22/print_mulf8s127::a#9 )
  mulf8s127::a#0 = print_mulf8s127::a#10
  mulf8s127::b#0 = print_mulf8s127::b#10
  call mulf8s127 
  mulf8s127::return#0 = mulf8s127::return#2
  to:print_mulf8s127::@1
print_mulf8s127::@1: scope:[print_mulf8s127]  from print_mulf8s127
  print_line_cursor#81 = phi( print_mulf8s127/print_line_cursor#83 )
  print_mulf8s127::b#13 = phi( print_mulf8s127/print_mulf8s127::b#10 )
  print_char_cursor#137 = phi( print_mulf8s127/print_char_cursor#143 )
  print_mulf8s127::a#11 = phi( print_mulf8s127/print_mulf8s127::a#10 )
  mulf8s127::return#3 = phi( print_mulf8s127/mulf8s127::return#0 )
  print_mulf8s127::$0 = mulf8s127::return#3
  print_mulf8s127::c#0 = print_mulf8s127::$0
  print_schar::b#1 = print_mulf8s127::a#11
  call print_schar 
  to:print_mulf8s127::@2
print_mulf8s127::@2: scope:[print_mulf8s127]  from print_mulf8s127::@1
  print_line_cursor#79 = phi( print_mulf8s127::@1/print_line_cursor#81 )
  print_mulf8s127::c#4 = phi( print_mulf8s127::@1/print_mulf8s127::c#0 )
  print_mulf8s127::b#12 = phi( print_mulf8s127::@1/print_mulf8s127::b#13 )
  print_char_cursor#115 = phi( print_mulf8s127::@1/print_char_cursor#11 )
  print_char_cursor#53 = print_char_cursor#115
  print_char::ch#9 = '*'
  call print_char 
  to:print_mulf8s127::@3
print_mulf8s127::@3: scope:[print_mulf8s127]  from print_mulf8s127::@2
  print_line_cursor#77 = phi( print_mulf8s127::@2/print_line_cursor#79 )
  print_mulf8s127::c#3 = phi( print_mulf8s127::@2/print_mulf8s127::c#4 )
  print_mulf8s127::b#11 = phi( print_mulf8s127::@2/print_mulf8s127::b#12 )
  print_char_cursor#116 = phi( print_mulf8s127::@2/print_char_cursor#19 )
  print_char_cursor#54 = print_char_cursor#116
  print_schar::b#2 = print_mulf8s127::b#11
  call print_schar 
  to:print_mulf8s127::@4
print_mulf8s127::@4: scope:[print_mulf8s127]  from print_mulf8s127::@3
  print_line_cursor#75 = phi( print_mulf8s127::@3/print_line_cursor#77 )
  print_mulf8s127::c#2 = phi( print_mulf8s127::@3/print_mulf8s127::c#3 )
  print_char_cursor#117 = phi( print_mulf8s127::@3/print_char_cursor#11 )
  print_char_cursor#55 = print_char_cursor#117
  print_char::ch#10 = '='
  call print_char 
  to:print_mulf8s127::@5
print_mulf8s127::@5: scope:[print_mulf8s127]  from print_mulf8s127::@4
  print_line_cursor#73 = phi( print_mulf8s127::@4/print_line_cursor#75 )
  print_mulf8s127::c#1 = phi( print_mulf8s127::@4/print_mulf8s127::c#2 )
  print_char_cursor#118 = phi( print_mulf8s127::@4/print_char_cursor#19 )
  print_char_cursor#56 = print_char_cursor#118
  print_sint::w#1 = print_mulf8s127::c#1
  call print_sint 
  to:print_mulf8s127::@6
print_mulf8s127::@6: scope:[print_mulf8s127]  from print_mulf8s127::@5
  print_line_cursor#70 = phi( print_mulf8s127::@5/print_line_cursor#73 )
  print_char_cursor#119 = phi( print_mulf8s127::@5/print_char_cursor#7 )
  print_char_cursor#57 = print_char_cursor#119
  call print_ln 
  to:print_mulf8s127::@7
print_mulf8s127::@7: scope:[print_mulf8s127]  from print_mulf8s127::@6
  print_char_cursor#120 = phi( print_mulf8s127::@6/print_char_cursor#3 )
  print_line_cursor#61 = phi( print_mulf8s127::@6/print_line_cursor#1 )
  print_line_cursor#28 = print_line_cursor#61
  print_char_cursor#58 = print_char_cursor#120
  to:print_mulf8s127::@return
print_mulf8s127::@return: scope:[print_mulf8s127]  from print_mulf8s127::@7
  print_line_cursor#62 = phi( print_mulf8s127::@7/print_line_cursor#28 )
  print_char_cursor#121 = phi( print_mulf8s127::@7/print_char_cursor#58 )
  print_char_cursor#59 = print_char_cursor#121
  print_line_cursor#29 = print_line_cursor#62
  return 
  to:@return

word mulf8u127(byte mulf8u127::a , byte mulf8u127::b)
mulf8u127: scope:[mulf8u127]  from mulf8s127 print_mulf8u127
  mulf8u127::b#2 = phi( mulf8s127/mulf8u127::b#1, print_mulf8u127/mulf8u127::b#0 )
  mulf8u127::a#2 = phi( mulf8s127/mulf8u127::a#1, print_mulf8u127/mulf8u127::a#0 )
  *mulf8u127::memA = mulf8u127::a#2
  *mulf8u127::memB = mulf8u127::b#2
  asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamulf127_sqr1_lo,x sm2: sbcmulf127_sqr2_lo,x staresL sm3: ldamulf127_sqr1_hi,x sm4: sbcmulf127_sqr2_hi,x staresH  }
  mulf8u127::return#1 = *mulf8u127::res
  to:mulf8u127::@return
mulf8u127::@return: scope:[mulf8u127]  from mulf8u127
  mulf8u127::return#5 = phi( mulf8u127/mulf8u127::return#1 )
  mulf8u127::return#2 = mulf8u127::return#5
  return 
  to:@return

signed word mulf8s127(signed byte mulf8s127::a , signed byte mulf8s127::b)
mulf8s127: scope:[mulf8s127]  from print_mulf8s127
  mulf8s127::b#1 = phi( print_mulf8s127/mulf8s127::b#0 )
  mulf8s127::a#1 = phi( print_mulf8s127/mulf8s127::a#0 )
  mulf8u127::a#1 = (byte)mulf8s127::a#1
  mulf8u127::b#1 = (byte)mulf8s127::b#1
  call mulf8u127 
  mulf8u127::return#3 = mulf8u127::return#2
  to:mulf8s127::@7
mulf8s127::@7: scope:[mulf8s127]  from mulf8s127
  mulf8s127::b#5 = phi( mulf8s127/mulf8s127::b#1 )
  mulf8s127::a#2 = phi( mulf8s127/mulf8s127::a#1 )
  mulf8u127::return#6 = phi( mulf8s127/mulf8u127::return#3 )
  mulf8s127::$0 = mulf8u127::return#6
  mulf8s127::c#0 = (signed word)mulf8s127::$0
  mulf8s127::$1 = mulf8s127::a#2 < 0
  mulf8s127::$2 = ! mulf8s127::$1
  if(mulf8s127::$2) goto mulf8s127::@1
  to:mulf8s127::@4
mulf8s127::@1: scope:[mulf8s127]  from mulf8s127::@4 mulf8s127::@7
  mulf8s127::c#8 = phi( mulf8s127::@4/mulf8s127::c#1, mulf8s127::@7/mulf8s127::c#0 )
  mulf8s127::a#5 = phi( mulf8s127::@4/mulf8s127::a#6, mulf8s127::@7/mulf8s127::a#2 )
  mulf8s127::b#2 = phi( mulf8s127::@4/mulf8s127::b#3, mulf8s127::@7/mulf8s127::b#5 )
  mulf8s127::$3 = mulf8s127::b#2 < 0
  mulf8s127::$4 = ! mulf8s127::$3
  if(mulf8s127::$4) goto mulf8s127::@2
  to:mulf8s127::@5
mulf8s127::@4: scope:[mulf8s127]  from mulf8s127::@7
  mulf8s127::a#6 = phi( mulf8s127::@7/mulf8s127::a#2 )
  mulf8s127::c#4 = phi( mulf8s127::@7/mulf8s127::c#0 )
  mulf8s127::b#3 = phi( mulf8s127::@7/mulf8s127::b#5 )
  mulf8s127::$11 = (signed word)mulf8s127::b#3
  mulf8s127::$9 = mulf8s127::$11 * 2
  mulf8s127::c#1 = mulf8s127::c#4 - mulf8s127::$9
  to:mulf8s127::@1
mulf8s127::@2: scope:[mulf8s127]  from mulf8s127::@1 mulf8s127::@5
  mulf8s127::c#9 = phi( mulf8s127::@1/mulf8s127::c#8, mulf8s127::@5/mulf8s127::c#2 )
  mulf8s127::b#4 = phi( mulf8s127::@1/mulf8s127::b#2, mulf8s127::@5/mulf8s127::b#6 )
  mulf8s127::a#3 = phi( mulf8s127::@1/mulf8s127::a#5, mulf8s127::@5/mulf8s127::a#4 )
  mulf8s127::$5 = mulf8s127::a#3 < 0
  mulf8s127::$6 = mulf8s127::b#4 < 0
  mulf8s127::$7 = mulf8s127::$5 && mulf8s127::$6
  mulf8s127::$8 = ! mulf8s127::$7
  if(mulf8s127::$8) goto mulf8s127::@3
  to:mulf8s127::@6
mulf8s127::@5: scope:[mulf8s127]  from mulf8s127::@1
  mulf8s127::b#6 = phi( mulf8s127::@1/mulf8s127::b#2 )
  mulf8s127::c#5 = phi( mulf8s127::@1/mulf8s127::c#8 )
  mulf8s127::a#4 = phi( mulf8s127::@1/mulf8s127::a#5 )
  mulf8s127::$12 = (signed word)mulf8s127::a#4
  mulf8s127::$10 = mulf8s127::$12 * 2
  mulf8s127::c#2 = mulf8s127::c#5 - mulf8s127::$10
  to:mulf8s127::@2
mulf8s127::@3: scope:[mulf8s127]  from mulf8s127::@2 mulf8s127::@6
  mulf8s127::c#6 = phi( mulf8s127::@2/mulf8s127::c#9, mulf8s127::@6/mulf8s127::c#3 )
  mulf8s127::return#1 = mulf8s127::c#6
  to:mulf8s127::@return
mulf8s127::@6: scope:[mulf8s127]  from mulf8s127::@2
  mulf8s127::c#7 = phi( mulf8s127::@2/mulf8s127::c#9 )
  mulf8s127::c#3 = mulf8s127::c#7 - $200
  to:mulf8s127::@3
mulf8s127::@return: scope:[mulf8s127]  from mulf8s127::@3
  mulf8s127::return#4 = phi( mulf8s127::@3/mulf8s127::return#1 )
  mulf8s127::return#2 = mulf8s127::return#4
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  print_screen#0 = (byte*)$400
  print_line_cursor#30 = print_screen#0
  print_char_cursor#60 = print_line_cursor#30
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  print_screen#7 = phi( __start::__init1/print_screen#0 )
  print_char_cursor#138 = phi( __start::__init1/print_char_cursor#60 )
  print_line_cursor#71 = phi( __start::__init1/print_line_cursor#30 )
  call main 
  to:__start::@2
__start::@2: scope:[__start]  from __start::@1
  print_screen#6 = phi( __start::@1/print_screen#7 )
  print_char_cursor#122 = phi( __start::@1/print_char_cursor#45 )
  print_line_cursor#63 = phi( __start::@1/print_line_cursor#25 )
  print_line_cursor#31 = print_line_cursor#63
  print_char_cursor#61 = print_char_cursor#122
  to:__start::@return
__start::@return: scope:[__start]  from __start::@2
  print_char_cursor#123 = phi( __start::@2/print_char_cursor#61 )
  print_line_cursor#64 = phi( __start::@2/print_line_cursor#31 )
  print_screen#4 = phi( __start::@2/print_screen#6 )
  print_screen#1 = print_screen#4
  print_line_cursor#32 = print_line_cursor#64
  print_char_cursor#62 = print_char_cursor#123
  return 
  to:@return

SYMBOL TABLE SSA
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void __start()
void main()
const byte* main::str[9]  = "unsigned"
const byte* main::str1[7]  = "signed"
void* memset(void* memset::str , byte memset::c , word memset::num)
bool~ memset::$0
bool~ memset::$1
byte*~ memset::$2
bool~ memset::$3
byte*~ memset::$4
byte memset::c
byte memset::c#0
byte memset::c#1
byte memset::c#2
byte memset::c#3
byte memset::c#4
byte* memset::dst
byte* memset::dst#0
byte* memset::dst#1
byte* memset::dst#2
byte* memset::dst#3
byte* memset::end
byte* memset::end#0
byte* memset::end#1
byte* memset::end#2
word memset::num
word memset::num#0
word memset::num#1
word memset::num#2
void* memset::return
void* memset::return#0
void* memset::return#1
void* memset::return#2
void* memset::return#3
void* memset::str
void* memset::str#0
void* memset::str#1
void* memset::str#2
void* memset::str#3
void* memset::str#4
void* memset::str#5
const byte* mulf127_sqr1_hi[$200]  = kickasm {{ .fill 512, >round((i/127*i/127)*127/4)  }}
const byte* mulf127_sqr1_lo[$200]  = kickasm {{ .fill 512, <round((i/127*i/127)*127/4)  }}
const byte* mulf127_sqr2_hi[$200]  = kickasm {{ .fill 512, >round(((i-255)/127*(i-255)/127)*127/4)  }}
const byte* mulf127_sqr2_lo[$200]  = kickasm {{ .fill 512, <round(((i-255)/127*(i-255)/127)*127/4)  }}
signed word mulf8s127(signed byte mulf8s127::a , signed byte mulf8s127::b)
word~ mulf8s127::$0
bool~ mulf8s127::$1
number~ mulf8s127::$10
signed word~ mulf8s127::$11
signed word~ mulf8s127::$12
bool~ mulf8s127::$2
bool~ mulf8s127::$3
bool~ mulf8s127::$4
bool~ mulf8s127::$5
bool~ mulf8s127::$6
bool~ mulf8s127::$7
bool~ mulf8s127::$8
number~ mulf8s127::$9
signed byte mulf8s127::a
signed byte mulf8s127::a#0
signed byte mulf8s127::a#1
signed byte mulf8s127::a#2
signed byte mulf8s127::a#3
signed byte mulf8s127::a#4
signed byte mulf8s127::a#5
signed byte mulf8s127::a#6
signed byte mulf8s127::b
signed byte mulf8s127::b#0
signed byte mulf8s127::b#1
signed byte mulf8s127::b#2
signed byte mulf8s127::b#3
signed byte mulf8s127::b#4
signed byte mulf8s127::b#5
signed byte mulf8s127::b#6
signed word mulf8s127::c
signed word mulf8s127::c#0
signed word mulf8s127::c#1
signed word mulf8s127::c#2
signed word mulf8s127::c#3
signed word mulf8s127::c#4
signed word mulf8s127::c#5
signed word mulf8s127::c#6
signed word mulf8s127::c#7
signed word mulf8s127::c#8
signed word mulf8s127::c#9
signed word mulf8s127::return
signed word mulf8s127::return#0
signed word mulf8s127::return#1
signed word mulf8s127::return#2
signed word mulf8s127::return#3
signed word mulf8s127::return#4
word mulf8u127(byte mulf8u127::a , byte mulf8u127::b)
byte mulf8u127::a
byte mulf8u127::a#0
byte mulf8u127::a#1
byte mulf8u127::a#2
byte mulf8u127::b
byte mulf8u127::b#0
byte mulf8u127::b#1
byte mulf8u127::b#2
const nomodify byte* mulf8u127::memA = (byte*)$fc
const nomodify byte* mulf8u127::memB = (byte*)$fd
const nomodify word* mulf8u127::res = (word*)$fe
const nomodify byte* mulf8u127::resH = (byte*)$ff
const nomodify byte* mulf8u127::resL = (byte*)$fe
word mulf8u127::return
word mulf8u127::return#0
word mulf8u127::return#1
word mulf8u127::return#2
word mulf8u127::return#3
word mulf8u127::return#4
word mulf8u127::return#5
word mulf8u127::return#6
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0
byte print_char::ch#1
byte print_char::ch#10
byte print_char::ch#11
byte print_char::ch#2
byte print_char::ch#3
byte print_char::ch#4
byte print_char::ch#5
byte print_char::ch#6
byte print_char::ch#7
byte print_char::ch#8
byte print_char::ch#9
byte* print_char_cursor
byte* print_char_cursor#0
byte* print_char_cursor#1
byte* print_char_cursor#10
byte* print_char_cursor#100
byte* print_char_cursor#101
byte* print_char_cursor#102
byte* print_char_cursor#103
byte* print_char_cursor#104
byte* print_char_cursor#105
byte* print_char_cursor#106
byte* print_char_cursor#107
byte* print_char_cursor#108
byte* print_char_cursor#109
byte* print_char_cursor#11
byte* print_char_cursor#110
byte* print_char_cursor#111
byte* print_char_cursor#112
byte* print_char_cursor#113
byte* print_char_cursor#114
byte* print_char_cursor#115
byte* print_char_cursor#116
byte* print_char_cursor#117
byte* print_char_cursor#118
byte* print_char_cursor#119
byte* print_char_cursor#12
byte* print_char_cursor#120
byte* print_char_cursor#121
byte* print_char_cursor#122
byte* print_char_cursor#123
byte* print_char_cursor#124
byte* print_char_cursor#125
byte* print_char_cursor#126
byte* print_char_cursor#127
byte* print_char_cursor#128
byte* print_char_cursor#129
byte* print_char_cursor#13
byte* print_char_cursor#130
byte* print_char_cursor#131
byte* print_char_cursor#132
byte* print_char_cursor#133
byte* print_char_cursor#134
byte* print_char_cursor#135
byte* print_char_cursor#136
byte* print_char_cursor#137
byte* print_char_cursor#138
byte* print_char_cursor#139
byte* print_char_cursor#14
byte* print_char_cursor#140
byte* print_char_cursor#141
byte* print_char_cursor#142
byte* print_char_cursor#143
byte* print_char_cursor#15
byte* print_char_cursor#16
byte* print_char_cursor#17
byte* print_char_cursor#18
byte* print_char_cursor#19
byte* print_char_cursor#2
byte* print_char_cursor#20
byte* print_char_cursor#21
byte* print_char_cursor#22
byte* print_char_cursor#23
byte* print_char_cursor#24
byte* print_char_cursor#25
byte* print_char_cursor#26
byte* print_char_cursor#27
byte* print_char_cursor#28
byte* print_char_cursor#29
byte* print_char_cursor#3
byte* print_char_cursor#30
byte* print_char_cursor#31
byte* print_char_cursor#32
byte* print_char_cursor#33
byte* print_char_cursor#34
byte* print_char_cursor#35
byte* print_char_cursor#36
byte* print_char_cursor#37
byte* print_char_cursor#38
byte* print_char_cursor#39
byte* print_char_cursor#4
byte* print_char_cursor#40
byte* print_char_cursor#41
byte* print_char_cursor#42
byte* print_char_cursor#43
byte* print_char_cursor#44
byte* print_char_cursor#45
byte* print_char_cursor#46
byte* print_char_cursor#47
byte* print_char_cursor#48
byte* print_char_cursor#49
byte* print_char_cursor#5
byte* print_char_cursor#50
byte* print_char_cursor#51
byte* print_char_cursor#52
byte* print_char_cursor#53
byte* print_char_cursor#54
byte* print_char_cursor#55
byte* print_char_cursor#56
byte* print_char_cursor#57
byte* print_char_cursor#58
byte* print_char_cursor#59
byte* print_char_cursor#6
byte* print_char_cursor#60
byte* print_char_cursor#61
byte* print_char_cursor#62
byte* print_char_cursor#63
byte* print_char_cursor#64
byte* print_char_cursor#65
byte* print_char_cursor#66
byte* print_char_cursor#67
byte* print_char_cursor#68
byte* print_char_cursor#69
byte* print_char_cursor#7
byte* print_char_cursor#70
byte* print_char_cursor#71
byte* print_char_cursor#72
byte* print_char_cursor#73
byte* print_char_cursor#74
byte* print_char_cursor#75
byte* print_char_cursor#76
byte* print_char_cursor#77
byte* print_char_cursor#78
byte* print_char_cursor#79
byte* print_char_cursor#8
byte* print_char_cursor#80
byte* print_char_cursor#81
byte* print_char_cursor#82
byte* print_char_cursor#83
byte* print_char_cursor#84
byte* print_char_cursor#85
byte* print_char_cursor#86
byte* print_char_cursor#87
byte* print_char_cursor#88
byte* print_char_cursor#89
byte* print_char_cursor#9
byte* print_char_cursor#90
byte* print_char_cursor#91
byte* print_char_cursor#92
byte* print_char_cursor#93
byte* print_char_cursor#94
byte* print_char_cursor#95
byte* print_char_cursor#96
byte* print_char_cursor#97
byte* print_char_cursor#98
byte* print_char_cursor#99
void print_cls()
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0
byte* print_line_cursor#1
byte* print_line_cursor#10
byte* print_line_cursor#11
byte* print_line_cursor#12
byte* print_line_cursor#13
byte* print_line_cursor#14
byte* print_line_cursor#15
byte* print_line_cursor#16
byte* print_line_cursor#17
byte* print_line_cursor#18
byte* print_line_cursor#19
byte* print_line_cursor#2
byte* print_line_cursor#20
byte* print_line_cursor#21
byte* print_line_cursor#22
byte* print_line_cursor#23
byte* print_line_cursor#24
byte* print_line_cursor#25
byte* print_line_cursor#26
byte* print_line_cursor#27
byte* print_line_cursor#28
byte* print_line_cursor#29
byte* print_line_cursor#3
byte* print_line_cursor#30
byte* print_line_cursor#31
byte* print_line_cursor#32
byte* print_line_cursor#33
byte* print_line_cursor#34
byte* print_line_cursor#35
byte* print_line_cursor#36
byte* print_line_cursor#37
byte* print_line_cursor#38
byte* print_line_cursor#39
byte* print_line_cursor#4
byte* print_line_cursor#40
byte* print_line_cursor#41
byte* print_line_cursor#42
byte* print_line_cursor#43
byte* print_line_cursor#44
byte* print_line_cursor#45
byte* print_line_cursor#46
byte* print_line_cursor#47
byte* print_line_cursor#48
byte* print_line_cursor#49
byte* print_line_cursor#5
byte* print_line_cursor#50
byte* print_line_cursor#51
byte* print_line_cursor#52
byte* print_line_cursor#53
byte* print_line_cursor#54
byte* print_line_cursor#55
byte* print_line_cursor#56
byte* print_line_cursor#57
byte* print_line_cursor#58
byte* print_line_cursor#59
byte* print_line_cursor#6
byte* print_line_cursor#60
byte* print_line_cursor#61
byte* print_line_cursor#62
byte* print_line_cursor#63
byte* print_line_cursor#64
byte* print_line_cursor#65
byte* print_line_cursor#66
byte* print_line_cursor#67
byte* print_line_cursor#68
byte* print_line_cursor#69
byte* print_line_cursor#7
byte* print_line_cursor#70
byte* print_line_cursor#71
byte* print_line_cursor#72
byte* print_line_cursor#73
byte* print_line_cursor#74
byte* print_line_cursor#75
byte* print_line_cursor#76
byte* print_line_cursor#77
byte* print_line_cursor#78
byte* print_line_cursor#79
byte* print_line_cursor#8
byte* print_line_cursor#80
byte* print_line_cursor#81
byte* print_line_cursor#82
byte* print_line_cursor#83
byte* print_line_cursor#9
void print_ln()
byte*~ print_ln::$0
bool~ print_ln::$1
void print_mulf8s127(signed byte print_mulf8s127::a , signed byte print_mulf8s127::b)
signed word~ print_mulf8s127::$0
signed byte print_mulf8s127::a
signed byte print_mulf8s127::a#0
signed byte print_mulf8s127::a#1
signed byte print_mulf8s127::a#10
signed byte print_mulf8s127::a#11
signed byte print_mulf8s127::a#2
signed byte print_mulf8s127::a#3
signed byte print_mulf8s127::a#4
signed byte print_mulf8s127::a#5
signed byte print_mulf8s127::a#6
signed byte print_mulf8s127::a#7
signed byte print_mulf8s127::a#8
signed byte print_mulf8s127::a#9
signed byte print_mulf8s127::b
signed byte print_mulf8s127::b#0
signed byte print_mulf8s127::b#1
signed byte print_mulf8s127::b#10
signed byte print_mulf8s127::b#11
signed byte print_mulf8s127::b#12
signed byte print_mulf8s127::b#13
signed byte print_mulf8s127::b#2
signed byte print_mulf8s127::b#3
signed byte print_mulf8s127::b#4
signed byte print_mulf8s127::b#5
signed byte print_mulf8s127::b#6
signed byte print_mulf8s127::b#7
signed byte print_mulf8s127::b#8
signed byte print_mulf8s127::b#9
signed word print_mulf8s127::c
signed word print_mulf8s127::c#0
signed word print_mulf8s127::c#1
signed word print_mulf8s127::c#2
signed word print_mulf8s127::c#3
signed word print_mulf8s127::c#4
void print_mulf8u127(byte print_mulf8u127::a , byte print_mulf8u127::b)
word~ print_mulf8u127::$0
byte print_mulf8u127::a
byte print_mulf8u127::a#0
byte print_mulf8u127::a#1
byte print_mulf8u127::a#2
byte print_mulf8u127::a#3
byte print_mulf8u127::a#4
byte print_mulf8u127::a#5
byte print_mulf8u127::a#6
byte print_mulf8u127::a#7
byte print_mulf8u127::a#8
byte print_mulf8u127::a#9
byte print_mulf8u127::b
byte print_mulf8u127::b#0
byte print_mulf8u127::b#1
byte print_mulf8u127::b#10
byte print_mulf8u127::b#11
byte print_mulf8u127::b#2
byte print_mulf8u127::b#3
byte print_mulf8u127::b#4
byte print_mulf8u127::b#5
byte print_mulf8u127::b#6
byte print_mulf8u127::b#7
byte print_mulf8u127::b#8
byte print_mulf8u127::b#9
word print_mulf8u127::c
word print_mulf8u127::c#0
word print_mulf8u127::c#1
word print_mulf8u127::c#2
word print_mulf8u127::c#3
word print_mulf8u127::c#4
void print_schar(signed byte print_schar::b)
bool~ print_schar::$0
signed byte~ print_schar::$4
signed byte print_schar::b
signed byte print_schar::b#0
signed byte print_schar::b#1
signed byte print_schar::b#2
signed byte print_schar::b#3
signed byte print_schar::b#4
signed byte print_schar::b#5
signed byte print_schar::b#6
signed byte print_schar::b#7
signed byte print_schar::b#8
byte* print_screen
byte* print_screen#0
byte* print_screen#1
byte* print_screen#2
byte* print_screen#3
byte* print_screen#4
byte* print_screen#5
byte* print_screen#6
byte* print_screen#7
void print_sint(signed word print_sint::w)
bool~ print_sint::$0
signed word~ print_sint::$4
signed word print_sint::w
signed word print_sint::w#0
signed word print_sint::w#1
signed word print_sint::w#2
signed word print_sint::w#3
signed word print_sint::w#4
signed word print_sint::w#5
signed word print_sint::w#6
signed word print_sint::w#7
void print_str(byte* print_str::str)
bool~ print_str::$1
byte* print_str::str
byte* print_str::str#0
byte* print_str::str#1
byte* print_str::str#2
byte* print_str::str#3
byte* print_str::str#4
byte* print_str::str#5
byte* print_str::str#6
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0
number~ print_uchar::$2
byte print_uchar::b
byte print_uchar::b#0
byte print_uchar::b#1
byte print_uchar::b#2
byte print_uchar::b#3
byte print_uchar::b#4
byte print_uchar::b#5
byte print_uchar::b#6
void print_uint(word print_uint::w)
byte~ print_uint::$0
byte~ print_uint::$2
word print_uint::w
word print_uint::w#0
word print_uint::w#1
word print_uint::w#2
word print_uint::w#3

Adding number conversion cast (unumber) 0 in memset::$0 = memset::num#1 > 0
Adding number conversion cast (unumber) 0 in print_str::$1 = 0 != *print_str::str#3
Adding number conversion cast (unumber) $28 in print_ln::$0 = print_line_cursor#33 + $28
Adding number conversion cast (snumber) 0 in print_sint::$0 = print_sint::w#2 < 0
Adding number conversion cast (snumber) 0 in print_schar::$0 = print_schar::b#3 < 0
Adding number conversion cast (unumber) 4 in print_uchar::$0 = print_uchar::b#5 >> 4
Adding number conversion cast (unumber) $f in print_uchar::$2 = print_uchar::b#6 & $f
Adding number conversion cast (unumber) print_uchar::$2 in print_uchar::$2 = print_uchar::b#6 & (unumber)$f
Adding number conversion cast (unumber) $3e8 in memset::num#0 = $3e8
Adding number conversion cast (unumber) 0 in print_mulf8u127::a#0 = 0
Adding number conversion cast (unumber) 0 in print_mulf8u127::b#0 = 0
Adding number conversion cast (unumber) $7f in print_mulf8u127::a#1 = $7f
Adding number conversion cast (unumber) $7f in print_mulf8u127::b#1 = $7f
Adding number conversion cast (unumber) $40 in print_mulf8u127::a#2 = $40
Adding number conversion cast (unumber) $40 in print_mulf8u127::b#2 = $40
Adding number conversion cast (unumber) $40 in print_mulf8u127::a#3 = $40
Adding number conversion cast (unumber) $7f in print_mulf8u127::b#3 = $7f
Adding number conversion cast (unumber) $40 in print_mulf8u127::a#4 = $40
Adding number conversion cast (unumber) $c0 in print_mulf8u127::b#4 = $c0
Adding number conversion cast (unumber) $ff in print_mulf8u127::a#5 = $ff
Adding number conversion cast (unumber) $7f in print_mulf8u127::b#5 = $7f
Adding number conversion cast (unumber) $c0 in print_mulf8u127::a#6 = $c0
Adding number conversion cast (unumber) $c0 in print_mulf8u127::b#6 = $c0
Adding number conversion cast (unumber) $ff in print_mulf8u127::a#7 = $ff
Adding number conversion cast (unumber) $ff in print_mulf8u127::b#7 = $ff
Adding number conversion cast (snumber) 0 in print_mulf8s127::a#0 = 0
Adding number conversion cast (snumber) 0 in print_mulf8s127::b#0 = 0
Adding number conversion cast (snumber) $40 in print_mulf8s127::a#1 = $40
Adding number conversion cast (snumber) $40 in print_mulf8s127::b#1 = $40
Adding number conversion cast (snumber) $40 in print_mulf8s127::a#2 = $40
Adding number conversion cast (snumber) $7f in print_mulf8s127::b#2 = $7f
Adding number conversion cast (snumber) -$40 in print_mulf8s127::a#3 = -$40
Adding number conversion cast (snumber) $40 in print_mulf8s127::b#3 = $40
Adding number conversion cast (snumber) $40 in print_mulf8s127::a#4 = $40
Adding number conversion cast (snumber) -$40 in print_mulf8s127::b#4 = -$40
Adding number conversion cast (snumber) -$40 in print_mulf8s127::a#5 = -$40
Adding number conversion cast (snumber) -$40 in print_mulf8s127::b#5 = -$40
Adding number conversion cast (snumber) $7f in print_mulf8s127::a#6 = $7f
Adding number conversion cast (snumber) $7f in print_mulf8s127::b#6 = $7f
Adding number conversion cast (snumber) -$7f in print_mulf8s127::a#7 = -$7f
Adding number conversion cast (snumber) $7f in print_mulf8s127::b#7 = $7f
Adding number conversion cast (snumber) $7f in print_mulf8s127::a#8 = $7f
Adding number conversion cast (snumber) -$7f in print_mulf8s127::b#8 = -$7f
Adding number conversion cast (snumber) -$7f in print_mulf8s127::a#9 = -$7f
Adding number conversion cast (snumber) -$7f in print_mulf8s127::b#9 = -$7f
Adding number conversion cast (snumber) 0 in mulf8s127::$1 = mulf8s127::a#2 < 0
Adding number conversion cast (snumber) 0 in mulf8s127::$3 = mulf8s127::b#2 < 0
Adding number conversion cast (snumber) 2 in mulf8s127::$9 = mulf8s127::$11 * 2
Adding number conversion cast (snumber) mulf8s127::$9 in mulf8s127::$9 = mulf8s127::$11 * (snumber)2
Adding number conversion cast (snumber) 0 in mulf8s127::$5 = mulf8s127::a#3 < 0
Adding number conversion cast (snumber) 0 in mulf8s127::$6 = mulf8s127::b#4 < 0
Adding number conversion cast (snumber) 2 in mulf8s127::$10 = mulf8s127::$12 * 2
Adding number conversion cast (snumber) mulf8s127::$10 in mulf8s127::$10 = mulf8s127::$12 * (snumber)2
Adding number conversion cast (snumber) $200 in mulf8s127::c#3 = mulf8s127::c#7 - $200
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memset::dst#0 = (byte*)memset::str#2
Inlining cast memset::num#0 = (unumber)$3e8
Inlining cast print_mulf8u127::a#0 = (unumber)0
Inlining cast print_mulf8u127::b#0 = (unumber)0
Inlining cast print_mulf8u127::a#1 = (unumber)$7f
Inlining cast print_mulf8u127::b#1 = (unumber)$7f
Inlining cast print_mulf8u127::a#2 = (unumber)$40
Inlining cast print_mulf8u127::b#2 = (unumber)$40
Inlining cast print_mulf8u127::a#3 = (unumber)$40
Inlining cast print_mulf8u127::b#3 = (unumber)$7f
Inlining cast print_mulf8u127::a#4 = (unumber)$40
Inlining cast print_mulf8u127::b#4 = (unumber)$c0
Inlining cast print_mulf8u127::a#5 = (unumber)$ff
Inlining cast print_mulf8u127::b#5 = (unumber)$7f
Inlining cast print_mulf8u127::a#6 = (unumber)$c0
Inlining cast print_mulf8u127::b#6 = (unumber)$c0
Inlining cast print_mulf8u127::a#7 = (unumber)$ff
Inlining cast print_mulf8u127::b#7 = (unumber)$ff
Inlining cast print_mulf8s127::a#0 = (snumber)0
Inlining cast print_mulf8s127::b#0 = (snumber)0
Inlining cast print_mulf8s127::a#1 = (snumber)$40
Inlining cast print_mulf8s127::b#1 = (snumber)$40
Inlining cast print_mulf8s127::a#2 = (snumber)$40
Inlining cast print_mulf8s127::b#2 = (snumber)$7f
Inlining cast print_mulf8s127::a#3 = (snumber)-$40
Inlining cast print_mulf8s127::b#3 = (snumber)$40
Inlining cast print_mulf8s127::a#4 = (snumber)$40
Inlining cast print_mulf8s127::b#4 = (snumber)-$40
Inlining cast print_mulf8s127::a#5 = (snumber)-$40
Inlining cast print_mulf8s127::b#5 = (snumber)-$40
Inlining cast print_mulf8s127::a#6 = (snumber)$7f
Inlining cast print_mulf8s127::b#6 = (snumber)$7f
Inlining cast print_mulf8s127::a#7 = (snumber)-$7f
Inlining cast print_mulf8s127::b#7 = (snumber)$7f
Inlining cast print_mulf8s127::a#8 = (snumber)$7f
Inlining cast print_mulf8s127::b#8 = (snumber)-$7f
Inlining cast print_mulf8s127::a#9 = (snumber)-$7f
Inlining cast print_mulf8s127::b#9 = (snumber)-$7f
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 252
Simplifying constant pointer cast (byte*) 253
Simplifying constant pointer cast (word*) 254
Simplifying constant pointer cast (byte*) 254
Simplifying constant pointer cast (byte*) 255
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 4
Simplifying constant integer cast $f
Simplifying constant integer cast $3e8
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $7f
Simplifying constant integer cast $7f
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast $7f
Simplifying constant integer cast $40
Simplifying constant integer cast $c0
Simplifying constant integer cast $ff
Simplifying constant integer cast $7f
Simplifying constant integer cast $c0
Simplifying constant integer cast $c0
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast $7f
Simplifying constant integer cast -$40
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast -$40
Simplifying constant integer cast -$40
Simplifying constant integer cast -$40
Simplifying constant integer cast $7f
Simplifying constant integer cast $7f
Simplifying constant integer cast -$7f
Simplifying constant integer cast $7f
Simplifying constant integer cast $7f
Simplifying constant integer cast -$7f
Simplifying constant integer cast -$7f
Simplifying constant integer cast -$7f
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast $200
Simplifying constant pointer cast (byte*) 1024
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) $f
Finalized unsigned number type (word) $3e8
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $7f
Finalized unsigned number type (byte) $7f
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $7f
Finalized unsigned number type (byte) $40
Finalized unsigned number type (byte) $c0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $7f
Finalized unsigned number type (byte) $c0
Finalized unsigned number type (byte) $c0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) $40
Finalized signed number type (signed byte) $40
Finalized signed number type (signed byte) $40
Finalized signed number type (signed byte) $7f
Finalized signed number type (signed byte) -$40
Finalized signed number type (signed byte) $40
Finalized signed number type (signed byte) $40
Finalized signed number type (signed byte) -$40
Finalized signed number type (signed byte) -$40
Finalized signed number type (signed byte) -$40
Finalized signed number type (signed byte) $7f
Finalized signed number type (signed byte) $7f
Finalized signed number type (signed byte) -$7f
Finalized signed number type (signed byte) $7f
Finalized signed number type (signed byte) $7f
Finalized signed number type (signed byte) -$7f
Finalized signed number type (signed byte) -$7f
Finalized signed number type (signed byte) -$7f
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 2
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 0
Finalized signed number type (signed byte) 2
Finalized signed number type (signed word) $200
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in print_uchar::$2 = print_uchar::b#6 & $f
Inferred type updated to signed word in mulf8s127::$9 = mulf8s127::$11 * 2
Inferred type updated to signed word in mulf8s127::$10 = mulf8s127::$12 * 2
Inversing boolean not [2] memset::$1 = memset::num#1 <= 0 from [1] memset::$0 = memset::num#1 > 0
Inversing boolean not [360] mulf8s127::$2 = mulf8s127::a#2 >= 0 from [359] mulf8s127::$1 = mulf8s127::a#2 < 0
Inversing boolean not [364] mulf8s127::$4 = mulf8s127::b#2 >= 0 from [363] mulf8s127::$3 = mulf8s127::b#2 < 0
Successful SSA optimization Pass2UnaryNotSimplification
Alias memset::return#0 = memset::str#1 memset::return#3 memset::return#1 
Alias memset::str#2 = memset::str#3 
Alias memset::num#1 = memset::num#2 
Alias memset::c#3 = memset::c#4 
Alias memset::end#0 = memset::$2 
Alias memset::c#1 = memset::c#2 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#4 = memset::str#5 
Alias print_str::str#3 = print_str::str#4 print_str::str#5 
Alias print_char_cursor#1 = print_char_cursor#124 print_char_cursor#125 print_char_cursor#64 
Alias print_char_cursor#0 = print_char_cursor#63 
Alias print_line_cursor#0 = print_ln::$0 print_line_cursor#34 print_char_cursor#2 print_line_cursor#35 print_char_cursor#66 print_line_cursor#1 print_char_cursor#3 
Alias print_char_cursor#127 = print_char_cursor#140 print_char_cursor#128 
Alias print_sint::w#2 = print_sint::w#5 print_sint::w#3 print_sint::w#7 print_sint::w#6 
Alias print_char_cursor#4 = print_char_cursor#67 
Alias print_sint::w#0 = print_sint::$4 
Alias print_char_cursor#5 = print_char_cursor#68 
Alias print_char_cursor#6 = print_char_cursor#69 print_char_cursor#70 print_char_cursor#7 
Alias print_char_cursor#130 = print_char_cursor#141 print_char_cursor#131 
Alias print_schar::b#3 = print_schar::b#6 print_schar::b#4 print_schar::b#8 print_schar::b#7 
Alias print_char_cursor#71 = print_char_cursor#8 
Alias print_schar::b#0 = print_schar::$4 
Alias print_char_cursor#72 = print_char_cursor#9 
Alias print_char_cursor#10 = print_char_cursor#73 print_char_cursor#74 print_char_cursor#11 
Alias print_uchar::b#1 = print_uint::$0 
Alias print_uint::w#2 = print_uint::w#3 
Alias print_char_cursor#12 = print_char_cursor#75 
Alias print_uchar::b#2 = print_uint::$2 
Alias print_char_cursor#13 = print_char_cursor#76 print_char_cursor#77 print_char_cursor#14 
Alias print_uchar::b#5 = print_uchar::b#6 
Alias print_char_cursor#15 = print_char_cursor#78 
Alias print_char_cursor#16 = print_char_cursor#79 print_char_cursor#80 print_char_cursor#17 
Alias print_char_cursor#18 = print_char_cursor#82 print_char_cursor#19 
Alias print_line_cursor#2 = print_screen#3 print_screen#2 print_char_cursor#20 print_line_cursor#36 print_char_cursor#83 print_line_cursor#3 print_char_cursor#21 
Alias print_line_cursor#37 = print_line_cursor#4 print_line_cursor#67 
Alias print_char_cursor#22 = print_char_cursor#84 
Alias print_char_cursor#23 = print_char_cursor#85 
Alias print_line_cursor#38 = print_line_cursor#5 
Alias print_char_cursor#24 = print_char_cursor#86 
Alias print_char_cursor#25 = print_char_cursor#87 
Alias print_line_cursor#39 = print_line_cursor#6 
Alias print_char_cursor#26 = print_char_cursor#88 
Alias print_line_cursor#40 = print_line_cursor#7 
Alias print_char_cursor#27 = print_char_cursor#89 
Alias print_line_cursor#41 = print_line_cursor#8 
Alias print_char_cursor#28 = print_char_cursor#90 
Alias print_line_cursor#42 = print_line_cursor#9 
Alias print_char_cursor#29 = print_char_cursor#91 
Alias print_line_cursor#10 = print_line_cursor#43 
Alias print_char_cursor#30 = print_char_cursor#92 
Alias print_line_cursor#11 = print_line_cursor#44 
Alias print_char_cursor#31 = print_char_cursor#93 
Alias print_line_cursor#12 = print_line_cursor#45 
Alias print_char_cursor#32 = print_char_cursor#94 
Alias print_line_cursor#13 = print_line_cursor#46 print_line_cursor#68 
Alias print_char_cursor#33 = print_char_cursor#95 
Alias print_line_cursor#14 = print_line_cursor#47 
Alias print_char_cursor#34 = print_char_cursor#96 
Alias print_char_cursor#35 = print_char_cursor#97 
Alias print_line_cursor#15 = print_line_cursor#48 
Alias print_char_cursor#36 = print_char_cursor#98 
Alias print_line_cursor#16 = print_line_cursor#49 
Alias print_char_cursor#37 = print_char_cursor#99 
Alias print_line_cursor#17 = print_line_cursor#50 
Alias print_char_cursor#100 = print_char_cursor#38 
Alias print_line_cursor#18 = print_line_cursor#51 
Alias print_char_cursor#101 = print_char_cursor#39 
Alias print_line_cursor#19 = print_line_cursor#52 
Alias print_char_cursor#102 = print_char_cursor#40 
Alias print_line_cursor#20 = print_line_cursor#53 
Alias print_char_cursor#103 = print_char_cursor#41 
Alias print_line_cursor#21 = print_line_cursor#54 
Alias print_char_cursor#104 = print_char_cursor#42 
Alias print_line_cursor#22 = print_line_cursor#55 
Alias print_char_cursor#105 = print_char_cursor#43 
Alias print_line_cursor#23 = print_line_cursor#56 
Alias print_char_cursor#106 = print_char_cursor#44 print_char_cursor#107 print_char_cursor#45 
Alias print_line_cursor#24 = print_line_cursor#57 print_line_cursor#58 print_line_cursor#25 
Alias mulf8u127::return#0 = mulf8u127::return#4 
Alias print_mulf8u127::a#8 = print_mulf8u127::a#9 
Alias print_char_cursor#136 = print_char_cursor#142 
Alias print_mulf8u127::b#10 = print_mulf8u127::b#11 print_mulf8u127::b#8 print_mulf8u127::b#9 
Alias print_line_cursor#69 = print_line_cursor#80 print_line_cursor#82 print_line_cursor#78 print_line_cursor#76 print_line_cursor#74 print_line_cursor#72 
Alias print_mulf8u127::c#0 = print_mulf8u127::$0 print_mulf8u127::c#4 print_mulf8u127::c#3 print_mulf8u127::c#2 print_mulf8u127::c#1 
Alias print_char_cursor#108 = print_char_cursor#46 
Alias print_char_cursor#109 = print_char_cursor#47 
Alias print_char_cursor#110 = print_char_cursor#48 
Alias print_char_cursor#111 = print_char_cursor#49 
Alias print_char_cursor#112 = print_char_cursor#50 
Alias print_line_cursor#26 = print_line_cursor#59 print_line_cursor#60 print_line_cursor#27 
Alias print_char_cursor#113 = print_char_cursor#51 print_char_cursor#114 print_char_cursor#52 
Alias mulf8s127::return#0 = mulf8s127::return#3 
Alias print_mulf8s127::a#10 = print_mulf8s127::a#11 
Alias print_char_cursor#137 = print_char_cursor#143 
Alias print_mulf8s127::b#10 = print_mulf8s127::b#13 print_mulf8s127::b#12 print_mulf8s127::b#11 
Alias print_line_cursor#70 = print_line_cursor#81 print_line_cursor#83 print_line_cursor#79 print_line_cursor#77 print_line_cursor#75 print_line_cursor#73 
Alias print_mulf8s127::c#0 = print_mulf8s127::$0 print_mulf8s127::c#4 print_mulf8s127::c#3 print_mulf8s127::c#2 print_mulf8s127::c#1 
Alias print_char_cursor#115 = print_char_cursor#53 
Alias print_char_cursor#116 = print_char_cursor#54 
Alias print_char_cursor#117 = print_char_cursor#55 
Alias print_char_cursor#118 = print_char_cursor#56 
Alias print_char_cursor#119 = print_char_cursor#57 
Alias print_line_cursor#28 = print_line_cursor#61 print_line_cursor#62 print_line_cursor#29 
Alias print_char_cursor#120 = print_char_cursor#58 print_char_cursor#121 print_char_cursor#59 
Alias mulf8u127::return#1 = mulf8u127::return#5 mulf8u127::return#2 
Alias mulf8u127::return#3 = mulf8u127::return#6 
Alias mulf8s127::a#1 = mulf8s127::a#2 mulf8s127::a#6 
Alias mulf8s127::b#1 = mulf8s127::b#5 mulf8s127::b#3 
Alias mulf8s127::c#0 = mulf8s127::c#4 
Alias mulf8s127::a#4 = mulf8s127::a#5 
Alias mulf8s127::c#5 = mulf8s127::c#8 
Alias mulf8s127::b#2 = mulf8s127::b#6 
Alias mulf8s127::return#1 = mulf8s127::c#6 mulf8s127::return#4 mulf8s127::return#2 
Alias mulf8s127::c#7 = mulf8s127::c#9 
Alias print_screen#0 = print_line_cursor#30 print_char_cursor#60 print_line_cursor#71 print_char_cursor#138 print_screen#7 print_screen#6 print_screen#4 print_screen#1 
Alias print_line_cursor#31 = print_line_cursor#63 print_line_cursor#64 print_line_cursor#32 
Alias print_char_cursor#122 = print_char_cursor#61 print_char_cursor#123 print_char_cursor#62 
Successful SSA optimization Pass2AliasElimination
Alias mulf8s127::b#1 = mulf8s127::b#2 mulf8s127::b#4 
Alias mulf8s127::a#1 = mulf8s127::a#4 mulf8s127::a#3 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values memset::num#1 memset::num#0
Identical Phi Values memset::str#2 memset::str#0
Identical Phi Values memset::c#3 memset::c#0
Identical Phi Values memset::end#1 memset::end#0
Identical Phi Values memset::str#4 memset::str#2
Identical Phi Values memset::c#1 memset::c#3
Identical Phi Values print_char_cursor#0 print_char_cursor#18
Identical Phi Values print_char_cursor#65 print_char_cursor#126
Identical Phi Values print_sint::w#2 print_sint::w#1
Identical Phi Values print_char_cursor#127 print_char_cursor#118
Identical Phi Values print_char_cursor#4 print_char_cursor#18
Identical Phi Values print_char_cursor#5 print_char_cursor#18
Identical Phi Values print_char_cursor#6 print_char_cursor#13
Identical Phi Values print_char_cursor#71 print_char_cursor#18
Identical Phi Values print_char_cursor#72 print_char_cursor#18
Identical Phi Values print_char_cursor#10 print_char_cursor#16
Identical Phi Values print_char_cursor#12 print_char_cursor#16
Identical Phi Values print_char_cursor#13 print_char_cursor#16
Identical Phi Values print_char_cursor#15 print_char_cursor#18
Identical Phi Values print_char_cursor#16 print_char_cursor#18
Identical Phi Values print_line_cursor#2 print_screen#5
Identical Phi Values print_screen#5 print_screen#0
Identical Phi Values print_line_cursor#66 print_screen#0
Identical Phi Values print_char_cursor#135 print_screen#0
Identical Phi Values print_line_cursor#37 print_line_cursor#2
Identical Phi Values print_char_cursor#22 print_line_cursor#2
Identical Phi Values print_char_cursor#23 print_char_cursor#1
Identical Phi Values print_line_cursor#38 print_line_cursor#0
Identical Phi Values print_char_cursor#24 print_line_cursor#0
Identical Phi Values print_char_cursor#25 print_char_cursor#113
Identical Phi Values print_line_cursor#39 print_line_cursor#26
Identical Phi Values print_char_cursor#26 print_char_cursor#113
Identical Phi Values print_line_cursor#40 print_line_cursor#26
Identical Phi Values print_char_cursor#27 print_char_cursor#113
Identical Phi Values print_line_cursor#41 print_line_cursor#26
Identical Phi Values print_char_cursor#28 print_char_cursor#113
Identical Phi Values print_line_cursor#42 print_line_cursor#26
Identical Phi Values print_char_cursor#29 print_char_cursor#113
Identical Phi Values print_line_cursor#10 print_line_cursor#26
Identical Phi Values print_char_cursor#30 print_char_cursor#113
Identical Phi Values print_line_cursor#11 print_line_cursor#26
Identical Phi Values print_char_cursor#31 print_char_cursor#113
Identical Phi Values print_line_cursor#12 print_line_cursor#26
Identical Phi Values print_char_cursor#32 print_char_cursor#113
Identical Phi Values print_line_cursor#13 print_line_cursor#26
Identical Phi Values print_char_cursor#33 print_char_cursor#1
Identical Phi Values print_line_cursor#14 print_line_cursor#0
Identical Phi Values print_char_cursor#34 print_line_cursor#0
Identical Phi Values print_char_cursor#35 print_char_cursor#120
Identical Phi Values print_line_cursor#15 print_line_cursor#28
Identical Phi Values print_char_cursor#36 print_char_cursor#120
Identical Phi Values print_line_cursor#16 print_line_cursor#28
Identical Phi Values print_char_cursor#37 print_char_cursor#120
Identical Phi Values print_line_cursor#17 print_line_cursor#28
Identical Phi Values print_char_cursor#100 print_char_cursor#120
Identical Phi Values print_line_cursor#18 print_line_cursor#28
Identical Phi Values print_char_cursor#101 print_char_cursor#120
Identical Phi Values print_line_cursor#19 print_line_cursor#28
Identical Phi Values print_char_cursor#102 print_char_cursor#120
Identical Phi Values print_line_cursor#20 print_line_cursor#28
Identical Phi Values print_char_cursor#103 print_char_cursor#120
Identical Phi Values print_line_cursor#21 print_line_cursor#28
Identical Phi Values print_char_cursor#104 print_char_cursor#120
Identical Phi Values print_line_cursor#22 print_line_cursor#28
Identical Phi Values print_char_cursor#105 print_char_cursor#120
Identical Phi Values print_line_cursor#23 print_line_cursor#28
Identical Phi Values print_char_cursor#106 print_char_cursor#120
Identical Phi Values print_line_cursor#24 print_line_cursor#28
Identical Phi Values print_char_cursor#108 print_char_cursor#16
Identical Phi Values print_char_cursor#109 print_char_cursor#18
Identical Phi Values print_char_cursor#110 print_char_cursor#16
Identical Phi Values print_char_cursor#111 print_char_cursor#18
Identical Phi Values print_char_cursor#112 print_char_cursor#13
Identical Phi Values print_line_cursor#26 print_line_cursor#0
Identical Phi Values print_char_cursor#113 print_line_cursor#0
Identical Phi Values print_char_cursor#115 print_char_cursor#10
Identical Phi Values print_char_cursor#116 print_char_cursor#18
Identical Phi Values print_char_cursor#117 print_char_cursor#10
Identical Phi Values print_char_cursor#118 print_char_cursor#18
Identical Phi Values print_char_cursor#119 print_char_cursor#6
Identical Phi Values print_line_cursor#28 print_line_cursor#0
Identical Phi Values print_char_cursor#120 print_line_cursor#0
Identical Phi Values mulf8s127::a#1 mulf8s127::a#0
Identical Phi Values mulf8s127::b#1 mulf8s127::b#0
Identical Phi Values print_line_cursor#31 print_line_cursor#24
Identical Phi Values print_char_cursor#122 print_char_cursor#106
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values memset::return#0 memset::str#0
Identical Phi Values print_char_cursor#129 print_char_cursor#18
Identical Phi Values print_char_cursor#132 print_char_cursor#18
Identical Phi Values print_char_cursor#136 print_line_cursor#0
Identical Phi Values print_line_cursor#69 print_line_cursor#0
Identical Phi Values print_char_cursor#137 print_line_cursor#0
Identical Phi Values print_line_cursor#70 print_line_cursor#0
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values print_char_cursor#133 print_char_cursor#18
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memset::$1 [2] if(memset::num#0<=0) goto memset::@1
Simple Condition memset::$3 [9] if(memset::dst#2!=memset::end#0) goto memset::@4
Simple Condition print_str::$1 [16] if(0!=*print_str::str#3) goto print_str::@2
Simple Condition print_ln::$1 [26] if(print_line_cursor#0<print_char_cursor#126) goto print_ln::@1
Simple Condition print_sint::$0 [30] if(print_sint::w#1<0) goto print_sint::@1
Simple Condition print_schar::$0 [45] if(print_schar::b#3<0) goto print_schar::@1
Simple Condition mulf8s127::$2 [235] if(mulf8s127::a#0>=0) goto mulf8s127::@1
Simple Condition mulf8s127::$4 [238] if(mulf8s127::b#0>=0) goto mulf8s127::@2
Successful SSA optimization Pass2ConditionalJumpSimplification
Rewriting ! if()-condition to reversed if() [246] mulf8s127::$8 = ! mulf8s127::$7
Rewriting && if()-condition to two if()s [245] mulf8s127::$7 = mulf8s127::$5 && mulf8s127::$6
Successful SSA optimization Pass2ConditionalAndOrRewriting
Constant print_char::ch#1 = '-'
Constant print_char::ch#2 = ' '
Constant print_char::ch#3 = '-'
Constant print_char::ch#4 = ' '
Constant memset::c#0 = ' '
Constant memset::num#0 = $3e8
Constant print_str::str#1 = main::str
Constant print_mulf8u127::a#0 = 0
Constant print_mulf8u127::b#0 = 0
Constant print_mulf8u127::a#1 = $7f
Constant print_mulf8u127::b#1 = $7f
Constant print_mulf8u127::a#2 = $40
Constant print_mulf8u127::b#2 = $40
Constant print_mulf8u127::a#3 = $40
Constant print_mulf8u127::b#3 = $7f
Constant print_mulf8u127::a#4 = $40
Constant print_mulf8u127::b#4 = $c0
Constant print_mulf8u127::a#5 = $ff
Constant print_mulf8u127::b#5 = $7f
Constant print_mulf8u127::a#6 = $c0
Constant print_mulf8u127::b#6 = $c0
Constant print_mulf8u127::a#7 = $ff
Constant print_mulf8u127::b#7 = $ff
Constant print_str::str#2 = main::str1
Constant print_mulf8s127::a#0 = 0
Constant print_mulf8s127::b#0 = 0
Constant print_mulf8s127::a#1 = $40
Constant print_mulf8s127::b#1 = $40
Constant print_mulf8s127::a#2 = $40
Constant print_mulf8s127::b#2 = $7f
Constant print_mulf8s127::a#3 = -$40
Constant print_mulf8s127::b#3 = $40
Constant print_mulf8s127::a#4 = $40
Constant print_mulf8s127::b#4 = -$40
Constant print_mulf8s127::a#5 = -$40
Constant print_mulf8s127::b#5 = -$40
Constant print_mulf8s127::a#6 = $7f
Constant print_mulf8s127::b#6 = $7f
Constant print_mulf8s127::a#7 = -$7f
Constant print_mulf8s127::b#7 = $7f
Constant print_mulf8s127::a#8 = $7f
Constant print_mulf8s127::b#8 = -$7f
Constant print_mulf8s127::a#9 = -$7f
Constant print_mulf8s127::b#9 = -$7f
Constant print_char::ch#7 = '*'
Constant print_char::ch#8 = '='
Constant print_char::ch#9 = '*'
Constant print_char::ch#10 = '='
Constant print_screen#0 = (byte*) 1024
Successful SSA optimization Pass2ConstantIdentification
Constant memset::str#0 = (void*)print_screen#0
Successful SSA optimization Pass2ConstantIdentification
Constant memset::$4 = (byte*)memset::str#0
Constant memset::dst#0 = (byte*)memset::str#0
Constant memset::return#2 = memset::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [2] if(memset::num#0<=0) goto memset::@1
Successful SSA optimization Pass2ConstantIfs
Eliminating unused constant memset::return#2
Successful SSA optimization PassNEliminateUnusedVars
Removing unused procedure __start
Removing unused procedure block __start
Removing unused procedure block __start::__init1
Removing unused procedure block __start::@1
Removing unused procedure block __start::@2
Removing unused procedure block __start::@return
Successful SSA optimization PassNEliminateEmptyStart
Simple Condition mulf8s127::$5 [132] if(mulf8s127::a#0<0) goto mulf8s127::@8
Simple Condition mulf8s127::$6 [139] if(mulf8s127::b#0<0) goto mulf8s127::@6
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [132] if(mulf8s127::a#0>=0) goto mulf8s127::@3
Negating conditional jump and destination [139] if(mulf8s127::b#0>=0) goto mulf8s127::@3
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [0] memset::end#0 = memset::$4 + memset::num#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memset::end#0 = memset::$4+memset::num#0
Successful SSA optimization Pass2ConstantIdentification
Inlining Noop Cast [121] mulf8s127::c#0 = (signed word)mulf8s127::$0 keeping mulf8s127::c#0
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [126] mulf8s127::$9 = mulf8s127::$11 * 2
Rewriting multiplication to use shift [131] mulf8s127::$10 = mulf8s127::$12 * 2
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memset::dst#0
Inlining constant with var siblings print_str::str#1
Inlining constant with var siblings print_str::str#2
Inlining constant with var siblings print_char::ch#1
Inlining constant with var siblings print_char::ch#2
Inlining constant with var siblings print_char::ch#3
Inlining constant with var siblings print_char::ch#4
Inlining constant with var siblings print_char::ch#7
Inlining constant with var siblings print_char::ch#8
Inlining constant with var siblings print_char::ch#9
Inlining constant with var siblings print_char::ch#10
Inlining constant with var siblings print_mulf8u127::a#0
Inlining constant with var siblings print_mulf8u127::b#0
Inlining constant with var siblings print_mulf8u127::a#1
Inlining constant with var siblings print_mulf8u127::b#1
Inlining constant with var siblings print_mulf8u127::a#2
Inlining constant with var siblings print_mulf8u127::b#2
Inlining constant with var siblings print_mulf8u127::a#3
Inlining constant with var siblings print_mulf8u127::b#3
Inlining constant with var siblings print_mulf8u127::a#4
Inlining constant with var siblings print_mulf8u127::b#4
Inlining constant with var siblings print_mulf8u127::a#5
Inlining constant with var siblings print_mulf8u127::b#5
Inlining constant with var siblings print_mulf8u127::a#6
Inlining constant with var siblings print_mulf8u127::b#6
Inlining constant with var siblings print_mulf8u127::a#7
Inlining constant with var siblings print_mulf8u127::b#7
Inlining constant with var siblings print_mulf8s127::a#0
Inlining constant with var siblings print_mulf8s127::b#0
Inlining constant with var siblings print_mulf8s127::a#1
Inlining constant with var siblings print_mulf8s127::b#1
Inlining constant with var siblings print_mulf8s127::a#2
Inlining constant with var siblings print_mulf8s127::b#2
Inlining constant with var siblings print_mulf8s127::a#3
Inlining constant with var siblings print_mulf8s127::b#3
Inlining constant with var siblings print_mulf8s127::a#4
Inlining constant with var siblings print_mulf8s127::b#4
Inlining constant with var siblings print_mulf8s127::a#5
Inlining constant with var siblings print_mulf8s127::b#5
Inlining constant with var siblings print_mulf8s127::a#6
Inlining constant with var siblings print_mulf8s127::b#6
Inlining constant with var siblings print_mulf8s127::a#7
Inlining constant with var siblings print_mulf8s127::b#7
Inlining constant with var siblings print_mulf8s127::a#8
Inlining constant with var siblings print_mulf8s127::b#8
Inlining constant with var siblings print_mulf8s127::a#9
Inlining constant with var siblings print_mulf8s127::b#9
Constant inlined print_char::ch#10 = '='
Constant inlined print_char::ch#7 = '*'
Constant inlined print_char::ch#9 = '*'
Constant inlined print_char::ch#8 = '='
Constant inlined memset::$4 = (byte*)memset::str#0
Constant inlined print_mulf8s127::b#6 = $7f
Constant inlined print_mulf8s127::a#7 = -$7f
Constant inlined print_mulf8s127::b#7 = $7f
Constant inlined print_mulf8s127::a#8 = $7f
Constant inlined print_mulf8s127::b#4 = -$40
Constant inlined print_mulf8s127::a#5 = -$40
Constant inlined print_mulf8s127::b#5 = -$40
Constant inlined print_mulf8s127::a#6 = $7f
Constant inlined print_mulf8s127::b#2 = $7f
Constant inlined print_mulf8s127::a#3 = -$40
Constant inlined print_mulf8s127::b#3 = $40
Constant inlined print_mulf8s127::a#4 = $40
Constant inlined print_mulf8u127::b#7 = $ff
Constant inlined print_mulf8s127::b#0 = 0
Constant inlined print_mulf8s127::a#1 = $40
Constant inlined print_mulf8u127::b#6 = $c0
Constant inlined print_mulf8u127::a#7 = $ff
Constant inlined print_mulf8s127::b#1 = $40
Constant inlined print_mulf8s127::a#2 = $40
Constant inlined print_mulf8s127::a#0 = 0
Constant inlined print_char::ch#3 = '-'
Constant inlined print_char::ch#2 = ' '
Constant inlined print_char::ch#4 = ' '
Constant inlined print_char::ch#1 = '-'
Constant inlined print_mulf8u127::b#5 = $7f
Constant inlined print_mulf8u127::a#6 = $c0
Constant inlined print_mulf8u127::b#4 = $c0
Constant inlined print_mulf8u127::a#5 = $ff
Constant inlined print_str::str#2 = main::str1
Constant inlined memset::dst#0 = (byte*)memset::str#0
Constant inlined print_mulf8u127::b#3 = $7f
Constant inlined print_mulf8u127::a#4 = $40
Constant inlined print_str::str#1 = main::str
Constant inlined print_mulf8u127::b#2 = $40
Constant inlined print_mulf8u127::a#3 = $40
Constant inlined print_mulf8u127::b#1 = $7f
Constant inlined print_mulf8u127::a#2 = $40
Constant inlined print_mulf8u127::b#0 = 0
Constant inlined print_mulf8u127::a#1 = $7f
Constant inlined print_mulf8u127::a#0 = 0
Constant inlined print_mulf8s127::b#8 = -$7f
Constant inlined print_mulf8s127::a#9 = -$7f
Constant inlined print_mulf8s127::b#9 = -$7f
Successful SSA optimization Pass2ConstantInlining
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $10
Finalized unsigned number type (word) $200
Finalized unsigned number type (word) $200
Finalized unsigned number type (word) $200
Finalized unsigned number type (word) $200
Successful SSA optimization PassNFinalizeNumberTypeConversions
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Added new block during phi lifting mulf8s127::@9(between mulf8s127::@7 and mulf8s127::@1)
Added new block during phi lifting mulf8s127::@10(between mulf8s127::@1 and mulf8s127::@2)
Added new block during phi lifting mulf8s127::@11(between mulf8s127::@2 and mulf8s127::@3)
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::@8
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::@14
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@21
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_cls::@1
Adding NOP phi() at start of print_ln::@2
Adding NOP phi() at start of print_mulf8u127::@7
Adding NOP phi() at start of print_mulf8s127::@7
Adding NOP phi() at start of memset
Adding NOP phi() at start of memset::@2
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of print_uchar::@2
Adding NOP phi() at start of print_uint::@2
Adding NOP phi() at start of print_schar::@6
Adding NOP phi() at start of print_sint::@6
CALL GRAPH
Calls in [main] to print_cls:1 print_str:3 print_ln:5 print_mulf8u127:7 print_mulf8u127:9 print_mulf8u127:11 print_mulf8u127:13 print_mulf8u127:15 print_mulf8u127:17 print_mulf8u127:19 print_mulf8u127:21 print_str:23 print_ln:26 print_mulf8s127:28 print_mulf8s127:30 print_mulf8s127:32 print_mulf8s127:34 print_mulf8s127:36 print_mulf8s127:38 print_mulf8s127:40 print_mulf8s127:42 print_mulf8s127:44 print_mulf8s127:46 
Calls in [print_cls] to memset:50 
Calls in [print_str] to print_char:62 
Calls in [print_mulf8u127] to mulf8u127:79 print_uchar:85 print_char:87 print_uchar:91 print_char:93 print_uint:96 print_ln:99 
Calls in [print_mulf8s127] to mulf8s127:105 print_schar:111 print_char:113 print_schar:117 print_char:119 print_sint:121 print_ln:124 
Calls in [print_uchar] to print_char:151 print_char:156 
Calls in [print_uint] to print_uchar:163 print_uchar:167 
Calls in [mulf8s127] to mulf8u127:174 
Calls in [print_schar] to print_char:201 print_uchar:207 print_char:211 
Calls in [print_sint] to print_char:216 print_uint:221 print_char:225 

Created 26 initial phi equivalence classes
Coalesced [4] print_char_cursor#148 = print_char_cursor#1
Not coalescing [22] print_char_cursor#144 = print_line_cursor#0
Coalesced [24] print_line_cursor#84 = print_line_cursor#0
Coalesced (already) [25] print_char_cursor#147 = print_char_cursor#1
Coalesced [54] print_str::str#7 = print_str::str#6
Coalesced [55] print_char_cursor#145 = print_char_cursor#139
Coalesced [60] print_char::ch#12 = print_char::ch#0
Coalesced [61] print_char_cursor#166 = print_char_cursor#1
Coalesced [64] print_str::str#8 = print_str::str#0
Coalesced [65] print_char_cursor#146 = print_char_cursor#18
Coalesced [67] print_line_cursor#87 = print_line_cursor#65
Coalesced (already) [73] print_line_cursor#88 = print_line_cursor#0
Coalesced [77] mulf8u127::a#4 = mulf8u127::a#0
Coalesced [78] mulf8u127::b#4 = mulf8u127::b#0
Coalesced [83] print_uchar::b#7 = print_uchar::b#3
Not coalescing [84] print_char_cursor#153 = print_line_cursor#0
Coalesced (already) [86] print_char_cursor#160 = print_char_cursor#18
Coalesced [89] print_uchar::b#8 = print_uchar::b#4
Coalesced [90] print_char_cursor#154 = print_char_cursor#18
Coalesced (already) [92] print_char_cursor#161 = print_char_cursor#18
Coalesced [95] print_uint::w#4 = print_uint::w#1
Coalesced (already) [97] print_line_cursor#86 = print_line_cursor#0
Coalesced (already) [98] print_char_cursor#150 = print_char_cursor#18
Coalesced [109] print_schar::b#9 = print_schar::b#1
Not coalescing [110] print_char_cursor#151 = print_line_cursor#0
Coalesced (already) [112] print_char_cursor#158 = print_char_cursor#18
Coalesced [115] print_schar::b#10 = print_schar::b#2
Coalesced [116] print_char_cursor#152 = print_char_cursor#18
Coalesced (already) [118] print_char_cursor#159 = print_char_cursor#18
Coalesced (already) [122] print_line_cursor#85 = print_line_cursor#0
Coalesced (already) [123] print_char_cursor#149 = print_char_cursor#18
Coalesced [135] memset::dst#4 = memset::dst#1
Coalesced [149] print_char::ch#13 = print_char::ch#5
Coalesced (already) [150] print_char_cursor#167 = print_char_cursor#134
Coalesced [154] print_char::ch#14 = print_char::ch#6
Coalesced (already) [155] print_char_cursor#168 = print_char_cursor#18
Coalesced [161] print_uchar::b#10 = print_uchar::b#1
Coalesced (already) [162] print_char_cursor#156 = print_char_cursor#18
Coalesced [165] print_uchar::b#11 = print_uchar::b#2
Coalesced (already) [166] print_char_cursor#157 = print_char_cursor#18
Coalesced [172] mulf8u127::a#3 = mulf8u127::a#1
Coalesced [173] mulf8u127::b#3 = mulf8u127::b#1
Coalesced [181] mulf8s127::c#10 = mulf8s127::c#1
Coalesced [187] mulf8s127::c#13 = mulf8s127::c#2
Coalesced [192] mulf8s127::return#6 = mulf8s127::c#3
Coalesced [195] mulf8s127::return#5 = mulf8s127::c#7
Coalesced [196] mulf8s127::c#12 = mulf8s127::c#5
Coalesced (already) [200] print_char_cursor#163 = print_char_cursor#130
Coalesced [202] print_schar::b#12 = print_schar::b#3
Coalesced [205] print_uchar::b#9 = print_uchar::b#0
Coalesced (already) [206] print_char_cursor#155 = print_char_cursor#18
Coalesced (already) [210] print_char_cursor#162 = print_char_cursor#130
Coalesced [213] print_schar::b#11 = print_schar::b#0
Coalesced (already) [215] print_char_cursor#165 = print_char_cursor#18
Coalesced [217] print_sint::w#9 = print_sint::w#1
Coalesced [220] print_uint::w#5 = print_uint::w#0
Coalesced (already) [224] print_char_cursor#164 = print_char_cursor#18
Coalesced [227] print_sint::w#8 = print_sint::w#0
Coalesced down to 16 phi equivalence classes
Culled Empty Block label main::@23
Culled Empty Block label print_cls::@1
Culled Empty Block label print_ln::@2
Culled Empty Block label print_ln::@3
Culled Empty Block label print_mulf8u127::@7
Culled Empty Block label print_mulf8s127::@7
Culled Empty Block label memset::@2
Culled Empty Block label memset::@1
Culled Empty Block label print_uchar::@2
Culled Empty Block label print_uint::@2
Culled Empty Block label mulf8s127::@11
Culled Empty Block label mulf8s127::@10
Culled Empty Block label print_schar::@5
Culled Empty Block label print_schar::@6
Culled Empty Block label print_sint::@5
Culled Empty Block label print_sint::@6
Renumbering block memset::@3 to memset::@1
Renumbering block memset::@4 to memset::@2
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::@8
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@12
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::@14
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@21
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_mulf8u127::@2
Adding NOP phi() at start of print_mulf8u127::@4
Adding NOP phi() at start of print_mulf8u127::@6
Adding NOP phi() at start of print_mulf8s127::@2
Adding NOP phi() at start of print_mulf8s127::@4
Adding NOP phi() at start of print_mulf8s127::@6
Adding NOP phi() at start of memset
Adding NOP phi() at start of print_schar::@3
Adding NOP phi() at start of print_schar::@1
Adding NOP phi() at start of print_sint::@3
Adding NOP phi() at start of print_sint::@1

FINAL CONTROL FLOW GRAPH

void main()
main: scope:[main]  from
  [0] phi()
  [1] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call print_str 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call print_ln 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [6] phi()
  [7] call print_mulf8u127 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [8] phi()
  [9] call print_mulf8u127 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [10] phi()
  [11] call print_mulf8u127 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [12] phi()
  [13] call print_mulf8u127 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [14] phi()
  [15] call print_mulf8u127 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [16] phi()
  [17] call print_mulf8u127 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [18] phi()
  [19] call print_mulf8u127 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [20] phi()
  [21] call print_mulf8u127 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [22] print_char_cursor#144 = print_line_cursor#0
  [23] call print_str 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [24] phi()
  [25] call print_ln 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [26] phi()
  [27] call print_mulf8s127 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [28] phi()
  [29] call print_mulf8s127 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [30] phi()
  [31] call print_mulf8s127 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [32] phi()
  [33] call print_mulf8s127 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [34] phi()
  [35] call print_mulf8s127 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [36] phi()
  [37] call print_mulf8s127 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [38] phi()
  [39] call print_mulf8s127 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [40] phi()
  [41] call print_mulf8s127 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [42] phi()
  [43] call print_mulf8s127 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [44] phi()
  [45] call print_mulf8s127 
  to:main::@return
main::@return: scope:[main]  from main::@22
  [46] return 
  to:@return

void print_cls()
print_cls: scope:[print_cls]  from main
  [47] phi()
  [48] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [49] return 
  to:@return

void print_str(byte* print_str::str)
print_str: scope:[print_str]  from main::@1 main::@11
  [50] print_char_cursor#139 = phi( main::@1/print_screen#0, main::@11/print_char_cursor#144 )
  [50] print_str::str#6 = phi( main::@1/main::str, main::@11/main::str1 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [51] print_char_cursor#1 = phi( print_str/print_char_cursor#139, print_str::@3/print_char_cursor#18 )
  [51] print_str::str#3 = phi( print_str/print_str::str#6, print_str::@3/print_str::str#0 )
  [52] if(0!=*print_str::str#3) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [53] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [54] print_char::ch#0 = *print_str::str#3
  [55] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [56] print_str::str#0 = ++ print_str::str#3
  to:print_str::@1

void print_ln()
print_ln: scope:[print_ln]  from main::@12 main::@2 print_mulf8s127::@6 print_mulf8u127::@6
  [57] print_char_cursor#126 = phi( main::@12/print_char_cursor#1, main::@2/print_char_cursor#1, print_mulf8s127::@6/print_char_cursor#18, print_mulf8u127::@6/print_char_cursor#18 )
  [57] print_line_cursor#65 = phi( main::@12/print_line_cursor#0, main::@2/print_screen#0, print_mulf8s127::@6/print_line_cursor#0, print_mulf8u127::@6/print_line_cursor#0 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [58] print_line_cursor#33 = phi( print_ln/print_line_cursor#65, print_ln::@1/print_line_cursor#0 )
  [59] print_line_cursor#0 = print_line_cursor#33 + $28
  [60] if(print_line_cursor#0<print_char_cursor#126) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [61] return 
  to:@return

void print_mulf8u127(byte print_mulf8u127::a , byte print_mulf8u127::b)
print_mulf8u127: scope:[print_mulf8u127]  from main::@10 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [62] print_mulf8u127::b#10 = phi( main::@10/$ff, main::@3/0, main::@4/$7f, main::@5/$40, main::@6/$7f, main::@7/$c0, main::@8/$7f, main::@9/$c0 )
  [62] print_mulf8u127::a#8 = phi( main::@10/$ff, main::@3/0, main::@4/$7f, main::@5/$40, main::@6/$40, main::@7/$40, main::@8/$ff, main::@9/$c0 )
  [63] mulf8u127::a#0 = print_mulf8u127::a#8
  [64] mulf8u127::b#0 = print_mulf8u127::b#10
  [65] call mulf8u127 
  [66] mulf8u127::return#0 = mulf8u127::return#1
  to:print_mulf8u127::@1
print_mulf8u127::@1: scope:[print_mulf8u127]  from print_mulf8u127
  [67] print_mulf8u127::c#0 = mulf8u127::return#0
  [68] print_uchar::b#3 = print_mulf8u127::a#8
  [69] print_char_cursor#153 = print_line_cursor#0
  [70] call print_uchar 
  to:print_mulf8u127::@2
print_mulf8u127::@2: scope:[print_mulf8u127]  from print_mulf8u127::@1
  [71] phi()
  [72] call print_char 
  to:print_mulf8u127::@3
print_mulf8u127::@3: scope:[print_mulf8u127]  from print_mulf8u127::@2
  [73] print_uchar::b#4 = print_mulf8u127::b#10
  [74] call print_uchar 
  to:print_mulf8u127::@4
print_mulf8u127::@4: scope:[print_mulf8u127]  from print_mulf8u127::@3
  [75] phi()
  [76] call print_char 
  to:print_mulf8u127::@5
print_mulf8u127::@5: scope:[print_mulf8u127]  from print_mulf8u127::@4
  [77] print_uint::w#1 = print_mulf8u127::c#0
  [78] call print_uint 
  to:print_mulf8u127::@6
print_mulf8u127::@6: scope:[print_mulf8u127]  from print_mulf8u127::@5
  [79] phi()
  [80] call print_ln 
  to:print_mulf8u127::@return
print_mulf8u127::@return: scope:[print_mulf8u127]  from print_mulf8u127::@6
  [81] return 
  to:@return

void print_mulf8s127(signed byte print_mulf8s127::a , signed byte print_mulf8s127::b)
print_mulf8s127: scope:[print_mulf8s127]  from main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@20 main::@21 main::@22
  [82] print_mulf8s127::b#10 = phi( main::@13/0, main::@14/$40, main::@15/$7f, main::@16/$40, main::@17/-$40, main::@18/-$40, main::@19/$7f, main::@20/$7f, main::@21/-$7f, main::@22/-$7f )
  [82] print_mulf8s127::a#10 = phi( main::@13/0, main::@14/$40, main::@15/$40, main::@16/-$40, main::@17/$40, main::@18/-$40, main::@19/$7f, main::@20/-$7f, main::@21/$7f, main::@22/-$7f )
  [83] mulf8s127::a#0 = print_mulf8s127::a#10
  [84] mulf8s127::b#0 = print_mulf8s127::b#10
  [85] call mulf8s127 
  [86] mulf8s127::return#0 = mulf8s127::return#1
  to:print_mulf8s127::@1
print_mulf8s127::@1: scope:[print_mulf8s127]  from print_mulf8s127
  [87] print_mulf8s127::c#0 = mulf8s127::return#0
  [88] print_schar::b#1 = print_mulf8s127::a#10
  [89] print_char_cursor#151 = print_line_cursor#0
  [90] call print_schar 
  to:print_mulf8s127::@2
print_mulf8s127::@2: scope:[print_mulf8s127]  from print_mulf8s127::@1
  [91] phi()
  [92] call print_char 
  to:print_mulf8s127::@3
print_mulf8s127::@3: scope:[print_mulf8s127]  from print_mulf8s127::@2
  [93] print_schar::b#2 = print_mulf8s127::b#10
  [94] call print_schar 
  to:print_mulf8s127::@4
print_mulf8s127::@4: scope:[print_mulf8s127]  from print_mulf8s127::@3
  [95] phi()
  [96] call print_char 
  to:print_mulf8s127::@5
print_mulf8s127::@5: scope:[print_mulf8s127]  from print_mulf8s127::@4
  [97] print_sint::w#1 = print_mulf8s127::c#0
  [98] call print_sint 
  to:print_mulf8s127::@6
print_mulf8s127::@6: scope:[print_mulf8s127]  from print_mulf8s127::@5
  [99] phi()
  [100] call print_ln 
  to:print_mulf8s127::@return
print_mulf8s127::@return: scope:[print_mulf8s127]  from print_mulf8s127::@6
  [101] return 
  to:@return

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from print_cls
  [102] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [103] memset::dst#2 = phi( memset/(byte*)memset::str#0, memset::@2/memset::dst#1 )
  [104] if(memset::dst#2!=memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [105] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [106] *memset::dst#2 = memset::c#0
  [107] memset::dst#1 = ++ memset::dst#2
  to:memset::@1

void print_char(byte print_char::ch)
print_char: scope:[print_char]  from print_mulf8s127::@2 print_mulf8s127::@4 print_mulf8u127::@2 print_mulf8u127::@4 print_schar::@1 print_schar::@3 print_sint::@1 print_sint::@3 print_str::@2 print_uchar print_uchar::@1
  [108] print_char_cursor#81 = phi( print_mulf8s127::@2/print_char_cursor#18, print_mulf8s127::@4/print_char_cursor#18, print_mulf8u127::@2/print_char_cursor#18, print_mulf8u127::@4/print_char_cursor#18, print_schar::@1/print_char_cursor#130, print_schar::@3/print_char_cursor#130, print_sint::@1/print_char_cursor#18, print_sint::@3/print_char_cursor#18, print_str::@2/print_char_cursor#1, print_uchar/print_char_cursor#134, print_uchar::@1/print_char_cursor#18 )
  [108] print_char::ch#11 = phi( print_mulf8s127::@2/'*', print_mulf8s127::@4/'=', print_mulf8u127::@2/'*', print_mulf8u127::@4/'=', print_schar::@1/'-', print_schar::@3/' ', print_sint::@1/'-', print_sint::@3/' ', print_str::@2/print_char::ch#0, print_uchar/print_char::ch#5, print_uchar::@1/print_char::ch#6 )
  [109] *print_char_cursor#81 = print_char::ch#11
  [110] print_char_cursor#18 = ++ print_char_cursor#81
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [111] return 
  to:@return

word mulf8u127(byte mulf8u127::a , byte mulf8u127::b)
mulf8u127: scope:[mulf8u127]  from mulf8s127 print_mulf8u127
  [112] mulf8u127::b#2 = phi( mulf8s127/mulf8u127::b#1, print_mulf8u127/mulf8u127::b#0 )
  [112] mulf8u127::a#2 = phi( mulf8s127/mulf8u127::a#1, print_mulf8u127/mulf8u127::a#0 )
  [113] *mulf8u127::memA = mulf8u127::a#2
  [114] *mulf8u127::memB = mulf8u127::b#2
  asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamulf127_sqr1_lo,x sm2: sbcmulf127_sqr2_lo,x staresL sm3: ldamulf127_sqr1_hi,x sm4: sbcmulf127_sqr2_hi,x staresH  }
  [116] mulf8u127::return#1 = *mulf8u127::res
  to:mulf8u127::@return
mulf8u127::@return: scope:[mulf8u127]  from mulf8u127
  [117] return 
  to:@return

void print_uchar(byte print_uchar::b)
print_uchar: scope:[print_uchar]  from print_mulf8u127::@1 print_mulf8u127::@3 print_schar::@2 print_uint print_uint::@1
  [118] print_char_cursor#134 = phi( print_mulf8u127::@1/print_char_cursor#153, print_mulf8u127::@3/print_char_cursor#18, print_schar::@2/print_char_cursor#18, print_uint/print_char_cursor#18, print_uint::@1/print_char_cursor#18 )
  [118] print_uchar::b#5 = phi( print_mulf8u127::@1/print_uchar::b#3, print_mulf8u127::@3/print_uchar::b#4, print_schar::@2/print_uchar::b#0, print_uint/print_uchar::b#1, print_uint::@1/print_uchar::b#2 )
  [119] print_uchar::$0 = print_uchar::b#5 >> 4
  [120] print_char::ch#5 = print_hextab[print_uchar::$0]
  [121] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [122] print_uchar::$2 = print_uchar::b#5 & $f
  [123] print_char::ch#6 = print_hextab[print_uchar::$2]
  [124] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [125] return 
  to:@return

void print_uint(word print_uint::w)
print_uint: scope:[print_uint]  from print_mulf8u127::@5 print_sint::@2
  [126] print_uint::w#2 = phi( print_mulf8u127::@5/print_uint::w#1, print_sint::@2/print_uint::w#0 )
  [127] print_uchar::b#1 = > print_uint::w#2
  [128] call print_uchar 
  to:print_uint::@1
print_uint::@1: scope:[print_uint]  from print_uint
  [129] print_uchar::b#2 = < print_uint::w#2
  [130] call print_uchar 
  to:print_uint::@return
print_uint::@return: scope:[print_uint]  from print_uint::@1
  [131] return 
  to:@return

signed word mulf8s127(signed byte mulf8s127::a , signed byte mulf8s127::b)
mulf8s127: scope:[mulf8s127]  from print_mulf8s127
  [132] mulf8u127::a#1 = (byte)mulf8s127::a#0
  [133] mulf8u127::b#1 = (byte)mulf8s127::b#0
  [134] call mulf8u127 
  [135] mulf8u127::return#3 = mulf8u127::return#1
  to:mulf8s127::@7
mulf8s127::@7: scope:[mulf8s127]  from mulf8s127
  [136] mulf8s127::c#0 = mulf8u127::return#3
  [137] if(mulf8s127::a#0>=0) goto mulf8s127::@9
  to:mulf8s127::@4
mulf8s127::@4: scope:[mulf8s127]  from mulf8s127::@7
  [138] mulf8s127::$11 = (signed word)mulf8s127::b#0
  [139] mulf8s127::$9 = mulf8s127::$11 << 1
  [140] mulf8s127::c#1 = (signed word)mulf8s127::c#0 - mulf8s127::$9
  to:mulf8s127::@1
mulf8s127::@1: scope:[mulf8s127]  from mulf8s127::@4 mulf8s127::@9
  [141] mulf8s127::c#5 = phi( mulf8s127::@4/mulf8s127::c#1, mulf8s127::@9/mulf8s127::c#11 )
  [142] if(mulf8s127::b#0>=0) goto mulf8s127::@2
  to:mulf8s127::@5
mulf8s127::@5: scope:[mulf8s127]  from mulf8s127::@1
  [143] mulf8s127::$12 = (signed word)mulf8s127::a#0
  [144] mulf8s127::$10 = mulf8s127::$12 << 1
  [145] mulf8s127::c#2 = mulf8s127::c#5 - mulf8s127::$10
  to:mulf8s127::@2
mulf8s127::@2: scope:[mulf8s127]  from mulf8s127::@1 mulf8s127::@5
  [146] mulf8s127::c#7 = phi( mulf8s127::@1/mulf8s127::c#5, mulf8s127::@5/mulf8s127::c#2 )
  [147] if(mulf8s127::a#0>=0) goto mulf8s127::@3
  to:mulf8s127::@8
mulf8s127::@8: scope:[mulf8s127]  from mulf8s127::@2
  [148] if(mulf8s127::b#0>=0) goto mulf8s127::@3
  to:mulf8s127::@6
mulf8s127::@6: scope:[mulf8s127]  from mulf8s127::@8
  [149] mulf8s127::c#3 = mulf8s127::c#7 - $200
  to:mulf8s127::@3
mulf8s127::@3: scope:[mulf8s127]  from mulf8s127::@2 mulf8s127::@6 mulf8s127::@8
  [150] mulf8s127::return#1 = phi( mulf8s127::@2/mulf8s127::c#7, mulf8s127::@6/mulf8s127::c#3 )
  to:mulf8s127::@return
mulf8s127::@return: scope:[mulf8s127]  from mulf8s127::@3
  [151] return 
  to:@return
mulf8s127::@9: scope:[mulf8s127]  from mulf8s127::@7
  [152] mulf8s127::c#11 = (signed word)mulf8s127::c#0
  to:mulf8s127::@1

void print_schar(signed byte print_schar::b)
print_schar: scope:[print_schar]  from print_mulf8s127::@1 print_mulf8s127::@3
  [153] print_char_cursor#130 = phi( print_mulf8s127::@1/print_char_cursor#151, print_mulf8s127::@3/print_char_cursor#18 )
  [153] print_schar::b#3 = phi( print_mulf8s127::@1/print_schar::b#1, print_mulf8s127::@3/print_schar::b#2 )
  [154] if(print_schar::b#3<0) goto print_schar::@1
  to:print_schar::@3
print_schar::@3: scope:[print_schar]  from print_schar
  [155] phi()
  [156] call print_char 
  to:print_schar::@2
print_schar::@2: scope:[print_schar]  from print_schar::@3 print_schar::@4
  [157] print_schar::b#5 = phi( print_schar::@4/print_schar::b#0, print_schar::@3/print_schar::b#3 )
  [158] print_uchar::b#0 = (byte)print_schar::b#5
  [159] call print_uchar 
  to:print_schar::@return
print_schar::@return: scope:[print_schar]  from print_schar::@2
  [160] return 
  to:@return
print_schar::@1: scope:[print_schar]  from print_schar
  [161] phi()
  [162] call print_char 
  to:print_schar::@4
print_schar::@4: scope:[print_schar]  from print_schar::@1
  [163] print_schar::b#0 = - print_schar::b#3
  to:print_schar::@2

void print_sint(signed word print_sint::w)
print_sint: scope:[print_sint]  from print_mulf8s127::@5
  [164] if(print_sint::w#1<0) goto print_sint::@1
  to:print_sint::@3
print_sint::@3: scope:[print_sint]  from print_sint
  [165] phi()
  [166] call print_char 
  to:print_sint::@2
print_sint::@2: scope:[print_sint]  from print_sint::@3 print_sint::@4
  [167] print_sint::w#4 = phi( print_sint::@4/print_sint::w#0, print_sint::@3/print_sint::w#1 )
  [168] print_uint::w#0 = (word)print_sint::w#4
  [169] call print_uint 
  to:print_sint::@return
print_sint::@return: scope:[print_sint]  from print_sint::@2
  [170] return 
  to:@return
print_sint::@1: scope:[print_sint]  from print_sint
  [171] phi()
  [172] call print_char 
  to:print_sint::@4
print_sint::@4: scope:[print_sint]  from print_sint::@1
  [173] print_sint::w#0 = - print_sint::w#1
  to:print_sint::@2


VARIABLE REGISTER WEIGHTS
void main()
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte* memset::dst
byte* memset::dst#1 2002.0
byte* memset::dst#2 1334.6666666666667
byte* memset::end
word memset::num
void* memset::return
void* memset::str
signed word mulf8s127(signed byte mulf8s127::a , signed byte mulf8s127::b)
signed word~ mulf8s127::$10 202.0
signed word~ mulf8s127::$11 202.0
signed word~ mulf8s127::$12 202.0
signed word~ mulf8s127::$9 202.0
signed byte mulf8s127::a
signed byte mulf8s127::a#0 11.833333333333332
signed byte mulf8s127::b
signed byte mulf8s127::b#0 11.833333333333332
signed word mulf8s127::c
word mulf8s127::c#0 25.25
signed word mulf8s127::c#1 202.0
signed word mulf8s127::c#11 202.0
signed word mulf8s127::c#2 202.0
signed word mulf8s127::c#3 202.0
signed word mulf8s127::c#5 101.0
signed word mulf8s127::c#7 134.66666666666666
signed word mulf8s127::return
signed word mulf8s127::return#0 22.0
signed word mulf8s127::return#1 71.0
word mulf8u127(byte mulf8u127::a , byte mulf8u127::b)
byte mulf8u127::a
byte mulf8u127::a#0 11.0
byte mulf8u127::a#1 101.0
byte mulf8u127::a#2 1113.0
byte mulf8u127::b
byte mulf8u127::b#0 22.0
byte mulf8u127::b#1 202.0
byte mulf8u127::b#2 556.5
word mulf8u127::return
word mulf8u127::return#0 22.0
word mulf8u127::return#1 278.25
word mulf8u127::return#3 202.0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 202.0
byte print_char::ch#11 120104.0
byte print_char::ch#5 20002.0
byte print_char::ch#6 20002.0
byte* print_char_cursor
byte* print_char_cursor#1 27.125
byte* print_char_cursor#126 256.75
byte* print_char_cursor#130 56.0
byte* print_char_cursor#134 4041.999999999999
byte* print_char_cursor#139 13.0
byte* print_char_cursor#144 4.0
byte* print_char_cursor#151 22.0
byte* print_char_cursor#153 22.0
byte* print_char_cursor#18 2163.3846153846152
byte* print_char_cursor#81 110276.5
void print_cls()
byte* print_line_cursor
byte* print_line_cursor#0 36.759036144578324
byte* print_line_cursor#33 2103.0
byte* print_line_cursor#65 125.0
void print_ln()
void print_mulf8s127(signed byte print_mulf8s127::a , signed byte print_mulf8s127::b)
signed byte print_mulf8s127::a
signed byte print_mulf8s127::a#10 3.6666666666666665
signed byte print_mulf8s127::b
signed byte print_mulf8s127::b#10 2.0
signed word print_mulf8s127::c
signed word print_mulf8s127::c#0 2.2
void print_mulf8u127(byte print_mulf8u127::a , byte print_mulf8u127::b)
byte print_mulf8u127::a
byte print_mulf8u127::a#8 3.6666666666666665
byte print_mulf8u127::b
byte print_mulf8u127::b#10 2.0
word print_mulf8u127::c
word print_mulf8u127::c#0 2.2
void print_schar(signed byte print_schar::b)
signed byte print_schar::b
signed byte print_schar::b#0 202.0
signed byte print_schar::b#1 11.0
signed byte print_schar::b#2 22.0
signed byte print_schar::b#3 54.16666666666666
signed byte print_schar::b#5 202.0
byte* print_screen
void print_sint(signed word print_sint::w)
signed word print_sint::w
signed word print_sint::w#0 202.0
signed word print_sint::w#1 52.33333333333333
signed word print_sint::w#4 202.0
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 202.0
byte* print_str::str#3 103.75
byte* print_str::str#6 11.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 20002.0
byte~ print_uchar::$2 20002.0
byte print_uchar::b
byte print_uchar::b#0 202.0
byte print_uchar::b#1 2002.0
byte print_uchar::b#2 2002.0
byte print_uchar::b#3 11.0
byte print_uchar::b#4 22.0
byte print_uchar::b#5 5531.75
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#0 202.0
word print_uint::w#1 22.0
word print_uint::w#2 704.6666666666667

Initial phi equivalence classes
[ print_str::str#3 print_str::str#6 print_str::str#0 ]
[ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ]
[ print_mulf8u127::a#8 ]
[ print_mulf8u127::b#10 ]
[ print_mulf8s127::a#10 ]
[ print_mulf8s127::b#10 ]
[ memset::dst#2 memset::dst#1 ]
[ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
[ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ]
[ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ]
[ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ]
[ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
[ print_uint::w#2 print_uint::w#1 print_uint::w#0 ]
[ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ]
[ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
[ print_sint::w#4 print_sint::w#0 print_sint::w#1 ]
Added variable mulf8u127::return#0 to live range equivalence class [ mulf8u127::return#0 ]
Added variable print_mulf8u127::c#0 to live range equivalence class [ print_mulf8u127::c#0 ]
Added variable mulf8s127::a#0 to live range equivalence class [ mulf8s127::a#0 ]
Added variable mulf8s127::b#0 to live range equivalence class [ mulf8s127::b#0 ]
Added variable mulf8s127::return#0 to live range equivalence class [ mulf8s127::return#0 ]
Added variable print_mulf8s127::c#0 to live range equivalence class [ print_mulf8s127::c#0 ]
Added variable mulf8u127::return#1 to live range equivalence class [ mulf8u127::return#1 ]
Added variable print_uchar::$0 to live range equivalence class [ print_uchar::$0 ]
Added variable print_uchar::$2 to live range equivalence class [ print_uchar::$2 ]
Added variable mulf8u127::return#3 to live range equivalence class [ mulf8u127::return#3 ]
Added variable mulf8s127::c#0 to live range equivalence class [ mulf8s127::c#0 ]
Added variable mulf8s127::$11 to live range equivalence class [ mulf8s127::$11 ]
Added variable mulf8s127::$9 to live range equivalence class [ mulf8s127::$9 ]
Added variable mulf8s127::$12 to live range equivalence class [ mulf8s127::$12 ]
Added variable mulf8s127::$10 to live range equivalence class [ mulf8s127::$10 ]
Complete equivalence classes
[ print_str::str#3 print_str::str#6 print_str::str#0 ]
[ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ]
[ print_mulf8u127::a#8 ]
[ print_mulf8u127::b#10 ]
[ print_mulf8s127::a#10 ]
[ print_mulf8s127::b#10 ]
[ memset::dst#2 memset::dst#1 ]
[ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
[ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ]
[ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ]
[ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ]
[ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
[ print_uint::w#2 print_uint::w#1 print_uint::w#0 ]
[ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ]
[ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
[ print_sint::w#4 print_sint::w#0 print_sint::w#1 ]
[ mulf8u127::return#0 ]
[ print_mulf8u127::c#0 ]
[ mulf8s127::a#0 ]
[ mulf8s127::b#0 ]
[ mulf8s127::return#0 ]
[ print_mulf8s127::c#0 ]
[ mulf8u127::return#1 ]
[ print_uchar::$0 ]
[ print_uchar::$2 ]
[ mulf8u127::return#3 ]
[ mulf8s127::c#0 ]
[ mulf8s127::$11 ]
[ mulf8s127::$9 ]
[ mulf8s127::$12 ]
[ mulf8s127::$10 ]
Allocated zp[2]:2 [ print_str::str#3 print_str::str#6 print_str::str#0 ]
Allocated zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ]
Allocated zp[1]:6 [ print_mulf8u127::a#8 ]
Allocated zp[1]:7 [ print_mulf8u127::b#10 ]
Allocated zp[1]:8 [ print_mulf8s127::a#10 ]
Allocated zp[1]:9 [ print_mulf8s127::b#10 ]
Allocated zp[2]:10 [ memset::dst#2 memset::dst#1 ]
Allocated zp[1]:12 [ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
Allocated zp[2]:13 [ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ]
Allocated zp[1]:15 [ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ]
Allocated zp[1]:16 [ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ]
Allocated zp[1]:17 [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
Allocated zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 ]
Allocated zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ]
Allocated zp[1]:22 [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
Allocated zp[2]:23 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 ]
Allocated zp[2]:25 [ mulf8u127::return#0 ]
Allocated zp[2]:27 [ print_mulf8u127::c#0 ]
Allocated zp[1]:29 [ mulf8s127::a#0 ]
Allocated zp[1]:30 [ mulf8s127::b#0 ]
Allocated zp[2]:31 [ mulf8s127::return#0 ]
Allocated zp[2]:33 [ print_mulf8s127::c#0 ]
Allocated zp[2]:35 [ mulf8u127::return#1 ]
Allocated zp[1]:37 [ print_uchar::$0 ]
Allocated zp[1]:38 [ print_uchar::$2 ]
Allocated zp[2]:39 [ mulf8u127::return#3 ]
Allocated zp[2]:41 [ mulf8s127::c#0 ]
Allocated zp[2]:43 [ mulf8s127::$11 ]
Allocated zp[2]:45 [ mulf8s127::$9 ]
Allocated zp[2]:47 [ mulf8s127::$12 ]
Allocated zp[2]:49 [ mulf8s127::$10 ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [22] print_char_cursor#144 = print_line_cursor#0 [ print_char_cursor#144 print_line_cursor#0 ] (  [ print_char_cursor#144 print_line_cursor#0 ] { { print_char_cursor#139 = print_char_cursor#144 } }  ) always clobbers reg byte a 
Statement [52] if(0!=*print_str::str#3) goto print_str::@2 [ print_str::str#3 print_char_cursor#1 ] ( print_str:3 [ print_str::str#3 print_char_cursor#1 ] { }  print_str:23 [ print_line_cursor#0 print_str::str#3 print_char_cursor#1 ] { { print_char_cursor#139 = print_char_cursor#144 } }  ) always clobbers reg byte a reg byte y 
Statement [54] print_char::ch#0 = *print_str::str#3 [ print_str::str#3 print_char_cursor#1 print_char::ch#0 ] ( print_str:3 [ print_str::str#3 print_char_cursor#1 print_char::ch#0 ] { { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  print_str:23 [ print_line_cursor#0 print_str::str#3 print_char_cursor#1 print_char::ch#0 ] { { print_char_cursor#139 = print_char_cursor#144 } { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  ) always clobbers reg byte a reg byte y 
Statement [59] print_line_cursor#0 = print_line_cursor#33 + $28 [ print_line_cursor#0 print_char_cursor#126 ] ( print_ln:5 [ print_line_cursor#0 print_char_cursor#126 ] { { print_char_cursor#1 = print_char_cursor#126 } }  print_ln:25 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#1 = print_char_cursor#126 } }  print_mulf8u127:7::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:9::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:11::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:13::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:15::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:17::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:19::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:21::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:27::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:29::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:31::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:33::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:35::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:37::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:39::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:41::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:43::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:45::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  ) always clobbers reg byte a 
Statement [60] if(print_line_cursor#0<print_char_cursor#126) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#126 ] ( print_ln:5 [ print_line_cursor#0 print_char_cursor#126 ] { { print_char_cursor#1 = print_char_cursor#126 } }  print_ln:25 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#1 = print_char_cursor#126 } }  print_mulf8u127:7::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:9::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:11::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:13::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:15::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:17::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:19::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:21::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:27::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:29::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:31::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:33::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:35::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:37::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:39::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:41::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:43::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:45::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  ) always clobbers reg byte a 
Statement [66] mulf8u127::return#0 = mulf8u127::return#1 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:9 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:11 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:13 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:15 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:17 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:19 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:21 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:6 [ print_mulf8u127::a#8 ]
Removing always clobbered register reg byte a as potential for zp[1]:7 [ print_mulf8u127::b#10 ]
Statement [67] print_mulf8u127::c#0 = mulf8u127::return#0 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:9 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:11 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:13 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:15 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:17 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:19 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:21 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  ) always clobbers reg byte a 
Statement [69] print_char_cursor#153 = print_line_cursor#0 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:9 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:11 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:13 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:15 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:17 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:19 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:21 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:17 [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
Statement [77] print_uint::w#1 = print_mulf8u127::c#0 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:9 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:11 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:13 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:15 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:17 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:19 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:21 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  ) always clobbers reg byte a 
Statement [86] mulf8s127::return#0 = mulf8s127::return#1 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:8 [ print_mulf8s127::a#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:9 [ print_mulf8s127::b#10 ]
Statement [87] print_mulf8s127::c#0 = mulf8s127::return#0 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:29 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:31 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:33 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:35 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:37 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:39 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:41 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:43 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:45 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  ) always clobbers reg byte a 
Statement [89] print_char_cursor#151 = print_line_cursor#0 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:29 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:31 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:33 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:35 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:37 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:39 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:41 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:43 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:45 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:22 [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
Statement [97] print_sint::w#1 = print_mulf8s127::c#0 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:29 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:31 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:33 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:35 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:37 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:39 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:41 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:43 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:45 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  ) always clobbers reg byte a 
Statement [104] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:48 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [106] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:48 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [109] *print_char_cursor#81 = print_char::ch#11 [ print_char_cursor#81 ] ( print_str:3::print_char:55 [ print_str::str#3 print_char_cursor#81 ] { { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  print_str:23::print_char:55 [ print_line_cursor#0 print_str::str#3 print_char_cursor#81 ] { { print_char_cursor#139 = print_char_cursor#144 } { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  print_mulf8u127:7::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:27::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:27::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:27::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:27::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:27::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:27::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:27::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:7 [ print_mulf8u127::b#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:9 [ print_mulf8s127::b#10 ]
Removing always clobbered register reg byte y as potential for zp[1]:17 [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
Removing always clobbered register reg byte y as potential for zp[1]:22 [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
Statement asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamulf127_sqr1_lo,x sm2: sbcmulf127_sqr2_lo,x staresL sm3: ldamulf127_sqr1_hi,x sm4: sbcmulf127_sqr2_hi,x staresH  } always clobbers reg byte a reg byte x 
Removing always clobbered register reg byte x as potential for zp[1]:6 [ print_mulf8u127::a#8 ]
Removing always clobbered register reg byte x as potential for zp[1]:7 [ print_mulf8u127::b#10 ]
Removing always clobbered register reg byte x as potential for zp[1]:8 [ print_mulf8s127::a#10 ]
Removing always clobbered register reg byte x as potential for zp[1]:9 [ print_mulf8s127::b#10 ]
Removing always clobbered register reg byte a as potential for zp[1]:29 [ mulf8s127::a#0 ]
Removing always clobbered register reg byte x as potential for zp[1]:29 [ mulf8s127::a#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:30 [ mulf8s127::b#0 ]
Removing always clobbered register reg byte x as potential for zp[1]:30 [ mulf8s127::b#0 ]
Statement [116] mulf8u127::return#1 = *mulf8u127::res [ mulf8u127::return#1 ] ( print_mulf8u127:7::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:9::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:11::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:13::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:15::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:17::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:19::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:21::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8s127:27::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:29::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:31::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:33::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:35::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:37::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:39::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:41::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:43::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:45::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  ) always clobbers reg byte a 
Statement [119] print_uchar::$0 = print_uchar::b#5 >> 4 [ print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] ( print_mulf8u127:7::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  ) always clobbers reg byte a 
Statement [122] print_uchar::$2 = print_uchar::b#5 & $f [ print_char_cursor#18 print_uchar::$2 ] ( print_mulf8u127:7::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [135] mulf8u127::return#3 = mulf8u127::return#1 [ mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  ) always clobbers reg byte a 
Statement [136] mulf8s127::c#0 = mulf8u127::return#3 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [138] mulf8s127::$11 = (signed word)mulf8s127::b#0 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [139] mulf8s127::$9 = mulf8s127::$11 << 1 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [140] mulf8s127::c#1 = (signed word)mulf8s127::c#0 - mulf8s127::$9 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [143] mulf8s127::$12 = (signed word)mulf8s127::a#0 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [144] mulf8s127::$10 = mulf8s127::$12 << 1 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [145] mulf8s127::c#2 = mulf8s127::c#5 - mulf8s127::$10 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [149] mulf8s127::c#3 = mulf8s127::c#7 - $200 [ mulf8s127::c#3 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [152] mulf8s127::c#11 = (signed word)mulf8s127::c#0 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [163] print_schar::b#0 = - print_schar::b#3 [ print_char_cursor#18 print_schar::b#0 ] ( print_mulf8s127:27::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:29::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:31::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:33::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:35::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:37::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:39::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:41::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:43::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:45::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:27::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:29::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:31::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:33::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:35::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:37::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:39::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:41::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:43::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:45::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  ) always clobbers reg byte a 
Statement [164] if(print_sint::w#1<0) goto print_sint::@1 [ print_char_cursor#18 print_sint::w#1 ] ( print_mulf8s127:27::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:29::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:31::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:33::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:35::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:37::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:39::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:41::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:43::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:45::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  ) always clobbers reg byte a 
Statement [168] print_uint::w#0 = (word)print_sint::w#4 [ print_char_cursor#18 print_uint::w#0 ] ( print_mulf8s127:27::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:29::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:31::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:33::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:35::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:37::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:39::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:41::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:43::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:45::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  ) always clobbers reg byte a 
Statement [173] print_sint::w#0 = - print_sint::w#1 [ print_char_cursor#18 print_sint::w#0 ] ( print_mulf8s127:27::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:29::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:31::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:33::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:35::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:37::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:39::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:41::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:43::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:45::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  ) always clobbers reg byte a 
Statement [22] print_char_cursor#144 = print_line_cursor#0 [ print_char_cursor#144 print_line_cursor#0 ] (  [ print_char_cursor#144 print_line_cursor#0 ] { { print_char_cursor#139 = print_char_cursor#144 } }  ) always clobbers reg byte a 
Statement [52] if(0!=*print_str::str#3) goto print_str::@2 [ print_str::str#3 print_char_cursor#1 ] ( print_str:3 [ print_str::str#3 print_char_cursor#1 ] { }  print_str:23 [ print_line_cursor#0 print_str::str#3 print_char_cursor#1 ] { { print_char_cursor#139 = print_char_cursor#144 } }  ) always clobbers reg byte a reg byte y 
Statement [54] print_char::ch#0 = *print_str::str#3 [ print_str::str#3 print_char_cursor#1 print_char::ch#0 ] ( print_str:3 [ print_str::str#3 print_char_cursor#1 print_char::ch#0 ] { { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  print_str:23 [ print_line_cursor#0 print_str::str#3 print_char_cursor#1 print_char::ch#0 ] { { print_char_cursor#139 = print_char_cursor#144 } { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  ) always clobbers reg byte a reg byte y 
Statement [59] print_line_cursor#0 = print_line_cursor#33 + $28 [ print_line_cursor#0 print_char_cursor#126 ] ( print_ln:5 [ print_line_cursor#0 print_char_cursor#126 ] { { print_char_cursor#1 = print_char_cursor#126 } }  print_ln:25 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#1 = print_char_cursor#126 } }  print_mulf8u127:7::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:9::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:11::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:13::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:15::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:17::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:19::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:21::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:27::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:29::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:31::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:33::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:35::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:37::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:39::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:41::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:43::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:45::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  ) always clobbers reg byte a 
Statement [60] if(print_line_cursor#0<print_char_cursor#126) goto print_ln::@1 [ print_line_cursor#0 print_char_cursor#126 ] ( print_ln:5 [ print_line_cursor#0 print_char_cursor#126 ] { { print_char_cursor#1 = print_char_cursor#126 } }  print_ln:25 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#1 = print_char_cursor#126 } }  print_mulf8u127:7::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:9::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:11::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:13::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:15::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:17::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:19::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8u127:21::print_ln:80 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:27::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:29::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:31::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:33::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:35::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:37::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:39::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:41::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:43::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  print_mulf8s127:45::print_ln:100 [ print_line_cursor#0 print_char_cursor#126 ] { { print_line_cursor#0 = print_line_cursor#65 } { print_char_cursor#126 = print_char_cursor#18 } }  ) always clobbers reg byte a 
Statement [66] mulf8u127::return#0 = mulf8u127::return#1 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:9 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:11 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:13 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:15 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:17 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:19 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:21 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#0 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  ) always clobbers reg byte a 
Statement [67] print_mulf8u127::c#0 = mulf8u127::return#0 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:9 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:11 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:13 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:15 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:17 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:19 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:21 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 print_mulf8u127::c#0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  ) always clobbers reg byte a 
Statement [69] print_char_cursor#153 = print_line_cursor#0 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:9 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:11 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:13 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:15 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:17 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:19 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  print_mulf8u127:21 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#3 print_char_cursor#153 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } }  ) always clobbers reg byte a 
Statement [77] print_uint::w#1 = print_mulf8u127::c#0 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] ( print_mulf8u127:7 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:9 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:11 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:13 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:15 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:17 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:19 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  print_mulf8u127:21 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#1 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } }  ) always clobbers reg byte a 
Statement [86] mulf8s127::return#0 = mulf8s127::return#1 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::return#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [87] print_mulf8s127::c#0 = mulf8s127::return#0 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:29 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:31 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:33 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:35 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:37 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:39 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:41 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:43 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:45 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 print_mulf8s127::c#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  ) always clobbers reg byte a 
Statement [89] print_char_cursor#151 = print_line_cursor#0 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:29 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:31 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:33 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:35 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:37 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:39 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:41 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:43 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:45 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#1 print_char_cursor#151 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  ) always clobbers reg byte a 
Statement [97] print_sint::w#1 = print_mulf8s127::c#0 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] ( print_mulf8s127:27 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:29 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:31 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:33 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:35 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:37 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:39 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:41 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:43 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:45 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  ) always clobbers reg byte a 
Statement [104] if(memset::dst#2!=memset::end#0) goto memset::@2 [ memset::dst#2 ] ( print_cls:1::memset:48 [ memset::dst#2 ] { }  ) always clobbers reg byte a 
Statement [106] *memset::dst#2 = memset::c#0 [ memset::dst#2 ] ( print_cls:1::memset:48 [ memset::dst#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [109] *print_char_cursor#81 = print_char::ch#11 [ print_char_cursor#81 ] ( print_str:3::print_char:55 [ print_str::str#3 print_char_cursor#81 ] { { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  print_str:23::print_char:55 [ print_line_cursor#0 print_str::str#3 print_char_cursor#81 ] { { print_char_cursor#139 = print_char_cursor#144 } { print_char::ch#0 = print_char::ch#11 } { print_char_cursor#1 = print_char_cursor#81 } }  print_mulf8u127:7::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_char:72 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_char:76 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:27::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_char:92 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:27::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_char:96 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:70::print_char:121 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:74::print_char:121 [ print_line_cursor#0 print_mulf8u127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128::print_char:121 [ print_line_cursor#0 print_uint::w#2 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130::print_char:121 [ print_line_cursor#0 print_uchar::b#5 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:90::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:94::print_uchar:159::print_char:121 [ print_line_cursor#0 print_mulf8s127::c#0 print_uchar::b#5 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_uchar:70::print_char:124 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uchar:74::print_char:124 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#81 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128::print_char:124 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130::print_char:124 [ print_line_cursor#0 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:90::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:94::print_uchar:159::print_char:124 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:90::print_char:156 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:27::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:94::print_char:156 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:27::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:90::print_char:162 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 print_char_cursor#81 } }  print_mulf8s127:27::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:29::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:31::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:33::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:35::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:37::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:39::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:41::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:43::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:45::print_schar:94::print_char:162 [ print_line_cursor#0 print_mulf8s127::c#0 print_schar::b#3 print_char_cursor#81 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#81 } }  print_mulf8s127:27::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_sint:98::print_char:166 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:27::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:29::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:31::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:33::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:35::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:37::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:39::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:41::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:43::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8s127:45::print_sint:98::print_char:172 [ print_line_cursor#0 print_sint::w#1 print_char_cursor#81 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_char_cursor#18 = print_char_cursor#81 } }  ) always clobbers reg byte y 
Statement asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamulf127_sqr1_lo,x sm2: sbcmulf127_sqr2_lo,x staresL sm3: ldamulf127_sqr1_hi,x sm4: sbcmulf127_sqr2_hi,x staresH  } always clobbers reg byte a reg byte x 
Statement [116] mulf8u127::return#1 = *mulf8u127::res [ mulf8u127::return#1 ] ( print_mulf8u127:7::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:9::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:11::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:13::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:15::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:17::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:19::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8u127:21::mulf8u127:65 [ print_line_cursor#0 print_mulf8u127::a#8 print_mulf8u127::b#10 mulf8u127::return#1 ] { { mulf8u127::a#0 = mulf8u127::a#2 print_mulf8u127::a#8 } { mulf8u127::b#0 = mulf8u127::b#2 print_mulf8u127::b#10 } { mulf8u127::return#0 = mulf8u127::return#1 } }  print_mulf8s127:27::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:29::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:31::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:33::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:35::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:37::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:39::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:41::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:43::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:45::mulf8s127:85::mulf8u127:134 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  ) always clobbers reg byte a 
Statement [119] print_uchar::$0 = print_uchar::b#5 >> 4 [ print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] ( print_mulf8u127:7::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:7::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:9::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:11::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:13::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:15::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:17::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:19::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8u127:21::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:27::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:29::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:31::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:33::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:35::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:37::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:39::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:41::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:43::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  print_mulf8s127:45::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#134 print_uchar::b#5 print_uchar::$0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#5 } }  ) always clobbers reg byte a 
Statement [122] print_uchar::$2 = print_uchar::b#5 & $f [ print_char_cursor#18 print_uchar::$2 ] ( print_mulf8u127:7::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:9::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:11::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:13::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:15::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:17::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:19::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:21::print_uchar:70 [ print_line_cursor#0 print_mulf8u127::b#10 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#3 = print_uchar::b#5 print_mulf8u127::a#8 } { print_char_cursor#134 = print_char_cursor#153 } { print_char::ch#11 = print_char::ch#6 } { print_char_cursor#18 = print_char_cursor#81 } }  print_mulf8u127:7::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uchar:74 [ print_line_cursor#0 print_mulf8u127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_uchar::b#4 = print_uchar::b#5 print_mulf8u127::b#10 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:128 [ print_line_cursor#0 print_uint::w#2 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#1 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:7::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:9::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:11::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:13::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:15::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:17::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:19::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8u127:21::print_uint:78::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_uint::w#1 = print_uint::w#2 print_mulf8u127::c#0 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_sint:98::print_uint:169::print_uchar:130 [ print_line_cursor#0 print_char_cursor#18 print_uchar::$2 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } { print_uchar::b#2 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:90::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } { print_uchar::b#0 = print_uchar::b#5 } { print_char_cursor#134 = print_char_cursor#18 print_char_cursor#81 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:27::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:29::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:31::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:33::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:35::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:37::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:39::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:41::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:43::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  print_mulf8s127:45::print_schar:94::print_uchar:159 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_uchar::$2 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 print_char_cursor#134 print_char_cursor#81 } { print_uchar::b#0 = print_uchar::b#5 } { print_char::ch#11 = print_char::ch#6 } }  ) always clobbers reg byte a 
Statement [135] mulf8u127::return#3 = mulf8u127::return#1 [ mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8u127::return#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } { mulf8u127::a#1 = mulf8u127::a#2 } { mulf8u127::b#1 = mulf8u127::b#2 } { mulf8u127::return#1 = mulf8u127::return#3 } }  ) always clobbers reg byte a 
Statement [136] mulf8s127::c#0 = mulf8u127::return#3 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [138] mulf8s127::$11 = (signed word)mulf8s127::b#0 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [139] mulf8s127::$9 = mulf8s127::$11 << 1 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#0 mulf8s127::$9 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [140] mulf8s127::c#1 = (signed word)mulf8s127::c#0 - mulf8s127::$9 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#1 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [143] mulf8s127::$12 = (signed word)mulf8s127::a#0 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$12 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [144] mulf8s127::$10 = mulf8s127::$12 << 1 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#5 mulf8s127::$10 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [145] mulf8s127::c#2 = mulf8s127::c#5 - mulf8s127::$10 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#2 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [149] mulf8s127::c#3 = mulf8s127::c#7 - $200 [ mulf8s127::c#3 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::c#3 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [152] mulf8s127::c#11 = (signed word)mulf8s127::c#0 [ mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] ( print_mulf8s127:27::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:29::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:31::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:33::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:35::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:37::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:39::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:41::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:43::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  print_mulf8s127:45::mulf8s127:85 [ print_line_cursor#0 print_mulf8s127::a#10 print_mulf8s127::b#10 mulf8s127::a#0 mulf8s127::b#0 mulf8s127::c#11 ] { { mulf8s127::a#0 = print_mulf8s127::a#10 } { mulf8s127::b#0 = print_mulf8s127::b#10 } { mulf8s127::return#0 = mulf8s127::return#1 } }  ) always clobbers reg byte a 
Statement [163] print_schar::b#0 = - print_schar::b#3 [ print_char_cursor#18 print_schar::b#0 ] ( print_mulf8s127:27::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:29::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:31::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:33::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:35::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:37::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:39::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:41::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:43::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:45::print_schar:90 [ print_line_cursor#0 print_mulf8s127::b#10 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#1 = print_schar::b#3 print_mulf8s127::a#10 } { print_char_cursor#130 = print_char_cursor#151 } }  print_mulf8s127:27::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:29::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:31::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:33::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:35::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:37::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:39::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:41::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:43::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  print_mulf8s127:45::print_schar:94 [ print_line_cursor#0 print_mulf8s127::c#0 print_char_cursor#18 print_schar::b#0 ] { { print_schar::b#2 = print_schar::b#3 print_mulf8s127::b#10 } { print_char_cursor#130 = print_char_cursor#18 } }  ) always clobbers reg byte a 
Statement [164] if(print_sint::w#1<0) goto print_sint::@1 [ print_char_cursor#18 print_sint::w#1 ] ( print_mulf8s127:27::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:29::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:31::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:33::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:35::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:37::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:39::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:41::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:43::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:45::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#1 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  ) always clobbers reg byte a 
Statement [168] print_uint::w#0 = (word)print_sint::w#4 [ print_char_cursor#18 print_uint::w#0 ] ( print_mulf8s127:27::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:29::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:31::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:33::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:35::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:37::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:39::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:41::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:43::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  print_mulf8s127:45::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_uint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } { print_uint::w#0 = print_uint::w#2 } }  ) always clobbers reg byte a 
Statement [173] print_sint::w#0 = - print_sint::w#1 [ print_char_cursor#18 print_sint::w#0 ] ( print_mulf8s127:27::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:29::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:31::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:33::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:35::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:37::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:39::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:41::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:43::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  print_mulf8s127:45::print_sint:98 [ print_line_cursor#0 print_char_cursor#18 print_sint::w#0 ] { { print_sint::w#1 = print_mulf8s127::c#0 } }  ) always clobbers reg byte a 
Potential registers zp[2]:2 [ print_str::str#3 print_str::str#6 print_str::str#0 ] : zp[2]:2 , 
Potential registers zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ] : zp[2]:4 , 
Potential registers zp[1]:6 [ print_mulf8u127::a#8 ] : zp[1]:6 , reg byte y , 
Potential registers zp[1]:7 [ print_mulf8u127::b#10 ] : zp[1]:7 , 
Potential registers zp[1]:8 [ print_mulf8s127::a#10 ] : zp[1]:8 , reg byte y , 
Potential registers zp[1]:9 [ print_mulf8s127::b#10 ] : zp[1]:9 , 
Potential registers zp[2]:10 [ memset::dst#2 memset::dst#1 ] : zp[2]:10 , 
Potential registers zp[1]:12 [ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ] : zp[1]:12 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:13 [ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ] : zp[2]:13 , 
Potential registers zp[1]:15 [ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ] : zp[1]:15 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:16 [ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ] : zp[1]:16 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:17 [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ] : zp[1]:17 , reg byte x , 
Potential registers zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 ] : zp[2]:18 , 
Potential registers zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ] : zp[2]:20 , 
Potential registers zp[1]:22 [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ] : zp[1]:22 , reg byte x , 
Potential registers zp[2]:23 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 ] : zp[2]:23 , 
Potential registers zp[2]:25 [ mulf8u127::return#0 ] : zp[2]:25 , 
Potential registers zp[2]:27 [ print_mulf8u127::c#0 ] : zp[2]:27 , 
Potential registers zp[1]:29 [ mulf8s127::a#0 ] : zp[1]:29 , reg byte y , 
Potential registers zp[1]:30 [ mulf8s127::b#0 ] : zp[1]:30 , reg byte y , 
Potential registers zp[2]:31 [ mulf8s127::return#0 ] : zp[2]:31 , 
Potential registers zp[2]:33 [ print_mulf8s127::c#0 ] : zp[2]:33 , 
Potential registers zp[2]:35 [ mulf8u127::return#1 ] : zp[2]:35 , 
Potential registers zp[1]:37 [ print_uchar::$0 ] : zp[1]:37 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:38 [ print_uchar::$2 ] : zp[1]:38 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:39 [ mulf8u127::return#3 ] : zp[2]:39 , 
Potential registers zp[2]:41 [ mulf8s127::c#0 ] : zp[2]:41 , 
Potential registers zp[2]:43 [ mulf8s127::$11 ] : zp[2]:43 , 
Potential registers zp[2]:45 [ mulf8s127::$9 ] : zp[2]:45 , 
Potential registers zp[2]:47 [ mulf8s127::$12 ] : zp[2]:47 , 
Potential registers zp[2]:49 [ mulf8s127::$10 ] : zp[2]:49 , 

REGISTER UPLIFT SCOPES
Uplift Scope [print_char] 160,310: zp[1]:12 [ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ] 
Uplift Scope [] 116,882.76: zp[2]:13 [ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ] 2,264.76: zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ] 
Uplift Scope [print_uchar] 20,002: zp[1]:37 [ print_uchar::$0 ] 20,002: zp[1]:38 [ print_uchar::$2 ] 9,770.75: zp[1]:17 [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ] 
Uplift Scope [memset] 3,336.67: zp[2]:10 [ memset::dst#2 memset::dst#1 ] 
Uplift Scope [mulf8u127] 1,225: zp[1]:15 [ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ] 780.5: zp[1]:16 [ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ] 278.25: zp[2]:35 [ mulf8u127::return#1 ] 202: zp[2]:39 [ mulf8u127::return#3 ] 22: zp[2]:25 [ mulf8u127::return#0 ] 
Uplift Scope [mulf8s127] 1,114.67: zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ] 202: zp[2]:43 [ mulf8s127::$11 ] 202: zp[2]:45 [ mulf8s127::$9 ] 202: zp[2]:47 [ mulf8s127::$12 ] 202: zp[2]:49 [ mulf8s127::$10 ] 25.25: zp[2]:41 [ mulf8s127::c#0 ] 22: zp[2]:31 [ mulf8s127::return#0 ] 11.83: zp[1]:29 [ mulf8s127::a#0 ] 11.83: zp[1]:30 [ mulf8s127::b#0 ] 
Uplift Scope [print_uint] 928.67: zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 ] 
Uplift Scope [print_schar] 491.17: zp[1]:22 [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ] 
Uplift Scope [print_sint] 456.33: zp[2]:23 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 ] 
Uplift Scope [print_str] 316.75: zp[2]:2 [ print_str::str#3 print_str::str#6 print_str::str#0 ] 
Uplift Scope [print_mulf8u127] 3.67: zp[1]:6 [ print_mulf8u127::a#8 ] 2.2: zp[2]:27 [ print_mulf8u127::c#0 ] 2: zp[1]:7 [ print_mulf8u127::b#10 ] 
Uplift Scope [print_mulf8s127] 3.67: zp[1]:8 [ print_mulf8s127::a#10 ] 2.2: zp[2]:33 [ print_mulf8s127::c#0 ] 2: zp[1]:9 [ print_mulf8s127::b#10 ] 
Uplift Scope [RADIX] 
Uplift Scope [print_ln] 
Uplift Scope [print_cls] 
Uplift Scope [main] 

Uplifting [print_char] best 2816 combination reg byte a [ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ] 
Uplifting [] best 2816 combination zp[2]:13 [ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ] zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ] 
Uplifting [print_uchar] best 2789 combination reg byte a [ print_uchar::$0 ] reg byte x [ print_uchar::$2 ] reg byte x [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ] 
Uplifting [memset] best 2789 combination zp[2]:10 [ memset::dst#2 memset::dst#1 ] 
Uplifting [mulf8u127] best 2771 combination reg byte x [ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ] reg byte a [ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ] zp[2]:35 [ mulf8u127::return#1 ] zp[2]:39 [ mulf8u127::return#3 ] zp[2]:25 [ mulf8u127::return#0 ] 
Uplifting [mulf8s127] best 2760 combination zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ] zp[2]:43 [ mulf8s127::$11 ] zp[2]:45 [ mulf8s127::$9 ] zp[2]:47 [ mulf8s127::$12 ] zp[2]:49 [ mulf8s127::$10 ] zp[2]:41 [ mulf8s127::c#0 ] zp[2]:31 [ mulf8s127::return#0 ] zp[1]:29 [ mulf8s127::a#0 ] reg byte y [ mulf8s127::b#0 ] 
Uplifting [print_uint] best 2760 combination zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 ] 
Uplifting [print_schar] best 2748 combination reg byte x [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ] 
Uplifting [print_sint] best 2748 combination zp[2]:23 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 ] 
Uplifting [print_str] best 2748 combination zp[2]:2 [ print_str::str#3 print_str::str#6 print_str::str#0 ] 
Uplifting [print_mulf8u127] best 2726 combination reg byte y [ print_mulf8u127::a#8 ] zp[2]:27 [ print_mulf8u127::c#0 ] zp[1]:7 [ print_mulf8u127::b#10 ] 
Uplifting [print_mulf8s127] best 2726 combination zp[1]:8 [ print_mulf8s127::a#10 ] zp[2]:33 [ print_mulf8s127::c#0 ] zp[1]:9 [ print_mulf8s127::b#10 ] 
Uplifting [RADIX] best 2726 combination 
Uplifting [print_ln] best 2726 combination 
Uplifting [print_cls] best 2726 combination 
Uplifting [main] best 2726 combination 
Attempting to uplift remaining variables inzp[1]:29 [ mulf8s127::a#0 ]
Uplifting [mulf8s127] best 2726 combination zp[1]:29 [ mulf8s127::a#0 ] 
Attempting to uplift remaining variables inzp[1]:8 [ print_mulf8s127::a#10 ]
Uplifting [print_mulf8s127] best 2726 combination zp[1]:8 [ print_mulf8s127::a#10 ] 
Attempting to uplift remaining variables inzp[1]:7 [ print_mulf8u127::b#10 ]
Uplifting [print_mulf8u127] best 2726 combination zp[1]:7 [ print_mulf8u127::b#10 ] 
Attempting to uplift remaining variables inzp[1]:9 [ print_mulf8s127::b#10 ]
Uplifting [print_mulf8s127] best 2726 combination zp[1]:9 [ print_mulf8s127::b#10 ] 
Coalescing zero page register [ zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 ] ] with [ zp[2]:41 [ mulf8s127::c#0 ] ] - score: 2
Coalescing zero page register [ zp[1]:8 [ print_mulf8s127::a#10 ] ] with [ zp[1]:29 [ mulf8s127::a#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 ] ] with [ zp[2]:23 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 ] ] with [ zp[2]:27 [ print_mulf8u127::c#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 mulf8s127::c#0 ] ] with [ zp[2]:31 [ mulf8s127::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:25 [ mulf8u127::return#0 ] ] with [ zp[2]:35 [ mulf8u127::return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:43 [ mulf8s127::$11 ] ] with [ zp[2]:45 [ mulf8s127::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:47 [ mulf8s127::$12 ] ] with [ zp[2]:49 [ mulf8s127::$10 ] ] - score: 1
Coalescing zero page register [ zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 print_mulf8u127::c#0 ] ] with [ zp[2]:25 [ mulf8u127::return#0 mulf8u127::return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 print_mulf8u127::c#0 mulf8u127::return#0 mulf8u127::return#1 ] ] with [ zp[2]:33 [ print_mulf8s127::c#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 mulf8s127::c#0 mulf8s127::return#0 ] ] with [ zp[2]:39 [ mulf8u127::return#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 print_mulf8u127::c#0 mulf8u127::return#0 mulf8u127::return#1 print_mulf8s127::c#0 ] ] with [ zp[2]:20 [ mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 mulf8s127::c#0 mulf8s127::return#0 mulf8u127::return#3 ] ] - score: 2
Coalescing zero page register [ zp[1]:8 [ print_mulf8s127::a#10 mulf8s127::a#0 ] ] with [ zp[1]:7 [ print_mulf8u127::b#10 ] ]
Coalescing zero page register [ zp[2]:10 [ memset::dst#2 memset::dst#1 ] ] with [ zp[2]:2 [ print_str::str#3 print_str::str#6 print_str::str#0 ] ]
Coalescing zero page register [ zp[2]:43 [ mulf8s127::$11 mulf8s127::$9 ] ] with [ zp[2]:13 [ print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ] ]
Coalescing zero page register [ zp[2]:18 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 print_mulf8u127::c#0 mulf8u127::return#0 mulf8u127::return#1 print_mulf8s127::c#0 mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 mulf8s127::c#0 mulf8s127::return#0 mulf8u127::return#3 ] ] with [ zp[2]:10 [ memset::dst#2 memset::dst#1 print_str::str#3 print_str::str#6 print_str::str#0 ] ]
Allocated (was zp[2]:4) zp[2]:2 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ]
Allocated (was zp[1]:8) zp[1]:4 [ print_mulf8s127::a#10 mulf8s127::a#0 print_mulf8u127::b#10 ]
Allocated (was zp[1]:9) zp[1]:5 [ print_mulf8s127::b#10 ]
Allocated (was zp[2]:18) zp[2]:6 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 print_mulf8u127::c#0 mulf8u127::return#0 mulf8u127::return#1 print_mulf8s127::c#0 mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 mulf8s127::c#0 mulf8s127::return#0 mulf8u127::return#3 memset::dst#2 memset::dst#1 print_str::str#3 print_str::str#6 print_str::str#0 ]
Allocated (was zp[2]:43) zp[2]:8 [ mulf8s127::$11 mulf8s127::$9 print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ]
Allocated (was zp[2]:47) zp[2]:10 [ mulf8s127::$12 mulf8s127::$10 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// An implementation of seriously fast multiply for integer values in the interval [-1;1] with the best possible precision
// NOTE: So far unsuccessful - since the handling of sign and values where a+b>sqrt2) makes the code slower than regular fast multiply
// In this model 255 binary represents 1.0 - meaning that 255*255 = 255
// Uses principles from C=Hacking #16 https://codebase64.org/doku.php?id=magazines:chacking16
// Utilizes the fact that a*b = ((a+b)/2)^2 - ((a-b)/2)^2
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  .label print_screen = $400
  .label print_char_cursor = 8
  .label print_line_cursor = 2
  // main
main: {
    // [1] call print_cls 
    // [47] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
    // [2] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    jmp __b1
    // main::@1
  __b1:
    // [3] call print_str 
    // [50] phi from main::@1 to print_str [phi:main::@1->print_str]
  print_str_from___b1:
    // [50] phi print_char_cursor#139 = print_screen#0 [phi:main::@1->print_str#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [50] phi print_str::str#6 = main::str [phi:main::@1->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [4] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [5] call print_ln 
    // [57] phi from main::@2 to print_ln [phi:main::@2->print_ln]
  print_ln_from___b2:
    // [57] phi print_char_cursor#126 = print_char_cursor#1 [phi:main::@2->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_screen#0 [phi:main::@2->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    jsr print_ln
    // [6] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [7] call print_mulf8u127 
    // [62] phi from main::@3 to print_mulf8u127 [phi:main::@3->print_mulf8u127]
  print_mulf8u127_from___b3:
    // [62] phi print_mulf8u127::b#10 = 0 [phi:main::@3->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #0
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = 0 [phi:main::@3->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #0
    jsr print_mulf8u127
    // [8] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [9] call print_mulf8u127 
    // [62] phi from main::@4 to print_mulf8u127 [phi:main::@4->print_mulf8u127]
  print_mulf8u127_from___b4:
    // [62] phi print_mulf8u127::b#10 = $7f [phi:main::@4->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$7f
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $7f [phi:main::@4->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$7f
    jsr print_mulf8u127
    // [10] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [11] call print_mulf8u127 
    // [62] phi from main::@5 to print_mulf8u127 [phi:main::@5->print_mulf8u127]
  print_mulf8u127_from___b5:
    // [62] phi print_mulf8u127::b#10 = $40 [phi:main::@5->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$40
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $40 [phi:main::@5->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$40
    jsr print_mulf8u127
    // [12] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [13] call print_mulf8u127 
    // [62] phi from main::@6 to print_mulf8u127 [phi:main::@6->print_mulf8u127]
  print_mulf8u127_from___b6:
    // [62] phi print_mulf8u127::b#10 = $7f [phi:main::@6->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$7f
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $40 [phi:main::@6->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$40
    jsr print_mulf8u127
    // [14] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
  __b7_from___b6:
    jmp __b7
    // main::@7
  __b7:
    // [15] call print_mulf8u127 
    // [62] phi from main::@7 to print_mulf8u127 [phi:main::@7->print_mulf8u127]
  print_mulf8u127_from___b7:
    // [62] phi print_mulf8u127::b#10 = $c0 [phi:main::@7->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$c0
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $40 [phi:main::@7->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$40
    jsr print_mulf8u127
    // [16] phi from main::@7 to main::@8 [phi:main::@7->main::@8]
  __b8_from___b7:
    jmp __b8
    // main::@8
  __b8:
    // [17] call print_mulf8u127 
    // [62] phi from main::@8 to print_mulf8u127 [phi:main::@8->print_mulf8u127]
  print_mulf8u127_from___b8:
    // [62] phi print_mulf8u127::b#10 = $7f [phi:main::@8->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$7f
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $ff [phi:main::@8->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$ff
    jsr print_mulf8u127
    // [18] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
  __b9_from___b8:
    jmp __b9
    // main::@9
  __b9:
    // [19] call print_mulf8u127 
    // [62] phi from main::@9 to print_mulf8u127 [phi:main::@9->print_mulf8u127]
  print_mulf8u127_from___b9:
    // [62] phi print_mulf8u127::b#10 = $c0 [phi:main::@9->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$c0
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $c0 [phi:main::@9->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$c0
    jsr print_mulf8u127
    // [20] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
  __b10_from___b9:
    jmp __b10
    // main::@10
  __b10:
    // [21] call print_mulf8u127 
    // [62] phi from main::@10 to print_mulf8u127 [phi:main::@10->print_mulf8u127]
  print_mulf8u127_from___b10:
    // [62] phi print_mulf8u127::b#10 = $ff [phi:main::@10->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $ff [phi:main::@10->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$ff
    jsr print_mulf8u127
    jmp __b11
    // main::@11
  __b11:
    // [22] print_char_cursor#144 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [23] call print_str 
    // [50] phi from main::@11 to print_str [phi:main::@11->print_str]
  print_str_from___b11:
    // [50] phi print_char_cursor#139 = print_char_cursor#144 [phi:main::@11->print_str#0] -- register_copy 
    // [50] phi print_str::str#6 = main::str1 [phi:main::@11->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [24] phi from main::@11 to main::@12 [phi:main::@11->main::@12]
  __b12_from___b11:
    jmp __b12
    // main::@12
  __b12:
    // [25] call print_ln 
    // [57] phi from main::@12 to print_ln [phi:main::@12->print_ln]
  print_ln_from___b12:
    // [57] phi print_char_cursor#126 = print_char_cursor#1 [phi:main::@12->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_line_cursor#0 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    // [26] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
  __b13_from___b12:
    jmp __b13
    // main::@13
  __b13:
    // [27] call print_mulf8s127 
    // [82] phi from main::@13 to print_mulf8s127 [phi:main::@13->print_mulf8s127]
  print_mulf8s127_from___b13:
    // [82] phi print_mulf8s127::b#10 = 0 [phi:main::@13->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #0
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = 0 [phi:main::@13->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #0
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [28] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
  __b14_from___b13:
    jmp __b14
    // main::@14
  __b14:
    // [29] call print_mulf8s127 
    // [82] phi from main::@14 to print_mulf8s127 [phi:main::@14->print_mulf8s127]
  print_mulf8s127_from___b14:
    // [82] phi print_mulf8s127::b#10 = $40 [phi:main::@14->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $40 [phi:main::@14->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [30] phi from main::@14 to main::@15 [phi:main::@14->main::@15]
  __b15_from___b14:
    jmp __b15
    // main::@15
  __b15:
    // [31] call print_mulf8s127 
    // [82] phi from main::@15 to print_mulf8s127 [phi:main::@15->print_mulf8s127]
  print_mulf8s127_from___b15:
    // [82] phi print_mulf8s127::b#10 = $7f [phi:main::@15->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $40 [phi:main::@15->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [32] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
  __b16_from___b15:
    jmp __b16
    // main::@16
  __b16:
    // [33] call print_mulf8s127 
    // [82] phi from main::@16 to print_mulf8s127 [phi:main::@16->print_mulf8s127]
  print_mulf8s127_from___b16:
    // [82] phi print_mulf8s127::b#10 = $40 [phi:main::@16->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$40 [phi:main::@16->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [34] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
  __b17_from___b16:
    jmp __b17
    // main::@17
  __b17:
    // [35] call print_mulf8s127 
    // [82] phi from main::@17 to print_mulf8s127 [phi:main::@17->print_mulf8s127]
  print_mulf8s127_from___b17:
    // [82] phi print_mulf8s127::b#10 = -$40 [phi:main::@17->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $40 [phi:main::@17->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [36] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [37] call print_mulf8s127 
    // [82] phi from main::@18 to print_mulf8s127 [phi:main::@18->print_mulf8s127]
  print_mulf8s127_from___b18:
    // [82] phi print_mulf8s127::b#10 = -$40 [phi:main::@18->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$40 [phi:main::@18->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [38] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
  __b19_from___b18:
    jmp __b19
    // main::@19
  __b19:
    // [39] call print_mulf8s127 
    // [82] phi from main::@19 to print_mulf8s127 [phi:main::@19->print_mulf8s127]
  print_mulf8s127_from___b19:
    // [82] phi print_mulf8s127::b#10 = $7f [phi:main::@19->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $7f [phi:main::@19->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [40] phi from main::@19 to main::@20 [phi:main::@19->main::@20]
  __b20_from___b19:
    jmp __b20
    // main::@20
  __b20:
    // [41] call print_mulf8s127 
    // [82] phi from main::@20 to print_mulf8s127 [phi:main::@20->print_mulf8s127]
  print_mulf8s127_from___b20:
    // [82] phi print_mulf8s127::b#10 = $7f [phi:main::@20->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$7f [phi:main::@20->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [42] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
  __b21_from___b20:
    jmp __b21
    // main::@21
  __b21:
    // [43] call print_mulf8s127 
    // [82] phi from main::@21 to print_mulf8s127 [phi:main::@21->print_mulf8s127]
  print_mulf8s127_from___b21:
    // [82] phi print_mulf8s127::b#10 = -$7f [phi:main::@21->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $7f [phi:main::@21->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [44] phi from main::@21 to main::@22 [phi:main::@21->main::@22]
  __b22_from___b21:
    jmp __b22
    // main::@22
  __b22:
    // [45] call print_mulf8s127 
    // [82] phi from main::@22 to print_mulf8s127 [phi:main::@22->print_mulf8s127]
  print_mulf8s127_from___b22:
    // [82] phi print_mulf8s127::b#10 = -$7f [phi:main::@22->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$7f [phi:main::@22->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    jmp __breturn
    // main::@return
  __breturn:
    // [46] return 
    rts
    str: .text "unsigned"
    .byte 0
    str1: .text "signed"
    .byte 0
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [48] call memset 
    // [102] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [49] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp(6) str)
print_str: {
    .label str = 6
    // [51] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
  __b1_from_print_str:
  __b1_from___b3:
    // [51] phi print_char_cursor#1 = print_char_cursor#139 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // [51] phi print_str::str#3 = print_str::str#6 [phi:print_str/print_str::@3->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [52] if(0!=*print_str::str#3) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [53] return 
    rts
    // print_str::@2
  __b2:
    // [54] print_char::ch#0 = *print_str::str#3 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [55] call print_char 
    // [108] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
  print_char_from___b2:
    // [108] phi print_char_cursor#81 = print_char_cursor#1 [phi:print_str::@2->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    jmp __b3
    // print_str::@3
  __b3:
    // [56] print_str::str#0 = ++ print_str::str#3 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b3
}
  // print_ln
// Print a newline
print_ln: {
    // [58] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b1:
    // [58] phi print_line_cursor#33 = print_line_cursor#65 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [59] print_line_cursor#0 = print_line_cursor#33 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // [60] if(print_line_cursor#0<print_char_cursor#126) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1_from___b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1_from___b1
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [61] return 
    rts
}
  // print_mulf8u127
// print_mulf8u127(byte register(Y) a, byte zp(4) b)
print_mulf8u127: {
    .label c = 6
    .label b = 4
    // [63] mulf8u127::a#0 = print_mulf8u127::a#8 -- vbuxx=vbuyy 
    tya
    tax
    // [64] mulf8u127::b#0 = print_mulf8u127::b#10 -- vbuaa=vbuz1 
    lda.z b
    // [65] call mulf8u127 
    // [112] phi from print_mulf8u127 to mulf8u127 [phi:print_mulf8u127->mulf8u127]
  mulf8u127_from_print_mulf8u127:
    // [112] phi mulf8u127::b#2 = mulf8u127::b#0 [phi:print_mulf8u127->mulf8u127#0] -- register_copy 
    // [112] phi mulf8u127::a#2 = mulf8u127::a#0 [phi:print_mulf8u127->mulf8u127#1] -- register_copy 
    jsr mulf8u127
    // [66] mulf8u127::return#0 = mulf8u127::return#1
    jmp __b1
    // print_mulf8u127::@1
  __b1:
    // [67] print_mulf8u127::c#0 = mulf8u127::return#0
    // [68] print_uchar::b#3 = print_mulf8u127::a#8 -- vbuxx=vbuyy 
    tya
    tax
    // [69] print_char_cursor#153 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [70] call print_uchar 
    // [118] phi from print_mulf8u127::@1 to print_uchar [phi:print_mulf8u127::@1->print_uchar]
  print_uchar_from___b1:
    // [118] phi print_char_cursor#134 = print_char_cursor#153 [phi:print_mulf8u127::@1->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#3 [phi:print_mulf8u127::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    // [71] phi from print_mulf8u127::@1 to print_mulf8u127::@2 [phi:print_mulf8u127::@1->print_mulf8u127::@2]
  __b2_from___b1:
    jmp __b2
    // print_mulf8u127::@2
  __b2:
    // [72] call print_char 
    // [108] phi from print_mulf8u127::@2 to print_char [phi:print_mulf8u127::@2->print_char]
  print_char_from___b2:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8u127::@2->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '*' [phi:print_mulf8u127::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'*'
    jsr print_char
    jmp __b3
    // print_mulf8u127::@3
  __b3:
    // [73] print_uchar::b#4 = print_mulf8u127::b#10 -- vbuxx=vbuz1 
    ldx.z b
    // [74] call print_uchar 
    // [118] phi from print_mulf8u127::@3 to print_uchar [phi:print_mulf8u127::@3->print_uchar]
  print_uchar_from___b3:
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_mulf8u127::@3->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#4 [phi:print_mulf8u127::@3->print_uchar#1] -- register_copy 
    jsr print_uchar
    // [75] phi from print_mulf8u127::@3 to print_mulf8u127::@4 [phi:print_mulf8u127::@3->print_mulf8u127::@4]
  __b4_from___b3:
    jmp __b4
    // print_mulf8u127::@4
  __b4:
    // [76] call print_char 
    // [108] phi from print_mulf8u127::@4 to print_char [phi:print_mulf8u127::@4->print_char]
  print_char_from___b4:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8u127::@4->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '=' [phi:print_mulf8u127::@4->print_char#1] -- vbuaa=vbuc1 
    lda #'='
    jsr print_char
    jmp __b5
    // print_mulf8u127::@5
  __b5:
    // [77] print_uint::w#1 = print_mulf8u127::c#0
    // [78] call print_uint 
    // [126] phi from print_mulf8u127::@5 to print_uint [phi:print_mulf8u127::@5->print_uint]
  print_uint_from___b5:
    // [126] phi print_uint::w#2 = print_uint::w#1 [phi:print_mulf8u127::@5->print_uint#0] -- register_copy 
    jsr print_uint
    // [79] phi from print_mulf8u127::@5 to print_mulf8u127::@6 [phi:print_mulf8u127::@5->print_mulf8u127::@6]
  __b6_from___b5:
    jmp __b6
    // print_mulf8u127::@6
  __b6:
    // [80] call print_ln 
    // [57] phi from print_mulf8u127::@6 to print_ln [phi:print_mulf8u127::@6->print_ln]
  print_ln_from___b6:
    // [57] phi print_char_cursor#126 = print_char_cursor#18 [phi:print_mulf8u127::@6->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_line_cursor#0 [phi:print_mulf8u127::@6->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // print_mulf8u127::@return
  __breturn:
    // [81] return 
    rts
}
  // print_mulf8s127
// print_mulf8s127(signed byte zp(4) a, signed byte zp(5) b)
print_mulf8s127: {
    .label c = 6
    .label a = 4
    .label b = 5
    // [83] mulf8s127::a#0 = print_mulf8s127::a#10
    // [84] mulf8s127::b#0 = print_mulf8s127::b#10 -- vbsyy=vbsz1 
    ldy.z b
    // [85] call mulf8s127 
    jsr mulf8s127
    // [86] mulf8s127::return#0 = mulf8s127::return#1
    jmp __b1
    // print_mulf8s127::@1
  __b1:
    // [87] print_mulf8s127::c#0 = mulf8s127::return#0
    // [88] print_schar::b#1 = print_mulf8s127::a#10 -- vbsxx=vbsz1 
    ldx.z a
    // [89] print_char_cursor#151 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [90] call print_schar 
    // [153] phi from print_mulf8s127::@1 to print_schar [phi:print_mulf8s127::@1->print_schar]
  print_schar_from___b1:
    // [153] phi print_char_cursor#130 = print_char_cursor#151 [phi:print_mulf8s127::@1->print_schar#0] -- register_copy 
    // [153] phi print_schar::b#3 = print_schar::b#1 [phi:print_mulf8s127::@1->print_schar#1] -- register_copy 
    jsr print_schar
    // [91] phi from print_mulf8s127::@1 to print_mulf8s127::@2 [phi:print_mulf8s127::@1->print_mulf8s127::@2]
  __b2_from___b1:
    jmp __b2
    // print_mulf8s127::@2
  __b2:
    // [92] call print_char 
    // [108] phi from print_mulf8s127::@2 to print_char [phi:print_mulf8s127::@2->print_char]
  print_char_from___b2:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8s127::@2->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '*' [phi:print_mulf8s127::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'*'
    jsr print_char
    jmp __b3
    // print_mulf8s127::@3
  __b3:
    // [93] print_schar::b#2 = print_mulf8s127::b#10 -- vbsxx=vbsz1 
    ldx.z b
    // [94] call print_schar 
    // [153] phi from print_mulf8s127::@3 to print_schar [phi:print_mulf8s127::@3->print_schar]
  print_schar_from___b3:
    // [153] phi print_char_cursor#130 = print_char_cursor#18 [phi:print_mulf8s127::@3->print_schar#0] -- register_copy 
    // [153] phi print_schar::b#3 = print_schar::b#2 [phi:print_mulf8s127::@3->print_schar#1] -- register_copy 
    jsr print_schar
    // [95] phi from print_mulf8s127::@3 to print_mulf8s127::@4 [phi:print_mulf8s127::@3->print_mulf8s127::@4]
  __b4_from___b3:
    jmp __b4
    // print_mulf8s127::@4
  __b4:
    // [96] call print_char 
    // [108] phi from print_mulf8s127::@4 to print_char [phi:print_mulf8s127::@4->print_char]
  print_char_from___b4:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8s127::@4->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '=' [phi:print_mulf8s127::@4->print_char#1] -- vbuaa=vbuc1 
    lda #'='
    jsr print_char
    jmp __b5
    // print_mulf8s127::@5
  __b5:
    // [97] print_sint::w#1 = print_mulf8s127::c#0
    // [98] call print_sint 
    jsr print_sint
    // [99] phi from print_mulf8s127::@5 to print_mulf8s127::@6 [phi:print_mulf8s127::@5->print_mulf8s127::@6]
  __b6_from___b5:
    jmp __b6
    // print_mulf8s127::@6
  __b6:
    // [100] call print_ln 
    // [57] phi from print_mulf8s127::@6 to print_ln [phi:print_mulf8s127::@6->print_ln]
  print_ln_from___b6:
    // [57] phi print_char_cursor#126 = print_char_cursor#18 [phi:print_mulf8s127::@6->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_line_cursor#0 [phi:print_mulf8s127::@6->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // print_mulf8s127::@return
  __breturn:
    // [101] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = 6
    // [103] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [103] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [104] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [105] return 
    rts
    // memset::@2
  __b2:
    // [106] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [107] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [103] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [103] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // [109] *print_char_cursor#81 = print_char::ch#11 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // [110] print_char_cursor#18 = ++ print_char_cursor#81 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [111] return 
    rts
}
  // mulf8u127
// mulf8u127(byte register(X) a, byte register(A) b)
mulf8u127: {
    .label memA = $fc
    .label memB = $fd
    .label res = $fe
    .label resL = $fe
    .label resH = $ff
    .label return = 6
    // [113] *mulf8u127::memA = mulf8u127::a#2 -- _deref_pbuc1=vbuxx 
    stx memA
    // [114] *mulf8u127::memB = mulf8u127::b#2 -- _deref_pbuc1=vbuaa 
    sta memB
    // asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamulf127_sqr1_lo,x sm2: sbcmulf127_sqr2_lo,x staresL sm3: ldamulf127_sqr1_hi,x sm4: sbcmulf127_sqr2_hi,x staresH  }
    lda memA
    sta sm1+1
    sta sm3+1
    eor #$ff
    sta sm2+1
    sta sm4+1
    ldx memB
    sec
  sm1:
    lda mulf127_sqr1_lo,x
  sm2:
    sbc mulf127_sqr2_lo,x
    sta resL
  sm3:
    lda mulf127_sqr1_hi,x
  sm4:
    sbc mulf127_sqr2_hi,x
    sta resH
    // [116] mulf8u127::return#1 = *mulf8u127::res -- vwuz1=_deref_pwuc1 
    lda res
    sta.z return
    lda res+1
    sta.z return+1
    jmp __breturn
    // mulf8u127::@return
  __breturn:
    // [117] return 
    rts
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // [119] print_uchar::$0 = print_uchar::b#5 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [120] print_char::ch#5 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [121] call print_char 
  // Table of hexadecimal digits
    // [108] phi from print_uchar to print_char [phi:print_uchar->print_char]
  print_char_from_print_uchar:
    // [108] phi print_char_cursor#81 = print_char_cursor#134 [phi:print_uchar->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = print_char::ch#5 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_uchar::@1
  __b1:
    // [122] print_uchar::$2 = print_uchar::b#5 & $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // [123] print_char::ch#6 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [124] call print_char 
    // [108] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
  print_char_from___b1:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = print_char::ch#6 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_uchar::@return
  __breturn:
    // [125] return 
    rts
}
  // print_uint
// Print a unsigned int as HEX
// print_uint(word zp(6) w)
print_uint: {
    .label w = 6
    // [127] print_uchar::b#1 = > print_uint::w#2 -- vbuxx=_hi_vwuz1 
    ldx.z w+1
    // [128] call print_uchar 
    // [118] phi from print_uint to print_uchar [phi:print_uint->print_uchar]
  print_uchar_from_print_uint:
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_uint->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#1 [phi:print_uint->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __b1
    // print_uint::@1
  __b1:
    // [129] print_uchar::b#2 = < print_uint::w#2 -- vbuxx=_lo_vwuz1 
    ldx.z w
    // [130] call print_uchar 
    // [118] phi from print_uint::@1 to print_uchar [phi:print_uint::@1->print_uchar]
  print_uchar_from___b1:
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_uint::@1->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#2 [phi:print_uint::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __breturn
    // print_uint::@return
  __breturn:
    // [131] return 
    rts
}
  // mulf8s127
// mulf8s127(signed byte zp(4) a, signed byte register(Y) b)
mulf8s127: {
    .label __9 = 8
    .label __10 = $a
    .label __11 = 8
    .label __12 = $a
    .label a = 4
    .label return = 6
    .label c = 6
    // [132] mulf8u127::a#1 = (byte)mulf8s127::a#0 -- vbuxx=vbuz1 
    ldx.z a
    // [133] mulf8u127::b#1 = (byte)mulf8s127::b#0 -- vbuaa=vbuyy 
    tya
    // [134] call mulf8u127 
    // [112] phi from mulf8s127 to mulf8u127 [phi:mulf8s127->mulf8u127]
  mulf8u127_from_mulf8s127:
    // [112] phi mulf8u127::b#2 = mulf8u127::b#1 [phi:mulf8s127->mulf8u127#0] -- register_copy 
    // [112] phi mulf8u127::a#2 = mulf8u127::a#1 [phi:mulf8s127->mulf8u127#1] -- register_copy 
    jsr mulf8u127
    // [135] mulf8u127::return#3 = mulf8u127::return#1
    jmp __b7
    // mulf8s127::@7
  __b7:
    // [136] mulf8s127::c#0 = mulf8u127::return#3
    // [137] if(mulf8s127::a#0>=0) goto mulf8s127::@9 -- vbsz1_ge_0_then_la1 
    lda.z a
    cmp #0
    bpl __b9
    jmp __b4
    // mulf8s127::@4
  __b4:
    // [138] mulf8s127::$11 = (signed word)mulf8s127::b#0 -- vwsz1=_sword_vbsyy 
    tya
    sta.z __11
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z __11+1
    // [139] mulf8s127::$9 = mulf8s127::$11 << 1 -- vwsz1=vwsz1_rol_1 
    asl.z __9
    rol.z __9+1
    // [140] mulf8s127::c#1 = (signed word)mulf8s127::c#0 - mulf8s127::$9 -- vwsz1=vwsz1_minus_vwsz2 
    lda.z c
    sec
    sbc.z __9
    sta.z c
    lda.z c+1
    sbc.z __9+1
    sta.z c+1
    // [141] phi from mulf8s127::@4 mulf8s127::@9 to mulf8s127::@1 [phi:mulf8s127::@4/mulf8s127::@9->mulf8s127::@1]
  __b1_from___b4:
  __b1_from___b9:
    // [141] phi mulf8s127::c#5 = mulf8s127::c#1 [phi:mulf8s127::@4/mulf8s127::@9->mulf8s127::@1#0] -- register_copy 
    jmp __b1
    // mulf8s127::@1
  __b1:
    // [142] if(mulf8s127::b#0>=0) goto mulf8s127::@2 -- vbsyy_ge_0_then_la1 
    cpy #0
    bpl __b2_from___b1
    jmp __b5
    // mulf8s127::@5
  __b5:
    // [143] mulf8s127::$12 = (signed word)mulf8s127::a#0 -- vwsz1=_sword_vbsz2 
    lda.z a
    sta.z __12
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z __12+1
    // [144] mulf8s127::$10 = mulf8s127::$12 << 1 -- vwsz1=vwsz1_rol_1 
    asl.z __10
    rol.z __10+1
    // [145] mulf8s127::c#2 = mulf8s127::c#5 - mulf8s127::$10 -- vwsz1=vwsz1_minus_vwsz2 
    lda.z c
    sec
    sbc.z __10
    sta.z c
    lda.z c+1
    sbc.z __10+1
    sta.z c+1
    // [146] phi from mulf8s127::@1 mulf8s127::@5 to mulf8s127::@2 [phi:mulf8s127::@1/mulf8s127::@5->mulf8s127::@2]
  __b2_from___b1:
  __b2_from___b5:
    // [146] phi mulf8s127::c#7 = mulf8s127::c#5 [phi:mulf8s127::@1/mulf8s127::@5->mulf8s127::@2#0] -- register_copy 
    jmp __b2
    // mulf8s127::@2
  __b2:
    // [147] if(mulf8s127::a#0>=0) goto mulf8s127::@3 -- vbsz1_ge_0_then_la1 
    lda.z a
    cmp #0
    bpl __b3_from___b2
    jmp __b8
    // mulf8s127::@8
  __b8:
    // [148] if(mulf8s127::b#0>=0) goto mulf8s127::@3 -- vbsyy_ge_0_then_la1 
    cpy #0
    bpl __b3_from___b8
    jmp __b6
    // mulf8s127::@6
  __b6:
    // [149] mulf8s127::c#3 = mulf8s127::c#7 - $200 -- vwsz1=vwsz1_minus_vwsc1 
    lda.z c
    sec
    sbc #<$200
    sta.z c
    lda.z c+1
    sbc #>$200
    sta.z c+1
    // [150] phi from mulf8s127::@2 mulf8s127::@6 to mulf8s127::@3 [phi:mulf8s127::@2/mulf8s127::@6->mulf8s127::@3]
  __b3_from___b2:
  __b3_from___b6:
    // [150] phi mulf8s127::return#1 = mulf8s127::c#7 [phi:mulf8s127::@2/mulf8s127::@6->mulf8s127::@3#0] -- register_copy 
    jmp __b3
    // [150] phi from mulf8s127::@8 to mulf8s127::@3 [phi:mulf8s127::@8->mulf8s127::@3]
  __b3_from___b8:
    jmp __b3
    // mulf8s127::@3
  __b3:
    jmp __breturn
    // mulf8s127::@return
  __breturn:
    // [151] return 
    rts
    // mulf8s127::@9
  __b9:
    // [152] mulf8s127::c#11 = (signed word)mulf8s127::c#0
    jmp __b1_from___b9
}
  // print_schar
// Print a signed char as HEX
// print_schar(signed byte register(X) b)
print_schar: {
    // [154] if(print_schar::b#3<0) goto print_schar::@1 -- vbsxx_lt_0_then_la1 
    cpx #0
    bmi __b1_from_print_schar
    // [155] phi from print_schar to print_schar::@3 [phi:print_schar->print_schar::@3]
  __b3_from_print_schar:
    jmp __b3
    // print_schar::@3
  __b3:
    // [156] call print_char 
    // [108] phi from print_schar::@3 to print_char [phi:print_schar::@3->print_char]
  print_char_from___b3:
    // [108] phi print_char_cursor#81 = print_char_cursor#130 [phi:print_schar::@3->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = ' ' [phi:print_schar::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [157] phi from print_schar::@3 print_schar::@4 to print_schar::@2 [phi:print_schar::@3/print_schar::@4->print_schar::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [157] phi print_schar::b#5 = print_schar::b#3 [phi:print_schar::@3/print_schar::@4->print_schar::@2#0] -- register_copy 
    jmp __b2
    // print_schar::@2
  __b2:
    // [158] print_uchar::b#0 = (byte)print_schar::b#5
    // [159] call print_uchar 
    // [118] phi from print_schar::@2 to print_uchar [phi:print_schar::@2->print_uchar]
  print_uchar_from___b2:
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_schar::@2->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#0 [phi:print_schar::@2->print_uchar#1] -- register_copy 
    jsr print_uchar
    jmp __breturn
    // print_schar::@return
  __breturn:
    // [160] return 
    rts
    // [161] phi from print_schar to print_schar::@1 [phi:print_schar->print_schar::@1]
  __b1_from_print_schar:
    jmp __b1
    // print_schar::@1
  __b1:
    // [162] call print_char 
    // [108] phi from print_schar::@1 to print_char [phi:print_schar::@1->print_char]
  print_char_from___b1:
    // [108] phi print_char_cursor#81 = print_char_cursor#130 [phi:print_schar::@1->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '-' [phi:print_schar::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    jmp __b4
    // print_schar::@4
  __b4:
    // [163] print_schar::b#0 = - print_schar::b#3 -- vbsxx=_neg_vbsxx 
    txa
    eor #$ff
    clc
    adc #1
    tax
    jmp __b2_from___b4
}
  // print_sint
// Print a signed int as HEX
// print_sint(signed word zp(6) w)
print_sint: {
    .label w = 6
    // [164] if(print_sint::w#1<0) goto print_sint::@1 -- vwsz1_lt_0_then_la1 
    lda.z w+1
    bmi __b1_from_print_sint
    // [165] phi from print_sint to print_sint::@3 [phi:print_sint->print_sint::@3]
  __b3_from_print_sint:
    jmp __b3
    // print_sint::@3
  __b3:
    // [166] call print_char 
    // [108] phi from print_sint::@3 to print_char [phi:print_sint::@3->print_char]
  print_char_from___b3:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_sint::@3->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = ' ' [phi:print_sint::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [167] phi from print_sint::@3 print_sint::@4 to print_sint::@2 [phi:print_sint::@3/print_sint::@4->print_sint::@2]
  __b2_from___b3:
  __b2_from___b4:
    // [167] phi print_sint::w#4 = print_sint::w#1 [phi:print_sint::@3/print_sint::@4->print_sint::@2#0] -- register_copy 
    jmp __b2
    // print_sint::@2
  __b2:
    // [168] print_uint::w#0 = (word)print_sint::w#4
    // [169] call print_uint 
    // [126] phi from print_sint::@2 to print_uint [phi:print_sint::@2->print_uint]
  print_uint_from___b2:
    // [126] phi print_uint::w#2 = print_uint::w#0 [phi:print_sint::@2->print_uint#0] -- register_copy 
    jsr print_uint
    jmp __breturn
    // print_sint::@return
  __breturn:
    // [170] return 
    rts
    // [171] phi from print_sint to print_sint::@1 [phi:print_sint->print_sint::@1]
  __b1_from_print_sint:
    jmp __b1
    // print_sint::@1
  __b1:
    // [172] call print_char 
    // [108] phi from print_sint::@1 to print_char [phi:print_sint::@1->print_char]
  print_char_from___b1:
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_sint::@1->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '-' [phi:print_sint::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    jmp __b4
    // print_sint::@4
  __b4:
    // [173] print_sint::w#0 = - print_sint::w#1 -- vwsz1=_neg_vwsz1 
    sec
    lda #0
    sbc.z w
    sta.z w
    lda #0
    sbc.z w+1
    sta.z w+1
    jmp __b2_from___b4
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // mulf_sqr tables will contain f(x)=int(x*x/4) and g(x) = f(x-255).
  // f(x) = ( x * x )/4
  .align $100
mulf127_sqr1_lo:
.fill 512, <round((i/127*i/127)*127/4) 
  .align $100
mulf127_sqr1_hi:
.fill 512, >round((i/127*i/127)*127/4) 
  // g(x) =  <((( x - 255) * ( x - 255 ))/4)
  .align $100
mulf127_sqr2_lo:
.fill 512, <round(((i-255)/127*(i-255)/127)*127/4) 
  .align $100
mulf127_sqr2_hi:
.fill 512, >round(((i-255)/127*(i-255)/127)*127/4) 

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __b16
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __b5
Removing instruction jmp __b2
Removing instruction jmp __b8
Removing instruction jmp __b6
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b4
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction ldy #0 with TAY
Replacing instruction ldy #$7f with TAY
Replacing instruction ldy #$40 with TAY
Replacing instruction ldy #$c0 with TAY
Replacing instruction ldy #$ff with TAY
Removing instruction lda #0
Removing instruction lda #$40
Removing instruction lda #-$40
Removing instruction lda #$7f
Removing instruction lda #-$7f
Replacing instruction lda memA with TXA
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b1_from___b3 with __b1
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b1 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b3_from___b2 with __b3_from___b6
Replacing label __b3_from___b8 with __b3
Replacing label __b1_from___b9 with __b1
Replacing label __b1_from_print_schar with __b1
Replacing label __b2_from___b4 with __b2
Replacing label __b1_from_print_sint with __b1
Replacing label __b2_from___b4 with __b2
Removing instruction __b1_from_main:
Removing instruction print_str_from___b1:
Removing instruction __b2_from___b1:
Removing instruction print_ln_from___b2:
Removing instruction __b3_from___b2:
Removing instruction print_mulf8u127_from___b3:
Removing instruction __b4_from___b3:
Removing instruction print_mulf8u127_from___b4:
Removing instruction __b5_from___b4:
Removing instruction print_mulf8u127_from___b5:
Removing instruction __b6_from___b5:
Removing instruction print_mulf8u127_from___b6:
Removing instruction __b7_from___b6:
Removing instruction print_mulf8u127_from___b7:
Removing instruction __b8_from___b7:
Removing instruction print_mulf8u127_from___b8:
Removing instruction __b9_from___b8:
Removing instruction print_mulf8u127_from___b9:
Removing instruction __b10_from___b9:
Removing instruction print_mulf8u127_from___b10:
Removing instruction __b12_from___b11:
Removing instruction print_ln_from___b12:
Removing instruction __b13_from___b12:
Removing instruction print_mulf8s127_from___b13:
Removing instruction __b14_from___b13:
Removing instruction print_mulf8s127_from___b14:
Removing instruction __b15_from___b14:
Removing instruction print_mulf8s127_from___b15:
Removing instruction __b16_from___b15:
Removing instruction print_mulf8s127_from___b16:
Removing instruction __b17_from___b16:
Removing instruction print_mulf8s127_from___b17:
Removing instruction __b18_from___b17:
Removing instruction print_mulf8s127_from___b18:
Removing instruction __b19_from___b18:
Removing instruction print_mulf8s127_from___b19:
Removing instruction __b20_from___b19:
Removing instruction print_mulf8s127_from___b20:
Removing instruction __b21_from___b20:
Removing instruction print_mulf8s127_from___b21:
Removing instruction __b22_from___b21:
Removing instruction print_mulf8s127_from___b22:
Removing instruction __b1_from_print_str:
Removing instruction __b1_from___b3:
Removing instruction __b1_from_print_ln:
Removing instruction __b1_from___b1:
Removing instruction __b2_from___b1:
Removing instruction print_char_from___b2:
Removing instruction __b4_from___b3:
Removing instruction print_char_from___b4:
Removing instruction print_uint_from___b5:
Removing instruction __b6_from___b5:
Removing instruction print_ln_from___b6:
Removing instruction __b2_from___b1:
Removing instruction print_char_from___b2:
Removing instruction __b4_from___b3:
Removing instruction print_char_from___b4:
Removing instruction __b6_from___b5:
Removing instruction print_ln_from___b6:
Removing instruction __b1_from___b4:
Removing instruction __b1_from___b9:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b5:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b8:
Removing instruction __breturn:
Removing instruction __b3_from_print_schar:
Removing instruction print_char_from___b3:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction print_uchar_from___b2:
Removing instruction __b1_from_print_schar:
Removing instruction print_char_from___b1:
Removing instruction __b3_from_print_sint:
Removing instruction print_char_from___b3:
Removing instruction __b2_from___b3:
Removing instruction __b2_from___b4:
Removing instruction print_uint_from___b2:
Removing instruction __b1_from_print_sint:
Removing instruction print_char_from___b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction print_cls_from_main:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction print_str_from___b11:
Removing instruction __b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction __b15:
Removing instruction __b16:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b19:
Removing instruction __b20:
Removing instruction __b21:
Removing instruction __b22:
Removing instruction __breturn:
Removing instruction memset_from_print_cls:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_char_from___b2:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction mulf8u127_from_print_mulf8u127:
Removing instruction __b1:
Removing instruction print_uchar_from___b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction print_uchar_from___b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction print_schar_from___b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction print_schar_from___b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __breturn:
Removing instruction __b1_from_memset:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_char_from_print_uchar:
Removing instruction __b1:
Removing instruction print_char_from___b1:
Removing instruction __breturn:
Removing instruction print_uchar_from_print_uint:
Removing instruction __b1:
Removing instruction print_uchar_from___b1:
Removing instruction __breturn:
Removing instruction mulf8u127_from_mulf8s127:
Removing instruction __b7:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b8:
Removing instruction __b6:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4:
Succesful ASM optimization Pass5UnusedLabelElimination
Skipping double jump to __b1 in bpl __b9
Skipping double jump to __b3 in bpl __b3_from___b6
Replacing jump to rts with rts in jmp __b3
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b3_from___b6 to __b4
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction __b4:
Removing instruction __b9:
Succesful ASM optimization Pass5UnusedLabelElimination
Removing unreachable instruction jmp __b1
Succesful ASM optimization Pass5UnreachableCodeElimination

FINAL SYMBOL TABLE
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void main()
const byte* main::str[9]  = "unsigned"
const byte* main::str1[7]  = "signed"
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
const byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:6 2002.0
byte* memset::dst#2 dst zp[2]:6 1334.6666666666667
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)print_screen#0
const byte* mulf127_sqr1_hi[$200]  = kickasm {{ .fill 512, >round((i/127*i/127)*127/4)  }}
const byte* mulf127_sqr1_lo[$200]  = kickasm {{ .fill 512, <round((i/127*i/127)*127/4)  }}
const byte* mulf127_sqr2_hi[$200]  = kickasm {{ .fill 512, >round(((i-255)/127*(i-255)/127)*127/4)  }}
const byte* mulf127_sqr2_lo[$200]  = kickasm {{ .fill 512, <round(((i-255)/127*(i-255)/127)*127/4)  }}
signed word mulf8s127(signed byte mulf8s127::a , signed byte mulf8s127::b)
signed word~ mulf8s127::$10 zp[2]:10 202.0
signed word~ mulf8s127::$11 zp[2]:8 202.0
signed word~ mulf8s127::$12 zp[2]:10 202.0
signed word~ mulf8s127::$9 zp[2]:8 202.0
signed byte mulf8s127::a
signed byte mulf8s127::a#0 a zp[1]:4 11.833333333333332
signed byte mulf8s127::b
signed byte mulf8s127::b#0 reg byte y 11.833333333333332
signed word mulf8s127::c
word mulf8s127::c#0 c zp[2]:6 25.25
signed word mulf8s127::c#1 c zp[2]:6 202.0
signed word mulf8s127::c#11 c zp[2]:6 202.0
signed word mulf8s127::c#2 c zp[2]:6 202.0
signed word mulf8s127::c#3 c zp[2]:6 202.0
signed word mulf8s127::c#5 c zp[2]:6 101.0
signed word mulf8s127::c#7 c zp[2]:6 134.66666666666666
signed word mulf8s127::return
signed word mulf8s127::return#0 return zp[2]:6 22.0
signed word mulf8s127::return#1 return zp[2]:6 71.0
word mulf8u127(byte mulf8u127::a , byte mulf8u127::b)
byte mulf8u127::a
byte mulf8u127::a#0 reg byte x 11.0
byte mulf8u127::a#1 reg byte x 101.0
byte mulf8u127::a#2 reg byte x 1113.0
byte mulf8u127::b
byte mulf8u127::b#0 reg byte a 22.0
byte mulf8u127::b#1 reg byte a 202.0
byte mulf8u127::b#2 reg byte a 556.5
const nomodify byte* mulf8u127::memA = (byte*) 252
const nomodify byte* mulf8u127::memB = (byte*) 253
const nomodify word* mulf8u127::res = (word*) 254
const nomodify byte* mulf8u127::resH = (byte*) 255
const nomodify byte* mulf8u127::resL = (byte*) 254
word mulf8u127::return
word mulf8u127::return#0 return zp[2]:6 22.0
word mulf8u127::return#1 return zp[2]:6 278.25
word mulf8u127::return#3 return zp[2]:6 202.0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 202.0
byte print_char::ch#11 reg byte a 120104.0
byte print_char::ch#5 reg byte a 20002.0
byte print_char::ch#6 reg byte a 20002.0
byte* print_char_cursor
byte* print_char_cursor#1 print_char_cursor zp[2]:8 27.125
byte* print_char_cursor#126 print_char_cursor zp[2]:8 256.75
byte* print_char_cursor#130 print_char_cursor zp[2]:8 56.0
byte* print_char_cursor#134 print_char_cursor zp[2]:8 4041.999999999999
byte* print_char_cursor#139 print_char_cursor zp[2]:8 13.0
byte* print_char_cursor#144 print_char_cursor zp[2]:8 4.0
byte* print_char_cursor#151 print_char_cursor zp[2]:8 22.0
byte* print_char_cursor#153 print_char_cursor zp[2]:8 22.0
byte* print_char_cursor#18 print_char_cursor zp[2]:8 2163.3846153846152
byte* print_char_cursor#81 print_char_cursor zp[2]:8 110276.5
void print_cls()
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:2 36.759036144578324
byte* print_line_cursor#33 print_line_cursor zp[2]:2 2103.0
byte* print_line_cursor#65 print_line_cursor zp[2]:2 125.0
void print_ln()
void print_mulf8s127(signed byte print_mulf8s127::a , signed byte print_mulf8s127::b)
signed byte print_mulf8s127::a
signed byte print_mulf8s127::a#10 a zp[1]:4 3.6666666666666665
signed byte print_mulf8s127::b
signed byte print_mulf8s127::b#10 b zp[1]:5 2.0
signed word print_mulf8s127::c
signed word print_mulf8s127::c#0 c zp[2]:6 2.2
void print_mulf8u127(byte print_mulf8u127::a , byte print_mulf8u127::b)
byte print_mulf8u127::a
byte print_mulf8u127::a#8 reg byte y 3.6666666666666665
byte print_mulf8u127::b
byte print_mulf8u127::b#10 b zp[1]:4 2.0
word print_mulf8u127::c
word print_mulf8u127::c#0 c zp[2]:6 2.2
void print_schar(signed byte print_schar::b)
signed byte print_schar::b
signed byte print_schar::b#0 reg byte x 202.0
signed byte print_schar::b#1 reg byte x 11.0
signed byte print_schar::b#2 reg byte x 22.0
signed byte print_schar::b#3 reg byte x 54.16666666666666
signed byte print_schar::b#5 reg byte x 202.0
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_sint(signed word print_sint::w)
signed word print_sint::w
signed word print_sint::w#0 w zp[2]:6 202.0
signed word print_sint::w#1 w zp[2]:6 52.33333333333333
signed word print_sint::w#4 w zp[2]:6 202.0
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:6 202.0
byte* print_str::str#3 str zp[2]:6 103.75
byte* print_str::str#6 str zp[2]:6 11.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 20002.0
byte~ print_uchar::$2 reg byte x 20002.0
byte print_uchar::b
byte print_uchar::b#0 reg byte x 202.0
byte print_uchar::b#1 reg byte x 2002.0
byte print_uchar::b#2 reg byte x 2002.0
byte print_uchar::b#3 reg byte x 11.0
byte print_uchar::b#4 reg byte x 22.0
byte print_uchar::b#5 reg byte x 5531.75
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#0 w zp[2]:6 202.0
word print_uint::w#1 w zp[2]:6 22.0
word print_uint::w#2 w zp[2]:6 704.6666666666667

zp[2]:2 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#0 ]
reg byte y [ print_mulf8u127::a#8 ]
zp[1]:4 [ print_mulf8s127::a#10 mulf8s127::a#0 print_mulf8u127::b#10 ]
zp[1]:5 [ print_mulf8s127::b#10 ]
reg byte a [ print_char::ch#11 print_char::ch#0 print_char::ch#5 print_char::ch#6 ]
reg byte x [ mulf8u127::a#2 mulf8u127::a#1 mulf8u127::a#0 ]
reg byte a [ mulf8u127::b#2 mulf8u127::b#1 mulf8u127::b#0 ]
reg byte x [ print_uchar::b#5 print_uchar::b#3 print_uchar::b#4 print_uchar::b#0 print_uchar::b#1 print_uchar::b#2 ]
zp[2]:6 [ print_uint::w#2 print_uint::w#1 print_uint::w#0 print_sint::w#4 print_sint::w#0 print_sint::w#1 print_mulf8u127::c#0 mulf8u127::return#0 mulf8u127::return#1 print_mulf8s127::c#0 mulf8s127::return#1 mulf8s127::c#7 mulf8s127::c#5 mulf8s127::c#1 mulf8s127::c#11 mulf8s127::c#2 mulf8s127::c#3 mulf8s127::c#0 mulf8s127::return#0 mulf8u127::return#3 memset::dst#2 memset::dst#1 print_str::str#3 print_str::str#6 print_str::str#0 ]
reg byte x [ print_schar::b#5 print_schar::b#0 print_schar::b#3 print_schar::b#1 print_schar::b#2 ]
reg byte y [ mulf8s127::b#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
zp[2]:8 [ mulf8s127::$11 mulf8s127::$9 print_char_cursor#81 print_char_cursor#126 print_char_cursor#1 print_char_cursor#139 print_char_cursor#144 print_char_cursor#18 print_char_cursor#130 print_char_cursor#134 print_char_cursor#153 print_char_cursor#151 ]
zp[2]:10 [ mulf8s127::$12 mulf8s127::$10 ]


FINAL ASSEMBLER
Score: 2177

  // File Comments
// An implementation of seriously fast multiply for integer values in the interval [-1;1] with the best possible precision
// NOTE: So far unsuccessful - since the handling of sign and values where a+b>sqrt2) makes the code slower than regular fast multiply
// In this model 255 binary represents 1.0 - meaning that 255*255 = 255
// Uses principles from C=Hacking #16 https://codebase64.org/doku.php?id=magazines:chacking16
// Utilizes the fact that a*b = ((a+b)/2)^2 - ((a-b)/2)^2
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  .label print_screen = $400
  .label print_char_cursor = 8
  .label print_line_cursor = 2
  // main
main: {
    // print_cls()
    // [1] call print_cls 
    // [47] phi from main to print_cls [phi:main->print_cls]
    jsr print_cls
    // [2] phi from main to main::@1 [phi:main->main::@1]
    // main::@1
    // print_str("unsigned")
    // [3] call print_str 
    // [50] phi from main::@1 to print_str [phi:main::@1->print_str]
    // [50] phi print_char_cursor#139 = print_screen#0 [phi:main::@1->print_str#0] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_char_cursor
    lda #>print_screen
    sta.z print_char_cursor+1
    // [50] phi print_str::str#6 = main::str [phi:main::@1->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [4] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
    // main::@2
    // print_ln()
    // [5] call print_ln 
    // [57] phi from main::@2 to print_ln [phi:main::@2->print_ln]
    // [57] phi print_char_cursor#126 = print_char_cursor#1 [phi:main::@2->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_screen#0 [phi:main::@2->print_ln#1] -- pbuz1=pbuc1 
    lda #<print_screen
    sta.z print_line_cursor
    lda #>print_screen
    sta.z print_line_cursor+1
    jsr print_ln
    // [6] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // print_mulf8u127(0,0)
    // [7] call print_mulf8u127 
    // [62] phi from main::@3 to print_mulf8u127 [phi:main::@3->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = 0 [phi:main::@3->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #0
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = 0 [phi:main::@3->print_mulf8u127#1] -- vbuyy=vbuc1 
    tay
    jsr print_mulf8u127
    // [8] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
    // main::@4
    // print_mulf8u127(127,127)
    // [9] call print_mulf8u127 
    // [62] phi from main::@4 to print_mulf8u127 [phi:main::@4->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $7f [phi:main::@4->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$7f
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $7f [phi:main::@4->print_mulf8u127#1] -- vbuyy=vbuc1 
    tay
    jsr print_mulf8u127
    // [10] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
    // main::@5
    // print_mulf8u127(64,64)
    // [11] call print_mulf8u127 
    // [62] phi from main::@5 to print_mulf8u127 [phi:main::@5->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $40 [phi:main::@5->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$40
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $40 [phi:main::@5->print_mulf8u127#1] -- vbuyy=vbuc1 
    tay
    jsr print_mulf8u127
    // [12] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
    // main::@6
    // print_mulf8u127(64,127)
    // [13] call print_mulf8u127 
    // [62] phi from main::@6 to print_mulf8u127 [phi:main::@6->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $7f [phi:main::@6->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$7f
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $40 [phi:main::@6->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$40
    jsr print_mulf8u127
    // [14] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
    // main::@7
    // print_mulf8u127(64,192)
    // [15] call print_mulf8u127 
    // [62] phi from main::@7 to print_mulf8u127 [phi:main::@7->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $c0 [phi:main::@7->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$c0
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $40 [phi:main::@7->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$40
    jsr print_mulf8u127
    // [16] phi from main::@7 to main::@8 [phi:main::@7->main::@8]
    // main::@8
    // print_mulf8u127(255,127)
    // [17] call print_mulf8u127 
    // [62] phi from main::@8 to print_mulf8u127 [phi:main::@8->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $7f [phi:main::@8->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$7f
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $ff [phi:main::@8->print_mulf8u127#1] -- vbuyy=vbuc1 
    ldy #$ff
    jsr print_mulf8u127
    // [18] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
    // main::@9
    // print_mulf8u127(192,192)
    // [19] call print_mulf8u127 
    // [62] phi from main::@9 to print_mulf8u127 [phi:main::@9->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $c0 [phi:main::@9->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$c0
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $c0 [phi:main::@9->print_mulf8u127#1] -- vbuyy=vbuc1 
    tay
    jsr print_mulf8u127
    // [20] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
    // main::@10
    // print_mulf8u127(255,255)
    // [21] call print_mulf8u127 
    // [62] phi from main::@10 to print_mulf8u127 [phi:main::@10->print_mulf8u127]
    // [62] phi print_mulf8u127::b#10 = $ff [phi:main::@10->print_mulf8u127#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z print_mulf8u127.b
    // [62] phi print_mulf8u127::a#8 = $ff [phi:main::@10->print_mulf8u127#1] -- vbuyy=vbuc1 
    tay
    jsr print_mulf8u127
    // main::@11
    // [22] print_char_cursor#144 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("signed")
    // [23] call print_str 
    // [50] phi from main::@11 to print_str [phi:main::@11->print_str]
    // [50] phi print_char_cursor#139 = print_char_cursor#144 [phi:main::@11->print_str#0] -- register_copy 
    // [50] phi print_str::str#6 = main::str1 [phi:main::@11->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [24] phi from main::@11 to main::@12 [phi:main::@11->main::@12]
    // main::@12
    // print_ln()
    // [25] call print_ln 
    // [57] phi from main::@12 to print_ln [phi:main::@12->print_ln]
    // [57] phi print_char_cursor#126 = print_char_cursor#1 [phi:main::@12->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_line_cursor#0 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    // [26] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
    // main::@13
    // print_mulf8s127(0,0)
    // [27] call print_mulf8s127 
    // [82] phi from main::@13 to print_mulf8s127 [phi:main::@13->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = 0 [phi:main::@13->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #0
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = 0 [phi:main::@13->print_mulf8s127#1] -- vbsz1=vbsc1 
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [28] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
    // main::@14
    // print_mulf8s127(64,64)
    // [29] call print_mulf8s127 
    // [82] phi from main::@14 to print_mulf8s127 [phi:main::@14->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = $40 [phi:main::@14->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $40 [phi:main::@14->print_mulf8s127#1] -- vbsz1=vbsc1 
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [30] phi from main::@14 to main::@15 [phi:main::@14->main::@15]
    // main::@15
    // print_mulf8s127(64,127)
    // [31] call print_mulf8s127 
    // [82] phi from main::@15 to print_mulf8s127 [phi:main::@15->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = $7f [phi:main::@15->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $40 [phi:main::@15->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [32] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
    // main::@16
    // print_mulf8s127(-64,64)
    // [33] call print_mulf8s127 
    // [82] phi from main::@16 to print_mulf8s127 [phi:main::@16->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = $40 [phi:main::@16->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$40 [phi:main::@16->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [34] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
    // main::@17
    // print_mulf8s127(64,-64)
    // [35] call print_mulf8s127 
    // [82] phi from main::@17 to print_mulf8s127 [phi:main::@17->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = -$40 [phi:main::@17->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $40 [phi:main::@17->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$40
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [36] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
    // main::@18
    // print_mulf8s127(-64,-64)
    // [37] call print_mulf8s127 
    // [82] phi from main::@18 to print_mulf8s127 [phi:main::@18->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = -$40 [phi:main::@18->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$40
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$40 [phi:main::@18->print_mulf8s127#1] -- vbsz1=vbsc1 
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [38] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
    // main::@19
    // print_mulf8s127(127,127)
    // [39] call print_mulf8s127 
    // [82] phi from main::@19 to print_mulf8s127 [phi:main::@19->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = $7f [phi:main::@19->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $7f [phi:main::@19->print_mulf8s127#1] -- vbsz1=vbsc1 
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [40] phi from main::@19 to main::@20 [phi:main::@19->main::@20]
    // main::@20
    // print_mulf8s127(-127,127)
    // [41] call print_mulf8s127 
    // [82] phi from main::@20 to print_mulf8s127 [phi:main::@20->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = $7f [phi:main::@20->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$7f [phi:main::@20->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [42] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
    // main::@21
    // print_mulf8s127(127,-127)
    // [43] call print_mulf8s127 
    // [82] phi from main::@21 to print_mulf8s127 [phi:main::@21->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = -$7f [phi:main::@21->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = $7f [phi:main::@21->print_mulf8s127#1] -- vbsz1=vbsc1 
    lda #$7f
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // [44] phi from main::@21 to main::@22 [phi:main::@21->main::@22]
    // main::@22
    // print_mulf8s127(-127,-127)
    // [45] call print_mulf8s127 
    // [82] phi from main::@22 to print_mulf8s127 [phi:main::@22->print_mulf8s127]
    // [82] phi print_mulf8s127::b#10 = -$7f [phi:main::@22->print_mulf8s127#0] -- vbsz1=vbsc1 
    lda #-$7f
    sta.z print_mulf8s127.b
    // [82] phi print_mulf8s127::a#10 = -$7f [phi:main::@22->print_mulf8s127#1] -- vbsz1=vbsc1 
    sta.z print_mulf8s127.a
    jsr print_mulf8s127
    // main::@return
    // }
    // [46] return 
    rts
    str: .text "unsigned"
    .byte 0
    str1: .text "signed"
    .byte 0
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // memset(print_screen, ' ', 1000)
    // [48] call memset 
    // [102] phi from print_cls to memset [phi:print_cls->memset]
    jsr memset
    // print_cls::@return
    // }
    // [49] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zp(6) str)
print_str: {
    .label str = 6
    // [51] phi from print_str print_str::@3 to print_str::@1 [phi:print_str/print_str::@3->print_str::@1]
    // [51] phi print_char_cursor#1 = print_char_cursor#139 [phi:print_str/print_str::@3->print_str::@1#0] -- register_copy 
    // [51] phi print_str::str#3 = print_str::str#6 [phi:print_str/print_str::@3->print_str::@1#1] -- register_copy 
    // print_str::@1
  __b1:
    // while(*str)
    // [52] if(0!=*print_str::str#3) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // print_str::@return
    // }
    // [53] return 
    rts
    // print_str::@2
  __b2:
    // print_char(*(str++))
    // [54] print_char::ch#0 = *print_str::str#3 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (str),y
    // [55] call print_char 
    // [108] phi from print_str::@2 to print_char [phi:print_str::@2->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#1 [phi:print_str::@2->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = print_char::ch#0 [phi:print_str::@2->print_char#1] -- register_copy 
    jsr print_char
    // print_str::@3
    // print_char(*(str++));
    // [56] print_str::str#0 = ++ print_str::str#3 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1
}
  // print_ln
// Print a newline
print_ln: {
    // [58] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
    // [58] phi print_line_cursor#33 = print_line_cursor#65 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    // print_ln::@1
  __b1:
    // print_line_cursor + $28
    // [59] print_line_cursor#0 = print_line_cursor#33 + $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // while (print_line_cursor<print_char_cursor)
    // [60] if(print_line_cursor#0<print_char_cursor#126) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1
  !:
    // print_ln::@return
    // }
    // [61] return 
    rts
}
  // print_mulf8u127
// print_mulf8u127(byte register(Y) a, byte zp(4) b)
print_mulf8u127: {
    .label c = 6
    .label b = 4
    // mulf8u127(a,b)
    // [63] mulf8u127::a#0 = print_mulf8u127::a#8 -- vbuxx=vbuyy 
    tya
    tax
    // [64] mulf8u127::b#0 = print_mulf8u127::b#10 -- vbuaa=vbuz1 
    lda.z b
    // [65] call mulf8u127 
    // [112] phi from print_mulf8u127 to mulf8u127 [phi:print_mulf8u127->mulf8u127]
    // [112] phi mulf8u127::b#2 = mulf8u127::b#0 [phi:print_mulf8u127->mulf8u127#0] -- register_copy 
    // [112] phi mulf8u127::a#2 = mulf8u127::a#0 [phi:print_mulf8u127->mulf8u127#1] -- register_copy 
    jsr mulf8u127
    // mulf8u127(a,b)
    // [66] mulf8u127::return#0 = mulf8u127::return#1
    // print_mulf8u127::@1
    // c = mulf8u127(a,b)
    // [67] print_mulf8u127::c#0 = mulf8u127::return#0
    // print_uchar(a)
    // [68] print_uchar::b#3 = print_mulf8u127::a#8 -- vbuxx=vbuyy 
    tya
    tax
    // [69] print_char_cursor#153 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_uchar(a)
    // [70] call print_uchar 
    // [118] phi from print_mulf8u127::@1 to print_uchar [phi:print_mulf8u127::@1->print_uchar]
    // [118] phi print_char_cursor#134 = print_char_cursor#153 [phi:print_mulf8u127::@1->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#3 [phi:print_mulf8u127::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    // [71] phi from print_mulf8u127::@1 to print_mulf8u127::@2 [phi:print_mulf8u127::@1->print_mulf8u127::@2]
    // print_mulf8u127::@2
    // print_char('*')
    // [72] call print_char 
    // [108] phi from print_mulf8u127::@2 to print_char [phi:print_mulf8u127::@2->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8u127::@2->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '*' [phi:print_mulf8u127::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'*'
    jsr print_char
    // print_mulf8u127::@3
    // print_uchar(b)
    // [73] print_uchar::b#4 = print_mulf8u127::b#10 -- vbuxx=vbuz1 
    ldx.z b
    // [74] call print_uchar 
    // [118] phi from print_mulf8u127::@3 to print_uchar [phi:print_mulf8u127::@3->print_uchar]
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_mulf8u127::@3->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#4 [phi:print_mulf8u127::@3->print_uchar#1] -- register_copy 
    jsr print_uchar
    // [75] phi from print_mulf8u127::@3 to print_mulf8u127::@4 [phi:print_mulf8u127::@3->print_mulf8u127::@4]
    // print_mulf8u127::@4
    // print_char('=')
    // [76] call print_char 
    // [108] phi from print_mulf8u127::@4 to print_char [phi:print_mulf8u127::@4->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8u127::@4->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '=' [phi:print_mulf8u127::@4->print_char#1] -- vbuaa=vbuc1 
    lda #'='
    jsr print_char
    // print_mulf8u127::@5
    // print_uint(c)
    // [77] print_uint::w#1 = print_mulf8u127::c#0
    // [78] call print_uint 
    // [126] phi from print_mulf8u127::@5 to print_uint [phi:print_mulf8u127::@5->print_uint]
    // [126] phi print_uint::w#2 = print_uint::w#1 [phi:print_mulf8u127::@5->print_uint#0] -- register_copy 
    jsr print_uint
    // [79] phi from print_mulf8u127::@5 to print_mulf8u127::@6 [phi:print_mulf8u127::@5->print_mulf8u127::@6]
    // print_mulf8u127::@6
    // print_ln()
    // [80] call print_ln 
    // [57] phi from print_mulf8u127::@6 to print_ln [phi:print_mulf8u127::@6->print_ln]
    // [57] phi print_char_cursor#126 = print_char_cursor#18 [phi:print_mulf8u127::@6->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_line_cursor#0 [phi:print_mulf8u127::@6->print_ln#1] -- register_copy 
    jsr print_ln
    // print_mulf8u127::@return
    // }
    // [81] return 
    rts
}
  // print_mulf8s127
// print_mulf8s127(signed byte zp(4) a, signed byte zp(5) b)
print_mulf8s127: {
    .label c = 6
    .label a = 4
    .label b = 5
    // mulf8s127(a,b)
    // [83] mulf8s127::a#0 = print_mulf8s127::a#10
    // [84] mulf8s127::b#0 = print_mulf8s127::b#10 -- vbsyy=vbsz1 
    ldy.z b
    // [85] call mulf8s127 
    jsr mulf8s127
    // [86] mulf8s127::return#0 = mulf8s127::return#1
    // print_mulf8s127::@1
    // c = mulf8s127(a,b)
    // [87] print_mulf8s127::c#0 = mulf8s127::return#0
    // print_schar(a)
    // [88] print_schar::b#1 = print_mulf8s127::a#10 -- vbsxx=vbsz1 
    ldx.z a
    // [89] print_char_cursor#151 = print_line_cursor#0 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_schar(a)
    // [90] call print_schar 
    // [153] phi from print_mulf8s127::@1 to print_schar [phi:print_mulf8s127::@1->print_schar]
    // [153] phi print_char_cursor#130 = print_char_cursor#151 [phi:print_mulf8s127::@1->print_schar#0] -- register_copy 
    // [153] phi print_schar::b#3 = print_schar::b#1 [phi:print_mulf8s127::@1->print_schar#1] -- register_copy 
    jsr print_schar
    // [91] phi from print_mulf8s127::@1 to print_mulf8s127::@2 [phi:print_mulf8s127::@1->print_mulf8s127::@2]
    // print_mulf8s127::@2
    // print_char('*')
    // [92] call print_char 
    // [108] phi from print_mulf8s127::@2 to print_char [phi:print_mulf8s127::@2->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8s127::@2->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '*' [phi:print_mulf8s127::@2->print_char#1] -- vbuaa=vbuc1 
    lda #'*'
    jsr print_char
    // print_mulf8s127::@3
    // print_schar(b)
    // [93] print_schar::b#2 = print_mulf8s127::b#10 -- vbsxx=vbsz1 
    ldx.z b
    // [94] call print_schar 
    // [153] phi from print_mulf8s127::@3 to print_schar [phi:print_mulf8s127::@3->print_schar]
    // [153] phi print_char_cursor#130 = print_char_cursor#18 [phi:print_mulf8s127::@3->print_schar#0] -- register_copy 
    // [153] phi print_schar::b#3 = print_schar::b#2 [phi:print_mulf8s127::@3->print_schar#1] -- register_copy 
    jsr print_schar
    // [95] phi from print_mulf8s127::@3 to print_mulf8s127::@4 [phi:print_mulf8s127::@3->print_mulf8s127::@4]
    // print_mulf8s127::@4
    // print_char('=')
    // [96] call print_char 
    // [108] phi from print_mulf8s127::@4 to print_char [phi:print_mulf8s127::@4->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_mulf8s127::@4->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '=' [phi:print_mulf8s127::@4->print_char#1] -- vbuaa=vbuc1 
    lda #'='
    jsr print_char
    // print_mulf8s127::@5
    // print_sint(c)
    // [97] print_sint::w#1 = print_mulf8s127::c#0
    // [98] call print_sint 
    jsr print_sint
    // [99] phi from print_mulf8s127::@5 to print_mulf8s127::@6 [phi:print_mulf8s127::@5->print_mulf8s127::@6]
    // print_mulf8s127::@6
    // print_ln()
    // [100] call print_ln 
    // [57] phi from print_mulf8s127::@6 to print_ln [phi:print_mulf8s127::@6->print_ln]
    // [57] phi print_char_cursor#126 = print_char_cursor#18 [phi:print_mulf8s127::@6->print_ln#0] -- register_copy 
    // [57] phi print_line_cursor#65 = print_line_cursor#0 [phi:print_mulf8s127::@6->print_ln#1] -- register_copy 
    jsr print_ln
    // print_mulf8s127::@return
    // }
    // [101] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = print_screen
    .label end = str+num
    .label dst = 6
    // [103] phi from memset to memset::@1 [phi:memset->memset::@1]
    // [103] phi memset::dst#2 = (byte*)memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    // memset::@1
  __b1:
    // for(char* dst = str; dst!=end; dst++)
    // [104] if(memset::dst#2!=memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    // memset::@return
    // }
    // [105] return 
    rts
    // memset::@2
  __b2:
    // *dst = c
    // [106] *memset::dst#2 = memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [107] memset::dst#1 = ++ memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [103] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
    // [103] phi memset::dst#2 = memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // *(print_char_cursor++) = ch
    // [109] *print_char_cursor#81 = print_char::ch#11 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // *(print_char_cursor++) = ch;
    // [110] print_char_cursor#18 = ++ print_char_cursor#81 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // print_char::@return
    // }
    // [111] return 
    rts
}
  // mulf8u127
// mulf8u127(byte register(X) a, byte register(A) b)
mulf8u127: {
    .label memA = $fc
    .label memB = $fd
    .label res = $fe
    .label resL = $fe
    .label resH = $ff
    .label return = 6
    // *memA = a
    // [113] *mulf8u127::memA = mulf8u127::a#2 -- _deref_pbuc1=vbuxx 
    stx memA
    // *memB = b
    // [114] *mulf8u127::memB = mulf8u127::b#2 -- _deref_pbuc1=vbuaa 
    sta memB
    // asm
    // asm { ldamemA stasm1+1 stasm3+1 eor#$ff stasm2+1 stasm4+1 ldxmemB sec sm1: ldamulf127_sqr1_lo,x sm2: sbcmulf127_sqr2_lo,x staresL sm3: ldamulf127_sqr1_hi,x sm4: sbcmulf127_sqr2_hi,x staresH  }
    txa
    sta sm1+1
    sta sm3+1
    eor #$ff
    sta sm2+1
    sta sm4+1
    ldx memB
    sec
  sm1:
    lda mulf127_sqr1_lo,x
  sm2:
    sbc mulf127_sqr2_lo,x
    sta resL
  sm3:
    lda mulf127_sqr1_hi,x
  sm4:
    sbc mulf127_sqr2_hi,x
    sta resH
    // return *res;
    // [116] mulf8u127::return#1 = *mulf8u127::res -- vwuz1=_deref_pwuc1 
    lda res
    sta.z return
    lda res+1
    sta.z return+1
    // mulf8u127::@return
    // }
    // [117] return 
    rts
}
  // print_uchar
// Print a char as HEX
// print_uchar(byte register(X) b)
print_uchar: {
    // b>>4
    // [119] print_uchar::$0 = print_uchar::b#5 >> 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // print_char(print_hextab[b>>4])
    // [120] print_char::ch#5 = print_hextab[print_uchar::$0] -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [121] call print_char 
  // Table of hexadecimal digits
    // [108] phi from print_uchar to print_char [phi:print_uchar->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#134 [phi:print_uchar->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = print_char::ch#5 [phi:print_uchar->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@1
    // b&$f
    // [122] print_uchar::$2 = print_uchar::b#5 & $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // print_char(print_hextab[b&$f])
    // [123] print_char::ch#6 = print_hextab[print_uchar::$2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [124] call print_char 
    // [108] phi from print_uchar::@1 to print_char [phi:print_uchar::@1->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_uchar::@1->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = print_char::ch#6 [phi:print_uchar::@1->print_char#1] -- register_copy 
    jsr print_char
    // print_uchar::@return
    // }
    // [125] return 
    rts
}
  // print_uint
// Print a unsigned int as HEX
// print_uint(word zp(6) w)
print_uint: {
    .label w = 6
    // print_uchar(>w)
    // [127] print_uchar::b#1 = > print_uint::w#2 -- vbuxx=_hi_vwuz1 
    ldx.z w+1
    // [128] call print_uchar 
    // [118] phi from print_uint to print_uchar [phi:print_uint->print_uchar]
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_uint->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#1 [phi:print_uint->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_uint::@1
    // print_uchar(<w)
    // [129] print_uchar::b#2 = < print_uint::w#2 -- vbuxx=_lo_vwuz1 
    ldx.z w
    // [130] call print_uchar 
    // [118] phi from print_uint::@1 to print_uchar [phi:print_uint::@1->print_uchar]
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_uint::@1->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#2 [phi:print_uint::@1->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_uint::@return
    // }
    // [131] return 
    rts
}
  // mulf8s127
// mulf8s127(signed byte zp(4) a, signed byte register(Y) b)
mulf8s127: {
    .label __9 = 8
    .label __10 = $a
    .label __11 = 8
    .label __12 = $a
    .label a = 4
    .label return = 6
    .label c = 6
    // mulf8u127((unsigned char)a, (unsigned char)b)
    // [132] mulf8u127::a#1 = (byte)mulf8s127::a#0 -- vbuxx=vbuz1 
    ldx.z a
    // [133] mulf8u127::b#1 = (byte)mulf8s127::b#0 -- vbuaa=vbuyy 
    tya
    // [134] call mulf8u127 
    // [112] phi from mulf8s127 to mulf8u127 [phi:mulf8s127->mulf8u127]
    // [112] phi mulf8u127::b#2 = mulf8u127::b#1 [phi:mulf8s127->mulf8u127#0] -- register_copy 
    // [112] phi mulf8u127::a#2 = mulf8u127::a#1 [phi:mulf8s127->mulf8u127#1] -- register_copy 
    jsr mulf8u127
    // mulf8u127((unsigned char)a, (unsigned char)b)
    // [135] mulf8u127::return#3 = mulf8u127::return#1
    // mulf8s127::@7
    // [136] mulf8s127::c#0 = mulf8u127::return#3
    // if(a<0)
    // [137] if(mulf8s127::a#0>=0) goto mulf8s127::@9 -- vbsz1_ge_0_then_la1 
    lda.z a
    cmp #0
    bpl __b1
    // mulf8s127::@4
    // (signed word)b*2
    // [138] mulf8s127::$11 = (signed word)mulf8s127::b#0 -- vwsz1=_sword_vbsyy 
    tya
    sta.z __11
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z __11+1
    // [139] mulf8s127::$9 = mulf8s127::$11 << 1 -- vwsz1=vwsz1_rol_1 
    asl.z __9
    rol.z __9+1
    // c -= (signed word)b*2
    // [140] mulf8s127::c#1 = (signed word)mulf8s127::c#0 - mulf8s127::$9 -- vwsz1=vwsz1_minus_vwsz2 
    lda.z c
    sec
    sbc.z __9
    sta.z c
    lda.z c+1
    sbc.z __9+1
    sta.z c+1
    // [141] phi from mulf8s127::@4 mulf8s127::@9 to mulf8s127::@1 [phi:mulf8s127::@4/mulf8s127::@9->mulf8s127::@1]
    // [141] phi mulf8s127::c#5 = mulf8s127::c#1 [phi:mulf8s127::@4/mulf8s127::@9->mulf8s127::@1#0] -- register_copy 
    // mulf8s127::@1
  __b1:
    // if(b<0)
    // [142] if(mulf8s127::b#0>=0) goto mulf8s127::@2 -- vbsyy_ge_0_then_la1 
    cpy #0
    bpl __b2
    // mulf8s127::@5
    // (signed word)a*2
    // [143] mulf8s127::$12 = (signed word)mulf8s127::a#0 -- vwsz1=_sword_vbsz2 
    lda.z a
    sta.z __12
    ora #$7f
    bmi !+
    lda #0
  !:
    sta.z __12+1
    // [144] mulf8s127::$10 = mulf8s127::$12 << 1 -- vwsz1=vwsz1_rol_1 
    asl.z __10
    rol.z __10+1
    // c -= (signed word)a*2
    // [145] mulf8s127::c#2 = mulf8s127::c#5 - mulf8s127::$10 -- vwsz1=vwsz1_minus_vwsz2 
    lda.z c
    sec
    sbc.z __10
    sta.z c
    lda.z c+1
    sbc.z __10+1
    sta.z c+1
    // [146] phi from mulf8s127::@1 mulf8s127::@5 to mulf8s127::@2 [phi:mulf8s127::@1/mulf8s127::@5->mulf8s127::@2]
    // [146] phi mulf8s127::c#7 = mulf8s127::c#5 [phi:mulf8s127::@1/mulf8s127::@5->mulf8s127::@2#0] -- register_copy 
    // mulf8s127::@2
  __b2:
    // if(a<0 && b<0)
    // [147] if(mulf8s127::a#0>=0) goto mulf8s127::@3 -- vbsz1_ge_0_then_la1 
    lda.z a
    cmp #0
    bpl __b3
    // mulf8s127::@8
    // [148] if(mulf8s127::b#0>=0) goto mulf8s127::@3 -- vbsyy_ge_0_then_la1 
    cpy #0
    bpl __b3
    // mulf8s127::@6
    // c -= 0x200
    // [149] mulf8s127::c#3 = mulf8s127::c#7 - $200 -- vwsz1=vwsz1_minus_vwsc1 
    lda.z c
    sec
    sbc #<$200
    sta.z c
    lda.z c+1
    sbc #>$200
    sta.z c+1
    // [150] phi from mulf8s127::@2 mulf8s127::@6 to mulf8s127::@3 [phi:mulf8s127::@2/mulf8s127::@6->mulf8s127::@3]
    // [150] phi mulf8s127::return#1 = mulf8s127::c#7 [phi:mulf8s127::@2/mulf8s127::@6->mulf8s127::@3#0] -- register_copy 
    rts
    // [150] phi from mulf8s127::@8 to mulf8s127::@3 [phi:mulf8s127::@8->mulf8s127::@3]
    // mulf8s127::@3
  __b3:
    // mulf8s127::@return
    // }
    // [151] return 
    rts
    // mulf8s127::@9
    // [152] mulf8s127::c#11 = (signed word)mulf8s127::c#0
}
  // print_schar
// Print a signed char as HEX
// print_schar(signed byte register(X) b)
print_schar: {
    // if(b<0)
    // [154] if(print_schar::b#3<0) goto print_schar::@1 -- vbsxx_lt_0_then_la1 
    cpx #0
    bmi __b1
    // [155] phi from print_schar to print_schar::@3 [phi:print_schar->print_schar::@3]
    // print_schar::@3
    // print_char(' ')
    // [156] call print_char 
    // [108] phi from print_schar::@3 to print_char [phi:print_schar::@3->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#130 [phi:print_schar::@3->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = ' ' [phi:print_schar::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [157] phi from print_schar::@3 print_schar::@4 to print_schar::@2 [phi:print_schar::@3/print_schar::@4->print_schar::@2]
    // [157] phi print_schar::b#5 = print_schar::b#3 [phi:print_schar::@3/print_schar::@4->print_schar::@2#0] -- register_copy 
    // print_schar::@2
  __b2:
    // print_uchar((char)b)
    // [158] print_uchar::b#0 = (byte)print_schar::b#5
    // [159] call print_uchar 
    // [118] phi from print_schar::@2 to print_uchar [phi:print_schar::@2->print_uchar]
    // [118] phi print_char_cursor#134 = print_char_cursor#18 [phi:print_schar::@2->print_uchar#0] -- register_copy 
    // [118] phi print_uchar::b#5 = print_uchar::b#0 [phi:print_schar::@2->print_uchar#1] -- register_copy 
    jsr print_uchar
    // print_schar::@return
    // }
    // [160] return 
    rts
    // [161] phi from print_schar to print_schar::@1 [phi:print_schar->print_schar::@1]
    // print_schar::@1
  __b1:
    // print_char('-')
    // [162] call print_char 
    // [108] phi from print_schar::@1 to print_char [phi:print_schar::@1->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#130 [phi:print_schar::@1->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '-' [phi:print_schar::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    // print_schar::@4
    // b = -b
    // [163] print_schar::b#0 = - print_schar::b#3 -- vbsxx=_neg_vbsxx 
    txa
    eor #$ff
    clc
    adc #1
    tax
    jmp __b2
}
  // print_sint
// Print a signed int as HEX
// print_sint(signed word zp(6) w)
print_sint: {
    .label w = 6
    // if(w<0)
    // [164] if(print_sint::w#1<0) goto print_sint::@1 -- vwsz1_lt_0_then_la1 
    lda.z w+1
    bmi __b1
    // [165] phi from print_sint to print_sint::@3 [phi:print_sint->print_sint::@3]
    // print_sint::@3
    // print_char(' ')
    // [166] call print_char 
    // [108] phi from print_sint::@3 to print_char [phi:print_sint::@3->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_sint::@3->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = ' ' [phi:print_sint::@3->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    // [167] phi from print_sint::@3 print_sint::@4 to print_sint::@2 [phi:print_sint::@3/print_sint::@4->print_sint::@2]
    // [167] phi print_sint::w#4 = print_sint::w#1 [phi:print_sint::@3/print_sint::@4->print_sint::@2#0] -- register_copy 
    // print_sint::@2
  __b2:
    // print_uint((unsigned int)w)
    // [168] print_uint::w#0 = (word)print_sint::w#4
    // [169] call print_uint 
    // [126] phi from print_sint::@2 to print_uint [phi:print_sint::@2->print_uint]
    // [126] phi print_uint::w#2 = print_uint::w#0 [phi:print_sint::@2->print_uint#0] -- register_copy 
    jsr print_uint
    // print_sint::@return
    // }
    // [170] return 
    rts
    // [171] phi from print_sint to print_sint::@1 [phi:print_sint->print_sint::@1]
    // print_sint::@1
  __b1:
    // print_char('-')
    // [172] call print_char 
    // [108] phi from print_sint::@1 to print_char [phi:print_sint::@1->print_char]
    // [108] phi print_char_cursor#81 = print_char_cursor#18 [phi:print_sint::@1->print_char#0] -- register_copy 
    // [108] phi print_char::ch#11 = '-' [phi:print_sint::@1->print_char#1] -- vbuaa=vbuc1 
    lda #'-'
    jsr print_char
    // print_sint::@4
    // w = -w
    // [173] print_sint::w#0 = - print_sint::w#1 -- vwsz1=_neg_vwsz1 
    sec
    lda #0
    sbc.z w
    sta.z w
    lda #0
    sbc.z w+1
    sta.z w+1
    jmp __b2
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // mulf_sqr tables will contain f(x)=int(x*x/4) and g(x) = f(x-255).
  // f(x) = ( x * x )/4
  .align $100
mulf127_sqr1_lo:
.fill 512, <round((i/127*i/127)*127/4) 
  .align $100
mulf127_sqr1_hi:
.fill 512, >round((i/127*i/127)*127/4) 
  // g(x) =  <((( x - 255) * ( x - 255 ))/4)
  .align $100
mulf127_sqr2_lo:
.fill 512, <round(((i-255)/127*(i-255)/127)*127/4) 
  .align $100
mulf127_sqr2_hi:
.fill 512, >round(((i-255)/127*(i-255)/127)*127/4) 

