@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call test 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call test 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call test 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call test 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] phi()
  [13] call test 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [14] phi()
  [15] call test 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [16] phi()
  [17] call test 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [18] phi()
  [19] call test 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [20] phi()
  [21] call test 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [22] phi()
  [23] call test 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [24] phi()
  [25] call test 
  to:main::@return
main::@return: scope:[main]  from main::@10
  [26] return 
  to:@return

(void()) test((byte) test::i , (byte) test::a)
test: scope:[test]  from main main::@1 main::@10 main::@2 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [27] (byte) test::i#11 ← phi( main/(byte) 0 main::@1/(byte) 1 main::@10/(byte) $a main::@2/(byte) 2 main::@3/(byte) 3 main::@4/(byte) 4 main::@5/(byte) 5 main::@6/(byte) 6 main::@7/(byte) 7 main::@8/(byte) 8 main::@9/(byte) 9 )
  [27] (byte) test::a#11 ← phi( main/(byte) 3 main::@1/(byte) 3+(byte) 1 main::@10/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2%(byte) 2<<(byte) 2>>(byte) 1^(byte) 6|(byte) 1&(byte) 1 main::@2/(byte) 3+(byte) 1-(byte) 1 main::@3/(byte) 3+(byte) 1-(byte) 1*(byte) 6 main::@4/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2 main::@5/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2%(byte) 2 main::@6/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2%(byte) 2<<(byte) 2 main::@7/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2%(byte) 2<<(byte) 2>>(byte) 1 main::@8/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2%(byte) 2<<(byte) 2>>(byte) 1^(byte) 6 main::@9/(byte) 3+(byte) 1-(byte) 1*(byte) 6/(byte) 2%(byte) 2<<(byte) 2>>(byte) 1^(byte) 6|(byte) 1 )
  [28] *((const byte*) screen1 + (byte) test::i#11) ← (byte) test::a#11
  [29] *((const byte*) screen2#0 + (byte) test::i#11) ← *((const byte*) ref + (byte) test::i#11)
  [30] if(*((const byte*) ref + (byte) test::i#11)==(byte) test::a#11) goto test::@1
  to:test::@2
test::@2: scope:[test]  from test
  [31] *((const byte*) cols + (byte) test::i#11) ← (const byte) RED
  to:test::@return
test::@return: scope:[test]  from test::@1 test::@2
  [32] return 
  to:@return
test::@1: scope:[test]  from test
  [33] *((const byte*) cols + (byte) test::i#11) ← (const byte) GREEN
  to:test::@return
