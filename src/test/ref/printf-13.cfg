
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [5] phi()
  [6] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [7] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [8] phi()
  [9] call clrscr 
  to:main::@1
main::@1: scope:[main]  from main
  [10] phi()
  [11] call cputc 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [12] phi()
  [13] call cputs 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [14] phi()
  [15] call printf_string 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [16] phi()
  [17] call cputs 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [18] phi()
  [19] call printf_string 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [20] phi()
  [21] call cputs 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [22] phi()
  [23] call printf_string 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [24] phi()
  [25] call cputs 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [26] phi()
  [27] call printf_string 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [28] phi()
  [29] call cputs 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [30] phi()
  [31] call cputc 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [32] phi()
  [33] call cputs 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [34] phi()
  [35] call printf_string 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [36] phi()
  [37] call cputs 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [38] phi()
  [39] call printf_string 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [40] phi()
  [41] call cputs 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [42] phi()
  [43] call printf_string 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [44] phi()
  [45] call cputs 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [46] phi()
  [47] call printf_string 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [48] phi()
  [49] call cputs 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [50] phi()
  [51] call cputc 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [52] phi()
  [53] call cputs 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [54] phi()
  [55] call printf_sint 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [56] phi()
  [57] call cputs 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [58] phi()
  [59] call printf_sint 
  to:main::@26
main::@26: scope:[main]  from main::@25
  [60] phi()
  [61] call cputs 
  to:main::@27
main::@27: scope:[main]  from main::@26
  [62] phi()
  [63] call printf_sint 
  to:main::@28
main::@28: scope:[main]  from main::@27
  [64] phi()
  [65] call cputs 
  to:main::@29
main::@29: scope:[main]  from main::@28
  [66] phi()
  [67] call printf_sint 
  to:main::@30
main::@30: scope:[main]  from main::@29
  [68] phi()
  [69] call cputs 
  to:main::@31
main::@31: scope:[main]  from main::@30
  [70] phi()
  [71] call cputc 
  to:main::@32
main::@32: scope:[main]  from main::@31
  [72] phi()
  [73] call cputs 
  to:main::@33
main::@33: scope:[main]  from main::@32
  [74] phi()
  [75] call printf_sint 
  to:main::@34
main::@34: scope:[main]  from main::@33
  [76] phi()
  [77] call cputs 
  to:main::@35
main::@35: scope:[main]  from main::@34
  [78] phi()
  [79] call printf_sint 
  to:main::@36
main::@36: scope:[main]  from main::@35
  [80] phi()
  [81] call cputs 
  to:main::@37
main::@37: scope:[main]  from main::@36
  [82] phi()
  [83] call printf_sint 
  to:main::@38
main::@38: scope:[main]  from main::@37
  [84] phi()
  [85] call cputs 
  to:main::@39
main::@39: scope:[main]  from main::@38
  [86] phi()
  [87] call printf_sint 
  to:main::@40
main::@40: scope:[main]  from main::@39
  [88] phi()
  [89] call cputs 
  to:main::@41
main::@41: scope:[main]  from main::@40
  [90] phi()
  [91] call cputc 
  to:main::@42
main::@42: scope:[main]  from main::@41
  [92] phi()
  [93] call cputs 
  to:main::@43
main::@43: scope:[main]  from main::@42
  [94] phi()
  [95] call printf_sint 
  to:main::@44
main::@44: scope:[main]  from main::@43
  [96] phi()
  [97] call cputs 
  to:main::@45
main::@45: scope:[main]  from main::@44
  [98] phi()
  [99] call printf_sint 
  to:main::@46
main::@46: scope:[main]  from main::@45
  [100] phi()
  [101] call cputs 
  to:main::@47
main::@47: scope:[main]  from main::@46
  [102] phi()
  [103] call printf_sint 
  to:main::@48
main::@48: scope:[main]  from main::@47
  [104] phi()
  [105] call cputs 
  to:main::@49
main::@49: scope:[main]  from main::@48
  [106] phi()
  [107] call printf_sint 
  to:main::@50
main::@50: scope:[main]  from main::@49
  [108] phi()
  [109] call cputs 
  to:main::@51
main::@51: scope:[main]  from main::@50
  [110] phi()
  [111] call cputc 
  to:main::@52
main::@52: scope:[main]  from main::@51
  [112] phi()
  [113] call cputs 
  to:main::@53
main::@53: scope:[main]  from main::@52
  [114] phi()
  [115] call printf_sint 
  to:main::@54
main::@54: scope:[main]  from main::@53
  [116] phi()
  [117] call cputs 
  to:main::@55
main::@55: scope:[main]  from main::@54
  [118] phi()
  [119] call printf_sint 
  to:main::@56
main::@56: scope:[main]  from main::@55
  [120] phi()
  [121] call cputs 
  to:main::@57
main::@57: scope:[main]  from main::@56
  [122] phi()
  [123] call printf_sint 
  to:main::@58
main::@58: scope:[main]  from main::@57
  [124] phi()
  [125] call cputs 
  to:main::@59
main::@59: scope:[main]  from main::@58
  [126] phi()
  [127] call printf_sint 
  to:main::@60
main::@60: scope:[main]  from main::@59
  [128] phi()
  [129] call cputs 
  to:main::@61
main::@61: scope:[main]  from main::@60
  [130] phi()
  [131] call cputc 
  to:main::@62
main::@62: scope:[main]  from main::@61
  [132] phi()
  [133] call cputs 
  to:main::@63
main::@63: scope:[main]  from main::@62
  [134] phi()
  [135] call printf_uint 
  to:main::@64
main::@64: scope:[main]  from main::@63
  [136] phi()
  [137] call cputs 
  to:main::@65
main::@65: scope:[main]  from main::@64
  [138] phi()
  [139] call printf_uint 
  to:main::@66
main::@66: scope:[main]  from main::@65
  [140] phi()
  [141] call cputs 
  to:main::@67
main::@67: scope:[main]  from main::@66
  [142] phi()
  [143] call printf_uint 
  to:main::@68
main::@68: scope:[main]  from main::@67
  [144] phi()
  [145] call cputs 
  to:main::@69
main::@69: scope:[main]  from main::@68
  [146] phi()
  [147] call printf_uint 
  to:main::@70
main::@70: scope:[main]  from main::@69
  [148] phi()
  [149] call cputs 
  to:main::@71
main::@71: scope:[main]  from main::@70
  [150] phi()
  [151] call cputc 
  to:main::@72
main::@72: scope:[main]  from main::@71
  [152] phi()
  [153] call cputs 
  to:main::@73
main::@73: scope:[main]  from main::@72
  [154] phi()
  [155] call printf_uint 
  to:main::@74
main::@74: scope:[main]  from main::@73
  [156] phi()
  [157] call cputs 
  to:main::@75
main::@75: scope:[main]  from main::@74
  [158] phi()
  [159] call printf_uint 
  to:main::@76
main::@76: scope:[main]  from main::@75
  [160] phi()
  [161] call cputs 
  to:main::@77
main::@77: scope:[main]  from main::@76
  [162] phi()
  [163] call printf_uint 
  to:main::@78
main::@78: scope:[main]  from main::@77
  [164] phi()
  [165] call cputs 
  to:main::@79
main::@79: scope:[main]  from main::@78
  [166] phi()
  [167] call printf_uint 
  to:main::@80
main::@80: scope:[main]  from main::@79
  [168] phi()
  [169] call cputs 
  to:main::@81
main::@81: scope:[main]  from main::@80
  [170] phi()
  [171] call cputc 
  to:main::@82
main::@82: scope:[main]  from main::@81
  [172] phi()
  [173] call cputs 
  to:main::@83
main::@83: scope:[main]  from main::@82
  [174] phi()
  [175] call printf_uint 
  to:main::@84
main::@84: scope:[main]  from main::@83
  [176] phi()
  [177] call cputs 
  to:main::@85
main::@85: scope:[main]  from main::@84
  [178] phi()
  [179] call printf_uint 
  to:main::@86
main::@86: scope:[main]  from main::@85
  [180] phi()
  [181] call cputs 
  to:main::@87
main::@87: scope:[main]  from main::@86
  [182] phi()
  [183] call printf_uint 
  to:main::@88
main::@88: scope:[main]  from main::@87
  [184] phi()
  [185] call cputs 
  to:main::@89
main::@89: scope:[main]  from main::@88
  [186] phi()
  [187] call printf_uint 
  to:main::@90
main::@90: scope:[main]  from main::@89
  [188] phi()
  [189] call cputs 
  to:main::@return
main::@return: scope:[main]  from main::@90
  [190] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main
  [191] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [192] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [192] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [192] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [193] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [194] conio_cursor_x = 0
  [195] conio_cursor_y = 0
  [196] conio_line_text = DEFAULT_SCREEN
  [197] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [198] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [199] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [200] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [201] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [202] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [203] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [204] clrscr::line_text#5[clrscr::c#2] = ' '
  [205] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [206] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

void cputc(byte cputc::c)
cputc: scope:[cputc]  from cputs::@2 main::@1 main::@11 main::@21 main::@31 main::@41 main::@51 main::@61 main::@71 main::@81 printf_number_buffer::@9 printf_padding::@2
  [207] cputc::c#12 = phi( cputs::@2/cputc::c#0, main::@1/'%', main::@11/'%', main::@21/'%', main::@31/'%', main::@41/'%', main::@51/'%', main::@61/'%', main::@71/'%', main::@81/'%', printf_number_buffer::@9/cputc::c#2, printf_padding::@2/cputc::c#1 )
  [208] if(cputc::c#12=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [209] conio_line_text[conio_cursor_x] = cputc::c#12
  [210] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [211] conio_cursor_x = ++ conio_cursor_x
  [212] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [213] phi()
  [214] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [215] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [216] phi()
  [217] call cputln 
  to:cputc::@return

void cputs(to_nomodify byte* cputs::s)
cputs: scope:[cputs]  from main::@10 main::@12 main::@14 main::@16 main::@18 main::@2 main::@20 main::@22 main::@24 main::@26 main::@28 main::@30 main::@32 main::@34 main::@36 main::@38 main::@4 main::@40 main::@42 main::@44 main::@46 main::@48 main::@50 main::@52 main::@54 main::@56 main::@58 main::@6 main::@60 main::@62 main::@64 main::@66 main::@68 main::@70 main::@72 main::@74 main::@76 main::@78 main::@8 main::@80 main::@82 main::@84 main::@86 main::@88 main::@90 printf_number_buffer::@5 printf_string::@2
  [218] cputs::s#49 = phi( main::@10/main::s4, main::@12/main::s5, main::@14/main::s1, main::@16/main::s1, main::@18/main::s1, main::@2/main::s, main::@20/main::s4, main::@22/main::s10, main::@24/main::s1, main::@26/main::s1, main::@28/main::s1, main::@30/main::s4, main::@32/main::s15, main::@34/main::s1, main::@36/main::s1, main::@38/main::s1, main::@4/main::s1, main::@40/main::s4, main::@42/main::s20, main::@44/main::s1, main::@46/main::s1, main::@48/main::s1, main::@50/main::s4, main::@52/main::s25, main::@54/main::s1, main::@56/main::s1, main::@58/main::s1, main::@6/main::s1, main::@60/main::s4, main::@62/main::s30, main::@64/main::s1, main::@66/main::s1, main::@68/main::s1, main::@70/main::s4, main::@72/main::s35, main::@74/main::s1, main::@76/main::s1, main::@78/main::s1, main::@8/main::s1, main::@80/main::s4, main::@82/main::s40, main::@84/main::s1, main::@86/main::s1, main::@88/main::s1, main::@90/main::s4, printf_number_buffer::@5/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, printf_string::@2/cputs::s#2 )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [219] cputs::s#48 = phi( cputs/cputs::s#49, cputs::@2/cputs::s#0 )
  [220] cputs::c#1 = *cputs::s#48
  [221] cputs::s#0 = ++ cputs::s#48
  [222] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [223] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [224] cputc::c#0 = cputs::c#1
  [225] call cputc 
  to:cputs::@1

void printf_string(byte* printf_string::str , byte printf_string::format_min_length , byte printf_string::format_justify_left)
printf_string: scope:[printf_string]  from main::@13 main::@15 main::@17 main::@19 main::@3 main::@5 main::@7 main::@9
  [226] printf_string::str#10 = phi( main::@13/main::str, main::@15/main::str1, main::@17/main::str2, main::@19/main::str3, main::@3/main::str, main::@5/main::str1, main::@7/main::str2, main::@9/main::str3 )
  [226] printf_string::format_justify_left#10 = phi( main::@13/1, main::@15/1, main::@17/1, main::@19/1, main::@3/0, main::@5/0, main::@7/0, main::@9/0 )
  to:printf_string::@3
printf_string::@3: scope:[printf_string]  from printf_string
  [227] strlen::str#2 = printf_string::str#10
  [228] call strlen 
  [229] strlen::return#3 = strlen::len#2
  to:printf_string::@6
printf_string::@6: scope:[printf_string]  from printf_string::@3
  [230] printf_string::$9 = strlen::return#3
  [231] printf_string::len#0 = (signed byte)printf_string::$9
  [232] printf_string::padding#1 = 3 - printf_string::len#0
  [233] if(printf_string::padding#1>=0) goto printf_string::@10
  to:printf_string::@1
printf_string::@10: scope:[printf_string]  from printf_string::@6
  [234] phi()
  to:printf_string::@1
printf_string::@1: scope:[printf_string]  from printf_string::@10 printf_string::@6
  [235] printf_string::padding#3 = phi( printf_string::@6/0, printf_string::@10/printf_string::padding#1 )
  [236] if(0!=printf_string::format_justify_left#10) goto printf_string::@2
  to:printf_string::@8
printf_string::@8: scope:[printf_string]  from printf_string::@1
  [237] if(0!=printf_string::padding#3) goto printf_string::@4
  to:printf_string::@2
printf_string::@4: scope:[printf_string]  from printf_string::@8
  [238] printf_padding::length#3 = (byte)printf_string::padding#3
  [239] call printf_padding 
  to:printf_string::@2
printf_string::@2: scope:[printf_string]  from printf_string::@1 printf_string::@4 printf_string::@8
  [240] cputs::s#2 = printf_string::str#10
  [241] call cputs 
  to:printf_string::@7
printf_string::@7: scope:[printf_string]  from printf_string::@2
  [242] if(0==printf_string::format_justify_left#10) goto printf_string::@return
  to:printf_string::@9
printf_string::@9: scope:[printf_string]  from printf_string::@7
  [243] if(0!=printf_string::padding#3) goto printf_string::@5
  to:printf_string::@return
printf_string::@5: scope:[printf_string]  from printf_string::@9
  [244] printf_padding::length#4 = (byte)printf_string::padding#3
  [245] call printf_padding 
  to:printf_string::@return
printf_string::@return: scope:[printf_string]  from printf_string::@5 printf_string::@7 printf_string::@9
  [246] return 
  to:@return

void printf_sint(signed word printf_sint::value , byte printf_sint::format_min_length , byte printf_sint::format_justify_left , byte printf_sint::format_sign_always , byte printf_sint::format_zero_padding , byte printf_sint::format_upper_case , byte printf_sint::format_radix)
printf_sint: scope:[printf_sint]  from main::@23 main::@25 main::@27 main::@29 main::@33 main::@35 main::@37 main::@39 main::@43 main::@45 main::@47 main::@49 main::@53 main::@55 main::@57 main::@59
  [247] printf_sint::format_zero_padding#16 = phi( main::@23/0, main::@25/0, main::@27/0, main::@29/0, main::@33/0, main::@35/0, main::@37/0, main::@39/0, main::@43/0, main::@45/0, main::@47/0, main::@49/0, main::@53/1, main::@55/1, main::@57/1, main::@59/0 )
  [247] printf_sint::format_justify_left#16 = phi( main::@23/0, main::@25/0, main::@27/0, main::@29/0, main::@33/1, main::@35/1, main::@37/1, main::@39/1, main::@43/0, main::@45/0, main::@47/0, main::@49/0, main::@53/0, main::@55/0, main::@57/0, main::@59/0 )
  [247] printf_sint::format_sign_always#16 = phi( main::@23/0, main::@25/0, main::@27/0, main::@29/0, main::@33/0, main::@35/0, main::@37/0, main::@39/0, main::@43/1, main::@45/1, main::@47/1, main::@49/1, main::@53/0, main::@55/0, main::@57/0, main::@59/0 )
  [247] printf_sint::value#17 = phi( main::@23/1, main::@25/$b, main::@27/$6f, main::@29/$457, main::@33/-2, main::@35/-$16, main::@37/-$de, main::@39/-$8ae, main::@43/3, main::@45/-$2c, main::@47/$22b, main::@49/-$1a0a, main::@53/1, main::@55/$b, main::@57/$6f, main::@59/$457 )
  [248] *((byte*)&printf_buffer) = 0
  [249] if(printf_sint::value#17<0) goto printf_sint::@1
  to:printf_sint::@3
printf_sint::@3: scope:[printf_sint]  from printf_sint
  [250] if(0==printf_sint::format_sign_always#16) goto printf_sint::@2
  to:printf_sint::@4
printf_sint::@4: scope:[printf_sint]  from printf_sint::@3
  [251] *((byte*)&printf_buffer) = '+'
  to:printf_sint::@2
printf_sint::@2: scope:[printf_sint]  from printf_sint::@1 printf_sint::@3 printf_sint::@4
  [252] printf_sint::value#19 = phi( printf_sint::@1/printf_sint::value#0, printf_sint::@3/printf_sint::value#17, printf_sint::@4/printf_sint::value#17 )
  [253] utoa::value#1 = (word)printf_sint::value#19
  [254] call utoa 
  to:printf_sint::@5
printf_sint::@5: scope:[printf_sint]  from printf_sint::@2
  [255] printf_number_buffer::buffer_sign#0 = *((byte*)&printf_buffer)
  [256] printf_number_buffer::format_justify_left#0 = printf_sint::format_justify_left#16
  [257] printf_number_buffer::format_zero_padding#0 = printf_sint::format_zero_padding#16
  [258] call printf_number_buffer 
  to:printf_sint::@return
printf_sint::@return: scope:[printf_sint]  from printf_sint::@5
  [259] return 
  to:@return
printf_sint::@1: scope:[printf_sint]  from printf_sint
  [260] printf_sint::value#0 = - printf_sint::value#17
  [261] *((byte*)&printf_buffer) = '-'
  to:printf_sint::@2

void printf_uint(word printf_uint::uvalue , byte printf_uint::format_min_length , byte printf_uint::format_justify_left , byte printf_uint::format_sign_always , byte printf_uint::format_zero_padding , byte printf_uint::format_upper_case , byte printf_uint::format_radix)
printf_uint: scope:[printf_uint]  from main::@63 main::@65 main::@67 main::@69 main::@73 main::@75 main::@77 main::@79 main::@83 main::@85 main::@87 main::@89
  [262] printf_uint::format_upper_case#12 = phi( main::@63/0, main::@65/0, main::@67/0, main::@69/0, main::@73/0, main::@75/0, main::@77/0, main::@79/0, main::@83/1, main::@85/1, main::@87/1, main::@89/1 )
  [262] printf_uint::format_radix#12 = phi( main::@63/OCTAL, main::@65/OCTAL, main::@67/OCTAL, main::@69/OCTAL, main::@73/HEXADECIMAL, main::@75/HEXADECIMAL, main::@77/HEXADECIMAL, main::@79/HEXADECIMAL, main::@83/HEXADECIMAL, main::@85/HEXADECIMAL, main::@87/HEXADECIMAL, main::@89/HEXADECIMAL )
  [262] printf_uint::uvalue#12 = phi( main::@63/1, main::@65/$b, main::@67/$6f, main::@69/$457, main::@73/1, main::@75/$b, main::@77/$6f, main::@79/$457, main::@83/1, main::@85/$b, main::@87/$6f, main::@89/$457 )
  to:printf_uint::@1
printf_uint::@1: scope:[printf_uint]  from printf_uint
  [263] *((byte*)&printf_buffer) = 0
  [264] utoa::value#2 = printf_uint::uvalue#12
  [265] utoa::radix#1 = printf_uint::format_radix#12
  [266] call utoa 
  to:printf_uint::@2
printf_uint::@2: scope:[printf_uint]  from printf_uint::@1
  [267] printf_number_buffer::buffer_sign#1 = *((byte*)&printf_buffer)
  [268] printf_number_buffer::format_upper_case#1 = printf_uint::format_upper_case#12
  [269] call printf_number_buffer 
  to:printf_uint::@return
printf_uint::@return: scope:[printf_uint]  from printf_uint::@2
  [270] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [271] conio_line_text = conio_line_text + $28
  [272] conio_line_color = conio_line_color + $28
  [273] conio_cursor_x = 0
  [274] conio_cursor_y = ++ conio_cursor_y
  [275] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [276] return 
  to:@return

word strlen(byte* strlen::str)
strlen: scope:[strlen]  from printf_number_buffer::@6 printf_string::@3
  [277] strlen::str#5 = phi( printf_number_buffer::@6/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, printf_string::@3/strlen::str#2 )
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [278] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [278] strlen::str#3 = phi( strlen/strlen::str#5, strlen::@2/strlen::str#0 )
  [279] if(0!=*strlen::str#3) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [280] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [281] strlen::len#1 = ++ strlen::len#2
  [282] strlen::str#0 = ++ strlen::str#3
  to:strlen::@1

void printf_padding(byte printf_padding::pad , byte printf_padding::length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@10 printf_number_buffer::@12 printf_number_buffer::@8 printf_string::@4 printf_string::@5
  [283] printf_padding::pad#7 = phi( printf_number_buffer::@10/'0', printf_number_buffer::@12/' ', printf_number_buffer::@8/' ', printf_string::@4/' ', printf_string::@5/' ' )
  [283] printf_padding::length#6 = phi( printf_number_buffer::@10/printf_padding::length#1, printf_number_buffer::@12/printf_padding::length#2, printf_number_buffer::@8/printf_padding::length#0, printf_string::@4/printf_padding::length#3, printf_string::@5/printf_padding::length#4 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [284] printf_padding::i#2 = phi( printf_padding/0, printf_padding::@3/printf_padding::i#1 )
  [285] if(printf_padding::i#2<printf_padding::length#6) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [286] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [287] cputc::c#1 = printf_padding::pad#7
  [288] call cputc 
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [289] printf_padding::i#1 = ++ printf_padding::i#2
  to:printf_padding::@1

void utoa(word utoa::value , byte* utoa::buffer , byte utoa::radix)
utoa: scope:[utoa]  from printf_sint::@2 printf_uint::@1
  [290] utoa::value#10 = phi( printf_sint::@2/utoa::value#1, printf_uint::@1/utoa::value#2 )
  [290] utoa::radix#2 = phi( printf_sint::@2/DECIMAL, printf_uint::@1/utoa::radix#1 )
  [291] if(utoa::radix#2==DECIMAL) goto utoa::@1
  to:utoa::@2
utoa::@2: scope:[utoa]  from utoa
  [292] if(utoa::radix#2==HEXADECIMAL) goto utoa::@1
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@2
  [293] if(utoa::radix#2==OCTAL) goto utoa::@1
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@3
  [294] if(utoa::radix#2==BINARY) goto utoa::@1
  to:utoa::@5
utoa::@5: scope:[utoa]  from utoa::@4
  [295] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS) = 'e'
  [296] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+1) = 'r'
  [297] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+2) = 'r'
  [298] *((byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS+3) = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@5 utoa::@8
  [299] return 
  to:@return
utoa::@1: scope:[utoa]  from utoa utoa::@2 utoa::@3 utoa::@4
  [300] utoa::digit_values#8 = phi( utoa/RADIX_DECIMAL_VALUES, utoa::@2/RADIX_HEXADECIMAL_VALUES, utoa::@3/RADIX_OCTAL_VALUES, utoa::@4/RADIX_BINARY_VALUES )
  [300] utoa::max_digits#7 = phi( utoa/5, utoa::@2/4, utoa::@3/6, utoa::@4/$10 )
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@1 utoa::@9
  [301] utoa::buffer#10 = phi( utoa::@9/utoa::buffer#15, utoa::@1/(byte*)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [301] utoa::started#2 = phi( utoa::@9/utoa::started#4, utoa::@1/0 )
  [301] utoa::value#3 = phi( utoa::@9/utoa::value#7, utoa::@1/utoa::value#10 )
  [301] utoa::digit#2 = phi( utoa::@9/utoa::digit#1, utoa::@1/0 )
  [302] utoa::$4 = utoa::max_digits#7 - 1
  [303] if(utoa::digit#2<utoa::$4) goto utoa::@7
  to:utoa::@8
utoa::@8: scope:[utoa]  from utoa::@6
  [304] utoa::$11 = (byte)utoa::value#3
  [305] *utoa::buffer#10 = DIGITS[utoa::$11]
  [306] utoa::buffer#3 = ++ utoa::buffer#10
  [307] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@7: scope:[utoa]  from utoa::@6
  [308] utoa::$10 = utoa::digit#2 << 1
  [309] utoa::digit_value#0 = utoa::digit_values#8[utoa::$10]
  [310] if(0!=utoa::started#2) goto utoa::@10
  to:utoa::@12
utoa::@12: scope:[utoa]  from utoa::@7
  [311] if(utoa::value#3>=utoa::digit_value#0) goto utoa::@10
  to:utoa::@9
utoa::@9: scope:[utoa]  from utoa::@11 utoa::@12
  [312] utoa::buffer#15 = phi( utoa::@12/utoa::buffer#10, utoa::@11/utoa::buffer#4 )
  [312] utoa::started#4 = phi( utoa::@12/utoa::started#2, utoa::@11/1 )
  [312] utoa::value#7 = phi( utoa::@12/utoa::value#3, utoa::@11/utoa::value#0 )
  [313] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@6
utoa::@10: scope:[utoa]  from utoa::@12 utoa::@7
  [314] utoa_append::buffer#0 = utoa::buffer#10
  [315] utoa_append::value#0 = utoa::value#3
  [316] utoa_append::sub#0 = utoa::digit_value#0
  [317] call utoa_append 
  [318] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@11
utoa::@11: scope:[utoa]  from utoa::@10
  [319] utoa::value#0 = utoa_append::return#0
  [320] utoa::buffer#4 = ++ utoa::buffer#10
  to:utoa::@9

void printf_number_buffer(byte printf_number_buffer::buffer_sign , byte* printf_number_buffer::buffer_digits , byte printf_number_buffer::format_min_length , byte printf_number_buffer::format_justify_left , byte printf_number_buffer::format_sign_always , byte printf_number_buffer::format_zero_padding , byte printf_number_buffer::format_upper_case , byte printf_number_buffer::format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_sint::@5 printf_uint::@2
  [321] printf_number_buffer::format_upper_case#10 = phi( printf_sint::@5/0, printf_uint::@2/printf_number_buffer::format_upper_case#1 )
  [321] printf_number_buffer::buffer_sign#10 = phi( printf_sint::@5/printf_number_buffer::buffer_sign#0, printf_uint::@2/printf_number_buffer::buffer_sign#1 )
  [321] printf_number_buffer::format_zero_padding#10 = phi( printf_sint::@5/printf_number_buffer::format_zero_padding#0, printf_uint::@2/0 )
  [321] printf_number_buffer::format_justify_left#10 = phi( printf_sint::@5/printf_number_buffer::format_justify_left#0, printf_uint::@2/0 )
  [321] printf_number_buffer::format_min_length#2 = phi( printf_sint::@5/3, printf_uint::@2/0 )
  [322] if(0==printf_number_buffer::format_min_length#2) goto printf_number_buffer::@1
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer
  [323] phi()
  [324] call strlen 
  [325] strlen::return#2 = strlen::len#2
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@6
  [326] printf_number_buffer::$19 = strlen::return#2
  [327] printf_number_buffer::len#0 = (signed byte)printf_number_buffer::$19
  [328] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@13
  to:printf_number_buffer::@7
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [329] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@7
  [330] printf_number_buffer::len#2 = phi( printf_number_buffer::@14/printf_number_buffer::len#0, printf_number_buffer::@7/printf_number_buffer::len#1 )
  [331] printf_number_buffer::padding#1 = (signed byte)printf_number_buffer::format_min_length#2 - printf_number_buffer::len#2
  [332] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@21
  to:printf_number_buffer::@1
printf_number_buffer::@21: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [333] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@13 printf_number_buffer::@21
  [334] printf_number_buffer::padding#10 = phi( printf_number_buffer/0, printf_number_buffer::@21/printf_number_buffer::padding#1, printf_number_buffer::@13/0 )
  [335] if(0!=printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@17
printf_number_buffer::@17: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [336] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@16
printf_number_buffer::@16: scope:[printf_number_buffer]  from printf_number_buffer::@17
  [337] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@8
  to:printf_number_buffer::@2
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@16
  [338] printf_padding::length#0 = (byte)printf_number_buffer::padding#10
  [339] call printf_padding 
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@1 printf_number_buffer::@16 printf_number_buffer::@17 printf_number_buffer::@8
  [340] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@9
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [341] cputc::c#2 = printf_number_buffer::buffer_sign#10
  [342] call cputc 
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@9
  [343] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@18
printf_number_buffer::@18: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [344] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@4
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@18
  [345] printf_padding::length#1 = (byte)printf_number_buffer::padding#10
  [346] call printf_padding 
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@10 printf_number_buffer::@18 printf_number_buffer::@3
  [347] if(0==printf_number_buffer::format_upper_case#10) goto printf_number_buffer::@5
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [348] phi()
  [349] call strupr 
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@4
  [350] phi()
  [351] call cputs 
  to:printf_number_buffer::@15
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [352] if(0==printf_number_buffer::format_justify_left#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@20
printf_number_buffer::@20: scope:[printf_number_buffer]  from printf_number_buffer::@15
  [353] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@return
  to:printf_number_buffer::@19
printf_number_buffer::@19: scope:[printf_number_buffer]  from printf_number_buffer::@20
  [354] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@12
  to:printf_number_buffer::@return
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@19
  [355] printf_padding::length#2 = (byte)printf_number_buffer::padding#10
  [356] call printf_padding 
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@15 printf_number_buffer::@19 printf_number_buffer::@20
  [357] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [358] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [359] phi()
  [360] call memcpy 
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [361] phi()
  [362] call memcpy 
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [363] phi()
  [364] call memset 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [365] phi()
  [366] call memset 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [367] conio_line_text = conio_line_text - $28
  [368] conio_line_color = conio_line_color - $28
  [369] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [370] return 
  to:@return

word utoa_append(byte* utoa_append::buffer , word utoa_append::value , word utoa_append::sub)
utoa_append: scope:[utoa_append]  from utoa::@10
  [371] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [372] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [372] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [373] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [374] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [375] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [376] utoa_append::digit#1 = ++ utoa_append::digit#2
  [377] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

byte* strupr(byte* strupr::str)
strupr: scope:[strupr]  from printf_number_buffer::@11
  [378] phi()
  to:strupr::@1
strupr::@1: scope:[strupr]  from strupr strupr::@3
  [379] strupr::src#2 = phi( strupr/strupr::str#0, strupr::@3/strupr::src#1 )
  [380] if(0!=*strupr::src#2) goto strupr::@2
  to:strupr::@return
strupr::@return: scope:[strupr]  from strupr::@1
  [381] return 
  to:@return
strupr::@2: scope:[strupr]  from strupr::@1
  [382] toupper::ch#0 = *strupr::src#2
  [383] call toupper 
  [384] toupper::return#3 = toupper::return#2
  to:strupr::@3
strupr::@3: scope:[strupr]  from strupr::@2
  [385] strupr::$0 = toupper::return#3
  [386] *strupr::src#2 = strupr::$0
  [387] strupr::src#1 = ++ strupr::src#2
  to:strupr::@1

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [388] memcpy::destination#2 = phi( cscroll::@1/(void*)DEFAULT_SCREEN, cscroll::@2/(void*)COLORRAM )
  [388] memcpy::source#2 = phi( cscroll::@1/(void*)DEFAULT_SCREEN+$28, cscroll::@2/(void*)COLORRAM+$28 )
  [389] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28
  [390] memcpy::src#4 = (byte*)memcpy::source#2
  [391] memcpy::dst#4 = (byte*)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [392] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [392] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [393] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [394] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [395] *memcpy::dst#2 = *memcpy::src#2
  [396] memcpy::dst#1 = ++ memcpy::dst#2
  [397] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [398] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [398] memset::str#3 = phi( cscroll::@3/(void*)DEFAULT_SCREEN+(word)$19*$28-$28, cscroll::@4/(void*)COLORRAM+(word)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [399] memset::end#0 = (byte*)memset::str#3 + $28
  [400] memset::dst#4 = (byte*)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [401] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [402] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [403] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [404] *memset::dst#2 = memset::c#4
  [405] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

byte toupper(byte toupper::ch)
toupper: scope:[toupper]  from strupr::@2
  [406] if(toupper::ch#0<'a') goto toupper::@return
  to:toupper::@2
toupper::@2: scope:[toupper]  from toupper
  [407] if(toupper::ch#0<='z') goto toupper::@1
  to:toupper::@return
toupper::@1: scope:[toupper]  from toupper::@2
  [408] toupper::return#0 = toupper::ch#0 + 'A'-'a'
  to:toupper::@return
toupper::@return: scope:[toupper]  from toupper toupper::@1 toupper::@2
  [409] toupper::return#2 = phi( toupper::@1/toupper::return#0, toupper/toupper::ch#0, toupper::@2/toupper::ch#0 )
  [410] return 
  to:@return
